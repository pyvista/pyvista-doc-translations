
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/02-plot/isovalue.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_02-plot_isovalue.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_02-plot_isovalue.py:


.. _moving_isovalue_example:

Moving Isovalue
~~~~~~~~~~~~~~~

Make an animation of an isovalue through a volumetric dataset

.. GENERATED FROM PYTHON SOURCE LINES 9-17

.. code-block:: default

    import numpy as np

    import pyvista as pv
    from pyvista import examples

    vol = examples.download_brain()
    vol






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>
    <table>
    <tr><th>UniformGrid</th><th>Information</th></tr>
    <tr><td>N Cells</td><td>6998400</td></tr>
    <tr><td>N Points</td><td>7109137</td></tr>
    <tr><td>X Bounds</td><td>0.000e+00, 1.800e+02</td></tr>
    <tr><td>Y Bounds</td><td>0.000e+00, 2.160e+02</td></tr>
    <tr><td>Z Bounds</td><td>0.000e+00, 1.800e+02</td></tr>
    <tr><td>Dimensions</td><td>181, 217, 181</td></tr>
    <tr><td>Spacing</td><td>1.000e+00, 1.000e+00, 1.000e+00</td></tr>
    <tr><td>N Arrays</td><td>1</td></tr>
    </table>

    </td><td>
    <table>
    <tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>
    <tr><td><b>image_data</b></td><td>Points</td><td>uint8</td><td>1</td><td>0.000e+00</td><td>2.550e+02</td></tr>
    </table>

    </td></tr> </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 18-19

Now lets make an array of all of the isovalues for which we want to show.

.. GENERATED FROM PYTHON SOURCE LINES 19-21

.. code-block:: default

    values = np.linspace(5, 150, num=25)








.. GENERATED FROM PYTHON SOURCE LINES 22-23

Now let's create an initial isosurface that we can plot and move

.. GENERATED FROM PYTHON SOURCE LINES 23-25

.. code-block:: default

    surface = vol.contour([values[0]],)








.. GENERATED FROM PYTHON SOURCE LINES 26-27

Precompute the surfaces

.. GENERATED FROM PYTHON SOURCE LINES 27-29

.. code-block:: default

    surfaces = [vol.contour([v]) for v in values]








.. GENERATED FROM PYTHON SOURCE LINES 30-31

Set a single surface as the one being plotted that can be overwritten

.. GENERATED FROM PYTHON SOURCE LINES 31-33

.. code-block:: default

    surface = surfaces[0].copy()








.. GENERATED FROM PYTHON SOURCE LINES 34-71

.. code-block:: default


    filename = "isovalue.gif"

    plotter = pv.Plotter(off_screen=True)
    # Open a movie file
    plotter.open_gif(filename)

    # Add initial mesh
    plotter.add_mesh(
        surface,
        opacity=0.5,
        clim=vol.get_data_range(),
        show_scalar_bar=False,
    )
    # Add outline for reference
    plotter.add_mesh(vol.outline_corners(), color='k')

    print('Orient the view, then press "q" to close window and produce movie')
    plotter.camera_position = [
        (392.9783280407326, 556.4341372317185, 235.51220650196404),
        (88.69563012828344, 119.06774369173661, 72.61750326143748),
        (-0.19275936948097383, -0.2218876327549124, 0.9558293278131397)]

    # initial render and do NOT close
    plotter.show(auto_close=False)

    # Run through each frame
    for surf in surfaces:
        surface.overwrite(surf)
        plotter.write_frame()  # Write this frame
    # Run through backwards
    for surf in surfaces[::-1]:
        surface.overwrite(surf)
        plotter.write_frame()  # Write this frame

    # Be sure to close the plotter when finished
    plotter.close()



.. image-sg:: /examples/02-plot/images/sphx_glr_isovalue_001.png
   :alt: isovalue
   :srcset: /examples/02-plot/images/sphx_glr_isovalue_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Orient the view, then press "q" to close window and produce movie





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  45.407 seconds)


.. _sphx_glr_download_examples_02-plot_isovalue.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: isovalue.py <isovalue.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: isovalue.ipynb <isovalue.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

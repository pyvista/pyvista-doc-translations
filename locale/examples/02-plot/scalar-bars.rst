
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/02-plot/scalar-bars.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_02-plot_scalar-bars.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_02-plot_scalar-bars.py:


.. _scalar_bar_example:

Customize Scalar Bars
~~~~~~~~~~~~~~~~~~~~~

Walk through of all the different capabilities of scalar bars and
how a user can customize scalar bars.

.. GENERATED FROM PYTHON SOURCE LINES 11-15

.. code-block:: default


    import pyvista as pv
    from pyvista import examples








.. GENERATED FROM PYTHON SOURCE LINES 17-22

By default, when plotting a dataset with a scalar array, a scalar bar for that
array is added. To turn off this behavior, a user could specify
``show_scalar_bar=False`` when calling ``.add_mesh()``. Let's start with a
sample dataset provide via PyVista to demonstrate the default behavior of
scalar bar plotting:

.. GENERATED FROM PYTHON SOURCE LINES 22-33

.. code-block:: default


    # Load St Helens DEM and warp the topography
    mesh = examples.download_st_helens().warp_by_scalar()

    # First a default plot with jet colormap
    p = pv.Plotter()
    # Add the data, use active scalar for coloring, and show the scalar bar
    p.add_mesh(mesh)
    # Display the scene
    p.show()




.. image-sg:: /examples/02-plot/images/sphx_glr_scalar-bars_001.png
   :alt: scalar bars
   :srcset: /examples/02-plot/images/sphx_glr_scalar-bars_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 34-39

We could also plot the scene with an interactive scalar bar to move around
and place where we like by specifying passing keyword arguments to control
the scalar bar via the ``scalar_bar_args`` parameter in
:func:`pyvista.BasePlotter.add_mesh`. The keyword arguments to control the
scalar bar are defined in :func:`pyvista.BasePlotter.add_scalar_bar`.

.. GENERATED FROM PYTHON SOURCE LINES 39-50

.. code-block:: default


    # create dictionary of parameters to control scalar bar
    sargs = dict(interactive=True)  # Simply make the bar interactive

    p = pv.Plotter(notebook=False)  # If in IPython, be sure to show the scene
    p.add_mesh(mesh, scalar_bar_args=sargs)
    p.show()
    # Remove from plotters so output is not produced in docs
    pv.plotting._ALL_PLOTTERS.clear()









.. GENERATED FROM PYTHON SOURCE LINES 51-54

.. figure:: ../../images/gifs/scalar-bar-interactive.gif

Or manually define the scalar bar's location:

.. GENERATED FROM PYTHON SOURCE LINES 54-62

.. code-block:: default


    # Set a custom position and size
    sargs = dict(height=0.25, vertical=True, position_x=0.05, position_y=0.05)

    p = pv.Plotter()
    p.add_mesh(mesh, scalar_bar_args=sargs)
    p.show()




.. image-sg:: /examples/02-plot/images/sphx_glr_scalar-bars_002.png
   :alt: scalar bars
   :srcset: /examples/02-plot/images/sphx_glr_scalar-bars_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 63-64

The text properties of the scalar bar can also be controlled:

.. GENERATED FROM PYTHON SOURCE LINES 64-81

.. code-block:: default


    # Controlling the text properties
    sargs = dict(
        title_font_size=20,
        label_font_size=16,
        shadow=True,
        n_labels=3,
        italic=True,
        fmt="%.1f",
        font_family="arial",
    )

    p = pv.Plotter()
    p.add_mesh(mesh, scalar_bar_args=sargs)
    p.show()





.. image-sg:: /examples/02-plot/images/sphx_glr_scalar-bars_003.png
   :alt: scalar bars
   :srcset: /examples/02-plot/images/sphx_glr_scalar-bars_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 82-83

Labelling values outside of the scalar range

.. GENERATED FROM PYTHON SOURCE LINES 83-88

.. code-block:: default

    p = pv.Plotter()
    p.add_mesh(mesh, clim=[1000, 2000], below_color='blue', above_color='red', scalar_bar_args=sargs)
    p.show()





.. image-sg:: /examples/02-plot/images/sphx_glr_scalar-bars_004.png
   :alt: scalar bars
   :srcset: /examples/02-plot/images/sphx_glr_scalar-bars_004.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 89-91

Annotate values of interest using a dictionary. The key of the dictionary
must be the value to annotate, and the value must be the string label.

.. GENERATED FROM PYTHON SOURCE LINES 91-101

.. code-block:: default


    # Make a dictionary for the annotations
    annotations = {
        2300: "High",
        805.3: "Cutoff value",
    }

    p = pv.Plotter()
    p.add_mesh(mesh, scalars='Elevation', annotations=annotations)
    p.show()



.. image-sg:: /examples/02-plot/images/sphx_glr_scalar-bars_005.png
   :alt: scalar bars
   :srcset: /examples/02-plot/images/sphx_glr_scalar-bars_005.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  5.053 seconds)


.. _sphx_glr_download_examples_02-plot_scalar-bars.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: scalar-bars.py <scalar-bars.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: scalar-bars.ipynb <scalar-bars.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_


.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/02-plot/ortho-slices.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_02-plot_ortho-slices.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_02-plot_ortho-slices.py:


Orthogonal Slices
~~~~~~~~~~~~~~~~~

View three orthogonal slices from a mesh.

Use the :func:`pyvista.DataSetFilters.slice_orthogonal` filter to create these
slices simultaneously.

.. GENERATED FROM PYTHON SOURCE LINES 10-17

.. code-block:: default

    # sphinx_gallery_thumbnail_number = 2
    import pyvista as pv
    from pyvista import examples

    mesh = examples.download_embryo()
    mesh.bounds





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [0.0, 255.0, 0.0, 255.0, 0.0, 255.0]



.. GENERATED FROM PYTHON SOURCE LINES 18-20

Create three slices. Easily control their locations with the ``x``, ``y``,
and ``z`` arguments.

.. GENERATED FROM PYTHON SOURCE LINES 20-22

.. code-block:: default

    slices = mesh.slice_orthogonal(x=100, z=75)








.. GENERATED FROM PYTHON SOURCE LINES 23-34

.. code-block:: default

    cpos = [(540.9115516905358, -617.1912234499737, 180.5084853429126),
     (128.31920055083387, 126.4977720785509, 111.77682599082095),
     (-0.1065160140819035, 0.032750075477590124, 0.9937714884722322)]
    dargs = dict(cmap='gist_ncar_r')

    p = pv.Plotter()
    p.add_mesh(slices, **dargs)
    p.show_grid()
    p.show(cpos=cpos)





.. image:: /examples/02-plot/images/sphx_glr_ortho-slices_001.png
    :alt: ortho slices
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [(540.9115516905358, -617.1912234499737, 180.5084853429126),
     (128.31920055083387, 126.4977720785509, 111.77682599082095),
     (-0.1065160140819035, 0.032750075477590124, 0.9937714884722322)]



.. GENERATED FROM PYTHON SOURCE LINES 35-62

.. code-block:: default


    p = pv.Plotter(shape=(2,2))
    # XYZ - show 3D scene first
    p.subplot(1,1)
    p.add_mesh(slices, **dargs)
    p.show_grid()
    p.camera_position = cpos
    # XY
    p.subplot(0,0)
    p.add_mesh(slices, **dargs)
    p.show_grid()
    p.camera_position = 'xy'
    p.enable_parallel_projection()
    # ZY
    p.subplot(0,1)
    p.add_mesh(slices, **dargs)
    p.show_grid()
    p.camera_position = 'zy'
    p.enable_parallel_projection()
    # XZ
    p.subplot(1,0)
    p.add_mesh(slices, **dargs)
    p.show_grid()
    p.camera_position = 'xz'
    p.enable_parallel_projection()

    p.show()



.. image:: /examples/02-plot/images/sphx_glr_ortho-slices_002.png
    :alt: ortho slices
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [(127.5, -725.7466298125642, 127.5),
     (127.5, 127.5, 127.5),
     (0.0, 0.0, 1.0)]




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  5.204 seconds)


.. _sphx_glr_download_examples_02-plot_ortho-slices.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: ortho-slices.py <ortho-slices.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: ortho-slices.ipynb <ortho-slices.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

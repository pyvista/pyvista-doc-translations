
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/02-plot/mesh-picking.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_02-plot_mesh-picking.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_02-plot_mesh-picking.py:


.. _mesh_picking_example:

Picking Meshes
~~~~~~~~~~~~~~
This example demonstrates how to pick meshes using
:func:`enable_mesh_picking() <pyvista.Plotter.enable_mesh_picking>`.

.. GENERATED FROM PYTHON SOURCE LINES 10-13

.. code-block:: default


    import pyvista as pv








.. GENERATED FROM PYTHON SOURCE LINES 14-17

Pick either a cube or a sphere using "p"
++++++++++++++++++++++++++++++++++++++++


.. GENERATED FROM PYTHON SOURCE LINES 17-28

.. code-block:: default


    sphere = pv.Sphere(center=(1, 0, 0))
    cube = pv.Cube()

    pl = pv.Plotter()
    pl.add_mesh(sphere, color='r')
    pl.add_mesh(cube, color='b')
    pl.enable_mesh_picking()
    pl.show()





.. image-sg:: /examples/02-plot/images/sphx_glr_mesh-picking_001.png
   :alt: mesh picking
   :srcset: /examples/02-plot/images/sphx_glr_mesh-picking_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 29-32

Deform the mesh after picking
+++++++++++++++++++++++++++++
Pick to trigger a callback that "shrinks" the mesh each time it's selected.

.. GENERATED FROM PYTHON SOURCE LINES 32-47

.. code-block:: default



    def callback(mesh):
        """Shrink the mesh each time it's clicked."""
        shrunk = mesh.shrink(0.9)
        mesh.copy_from(shrunk)  # make operation "in-place" by replacing the original mesh


    pl = pv.Plotter()
    pl.add_mesh(sphere, color='r')
    pl.add_mesh(cube, color='b')
    pl.enable_mesh_picking(callback=callback, show=False)
    pl.show()





.. image-sg:: /examples/02-plot/images/sphx_glr_mesh-picking_002.png
   :alt: mesh picking
   :srcset: /examples/02-plot/images/sphx_glr_mesh-picking_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 48-51

Pick based on Actors
++++++++++++++++++++
Return the picked actor to the callback

.. GENERATED FROM PYTHON SOURCE LINES 51-74

.. code-block:: default


    pl = pv.Plotter()
    pl.add_mesh(pv.Cone(center=(0, 0, 0)), name='Cone')
    pl.add_mesh(pv.Cube(center=(1, 0, 0)), name='Cube')
    pl.add_mesh(pv.Sphere(center=(1, 1, 0)), name='Sphere')
    pl.add_mesh(pv.Cylinder(center=(0, 1, 0)), name='Cylinder')


    def reset():
        for a in pl.renderer.actors.values():
            if isinstance(a, pv.Actor):
                a.prop.color = 'tan'
                a.prop.show_edges = False


    def callback(actor):
        reset()
        actor.prop.color = 'green'
        actor.prop.show_edges = True


    pl.enable_mesh_picking(callback, use_actor=True, show=False)
    pl.show()



.. image-sg:: /examples/02-plot/images/sphx_glr_mesh-picking_003.png
   :alt: mesh picking
   :srcset: /examples/02-plot/images/sphx_glr_mesh-picking_003.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.835 seconds)


.. _sphx_glr_download_examples_02-plot_mesh-picking.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: mesh-picking.py <mesh-picking.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: mesh-picking.ipynb <mesh-picking.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

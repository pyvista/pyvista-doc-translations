
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/02-plot/depth-peeling.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_02-plot_depth-peeling.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_02-plot_depth-peeling.py:


.. _depth_peeling_example:

Depth Peeling
~~~~~~~~~~~~~
Depth peeling is a technique to correctly render translucent geometry.
This is not enabled by default in :attr:`pyvista.global_theme` as some
operating systems and versions of VTK have issues with this routine.

For this example, we will showcase the difference that depth peeling
provides.

.. GENERATED FROM PYTHON SOURCE LINES 14-18

.. code-block:: default

    # sphinx_gallery_thumbnail_number = 2
    import pyvista as pv
    from pyvista import examples








.. GENERATED FROM PYTHON SOURCE LINES 19-27

.. code-block:: default

    centers = [(0, 0, 0), (1, 0, 0), (-1, 0, 0),
               (0, 1, 0), (0, -1, 0)]
    radii = [1, 0.5, 0.5, 0.5, 0.5]

    spheres = pv.MultiBlock()
    for i, c in enumerate(centers):
        spheres.append(pv.Sphere(center=c, radius=radii[i]))








.. GENERATED FROM PYTHON SOURCE LINES 28-46

.. code-block:: default

    dargs = dict(opacity=0.5, color="red", smooth_shading=True)

    p = pv.Plotter(shape=(1, 2), multi_samples=8)

    p.add_mesh(spheres, **dargs)
    p.enable_depth_peeling(10)
    p.add_text("Depth Peeling")

    p.subplot(0, 1)
    p.add_text("Standard")
    p.add_mesh(spheres.copy(), **dargs)

    p.link_views()
    p.camera_position = [(11.7, 4.7, -4.33),
                         (0.0, 0.0, 0.0),
                         (0.3, 0.07, 0.9)]
    p.show()




.. image-sg:: /examples/02-plot/images/sphx_glr_depth-peeling_001.png
   :alt: depth peeling
   :srcset: /examples/02-plot/images/sphx_glr_depth-peeling_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 47-51

The following room surfaces example mesh, provided courtesy of
`Sam Potter <https://github.com/sampotter>`_ has coincident topology and
depth rendering helps correctly render those geometries when a global
opacity value is used.

.. GENERATED FROM PYTHON SOURCE LINES 51-72

.. code-block:: default


    room = examples.download_room_surface_mesh()

    p = pv.Plotter(shape=(1, 2))

    p.enable_depth_peeling(number_of_peels=4, occlusion_ratio=0)
    p.add_mesh(room, opacity=0.5, color="tan")
    p.add_text("Depth Peeling")

    p.subplot(0,1)
    p.add_text("Standard")
    p.add_mesh(room.copy(), opacity=0.5, color="tan")

    p.link_views()
    p.camera_position = [(43.6, 49.5, 19.8),
                         (0.0, 2.25, 0.0),
                         (-0.57, 0.70, -0.42)]

    p.show()





.. image-sg:: /examples/02-plot/images/sphx_glr_depth-peeling_002.png
   :alt: depth peeling
   :srcset: /examples/02-plot/images/sphx_glr_depth-peeling_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 73-75

And here is another example wheen rendering many translucent contour
surfaces.

.. GENERATED FROM PYTHON SOURCE LINES 75-94

.. code-block:: default


    mesh = examples.download_brain().contour(5)
    cmap = "viridis_r"

    p = pv.Plotter(shape=(1,2), multi_samples=4)

    p.add_mesh(mesh, opacity=0.5, cmap=cmap)
    p.enable_depth_peeling(10)
    p.add_text("Depth Peeling")

    p.subplot(0,1)
    p.add_text("Standard")
    p.add_mesh(mesh.copy(), opacity=0.5, cmap=cmap)

    p.link_views()
    p.camera_position = [(418.3, 659., 53.8),
                         (90.2, 111.5, 90.0),
                         (0.03, 0.05, 1.0)]
    p.show()



.. image-sg:: /examples/02-plot/images/sphx_glr_depth-peeling_003.png
   :alt: depth peeling
   :srcset: /examples/02-plot/images/sphx_glr_depth-peeling_003.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  13.252 seconds)


.. _sphx_glr_download_examples_02-plot_depth-peeling.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: depth-peeling.py <depth-peeling.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: depth-peeling.ipynb <depth-peeling.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

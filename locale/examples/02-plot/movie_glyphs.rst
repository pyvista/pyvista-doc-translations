
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/02-plot/movie_glyphs.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_02-plot_movie_glyphs.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_02-plot_movie_glyphs.py:


.. _movie_glyph_example:

Save a Movie Using Glyphs
~~~~~~~~~~~~~~~~~~~~~~~~~

Create an animated GIF by generating glyphs using :func:`glyph()
<pyvista.DataSet.glyph>` using :func:`pyvista.Sphere`.

.. GENERATED FROM PYTHON SOURCE LINES 11-16

.. code-block:: default


    import numpy as np

    import pyvista as pv








.. GENERATED FROM PYTHON SOURCE LINES 18-20

Create sphere glyphs
~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 20-37

.. code-block:: default


    x = np.arange(-10, 10, 1, dtype=float)
    y = np.arange(-10, 10, 1, dtype=float)
    x, y = np.meshgrid(x, y)
    r = np.sqrt(x**2 + y**2)
    z = (np.sin(r) + 1) / 2

    # Create and structured surface
    grid = pv.StructuredGrid(x, y, z)
    grid.point_data['size'] = z.ravel()

    # generate glyphs with varying size
    sphere = pv.Sphere()
    spheres = grid.glyph(scale='size', geom=sphere, orient=False)

    spheres.plot(show_scalar_bar=False)




.. image-sg:: /examples/02-plot/images/sphx_glr_movie_glyphs_001.png
   :alt: movie glyphs
   :srcset: /examples/02-plot/images/sphx_glr_movie_glyphs_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 38-40

Create the movie
~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 40-71

.. code-block:: default


    # Create a plotter object and set the scalars to the Z height
    plotter = pv.Plotter(notebook=False)
    plotter.add_mesh(
        spheres,
        show_edges=False,
        show_scalar_bar=False,
        clim=[0, 1],
        cmap='bwr',
    )

    # Open a gif
    plotter.open_gif("glyph_wave.gif")

    # Update Z and write a frame for each updated mesh
    nframe = 30
    for phase in np.linspace(0, 2 * np.pi, nframe + 1)[:nframe]:
        z = (np.sin(r + phase) + 1) / 2

        # regenerate spheres
        grid = pv.StructuredGrid(x, y, z)
        grid.point_data['size'] = z.ravel()
        new_spheres = grid.glyph(scale='size', geom=sphere, orient=False)

        spheres.copy_from(new_spheres)

        # Write a frame. This triggers a render.
        plotter.write_frame()

    # Close and finalize the gif
    plotter.close()



.. image-sg:: /examples/02-plot/images/sphx_glr_movie_glyphs_002.png
   :alt: movie glyphs
   :srcset: /examples/02-plot/images/sphx_glr_movie_glyphs_002.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  12.712 seconds)


.. _sphx_glr_download_examples_02-plot_movie_glyphs.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: movie_glyphs.py <movie_glyphs.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: movie_glyphs.ipynb <movie_glyphs.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

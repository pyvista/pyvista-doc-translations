
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/02-plot/composite-picking.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_02-plot_composite-picking.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_02-plot_composite-picking.py:


.. _composite_picking_example:

Composite Picking
~~~~~~~~~~~~~~~~~

Demonstrate how to pick individual blocks of a :class:`pyvista.MultiBlock`
using :func:`pyvista.Plotter.enable_block_picking`.

.. GENERATED FROM PYTHON SOURCE LINES 11-15

.. code-block:: default

    import numpy as np

    import pyvista as pv








.. GENERATED FROM PYTHON SOURCE LINES 16-19

Create a MultiBlock Dataset
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Create 100 superellipsoids using :func:`pyvista.ParametricSuperEllipsoid`

.. GENERATED FROM PYTHON SOURCE LINES 19-37

.. code-block:: default



    def make_poly():
        """Create a superellipsoid in a random location."""
        poly = pv.ParametricSuperEllipsoid(
            n1=np.random.random(),
            n2=np.random.random() * 2,
            u_res=50,
            v_res=50,
        )
        poly.points += np.random.random(3) * 20
        return poly


    # Assemble the multiblock and plot it using the default plotting settings
    blocks = pv.MultiBlock([make_poly() for _ in range(100)])
    blocks.plot()








.. tab-set::



   .. tab-item:: Static Scene



            
     .. image-sg:: /examples/02-plot/images/sphx_glr_composite-picking_001.png
        :alt: composite picking
        :srcset: /examples/02-plot/images/sphx_glr_composite-picking_001.png
        :class: sphx-glr-single-img
     


   .. tab-item:: Interactive Scene



       .. offlineviewer:: /home/runner/work/pyvista-doc-translations/pyvista-doc-translations/pyvista/doc/source/examples/02-plot/images/sphx_glr_composite-picking_001.vtksz






.. GENERATED FROM PYTHON SOURCE LINES 38-44

Enable Block Picking
~~~~~~~~~~~~~~~~~~~~
Add ``blocks`` to a :class:`pyvista.Plotter` and enable block picking.  For
fun, let's also enable physically based rendering and set the callback to set
the block color to red when the block is clicked and unset the color if the
color has already been set for the block.

.. GENERATED FROM PYTHON SOURCE LINES 44-61

.. code-block:: default



    pl = pv.Plotter()
    actor, mapper = pl.add_composite(blocks, color="w", pbr=True, metallic=True)


    def callback(index, *args):
        """Change a block to red if color is unset, and back to the actor color if set."""
        if mapper.block_attr[index].color is None:
            mapper.block_attr[index].color = "r"
        else:
            mapper.block_attr[index].color = None


    pl.enable_block_picking(callback, side="left")
    pl.background_color = "w"
    pl.show()




.. image-sg:: /examples/02-plot/images/sphx_glr_composite-picking_002.png
   :alt: composite picking
   :srcset: /examples/02-plot/images/sphx_glr_composite-picking_002.png
   :class: sphx-glr-single-img








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 2.258 seconds)


.. _sphx_glr_download_examples_02-plot_composite-picking.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: composite-picking.py <composite-picking.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: composite-picking.ipynb <composite-picking.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_


.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/02-plot/depth_of_field.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_02-plot_depth_of_field.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_02-plot_depth_of_field.py:


.. _depth_of_field_example:

Depth of Field Plotting
~~~~~~~~~~~~~~~~~~~~~~~

This example shows how you can use :func:`enable_depth_of_field
<pyvista.Plotter.enable_depth_of_field>` to highlight part of your plot.

.. GENERATED FROM PYTHON SOURCE LINES 11-18

.. code-block:: default



    import numpy as np

    import pyvista as pv
    from pyvista import examples








.. GENERATED FROM PYTHON SOURCE LINES 23-27

Generate a bunch of bunnies
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Create many bunnies using the :func:`glyph <pyvista.DataSetFilters.glyph>`
filter.

.. GENERATED FROM PYTHON SOURCE LINES 27-40

.. code-block:: default


    # download the stanford bunny and rotate it into a good position
    mesh = examples.download_bunny()
    mesh = mesh.rotate_x(90, inplace=False).rotate_z(90, inplace=False).scale(4, 4, 4)

    # We use a uniform grid here simply to create equidistantly spaced points for
    # our glyph filter
    grid = pv.ImageData(dimensions=(4, 3, 3), spacing=(3, 1, 1))

    bunnies = grid.glyph(geom=mesh, scale=False, orient=False)
    bunnies







.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    <table style='width: 100%;'>
    <tr><th>PolyData</th><th>Information</th></tr>
    <tr><td>N Cells</td><td>2500236</td></tr>
    <tr><td>N Points</td><td>1294092</td></tr>
    <tr><td>N Strips</td><td>0</td></tr>
    <tr><td>X Bounds</td><td>-2.475e-01, 9.235e+00</td></tr>
    <tr><td>Y Bounds</td><td>-3.788e-01, 2.244e+00</td></tr>
    <tr><td>Z Bounds</td><td>1.319e-01, 2.749e+00</td></tr>
    <tr><td>N Arrays</td><td>0</td></tr>
    </table>


    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 41-43

Show the plot without enabling depth of field
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 43-66

.. code-block:: default


    # convert points into rgba colors
    colors = bunnies.points - bunnies.bounds[::2]
    colors /= colors.max(axis=0)
    colors *= 255
    colors = colors.astype(np.uint8)

    # obtained camera position with `cpos = pl.show(return_cpos)`
    cpos = [(11.6159, -1.2803, 1.5338), (4.1354, 1.4796, 1.2711), (-0.0352, -0.0004, 1.0)]

    # Since we're using physically based rendering (PBR), let's also download a
    # skybox cubemap use it as an environment texture. For PBR to work well you
    # should have a environment texture.
    cubemap = examples.download_sky_box_cube_map()

    pl = pv.Plotter()
    pl.background_color = 'w'
    pl.add_mesh(bunnies, scalars=colors, rgb=True, pbr=True, metallic=0.85)
    pl.camera_position = cpos
    pl.set_environment_texture(cubemap)
    pl.show()









.. tab-set::



   .. tab-item:: Static Scene



            
     .. image-sg:: /examples/02-plot/images/sphx_glr_depth_of_field_001.png
        :alt: depth of field
        :srcset: /examples/02-plot/images/sphx_glr_depth_of_field_001.png
        :class: sphx-glr-single-img
     


   .. tab-item:: Interactive Scene



       .. offlineviewer:: /home/runner/work/pyvista-doc-translations/pyvista-doc-translations/pyvista/doc/source/examples/02-plot/images/sphx_glr_depth_of_field_001.vtksz






.. GENERATED FROM PYTHON SOURCE LINES 67-69

Show the plot while enabling depth of field
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 69-78

.. code-block:: default


    pl = pv.Plotter()
    pl.background_color = 'w'
    pl.add_mesh(bunnies, scalars=colors, rgb=True, pbr=True, metallic=0.85)
    pl.camera_position = cpos
    pl.enable_depth_of_field()
    pl.enable_anti_aliasing('ssaa')
    pl.set_environment_texture(cubemap)
    pl.show()







.. tab-set::



   .. tab-item:: Static Scene



            
     .. image-sg:: /examples/02-plot/images/sphx_glr_depth_of_field_002.png
        :alt: depth of field
        :srcset: /examples/02-plot/images/sphx_glr_depth_of_field_002.png
        :class: sphx-glr-single-img
     


   .. tab-item:: Interactive Scene



       .. offlineviewer:: /home/runner/work/pyvista-doc-translations/pyvista-doc-translations/pyvista/doc/source/examples/02-plot/images/sphx_glr_depth_of_field_002.vtksz







.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 9.921 seconds)


.. _sphx_glr_download_examples_02-plot_depth_of_field.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: depth_of_field.py <depth_of_field.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: depth_of_field.ipynb <depth_of_field.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

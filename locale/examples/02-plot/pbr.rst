
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/02-plot/pbr.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_02-plot_pbr.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_02-plot_pbr.py:


.. _pbr_example:

Physically Based Rendering
~~~~~~~~~~~~~~~~~~~~~~~~~~

VTK 9 introduced Physically Based Rendering (PBR) and we have exposed
that functionality in PyVista. Read the `blog about PBR
<https://blog.kitware.com/vtk-pbr/>`_ for more details.

PBR is only supported for :class:`pyvista.PolyData` and can be
triggered via the ``pbr`` keyword argument of ``add_mesh``. Also use
the ``metallic`` and ``roughness`` arguments for further control.

Let's show off this functionality by rendering a high quality mesh of
a statue as though it were metallic.

.. GENERATED FROM PYTHON SOURCE LINES 19-31

.. code-block:: default


    import pyvista as pv
    from pyvista import examples

    # Load the statue mesh
    mesh = examples.download_nefertiti()
    mesh.rotate_x(-90.0, inplace=True)  # rotate to orient with the skybox

    # Download skybox
    cubemap = examples.download_sky_box_cube_map()









.. GENERATED FROM PYTHON SOURCE LINES 32-34

Let's render the mesh with a base color of "linen" to give it a metal looking
finish.

.. GENERATED FROM PYTHON SOURCE LINES 34-45

.. code-block:: default

    p = pv.Plotter()
    p.add_actor(cubemap.to_skybox())
    p.set_environment_texture(cubemap)  # For reflecting the environment off the mesh
    p.add_mesh(mesh, color='linen', pbr=True, metallic=0.8, roughness=0.1, diffuse=1)

    # Define a nice camera perspective
    cpos = [(-313.40, 66.09, 1000.61), (0.0, 0.0, 0.0), (0.018, 0.99, -0.06)]

    p.show(cpos=cpos)





.. image-sg:: /examples/02-plot/images/sphx_glr_pbr_001.png
   :alt: pbr
   :srcset: /examples/02-plot/images/sphx_glr_pbr_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 46-50

Show the variation of the metallic and roughness parameters.

Plot with metallic increasing from left to right and roughness
increasing from bottom to top.

.. GENERATED FROM PYTHON SOURCE LINES 50-65

.. code-block:: default


    colors = ['red', 'teal', 'black', 'orange', 'silver']

    p = pv.Plotter()
    p.set_environment_texture(cubemap)

    for i in range(5):
        for j in range(6):
            sphere = pv.Sphere(radius=0.5, center=(0.0, 4 - i, j))
            p.add_mesh(sphere, color=colors[i], pbr=True, metallic=i / 4, roughness=j / 5)

    p.view_vector((-1, 0, 0), (0, 1, 0))
    p.show()





.. image-sg:: /examples/02-plot/images/sphx_glr_pbr_002.png
   :alt: pbr
   :srcset: /examples/02-plot/images/sphx_glr_pbr_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 66-67

Combine custom lighting and physically based rendering.

.. GENERATED FROM PYTHON SOURCE LINES 67-92

.. code-block:: default


    # download louis model
    mesh = examples.download_louis_louvre()
    mesh.rotate_z(140, inplace=True)


    plotter = pv.Plotter(lighting=None)
    plotter.set_background('black')
    plotter.add_mesh(mesh, color='linen', pbr=True, metallic=0.5, roughness=0.5, diffuse=1)


    # setup lighting
    light = pv.Light((-2, 2, 0), (0, 0, 0), 'white')
    plotter.add_light(light)

    light = pv.Light((2, 0, 0), (0, 0, 0), (0.7, 0.0862, 0.0549))
    plotter.add_light(light)

    light = pv.Light((0, 0, 10), (0, 0, 0), 'white')
    plotter.add_light(light)


    # plot with a good camera position
    plotter.camera_position = [(9.51, 13.92, 15.81), (-2.836, -0.93, 10.2), (-0.22, -0.18, 0.959)]
    cpos = plotter.show()



.. image-sg:: /examples/02-plot/images/sphx_glr_pbr_003.png
   :alt: pbr
   :srcset: /examples/02-plot/images/sphx_glr_pbr_003.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  10.224 seconds)


.. _sphx_glr_download_examples_02-plot_pbr.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: pbr.py <pbr.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: pbr.ipynb <pbr.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

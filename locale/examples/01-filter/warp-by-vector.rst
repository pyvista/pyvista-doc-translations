
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/01-filter/warp-by-vector.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_01-filter_warp-by-vector.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_01-filter_warp-by-vector.py:


Warping by Vectors
~~~~~~~~~~~~~~~~~~

This example applies the ``warp_by_vector`` filter to a sphere mesh that has
3D displacement vectors defined at each node.

.. GENERATED FROM PYTHON SOURCE LINES 10-11

We first compare the unwarped sphere to the warped sphere.

.. GENERATED FROM PYTHON SOURCE LINES 11-27

.. code-block:: default


    import pyvista as pv
    from pyvista import examples

    sphere = examples.load_sphere_vectors()
    warped = sphere.warp_by_vector()

    p = pv.Plotter(shape=(1, 2))
    p.subplot(0, 0)
    p.add_text("Before warp")
    p.add_mesh(sphere, color='white')
    p.subplot(0, 1)
    p.add_text("After warp")
    p.add_mesh(warped, color='white')
    p.show()




.. image:: /examples/01-filter/images/sphx_glr_warp-by-vector_001.png
    :alt: warp by vector
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [(17.809803632694113, 17.50988545795046, 17.509803918796408),
     (0.0, -0.29991817474365234, -0.2999997138977051),
     (0.0, 0.0, 1.0)]



.. GENERATED FROM PYTHON SOURCE LINES 28-31

We then use several values for the scale factor applied to the warp
operation. Applying a warping factor that is too high can often lead to
unrealistic results.

.. GENERATED FROM PYTHON SOURCE LINES 31-41

.. code-block:: default


    warp_factors = [0, 1.5, 3.5, 5.5]
    p = pv.Plotter(shape=(2, 2))
    for i in range(2):
        for j in range(2):
            idx = 2 * i + j
            p.subplot(i, j)
            p.add_mesh(sphere.warp_by_vector(factor=warp_factors[idx]))
            p.add_text(f'factor={warp_factors[idx]}')
    p.show()



.. image:: /examples/01-filter/images/sphx_glr_warp-by-vector_002.png
    :alt: warp by vector
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [(13.229537151962102, 11.82742228379804, 11.80935599675733),
     (0.0, -1.4021148681640625, -1.420181155204773),
     (0.0, 0.0, 1.0)]




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  4.332 seconds)


.. _sphx_glr_download_examples_01-filter_warp-by-vector.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: warp-by-vector.py <warp-by-vector.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: warp-by-vector.ipynb <warp-by-vector.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

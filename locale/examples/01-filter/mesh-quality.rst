
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/01-filter/mesh-quality.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_01-filter_mesh-quality.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_01-filter_mesh-quality.py:


.. _mesh_quality_example:

Computing Mesh Quality
~~~~~~~~~~~~~~~~~~~~~~

Leverage powerful VTK algorithms for computing mesh quality.

Here we will use the :func:`pyvista.DataSetFilters.compute_cell_quality` filter
to compute the cell qualities. For a full list of the various quality metrics
available, please refer to the documentation for that filter.

.. GENERATED FROM PYTHON SOURCE LINES 13-23

.. code-block:: default

    from pyvista import examples

    mesh = examples.download_cow().triangulate().decimate(0.7)

    cpos = [
        (10.10963531890468, 4.61130688407898, -4.503884867626516),
        (1.2896420468715433, -0.055387528972708225, 1.1228250502811408),
        (-0.2970769821136617, 0.9100381451936025, 0.2890948650371137),
    ]








.. GENERATED FROM PYTHON SOURCE LINES 24-25

Compute the cell quality. Note that there are many different quality measures

.. GENERATED FROM PYTHON SOURCE LINES 25-28

.. code-block:: default

    qual = mesh.compute_cell_quality(quality_measure='scaled_jacobian')
    qual






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>
    <table>
    <tr><th>PolyData</th><th>Information</th></tr>
    <tr><td>N Cells</td><td>1740</td></tr>
    <tr><td>N Points</td><td>871</td></tr>
    <tr><td>X Bounds</td><td>-4.389e+00, 6.005e+00</td></tr>
    <tr><td>Y Bounds</td><td>-3.648e+00, 2.761e+00</td></tr>
    <tr><td>Z Bounds</td><td>-1.701e+00, 1.701e+00</td></tr>
    <tr><td>N Arrays</td><td>1</td></tr>
    </table>

    </td><td>
    <table>
    <tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>
    <tr><td><b>CellQuality</b></td><td>Cells</td><td>float64</td><td>1</td><td>6.197e-02</td><td>9.911e-01</td></tr>
    </table>

    </td></tr> </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 29-30

.. code-block:: default

    qual.plot(cpos=cpos, scalars='CellQuality')



.. image-sg:: /examples/01-filter/images/sphx_glr_mesh-quality_001.png
   :alt: mesh quality
   :srcset: /examples/01-filter/images/sphx_glr_mesh-quality_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.550 seconds)


.. _sphx_glr_download_examples_01-filter_mesh-quality.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: mesh-quality.py <mesh-quality.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: mesh-quality.ipynb <mesh-quality.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

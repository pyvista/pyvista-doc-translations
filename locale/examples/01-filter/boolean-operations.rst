
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/01-filter/boolean-operations.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_01-filter_boolean-operations.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_01-filter_boolean-operations.py:


.. _boolean_example:

Boolean Operations
~~~~~~~~~~~~~~~~~~

Perform boolean operations with closed (manifold) surfaces.

Boolean/topological operations (intersect, union, difference) methods
are implemented for :class:`pyvista.PolyData` mesh types only and are
accessible directly from any :class:`pyvista.PolyData` mesh. Check out
:class:`pyvista.PolyDataFilters` and take a look at the following
filters:

* :func:`pyvista.PolyDataFilters.boolean_difference`
* :func:`pyvista.PolyDataFilters.boolean_union`
* :func:`pyvista.PolyDataFilters.boolean_intersection`

Essentially, boolean union, difference, and intersection are all the
same operation. Just different parts of the objects are kept at the
end.

The ``-`` operator can be used between any two :class:`pyvista.PolyData`
meshes in PyVista to cut the first mesh by the second.  These meshes
must be all triangle meshes, which you can check with
:attr:`pyvista.PolyData.is_all_triangles`.

.. note::
   For merging, the ``+`` operator can be used between any two meshes
   in PyVista which simply calls the ``.merge()`` filter to combine
   any two meshes.  This is different from ``boolean_union`` as it
   simply superimposes the two meshes without performing additional
   calculations on the result.

.. warning::
   If your boolean operations don't react the way you think they
   should (i.e. the wrong parts disappear), one of your meshes
   probably has its normals pointing inward. Use
   :func:`pyvista.PolyDataFilters.plot_normals` to visualize the normals.

.. GENERATED FROM PYTHON SOURCE LINES 43-50

.. code-block:: default


    import pyvista as pv

    sphere_a = pv.Sphere()
    sphere_b = pv.Sphere(center=(0.5, 0, 0))









.. GENERATED FROM PYTHON SOURCE LINES 52-63

Boolean Union
+++++++++++++

Perform a boolean union of ``A`` and ``B`` using the
:func:`pyvista.PolyDataFilters.boolean_union` filter.

The union of two manifold meshes ``A`` and ``B`` is the mesh
which is in ``A``, in ``B``, or in both ``A`` and ``B``.

Order of operands does not matter for boolean union (the operation is
commutative).

.. GENERATED FROM PYTHON SOURCE LINES 63-73

.. code-block:: default


    result = sphere_a.boolean_union(sphere_b)
    pl = pv.Plotter()
    _ = pl.add_mesh(sphere_a, color='r', style='wireframe', line_width=3)
    _ = pl.add_mesh(sphere_b, color='b', style='wireframe', line_width=3)
    _ = pl.add_mesh(result, color='tan')
    pl.camera_position = 'xz'
    pl.show()





.. image-sg:: /examples/01-filter/images/sphx_glr_boolean-operations_001.png
   :alt: boolean operations
   :srcset: /examples/01-filter/images/sphx_glr_boolean-operations_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 74-85

Boolean Difference
++++++++++++++++++

Perform a boolean difference of ``A`` and ``B`` using the
:func:`pyvista.PolyDataFilters.boolean_difference` filter or the
``-`` operator since both meshes are :class:`pyvista.PolyData`.

The difference of two manifold meshes ``A`` and ``B`` is the volume
of the mesh in ``A`` not belonging to ``B``.

Order of operands matters for boolean difference.

.. GENERATED FROM PYTHON SOURCE LINES 85-95

.. code-block:: default


    result = sphere_a.boolean_difference(sphere_b)
    pl = pv.Plotter()
    _ = pl.add_mesh(sphere_a, color='r', style='wireframe', line_width=3)
    _ = pl.add_mesh(sphere_b, color='b', style='wireframe', line_width=3)
    _ = pl.add_mesh(result, color='tan')
    pl.camera_position = 'xz'
    pl.show()





.. image-sg:: /examples/01-filter/images/sphx_glr_boolean-operations_002.png
   :alt: boolean operations
   :srcset: /examples/01-filter/images/sphx_glr_boolean-operations_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 96-107

Boolean Intersection
++++++++++++++++++++

Perform a boolean intersection of ``A`` and ``B`` using the
:func:`pyvista.PolyDataFilters.boolean_intersection` filter.

The intersection of two manifold meshes ``A`` and ``B`` is the mesh
which is the volume of ``A`` that is also in ``B``.

Order of operands does not matter for boolean intersection (the
operation is commutative).

.. GENERATED FROM PYTHON SOURCE LINES 107-117

.. code-block:: default


    result = sphere_a.boolean_intersection(sphere_b)
    pl = pv.Plotter()
    _ = pl.add_mesh(sphere_a, color='r', style='wireframe', line_width=3)
    _ = pl.add_mesh(sphere_b, color='b', style='wireframe', line_width=3)
    _ = pl.add_mesh(result, color='tan')
    pl.camera_position = 'xz'
    pl.show()





.. image-sg:: /examples/01-filter/images/sphx_glr_boolean-operations_003.png
   :alt: boolean operations
   :srcset: /examples/01-filter/images/sphx_glr_boolean-operations_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 118-125

Behavior due to flipped normals
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Note that these boolean filters behave differently depending on the
orientation of the normals.

Boolean difference with both cube and sphere normals pointed
outward.  This is the "normal" behavior.

.. GENERATED FROM PYTHON SOURCE LINES 125-132

.. code-block:: default


    cube = pv.Cube().triangulate().subdivide(3)
    sphere = pv.Sphere(radius=0.6)
    result = cube.boolean_difference(sphere)
    result.plot(color='tan')





.. image-sg:: /examples/01-filter/images/sphx_glr_boolean-operations_004.png
   :alt: boolean operations
   :srcset: /examples/01-filter/images/sphx_glr_boolean-operations_004.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 133-134

Boolean difference with cube normals outward, sphere inward.

.. GENERATED FROM PYTHON SOURCE LINES 134-142

.. code-block:: default


    cube = pv.Cube().triangulate().subdivide(3)
    sphere = pv.Sphere(radius=0.6)
    sphere.flip_normals()
    result = cube.boolean_difference(sphere)
    result.plot(color='tan')





.. image-sg:: /examples/01-filter/images/sphx_glr_boolean-operations_005.png
   :alt: boolean operations
   :srcset: /examples/01-filter/images/sphx_glr_boolean-operations_005.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 143-144

Boolean difference with cube normals inward, sphere outward.

.. GENERATED FROM PYTHON SOURCE LINES 144-152

.. code-block:: default


    cube = pv.Cube().triangulate().subdivide(3)
    cube.flip_normals()
    sphere = pv.Sphere(radius=0.6)
    result = cube.boolean_difference(sphere)
    result.plot(color='tan')





.. image-sg:: /examples/01-filter/images/sphx_glr_boolean-operations_006.png
   :alt: boolean operations
   :srcset: /examples/01-filter/images/sphx_glr_boolean-operations_006.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 153-154

Both cube and sphere normals inward.

.. GENERATED FROM PYTHON SOURCE LINES 154-161

.. code-block:: default


    cube = pv.Cube().triangulate().subdivide(3)
    cube.flip_normals()
    sphere = pv.Sphere(radius=0.6)
    sphere.flip_normals()
    result = cube.boolean_difference(sphere)
    result.plot(color='tan')



.. image-sg:: /examples/01-filter/images/sphx_glr_boolean-operations_007.png
   :alt: boolean operations
   :srcset: /examples/01-filter/images/sphx_glr_boolean-operations_007.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  9.943 seconds)


.. _sphx_glr_download_examples_01-filter_boolean-operations.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: boolean-operations.py <boolean-operations.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: boolean-operations.ipynb <boolean-operations.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

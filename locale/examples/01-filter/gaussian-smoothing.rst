
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/01-filter/gaussian-smoothing.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_01-filter_gaussian-smoothing.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_01-filter_gaussian-smoothing.py:


.. _gaussian_smoothing_example:

Gaussian Smoothing
~~~~~~~~~~~~~~~~~~

Perform a Gaussian convolution on a uniformly gridded data set.

:class:`pyvista.UniformGrid` data sets (a.k.a. images) a can be smoothed by
convolving the image data set with a Gaussian for one- to three-dimensional
inputs. This is commonly referred to as Gaussian blurring and typically used
to reduce noise or decrease the detail of an image dataset.

See also :func:`pyvista.UniformGrid.gaussian_smooth`.

.. GENERATED FROM PYTHON SOURCE LINES 17-26

.. code-block:: default

    import pyvista as pv
    from pyvista import examples

    # Load dataset
    data = examples.download_gourds()

    # Define a good point of view
    cp = [(319.5, 239.5, 1053.7372980874645), (319.5, 239.5, 0.0), (0.0, 1.0, 0.0)]








.. GENERATED FROM PYTHON SOURCE LINES 28-30

Let's apply the gaussian smoothing with different values of standard
deviation.

.. GENERATED FROM PYTHON SOURCE LINES 30-54

.. code-block:: default

    p = pv.Plotter(shape=(2, 2))

    p.subplot(0, 0)
    p.add_text("Original Image", font_size=14)
    p.add_mesh(data, rgb=True)
    p.camera_position = cp

    p.subplot(0, 1)
    p.add_text("Gaussian smoothing, std=2", font_size=14)
    p.add_mesh(data.gaussian_smooth(std_dev=2.0), rgb=True)
    p.camera_position = cp

    p.subplot(1, 0)
    p.add_text("Gaussian smoothing, std=4", font_size=14)
    p.add_mesh(data.gaussian_smooth(std_dev=4.0), rgb=True)
    p.camera_position = cp

    p.subplot(1, 1)
    p.add_text("Gaussian smoothing, std=8", font_size=14)
    p.add_mesh(data.gaussian_smooth(std_dev=8.0), rgb=True)
    p.camera_position = cp

    p.show()




.. image-sg:: /examples/01-filter/images/sphx_glr_gaussian-smoothing_001.png
   :alt: gaussian smoothing
   :srcset: /examples/01-filter/images/sphx_glr_gaussian-smoothing_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 55-60

|

Volume Rendering
~~~~~~~~~~~~~~~~
Now let's see an example on a 3D dataset with volume rendering:

.. GENERATED FROM PYTHON SOURCE LINES 60-81

.. code-block:: default

    data = examples.download_brain()

    smoothed_data = data.gaussian_smooth(std_dev=3.0)


    dargs = dict(clim=smoothed_data.get_data_range(), opacity=[0, 0, 0, 0.1, 0.3, 0.6, 1])

    n = [100, 150, 200, 245, 255]

    p = pv.Plotter(shape=(1, 2))
    p.subplot(0, 0)
    p.add_text("Original Image", font_size=24)
    # p.add_mesh(data.contour(n), **dargs)
    p.add_volume(data, **dargs)
    p.subplot(0, 1)
    p.add_text("Gaussian smoothing", font_size=24)
    # p.add_mesh(smoothed_data.contour(n), **dargs)
    p.add_volume(smoothed_data, **dargs)
    p.link_views()
    p.camera_position = [(-162.0, 704.8, 65.02), (90.0, 108.0, 90.0), (0.0068, 0.0447, 0.999)]
    p.show()



.. image-sg:: /examples/01-filter/images/sphx_glr_gaussian-smoothing_002.png
   :alt: gaussian smoothing
   :srcset: /examples/01-filter/images/sphx_glr_gaussian-smoothing_002.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  9.240 seconds)


.. _sphx_glr_download_examples_01-filter_gaussian-smoothing.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: gaussian-smoothing.py <gaussian-smoothing.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: gaussian-smoothing.ipynb <gaussian-smoothing.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

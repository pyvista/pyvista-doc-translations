
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/01-filter/project-plane.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_01-filter_project-plane.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_01-filter_project-plane.py:


Project to a Plane
~~~~~~~~~~~~~~~~~~

:class:`pyvista.PolyData` surfaces and pointsets can easily be projected to a
plane defined by a normal and origin

.. GENERATED FROM PYTHON SOURCE LINES 8-16

.. code-block:: default


    # sphinx_gallery_thumbnail_number = 2
    import pyvista as pv
    from pyvista import examples

    poly = examples.load_random_hills()
    poly.plot()




.. image-sg:: /examples/01-filter/images/sphx_glr_project-plane_001.png
   :alt: project plane
   :srcset: /examples/01-filter/images/sphx_glr_project-plane_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 17-18

Project that surface to a plane underneath the surface

.. GENERATED FROM PYTHON SOURCE LINES 18-27

.. code-block:: default

    origin = poly.center
    origin[-1] -= poly.length / 3.0
    projected = poly.project_points_to_plane(origin=origin)

    # Display the results
    p = pv.Plotter()
    p.add_mesh(poly)
    p.add_mesh(projected)
    p.show()



.. image-sg:: /examples/01-filter/images/sphx_glr_project-plane_002.png
   :alt: project plane
   :srcset: /examples/01-filter/images/sphx_glr_project-plane_002.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.268 seconds)


.. _sphx_glr_download_examples_01-filter_project-plane.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: project-plane.py <project-plane.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: project-plane.ipynb <project-plane.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

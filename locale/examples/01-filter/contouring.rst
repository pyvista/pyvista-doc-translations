
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/01-filter/contouring.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_01-filter_contouring.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_01-filter_contouring.py:


.. _contouring_example:

Contouring
~~~~~~~~~~

Generate iso-lines or -surfaces for the scalars of a surface or volume.

3D meshes can have 2D iso-surfaces of a scalar field extracted and 2D surface
meshes can have 1D iso-lines of a scalar field extracted.

.. GENERATED FROM PYTHON SOURCE LINES 12-17

.. code-block:: default

    import numpy as np

    import pyvista as pv
    from pyvista import examples








.. GENERATED FROM PYTHON SOURCE LINES 18-22

Iso-Lines
+++++++++

Let's extract 1D iso-lines of a scalar field from a 2D surface mesh.

.. GENERATED FROM PYTHON SOURCE LINES 22-32

.. code-block:: default

    mesh = examples.load_random_hills()

    contours = mesh.contour()

    pl = pv.Plotter()
    pl.add_mesh(mesh, opacity=0.85)
    pl.add_mesh(contours, color="white", line_width=5)
    pl.show()









.. tab-set::



   .. tab-item:: Static Scene



            
     .. image-sg:: /examples/01-filter/images/sphx_glr_contouring_001.png
        :alt: contouring
        :srcset: /examples/01-filter/images/sphx_glr_contouring_001.png
        :class: sphx-glr-single-img
     


   .. tab-item:: Interactive Scene



       .. offlineviewer:: /home/runner/work/pyvista-doc-translations/pyvista-doc-translations/pyvista/doc/source/examples/01-filter/images/sphx_glr_contouring_001.vtksz






.. GENERATED FROM PYTHON SOURCE LINES 33-37

Iso-Surfaces
++++++++++++

Let's extract 2D iso-surfaces of a scalar field from a 3D mesh.

.. GENERATED FROM PYTHON SOURCE LINES 37-52

.. code-block:: default

    mesh = examples.download_embryo()

    contours = mesh.contour(np.linspace(50, 200, 5))

    pl = pv.Plotter()
    pl.add_mesh(mesh.outline(), color="k")
    pl.add_mesh(contours, opacity=0.25, clim=[0, 200])
    pl.camera_position = [
        (-130.99381142132086, 644.4868354828589, 163.80447435848686),
        (125.21748748157661, 123.94368717158413, 108.83283586619626),
        (0.2780372840777734, 0.03547871361794171, 0.9599148553609699),
    ]
    pl.show()









.. tab-set::



   .. tab-item:: Static Scene



            
     .. image-sg:: /examples/01-filter/images/sphx_glr_contouring_002.png
        :alt: contouring
        :srcset: /examples/01-filter/images/sphx_glr_contouring_002.png
        :class: sphx-glr-single-img
     


   .. tab-item:: Interactive Scene



       .. offlineviewer:: /home/runner/work/pyvista-doc-translations/pyvista-doc-translations/pyvista/doc/source/examples/01-filter/images/sphx_glr_contouring_002.vtksz






.. GENERATED FROM PYTHON SOURCE LINES 53-56

Banded Contours
+++++++++++++++
Create banded contours for surface meshes using :func:`contour_banded() <pyvista.PolyDataFilters.contour_banded>`.

.. GENERATED FROM PYTHON SOURCE LINES 56-58

.. code-block:: default

    mesh = examples.load_random_hills()








.. GENERATED FROM PYTHON SOURCE LINES 59-60

Set number of contours and produce mesh and lines

.. GENERATED FROM PYTHON SOURCE LINES 60-63

.. code-block:: default

    n_contours = 8
    contours, edges = mesh.contour_banded(n_contours)








.. GENERATED FROM PYTHON SOURCE LINES 64-65

Also make normal vectors

.. GENERATED FROM PYTHON SOURCE LINES 65-67

.. code-block:: default

    arrows = mesh.glyph(scale="Normals", orient="Normals", tolerance=0.05)








.. GENERATED FROM PYTHON SOURCE LINES 68-78

.. code-block:: default


    # Common display arguments
    dargs = dict(scalars='Elevation', n_colors=n_contours - 1, cmap='Set3')

    pl = pv.Plotter()
    pl.add_mesh(edges, line_width=5, render_lines_as_tubes=True, color='k')
    pl.add_mesh(contours, **dargs)
    pl.add_mesh(arrows, **dargs)
    pl.show()








.. tab-set::



   .. tab-item:: Static Scene



            
     .. image-sg:: /examples/01-filter/images/sphx_glr_contouring_003.png
        :alt: contouring
        :srcset: /examples/01-filter/images/sphx_glr_contouring_003.png
        :class: sphx-glr-single-img
     


   .. tab-item:: Interactive Scene



       .. offlineviewer:: /home/runner/work/pyvista-doc-translations/pyvista-doc-translations/pyvista/doc/source/examples/01-filter/images/sphx_glr_contouring_003.vtksz






.. GENERATED FROM PYTHON SOURCE LINES 79-85

Contours from a label map
+++++++++++++++++++++++++

Create labeled surfaces from 3D label maps (e.f. multi-label image segmentation)
using :func:`contour_labeled() <pyvista.ImageDataFilters.contour_labeled>`.
Requires VTK version 9.3

.. GENERATED FROM PYTHON SOURCE LINES 85-89

.. code-block:: default

    if pv.vtk_version_info >= (9, 3):
        label_map = pv.examples.download_frog_tissue()
        mesh = label_map.contour_labeled()
        mesh.plot(cmap="glasbey_warm", cpos="yx", show_scalar_bar=False)







.. tab-set::



   .. tab-item:: Static Scene



            
     .. image-sg:: /examples/01-filter/images/sphx_glr_contouring_004.png
        :alt: contouring
        :srcset: /examples/01-filter/images/sphx_glr_contouring_004.png
        :class: sphx-glr-single-img
     


   .. tab-item:: Interactive Scene



       .. offlineviewer:: /home/runner/work/pyvista-doc-translations/pyvista-doc-translations/pyvista/doc/source/examples/01-filter/images/sphx_glr_contouring_004.vtksz







.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 18.844 seconds)


.. _sphx_glr_download_examples_01-filter_contouring.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: contouring.py <contouring.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: contouring.ipynb <contouring.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

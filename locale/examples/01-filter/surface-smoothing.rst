
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/01-filter/surface-smoothing.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_01-filter_surface-smoothing.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_01-filter_surface-smoothing.py:


.. _surface_smoothing_example:

Surface Smoothing
~~~~~~~~~~~~~~~~~

Smoothing rough edges of a surface mesh

.. GENERATED FROM PYTHON SOURCE LINES 9-13

.. code-block:: default


    # sphinx_gallery_thumbnail_number = 4
    from pyvista import examples








.. GENERATED FROM PYTHON SOURCE LINES 14-20

Suppose you extract a volumetric subset of a dataset that has roughly defined
edges. Perhaps you'd like a smooth representation of that model region. This
can be achieved by extracting the bounding surface of the volume and applying
a :func:`pyvista.PolyData.smooth` filter.

The below code snippet loads a sample roughly edged volumetric dataset:

.. GENERATED FROM PYTHON SOURCE LINES 20-30

.. code-block:: default


    # Vector to view rough edges
    cpos = [-2, 5, 3]

    # Load dataset
    data = examples.load_uniform()
    # Extract a rugged volume
    vol = data.threshold_percent(30, invert=1)
    vol.plot(show_edges=True, cpos=cpos)




.. image-sg:: /examples/01-filter/images/sphx_glr_surface-smoothing_001.png
   :alt: surface smoothing
   :srcset: /examples/01-filter/images/sphx_glr_surface-smoothing_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 31-34

Extract the outer surface of the volume using the
:func:`pyvista.DataSetFilters.extract_geometry` filter and then apply the
smoothing filter:

.. GENERATED FROM PYTHON SOURCE LINES 34-41

.. code-block:: default


    # Get the out surface as PolyData
    surf = vol.extract_geometry()
    # Smooth the surface
    smooth = surf.smooth()
    smooth.plot(show_edges=True, cpos=cpos)




.. image-sg:: /examples/01-filter/images/sphx_glr_surface-smoothing_002.png
   :alt: surface smoothing
   :srcset: /examples/01-filter/images/sphx_glr_surface-smoothing_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 42-44

Not smooth enough? Try increasing the number of iterations for the Laplacian
smoothing algorithm:

.. GENERATED FROM PYTHON SOURCE LINES 44-49

.. code-block:: default


    # Smooth the surface even more
    smooth = surf.smooth(n_iter=100)
    smooth.plot(show_edges=True, cpos=cpos)




.. image-sg:: /examples/01-filter/images/sphx_glr_surface-smoothing_003.png
   :alt: surface smoothing
   :srcset: /examples/01-filter/images/sphx_glr_surface-smoothing_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 50-52

Still not smooth enough? Increase the number of iterations for the Laplacian
smoothing algorithm to a crazy high value:

.. GENERATED FROM PYTHON SOURCE LINES 52-56

.. code-block:: default


    # Smooth the surface EVEN MORE
    smooth = surf.smooth(n_iter=1000)
    smooth.plot(show_edges=True, cpos=cpos)



.. image-sg:: /examples/01-filter/images/sphx_glr_surface-smoothing_004.png
   :alt: surface smoothing
   :srcset: /examples/01-filter/images/sphx_glr_surface-smoothing_004.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.556 seconds)


.. _sphx_glr_download_examples_01-filter_surface-smoothing.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: surface-smoothing.py <surface-smoothing.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: surface-smoothing.ipynb <surface-smoothing.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

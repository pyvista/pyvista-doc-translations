
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/01-filter/clipping.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_01-filter_clipping.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_01-filter_clipping.py:


Clipping with Planes & Boxes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Clip/cut any dataset using using planes or boxes.

.. GENERATED FROM PYTHON SOURCE LINES 7-11

.. code-block:: default

    # sphinx_gallery_thumbnail_number = 2
    import pyvista as pv
    from pyvista import examples








.. GENERATED FROM PYTHON SOURCE LINES 12-17

Clip with Plane
+++++++++++++++

Clip any dataset by a user defined plane using the
:func:`pyvista.DataSetFilters.clip` filter

.. GENERATED FROM PYTHON SOURCE LINES 17-30

.. code-block:: default

    dataset = examples.download_bunny_coarse()
    clipped = dataset.clip('y', invert=False)

    p = pv.Plotter()
    p.add_mesh(dataset, style='wireframe', color='blue', label='Input')
    p.add_mesh(clipped, label='Clipped')
    p.add_legend()
    p.camera_position = [(0.24, 0.32, 0.7),
                         (0.02, 0.03, -0.02),
                         (-0.12, 0.93, -0.34)]
    p.show()





.. image:: /examples/01-filter/images/sphx_glr_clipping_001.png
    :alt: clipping
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [(0.24, 0.32, 0.7),
     (0.02, 0.03, -0.02),
     (-0.12030717544671318, 0.9323806097120272, -0.34087033043235404)]



.. GENERATED FROM PYTHON SOURCE LINES 31-36

Clip with Bounds
++++++++++++++++

Clip any dataset by a set of XYZ bounds using the
:func:`pyvista.DataSetFilters.clip_box` filter.

.. GENERATED FROM PYTHON SOURCE LINES 36-48

.. code-block:: default

    dataset = examples.download_office()

    bounds = [2,4.5, 2,4.5, 1,3]
    clipped = dataset.clip_box(bounds)

    p = pv.Plotter()
    p.add_mesh(dataset, style='wireframe', color='blue', label='Input')
    p.add_mesh(clipped, label='Clipped')
    p.add_legend()
    p.show()





.. image:: /examples/01-filter/images/sphx_glr_clipping_002.png
    :alt: clipping
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [(9.862367552924386, 9.862367552924386, 8.862367552924386),
     (2.25499999942258, 2.25499999942258, 1.25499999942258),
     (0.0, 0.0, 1.0)]



.. GENERATED FROM PYTHON SOURCE LINES 49-54

Clip with Rotated Box
+++++++++++++++++++++

Clip any dataset by an arbitrarily rotated solid box using the
:func:`pyvista.DataSetFilters.clip_box` filter.

.. GENERATED FROM PYTHON SOURCE LINES 54-66

.. code-block:: default

    mesh = examples.load_airplane()

    # Use `pv.Box()` or `pv.Cube()` to create a region of interest
    roi = pv.Cube(center=(0.9e3, 0.2e3, mesh.center[2]),
                  x_length=500, y_length=500, z_length=500)
    roi.rotate_z(33)

    p = pv.Plotter()
    p.add_mesh(roi, opacity=0.75, color="red")
    p.add_mesh(mesh, opacity=0.5)
    p.show()




.. image:: /examples/01-filter/images/sphx_glr_clipping_003.png
    :alt: clipping
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [(3184.5425965677114, 2963.5691926370473, 2419.74146818026),
     (896.9955291748047, 676.0221252441406, 132.19440078735352),
     (0.0, 0.0, 1.0)]



.. GENERATED FROM PYTHON SOURCE LINES 67-68

Run the box clipping algorithm

.. GENERATED FROM PYTHON SOURCE LINES 68-79

.. code-block:: default

    extracted = mesh.clip_box(roi, invert=False)

    p = pv.Plotter(shape=(1,2))
    p.add_mesh(roi, opacity=0.75, color="red")
    p.add_mesh(mesh)
    p.subplot(0,1)
    p.add_mesh(extracted)
    p.add_mesh(roi, opacity=0.75, color="red")
    p.link_views()
    p.view_isometric()
    p.show()



.. image:: /examples/01-filter/images/sphx_glr_clipping_004.png
    :alt: clipping
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [(2449.2329562520977, 2461.266479811668, 1935.5516398763652),
     (645.8757171630859, 657.9092407226562, 132.19440078735352),
     (0.0, 0.0, 1.0)]




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  2.931 seconds)


.. _sphx_glr_download_examples_01-filter_clipping.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: clipping.py <clipping.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: clipping.ipynb <clipping.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

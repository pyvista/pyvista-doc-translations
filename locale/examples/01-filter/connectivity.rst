
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/01-filter/connectivity.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_01-filter_connectivity.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_01-filter_connectivity.py:


.. _connectivity_example:

Connectivity
~~~~~~~~~~~~

Use the connectivity filter to remove noisy isosurfaces.

This example is very similar to `this VTK example <https://kitware.github.io/vtk-examples/site/Python/VisualizationAlgorithms/PineRootConnectivity/>`__

.. GENERATED FROM PYTHON SOURCE LINES 11-15

.. code-block:: default

    # sphinx_gallery_thumbnail_number = 2
    import pyvista as pv
    from pyvista import examples








.. GENERATED FROM PYTHON SOURCE LINES 16-17

Load a dataset that has noisy isosurfaces

.. GENERATED FROM PYTHON SOURCE LINES 17-29

.. code-block:: default

    mesh = examples.download_pine_roots()

    cpos = [(40.6018, -280.533, 47.0172),
            (40.6018, 37.2813, 50.1953),
            (0.0, 0.0, 1.0)]

    # Plot the raw data
    p = pv.Plotter()
    p.add_mesh(mesh, color='#965434')
    p.add_mesh(mesh.outline())
    p.show(cpos=cpos)




.. image-sg:: /examples/01-filter/images/sphx_glr_connectivity_001.png
   :alt: connectivity
   :srcset: /examples/01-filter/images/sphx_glr_connectivity_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 30-35

The mesh plotted above is very noisy. We can extract the largest connected
isosurface in that mesh using the :func:`pyvista.DataSetFilters.connectivity`
filter and passing ``largest=True`` to the ``connectivity``
filter or by using the :func:`pyvista.DataSetFilters.extract_largest` filter
(both are equivalent).

.. GENERATED FROM PYTHON SOURCE LINES 35-45

.. code-block:: default


    # Grab the largest connected volume present
    largest = mesh.connectivity(largest=True)
    # or: largest = mesh.extract_largest()

    p = pv.Plotter()
    p.add_mesh(largest, color='#965434')
    p.add_mesh(mesh.outline())
    p.camera_position = cpos
    p.show()



.. image-sg:: /examples/01-filter/images/sphx_glr_connectivity_002.png
   :alt: connectivity
   :srcset: /examples/01-filter/images/sphx_glr_connectivity_002.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  2.879 seconds)


.. _sphx_glr_download_examples_01-filter_connectivity.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: connectivity.py <connectivity.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: connectivity.ipynb <connectivity.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

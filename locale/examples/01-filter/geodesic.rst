
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/01-filter/geodesic.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_01-filter_geodesic.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_01-filter_geodesic.py:


.. _geodesic_example:

Geodesic Paths
~~~~~~~~~~~~~~

Calculates the geodesic path between two vertices using Dijkstra's algorithm

.. GENERATED FROM PYTHON SOURCE LINES 9-16

.. code-block:: default

    # sphinx_gallery_thumbnail_number = 1
    import pyvista as pv
    from pyvista import examples

    # Load a global topography surface and decimate it
    land = examples.download_topo_land().triangulate().decimate(0.98)








.. GENERATED FROM PYTHON SOURCE LINES 17-18

Get the geodesic path as a new :class:`pyvista.PolyData` object:

.. GENERATED FROM PYTHON SOURCE LINES 18-27

.. code-block:: default

    cape_town = land.find_closest_point((0.790801, 0.264598, -0.551942))
    dubai = land.find_closest_point((0.512642, 0.745898, 0.425255))
    bangkok = land.find_closest_point((-0.177077, 0.955419, 0.236273))
    rome = land.find_closest_point((0.718047, 0.163038, 0.676684))

    a = land.geodesic(cape_town, dubai)
    b = land.geodesic(cape_town, bangkok)
    c = land.geodesic(cape_town, rome)








.. GENERATED FROM PYTHON SOURCE LINES 28-29

Render the path along the land surface

.. GENERATED FROM PYTHON SOURCE LINES 29-40

.. code-block:: default


    p = pv.Plotter(notebook=0)
    p.add_mesh(a+b+c, line_width=10, color="red", label="Geodesic Path")
    p.add_mesh(land, show_edges=True)
    p.add_legend()
    p.camera_position = [(3.5839785524183934, 2.3915238111304924, 1.3993738227478327),
     (-0.06842917033182638, 0.15467201157962263, -0.07331693636555875),
     (-0.34851770951584765, -0.04724188391065845, 0.9361108965066047)]

    p.show()




.. image-sg:: /examples/01-filter/images/sphx_glr_geodesic_001.png
   :alt: geodesic
   :srcset: /examples/01-filter/images/sphx_glr_geodesic_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 41-42

How long is that path?

.. GENERATED FROM PYTHON SOURCE LINES 42-44

.. code-block:: default

    distance = land.geodesic_distance(cape_town, rome)
    distance




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    1.996160505558251




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  13.103 seconds)


.. _sphx_glr_download_examples_01-filter_geodesic.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: geodesic.py <geodesic.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: geodesic.ipynb <geodesic.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

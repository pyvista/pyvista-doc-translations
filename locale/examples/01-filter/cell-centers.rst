
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/01-filter/cell-centers.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_01-filter_cell-centers.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_01-filter_cell-centers.py:


.. _cell_centers_example:

Extract Cell Centers
~~~~~~~~~~~~~~~~~~~~

Extract the coordinates of the centers of all cells/faces in a mesh.

Here we use :func:`pyvista.DataSetFilters.cell_centers`

.. GENERATED FROM PYTHON SOURCE LINES 11-16

.. code-block:: default

    import pyvista as pv

    # sphinx_gallery_thumbnail_number = 3
    from pyvista import examples








.. GENERATED FROM PYTHON SOURCE LINES 17-18

First let's fetch the centers of a mesh with 2D geometries (a surface)

.. GENERATED FROM PYTHON SOURCE LINES 18-32

.. code-block:: default

    mesh = examples.download_teapot()

    cpos = [(6.192871661244108, 5.687542355343226, -4.95345468836544),
     (0.48853358141600634, 1.2019347531215714, 0.1656178278582367),
     (-0.40642070472687936, 0.8621356761976646, 0.30256286387543047)]

    centers = mesh.cell_centers()

    p = pv.Plotter()
    p.add_mesh(mesh, show_edges=True, line_width=1)
    p.add_mesh(centers, color="r", point_size=8.0, render_points_as_spheres=True)
    p.show(cpos=cpos)





.. image-sg:: /examples/01-filter/images/sphx_glr_cell-centers_001.png
   :alt: cell centers
   :srcset: /examples/01-filter/images/sphx_glr_cell-centers_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 33-34

We can also do this for full 3D meshes.

.. GENERATED FROM PYTHON SOURCE LINES 34-49

.. code-block:: default


    grid = examples.download_letter_a()

    cpos = [(2.704583323659036, 0.7822568412034183, 1.7251126717482546),
     (3.543391913452799, 0.31117673768140197, 0.16407006760146028),
     (0.1481171795711516, 0.96599698246102, -0.2119224645762945)]


    centers = grid.cell_centers()

    p = pv.Plotter()
    p.add_mesh(grid, show_edges=True, opacity=0.5, line_width=1)
    p.add_mesh(centers, color="r", point_size=8.0, render_points_as_spheres=True)
    p.show(cpos=cpos)




.. image-sg:: /examples/01-filter/images/sphx_glr_cell-centers_002.png
   :alt: cell centers
   :srcset: /examples/01-filter/images/sphx_glr_cell-centers_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 50-55

.. code-block:: default


    p = pv.Plotter()
    p.add_mesh(grid.extract_all_edges(), color="k", line_width=1)
    p.add_mesh(centers, color="r", point_size=8.0, render_points_as_spheres=True)
    p.show(cpos=cpos)



.. image-sg:: /examples/01-filter/images/sphx_glr_cell-centers_003.png
   :alt: cell centers
   :srcset: /examples/01-filter/images/sphx_glr_cell-centers_003.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  2.292 seconds)


.. _sphx_glr_download_examples_01-filter_cell-centers.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: cell-centers.py <cell-centers.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: cell-centers.ipynb <cell-centers.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_


.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/01-filter/cell-centers.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_01-filter_cell-centers.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_01-filter_cell-centers.py:


.. _cell_centers_example:

Extract Cell Centers
~~~~~~~~~~~~~~~~~~~~

Extract the coordinates of the centers of all cells or faces in a mesh.

Here we use :func:`cell_centers <pyvista.DataSetFilters.cell_centers>`.

.. GENERATED FROM PYTHON SOURCE LINES 12-16

.. code-block:: default

    import pyvista as pv

    from pyvista import examples








.. GENERATED FROM PYTHON SOURCE LINES 18-19

First let's fetch the centers of a mesh with 2D geometries (a surface)

.. GENERATED FROM PYTHON SOURCE LINES 19-35

.. code-block:: default

    mesh = examples.download_teapot()

    cpos = [
        (6.192871661244108, 5.687542355343226, -4.95345468836544),
        (0.48853358141600634, 1.2019347531215714, 0.1656178278582367),
        (-0.40642070472687936, 0.8621356761976646, 0.30256286387543047),
    ]

    centers = mesh.cell_centers()

    pl = pv.Plotter()
    pl.add_mesh(mesh, show_edges=True, line_width=1)
    pl.add_mesh(centers, color="r", point_size=8.0, render_points_as_spheres=True)
    pl.show(cpos=cpos)









.. tab-set::



   .. tab-item:: Static Scene



            
     .. image-sg:: /examples/01-filter/images/sphx_glr_cell-centers_001.png
        :alt: cell centers
        :srcset: /examples/01-filter/images/sphx_glr_cell-centers_001.png
        :class: sphx-glr-single-img
     


   .. tab-item:: Interactive Scene



       .. offlineviewer:: /home/runner/work/pyvista-doc-translations/pyvista-doc-translations/pyvista/doc/source/examples/01-filter/images/sphx_glr_cell-centers_001.vtksz






.. GENERATED FROM PYTHON SOURCE LINES 36-37

We can also do this for full 3D meshes.

.. GENERATED FROM PYTHON SOURCE LINES 37-54

.. code-block:: default


    grid = examples.download_letter_a()

    cpos = [
        (2.704583323659036, 0.7822568412034183, 1.7251126717482546),
        (3.543391913452799, 0.31117673768140197, 0.16407006760146028),
        (0.1481171795711516, 0.96599698246102, -0.2119224645762945),
    ]


    centers = grid.cell_centers()

    pl = pv.Plotter()
    pl.add_mesh(grid, show_edges=True, opacity=0.5, line_width=1)
    pl.add_mesh(centers, color="r", point_size=8.0, render_points_as_spheres=True)
    pl.show(cpos=cpos)








.. tab-set::



   .. tab-item:: Static Scene



            
     .. image-sg:: /examples/01-filter/images/sphx_glr_cell-centers_002.png
        :alt: cell centers
        :srcset: /examples/01-filter/images/sphx_glr_cell-centers_002.png
        :class: sphx-glr-single-img
     


   .. tab-item:: Interactive Scene



       .. offlineviewer:: /home/runner/work/pyvista-doc-translations/pyvista-doc-translations/pyvista/doc/source/examples/01-filter/images/sphx_glr_cell-centers_002.vtksz






.. GENERATED FROM PYTHON SOURCE LINES 55-62

.. code-block:: default


    pl = pv.Plotter()
    pl.add_mesh(grid.extract_all_edges(), color="k", line_width=1)
    pl.add_mesh(centers, color="r", point_size=8.0, render_points_as_spheres=True)
    pl.show(cpos=cpos)









.. tab-set::



   .. tab-item:: Static Scene



            
     .. image-sg:: /examples/01-filter/images/sphx_glr_cell-centers_003.png
        :alt: cell centers
        :srcset: /examples/01-filter/images/sphx_glr_cell-centers_003.png
        :class: sphx-glr-single-img
     


   .. tab-item:: Interactive Scene



       .. offlineviewer:: /home/runner/work/pyvista-doc-translations/pyvista-doc-translations/pyvista/doc/source/examples/01-filter/images/sphx_glr_cell-centers_003.vtksz






.. GENERATED FROM PYTHON SOURCE LINES 63-69

Edge centers
~~~~~~~~~~~~
You can use :func:`cell_centers <pyvista.DataSetFilters.cell_centers>` in
combination with :func:`extract_all_edges
<pyvista.DataSetFilters.extract_all_edges>` to get the center of all edges of
a mesh.

.. GENERATED FROM PYTHON SOURCE LINES 69-86

.. code-block:: default


    # create a simple mesh and extract all the edges and then centers of the mesh.
    mesh = pv.Cube()
    edge_centers = mesh.extract_all_edges().cell_centers().points

    # Plot the edge centers
    pl = pv.Plotter()
    pl.add_mesh(mesh, show_edges=True, line_width=5)
    pl.add_points(
        edge_centers,
        render_points_as_spheres=True,
        color='r',
        point_size=20,
    )
    pl.show()









.. tab-set::



   .. tab-item:: Static Scene



            
     .. image-sg:: /examples/01-filter/images/sphx_glr_cell-centers_004.png
        :alt: cell centers
        :srcset: /examples/01-filter/images/sphx_glr_cell-centers_004.png
        :class: sphx-glr-single-img
     


   .. tab-item:: Interactive Scene



       .. offlineviewer:: /home/runner/work/pyvista-doc-translations/pyvista-doc-translations/pyvista/doc/source/examples/01-filter/images/sphx_glr_cell-centers_004.vtksz






.. GENERATED FROM PYTHON SOURCE LINES 87-91

Add labels to cells
~~~~~~~~~~~~~~~~~~~
There is not a method to add labels to cells.
If you want to label it, you need to extract the position to label it.

.. GENERATED FROM PYTHON SOURCE LINES 91-99

.. code-block:: default


    grid = pv.ImageData(dimensions=(10, 10, 1))
    points = grid.cell_centers().points

    pl = pv.Plotter()
    pl.add_mesh(grid, show_edges=True)
    pl.add_point_labels(points, labels=[f"{i}" for i in range(points.shape[0])])
    pl.show(cpos="xy")




.. image-sg:: /examples/01-filter/images/sphx_glr_cell-centers_005.png
   :alt: cell centers
   :srcset: /examples/01-filter/images/sphx_glr_cell-centers_005.png
   :class: sphx-glr-single-img








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 1.766 seconds)


.. _sphx_glr_download_examples_01-filter_cell-centers.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: cell-centers.py <cell-centers.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: cell-centers.ipynb <cell-centers.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

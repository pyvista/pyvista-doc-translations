
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/01-filter/surface_reconstruction.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_01-filter_surface_reconstruction.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_01-filter_surface_reconstruction.py:


.. _surface_reconstruction_example:

Surface Reconstruction
~~~~~~~~~~~~~~~~~~~~~~

Surface reconstruction has a dedicated filter in PyVista and is
handled by :func:`pyvista.PolyDataFilters.reconstruct_surface`.  This
tends to perform much better than :func:`DataSetFilters.delaunay_3d`.

.. GENERATED FROM PYTHON SOURCE LINES 12-14

.. code-block:: default

    import pyvista as pv








.. GENERATED FROM PYTHON SOURCE LINES 15-16

Create a point cloud from a sphere and then reconstruct a surface from it.

.. GENERATED FROM PYTHON SOURCE LINES 16-21

.. code-block:: default


    points = pv.wrap(pv.Sphere().points)
    surf = points.reconstruct_surface()
    surf






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    <table>
    <tr><th>PolyData</th><th>Information</th></tr>
    <tr><td>N Cells</td><td>840</td></tr>
    <tr><td>N Points</td><td>422</td></tr>
    <tr><td>X Bounds</td><td>-4.995e-01, 4.989e-01</td></tr>
    <tr><td>Y Bounds</td><td>-4.986e-01, 4.986e-01</td></tr>
    <tr><td>Z Bounds</td><td>-4.985e-01, 4.985e-01</td></tr>
    <tr><td>N Arrays</td><td>0</td></tr>
    </table>


    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 22-23

Plot the point cloud and the reconstructed sphere.

.. GENERATED FROM PYTHON SOURCE LINES 23-31

.. code-block:: default


    pl = pv.Plotter(shape=(1,2))
    pl.add_mesh(points)
    pl.add_title('Point Cloud of 3D Surface')
    pl.subplot(0,1)
    pl.add_mesh(surf, color=True, show_edges=True)
    pl.add_title('Reconstructed Surface')
    pl.show()



.. image-sg:: /examples/01-filter/images/sphx_glr_surface_reconstruction_001.png
   :alt: surface reconstruction
   :srcset: /examples/01-filter/images/sphx_glr_surface_reconstruction_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.704 seconds)


.. _sphx_glr_download_examples_01-filter_surface_reconstruction.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: surface_reconstruction.py <surface_reconstruction.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: surface_reconstruction.ipynb <surface_reconstruction.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

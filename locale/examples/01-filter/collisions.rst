
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/01-filter/collisions.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_01-filter_collisions.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_01-filter_collisions.py:


.. _collision_example:

Collision
~~~~~~~~~
Perform a collision detection between two meshes.

This example use the :class:`collision <pyvista.PolyDataFilters.collision>`
filter to detect the faces from one sphere colliding with another
sphere.

.. note::
   Due to the nature of the `vtk.vtkCollisionDetectionFilter
   <https://vtk.org/doc/nightly/html/classvtkCollisionDetectionFilter.html>`_,
   repeated uses of this method will be slower that using the
   ``vtk.vtkCollisionDetectionFilter`` directly.  The first
   update of the filter creates two instances of `vtkOBBTree
   <https://vtk.org/doc/nightly/html/classvtkOBBTree.html>`_,
   which can be subsequently updated by modifying the transform or
   matrix of the input meshes.

   This method assumes no transform and is easier to use for
   single collision tests, but it is recommended to use a
   combination of ``pyvista`` and ``vtk`` for rapidly computing
   repeated collisions.  See the `Collision Detection Example
   <https://kitware.github.io/vtk-examples/site/Python/Visualization/CollisionDetection/>`_

.. GENERATED FROM PYTHON SOURCE LINES 30-36

.. code-block:: default


    import numpy as np
    import pyvista as pv
    pv.set_plot_theme("document")









.. GENERATED FROM PYTHON SOURCE LINES 37-41

Create the main mesh and the secondary "moving" mesh

Collision faces will be plotted on this sphere, and to do so we
initialize an initial ``"collisions"`` mask.

.. GENERATED FROM PYTHON SOURCE LINES 41-47

.. code-block:: default

    sphere0 = pv.Sphere()
    sphere0['collisions'] = np.zeros(sphere0.n_cells, dtype=bool)

    # This mesh will be the moving mesh
    sphere1 = pv.Sphere(radius=0.6, center=(-1, 0, 0))








.. GENERATED FROM PYTHON SOURCE LINES 48-50

Setup the plotter open a movie, and write a frame after moving the sphere.


.. GENERATED FROM PYTHON SOURCE LINES 50-78

.. code-block:: default


    pl = pv.Plotter()
    pl.enable_hidden_line_removal()
    pl.add_mesh(sphere0, show_scalar_bar=False, cmap='bwr')
    pl.camera_position = 'xz'
    pl.add_mesh(sphere1, style='wireframe', color='green', line_width=5)

    # for this example
    pl.open_gif("collision_movie.gif")

    # alternatively, to disable movie generation:
    # pl.show(auto_close=False, interactive=False)

    delta_x = 0.05
    for i in range(int(2/delta_x)):
        sphere1.translate([delta_x, 0, 0])
        col, n_contacts = sphere0.collision(sphere1)

        collision_mask = np.zeros(sphere0.n_cells, dtype=bool)
        if n_contacts:
            collision_mask[col['ContactCells']] = True
        sphere0['collisions'] = collision_mask
        pl.write_frame()

        # alternatively, disable movie plotting and simply render the image
        # pl.render()

    pl.close()



.. image-sg:: /examples/01-filter/images/sphx_glr_collisions_001.png
   :alt: collisions
   :srcset: /examples/01-filter/images/sphx_glr_collisions_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  9.995 seconds)


.. _sphx_glr_download_examples_01-filter_collisions.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: collisions.py <collisions.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: collisions.ipynb <collisions.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_


.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/00-load/create-pixel-art.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_00-load_create-pixel-art.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_00-load_create-pixel-art.py:


.. _pixel_art_example:

Pixel Art of ALIEN MONSTERS
~~~~~~~~~~~~~~~~~~~~~~~~~~~

Here we use :func:`pyvista.Box` to make `pixel art <https://en.wikipedia.org/wiki/Pixel_art>`_.
Pixel string `source <https://commons.wikimedia.org/wiki/File:Noto_Emoji_Pie_1f47e.svg>`_
and `license <https://github.com/googlefonts/noto-emoji#license>`_.

.. GENERATED FROM PYTHON SOURCE LINES 12-15

.. code-block:: default

    import pyvista as pv
    from pyvista.demos import logo








.. GENERATED FROM PYTHON SOURCE LINES 16-18

Convert pixel art to an array
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 18-43

.. code-block:: default



    alien_str = """
        %         %
          %     %
        % % % % % %
      % %   % %   % %
    % % % % % % % % % %
    %   % % % % % %   %
    %   %         %   %
    %   % %     % %   %
          %     %
        %         %
    """


    alien = []
    for line in alien_str.splitlines()[1:]:  # skip first linebreak
        if not line:
            continue
        if len(line) < 20:
            line += (20 - len(line)) * ' '
        alien.append([line[i : i + 2] == '% ' for i in range(0, len(line), 2)])









.. GENERATED FROM PYTHON SOURCE LINES 44-47

Define function to draw pixels
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Define a helper function to add pixel boxes to plotter.

.. GENERATED FROM PYTHON SOURCE LINES 47-72

.. code-block:: default



    def draw_pixels(plotter, pixels, center, color):
        bounds = [
            center[0] - 1.0,
            center[0] + 1.0,
            center[1] - 1.0,
            center[1] + 1.0,
            -10.0,
            +10.0,
        ]
        for rows in pixels:
            for pixel in rows:
                if pixel:
                    box = pv.Box(bounds=bounds)
                    plotter.add_mesh(box, color=color)
                bounds[0] += 2.0
                bounds[1] += 2.0
            bounds[0] = center[0] - 1.0
            bounds[1] = center[0] + 1.0
            bounds[2] += -2.0
            bounds[3] += -2.0
        return plotter









.. GENERATED FROM PYTHON SOURCE LINES 73-74

Now you can plot a pixel art of ALIEN MONSTERS.

.. GENERATED FROM PYTHON SOURCE LINES 74-93

.. code-block:: default


    # Display MONSTERS
    p = pv.Plotter()
    p = draw_pixels(p, alien, [-22.0, 22.0], "green")
    p = draw_pixels(p, alien, [0.0, 22.0], "green")
    p = draw_pixels(p, alien, [22.0, 22.0], "green")
    p = draw_pixels(p, alien, [-22.0, 0.0], "blue")
    p = draw_pixels(p, alien, [0.0, 0.0], "blue")
    p = draw_pixels(p, alien, [22.0, 0.0], "blue")
    p = draw_pixels(p, alien, [-22.0, -22.0], "red")
    p = draw_pixels(p, alien, [0.0, -22.0], "red")
    p = draw_pixels(p, alien, [22.0, -22.0], "red")

    text = logo.text_3d("ALIEN MONSTERS", depth=10.0)
    text.points *= 4.0
    text.translate([-20.0, 24.0, 0.0], inplace=True)

    p.add_mesh(text, color="yellow")
    p.show(cpos="xy")



.. image-sg:: /examples/00-load/images/sphx_glr_create-pixel-art_001.png
   :alt: create pixel art
   :srcset: /examples/00-load/images/sphx_glr_create-pixel-art_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.329 seconds)


.. _sphx_glr_download_examples_00-load_create-pixel-art.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: create-pixel-art.py <create-pixel-art.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: create-pixel-art.ipynb <create-pixel-art.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

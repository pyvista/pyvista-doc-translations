
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/00-load/create-truss.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_00-load_create-truss.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_00-load_create-truss.py:


.. _create_truss:

Plot Truss-like FEA Solution with Cylinders
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Plot connections between points in 3D as cylinders, colored by scalars.

.. GENERATED FROM PYTHON SOURCE LINES 11-16

.. code-block:: default


    import numpy as np

    import pyvista








.. GENERATED FROM PYTHON SOURCE LINES 17-19

Define the points and elements of the truss.  Call them ``nodes``
here as it comes from finite element analysis.

.. GENERATED FROM PYTHON SOURCE LINES 19-49

.. code-block:: default


    nodes = [
        [0.0, 0.0, 0.0],
        [0.0, 1.0, 0.0],
        [4.0, 3.0, 0.0],
        [4.0, 0.0, 0.0],
        [0.0, 1.0, 2.0],
        [4.0, 1.0, 2.0],
        [4.0, 3.0, 2.0]
        ]


    edges = np.array([
        [0, 4],
        [1, 4],
        [3, 4],
        [5, 4],
        [6, 4],
        [3, 5],
        [2, 5],
        [5, 6],
        [2, 6],
        ])

    # We must "pad" the edges to indicate to vtk how many points per edge
    padding = np.empty(edges.shape[0], int)*2
    padding[:] = 2
    edges_w_padding = np.vstack((padding, edges.T)).T
    edges_w_padding





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    array([[2, 0, 4],
           [2, 1, 4],
           [2, 3, 4],
           [2, 5, 4],
           [2, 6, 4],
           [2, 3, 5],
           [2, 2, 5],
           [2, 5, 6],
           [2, 2, 6]])



.. GENERATED FROM PYTHON SOURCE LINES 50-51

Plot the truss while rendering the lines as tubes.

.. GENERATED FROM PYTHON SOURCE LINES 51-62

.. code-block:: default


    mesh = pyvista.PolyData(nodes, edges_w_padding)

    colors = range(edges.shape[0])
    mesh.plot(scalars=colors,
              render_lines_as_tubes=True,
              style='wireframe',
              line_width=10,
              cmap='jet',
              show_scalar_bar=False,
              background='w')



.. image-sg:: /examples/00-load/images/sphx_glr_create-truss_001.png
   :alt: create truss
   :srcset: /examples/00-load/images/sphx_glr_create-truss_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.559 seconds)


.. _sphx_glr_download_examples_00-load_create-truss.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: create-truss.py <create-truss.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: create-truss.ipynb <create-truss.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

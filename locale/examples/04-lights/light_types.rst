
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/04-lights/light_types.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_04-lights_light_types.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_04-lights_light_types.py:


.. _light_types_example:

Light Types
~~~~~~~~~~~

Lights come in three types:

  * headlights, the axis of which always coincides with the view of the camera,
  * camera lights, which move together with the camera, but which can occupy
    any fixed relative position with respect to the camera,
  * scene lights, the position of which is fixed to the scene, and which is thus
    unaffected by moving the camera. This is the default type.

Headlight
=========

For headlights the :py:attr:`position` and :py:attr:`focal_point` properties
are meaningless. No matter where you move the camera, the light always emanates
from the view point:

.. GENERATED FROM PYTHON SOURCE LINES 22-40

.. code-block:: default

    # sphinx_gallery_thumbnail_number = 2
    import pyvista as pv
    from pyvista import examples

    mesh = examples.download_bunny()
    mesh.rotate_x(90)
    mesh.rotate_z(180)

    plotter = pv.Plotter(lighting='none')
    plotter.add_mesh(mesh, color='tan', smooth_shading=True)
    light = pv.Light(light_type='headlight')
    # these don't do anything for a headlight:
    light.position = (1, 2, 3)
    light.focal_point = (4, 5, 6)
    plotter.add_light(light)
    plotter.show()





.. image-sg:: /examples/04-lights/images/sphx_glr_light_types_001.png
   :alt: light types
   :srcset: /examples/04-lights/images/sphx_glr_light_types_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 41-50

Camera light
============

Camera lights define their :py:attr:`position` and :py:attr:`focal_point`
properties in a coordinate system that is local to the camera. The coordinates
in the scene's coordinate system can be accessed through the :py:attr:`world_position`
and :py:attr:`world_focal_point` read-only properties, respectively. For specifics
of the local coordinate system used for the coordinates please see the documentation
of :func:`pyvista.Light.set_camera_light`.

.. GENERATED FROM PYTHON SOURCE LINES 50-59

.. code-block:: default


    plotter = pv.Plotter(lighting='none')
    plotter.add_mesh(mesh, color='tan', smooth_shading=True)
    # a light that always shines from the right of the camera
    light = pv.Light(position=(1, 0, 0), light_type='camera light')
    plotter.add_light(light)
    plotter.show()





.. image-sg:: /examples/04-lights/images/sphx_glr_light_types_002.png
   :alt: light types
   :srcset: /examples/04-lights/images/sphx_glr_light_types_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 60-65

Scene light
===========

Scene lights are attached to the scene, their position and focal point are
interpreted as global coordinates:

.. GENERATED FROM PYTHON SOURCE LINES 65-72

.. code-block:: default


    plotter = pv.Plotter(lighting='none')
    plotter.add_mesh(mesh, color='tan', smooth_shading=True)
    # a light that always shines on the left side of the bunny
    light = pv.Light(position=(0, 1, 0), light_type='scene light')
    plotter.add_light(light)
    plotter.show()



.. image-sg:: /examples/04-lights/images/sphx_glr_light_types_003.png
   :alt: light types
   :srcset: /examples/04-lights/images/sphx_glr_light_types_003.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  3.075 seconds)


.. _sphx_glr_download_examples_04-lights_light_types.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: light_types.py <light_types.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: light_types.ipynb <light_types.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

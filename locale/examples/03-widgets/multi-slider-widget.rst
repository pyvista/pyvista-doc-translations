
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/03-widgets/multi-slider-widget.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_03-widgets_multi-slider-widget.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_03-widgets_multi-slider-widget.py:


Multiple Slider Widgets
~~~~~~~~~~~~~~~~~~~~~~~

Use a class based callback to track multiple slider widgets for updating a
single mesh.

In this example we simply change a few parameters for the
:func:`pyvista.Sphere` method, but this could easily be applied to any
mesh-generating/altering code.


.. GENERATED FROM PYTHON SOURCE LINES 13-36

.. code-block:: default

    import pyvista as pv


    class MyCustomRoutine():
        def __init__(self, mesh):
            self.output = mesh # Expected PyVista mesh type
            # default parameters
            self.kwargs = {
                'radius': 0.5,
                'theta_resolution': 30,
                'phi_resolution': 30,
            }

        def __call__(self, param, value):
            self.kwargs[param] = value
            self.update()

        def update(self):
            # This is where you call your simulation
            result = pv.Sphere(**self.kwargs)
            self.output.overwrite(result)
            return








.. GENERATED FROM PYTHON SOURCE LINES 37-41

.. code-block:: default


    starting_mesh = pv.Sphere()
    engine = MyCustomRoutine(starting_mesh)








.. GENERATED FROM PYTHON SOURCE LINES 42-70

.. code-block:: default


    p = pv.Plotter()
    p.add_mesh(starting_mesh, show_edges=True)
    p.add_slider_widget(
        callback=lambda value: engine('phi_resolution', int(value)),
        rng=[3, 60],
        value=30,
        title="Phi Resolution",
        pointa=(.025, .1), pointb=(.31, .1),
        style='modern',
    )
    p.add_slider_widget(
        callback=lambda value: engine('theta_resolution', int(value)),
        rng=[3, 60],
        value=30,
        title="Theta Resolution",
        pointa=(.35, .1), pointb=(.64, .1),
        style='modern',
    )
    p.add_slider_widget(
        callback=lambda value: engine('radius', value),
        rng=[0.1, 1.5],
        value=0.5,
        title="Radius",
        pointa=(.67, .1), pointb=(.98, .1),
        style='modern',
    )
    p.show()



.. image:: /examples/03-widgets/images/sphx_glr_multi-slider-widget_001.png
    :alt: multi slider widget
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [(1.9264490110725325, 1.9264490110725325, 1.9264490110725325),
     (0.0, 0.0, 0.0),
     (0.0, 0.0, 1.0)]




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.331 seconds)


.. _sphx_glr_download_examples_03-widgets_multi-slider-widget.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: multi-slider-widget.py <multi-slider-widget.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: multi-slider-widget.ipynb <multi-slider-widget.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_


.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/03-widgets/checkbox-widget.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_03-widgets_checkbox-widget.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_03-widgets_checkbox-widget.py:


.. _checkbox_widget_example:

Checkbox Widget
~~~~~~~~~~~~~~~

Use a checkbox to turn on/off the visibility of meshes in a scene.

See :func:`pyvista.Plotter.add_checkbox_button_widget` for more details.

.. GENERATED FROM PYTHON SOURCE LINES 12-14

.. code-block:: default

    import pyvista as pv








.. GENERATED FROM PYTHON SOURCE LINES 16-18

Single Checkbox
+++++++++++++++

.. GENERATED FROM PYTHON SOURCE LINES 18-32

.. code-block:: default


    mesh = pv.Sphere()

    p = pv.Plotter()
    actor = p.add_mesh(mesh)


    def toggle_vis(flag):
        actor.SetVisibility(flag)


    p.add_checkbox_button_widget(toggle_vis, value=True)
    p.show()




.. image-sg:: /examples/03-widgets/images/sphx_glr_checkbox-widget_001.png
   :alt: checkbox widget
   :srcset: /examples/03-widgets/images/sphx_glr_checkbox-widget_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 33-39

Multiple Checkboxes
+++++++++++++++++++

In this example, we will add many meshes to a scene with unique colors and
create corresponding checkboxes for those meshes of the same color to toggle
their visibility in the scene.

.. GENERATED FROM PYTHON SOURCE LINES 39-59

.. code-block:: default


    colors = [
        ["ff0000", "28e5da", "0000ff"],
        ["ffff00", "c8bebe", "f79292"],
        ["fffff0", "f18c1d", "23dcaa"],
        ["d785ec", "9d5b13", "e4e0b1"],
        ["894509", "af45f5", "fff000"],
    ]


    class SetVisibilityCallback:
        """Helper callback to keep a reference to the actor being modified."""

        def __init__(self, actor):
            self.actor = actor

        def __call__(self, state):
            self.actor.SetVisibility(state)









.. GENERATED FROM PYTHON SOURCE LINES 60-85

.. code-block:: default


    # Widget size
    size = 50

    p = pv.Plotter()

    Startpos = 12
    for i, lst in enumerate(colors):
        for j, color in enumerate(lst):
            actor = p.add_mesh(pv.Sphere(center=(i, j, 0)), color=color)
            # Make a separate callback for each widget
            callback = SetVisibilityCallback(actor)
            p.add_checkbox_button_widget(
                callback,
                value=True,
                position=(5.0, Startpos),
                size=size,
                border_size=1,
                color_on=color,
                color_off='grey',
                background_color='grey',
            )
            Startpos = Startpos + size + (size // 10)

    p.show()



.. image-sg:: /examples/03-widgets/images/sphx_glr_checkbox-widget_002.png
   :alt: checkbox widget
   :srcset: /examples/03-widgets/images/sphx_glr_checkbox-widget_002.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.787 seconds)


.. _sphx_glr_download_examples_03-widgets_checkbox-widget.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: checkbox-widget.py <checkbox-widget.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: checkbox-widget.ipynb <checkbox-widget.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

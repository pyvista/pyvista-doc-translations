
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/99-advanced/magnetic-fields.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_99-advanced_magnetic-fields.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_99-advanced_magnetic-fields.py:


.. _magnetic_fields_example:

Plot a Magnetic Field
---------------------

The following example demonstrates how PyVista can be used to plot a magnetic
field.

This example relies on :func:`streamlines_from_source()
<pyvista.PolyDataFilters.streamlines_from_source>` to generate streamlines and
:func:`add_volume() <pyvista.Plotter.add_volume>` to plot the strength of the
magnetic field.

This dataset was created from the `Coil Field Lines
<https://magpylib.readthedocs.io/en/latest/examples/examples_30_coil_field_lines.html>`_
example from the awesome `magpylib <https://github.com/magpylib/magpylib>`_
library.

.. GENERATED FROM PYTHON SOURCE LINES 21-27

.. code-block:: default


    import numpy as np

    import pyvista as pv
    from pyvista import examples








.. GENERATED FROM PYTHON SOURCE LINES 29-34

Download the DataSet
~~~~~~~~~~~~~~~~~~~~
Let's first download the example dataset and show that it's a
:class:`pyvista.UniformGrid` with the magnetic field stored as the ``'B'``
array in ``point_data``.

.. GENERATED FROM PYTHON SOURCE LINES 34-39

.. code-block:: default


    grid = examples.download_coil_magnetic_field()
    grid.point_data






.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    pyvista DataSetAttributes
    Association     : POINT
    Active Scalars  : B
    Active Vectors  : B
    Active Texture  : None
    Active Normals  : None
    Contains arrays :
        B                       float64    (531441, 3)          VECTORS



.. GENERATED FROM PYTHON SOURCE LINES 40-44

Create Coils
~~~~~~~~~~~~
Create several hoops to represent the coil. This matches the geometry in the
original example.

.. GENERATED FROM PYTHON SOURCE LINES 44-52

.. code-block:: default


    coils = []
    for z in np.linspace(-8, 8, 16):
        coils.append(pv.Polygon((0, 0, z), radius=5, n_sides=100, fill=False))
    coil_block = pv.MultiBlock(coils)
    coil_block.plot(render_lines_as_tubes=True, line_width=10)





.. image-sg:: /examples/99-advanced/images/sphx_glr_magnetic-fields_001.png
   :alt: magnetic fields
   :srcset: /examples/99-advanced/images/sphx_glr_magnetic-fields_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 53-58

Compute and Plot Field Lines
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Next, let's compute streamlines from the center of the coil to represent the
direction of the magnetic force. For this, we can create a simple
:func:`pyvista.Disc` and use that as the source of the streamlines.

.. GENERATED FROM PYTHON SOURCE LINES 58-79

.. code-block:: default


    seed = pv.Disc(inner=1, outer=5.4, r_res=2, c_res=12)
    strl = grid.streamlines_from_source(
        seed,
        vectors='B',
        max_time=180,
        initial_step_length=0.1,
        integration_direction='both',
    )

    pl = pv.Plotter()
    pl.add_mesh(
        strl.tube(radius=0.1),
        cmap='bwr',
        ambient=0.2,
    )
    pl.add_mesh(coil_block, render_lines_as_tubes=True, line_width=5, color='w')
    pl.camera.zoom(3)
    pl.show()





.. image-sg:: /examples/99-advanced/images/sphx_glr_magnetic-fields_002.png
   :alt: magnetic fields
   :srcset: /examples/99-advanced/images/sphx_glr_magnetic-fields_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 80-84

Plot the Magnet Field Strength
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Finally, let's bring this all together by plotting the magnetic field
strength while also plotting the streamlines and the coil.

.. GENERATED FROM PYTHON SOURCE LINES 84-109

.. code-block:: default


    # Take the norm of the magnetic field
    scalars = np.linalg.norm(grid['B'], axis=1)

    # Customize the opacity to make it easier to visualize the strength of the
    # field nearby the coil
    opacity = 1 - np.geomspace(1.0, 0.05, 10)

    # Add this all to the plotter
    pl = pv.Plotter()
    pl.add_mesh(
        strl.tube(radius=0.1),
        color='black',
    )
    pl.add_mesh(coil_block, render_lines_as_tubes=True, line_width=5, color='w')
    vol = pl.add_volume(
        grid,
        scalars=scalars,
        opacity=opacity,
        cmap='hot',
        show_scalar_bar=False,
    )
    vol.prop.interpolation_type = 'linear'
    pl.camera.zoom(5)
    pl.show()



.. image-sg:: /examples/99-advanced/images/sphx_glr_magnetic-fields_003.png
   :alt: magnetic fields
   :srcset: /examples/99-advanced/images/sphx_glr_magnetic-fields_003.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  10.073 seconds)


.. _sphx_glr_download_examples_99-advanced_magnetic-fields.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: magnetic-fields.py <magnetic-fields.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: magnetic-fields.ipynb <magnetic-fields.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

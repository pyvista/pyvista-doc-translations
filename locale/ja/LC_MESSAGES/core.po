# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017-2020, The PyVista Developers
# This file is distributed under the same license as the PyVista package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Tetsuo Koyama <tkoyama010@gmail.com>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyVista 0.26.b0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-08-19 00:26+0000\n"
"PO-Revision-Date: 2020-08-05 16:06+0000\n"
"Last-Translator: Tetsuo Koyama <tkoyama010@gmail.com>, 2020\n"
"Language-Team: Japanese (https://www.transifex.com/getfem-doc/teams/112279/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../pyvista/docs/core/common.rst:4
msgid "Datasets"
msgstr "データセット"

#: ../../pyvista/docs/core/common.rst:6
msgid ""
"Datasets are any spatially reference information and usually consist of "
"geometrical representations of a surface or volume in 3D space. In VTK, this"
" superclass is represented by the ``vtk.vtkDataSet`` abstract class."
msgstr ""
"データセットは任意の空間的参照情報であり、通常は3 D空間内の表面またはボリュームのジオメトリ表現で構成されます。VTKにおいて、このスーパークラスは "
"``vtk.vtkDataSet`` 抽象クラスによって表現されます。"

#: ../../pyvista/docs/core/common.rst:10
msgid ""
"In VTK, datasets consist of geometry, topology, and attributes to which "
"PyVista provides direct access:"
msgstr "VTKでは、データセットは、PyVistaが直接アクセスを提供するジオメトリ、トポロジ、およびアトリビュートで構成されます:"

#: ../../pyvista/docs/core/common.rst:13
msgid "Geometry is the collection of points and cells in 2D or 3D space."
msgstr "ジオメトリは、2 Dまたは3 D空間の点とセルの集合です。"

#: ../../pyvista/docs/core/common.rst:14
msgid ""
"Topology defines the structure of the dataset, or how the points are "
"connected to each other to form a cells making a surface or volume."
msgstr "トポロジは、データセットの構造、または表面やボリュームを作成するセルを形成するためにポイントを相互に接続する方法を定義します。"

#: ../../pyvista/docs/core/common.rst:15
msgid ""
"Attributes are any data values that are associated to either the points or "
"cells of the dataset"
msgstr "アトリビュートは、データセットの点またはセルのいずれかに関連付けられた任意のデータ値です。"

#: ../../pyvista/docs/core/common.rst:17
msgid ""
"All of the following data types are listed subclasses of a dataset and share"
" a set of common functionality which we wrap into the base class "
":class:`pyvista.Common`."
msgstr ""
"以下のデータタイプのすべては、データセットのサブクラスにリストされ、基本クラス :class:`pyvista.Common` "
"にラップする共通の機能セットを共有します。"

#: ../../pyvista/docs/core/common.rst:23
msgid "The Common Model"
msgstr "共通Model"

#: ../../pyvista/docs/core/common.rst:25
msgid ""
"The :class:`pyvista.Common` class holds attributes that are *common* to all "
"spatially referenced datasets in PyVista. This base class is analogous to "
"VTK's ``vtk.vtkDataSet`` class."
msgstr ""
":class:`pyvista.Common` クラスは、PyVistaで空間的に参照される全てのデータセットに *共通な* "
"アトリビュートを保持します。この基本クラスはVTKの ``vtk.vtkDataSet`` クラスに似ています。"

#: ../../pyvista/docs/core/common.rst:31
#: ../../pyvista/docs/core/composite.rst:11
#: ../../pyvista/docs/core/grids.rst:12 ../../pyvista/docs/core/grids.rst:33
#: ../../pyvista/docs/core/grids.rst:56 ../../pyvista/docs/core/objects.rst:9
#: ../../pyvista/docs/core/objects.rst:31
#: ../../pyvista/docs/core/point-grids.rst:282
#: ../../pyvista/docs/core/point-grids.rst:307
#: ../../pyvista/docs/core/point-grids.rst:330
#: ../../pyvista/docs/core/points.rst:123
msgid "Attributes"
msgstr "アトリビュート"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
msgid ":obj:`active_scalar <pyvista.Common.active_scalar>`\\"
msgstr ":obj:`active_scalar <pyvista.Common.active_scalar>`\\"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.active_scalar:1
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.active_scalars:1
msgid "Return the active scalars as an array."
msgstr "アクティブなスカラーを配列で返します。"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
msgid ":obj:`active_scalar_info <pyvista.Common.active_scalar_info>`\\"
msgstr ":obj:`active_scalar_info <pyvista.Common.active_scalar_info>`\\"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.active_scalar_info:1
msgid "Return the active scalar's field and name."
msgstr "アクティブなスカラーのフィールドと名前を返します。"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
msgid ":obj:`active_scalar_name <pyvista.Common.active_scalar_name>`\\"
msgstr ":obj:`active_scalar_name <pyvista.Common.active_scalar_name>`\\"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.active_scalar_name:1
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.active_scalars_name:1
msgid "Return the active scalar's name."
msgstr "アクティブなスカラーの名前を返します。"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
msgid ":obj:`active_scalars <pyvista.Common.active_scalars>`\\"
msgstr ":obj:`active_scalars <pyvista.Common.active_scalars>`\\"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
msgid ":obj:`active_scalars_info <pyvista.Common.active_scalars_info>`\\"
msgstr ":obj:`active_scalars_info <pyvista.Common.active_scalars_info>`\\"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.active_scalars_info:1
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.active_vectors_info:1
msgid "[field, name]."
msgstr "[field, name]."

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
msgid ":obj:`active_scalars_name <pyvista.Common.active_scalars_name>`\\"
msgstr ":obj:`active_scalars_name <pyvista.Common.active_scalars_name>`\\"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
msgid ":obj:`active_vectors <pyvista.Common.active_vectors>`\\"
msgstr ":obj:`active_vectors <pyvista.Common.active_vectors>`\\"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.active_vectors:1
msgid "Return the active vectors array."
msgstr "アクティブなベクトル配列を返します。"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
msgid ":obj:`active_vectors_info <pyvista.Common.active_vectors_info>`\\"
msgstr ":obj:`active_vectors_info <pyvista.Common.active_vectors_info>`\\"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
msgid ":obj:`active_vectors_name <pyvista.Common.active_vectors_name>`\\"
msgstr ":obj:`active_vectors_name <pyvista.Common.active_vectors_name>`\\"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.active_vectors_name:1
msgid "Return the name of the active vectors array."
msgstr "アクティブなベクトル配列の名前を返します。"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
msgid ":obj:`array_names <pyvista.Common.array_names>`\\"
msgstr ":obj:`array_names <pyvista.Common.array_names>`\\"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.array_names:1
msgid "Return a list of array names for the dataset."
msgstr "データセットの配列名のリストを返します。"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
msgid ":obj:`arrows <pyvista.Common.arrows>`\\"
msgstr ":obj:`arrows <pyvista.Common.arrows>`\\"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.arrows:1
msgid "Return a glyph representation of the active vector data as arrows."
msgstr "アクティブなベクトルデータのグリフ表現を矢印で返します。"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
msgid ":obj:`bounds <pyvista.Common.bounds>`\\"
msgstr ":obj:`bounds <pyvista.Common.bounds>`\\"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.bounds:1
msgid "Return the bounding box of this dataset."
msgstr "このデータセットの境界ボックスを返します。"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
msgid ":obj:`cell_arrays <pyvista.Common.cell_arrays>`\\"
msgstr ":obj:`cell_arrays <pyvista.Common.cell_arrays>`\\"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.cell_arrays:1
msgid "Return vtkCellData as DataSetAttributes."
msgstr "DataSetAttributesとしてvtkCellDataを返します。"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
msgid ":obj:`center <pyvista.Common.center>`\\"
msgstr ":obj:`center <pyvista.Common.center>`\\"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.center:1
#: ../../pyvista/docs/core/composite.rst:14:<autosummary>:1
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.center:1
msgid "Return the center of the bounding box."
msgstr "境界ボックスの中心を返します。"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
msgid ":obj:`extent <pyvista.Common.extent>`\\"
msgstr ":obj:`extent <pyvista.Common.extent>`\\"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.extent:1
msgid "Return the range of the bounding box."
msgstr "バウンディングボックスの範囲を返します。"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
msgid ":obj:`length <pyvista.Common.length>`\\"
msgstr ":obj:`length <pyvista.Common.length>`\\"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.length:1
#: ../../pyvista/docs/core/composite.rst:14:<autosummary>:1
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.length:1
msgid "Return the length of the diagonal of the bounding box."
msgstr "境界ボックスの対角線の長さを返します。"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
msgid ":obj:`n_arrays <pyvista.Common.n_arrays>`\\"
msgstr ":obj:`n_arrays <pyvista.Common.n_arrays>`\\"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.n_arrays:1
msgid "Return the number of arrays present in the dataset."
msgstr "データセット内に存在する配列の数を返します。"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
msgid ":obj:`n_cells <pyvista.Common.n_cells>`\\"
msgstr ":obj:`n_cells <pyvista.Common.n_cells>`\\"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.n_cells:1
msgid "Return the number of cells in the entire dataset."
msgstr "データセット全体のセル数を返します。"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
msgid ":obj:`n_points <pyvista.Common.n_points>`\\"
msgstr ":obj:`n_points <pyvista.Common.n_points>`\\"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.n_points:1
msgid "Return the number of points in the entire dataset."
msgstr "データセット全体のポイント数を返します。"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
msgid ":obj:`n_scalars <pyvista.Common.n_scalars>`\\"
msgstr ":obj:`n_scalars <pyvista.Common.n_scalars>`\\"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.n_scalars:1
msgid "Return the number of scalars."
msgstr "スカラーの数を返します。"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
msgid ":obj:`number_of_cells <pyvista.Common.number_of_cells>`\\"
msgstr ":obj:`number_of_cells <pyvista.Common.number_of_cells>`\\"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.number_of_cells:1
#: ../../pyvista/docs/core/points.rst:126:<autosummary>:1
#: ../../pyvista/docs/core/points.rst:126:<autosummary>:1
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.n_faces:1 ../../pyvista/pyvista/core/pointset.pydocstring
#: of pyvista.PolyData.number_of_faces:1
msgid "Return the number of cells."
msgstr "セルの数を返します。"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
msgid ":obj:`number_of_points <pyvista.Common.number_of_points>`\\"
msgstr ":obj:`number_of_points <pyvista.Common.number_of_points>`\\"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.number_of_points:1
msgid "Return the number of points."
msgstr "ポイント数を返します。"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
msgid ":obj:`point_arrays <pyvista.Common.point_arrays>`\\"
msgstr ":obj:`point_arrays <pyvista.Common.point_arrays>`\\"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.point_arrays:1
msgid "Return vtkPointData as DataSetAttributes."
msgstr "DataSetAttributesとしてvtkPointDataを返します。"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
msgid ":obj:`points <pyvista.Common.points>`\\"
msgstr ":obj:`points <pyvista.Common.points>`\\"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.points:1
#: ../../pyvista/docs/core/points.rst:126:<autosummary>:1
#: ../../pyvista/pyvista/core/pointset.pydocstring of pyvista.PolyData.faces:1
msgid "Return a pointer to the points as a numpy object."
msgstr "ポイントへのポインタをnumpyオブジェクトとして返します。"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
msgid ":obj:`scalar_names <pyvista.Common.scalar_names>`\\"
msgstr ":obj:`scalar_names <pyvista.Common.scalar_names>`\\"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.scalar_names:1
msgid "Return the array names."
msgstr "配列名を返します。"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
msgid ":obj:`t_coords <pyvista.Common.t_coords>`\\"
msgstr ":obj:`t_coords <pyvista.Common.t_coords>`\\"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.t_coords:1
msgid "Return the active texture coordinates on the points."
msgstr "ポイント上のアクティブなテクスチャ座標を返します。"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
msgid ":obj:`textures <pyvista.Common.textures>`\\"
msgstr ":obj:`textures <pyvista.Common.textures>`\\"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.textures:1
msgid "Return a dictionary to hold compatible ``vtk.vtkTexture`` objects."
msgstr "互換性のある ``vtk.vtkTexture`` オブジェクトを保持する辞書を返します。"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
msgid ":obj:`vectors <pyvista.Common.vectors>`\\"
msgstr ":obj:`vectors <pyvista.Common.vectors>`\\"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.vectors:1
msgid "Return active vectors."
msgstr "アクティブなベクトルを返します。"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
msgid ":obj:`volume <pyvista.Common.volume>`\\"
msgstr ":obj:`volume <pyvista.Common.volume>`\\"

#: ../../pyvista/docs/core/common.rst:34:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.volume:1
#: ../../pyvista/docs/core/points.rst:126:<autosummary>:1
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.volume:1
msgid "Return the mesh volume."
msgstr "メッシュボリュームを返します。"

#: ../../pyvista/docs/core/common.rst:36
#: ../../pyvista/docs/core/composite.rst:16
#: ../../pyvista/docs/core/filters.rst:20
#: ../../pyvista/docs/core/filters.rst:40
#: ../../pyvista/docs/core/filters.rst:59
#: ../../pyvista/docs/core/filters.rst:79
#: ../../pyvista/docs/core/filters.rst:98 ../../pyvista/docs/core/grids.rst:17
#: ../../pyvista/docs/core/grids.rst:38 ../../pyvista/docs/core/grids.rst:61
#: ../../pyvista/docs/core/objects.rst:14
#: ../../pyvista/docs/core/objects.rst:36
#: ../../pyvista/docs/core/point-grids.rst:287
#: ../../pyvista/docs/core/point-grids.rst:312
#: ../../pyvista/docs/core/point-grids.rst:335
#: ../../pyvista/docs/core/points.rst:128
msgid "Methods"
msgstr "メソッド"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
msgid ""
":obj:`cast_to_unstructured_grid "
"<pyvista.Common.cast_to_unstructured_grid>`\\ \\(\\)"
msgstr ""
":obj:`cast_to_unstructured_grid "
"<pyvista.Common.cast_to_unstructured_grid>`\\ \\(\\)"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.cast_to_unstructured_grid:1
msgid ""
"Get a new representation of this object as an "
":class:`pyvista.UnstructuredGrid`."
msgstr "このオブジェクトの新しい表現を :class:`pyvista.UnstructuredGrid` として取得します。"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
msgid ":obj:`clear_arrays <pyvista.Common.clear_arrays>`\\ \\(\\)"
msgstr ":obj:`clear_arrays <pyvista.Common.clear_arrays>`\\ \\(\\)"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.clear_arrays:1
msgid "Remove all arrays from point/cell/field data."
msgstr "点/セル/フィールドデータからすべての配列を削除します。"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
msgid ":obj:`clear_cell_arrays <pyvista.Common.clear_cell_arrays>`\\ \\(\\)"
msgstr ":obj:`clear_cell_arrays <pyvista.Common.clear_cell_arrays>`\\ \\(\\)"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.clear_cell_arrays:1
msgid "Remove all cell arrays."
msgstr "すべてのセル配列を削除します。"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
msgid ":obj:`clear_point_arrays <pyvista.Common.clear_point_arrays>`\\ \\(\\)"
msgstr ":obj:`clear_point_arrays <pyvista.Common.clear_point_arrays>`\\ \\(\\)"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.clear_point_arrays:1
msgid "Remove all point arrays."
msgstr "すべての点配列を削除します。"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
msgid ":obj:`clear_textures <pyvista.Common.clear_textures>`\\ \\(\\)"
msgstr ":obj:`clear_textures <pyvista.Common.clear_textures>`\\ \\(\\)"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.clear_textures:1
msgid "Clear the textures from this mesh."
msgstr "このメッシュからテクスチャをクリアします。"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
msgid ":obj:`copy_meta_from <pyvista.Common.copy_meta_from>`\\ \\(ido\\)"
msgstr ":obj:`copy_meta_from <pyvista.Common.copy_meta_from>`\\ \\(ido\\)"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.copy_meta_from:1
#: ../../pyvista/docs/core/composite.rst:20:<autosummary>:1
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.copy_meta_from:1
#: ../../pyvista/docs/core/objects.rst:17:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.DataObject.copy_meta_from:1
msgid "Copy pyvista meta data onto this object from another object."
msgstr "別のオブジェクトからこのオブジェクトにpyvistaメタデータをコピーします。"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
msgid ""
":obj:`find_closest_point <pyvista.Common.find_closest_point>`\\ "
"\\(point\\[\\, n\\]\\)"
msgstr ""
":obj:`find_closest_point <pyvista.Common.find_closest_point>`\\ "
"\\(point\\[\\, n\\]\\)"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.find_closest_point:1
msgid "Find index of closest point in this mesh to the given point."
msgstr "このメッシュ内の指定したポイントに最も近いポイントのインデックスを検索します。"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
msgid ":obj:`get_array <pyvista.Common.get_array>`\\ \\(name\\[\\, preference\\, info\\]\\)"
msgstr ""
":obj:`get_array <pyvista.Common.get_array>`\\ \\(name\\[\\, preference\\, "
"info\\]\\)"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.get_array:1
msgid "Search both point, cell and field data for an array."
msgstr "点、セル、フィールドのデータの両方から配列を検索します。"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
msgid ""
":obj:`get_data_range <pyvista.Common.get_data_range>`\\ \\(\\[arr\\, "
"preference\\]\\)"
msgstr ""
":obj:`get_data_range <pyvista.Common.get_data_range>`\\ \\(\\[arr\\, "
"preference\\]\\)"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.get_data_range:1
#: ../../pyvista/docs/core/objects.rst:17:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.DataObject.get_data_range:1
#: ../../pyvista/docs/core/objects.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.Table.get_data_range:1
msgid "Get the non-NaN min and max of a named array."
msgstr "指定した配列のNaN以外の最小値と最大値を取得します。"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
msgid ":obj:`overwrite <pyvista.Common.overwrite>`\\ \\(mesh\\)"
msgstr ":obj:`overwrite <pyvista.Common.overwrite>`\\ \\(mesh\\)"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.overwrite:1
msgid "Overwrite this mesh inplace with the new mesh's geometries and data."
msgstr "このメッシュインプレイスを新しいメッシュのジオメトリとデータで上書きします。"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
msgid ""
":obj:`plot <pyvista.Common.plot>`\\ \\(\\[off\\_screen\\, full\\_screen\\, "
"screenshot\\, ...\\]\\)"
msgstr ""
":obj:`plot <pyvista.Common.plot>`\\ \\(\\[off\\_screen\\, full\\_screen\\, "
"screenshot\\, ...\\]\\)"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.plot:1
#: ../../pyvista/docs/core/composite.rst:20:<autosummary>:1
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.plot:1
msgid "Plot a vtk or numpy object."
msgstr "vtkまたはnumpyオブジェクトをプロットします。"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
msgid ":obj:`points_to_double <pyvista.Common.points_to_double>`\\ \\(\\)"
msgstr ":obj:`points_to_double <pyvista.Common.points_to_double>`\\ \\(\\)"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.points_to_double:1
msgid "Make points double precision."
msgstr "ポイントを倍精度にします。"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
msgid ""
":obj:`rename_array <pyvista.Common.rename_array>`\\ \\(old\\_name\\, "
"new\\_name\\[\\, preference\\]\\)"
msgstr ""
":obj:`rename_array <pyvista.Common.rename_array>`\\ \\(old\\_name\\, "
"new\\_name\\[\\, preference\\]\\)"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.rename_array:1
msgid "Change array name by searching for the array then renaming it."
msgstr "配列名を変更するには、配列を検索して名前を変更します。"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
msgid ""
":obj:`rename_scalar <pyvista.Common.rename_scalar>`\\ \\(old\\_name\\, "
"new\\_name\\[\\, preference\\]\\)"
msgstr ""
":obj:`rename_scalar <pyvista.Common.rename_scalar>`\\ \\(old\\_name\\, "
"new\\_name\\[\\, preference\\]\\)"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.rename_scalar:1
msgid "Change an array name by searching for the array then renaming it."
msgstr "配列名を変更するには、配列を検索して名前を変更します。"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
msgid ":obj:`rotate_x <pyvista.Common.rotate_x>`\\ \\(angle\\)"
msgstr ":obj:`rotate_x <pyvista.Common.rotate_x>`\\ \\(angle\\)"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.rotate_x:1
msgid "Rotate mesh about the x-axis."
msgstr "メッシュをX軸を中心に回転します。"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
msgid ":obj:`rotate_y <pyvista.Common.rotate_y>`\\ \\(angle\\)"
msgstr ":obj:`rotate_y <pyvista.Common.rotate_y>`\\ \\(angle\\)"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.rotate_y:1
msgid "Rotate mesh about the y-axis."
msgstr "メッシュをY軸を中心に回転します。"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
msgid ":obj:`rotate_z <pyvista.Common.rotate_z>`\\ \\(angle\\)"
msgstr ":obj:`rotate_z <pyvista.Common.rotate_z>`\\ \\(angle\\)"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.rotate_z:1
msgid "Rotate mesh about the z-axis."
msgstr "メッシュをZ軸を中心に回転します。"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
msgid ""
":obj:`set_active_scalar <pyvista.Common.set_active_scalar>`\\ \\(name\\[\\, "
"preference\\]\\)"
msgstr ""
":obj:`set_active_scalar <pyvista.Common.set_active_scalar>`\\ \\(name\\[\\, "
"preference\\]\\)"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.set_active_scalar:1
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.set_active_scalars:1
msgid "Find the scalars by name and appropriately sets it as active."
msgstr "スカラーを名前で検索し、適切にアクティブに設定します。"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
msgid ""
":obj:`set_active_scalars <pyvista.Common.set_active_scalars>`\\ "
"\\(name\\[\\, preference\\]\\)"
msgstr ""
":obj:`set_active_scalars <pyvista.Common.set_active_scalars>`\\ "
"\\(name\\[\\, preference\\]\\)"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
msgid ""
":obj:`set_active_vectors <pyvista.Common.set_active_vectors>`\\ "
"\\(name\\[\\, preference\\]\\)"
msgstr ""
":obj:`set_active_vectors <pyvista.Common.set_active_vectors>`\\ "
"\\(name\\[\\, preference\\]\\)"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.set_active_vectors:1
msgid "Find the vectors by name and appropriately sets it as active."
msgstr "ベクトルを名前で検索し、適切にアクティブに設定します。"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
msgid ":obj:`transform <pyvista.Common.transform>`\\ \\(trans\\)"
msgstr ":obj:`transform <pyvista.Common.transform>`\\ \\(trans\\)"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.transform:1
msgid "Compute a transformation in place using a 4x4 transform."
msgstr "4 x 4変換を使用して、その場の変換を計算します。"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
msgid ":obj:`translate <pyvista.Common.translate>`\\ \\(xyz\\)"
msgstr ":obj:`translate <pyvista.Common.translate>`\\ \\(xyz\\)"

#: ../../pyvista/docs/core/common.rst:40:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.translate:1
msgid "Translate the mesh."
msgstr "メッシュを移動します。"

#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common:1
msgid ""
"Bases: :class:`pyvista.core.filters.DataSetFilters`, "
":class:`pyvista.core.common.DataObject`"
msgstr ""
"基底: :class:`pyvista.core.filters.DataSetFilters`, "
":class:`pyvista.core.common.DataObject`"

#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common:1
msgid "Methods in common to spatially referenced objects."
msgstr "空間的に参照されるオブジェクトに共通するメソッド。"

#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.active_scalar:3
msgid "DEPRECATED: Please use `.active_scalars` instead."
msgstr "非推奨: 代わりに `.active_scalars` を使用してください。"

#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.active_scalar_info:3
msgid "DEPRECATED: use `.active_scalars_info` instead"
msgstr "非推奨: use `.active_scalars_info` instead"

#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.active_scalars_info:0
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.active_vectors_info:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.cells:0
msgid "type"
msgstr "型"

#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.active_scalars_info:3
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.active_vectors_info:3
msgid "Return the active scalar's field and name"
msgstr "アクティブスカラーのフィールドと名前を返す"

#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.array_names:3
msgid "This makes sure to put the active scalars' name first in the list."
msgstr "これにより、アクティブなスカラーの名前がリストの先頭に配置されます。"

#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.arrows:3
msgid ""
"Arrows will be located at the points of the mesh and their size will be "
"dependent on the length of the vector. Their direction will be the "
"\"direction\" of the vector"
msgstr "矢印はメッシュのポイントに配置され、そのサイズはベクトルの長さに依存します。それらの方向はベクトルの \"direction\" である"

#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.arrows:0
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.find_closest_point:0
#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.plot:0
#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.volume:0
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.bounds:0
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.copy:0 ../../pyvista/pyvista/core/composite.pydocstring
#: of pyvista.MultiBlock.plot:0
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.volume:0 ../../pyvista/pyvista/core/filters.pydocstring
#: of pyvista.DataSetFilters.extract_cells:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_edges:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_feature_edges:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_largest:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_points:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_surface:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.merge:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.sample_over_line:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.surface_indices:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.triangulate:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.warp_by_vector:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.boolean_add:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.boolean_cut:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.boolean_difference:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.boolean_union:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.clean:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.compute_normals:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.curvature:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.decimate:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.decimate_pro:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.fill_holes:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.geodesic:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.geodesic_distance:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.plot_curvature:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.ray_trace:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.remove_points:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.smooth:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.subdivide:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.triangulate:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.tube:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.triangulate:0
#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.DataObject.copy:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.linear_copy:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PointGrid.plot_curvature:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of pyvista.PolyData.area:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.volume:0
msgid "Returns"
msgstr "戻り値"

#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.arrows:7
msgid "**arrows** -- Active scalars represented as arrows."
msgstr "**arrows** -- アクティブなスカラーは矢印で表されます。"

#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.arrows:0
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.find_closest_point:0
#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.volume:0
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.bounds:0
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.copy:0 ../../pyvista/pyvista/core/composite.pydocstring
#: of pyvista.MultiBlock.volume:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_cells:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_edges:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_feature_edges:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_largest:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_points:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_surface:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.merge:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.sample_over_line:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.surface_indices:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.triangulate:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.warp_by_vector:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.boolean_add:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.boolean_cut:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.boolean_difference:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.boolean_union:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.clean:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.compute_normals:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.curvature:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.decimate:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.decimate_pro:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.fill_holes:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.geodesic:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.geodesic_distance:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.plot_curvature:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.smooth:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.subdivide:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.triangulate:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.tube:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.triangulate:0
#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.DataObject.copy:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.linear_copy:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PointGrid.plot_curvature:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of pyvista.PolyData.area:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.volume:0
msgid "Return type"
msgstr "戻り値の型"

#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.bounds:3
msgid "The form is: (xmin,xmax, ymin,ymax, zmin,zmax)."
msgstr "形式は (xmin,xmax, ymin,ymax, zmin,zmax) です。"

#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.find_closest_point:3
msgid ""
"If wanting to query many points, use a KDTree with scipy or another library "
"as those implementations will be easier to work with."
msgstr ""
"多数の点をクエリーする場合は、scipyまたは別のライブラリを含むKDTreeを使用します。これは、これらの実装での作業が簡単になるためです。"

#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.find_closest_point:6
msgid "See: https://github.com/pyvista/pyvista-support/issues/107"
msgstr "参照: https://github.com/pyvista/pyvista-support/issues/107"

#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.find_closest_point:0
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.get_data_range:0
#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.overwrite:0
#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.plot:0
#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.rotate_x:0
#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.rotate_y:0
#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.rotate_z:0
#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.transform:0
#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.translate:0
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.clean:0 ../../pyvista/pyvista/core/composite.pydocstring
#: of pyvista.MultiBlock.copy:0
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.plot:0 ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.cell_centers:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.cell_data_to_point_data:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.clip:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.clip_box:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.clip_surface:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_cell_quality:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_cell_sizes:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_derivative:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_gradient:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_implicit_distance:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.connectivity:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.contour:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.decimate_boundary:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.delaunay_3d:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.elevation:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_all_edges:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_cells:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_edges:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_feature_edges:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_largest:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_points:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_surface:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.glyph:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.interpolate:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.merge:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.outline:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.outline_corners:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.plot_over_line:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.point_data_to_cell_data:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.probe:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.sample:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.sample_over_line:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.select_enclosed_points:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.slice:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.slice_along_axis:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.slice_along_line:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.slice_orthogonal:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.split_bodies:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.streamlines:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.texture_map_to_plane:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.threshold:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.threshold_percent:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.triangulate:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.warp_by_scalar:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.warp_by_vector:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.wireframe:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.boolean_add:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.boolean_cut:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.boolean_difference:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.boolean_union:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.clean:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.compute_normals:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.curvature:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.decimate:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.decimate_pro:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.delaunay_2d:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.edge_mask:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.extrude:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.fill_holes:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.geodesic:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.geodesic_distance:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.plot_boundaries:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.plot_curvature:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.ray_trace:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.remove_points:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.ribbon:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.smooth:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.strip:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.subdivide:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.triangulate:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.tube:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.UnstructuredGridFilters.delaunay_2d:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.UniformGridFilters.extract_subset:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.UniformGridFilters.gaussian_smooth:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.cell_centers:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.cell_data_to_point_data:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.clip:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.clip_box:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.combine:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.compute_cell_sizes:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.elevation:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.extract_all_edges:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.outline:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.outline_corners:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.point_data_to_cell_data:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.slice:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.slice_along_axis:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.slice_along_line:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.slice_orthogonal:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.triangulate:0
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.wireframe:0
#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.DataObject.copy:0
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.DataObject.get_data_range:0
#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.DataObject.save:0
#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.Table.get_data_range:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.linear_copy:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.StructuredGrid.hide_cells:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PointGrid.plot_curvature:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of pyvista.PolyData.save:0
msgid "Parameters"
msgstr "パラメータ"

#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.find_closest_point:8
msgid "Length 3 coordinate of the point to query."
msgstr "クエリーする点の長さ3座標。"

#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.find_closest_point:10
msgid ""
"If greater than ``1``, returns the indices of the ``n`` closest points."
msgstr "``1`` より大きい場合は、 ``n`` の最も近いポイントのインデックスを返します。"

#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.find_closest_point:14
msgid "**int**"
msgstr "**int**"

#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.get_data_range:3
msgid ""
"The name of the array to get the range. If None, the active scalars is used."
msgstr "範囲を取得する配列の名前を指定します。Noneの場合、アクティブなスカラーが使用されます。"

#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.get_data_range:6
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.DataObject.get_data_range:6
msgid ""
"When scalars is specified, this is the preferred array type to search for in"
" the dataset.  Must be either ``'point'``, ``'cell'``, or ``'field'``."
msgstr ""
"スカラーが指定されている場合、これはデータセット内で検索するために推奨される配列型です。 ``'point'`` 、 ``'cell'`` 、または "
"``'field'`` のいずれかである必要があります。"

#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.n_scalars:3
msgid "DEPRECATED: Please use `n_arrays` instead."
msgstr "非推奨: 代わりに `n_arrays` を使用してください。"

#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.overwrite:3
msgid "The overwriting mesh."
msgstr "上書きするメッシュ。"

#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.plot:3
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.plot:3
msgid "VTK object or numpy array to be plotted."
msgstr "プロットするVTKオブジェクトまたは数値配列。"

#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.plot:5
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.plot:5
msgid ""
"Plots off screen when True.  Helpful for saving screenshots without a window"
" popping up."
msgstr "Trueの場合、画面からプロットします。ウィンドウをポップアップしないでスクリーンショットを保存するのに便利です。"

#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.plot:8
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.plot:8
msgid ""
"Opens window in full screen.  When enabled, ignores window_size. Default "
"False."
msgstr "ウィンドウを全画面で開きます。有効にすると、window_sizeは無視されます。既定値はFalseです。"

#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.plot:11
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.plot:11
msgid ""
"Saves screenshot to file when enabled.  See: "
"help(pyvistanterface.Plotter.screenshot).  Default disabled.  When True, "
"takes screenshot and returns numpy array of image."
msgstr ""
"有効にすると、スクリーンショットをファイルに保存します。help(pyvistanterface.Plotter.screenshot) "
"を参照してください。デフォルトは無効です。Trueの場合、スクリーンショットを取得し、画像の配列を返します。"

#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.plot:11
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.plot:11
msgid ""
"Saves screenshot to file when enabled.  See: "
"help(pyvistanterface.Plotter.screenshot).  Default disabled."
msgstr ""
"有効にすると、スクリーンショットをファイルに保存します。help(pyvistanterface.Plotter.screenshot) "
"を参照してください。デフォルトは無効です。"

#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.plot:14
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.plot:14
msgid "When True, takes screenshot and returns numpy array of image."
msgstr "Trueの場合、スクリーンショットを取得し画像の配列を返します。"

#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.plot:16
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.plot:16
msgid "Window size in pixels.  Defaults to [1024, 768]"
msgstr " ピクセル単位のウィンドウのサイズ。デフォルトは [1024, 768] です。"

#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.plot:18
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.plot:18
msgid ""
"Shows mesh bounds when True.  Default False. Alias ``show_grid`` also "
"accepted."
msgstr "Trueの場合、メッシュ境界を表示します。既定値はFalseです。エイリアス ``show_grid`` も使用できます。"

#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.plot:21
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.plot:21
msgid ""
"When True, the resulting plot is placed inline a jupyter notebook. Assumes a"
" jupyter console is active."
msgstr "Trueの場合、作成されたプロットはjupyterノートブック内に配置されます。jupyterコンソールがアクティブであると仮定します。"

#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.plot:24
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.plot:24
msgid "Shows a vtk axes widget.  Enabled by default."
msgstr "vtk軸ウィジェットを表示します。既定では有効になっています。"

#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.plot:26
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.plot:26
msgid "Adds text at the bottom of the plot."
msgstr "プロットの下部にテキストを追加します。"

#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.plot:28
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.plot:28
msgid "Use the ``add_volume`` method for volume rendering."
msgstr "ボリュームレンダリングには ``add_volume`` 方式を使用してください。"

#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.plot:30
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.plot:30
msgid "See help(Plotter.add_mesh) for additional options."
msgstr "その他のオプションについては、ヘルプ (Plotter.add_mesh) を参照してください。"

#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.plot:33
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.plot:33
msgid ""
"* **cpos** (*list*) -- List of camera position, focal point, and view up. * "
"**img** (*numpy.ndarray*) -- Array containing pixel RGB and alpha.  Sized:"
"   [Window height x Window width x 3] for transparent_background=False   "
"[Window height x Window width x 4] for transparent_background=True   "
"Returned only when screenshot enabled"
msgstr ""

#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.plot:33
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.plot:33
msgid ""
"**cpos** (*list*) -- List of camera position, focal point, and view up."
msgstr "**cpos** (*list*) -- カメラ位置、焦点、およびビューアップのリスト。"

#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.plot:34
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.plot:34
msgid ""
"**img** (*numpy.ndarray*) -- Array containing pixel RGB and alpha.  Sized: "
"[Window height x Window width x 3] for transparent_background=False [Window "
"height x Window width x 4] for transparent_background=True Returned only "
"when screenshot enabled"
msgstr ""

#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.rename_scalar:3
msgid "DEPRECATED: please use `.rename_array` instead."
msgstr "非推奨: please use `.rename_array` を使用してください。"

#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.rotate_x:3
msgid "Angle in degrees to rotate about the x-axis."
msgstr "X軸を中心に回転する度単位の角度。"

#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.rotate_y:3
msgid "Angle in degrees to rotate about the y-axis."
msgstr "Y軸を中心に回転する度単位の角度。"

#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.rotate_z:3
msgid "Angle in degrees to rotate about the z-axis."
msgstr "Z軸を中心に回転する度単位の角度。"

#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.scalar_names:3
msgid "DEPRECATED: Please use `array_names` instead."
msgstr "非推奨: 代わりに `array_names` を使用してください。"

#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.set_active_scalar:3
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.set_active_scalars:3
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.Common.set_active_vectors:3
msgid "To deactivate any active scalars, pass ``None`` as the ``name``."
msgstr "アクティブなスカラーを非アクティブにするには、 ``None`` を ``name`` として渡します。"

#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.textures:3
msgid ""
"When casting back to a VTK dataset or filtering this dataset, these textures"
" will not be passed."
msgstr "VTKデータセットにキャストバックするとき、またはこのデータセットをフィルタリングするとき、これらのテクスチャは渡されません。"

#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.transform:3
msgid "Accepts a vtk transformation object or a 4x4 transformation matrix."
msgstr "vtk変換オブジェクトまたは4 x 4変換行列を受け入れます。"

#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.translate:3
msgid "Length 3 list or array."
msgstr "長さ3のリストまたは配列。"

#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.Common.volume:3
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.volume:3 ../../pyvista/pyvista/core/pointset.pydocstring
#: of pyvista.PolyData.volume:5
msgid "**volume** -- Total volume of the mesh."
msgstr "**volume** -- メッシュの合計ボリュームです。"

#: ../../pyvista/docs/core/composite.rst:2
msgid "Composite Datasets"
msgstr "複合データセット"

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite:1
msgid "Container to mimic ``vtkMultiBlockDataSet`` objects."
msgstr "``vtkMultiBlockDataSet`` オブジェクトを模倣するコンテナです。"

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite:3
msgid ""
"These classes hold many VTK datasets in one object that can be passed to VTK"
" algorithms and PyVista filtering/plotting routines."
msgstr ""
"これらのクラスは、多くのVTKデータセットを1つのオブジェクトに保持し、VTKアルゴリズムとPyVistaフィルタリング/描画ルーチンに渡すことができます。"

#: ../../pyvista/docs/core/composite.rst:8
msgid "MultiBlock Datasets"
msgstr "マルチブロックデータセット"

#: ../../pyvista/docs/core/composite.rst:14:<autosummary>:1
msgid ":obj:`bounds <pyvista.core.composite.pyvista.MultiBlock.bounds>`\\"
msgstr ":obj:`bounds <pyvista.core.composite.pyvista.MultiBlock.bounds>`\\"

#: ../../pyvista/docs/core/composite.rst:14:<autosummary>:1
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.bounds:1
msgid "Find min/max for bounds across blocks."
msgstr "ブロック間の境界の最小/最大を検索します。"

#: ../../pyvista/docs/core/composite.rst:14:<autosummary>:1
msgid ":obj:`center <pyvista.core.composite.pyvista.MultiBlock.center>`\\"
msgstr ":obj:`center <pyvista.core.composite.pyvista.MultiBlock.center>`\\"

#: ../../pyvista/docs/core/composite.rst:14:<autosummary>:1
msgid ":obj:`length <pyvista.core.composite.pyvista.MultiBlock.length>`\\"
msgstr ":obj:`length <pyvista.core.composite.pyvista.MultiBlock.length>`\\"

#: ../../pyvista/docs/core/composite.rst:14:<autosummary>:1
msgid ":obj:`n_blocks <pyvista.core.composite.pyvista.MultiBlock.n_blocks>`\\"
msgstr ":obj:`n_blocks <pyvista.core.composite.pyvista.MultiBlock.n_blocks>`\\"

#: ../../pyvista/docs/core/composite.rst:14:<autosummary>:1
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.n_blocks:1
msgid "Return the total number of blocks set."
msgstr "ブロックセットの総数を返します。"

#: ../../pyvista/docs/core/composite.rst:14:<autosummary>:1
msgid ":obj:`volume <pyvista.core.composite.pyvista.MultiBlock.volume>`\\"
msgstr ":obj:`volume <pyvista.core.composite.pyvista.MultiBlock.volume>`\\"

#: ../../pyvista/docs/core/composite.rst:14:<autosummary>:1
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.volume:1
msgid "Return the total volume of all meshes in this dataset."
msgstr "このデータセット内のすべてのメッシュの合計ボリュームを返します。"

#: ../../pyvista/docs/core/composite.rst:20:<autosummary>:1
msgid ""
":obj:`append <pyvista.core.composite.pyvista.MultiBlock.append>`\\ "
"\\(data\\)"
msgstr ""
":obj:`append <pyvista.core.composite.pyvista.MultiBlock.append>`\\ "
"\\(data\\)"

#: ../../pyvista/docs/core/composite.rst:20:<autosummary>:1
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.append:1
msgid "Add a data set to the next block index."
msgstr "データセットを次のブロックインデックスに追加します。"

#: ../../pyvista/docs/core/composite.rst:20:<autosummary>:1
msgid ""
":obj:`clean <pyvista.core.composite.pyvista.MultiBlock.clean>`\\ "
"\\(\\[empty\\]\\)"
msgstr ""
":obj:`clean <pyvista.core.composite.pyvista.MultiBlock.clean>`\\ "
"\\(\\[empty\\]\\)"

#: ../../pyvista/docs/core/composite.rst:20:<autosummary>:1
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.clean:1
msgid "Remove any null blocks in place."
msgstr "Nullブロックをすべて削除します。"

#: ../../pyvista/docs/core/composite.rst:20:<autosummary>:1
msgid ":obj:`copy <pyvista.core.composite.pyvista.MultiBlock.copy>`\\ \\(\\[deep\\]\\)"
msgstr ":obj:`copy <pyvista.core.composite.pyvista.MultiBlock.copy>`\\ \\(\\[deep\\]\\)"

#: ../../pyvista/docs/core/composite.rst:20:<autosummary>:1
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.copy:1
#: ../../pyvista/docs/core/objects.rst:17:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.DataObject.copy:1
msgid "Return a copy of the object."
msgstr "オブジェクトのコピーを返します。"

#: ../../pyvista/docs/core/composite.rst:20:<autosummary>:1
msgid ""
":obj:`copy_meta_from "
"<pyvista.core.composite.pyvista.MultiBlock.copy_meta_from>`\\ \\(ido\\)"
msgstr ""
":obj:`copy_meta_from "
"<pyvista.core.composite.pyvista.MultiBlock.copy_meta_from>`\\ \\(ido\\)"

#: ../../pyvista/docs/core/composite.rst:20:<autosummary>:1
msgid ":obj:`get <pyvista.core.composite.pyvista.MultiBlock.get>`\\ \\(index\\)"
msgstr ":obj:`get <pyvista.core.composite.pyvista.MultiBlock.get>`\\ \\(index\\)"

#: ../../pyvista/docs/core/composite.rst:20:<autosummary>:1
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.get:1
msgid "Get a block by its index or name."
msgstr "インデックスまたは名前でブロックを取得します。"

#: ../../pyvista/docs/core/composite.rst:20:<autosummary>:1
msgid ""
":obj:`get_block_name "
"<pyvista.core.composite.pyvista.MultiBlock.get_block_name>`\\ \\(index\\)"
msgstr ""
":obj:`get_block_name "
"<pyvista.core.composite.pyvista.MultiBlock.get_block_name>`\\ \\(index\\)"

#: ../../pyvista/docs/core/composite.rst:20:<autosummary>:1
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.get_block_name:1
msgid "Return the string name of the block at the given index."
msgstr "指定したインデックスのブロック名を文字列で返します。"

#: ../../pyvista/docs/core/composite.rst:20:<autosummary>:1
msgid ""
":obj:`get_data_range "
"<pyvista.core.composite.pyvista.MultiBlock.get_data_range>`\\ \\(name\\)"
msgstr ""
":obj:`get_data_range "
"<pyvista.core.composite.pyvista.MultiBlock.get_data_range>`\\ \\(name\\)"

#: ../../pyvista/docs/core/composite.rst:20:<autosummary>:1
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.get_data_range:1
msgid "Get the min/max of an array given its name across all blocks."
msgstr "すべてのブロックにわたる配列名の最小値/最大値を取得します。"

#: ../../pyvista/docs/core/composite.rst:20:<autosummary>:1
msgid ""
":obj:`get_index_by_name "
"<pyvista.core.composite.pyvista.MultiBlock.get_index_by_name>`\\ \\(name\\)"
msgstr ""
":obj:`get_index_by_name "
"<pyvista.core.composite.pyvista.MultiBlock.get_index_by_name>`\\ \\(name\\)"

#: ../../pyvista/docs/core/composite.rst:20:<autosummary>:1
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.get_index_by_name:1
msgid "Find the index number by block name."
msgstr "ブロック名でインデックス番号を検索します。"

#: ../../pyvista/docs/core/composite.rst:20:<autosummary>:1
msgid ":obj:`keys <pyvista.core.composite.pyvista.MultiBlock.keys>`\\ \\(\\)"
msgstr ":obj:`keys <pyvista.core.composite.pyvista.MultiBlock.keys>`\\ \\(\\)"

#: ../../pyvista/docs/core/composite.rst:20:<autosummary>:1
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.keys:1
msgid "Get all the block names in the dataset."
msgstr "データセット内のすべてのブロック名を取得します。"

#: ../../pyvista/docs/core/composite.rst:20:<autosummary>:1
msgid ":obj:`next <pyvista.core.composite.pyvista.MultiBlock.next>`\\ \\(\\)"
msgstr ":obj:`next <pyvista.core.composite.pyvista.MultiBlock.next>`\\ \\(\\)"

#: ../../pyvista/docs/core/composite.rst:20:<autosummary>:1
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.next:1
msgid "Get the next block from the iterator."
msgstr "イテレータから次のブロックを取得します。"

#: ../../pyvista/docs/core/composite.rst:20:<autosummary>:1
msgid ""
":obj:`plot <pyvista.core.composite.pyvista.MultiBlock.plot>`\\ "
"\\(\\[off\\_screen\\, full\\_screen\\, screenshot\\, ...\\]\\)"
msgstr ""
":obj:`plot <pyvista.core.composite.pyvista.MultiBlock.plot>`\\ "
"\\(\\[off\\_screen\\, full\\_screen\\, screenshot\\, ...\\]\\)"

#: ../../pyvista/docs/core/composite.rst:20:<autosummary>:1
msgid ":obj:`pop <pyvista.core.composite.pyvista.MultiBlock.pop>`\\ \\(index\\)"
msgstr ":obj:`pop <pyvista.core.composite.pyvista.MultiBlock.pop>`\\ \\(index\\)"

#: ../../pyvista/docs/core/composite.rst:20:<autosummary>:1
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.pop:1
msgid "Pop off a block at the specified index."
msgstr "指定したインデックスのブロックをポップします。"

#: ../../pyvista/docs/core/composite.rst:20:<autosummary>:1
msgid ""
":obj:`set_block_name "
"<pyvista.core.composite.pyvista.MultiBlock.set_block_name>`\\ \\(index\\, "
"name\\)"
msgstr ""
":obj:`set_block_name "
"<pyvista.core.composite.pyvista.MultiBlock.set_block_name>`\\ \\(index\\, "
"name\\)"

#: ../../pyvista/docs/core/composite.rst:20:<autosummary>:1
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.set_block_name:1
msgid "Set a block's string name at the specified index."
msgstr "指定したインデックスにブロックの文字列名を設定します。"

#: ../../pyvista/docs/core/composite.rst:20:<autosummary>:1
msgid ""
":obj:`wrap_nested <pyvista.core.composite.pyvista.MultiBlock.wrap_nested>`\\"
" \\(\\)"
msgstr ""
":obj:`wrap_nested <pyvista.core.composite.pyvista.MultiBlock.wrap_nested>`\\"
" \\(\\)"

#: ../../pyvista/docs/core/composite.rst:20:<autosummary>:1
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.wrap_nested:1
msgid ""
"Ensure that all nested data structures are wrapped as PyVista datasets."
msgstr "ネストされたすべてのデータ構造がPyVistaデータセットとしてラップされていることを確認します。"

#: ../../pyvista/pyvista/core/composite.pydocstring of pyvista.MultiBlock:1
msgid ""
"Bases: :class:`vtkmodules.vtkCommonDataModel.vtkMultiBlockDataSet`, "
":class:`pyvista.core.filters.CompositeFilters`, "
":class:`pyvista.core.common.DataObject`"
msgstr ""
"基底: :class:`vtkmodules.vtkCommonDataModel.vtkMultiBlockDataSet`, "
":class:`pyvista.core.filters.CompositeFilters`, "
":class:`pyvista.core.common.DataObject`"

#: ../../pyvista/pyvista/core/composite.pydocstring of pyvista.MultiBlock:1
msgid "A composite class to hold many data sets which can be iterated over."
msgstr "反復可能な多数のデータセットを保持する複合クラス。"

#: ../../pyvista/pyvista/core/composite.pydocstring of pyvista.MultiBlock:3
msgid ""
"This wraps/extends the ``vtkMultiBlockDataSet`` class in VTK so that we can "
"easily plot these data sets and use the composite in a Pythonic manner."
msgstr ""
"これはVTKで ``vtkMultiBlockDataSet`` "
"クラスをラップ/拡張し、これらのデータセットを簡単にプロットし、Python的な方法でコンポジットを使用できるようにします。"

#: ../../pyvista/pyvista/core/composite.pydocstring of pyvista.MultiBlock:6
msgid ""
"You can think of ``MultiBlock`` like lists or dictionaries as we can iterate"
" over this data structure by index and we can also access blocks by their "
"string name."
msgstr ""
"``MultiBlock`` "
"はリストや辞書のようなもので、インデックスによってこのデータ構造を繰り返し処理することができ、文字列名によってブロックにアクセスすることもできます。"

#: ../../pyvista/pyvista/core/composite.pydocstring of pyvista.MultiBlock:11
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.probe:24
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.threshold:34
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.extrude:38
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.strip:39
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.subdivide:31
#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.RectilinearGrid:13
#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.UniformGrid:13
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid:11 ../../pyvista/pyvista/core/pointset.pydocstring
#: of pyvista.StructuredGrid:13
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.StructuredGrid.hide_cells:11
#: ../../pyvista/pyvista/core/pointset.pydocstring of pyvista.PolyData:12
msgid "Examples"
msgstr "例"

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.bounds:3
msgid "length 6 tuple of floats containing min/max along each axis"
msgstr "各軸に沿ってmin/maxを含むfloatの6組の長さ"

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.clean:3
msgid "Remove any meshes that are empty as well (have zero points)."
msgstr "(0点である)空のメッシュもすべて削除します。"

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.copy:3 ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.DataObject.copy:3
msgid "When True makes a full copy of the object."
msgstr "Trueに設定すると、オブジェクトの完全なコピーが作成されます。"

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.copy:6 ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.DataObject.copy:6
msgid "**newobject** -- Deep or shallow copy of the input."
msgstr "**newobject** -- 入力の深いまたは浅いコピーです。"

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.get:3
msgid "If the name is non-unique then returns the first occurrence."
msgstr "名前が一意でない場合は、最初のoccurrenceが返されます。"

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.wrap_nested:3
msgid "This is performed in place."
msgstr "これはその場で実行されます。"

#: ../../pyvista/docs/core/filters.rst:4
msgid "Filters"
msgstr "フィルタ"

#: ../../pyvista/pyvista/core/filters.pydocstring of pyvista.core.filters:1
msgid "These classes hold methods to apply general filters to any data type."
msgstr "これらのクラスには、任意のデータ型に一般的なフィルタを適用するメソッドがあります。"

#: ../../pyvista/pyvista/core/filters.pydocstring of pyvista.core.filters:3
msgid ""
"By inheriting these classes into the wrapped VTK data structures, a user can"
" easily apply common filters in an intuitive manner."
msgstr "これらのクラスをラップされたVTKデータ構造に継承することにより、ユーザは直感的な方法で共通フィルタを容易に適用することができます。"

#: ../../pyvista/pyvista/core/filters.pydocstring of pyvista.core.filters:7
#: ../../pyvista/pyvista/core/objects.pydocstring of pyvista.Table:7
msgid "Example"
msgstr "例"

#: ../../pyvista/docs/core/filters.rst:12
msgid "Dataset Filters"
msgstr "データセットフィルタ"

#: ../../pyvista/docs/core/filters.rst:14
msgid ""
"The :class:`pyvista.DataSetFilters` is inherited by :class:`pyvista.Common` "
"making all the following filters available as callable methods directly from"
" any PyVista dataset."
msgstr ""
":class:`pyvista.DataSetFilters` は :class:`pyvista.Common` "
"によって継承され、以下のすべてのフィルタをPyVistaデータセットから直接呼び出し可能なメソッドとして利用できるようにします。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`cell_centers "
"<pyvista.core.filters.pyvista.DataSetFilters.cell_centers>`\\ "
"\\(\\[vertex\\]\\)"
msgstr ""
":obj:`cell_centers "
"<pyvista.core.filters.pyvista.DataSetFilters.cell_centers>`\\ "
"\\(\\[vertex\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.cell_centers:1
#: ../../pyvista/docs/core/filters.rst:101:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.cell_centers:1
msgid "Generate points at the center of the cells in this dataset."
msgstr "このデータセットのセルの中心に点を生成します。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`cell_data_to_point_data "
"<pyvista.core.filters.pyvista.DataSetFilters.cell_data_to_point_data>`\\ "
"\\(\\[pass\\_cell\\_data\\]\\)"
msgstr ""
":obj:`cell_data_to_point_data "
"<pyvista.core.filters.pyvista.DataSetFilters.cell_data_to_point_data>`\\ "
"\\(\\[pass\\_cell\\_data\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.cell_data_to_point_data:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.ctp:1
#: ../../pyvista/docs/core/filters.rst:101:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.cell_data_to_point_data:1
msgid "Transform cell data into point data."
msgstr "データから日付へのセル変換"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`clip <pyvista.core.filters.pyvista.DataSetFilters.clip>`\\ "
"\\(\\[normal\\, origin\\, invert\\, value\\, inplace\\]\\)"
msgstr ""
":obj:`clip <pyvista.core.filters.pyvista.DataSetFilters.clip>`\\ "
"\\(\\[normal\\, origin\\, invert\\, value\\, inplace\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.clip:1
#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.clip_with_plane:1
#: ../../pyvista/docs/core/filters.rst:101:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.clip:1
msgid "Clip a dataset by a plane by specifying the origin and normal."
msgstr "原点と法線を指定して、データセットを平面でクリップします。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`clip_box <pyvista.core.filters.pyvista.DataSetFilters.clip_box>`\\ "
"\\(\\[bounds\\, invert\\, factor\\]\\)"
msgstr ""
":obj:`clip_box <pyvista.core.filters.pyvista.DataSetFilters.clip_box>`\\ "
"\\(\\[bounds\\, invert\\, factor\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.clip_box:1
#: ../../pyvista/docs/core/filters.rst:101:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.clip_box:1
msgid "Clip a dataset by a bounding box defined by the bounds."
msgstr "境界によって定義された境界ボックスによってデータセットをクリップします。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`clip_surface "
"<pyvista.core.filters.pyvista.DataSetFilters.clip_surface>`\\ "
"\\(surface\\[\\, invert\\, value\\, ...\\]\\)"
msgstr ""
":obj:`clip_surface "
"<pyvista.core.filters.pyvista.DataSetFilters.clip_surface>`\\ "
"\\(surface\\[\\, invert\\, value\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.clip_surface:1
msgid "Clip any mesh type using a :class:`pyvista.PolyData` surface mesh."
msgstr ":class:`pyvista.PolyData` サーフェスメッシュを使用して任意のメッシュタイプをクリップします。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`compute_cell_quality "
"<pyvista.core.filters.pyvista.DataSetFilters.compute_cell_quality>`\\ "
"\\(\\[quality\\_measure\\, ...\\]\\)"
msgstr ""
":obj:`compute_cell_quality "
"<pyvista.core.filters.pyvista.DataSetFilters.compute_cell_quality>`\\ "
"\\(\\[quality\\_measure\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_cell_quality:1
msgid "Compute a function of (geometric) quality for each cell of a mesh."
msgstr "メッシュのセルごとに (ジオメトリ) 精度の関数を計算します。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`compute_cell_sizes "
"<pyvista.core.filters.pyvista.DataSetFilters.compute_cell_sizes>`\\ "
"\\(\\[length\\, area\\, volume\\, ...\\]\\)"
msgstr ""
":obj:`compute_cell_sizes "
"<pyvista.core.filters.pyvista.DataSetFilters.compute_cell_sizes>`\\ "
"\\(\\[length\\, area\\, volume\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_cell_sizes:1
#: ../../pyvista/docs/core/filters.rst:101:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.compute_cell_sizes:1
msgid "Compute sizes for 1D (length), 2D (area) and 3D (volume) cells."
msgstr "1 D (長さ) 、2 D (面積) 、および3 D (体積) セルのサイズを計算します。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`compute_derivative "
"<pyvista.core.filters.pyvista.DataSetFilters.compute_derivative>`\\ "
"\\(\\[scalars\\, gradient\\, ...\\]\\)"
msgstr ""
":obj:`compute_derivative "
"<pyvista.core.filters.pyvista.DataSetFilters.compute_derivative>`\\ "
"\\(\\[scalars\\, gradient\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_derivative:1
msgid "Compute derivative-based quantities of point/cell scalar field."
msgstr "点/セル スカラフィールドの派生ベースの量を計算します。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`compute_gradient "
"<pyvista.core.filters.pyvista.DataSetFilters.compute_gradient>`\\ "
"\\(\\[scalars\\, gradient\\_name\\, ...\\]\\)"
msgstr ""
":obj:`compute_gradient "
"<pyvista.core.filters.pyvista.DataSetFilters.compute_gradient>`\\ "
"\\(\\[scalars\\, gradient\\_name\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_gradient:1
msgid "Compute per cell gradient of point/cell scalar field."
msgstr "点/セル スカラフィールドのセルごとの勾配を計算します。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`compute_implicit_distance "
"<pyvista.core.filters.pyvista.DataSetFilters.compute_implicit_distance>`\\ "
"\\(surface\\[\\, inplace\\]\\)"
msgstr ""
":obj:`compute_implicit_distance "
"<pyvista.core.filters.pyvista.DataSetFilters.compute_implicit_distance>`\\ "
"\\(surface\\[\\, inplace\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_implicit_distance:1
msgid "Compute the implicit distance from the points to a surface."
msgstr "ポイントから表面までのインプリシット距離を計算します。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`connectivity "
"<pyvista.core.filters.pyvista.DataSetFilters.connectivity>`\\ "
"\\(\\[largest\\]\\)"
msgstr ""
":obj:`connectivity "
"<pyvista.core.filters.pyvista.DataSetFilters.connectivity>`\\ "
"\\(\\[largest\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.connectivity:1
msgid "Find and label connected bodies/volumes."
msgstr "接続されたボディ/ボリュームを検索し、ラベル付けします。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`contour <pyvista.core.filters.pyvista.DataSetFilters.contour>`\\ "
"\\(\\[isosurfaces\\, scalars\\, ...\\]\\)"
msgstr ""
":obj:`contour <pyvista.core.filters.pyvista.DataSetFilters.contour>`\\ "
"\\(\\[isosurfaces\\, scalars\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.contour:1
msgid "Contour an input dataset by an array."
msgstr "入力データセットを配列で囲む。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`ctp <pyvista.core.filters.pyvista.DataSetFilters.ctp>`\\ "
"\\(\\[pass\\_cell\\_data\\]\\)"
msgstr ""
":obj:`ctp <pyvista.core.filters.pyvista.DataSetFilters.ctp>`\\ "
"\\(\\[pass\\_cell\\_data\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`decimate_boundary "
"<pyvista.core.filters.pyvista.DataSetFilters.decimate_boundary>`\\ "
"\\(\\[target\\_reduction\\]\\)"
msgstr ""
":obj:`decimate_boundary "
"<pyvista.core.filters.pyvista.DataSetFilters.decimate_boundary>`\\ "
"\\(\\[target\\_reduction\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.decimate_boundary:1
msgid "Return a decimated version of a triangulation of the boundary."
msgstr "境界の三角形分割の小数点付きバージョンを返します。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`delaunay_3d "
"<pyvista.core.filters.pyvista.DataSetFilters.delaunay_3d>`\\ \\(\\[alpha\\, "
"tol\\, offset\\, progress\\_bar\\]\\)"
msgstr ""
":obj:`delaunay_3d "
"<pyvista.core.filters.pyvista.DataSetFilters.delaunay_3d>`\\ \\(\\[alpha\\, "
"tol\\, offset\\, progress\\_bar\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.delaunay_3d:1
msgid "Construct a 3D Delaunay triangulation of the mesh."
msgstr "メッシュの3D Delaunay三角形分割を作成します。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`elevation <pyvista.core.filters.pyvista.DataSetFilters.elevation>`\\ "
"\\(\\[low\\_point\\, high\\_point\\, ...\\]\\)"
msgstr ""
":obj:`elevation <pyvista.core.filters.pyvista.DataSetFilters.elevation>`\\ "
"\\(\\[low\\_point\\, high\\_point\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.elevation:1
#: ../../pyvista/docs/core/filters.rst:101:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.elevation:1
msgid "Generate scalar values on a dataset."
msgstr "データセットにスカラー値を生成します。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`extract_all_edges "
"<pyvista.core.filters.pyvista.DataSetFilters.extract_all_edges>`\\ "
"\\(\\[progress\\_bar\\]\\)"
msgstr ""
":obj:`extract_all_edges "
"<pyvista.core.filters.pyvista.DataSetFilters.extract_all_edges>`\\ "
"\\(\\[progress\\_bar\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_all_edges:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.wireframe:1
#: ../../pyvista/docs/core/filters.rst:101:<autosummary>:1
#: ../../pyvista/docs/core/filters.rst:101:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.extract_all_edges:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.wireframe:1
msgid "Extract all the internal/external edges of the dataset as PolyData."
msgstr "データセットのすべての内部/外部エッジをPolyDataとして抽出します。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`extract_cells "
"<pyvista.core.filters.pyvista.DataSetFilters.extract_cells>`\\ \\(ind\\)"
msgstr ""
":obj:`extract_cells "
"<pyvista.core.filters.pyvista.DataSetFilters.extract_cells>`\\ \\(ind\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_cells:1
msgid "Return a subset of the grid."
msgstr "グリッドのサブセットを返します。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`extract_edges "
"<pyvista.core.filters.pyvista.DataSetFilters.extract_edges>`\\ "
"\\(\\[feature\\_angle\\, ...\\]\\)"
msgstr ""
":obj:`extract_edges "
"<pyvista.core.filters.pyvista.DataSetFilters.extract_edges>`\\ "
"\\(\\[feature\\_angle\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_edges:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_feature_edges:1
msgid "Extract edges from the surface of the mesh."
msgstr "メッシュの表面からエッジを抽出します。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`extract_feature_edges "
"<pyvista.core.filters.pyvista.DataSetFilters.extract_feature_edges>`\\ "
"\\(\\[feature\\_angle\\, ...\\]\\)"
msgstr ""
":obj:`extract_feature_edges "
"<pyvista.core.filters.pyvista.DataSetFilters.extract_feature_edges>`\\ "
"\\(\\[feature\\_angle\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`extract_geometry "
"<pyvista.core.filters.pyvista.DataSetFilters.extract_geometry>`\\ \\(\\)"
msgstr ""
":obj:`extract_geometry "
"<pyvista.core.filters.pyvista.DataSetFilters.extract_geometry>`\\ \\(\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_geometry:1
msgid ""
"Extract the outer surface of a volume or structured grid dataset as "
"PolyData."
msgstr "ボリュームまたは構造化グリッドデータセットの外側サーフェスをPolyDataとして抽出します。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`extract_largest "
"<pyvista.core.filters.pyvista.DataSetFilters.extract_largest>`\\ "
"\\(\\[inplace\\]\\)"
msgstr ""
":obj:`extract_largest "
"<pyvista.core.filters.pyvista.DataSetFilters.extract_largest>`\\ "
"\\(\\[inplace\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_largest:1
msgid "Extract largest connected set in mesh."
msgstr "メッシュ内の最大接続セットを抽出します。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`extract_points "
"<pyvista.core.filters.pyvista.DataSetFilters.extract_points>`\\ \\(ind\\)"
msgstr ""
":obj:`extract_points "
"<pyvista.core.filters.pyvista.DataSetFilters.extract_points>`\\ \\(ind\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_points:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_selection_points:1
msgid ""
"Return a subset of the grid (with cells) that contains any of the given "
"point indices."
msgstr "指定されたポイントインデックスのいずれかを含む(セルの)グリッドのサブセットを返します。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`extract_selection_points "
"<pyvista.core.filters.pyvista.DataSetFilters.extract_selection_points>`\\ "
"\\(ind\\)"
msgstr ""
":obj:`extract_selection_points "
"<pyvista.core.filters.pyvista.DataSetFilters.extract_selection_points>`\\ "
"\\(ind\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`extract_surface "
"<pyvista.core.filters.pyvista.DataSetFilters.extract_surface>`\\ "
"\\(\\[pass\\_pointid\\, pass\\_cellid\\, ...\\]\\)"
msgstr ""
":obj:`extract_surface "
"<pyvista.core.filters.pyvista.DataSetFilters.extract_surface>`\\ "
"\\(\\[pass\\_pointid\\, pass\\_cellid\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_surface:1
msgid "Extract surface mesh of the grid."
msgstr "グリッドのサーフェスメッシュを抽出します。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`glyph <pyvista.core.filters.pyvista.DataSetFilters.glyph>`\\ "
"\\(\\[orient\\, scale\\, factor\\, geom\\, ...\\]\\)"
msgstr ""
":obj:`glyph <pyvista.core.filters.pyvista.DataSetFilters.glyph>`\\ "
"\\(\\[orient\\, scale\\, factor\\, geom\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.glyph:1
msgid ""
"Copy a geometric representation (called a glyph) to every point in the input"
" dataset."
msgstr "入力データセットのすべての点に(グリフと呼ばれる)ジオメトリ表示をコピーします。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`interpolate "
"<pyvista.core.filters.pyvista.DataSetFilters.interpolate>`\\ \\(target\\[\\,"
" sharpness\\, radius\\, ...\\]\\)"
msgstr ""
":obj:`interpolate "
"<pyvista.core.filters.pyvista.DataSetFilters.interpolate>`\\ \\(target\\[\\,"
" sharpness\\, radius\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.interpolate:1
msgid "Interpolate values onto this mesh from a given dataset."
msgstr "特定のデータセットからこのメッシュに値を補間します。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`merge <pyvista.core.filters.pyvista.DataSetFilters.merge>`\\ "
"\\(\\[grid\\, merge\\_points\\, inplace\\, ...\\]\\)"
msgstr ""
":obj:`merge <pyvista.core.filters.pyvista.DataSetFilters.merge>`\\ "
"\\(\\[grid\\, merge\\_points\\, inplace\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.merge:1
msgid "Join one or many other grids to this grid."
msgstr "1つまたは複数の他のグリッドをこのグリッドに結合します。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`outline <pyvista.core.filters.pyvista.DataSetFilters.outline>`\\ "
"\\(\\[generate\\_faces\\]\\)"
msgstr ""
":obj:`outline <pyvista.core.filters.pyvista.DataSetFilters.outline>`\\ "
"\\(\\[generate\\_faces\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.outline:1
msgid "Produce an outline of the full extent for the input dataset."
msgstr "入力データセットの全エクステントのアウトラインを作成します。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`outline_corners "
"<pyvista.core.filters.pyvista.DataSetFilters.outline_corners>`\\ "
"\\(\\[factor\\]\\)"
msgstr ""
":obj:`outline_corners "
"<pyvista.core.filters.pyvista.DataSetFilters.outline_corners>`\\ "
"\\(\\[factor\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.outline_corners:1
msgid "Produce an outline of the corners for the input dataset."
msgstr "入力データセットのコーナーのアウトラインを生成します。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`plot_over_line "
"<pyvista.core.filters.pyvista.DataSetFilters.plot_over_line>`\\ \\(pointa\\,"
" pointb\\[\\, resolution\\, ...\\]\\)"
msgstr ""
":obj:`plot_over_line "
"<pyvista.core.filters.pyvista.DataSetFilters.plot_over_line>`\\ \\(pointa\\,"
" pointb\\[\\, resolution\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.plot_over_line:1
msgid "Sample a dataset along a high resolution line and plot."
msgstr "高解像度の線に沿ってデータセットをサンプリングし、プロットします。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`point_data_to_cell_data "
"<pyvista.core.filters.pyvista.DataSetFilters.point_data_to_cell_data>`\\ "
"\\(\\[pass\\_point\\_data\\]\\)"
msgstr ""
":obj:`point_data_to_cell_data "
"<pyvista.core.filters.pyvista.DataSetFilters.point_data_to_cell_data>`\\ "
"\\(\\[pass\\_point\\_data\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.point_data_to_cell_data:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.ptc:1
#: ../../pyvista/docs/core/filters.rst:101:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.point_data_to_cell_data:1
msgid "Transform point data into cell data."
msgstr "点データをセルデータに変換します。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`probe <pyvista.core.filters.pyvista.DataSetFilters.probe>`\\ "
"\\(points\\[\\, tolerance\\, pass\\_cell\\_arrays\\, ...\\]\\)"
msgstr ""
":obj:`probe <pyvista.core.filters.pyvista.DataSetFilters.probe>`\\ "
"\\(points\\[\\, tolerance\\, pass\\_cell\\_arrays\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.probe:1
msgid "Sample data values at specified point locations."
msgstr "指定したポイント位置のサンプルデータ値。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`ptc <pyvista.core.filters.pyvista.DataSetFilters.ptc>`\\ "
"\\(\\[pass\\_point\\_data\\]\\)"
msgstr ""
":obj:`ptc <pyvista.core.filters.pyvista.DataSetFilters.ptc>`\\ "
"\\(\\[pass\\_point\\_data\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`sample <pyvista.core.filters.pyvista.DataSetFilters.sample>`\\ "
"\\(target\\[\\, tolerance\\, ...\\]\\)"
msgstr ""
":obj:`sample <pyvista.core.filters.pyvista.DataSetFilters.sample>`\\ "
"\\(target\\[\\, tolerance\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.sample:1
msgid "Resample array data from a passed mesh onto this mesh."
msgstr "渡されたメッシュからこのメッシュに配列データをリサンプルします。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`sample_over_line "
"<pyvista.core.filters.pyvista.DataSetFilters.sample_over_line>`\\ "
"\\(pointa\\, pointb\\[\\, ...\\]\\)"
msgstr ""
":obj:`sample_over_line "
"<pyvista.core.filters.pyvista.DataSetFilters.sample_over_line>`\\ "
"\\(pointa\\, pointb\\[\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.sample_over_line:1
msgid "Sample a dataset onto a line."
msgstr "データセットを1行に抽出します。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`select_enclosed_points "
"<pyvista.core.filters.pyvista.DataSetFilters.select_enclosed_points>`\\ "
"\\(surface\\[\\, tolerance\\, ...\\]\\)"
msgstr ""
":obj:`select_enclosed_points "
"<pyvista.core.filters.pyvista.DataSetFilters.select_enclosed_points>`\\ "
"\\(surface\\[\\, tolerance\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.select_enclosed_points:1
msgid "Mark points as to whether they are inside a closed surface."
msgstr "ポイントが閉じた表面の内側にあるかどうかをマークします。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`slice <pyvista.core.filters.pyvista.DataSetFilters.slice>`\\ "
"\\(\\[normal\\, origin\\, generate\\_triangles\\, ...\\]\\)"
msgstr ""
":obj:`slice <pyvista.core.filters.pyvista.DataSetFilters.slice>`\\ "
"\\(\\[normal\\, origin\\, generate\\_triangles\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.slice:1
#: ../../pyvista/docs/core/filters.rst:101:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.slice:1
msgid ""
"Slice a dataset by a plane at the specified origin and normal vector "
"orientation."
msgstr "指定した原点および法線ベクトル方向の平面でデータセットをスライスします。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`slice_along_axis "
"<pyvista.core.filters.pyvista.DataSetFilters.slice_along_axis>`\\ \\(\\[n\\,"
" axis\\, tolerance\\, ...\\]\\)"
msgstr ""
":obj:`slice_along_axis "
"<pyvista.core.filters.pyvista.DataSetFilters.slice_along_axis>`\\ \\(\\[n\\,"
" axis\\, tolerance\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.slice_along_axis:1
#: ../../pyvista/docs/core/filters.rst:101:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.slice_along_axis:1
msgid "Create many slices of the input dataset along a specified axis."
msgstr "指定した軸に沿って、入力データセットのスライスを多数作成します。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`slice_along_line "
"<pyvista.core.filters.pyvista.DataSetFilters.slice_along_line>`\\ "
"\\(line\\[\\, generate\\_triangles\\, ...\\]\\)"
msgstr ""
":obj:`slice_along_line "
"<pyvista.core.filters.pyvista.DataSetFilters.slice_along_line>`\\ "
"\\(line\\[\\, generate\\_triangles\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.slice_along_line:1
#: ../../pyvista/docs/core/filters.rst:101:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.slice_along_line:1
msgid "Slice a dataset using a polyline/spline as the path."
msgstr "パスとしてpolyline/splineを使用してデータセットをスライスします。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`slice_orthogonal "
"<pyvista.core.filters.pyvista.DataSetFilters.slice_orthogonal>`\\ \\(\\[x\\,"
" y\\, z\\, ...\\]\\)"
msgstr ""
":obj:`slice_orthogonal "
"<pyvista.core.filters.pyvista.DataSetFilters.slice_orthogonal>`\\ \\(\\[x\\,"
" y\\, z\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.slice_orthogonal:1
#: ../../pyvista/docs/core/filters.rst:101:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.slice_orthogonal:1
msgid ""
"Create three orthogonal slices through the dataset on the three cartesian "
"planes."
msgstr "3つの直交平面上のデータセットから3つの直交スライスを作成します。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`split_bodies "
"<pyvista.core.filters.pyvista.DataSetFilters.split_bodies>`\\ "
"\\(\\[label\\]\\)"
msgstr ""
":obj:`split_bodies "
"<pyvista.core.filters.pyvista.DataSetFilters.split_bodies>`\\ "
"\\(\\[label\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.split_bodies:1
msgid "Find, label, and split connected bodies/volumes."
msgstr "接続されたボディ/ボリュームを検索、ラベル付け、および分割します。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`streamlines "
"<pyvista.core.filters.pyvista.DataSetFilters.streamlines>`\\ "
"\\(\\[vectors\\, source\\_center\\, ...\\]\\)"
msgstr ""
":obj:`streamlines "
"<pyvista.core.filters.pyvista.DataSetFilters.streamlines>`\\ "
"\\(\\[vectors\\, source\\_center\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.streamlines:1
msgid "Integrate a vector field to generate streamlines."
msgstr "ベクトルフィールドを統合して、流線を生成します。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`surface_indices "
"<pyvista.core.filters.pyvista.DataSetFilters.surface_indices>`\\ \\(\\)"
msgstr ""
":obj:`surface_indices "
"<pyvista.core.filters.pyvista.DataSetFilters.surface_indices>`\\ \\(\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.surface_indices:1
msgid "Return the surface indices of a grid."
msgstr "グリッドのサーフェスインデックスを返します。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`texture_map_to_plane "
"<pyvista.core.filters.pyvista.DataSetFilters.texture_map_to_plane>`\\ "
"\\(\\[origin\\, point\\_u\\, ...\\]\\)"
msgstr ""
":obj:`texture_map_to_plane "
"<pyvista.core.filters.pyvista.DataSetFilters.texture_map_to_plane>`\\ "
"\\(\\[origin\\, point\\_u\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.texture_map_to_plane:1
msgid "Texture map this dataset to a user defined plane."
msgstr "このデータセットをユーザ定義平面にテクスチャマップします。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`threshold <pyvista.core.filters.pyvista.DataSetFilters.threshold>`\\ "
"\\(\\[value\\, scalars\\, invert\\, ...\\]\\)"
msgstr ""
":obj:`threshold <pyvista.core.filters.pyvista.DataSetFilters.threshold>`\\ "
"\\(\\[value\\, scalars\\, invert\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.threshold:1
msgid "Apply a ``vtkThreshold`` filter to the input dataset."
msgstr "入力データセットに ``vtkThreshold`` フィルタを適用します。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`threshold_percent "
"<pyvista.core.filters.pyvista.DataSetFilters.threshold_percent>`\\ "
"\\(\\[percent\\, scalars\\, ...\\]\\)"
msgstr ""
":obj:`threshold_percent "
"<pyvista.core.filters.pyvista.DataSetFilters.threshold_percent>`\\ "
"\\(\\[percent\\, scalars\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.threshold_percent:1
msgid ""
"Threshold the dataset by a percentage of its range on the active scalars "
"array or as specified."
msgstr "データセットを、アクティブなスカラー配列上の範囲のパーセンテージで、または指定に従ってしきい値に設定します。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`triangulate "
"<pyvista.core.filters.pyvista.DataSetFilters.triangulate>`\\ "
"\\(\\[inplace\\]\\)"
msgstr ""
":obj:`triangulate "
"<pyvista.core.filters.pyvista.DataSetFilters.triangulate>`\\ "
"\\(\\[inplace\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.triangulate:1
#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.tri_filter:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.triangulate:1
#: ../../pyvista/docs/core/filters.rst:101:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.triangulate:1
msgid "Return an all triangle mesh."
msgstr "すべて三角形のメッシュを返します。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`warp_by_scalar "
"<pyvista.core.filters.pyvista.DataSetFilters.warp_by_scalar>`\\ "
"\\(\\[scalars\\, factor\\, normal\\, ...\\]\\)"
msgstr ""
":obj:`warp_by_scalar "
"<pyvista.core.filters.pyvista.DataSetFilters.warp_by_scalar>`\\ "
"\\(\\[scalars\\, factor\\, normal\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.warp_by_scalar:1
msgid "Warp the dataset's points by a point data scalars array's values."
msgstr "データセットのポイントをポイントデータスカラー配列の値でワープします。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`warp_by_vector "
"<pyvista.core.filters.pyvista.DataSetFilters.warp_by_vector>`\\ "
"\\(\\[vectors\\, factor\\, inplace\\]\\)"
msgstr ""
":obj:`warp_by_vector "
"<pyvista.core.filters.pyvista.DataSetFilters.warp_by_vector>`\\ "
"\\(\\[vectors\\, factor\\, inplace\\]\\)"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.warp_by_vector:1
msgid "Warp the dataset's points by a point data vectors array's values."
msgstr "データセットのポイントをポイントデータスカラー配列の値でワープします。"

#: ../../pyvista/docs/core/filters.rst:24:<autosummary>:1
msgid ""
":obj:`wireframe <pyvista.core.filters.pyvista.DataSetFilters.wireframe>`\\ "
"\\(\\[progress\\_bar\\]\\)"
msgstr ""
":obj:`wireframe <pyvista.core.filters.pyvista.DataSetFilters.wireframe>`\\ "
"\\(\\[progress\\_bar\\]\\)"

#: ../../pyvista/pyvista/core/filters.pydocstring of pyvista.DataSetFilters:1
msgid "A set of common filters that can be applied to any vtkDataSet."
msgstr "任意のvtkDataSetに適用できる共通フィルタのセット。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.cell_centers:3
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.cell_centers:3
msgid "These points can be used for placing glyphs / vectors."
msgstr "これらの点は、字形/ベクトルの配置に使用できます。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.cell_centers:5
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.cell_centers:5
msgid "Enable/disable the generation of vertex cells."
msgstr "頂点セルの生成を有効/無効にします。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.cell_data_to_point_data:3
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.ctp:3 ../../pyvista/pyvista/core/filters.pydocstring
#: of pyvista.DataSetFilters.point_data_to_cell_data:3
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.ptc:3 ../../pyvista/pyvista/core/filters.pydocstring
#: of pyvista.CompositeFilters.cell_data_to_point_data:3
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.point_data_to_cell_data:3
msgid ""
"Point data are specified per node and cell data specified within cells. "
"Optionally, the input point data can be passed through to the output."
msgstr "ポイントデータは、セル内で指定されたノードおよびセルデータごとに指定されます。オプションで、入力点データを出力に渡すことができます。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.cell_data_to_point_data:6
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.cell_data_to_point_data:6
msgid ""
"The method of transformation is based on averaging the data values of all "
"cells using a particular point. Optionally, the input cell data can be "
"passed through to the output as well."
msgstr ""
"変換の方法は、特定の点を使用してすべてのセルのデータ値を平均化することに基づいています。オプションとして、入力セルのデータを出力に渡すこともできます。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.cell_data_to_point_data:10
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.cell_data_to_point_data:10
msgid "See also: :func:`pyvista.DataSetFilters.point_data_to_cell_data`"
msgstr "関連項目: :func:`pyvista.DataSetFilters.point_data_to_cell_data`"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.cell_data_to_point_data:12
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.cell_data_to_point_data:12
msgid "If enabled, pass the input cell data through to the output"
msgstr "使用可能にすると、入力セルのデータを出力に渡します。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.clip:3
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.clip:3
msgid ""
"If no parameters are given the clip will occur in the center of that "
"dataset."
msgstr "パラメータが指定されていない場合、クリップはそのデータセットの中央に配置されます。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.clip:5
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.clip:5
msgid ""
"Length 3 tuple for the normal vector direction. Can also be specified as a "
"string conventional direction such as ``'x'`` for ``(1,0,0)`` or ``'-x'`` "
"for ``(-1,0,0)``, etc."
msgstr ""
"法線ベクトル方向の長さ3のタプルです。 ``(1,0,0)`` の場合は ``'x'`` 、 ``(-1,0,0)`` の場合は ``'-x'`` "
"など、文字列の従来の方向として指定することもできます。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.clip:9
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.clip:9
msgid ""
"The center ``(x,y,z)`` coordinate of the plane on which the clip occurs. The"
" default is the center of the dataset."
msgstr "クリップが発生する平面の中心 ``(x,y,z)`` 座標。デフォルトはデータセットの中心です。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.clip:12
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.clip:12
msgid "Flag on whether to flip/invert the clip."
msgstr "クリップをフリップ/反転するかどうかを示すフラグ。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.clip:14
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.clip:14
msgid ""
"Set the clipping value along the normal direction. The default value is 0.0."
msgstr "法線方向に沿ってクリップ値を設定します。デフォルト値は0.0です。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.clip:17
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_largest:7
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.boolean_add:7
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.boolean_cut:5
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.boolean_difference:5
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.boolean_union:5
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.decimate:44
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.decimate_pro:28
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.remove_points:14
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.smooth:23
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.subdivide:24
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.triangulate:5
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.tube:17
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.clip:17
msgid "Updates mesh in-place while returning nothing."
msgstr "何も返さずにインプレイスメッシュを更新します。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.clip_box:3
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.clip_box:3
msgid ""
"If no bounds are given, a corner of the dataset bounds will be removed."
msgstr "境界が指定されていない場合、データセット境界のコーナーは削除されます。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.clip_box:5
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.clip_box:5
msgid ""
"Length 6 sequence of floats: (xmin, xmax, ymin, ymax, zmin, zmax). Length 3 "
"sequence of floats: distances from the min coordinate of of the input mesh. "
"Single float value: uniform distance from the min coordinate. Length 12 "
"sequence of length 3 sequence of floats: a plane collection (normal, center,"
" ...). :class:`pyvista.PolyData`: if a poly mesh is passed that represents a"
" box with 6 faces that all form a standard box, then planes will be "
"extracted from the box to define the clipping region."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.clip_box:14
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.clip_surface:10
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.clip_box:14
msgid "Flag on whether to flip/invert the clip"
msgstr "クリップをフリップ/反転するかどうかを示すフラグ"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.clip_box:16
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.clip_box:16
msgid ""
"If bounds are not given this is the factor along each axis to extract the "
"default box."
msgstr "境界が指定されていない場合、これはデフォルトボックスを抽出する各軸に沿った係数になります。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.clip_surface:3
msgid ""
"This will return a :class:`pyvista.UnstructuredGrid` of the clipped mesh. "
"Geometry of the input dataset will be preserved where possible - geometries "
"near the clip intersection will be triangulated/tessellated."
msgstr ""
"クリップされたメッシュの :class:`pyvista.UnstructuredGrid` "
"を返します。入力データセットのジオメトリは、可能な場合は保持されます - クリップの交点付近のジオメトリは三角形化/面分割されます。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.clip_surface:7
msgid ""
"The PolyData surface mesh to use as a clipping function. If this mesh is not"
" PolyData, the external surface will be extracted."
msgstr "クリップ関数として使用するPolyDataサーフェスメッシュ。このメッシュがPolyDataでない場合、外部サーフェスが抽出されます。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.clip_surface:12
msgid ""
"Set the clipping value of the implicit function (if clipping with implicit "
"function) or scalar value (if clipping with scalars). The default value is "
"0.0."
msgstr ""
"インプリシット関数のクリッピング値(インプリシット関数によるクリッピングの場合)またはスカラー値(スカラーによるクリッピングの場合)を設定します。デフォルト値は0.0です。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.clip_surface:16
msgid ""
"Compute the implicit distance from the mesh onto the input dataset. A new "
"array called ``'implicit_distance'`` will be added to the output clipped "
"mesh."
msgstr ""
"メッシュから入力データセットへの暗黙の距離を計算します。 ``'implicit_distance'`` "
"という新しい配列が出力クリップメッシュに追加されます。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_cell_quality:3
msgid ""
"The per-cell quality is added to the mesh's cell data, in an array named "
"\"CellQuality\". Cell types not supported by this filter or undefined "
"quality of supported cell types will have an entry of -1."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_cell_quality:7
msgid "Defaults to computing the scaled jacobian."
msgstr "既定では、スケールされたjacobianが計算されます。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_cell_quality:9
msgid "Options for cell quality measure:"
msgstr "セル品質計測のオプション:"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_cell_quality:11
msgid "``'area'``"
msgstr "``'area'``"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_cell_quality:12
msgid "``'aspect_beta'``"
msgstr "``'aspect_beta'``"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_cell_quality:13
msgid "``'aspect_frobenius'``"
msgstr "``'aspect_frobenius'``"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_cell_quality:14
msgid "``'aspect_gamma'``"
msgstr "``'aspect_gamma'``"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_cell_quality:15
msgid "``'aspect_ratio'``"
msgstr "``'aspect_ratio'``"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_cell_quality:16
msgid "``'collapse_ratio'``"
msgstr "``'collapse_ratio'``"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_cell_quality:17
msgid "``'condition'``"
msgstr "``'condition'``"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_cell_quality:18
msgid "``'diagonal'``"
msgstr "``'diagonal'``"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_cell_quality:19
msgid "``'dimension'``"
msgstr "``'dimension'``"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_cell_quality:20
msgid "``'distortion'``"
msgstr "``'distortion'``"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_cell_quality:21
msgid "``'jacobian'``"
msgstr "``'jacobian'``"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_cell_quality:22
msgid "``'max_angle'``"
msgstr "``'max_angle'``"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_cell_quality:23
msgid "``'max_aspect_frobenius'``"
msgstr "``'max_aspect_frobenius'``"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_cell_quality:24
msgid "``'max_edge_ratio'``"
msgstr "``'max_edge_ratio'``"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_cell_quality:25
msgid "``'med_aspect_frobenius'``"
msgstr "``'med_aspect_frobenius'``"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_cell_quality:26
msgid "``'min_angle'``"
msgstr "``'min_angle'``"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_cell_quality:27
msgid "``'oddy'``"
msgstr "``'oddy'``"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_cell_quality:28
msgid "``'radius_ratio'``"
msgstr "``'radius_ratio'``"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_cell_quality:29
msgid "``'relative_size_squared'``"
msgstr "``'relative_size_squared'``"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_cell_quality:30
msgid "``'scaled_jacobian'``"
msgstr "``'scaled_jacobian'``"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_cell_quality:31
msgid "``'shape'``"
msgstr "``'shape'``"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_cell_quality:32
msgid "``'shape_and_size'``"
msgstr "``'shape_and_size'``"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_cell_quality:33
msgid "``'shear'``"
msgstr "``'shear'``"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_cell_quality:34
msgid "``'shear_and_size'``"
msgstr "``'shear_and_size'``"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_cell_quality:35
msgid "``'skew'``"
msgstr "``'skew'``"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_cell_quality:36
msgid "``'stretch'``"
msgstr "``'stretch'``"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_cell_quality:37
msgid "``'taper'``"
msgstr "``'taper'``"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_cell_quality:38
msgid "``'volume'``"
msgstr "``'volume'``"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_cell_quality:39
msgid "``'warpage'``"
msgstr "``'warpage'``"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_cell_quality:41
msgid "The cell quality measure to use"
msgstr "使用するセル品質計測"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_cell_quality:43
msgid ""
"Float value for undefined quality. Undefined quality are qualities that "
"could be addressed by this filter but is not well defined for the particular"
" geometry of cell in question, e.g. a volume query for a triangle. Undefined"
" quality will always be undefined. The default value is -1."
msgstr ""
"未定義の品質の浮動小数点値です。未定義の品質とは、このフィルタで処理できる品質ですが、問題のセルの特定のジオメトリは三角形のボリューム照会などに対しては十分に定義されていません。未定義の品質は常に定義されません"
"。デフォルト値は-1です。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_cell_sizes:3
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.compute_cell_sizes:3
msgid "Specify whether or not to compute the length of 1D cells."
msgstr "1 Dセルの長さを計算するかどうかを指定します。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_cell_sizes:5
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.compute_cell_sizes:5
msgid "Specify whether or not to compute the area of 2D cells."
msgstr "2 Dセルの面積を計算するかどうかを指定します。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_cell_sizes:7
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.compute_cell_sizes:7
msgid "Specify whether or not to compute the volume of 3D cells."
msgstr "3 Dセルの体積を計算するかどうかを指定します。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_cell_sizes:9
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.contour:28
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.delaunay_3d:17
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.elevation:29
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_all_edges:5
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.glyph:26
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.interpolate:42
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.wireframe:5
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.clean:25
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.decimate:46
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.delaunay_2d:30
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.extrude:34
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.fill_holes:15
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.UnstructuredGridFilters.delaunay_2d:5
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.UniformGridFilters.gaussian_smooth:12
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.compute_cell_sizes:9
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.elevation:29
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.extract_all_edges:5
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.wireframe:5
msgid "Display a progress bar to indicate progress."
msgstr "進行状況を示す進行状況バーを表示します。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_derivative:3
msgid ""
"Utilize ``vtkGradientFilter`` to compute derivative-based quantities, such "
"as gradient, divergence, vorticity, and Q-criterion, of the selected point "
"or cell scalar field."
msgstr ""
"``vtkGradientFilter`` を利用して、選択された点またはセルスカラー場の勾配、発散、渦度、およびQ基準などの微分ベースの量を計算する。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_derivative:7
msgid ""
"String name of the scalars array to use when computing the derivative "
"quantities."
msgstr "派生量を計算するときに使用するスカラー配列の文字列名。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_derivative:10
msgid ""
"Calculate gradient. If a string is passed, the string will be used for the "
"resulting array name. Otherwise, array name will be 'gradient'. Default: "
"True"
msgstr ""
"勾配を計算します。文字列を渡すと、その文字列が配列名として使用されます。それ以外の場合、配列名は 'gradient' になります。デフォルト:True"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_derivative:14
msgid ""
"Calculate divergence. If a string is passed, the string will be used for the"
" resulting array name. Otherwise, array name will be 'divergence'. Default: "
"None"
msgstr ""
"発散を計算する。文字列を渡すと、その文字列が配列名として使用されます。それ以外の場合、配列名は 'divergence' "
"になります。デフォルト:None"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_derivative:18
msgid ""
"Calculate vorticity. If a string is passed, the string will be used for the "
"resulting array name. Otherwise, array name will be 'vorticity'. Default: "
"None"
msgstr ""
"速度を計算する。文字列を渡すと、その文字列が配列名として使用されます。それ以外の場合、配列名は 'vorticity' になります。デフォルト:None"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_derivative:22
msgid ""
"Calculate qcriterion. If a string is passed, the string will be used for the"
" resulting array name. Otherwise, array name will be 'qcriterion'. Default: "
"None"
msgstr ""
"Q-criterionを計算する。文字列を渡すと、その文字列が配列名として使用されます。それ以外の場合、配列名は 'qcriterion' "
"になります。デフォルト:None"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_derivative:26
msgid ""
"Use faster algorithm for computing derivative quantities. Result is less "
"accurate and performs fewer derivative calculations, increasing computation "
"speed. The error will feature smoothing of the output and possibly errors at"
" boundaries. Option has no effect if DataSet is not UnstructuredGrid. "
"Default: False"
msgstr ""
"微分量の計算に高速アルゴリズムを使用します。結果の精度が低くなり、導関数の計算が少なくなるため、計算速度が向上します。エラーは出力のスムージングを特徴とし、場合によっては境界でエラーが発生します。DataSetがUnstructuredGridでない場合、オプションは無効です。デフォルト:False"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_derivative:32
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_gradient:9
msgid "Data type preference. Either 'point' or 'cell'."
msgstr "データ型の環境設定。 'point' か 'cell' のどちらかです。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_gradient:3
msgid "DEPRECATED: Use ``compute_derivative`` instead."
msgstr "非推奨: 代わりに ``compute_derivative`` を使用してください。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_gradient:5
msgid "String name of the scalars array to use when computing gradient."
msgstr "勾配の計算に使用するスカラー配列の文字列名。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_gradient:7
msgid "The name of the output array of the computed gradient."
msgstr "計算された勾配の出力配列の名前です。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_implicit_distance:3
msgid ""
"This filter will comput the implicit distance from all of the nodes of this "
"mesh to a given surface. This distance will be added as a point array called"
" ``'implicit_distance'``."
msgstr ""
"このフィルタは、このメッシュのすべての節点から指定されたサーフェスまでの暗黙の距離を計算します。この距離は、  "
"``'implicit_distance'`` という点配列として追加されます。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_implicit_distance:7
msgid "The surface used to compute the distance"
msgstr "距離の計算に使用されるサーフェス"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.compute_implicit_distance:9
msgid ""
"If True, a new scalar array will be added to the ``point_arrays`` of this "
"mesh. Otherwise a copy of this mesh is returned with that scalar field."
msgstr ""
"Trueの場合、新しいスカラー配列がこのメッシュの ``point_arrays`` "
"に追加されます。それ以外の場合は、このメッシュのコピーがそのスカラフィールドとともに返されます。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.connectivity:3
msgid ""
"This adds an ID array to the point and cell data to distinguish separate "
"connected bodies. This applies a ``vtkConnectivityFilter`` filter which "
"extracts cells that share common points and/or meet other connectivity "
"criterion. (Cells that share vertices and meet other connectivity criterion "
"such as scalar range are known as a region.)"
msgstr ""
"これにより、個別の接続されたボディを区別するために、ポイントデータとセルデータにID配列が追加されます。これは、共通点を共有し、かつ/または他の接続基準を満たすセルを抽出する"
" ``vtkConnectivityFilter`` フィルタを適用します。(頂点を共有し、スカラー範囲などの接続基準を満たすセルを領域と呼びます。)"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.connectivity:10
msgid "Extract the largest connected part of the mesh."
msgstr "メッシュの最大の接続部分を抽出します。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.contour:3
msgid ""
"``isosurfaces`` can be an integer specifying the number of isosurfaces in "
"the data range or a sequence of values for explicitly setting the "
"isosurfaces."
msgstr "``isosurfaces`` はデータ範囲内の等値面の数を指定する整数か、明示的に等値面を設定するための値のシーケンスです。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.contour:6
msgid ""
"Number of isosurfaces to compute across valid data range or a sequence of "
"float values to explicitly use as the isosurfaces."
msgstr "有効なデータ範囲全体で計算する等値面の数、または等値面として明示的に使用する浮動小数点値のシーケンス。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.contour:9
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.threshold:12
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.threshold_percent:6
msgid "Name of scalars to threshold on. Defaults to currently active scalars."
msgstr "しきい値に対するスカラーの名前。デフォルトは現在アクティブなスカラーです。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.contour:13
msgid "Desc"
msgstr "説明"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.contour:15
msgid "Preserves the scalar values that are being contoured"
msgstr "輪郭付けされているスカラー値を保持します"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.contour:17
msgid ""
"If an integer number of isosurfaces is specified, this is the range over "
"which to generate contours. Default is the scalars arrays' full data range."
msgstr "等値面の整数が指定されている場合、これは等高線を生成する範囲です。デフォルトはスカラー配列の全データ範囲です。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.contour:21
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.threshold:23
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.threshold_percent:17
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.UniformGridFilters.gaussian_smooth:9
msgid ""
"When scalars is specified, this is the preferred array type to search for in"
" the dataset.  Must be either ``'point'`` or ``'cell'``"
msgstr ""
"スカラーが指定されている場合、これはデータセット内で検索するために推奨される配列型です。 ``'point'`` または ``'cell'`` "
"のいずれかでなければなりません"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.contour:24
msgid ""
"Specify to choose which vtk filter is used to create the contour. Must be "
"one of ``'contour'``, ``'marching_cubes'`` and ``'flying_edges'``. Defaults "
"to ``'contour'``."
msgstr ""
"コンターの作成に使用するベクトルフィルタを指定します。 ``'contour'`` 、 ``'marching_cubes'`` および "
"``'flying_edges'`` のいずれかである必要があります。デフォルトは ``'contour'`` です。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.ctp:6
msgid "An alias/shortcut for ``cell_data_to_point_data``."
msgstr "``cell_data_to_point_data`` のエイリアス/ショートカットです。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.decimate_boundary:3
msgid "Only the outer surface of the input dataset will be considered."
msgstr "入力データセットの外側サーフェスのみが考慮されます。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.decimate_boundary:5
msgid ""
"Fraction of the original mesh to remove. Default is ``0.5`` TargetReduction "
"is set to ``0.9``, this filter will try to reduce the data set to 10% of its"
" original size and will remove 90% of the input triangles."
msgstr ""
"削除する元のメッシュの割合。デフォルトは ``0.5``  TargetReductionが ``0.9`` "
"に設定されています。このフィルタはデータセットを元のサイズの10%に縮小しようとし、入力三角形の90%を削除します。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.delaunay_3d:3
msgid "This helps smooth out a rugged mesh."
msgstr "これにより、ごつごつしたメッシュが滑らかになります。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.delaunay_3d:5
msgid ""
"Distance value to control output of this filter. For a non-zero alpha value,"
" only verts, edges, faces, or tetra contained within the circumsphere (of "
"radius alpha) will be output. Otherwise, only tetrahedra will be output."
msgstr ""
"このフィルタの出力を制御する距離値。α値が0以外の場合は、円周に含まれる頂点、エッジ、面、または四面体(半径αの)のみが出力されます。それ以外の場合は、四面体だけが出力されます。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.delaunay_3d:10
msgid ""
"tolerance to control discarding of closely spaced points. This tolerance is "
"specified as a fraction of the diagonal length of the bounding box of the "
"points."
msgstr "間隔の狭い点の削除を制御する許容差。この許容値は、ポイントのバウンディングボックスの対角線の長さの一部として指定されます。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.delaunay_3d:14
msgid ""
"multiplier to control the size of the initial, bounding Delaunay "
"triangulation."
msgstr "乗数を使用して、初期の境界Delaunay三角形分割のサイズを制御します。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.elevation:3
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.elevation:3
msgid ""
"The scalar values lie within a user specified range, and are generated by "
"computing a projection of each dataset point onto a line. The line can be "
"oriented arbitrarily. A typical example is to generate scalars based on "
"elevation or height above a plane."
msgstr ""
"スカラー値は、ユーザが指定した範囲内にあり、各データセット点の線への投影を計算することによって生成されます。線の方向は任意です。典型的な例は、平面上の高度または高さに基づいてスカラーを生成することです。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.elevation:9
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.elevation:9
msgid ""
"The low point of the projection line in 3D space. Default is bottom center "
"of the dataset. Otherwise pass a length 3 tuple(float)."
msgstr "3 D空間での投影線の低点。デフォルトはデータセットの下部中央です。それ以外の場合は、長さ3のタプル (float) を渡します。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.elevation:12
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.elevation:12
msgid ""
"The high point of the projection line in 3D space. Default is top center of "
"the dataset. Otherwise pass a length 3 tuple(float)."
msgstr "3 D空間での投影線の高点。デフォルトはデータセットの上部中央です。それ以外の場合は、長さ3のタプル (float) を渡します。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.elevation:15
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.elevation:15
msgid ""
"The scalar range to project to the low and high points on the line that will"
" be mapped to the dataset. If None given, the values will be computed from "
"the elevation (Z component) range between the high and low points. Min and "
"max of a range can be given as a length 2 tuple(float). If ``str`` name of "
"scalara array present in the dataset given, the valid range of that array "
"will be used."
msgstr ""
"データ・セットにマップされる線上のロー・ポイントとハイ・ポイントに投影するスカラー範囲。なしを指定すると、高点と低点の間の標高(Z成分)の範囲から値が計算されます。範囲の最小値と最大値は、長さ2のタプル"
" (float) として与えることができます。与えられたデータセットにscalara配列の ``str`` "
"名が存在する場合、その配列の有効範囲が使用される。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.elevation:22
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.elevation:22
msgid ""
"When an array name is specified for ``scalar_range``, this is the preferred "
"array type to search for in the dataset. Must be either 'point' or 'cell'."
msgstr ""
"``scalar_range`` のために配列名が指定されるとき、これはデータセットで検索するために好ましい配列型である。 'point' または "
"'cell' のいずれかである必要があります。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.elevation:26
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.elevation:26
msgid ""
"A boolean flag on whether or not to set the new `Elevation` scalar as the "
"active scalars array on the output dataset."
msgstr "新しい `Elevation` スカラを出力データセットのアクティブなスカラ配列として設定するかどうかのbooleanフラグ。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.elevation:34
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.elevation:34
msgid ""
"This will create a scalars array named `Elevation` on the point data of the "
"input dataset and overasdf write an array named `Elevation` if present."
msgstr ""
"これにより、入力データセットのポイントデータに `Elevation` という名前のスカラー配列が作成され、存在する場合は `Elevation` "
"という名前の配列が上書きされます。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_all_edges:3
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.wireframe:3
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.extract_all_edges:3
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.wireframe:3
msgid "This produces a full wireframe representation of the input dataset."
msgstr "これにより、入力データセットの完全なワイヤフレーム表現が生成されます。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_cells:3
msgid "Numpy array of cell indices to be extracted."
msgstr "抽出されるセルインデックスの配列。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_cells:6
msgid "**subgrid** -- Subselected grid"
msgstr "**subgrid** -- サブ選択されたグリッド"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_edges:3
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_feature_edges:3
msgid ""
"If the given mesh is not PolyData, the external surface of the given mesh is"
" extracted and used. From vtk documentation, the edges are one of the "
"following"
msgstr ""
"指定したメッシュがPolyDataでない場合、指定したメッシュの外部表面が抽出されて使用されます。vtkのドキュメントによると、エッジは次のいずれかです。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_edges:7
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_feature_edges:7
msgid "boundary (used by one polygon) or a line cell"
msgstr "境界(1つのポリゴンで使用)またはラインセル"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_edges:8
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_feature_edges:8
msgid "non-manifold (used by three or more polygons)"
msgstr "非多様体(3つ以上の多角形によって使用されます)"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_edges:9
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_feature_edges:9
msgid ""
"feature edges (edges used by two triangles and whose dihedral angle > "
"feature_angle)"
msgstr "フィーチャエッジ(2つの三角形で使用され、二面角がfeature_angleより大きいエッジ)"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_edges:11
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_feature_edges:11
msgid "manifold edges (edges used by exactly two polygons)."
msgstr "多様体のエッジ(ちょうど2つのポリゴンで使用されるエッジ)。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_edges:13
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_feature_edges:13
msgid "Defaults to 30 degrees."
msgstr "既定値は30度です。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_edges:15
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_edges:17
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_edges:19
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_edges:21
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_feature_edges:15
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_feature_edges:17
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_feature_edges:19
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_feature_edges:21
msgid "Defaults to True"
msgstr "デフォルトはTrueです。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_edges:23
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_feature_edges:23
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.fill_holes:13
msgid "Return new mesh or overwrite input."
msgstr "新しいメッシュを返すか、入力を上書きします。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_edges:26
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_feature_edges:26
msgid "**edges** -- Extracted edges. None if inplace=True."
msgstr "**edges** -- 抽出されたエッジです。inplace=Trueの場合はNone。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_geometry:3
msgid ""
"This will extract all 0D, 1D, and 2D cells producing the boundary faces of "
"the dataset."
msgstr "これにより、データセットの境界面を生成するすべての0 D、1 D、および2 Dセルが抽出されます。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_largest:3
msgid ""
"Can be used to reduce residues obtained when generating an isosurface. Works"
" only if residues are not connected (share at least one point with) the main"
" component of the image."
msgstr ""
"等値面を生成する際に得られる残留物を低減するために使用できます。残基がイメージの主要コンポーネントに接続(少なくとも1点を共有)されていない場合にのみ機能します。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_largest:10
msgid "**mesh** -- Largest connected set in mesh"
msgstr "**mesh** -- メッシュ内で最大の接続セット"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_points:3
msgid "Numpy array of point indices to be extracted."
msgstr "抽出されるポイントインデックスの配列。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_points:6
msgid "**subgrid** -- Subselected grid."
msgstr "**subgrid** -- サブ選択されたグリッド。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_selection_points:3
msgid "DEPRECATED: Please use ``extract_points`` instead."
msgstr "非推奨: 代わりに ``extract_points`` を使用してください。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_surface:3
msgid ""
"Adds a point array \"vtkOriginalPointIds\" that idenfities which original "
"points these surface points correspond to"
msgstr "これらのサーフェスポイントが対応する元のポイントを示すポイント配列 \"vtkOriginalPointIds\" を追加します"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_surface:6
msgid ""
"Adds a cell array \"vtkOriginalPointIds\" that idenfities which original "
"cells these surface cells correspond to"
msgstr "これらのサーフェスセルが対応する元のセルを示すセル配列 \"vtkOriginalPointIds\" を追加します"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.extract_surface:10
msgid "**extsurf** -- Surface mesh of the grid"
msgstr "**extsurf** -- グリッドのサーフェスメッシュ"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.glyph:3
msgid ""
"The glyph may be oriented along the input vectors, and it may be scaled "
"according to scalar data or vector magnitude."
msgstr "グリフは、入力ベクトルに沿って配向されてもよく、スカラーデータまたはベクトルの大きさに従ってスケーリングされてもよいです。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.glyph:6
msgid "Use the active vectors array to orient the glyphs"
msgstr "アクティブなベクトル配列を使用して記号の方向を設定します"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.glyph:8
msgid "Use the active scalars to scale the glyphs"
msgstr "アクティブなスカラーを使用してグリフをスケールする"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.glyph:10
msgid "Scale factor applied to scaling array"
msgstr "スケーリング配列に適用されるスケール係数"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.glyph:12
msgid "The geometry to use for the glyph"
msgstr "グリフに使用するジオメトリ"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.glyph:14
msgid ""
"Specify tolerance in terms of fraction of bounding box length. Float value "
"is between 0 and 1. Default is None. If ``absolute`` is ``True`` then the "
"tolerance can be an absolute distance. If None, points merging as a "
"preprocessing step is disabled."
msgstr ""
"公差を境界ボックスの長さの分数で指定してください。float値は0から1の間です。デフォルトはNoneです。``absolute`` が "
"``True`` の場合、公差は絶対距離になります。Noneの場合、前処理ステップとしてマージするポイントは無効になります。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.glyph:19
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.clean:23
msgid "Control if ``tolerance`` is an absolute distance or a fraction."
msgstr "``許容差`` が絶対距離か分数かをコントロールします。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.glyph:21
msgid "Turn on/off clamping of \"scalar\" values to range."
msgstr "範囲指定する \"scalar\" 値のクランプのオンとオフを切り替えます。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.glyph:23
msgid ""
"Set the range of values to be considered by the filter when scalars values "
"are provided."
msgstr "スカラー値が指定された場合にフィルタが考慮する値の範囲を設定します。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.interpolate:3
msgid "The input dataset is typically a point cloud."
msgstr "入力データセットは通常、点群です。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.interpolate:5
msgid ""
"This uses a gaussian interpolation kernel. Use the ``sharpness`` and "
"``radius`` parameters to adjust this kernel. You can also switch this kernel"
" to use an N closest points approach."
msgstr ""
"これはGauss補間カーネルを使用します。 ``sharpness`` と ``radius`` "
"パラメータを使ってこのカーネルを調整します。このカーネルをN個の最近接ポイントを使用するように切り替えることもできます。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.interpolate:9
msgid ""
"The vtk data object to sample from - point and cell arrays from this object "
"are interpolated onto this mesh."
msgstr "サンプリング元のvtkデータオブジェクト - このオブジェクトのポイント配列とセル配列がこのメッシュに補間されます。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.interpolate:12
msgid ""
"Set / Get the sharpness (i.e., falloff) of the Gaussian. By default "
"Sharpness=2. As the sharpness increases the effects of distant points are "
"reduced."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.interpolate:16
msgid "Specify the radius within which the basis points must lie."
msgstr "基準点を配置する半径を指定します。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.interpolate:18
msgid ""
"If given, specifies the number of the closest points used to form the "
"interpolation basis. This will invalidate the radius and sharpness arguments"
" in favor of an N closest points approach. This typically has poorer "
"results."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.interpolate:23
msgid ""
"Specify a strategy to use when encountering a \"null\" point during the "
"interpolation process. Null points occur when the local neighborhood (of "
"nearby points to interpolate from) is empty. If the strategy is set to "
"``'mask_points'``, then an output array is created that marks points as "
"being valid (=1) or null (invalid =0) (and the NullValue is set as well). If"
" the strategy is set to ``'null_value'`` (this is the default), then the "
"output data value(s) are set to the ``null_value`` (specified in the output "
"point data). Finally, the strategy ``'closest_point'`` is to simply use the "
"closest point to perform the interpolation."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.interpolate:34
msgid ""
"Specify the null point value. When a null point is encountered then all "
"components of each null tuple are set to this value. By default the null "
"value is set to zero."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.interpolate:38
msgid "Preserve input mesh's original cell data arrays"
msgstr "入力メッシュのオリジナルのセルデータ配列を保持"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.interpolate:40
msgid "Preserve input mesh's original point data arrays"
msgstr "入力メッシュのオリジナルのポイントデータ配列を保持"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.merge:3
msgid "Grid is updated in-place by default."
msgstr "既定では、グリッドは所定の位置で更新されます。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.merge:5
msgid "Can be used to merge points of adjacent cells when no grids are input."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.merge:8
msgid "Grids to merge to this grid."
msgstr "このグリッドにマージするグリッド。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.merge:10
msgid ""
"Points in exactly the same location will be merged between the two meshes. "
"Warning: this can leave degenerate point data."
msgstr "まったく同じ位置にあるポイントは、2つのメッシュ間でマージされます。警告:縮退した点データが残る可能性があります。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.merge:13
msgid ""
"Updates grid inplace when True if the input type is an "
":class:`pyvista.UnstructuredGrid`."
msgstr "入力タイプが :class:`pyvista.UnstructuredGrid` の場合にTrueの時にグリッドを更新します"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.merge:16
msgid ""
"When this parameter is true and merge_points is true, the arrays of the "
"merging grids will be overwritten by the original main mesh."
msgstr "このパラメータがtrueでmerge_pointsがtrueの場合、マージグリッドの配列は元のメインメッシュによって上書きされます。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.merge:21
msgid "**merged_grid** -- Merged grid.  Returned when inplace is False."
msgstr "**merged_grid** -- マージされたグリッド。inplaceがFalseの場合に返されます。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.merge:25
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.compute_normals:50
#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.DataObject.save:10
#: ../../pyvista/pyvista/core/pointset.pydocstring of pyvista.PolyData.save:16
msgid "Notes"
msgstr "備考"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.merge:26
msgid ""
"When two or more grids are joined, the type and name of each array must "
"match or the arrays will be ignored and not included in the final merged "
"mesh."
msgstr ""
"複数のグリッドを結合する場合は、各配列のタイプと名前が一致している必要があります。一致していない場合、配列は無視され、最終的に結合されたメッシュには含まれません。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.outline:3
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.outline:3
msgid "Generate solid faces for the box. This is off by default"
msgstr "直方体のソリッド面を生成します。デフォルトではオフになっています。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.outline_corners:3
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.outline_corners:3
msgid ""
"controls the relative size of the corners to the length of the corresponding"
" bounds"
msgstr "対応する境界の長さに対するコーナーの相対サイズをコントロールします。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.plot_over_line:3
msgid ""
"Plot the variables of interest in 2D where the X-axis is distance from Point"
" A and the Y-axis is the variable of interest. Note that this filter returns"
" None."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.plot_over_line:7
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.plot_over_line:9
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.sample_over_line:3
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.sample_over_line:5
msgid "Location in [x, y, z]."
msgstr "[x, y, z] 内の位置。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.plot_over_line:11
msgid ""
"number of pieces to divide line into. Defaults to number of cells in the "
"input mesh. Must be a positive integer."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.plot_over_line:14
msgid ""
"The string name of the variable in the input dataset to probe. The active "
"scalar is used by default."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.plot_over_line:17
msgid "The string title of the `matplotlib` figure"
msgstr "`matplotlib` 図の文字列タイトル"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.plot_over_line:19
msgid "The string label of the Y-axis. Defaults to variable name"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.plot_over_line:21
msgid "the size of the new figure"
msgstr "新しい図のサイズ"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.plot_over_line:23
msgid "flag on whether or not to create a new figure"
msgstr "新しい図形を作成するかどうかのフラグ"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.plot_over_line:25
msgid "Shows the matplotlib figure"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.plot_over_line:27
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.probe:11
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.sample:10
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.sample_over_line:10
msgid ""
"Tolerance used to compute whether a point in the source is in a cell of the "
"input.  If not given, tolerance is automatically generated."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.point_data_to_cell_data:6
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.point_data_to_cell_data:6
msgid "See also: :func:`pyvista.DataSetFilters.cell_data_to_point_data`"
msgstr "関連項目: :func:`pyvista.DataSetFilters.cell_data_to_point_data`"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.point_data_to_cell_data:8
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.point_data_to_cell_data:8
msgid "If enabled, pass the input point data through to the output"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.probe:3
msgid "This uses :class:`vtk.vtkProbeFilter`."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.probe:5
msgid ""
"The mesh to probe from - point and cell arrays from this object are probed "
"onto the nodes of the ``points`` mesh"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.probe:8
msgid ""
"The points to probe values on to. This should be a PyVista mesh or something"
" :func:`pyvista.wrap` can handle."
msgstr "値を検出するポイント。これはPyVistaのメッシュか :func:`pyvista.wrap` が扱えるものでなければなりません。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.probe:14
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.sample:13
msgid "Preserve source mesh's original cell data arrays"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.probe:16
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.sample:15
msgid "Preserve source mesh's original point data arrays"
msgstr "ソースメッシュのオリジナルのポイントデータ配列を保持"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.probe:18
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.sample:17
msgid ""
"Control whether the source point data is to be treated as categorical. If "
"the data is categorical, then the resultant data will be determined by a "
"nearest neighbor interpolation scheme."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.probe:25
msgid "Probe the active scalars in ``grid`` at the points in ``mesh``"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.ptc:6
msgid "An alias/shortcut for ``point_data_to_cell_data``."
msgstr "``point_data_to_cell_data`` のエイリアス/ショートカットです。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.sample:3
msgid "This uses :class:`vtk.vtkResampleWithDataSet`."
msgstr "これは :class:`vtk.vtkResampleWithDataSet` を使います。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.sample:5
msgid "The source vtk data object as the mesh to sample values on to"
msgstr "値をサンプリングするメッシュとしてのソースvtkデータオブジェクト"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.sample:7
msgid ""
"The vtk data object to sample from - point and cell arrays from this object "
"are sampled onto the nodes of the ``dataset`` mesh"
msgstr ""
"サンプリング元のvtkデータオブジェクトと、このオブジェクトからのセル配列は、 ``dataset`` メッシュのノードにサンプリングされます。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.sample_over_line:7
msgid ""
"Number of pieces to divide line into. Defaults to number of cells in the "
"input mesh. Must be a positive integer."
msgstr "線を分割する断片の数。既定値は入力メッシュ内のセル数です。正の整数でなければなりません。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.sample_over_line:14
msgid "**sampled_line** -- Line object with sampled data from dataset."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.select_enclosed_points:3
msgid ""
"This evaluates all the input points to determine whether they are in an "
"enclosed surface. The filter produces a (0,1) mask (in the form of a "
"vtkDataArray) that indicates whether points are outside (mask value=0) or "
"inside (mask value=1) a provided surface. (The name of the output "
"vtkDataArray is \"SelectedPoints\".)"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.select_enclosed_points:9
msgid ""
"This filter produces and output data array, but does not modify the input "
"dataset. If you wish to extract cells or poinrs, various threshold filters "
"are available (i.e., threshold the output array)."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.select_enclosed_points:15
msgid ""
"The filter assumes that the surface is closed and manifold. A boolean flag "
"can be set to force the filter to first check whether this is true. If "
"false, all points will be marked outside. Note that if this check is not "
"performed and the surface is not closed, the results are undefined."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.select_enclosed_points:21
msgid ""
"Set the surface to be used to test for containment. This must be a "
":class:`pyvista.PolyData` object."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.select_enclosed_points:24
msgid ""
"The tolerance on the intersection. The tolerance is expressed as a fraction "
"of the bounding box of the enclosing surface."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.select_enclosed_points:27
msgid ""
"By default, points inside the surface are marked inside or sent to the "
"output. If ``inside_out`` is ``True``, then the points outside the surface "
"are marked inside."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.select_enclosed_points:31
msgid ""
"Specify whether to check the surface for closure. If on, then the algorithm "
"first checks to see if the surface is closed and manifold. If the surface is"
" not closed and manifold, a runtime error is raised."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.slice:3
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.slice:3
msgid ""
"If no origin is specified, the center of the input dataset will be used."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.slice:5
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.slice:5
msgid ""
"Length 3 tuple for the normal vector direction. Can also be specified as a "
"string conventional direction such as ``'x'`` for ``(1,0,0)`` or ``'-x'`` "
"for ``(-1,0,0)```, etc."
msgstr ""
"法線ベクトル方向の長さ3のタプルです。 ``(1,0,0)`` の場合は ``'x'`` 、 ``(-1,0,0)``` の場合は ``'-x'`` "
"など、文字列の従来の方向として指定することもできます。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.slice:9
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.slice:9
msgid "The center (x,y,z) coordinate of the plane on which the slice occurs"
msgstr "スライスが発生する平面の中心 (x,y,z) 座標"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.slice:11
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.slice_along_axis:11
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.slice_along_line:7
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.slice_orthogonal:11
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.slice:11
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.slice_along_axis:11
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.slice_along_line:7
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.slice_orthogonal:11
msgid ""
"If this is enabled (``False`` by default), the output will be triangles "
"otherwise, the output will be the intersection polygons."
msgstr "これが有効な場合(デフォルトで ``False`` )、出力は三角形になります。それ以外の場合、出力は交差ポリゴンになります。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.slice:14
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.slice_along_axis:14
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.slice_along_line:10
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.slice_orthogonal:14
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.slice:14
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.slice_along_axis:14
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.slice_along_line:10
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.slice_orthogonal:14
msgid "If True, apply a ``contour`` filter after slicing"
msgstr "Trueの場合、スライス後に ``contour`` フィルタを適用します"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.slice_along_axis:3
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.slice_along_axis:3
msgid "The number of slices to create"
msgstr "作成するスライスの数"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.slice_along_axis:5
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.slice_along_axis:5
msgid ""
"The axis to generate the slices along. Perpendicular to the slices. Can be "
"string name (``'x'``, ``'y'``, or ``'z'``) or axis index (``0``, ``1``, or "
"``2``)."
msgstr ""
"スライスを生成する軸。スライスに垂直。文字列名 (``'x'``, ``'y'``, or ``'z'``) または軸インデックス (``0``, "
"``1``, or ``2``) を指定できます。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.slice_along_axis:9
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.slice_along_axis:9
msgid "The tolerance to the edge of the dataset bounds to create the slices"
msgstr "スライスを作成するためのデータセット境界のエッジに対する許容値"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.slice_along_line:3
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.slice_along_line:3
msgid "This also works for lines generated with :func:`pyvista.Line`"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.slice_along_line:5
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.slice_along_line:5
msgid "A PolyData object containing one single PolyLine cell."
msgstr "1つのPolyLineセルを含むPolyDataオブジェクト。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.slice_orthogonal:3
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.slice_orthogonal:3
msgid "Yields a MutliBlock dataset of the three slices."
msgstr "3つのスライスのMutliBlockデータセットを生成します。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.slice_orthogonal:5
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.slice_orthogonal:5
msgid "The X location of the YZ slice"
msgstr "YZスライスのX位置"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.slice_orthogonal:7
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.slice_orthogonal:7
msgid "The Y location of the XZ slice"
msgstr "XZスライスのY位置"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.slice_orthogonal:9
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.slice_orthogonal:9
msgid "The Z location of the XY slice"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.split_bodies:3
msgid ""
"This splits different connected bodies into blocks in a MultiBlock dataset."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.split_bodies:5
msgid ""
"A flag on whether to keep the ID arrays given by the ``connectivity`` "
"filter."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.streamlines:3
msgid ""
"The integration is performed using a specified integrator, by default Runge-"
"Kutta2. This supports integration through any type of dataset. Thus if the "
"dataset contains 2D cells like polygons or triangles, the integration is "
"constrained to lie on the surface defined by 2D cells."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.streamlines:8
msgid ""
"This produces polylines as the output, with each cell (i.e., polyline) "
"representing a streamline. The attribute values associated with each "
"streamline are stored in the cell data, whereas those associated with "
"streamline-points are stored in the point data."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.streamlines:13
msgid ""
"This uses a Sphere as the source - set it's location and radius via the "
"``source_center`` and ``source_radius`` keyword arguments. You can retrieve "
"the source as :class:`pyvista.PolyData` by specifying "
"``return_source=True``."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.streamlines:18
msgid "The string name of the active vector field to integrate across"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.streamlines:20
msgid ""
"Length 3 tuple of floats defining the center of the source particles. "
"Defaults to the center of the dataset"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.streamlines:23
msgid ""
"Float radius of the source particle cloud. Defaults to one-tenth of the "
"diagonal of the dataset's spatial extent"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.streamlines:26
msgid "Number of particles present in source sphere"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.streamlines:28
msgid ""
"The integrator type to be used for streamline generation. The default is "
"Runge-Kutta45. The recognized solvers are: RUNGE_KUTTA2 (``2``),  "
"RUNGE_KUTTA4 (``4``), and RUNGE_KUTTA45 (``45``). Options are ``2``, ``4``, "
"or ``45``. Default is ``45``."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.streamlines:33
msgid ""
"Specify whether the streamline is integrated in the upstream or downstream "
"directions (or both). Options are ``'both'``, ``'backward'``, or "
"``'forward'``."
msgstr ""
"流線を上流方向と下流方向のどちらに統合するかを指定します(または両方)。選択肢は ``'both'``  、 ``'backward'`` または "
"``'forward'`` です。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.streamlines:37
msgid "Compute streamlines on a surface. Default ``False``"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.streamlines:39
msgid ""
"Initial step size used for line integration, expressed ib length unitsL or "
"cell length units (see ``step_unit`` parameter). either the starting size "
"for an adaptive integrator, e.g., RK45, or the constant / fixed size for "
"non-adaptive ones, i.e., RK2 and RK4)"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.streamlines:44
msgid ""
"Uniform integration step unit. The valid unit is now limited to only "
"LENGTH_UNIT (``'l'``) and CELL_LENGTH_UNIT (``'cl'``). Default is "
"CELL_LENGTH_UNIT: ``'cl'``."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.streamlines:48
msgid ""
"Minimum step size used for line integration, expressed in length or cell "
"length units. Only valid for an adaptive integrator, e.g., RK45"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.streamlines:51
msgid ""
"Maxmimum step size used for line integration, expressed in length or cell "
"length units. Only valid for an adaptive integrator, e.g., RK45"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.streamlines:54
msgid ""
"Maximum number of steps for integrating a streamline. Defaults to ``2000``"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.streamlines:57
msgid "Terminal speed value, below which integration is terminated."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.streamlines:59
msgid "Maximum error tolerated throughout streamline integration."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.streamlines:61
msgid "Specify the maximum length of a streamline expressed in LENGTH_UNIT."
msgstr "LENGTH_UNITで表される流線の最大長を指定します。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.streamlines:63
msgid ""
"Vorticity computation at streamline points (necessary for generating proper "
"stream-ribbons using the ``vtkRibbonFilter``."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.streamlines:66
msgid ""
"Set the type of the velocity field interpolator to locate cells during "
"streamline integration either by points or cells. The cell locator is more "
"robust then the point locator. Options are ``'point'`` or ``'cell'`` "
"(abbreviations of ``'p'`` and ``'c'`` are also supported)."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.streamlines:72
msgid ""
"This can be used to scale the rate with which the streamribbons twist. The "
"default is 1."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.streamlines:75
msgid "Set the start position. Default is ``(0.0, 0.0, 0.0)``"
msgstr "開始位置を設定します。デフォルトは ``(0.0, 0.0, 0.0)``"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.streamlines:77
msgid ""
"Return the source particles as :class:`pyvista.PolyData` as well as the "
"streamlines. This will be the second value returned if ``True``."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.streamlines:80
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.streamlines:83
msgid ""
"The coordinates of a start and end point for a line source. This will "
"override the sphere point source."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.surface_indices:3
msgid "**surf_ind** -- Indices of the surface points."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.texture_map_to_plane:3
msgid ""
"This is often used to define a plane to texture map an image to this "
"dataset. The plane defines the spatial reference and extent of that image."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.texture_map_to_plane:6
msgid ""
"Length 3 iterable of floats defining the XYZ coordinates of the BOTTOM LEFT "
"CORNER of the plane"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.texture_map_to_plane:9
msgid ""
"Length 3 iterable of floats defining the XYZ coordinates of the BOTTOM RIGHT"
" CORNER of the plane"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.texture_map_to_plane:12
msgid ""
"Length 3 iterable of floats defining the XYZ coordinates of the TOP LEFT "
"CORNER of the plane"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.texture_map_to_plane:15
msgid ""
"If True, the new texture coordinates will be added to the dataset inplace. "
"If False (default), a new dataset is returned with the textures coordinates"
msgstr ""
"Trueの場合、新しいテクスチャ座標がデータセットのインプレイスに追加されます。False (既定値) "
"の場合、新しいデータセットがテクスチャ座標とともに返されます。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.texture_map_to_plane:19
msgid ""
"The string name to give the new texture coordinates if applying the filter "
"inplace."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.texture_map_to_plane:22
msgid ""
"Use the bounds to set the mapping plane by default (bottom plane of the "
"bounding box)."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.threshold:3
msgid ""
"This filter will apply a ``vtkThreshold`` filter to the input dataset and "
"return the resulting object. This extracts cells where the scalar value in "
"each cell satisfies threshold criterion.  If scalars is None, the inputs "
"active scalars is used."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.threshold:8
msgid ""
"Single value or (min, max) to be used for the data threshold.  If a "
"sequence, then length must be 2. If no value is specified, the non-NaN data "
"range will be used to remove any NaN values."
msgstr ""
"データしきい値に使用する単一の値または(最小、最大)。シーケンスの場合、長さは2にする必要があります。値を指定しない場合、NaN以外のデータ範囲を使用してNaN値が削除されます。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.threshold:14
msgid ""
"If value is a single value, when invert is True cells are kept when their "
"values are below parameter \"value\".  When invert is False cells are kept "
"when their value is above the threshold \"value\". Default is False: "
"yielding above the threshold \"value\"."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.threshold:19
msgid ""
"When True, the continuous interval [minimum cell scalar, maximum cell "
"scalar] will be used to intersect the threshold bound, rather than the set "
"of discrete scalar values from the vertices."
msgstr ""
"Trueの場合、頂点からの離散スカラー値のセットではなく、連続間隔[最小セルスカラー、最大セルスカラー]がしきい値境界との交差に使用されます。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.threshold:26
msgid ""
"If using scalars from point data, all scalars for all points in a cell must "
"satisfy the threshold when this value is ``True``.  When ``False``, any "
"point of the cell with a scalar value satisfying the threshold criterion "
"will extract the cell."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.threshold_percent:3
msgid ""
"The percentage (0,1) to threshold. If value is out of 0 to 1 range, then it "
"will be divided by 100 and checked to be in that range."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.threshold_percent:8
msgid ""
"When invert is True cells are kept when their values are below the "
"percentage of the range.  When invert is False, cells are kept when their "
"value is above the percentage of the range. Default is False: yielding above"
" the threshold \"value\"."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.threshold_percent:13
msgid ""
"When True, the continuous interval [minimum cell scalar, maxmimum cell "
"scalar] will be used to intersect the threshold bound, rather than the set "
"of discrete scalar values from the vertices."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.triangulate:3
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.triangulate:3
msgid "More complex polygons will be broken down into triangles."
msgstr "より複雑なポリゴンは三角形に分解されます。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.triangulate:5
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.triangulate:5
msgid "Updates mesh in-place while returning ``None``."
msgstr "``None`` を返しながら、インプレイスメッシュを更新します。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.triangulate:8
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.triangulate:8
msgid ""
"**mesh** -- Mesh containing only triangles. ``None`` when ``inplace=True``"
msgstr "**mesh** -- 三角形のみを含むメッシュ。``inplace=True``の場合は ``None`` "

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.warp_by_scalar:3
msgid ""
"This modifies point coordinates by moving points along point normals by the "
"scalar amount times the scale factor."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.warp_by_scalar:6
msgid "Name of scalars to warp by. Defaults to currently active scalars."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.warp_by_scalar:8
msgid ""
"A scaling factor to increase the scaling effect. Alias ``scale_factor`` also"
" accepted - if present, overrides ``factor``."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.warp_by_scalar:11
msgid ""
"User specified normal. If given, data normals will be ignored and the given "
"normal will be used to project the warp."
msgstr "ユーザが法線を指定します。指定した場合、データ法線は無視され、指定した法線を使用してワープが投影されます。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.warp_by_scalar:14
msgid "If True, the points of the give dataset will be updated."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.warp_by_vector:3
msgid ""
"This modifies point coordinates by moving points along point vectors by the "
"local vector times the scale factor."
msgstr "これにより、ローカルベクトルにスケール係数を掛けた値だけポイントベクトルに沿ってポイントを移動することで、ポイント座標が修正されます。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.warp_by_vector:6
msgid ""
"A classical application of this transform is to visualize eigenmodes in "
"mechanics."
msgstr "この変換の古典的応用は力学における固有モードを可視化することです。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.warp_by_vector:9
msgid "Name of vector to warp by. Defaults to currently active vector."
msgstr "ワープに使用するベクトルの名前。既定値は現在アクティブなベクトルです。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.warp_by_vector:11
msgid ""
"A scaling factor that multiplies the vectors to warp by. Can be used to "
"enhance the warping effect."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.warp_by_vector:14
msgid ""
"If True, the function will update the mesh in-place and return ``None``."
msgstr "Trueの場合、関数はメッシュをインプレイス更新し、 ``None`` を返します。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.DataSetFilters.warp_by_vector:18
msgid "**warped_mesh** -- The warped mesh resulting from the operation."
msgstr ""

#: ../../pyvista/docs/core/filters.rst:32
msgid "PolyData Filters"
msgstr ""

#: ../../pyvista/docs/core/filters.rst:34
msgid ""
"The :class:`pyvista.PolyDataFilters` is inherited by "
":class:`pyvista.PolyData` making all the following filters available as "
"callable methods directly from any ``PolyData`` mesh."
msgstr ""
":class:`pyvista.PolyDataFilters` は :class:`pyvista.PolyData` "
"によって継承され、以下のすべてのフィルタを ``PolyData`` メッシュから直接呼び出し可能なメソッドとして利用できるようにします。"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
msgid ""
":obj:`boolean_add "
"<pyvista.core.filters.pyvista.PolyDataFilters.boolean_add>`\\ \\(mesh\\[\\, "
"inplace\\]\\)"
msgstr ""
":obj:`boolean_add "
"<pyvista.core.filters.pyvista.PolyDataFilters.boolean_add>`\\ \\(mesh\\[\\, "
"inplace\\]\\)"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.boolean_add:1
msgid "Add a mesh to the current mesh."
msgstr ""

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
msgid ""
":obj:`boolean_cut "
"<pyvista.core.filters.pyvista.PolyDataFilters.boolean_cut>`\\ \\(cut\\[\\, "
"tolerance\\, inplace\\]\\)"
msgstr ""
":obj:`boolean_cut "
"<pyvista.core.filters.pyvista.PolyDataFilters.boolean_cut>`\\ \\(cut\\[\\, "
"tolerance\\, inplace\\]\\)"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.boolean_cut:1
msgid "Perform a Boolean cut using another mesh."
msgstr ""

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
msgid ""
":obj:`boolean_difference "
"<pyvista.core.filters.pyvista.PolyDataFilters.boolean_difference>`\\ "
"\\(mesh\\[\\, inplace\\]\\)"
msgstr ""
":obj:`boolean_difference "
"<pyvista.core.filters.pyvista.PolyDataFilters.boolean_difference>`\\ "
"\\(mesh\\[\\, inplace\\]\\)"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.boolean_difference:1
msgid ""
"Combine two meshes and retains only the volume in common between the meshes."
msgstr ""

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
msgid ""
":obj:`boolean_union "
"<pyvista.core.filters.pyvista.PolyDataFilters.boolean_union>`\\ "
"\\(mesh\\[\\, inplace\\]\\)"
msgstr ""
":obj:`boolean_union "
"<pyvista.core.filters.pyvista.PolyDataFilters.boolean_union>`\\ "
"\\(mesh\\[\\, inplace\\]\\)"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.boolean_union:1
msgid "Combine two meshes and attempts to create a manifold mesh."
msgstr ""

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
msgid ""
":obj:`clean <pyvista.core.filters.pyvista.PolyDataFilters.clean>`\\ "
"\\(\\[point\\_merging\\, tolerance\\, ...\\]\\)"
msgstr ""
":obj:`clean <pyvista.core.filters.pyvista.PolyDataFilters.clean>`\\ "
"\\(\\[point\\_merging\\, tolerance\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.clean:1
msgid "Clean the mesh."
msgstr "メッシュをクリーンします。"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
msgid ""
":obj:`clip_closed_surface "
"<pyvista.core.filters.pyvista.PolyDataFilters.clip_closed_surface>`\\ "
"\\(\\[normal\\, origin\\, ...\\]\\)"
msgstr ""
":obj:`clip_closed_surface "
"<pyvista.core.filters.pyvista.PolyDataFilters.clip_closed_surface>`\\ "
"\\(\\[normal\\, origin\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.clip_closed_surface:1
msgid "Clip a closed polydata surface with a plane."
msgstr ""

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
msgid ""
":obj:`clip_with_plane "
"<pyvista.core.filters.pyvista.PolyDataFilters.clip_with_plane>`\\ "
"\\(origin\\, normal\\[\\, value\\, ...\\]\\)"
msgstr ""
":obj:`clip_with_plane "
"<pyvista.core.filters.pyvista.PolyDataFilters.clip_with_plane>`\\ "
"\\(origin\\, normal\\[\\, value\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
msgid ""
":obj:`compute_arc_length "
"<pyvista.core.filters.pyvista.PolyDataFilters.compute_arc_length>`\\ \\(\\)"
msgstr ""
":obj:`compute_arc_length "
"<pyvista.core.filters.pyvista.PolyDataFilters.compute_arc_length>`\\ \\(\\)"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.compute_arc_length:1
msgid "Compute the arc length over the length of the probed line."
msgstr ""

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
msgid ""
":obj:`compute_normals "
"<pyvista.core.filters.pyvista.PolyDataFilters.compute_normals>`\\ "
"\\(\\[cell\\_normals\\, ...\\]\\)"
msgstr ""
":obj:`compute_normals "
"<pyvista.core.filters.pyvista.PolyDataFilters.compute_normals>`\\ "
"\\(\\[cell\\_normals\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.compute_normals:1
msgid "Compute point and/or cell normals for a mesh."
msgstr ""

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
msgid ""
":obj:`curvature <pyvista.core.filters.pyvista.PolyDataFilters.curvature>`\\ "
"\\(\\[curv\\_type\\]\\)"
msgstr ""
":obj:`curvature <pyvista.core.filters.pyvista.PolyDataFilters.curvature>`\\ "
"\\(\\[curv\\_type\\]\\)"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.curvature:1
msgid "Return the pointwise curvature of a mesh."
msgstr "メッシュのポイント単位の曲率を返します。"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
msgid ""
":obj:`decimate <pyvista.core.filters.pyvista.PolyDataFilters.decimate>`\\ "
"\\(target\\_reduction\\[\\, ...\\]\\)"
msgstr ""
":obj:`decimate <pyvista.core.filters.pyvista.PolyDataFilters.decimate>`\\ "
"\\(target\\_reduction\\[\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.decimate:1
msgid ""
"Reduce the number of triangles in a triangular mesh using "
"vtkQuadricDecimation."
msgstr ""

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
msgid ""
":obj:`decimate_pro "
"<pyvista.core.filters.pyvista.PolyDataFilters.decimate_pro>`\\ "
"\\(reduction\\[\\, feature\\_angle\\, ...\\]\\)"
msgstr ""
":obj:`decimate_pro "
"<pyvista.core.filters.pyvista.PolyDataFilters.decimate_pro>`\\ "
"\\(reduction\\[\\, feature\\_angle\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.decimate_pro:1
msgid "Reduce the number of triangles in a triangular mesh."
msgstr "三角形メッシュ内の三角形の数を減らします。"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
msgid ""
":obj:`delaunay_2d "
"<pyvista.core.filters.pyvista.PolyDataFilters.delaunay_2d>`\\ \\(\\[tol\\, "
"alpha\\, offset\\, bound\\, ...\\]\\)"
msgstr ""
":obj:`delaunay_2d "
"<pyvista.core.filters.pyvista.PolyDataFilters.delaunay_2d>`\\ \\(\\[tol\\, "
"alpha\\, offset\\, bound\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.delaunay_2d:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.delauney_2d:1
#: ../../pyvista/docs/core/filters.rst:62:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.UnstructuredGridFilters.delaunay_2d:1
msgid "Apply a delaunay 2D filter along the best fitting plane."
msgstr "最適フィット平面に沿ってDelaunay2 Dフィルタを適用します。"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
msgid ""
":obj:`delauney_2d "
"<pyvista.core.filters.pyvista.PolyDataFilters.delauney_2d>`\\ \\(\\)"
msgstr ""
":obj:`delauney_2d "
"<pyvista.core.filters.pyvista.PolyDataFilters.delauney_2d>`\\ \\(\\)"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
msgid ""
":obj:`edge_mask <pyvista.core.filters.pyvista.PolyDataFilters.edge_mask>`\\ "
"\\(angle\\)"
msgstr ""
":obj:`edge_mask <pyvista.core.filters.pyvista.PolyDataFilters.edge_mask>`\\ "
"\\(angle\\)"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.edge_mask:1
msgid ""
"Return a mask of the points of a surface mesh that has a surface angle "
"greater than angle."
msgstr ""

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
msgid ""
":obj:`extrude <pyvista.core.filters.pyvista.PolyDataFilters.extrude>`\\ "
"\\(vector\\[\\, inplace\\, progress\\_bar\\]\\)"
msgstr ""
":obj:`extrude <pyvista.core.filters.pyvista.PolyDataFilters.extrude>`\\ "
"\\(vector\\[\\, inplace\\, progress\\_bar\\]\\)"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.extrude:1
msgid "Sweep polygonal data creating a \"skirt\" from free edges."
msgstr ""

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
msgid ""
":obj:`fill_holes "
"<pyvista.core.filters.pyvista.PolyDataFilters.fill_holes>`\\ "
"\\(hole\\_size\\[\\, inplace\\, progress\\_bar\\]\\)"
msgstr ""
":obj:`fill_holes "
"<pyvista.core.filters.pyvista.PolyDataFilters.fill_holes>`\\ "
"\\(hole\\_size\\[\\, inplace\\, progress\\_bar\\]\\)"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.fill_holes:1
msgid "Fill holes in a pyvista.PolyData or vtk.vtkPolyData object."
msgstr ""

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
msgid ""
":obj:`flip_normals "
"<pyvista.core.filters.pyvista.PolyDataFilters.flip_normals>`\\ \\(\\)"
msgstr ""
":obj:`flip_normals "
"<pyvista.core.filters.pyvista.PolyDataFilters.flip_normals>`\\ \\(\\)"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.flip_normals:1
msgid "Flip normals of a triangular mesh by reversing the point ordering."
msgstr "ポイントの順序を逆にして、三角形メッシュの法線を反転します。"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
msgid ""
":obj:`geodesic <pyvista.core.filters.pyvista.PolyDataFilters.geodesic>`\\ "
"\\(start\\_vertex\\, end\\_vertex\\[\\, inplace\\]\\)"
msgstr ""
":obj:`geodesic <pyvista.core.filters.pyvista.PolyDataFilters.geodesic>`\\ "
"\\(start\\_vertex\\, end\\_vertex\\[\\, inplace\\]\\)"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.geodesic:1
msgid ""
"Calculate the geodesic path between two vertices using Dijkstra's algorithm."
msgstr ""

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
msgid ""
":obj:`geodesic_distance "
"<pyvista.core.filters.pyvista.PolyDataFilters.geodesic_distance>`\\ "
"\\(start\\_vertex\\, end\\_vertex\\)"
msgstr ""
":obj:`geodesic_distance "
"<pyvista.core.filters.pyvista.PolyDataFilters.geodesic_distance>`\\ "
"\\(start\\_vertex\\, end\\_vertex\\)"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.geodesic_distance:1
msgid ""
"Calculate the geodesic distance between two vertices using Dijkstra's "
"algorithm."
msgstr ""

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
msgid ""
":obj:`plot_boundaries "
"<pyvista.core.filters.pyvista.PolyDataFilters.plot_boundaries>`\\ "
"\\(\\[edge\\_color\\]\\)"
msgstr ""
":obj:`plot_boundaries "
"<pyvista.core.filters.pyvista.PolyDataFilters.plot_boundaries>`\\ "
"\\(\\[edge\\_color\\]\\)"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.plot_boundaries:1
msgid "Plot boundaries of a mesh."
msgstr "メッシュの境界をプロットします。"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
msgid ""
":obj:`plot_curvature "
"<pyvista.core.filters.pyvista.PolyDataFilters.plot_curvature>`\\ "
"\\(\\[curv\\_type\\]\\)"
msgstr ""
":obj:`plot_curvature "
"<pyvista.core.filters.pyvista.PolyDataFilters.plot_curvature>`\\ "
"\\(\\[curv\\_type\\]\\)"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.plot_curvature:1
msgid "Plot the curvature."
msgstr "曲率をプロットします。"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
msgid ""
":obj:`plot_normals "
"<pyvista.core.filters.pyvista.PolyDataFilters.plot_normals>`\\ "
"\\(\\[show\\_mesh\\, mag\\, flip\\, use\\_every\\]\\)"
msgstr ""
":obj:`plot_normals "
"<pyvista.core.filters.pyvista.PolyDataFilters.plot_normals>`\\ "
"\\(\\[show\\_mesh\\, mag\\, flip\\, use\\_every\\]\\)"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.plot_normals:1
msgid "Plot the point normals of a mesh."
msgstr "メッシュのポイント法線をプロットします。"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
msgid ""
":obj:`project_points_to_plane "
"<pyvista.core.filters.pyvista.PolyDataFilters.project_points_to_plane>`\\ "
"\\(\\[origin\\, normal\\, ...\\]\\)"
msgstr ""
":obj:`project_points_to_plane "
"<pyvista.core.filters.pyvista.PolyDataFilters.project_points_to_plane>`\\ "
"\\(\\[origin\\, normal\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.project_points_to_plane:1
msgid "Project points of this mesh to a plane."
msgstr "このメッシュの点を平面に投影します。"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
msgid ""
":obj:`ray_trace <pyvista.core.filters.pyvista.PolyDataFilters.ray_trace>`\\ "
"\\(origin\\, end\\_point\\[\\, first\\_point\\, ...\\]\\)"
msgstr ""
":obj:`ray_trace <pyvista.core.filters.pyvista.PolyDataFilters.ray_trace>`\\ "
"\\(origin\\, end\\_point\\[\\, first\\_point\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.ray_trace:1
msgid "Perform a single ray trace calculation."
msgstr "単一のレイトレース計算を実行します。"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
msgid ""
":obj:`remove_points "
"<pyvista.core.filters.pyvista.PolyDataFilters.remove_points>`\\ "
"\\(remove\\[\\, mode\\, keep\\_scalars\\, ...\\]\\)"
msgstr ""
":obj:`remove_points "
"<pyvista.core.filters.pyvista.PolyDataFilters.remove_points>`\\ "
"\\(remove\\[\\, mode\\, keep\\_scalars\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.remove_points:1
msgid "Rebuild a mesh by removing points."
msgstr "点を削除してメッシュを再構築します。"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
msgid ""
":obj:`ribbon <pyvista.core.filters.pyvista.PolyDataFilters.ribbon>`\\ "
"\\(\\[width\\, scalars\\, angle\\, factor\\, ...\\]\\)"
msgstr ""
":obj:`ribbon <pyvista.core.filters.pyvista.PolyDataFilters.ribbon>`\\ "
"\\(\\[width\\, scalars\\, angle\\, factor\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.ribbon:1
msgid "Create a ribbon of the lines in this dataset."
msgstr "このデータセットに線分のリボンを作成します。"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
msgid ""
":obj:`smooth <pyvista.core.filters.pyvista.PolyDataFilters.smooth>`\\ "
"\\(\\[n\\_iter\\, relaxation\\_factor\\, ...\\]\\)"
msgstr ""
":obj:`smooth <pyvista.core.filters.pyvista.PolyDataFilters.smooth>`\\ "
"\\(\\[n\\_iter\\, relaxation\\_factor\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.smooth:1
msgid "Adjust point coordinates using Laplacian smoothing."
msgstr "Laplacianスムージングを使用してポイント座標を調整します。"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
msgid ""
":obj:`strip <pyvista.core.filters.pyvista.PolyDataFilters.strip>`\\ "
"\\(\\[join\\, max\\_length\\, pass\\_cell\\_data\\, ...\\]\\)"
msgstr ""
":obj:`strip <pyvista.core.filters.pyvista.PolyDataFilters.strip>`\\ "
"\\(\\[join\\, max\\_length\\, pass\\_cell\\_data\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.strip:1
msgid "Strip poly data cells."
msgstr "ポリゴンデータセルをストリップします。"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
msgid ""
":obj:`subdivide <pyvista.core.filters.pyvista.PolyDataFilters.subdivide>`\\ "
"\\(nsub\\[\\, subfilter\\, inplace\\]\\)"
msgstr ""
":obj:`subdivide <pyvista.core.filters.pyvista.PolyDataFilters.subdivide>`\\ "
"\\(nsub\\[\\, subfilter\\, inplace\\]\\)"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.subdivide:1
msgid ""
"Increase the number of triangles in a single, connected triangular mesh."
msgstr "単一の接続された三角形メッシュ内の三角形の数を増やします。"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
msgid ""
":obj:`tri_filter "
"<pyvista.core.filters.pyvista.PolyDataFilters.tri_filter>`\\ "
"\\(\\[inplace\\]\\)"
msgstr ""
":obj:`tri_filter "
"<pyvista.core.filters.pyvista.PolyDataFilters.tri_filter>`\\ "
"\\(\\[inplace\\]\\)"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
msgid ""
":obj:`triangulate "
"<pyvista.core.filters.pyvista.PolyDataFilters.triangulate>`\\ "
"\\(\\[inplace\\]\\)"
msgstr ""
":obj:`triangulate "
"<pyvista.core.filters.pyvista.PolyDataFilters.triangulate>`\\ "
"\\(\\[inplace\\]\\)"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
msgid ""
":obj:`tube <pyvista.core.filters.pyvista.PolyDataFilters.tube>`\\ "
"\\(\\[radius\\, scalars\\, capping\\, n\\_sides\\, ...\\]\\)"
msgstr ""
":obj:`tube <pyvista.core.filters.pyvista.PolyDataFilters.tube>`\\ "
"\\(\\[radius\\, scalars\\, capping\\, n\\_sides\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:43:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.tube:1
msgid "Generate a tube around each input line."
msgstr "各入力ラインの周囲にチューブを生成します。"

#: ../../pyvista/pyvista/core/filters.pydocstring of pyvista.PolyDataFilters:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.UnstructuredGridFilters:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.UniformGridFilters:1
msgid "Bases: :class:`pyvista.core.filters.DataSetFilters`"
msgstr "基底: :class:`pyvista.core.filters.DataSetFilters`"

#: ../../pyvista/pyvista/core/filters.pydocstring of pyvista.PolyDataFilters:1
msgid "An internal class to manage filtes/algorithms for polydata datasets."
msgstr "ポリデータデータセットのファイル/アルゴリズムを管理する内部クラス。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.boolean_add:3
msgid "Does not attempt to \"join\" the meshes."
msgstr "メッシュを \"結合\" しようとはしません。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.boolean_add:5
msgid "The mesh to add."
msgstr "追加するメッシュ。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.boolean_add:10
msgid "**joinedmesh** -- Initial mesh and the new mesh when inplace=False."
msgstr "**joinedmesh** -- inplace=Falseの場合、初期メッシュと新しいメッシュです。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.boolean_cut:3
msgid "Mesh making the cut"
msgstr "切断するメッシュ"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.boolean_cut:8
msgid "**mesh** -- The cut mesh when inplace=False"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.boolean_difference:3
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.boolean_union:3
msgid "The mesh to perform a union against."
msgstr "結合を実行するメッシュ先。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.boolean_difference:8
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.boolean_union:8
msgid "**union** -- The union mesh when inplace=False."
msgstr "**union** -- inplace=Falseの場合のユニオンメッシュ。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.clean:3
msgid ""
"This merges duplicate points, removes unused points, and/or removes "
"degenerate cells."
msgstr "これにより、重複したポイントがマージされ、未使用のポイントが削除され、縮退したセルが削除されます。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.clean:6
msgid "Enables point merging.  On by default."
msgstr "ポイントのマージを有効にします。既定ではオンです。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.clean:8
msgid ""
"Set merging tolerance.  When enabled merging is set to absolute distance. If"
" ``absolute`` is False, then the merging tolerance is a fraction of the "
"bounding box length. The alias ``merge_tol`` is also excepted."
msgstr ""
"マージ許容値を設定します。有効な場合、マージは絶対距離に設定されます。``absolute`` "
"がFalseの場合、結合許容差は境界ボックスの長さの分数になります。別名 ``merge_tol`` も例外です。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.clean:13
msgid ""
"Turn on/off conversion of degenerate lines to points.  Enabled by default."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.clean:16
msgid ""
"Turn on/off conversion of degenerate polys to lines.  Enabled by default."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.clean:19
msgid "Turn on/off conversion of degenerate strips to polys."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.clean:21
msgid "Updates mesh in-place while returning nothing.  Default True."
msgstr "何も返さずにインプレイスメッシュを更新します。既定値はTrueです。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.clean:28
msgid "**mesh** -- Cleaned mesh.  None when inplace=True"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.clip_closed_surface:3
msgid ""
"This currently only supports one plane but could be implemented to handle a "
"plane collection."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.clip_closed_surface:6
msgid ""
"It will produce a new closed surface by creating new polygonal faces where "
"the input data was clipped."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.clip_closed_surface:9
msgid ""
"Non-manifold surfaces should not be used as input for this filter. The input"
" surface should have no open edges, and must not have any edges that are "
"shared by more than two faces. In addition, the input surface should not "
"self-intersect, meaning that the faces of the surface should only touch at "
"their edges."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.clip_with_plane:3
msgid "DEPRECATED: Please use `.clip` instead."
msgstr "非推奨: 代わりに `.clip` を使用してください。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.compute_arc_length:3
msgid ""
"It adds a new point-data array named \"arc_length\" with the computed arc "
"length for each of the polylines in the input. For all other cell types, the"
" arc length is set to 0."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.compute_normals:3
msgid ""
"The filter can reorder polygons to insure consistent orientation across "
"polygon neighbors. Sharp edges can be split and points duplicated with "
"separate normals to give crisp (rendered) surface definition. It is also "
"possible to globally flip the normal orientation."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.compute_normals:8
msgid ""
"The algorithm works by determining normals for each polygon and then "
"averaging them at shared points. When sharp edges are present, the edges are"
" split and new points generated to prevent blurry edges (due to Gouraud "
"shading)."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.compute_normals:13
msgid "Calculation of cell normals. Defaults to True."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.compute_normals:15
msgid "Calculation of point normals. Defaults to True."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.compute_normals:17
msgid "Splitting of sharp edges. Defaults to False."
msgstr "シャープエッジの分割。既定値はFalseです。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.compute_normals:19
msgid ""
"Set global flipping of normal orientation. Flipping modifies both the normal"
" direction and the order of a cell's points. Defaults to False."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.compute_normals:23
msgid "Enforcement of consistent polygon ordering. Defaults to True."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.compute_normals:25
msgid ""
"Turn on/off the automatic determination of correct normal orientation. NOTE:"
" This assumes a completely closed surface (i.e. no boundary edges) and no "
"non-manifold edges. If these constraints do not hold, all bets are off. This"
" option adds some computational complexity, and is useful if you don't want "
"to have to inspect the rendered image to determine whether to turn on the "
"FlipNormals flag. However, this flag can work with the FlipNormals flag, and"
" if both are set, all the normals in the output will point \"inward\". "
"Defaults to False."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.compute_normals:35
msgid ""
"Turn on/off traversal across non-manifold edges. Changing this may prevent "
"problems where the consistency of polygonal ordering is corrupted due to "
"topological loops. Defaults to True."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.compute_normals:39
msgid ""
"The angle that defines a sharp edge. If the difference in angle across "
"neighboring polygons is greater than this value, the shared edge is "
"considered \"sharp\". Defaults to 30.0."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.compute_normals:43
msgid "Updates mesh in-place while returning nothing. Defaults to False."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.compute_normals:46
msgid "**mesh** -- Updated mesh with cell and point normals if inplace=False"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.compute_normals:51
msgid "Previous arrays named \"Normals\" will be overwritten."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.compute_normals:53
msgid ""
"Normals are computed only for polygons and triangle strips. Normals are not "
"computed for lines or vertices."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.compute_normals:56
msgid ""
"Triangle strips are broken up into triangle polygons. You may want to "
"restrip the triangles."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.compute_normals:59
msgid "May be easier to run mesh.point_normals or mesh.cell_normals"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.curvature:3
msgid "vtk polydata mesh"
msgstr "vtkポリデータメッシュ"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.curvature:5
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.curvature:10
msgid "One of the following strings Mean Gaussian Maximum Minimum"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.curvature:16
msgid "**curvature** -- Curvature values"
msgstr "**curvature** -- 曲率の値"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.decimate:3
msgid "Mesh to decimate"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.decimate:5
msgid ""
"Fraction of the original mesh to remove. TargetReduction is set to 0.9, this"
" filter will try to reduce the data set to 10% of its original size and will"
" remove 90% of the input triangles."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.decimate:10
msgid ""
"Decide whether to activate volume preservation which greatly reduces errors "
"in triangle normal direction. If off, volume preservation is disabled and if"
" AttributeErrorMetric is active, these errors can be large. Defaults to "
"False."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.decimate:15
msgid ""
"Decide whether to include data attributes in the error metric. If off, then "
"only geometric error is used to control the decimation. Defaults to False."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.decimate:19
msgid ""
"If attribute errors are to be included in the metric (i.e., "
"AttributeErrorMetric is on), then the following flags control which "
"attributes are to be included in the error calculation. Defaults to True."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.decimate:24
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.decimate:28
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.decimate:30
msgid "See scalars parameter. Defaults to True."
msgstr "スカラーパラメータを参照してください。既定値はTrueです。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.decimate:26
msgid "See scalars parameter. Defaults to False."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.decimate:32
msgid ""
"The scaling weight contribution of the scalar attribute. These values are "
"used to weight the contribution of the attributes towards the error metric. "
"Defaults to 0.1."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.decimate:36
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.decimate:38
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.decimate:40
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.decimate:42
msgid "See scalars weight parameter. Defaults to 0.1."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.decimate:49
msgid "**outmesh** -- Decimated mesh.  None when inplace=True."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.decimate_pro:3
msgid ""
"It forms a good approximation to the original geometry. Based on the "
"algorithm originally described in \"Decimation of Triangle Meshes\", Proc "
"Siggraph 92."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.decimate_pro:6
msgid ""
"Reduction factor. A value of 0.9 will leave 10 % of the original number of "
"vertices."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.decimate_pro:9
msgid ""
"Angle used to define what an edge is (i.e., if the surface normal between "
"two adjacent triangles is >= feature_angle, an edge exists)."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.decimate_pro:12
msgid ""
"Angle used to control the splitting of the mesh. A split line exists when "
"the surface normals between two edge connected triangles are >= split_angle."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.decimate_pro:15
msgid ""
"Controls the splitting of the mesh at corners, along edges, at non-manifold "
"points, or anywhere else a split is required. Turning splitting off will "
"better preserve the original topology of the mesh, but may not necessarily "
"give the exact requested decimation."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.decimate_pro:20
msgid ""
"Separates the mesh into semi-planar patches, which are disconnected from "
"each other. This can give superior results in some cases. If pre_split_mesh "
"is set to True, the mesh is split with the specified split_angle. Otherwise "
"mesh splitting is deferred as long as possible."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.decimate_pro:25
msgid ""
"Controls topology preservation. If on, mesh splitting and hole elimination "
"will not occur. This may limit the maximum reduction that may be achieved."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.decimate_pro:31
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.smooth:26
msgid "**mesh** -- Decimated mesh. None when inplace=True."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.delaunay_2d:3
msgid ""
"Specify a tolerance to control discarding of closely spaced points. This "
"tolerance is specified as a fraction of the diagonal length of the bounding "
"box of the points."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.delaunay_2d:7
msgid ""
"Specify alpha (or distance) value to control output of this filter. For a "
"non-zero alpha value, only edges or triangles contained within a sphere "
"centered at mesh vertices will be output. Otherwise, only triangles will be "
"output."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.delaunay_2d:12
msgid ""
"Specify a multiplier to control the size of the initial, bounding Delaunay "
"triangulation."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.delaunay_2d:15
msgid ""
"Boolean controls whether bounding triangulation points (and associated "
"triangles) are included in the output. (These are introduced as an initial "
"triangulation to begin the triangulation process. This feature is nice for "
"debugging output.)"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.delaunay_2d:20
msgid "If True, overwrite this mesh with the triangulated mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.delaunay_2d:22
msgid ""
"Specify the source object used to specify constrained edges and loops. (This"
" is optional.) If set, and lines/polygons are defined, a constrained "
"triangulation is created. The lines/polygons are assumed to reference points"
" in the input point set (i.e. point ids are identical in the input and "
"source). Note that this method does not connect the pipeline. See "
"SetSourceConnection for connecting the pipeline."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.delauney_2d:3
msgid "DEPRECATED. Please see :func:`pyvista.PolyData.delaunay_2d`."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.edge_mask:3
msgid "Angle to consider an edge."
msgstr "エッジを考慮する角度。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.extrude:3
msgid "This will create a line from vertices."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.extrude:5
msgid ""
"This takes polygonal data as input and generates polygonal data on output. "
"The input dataset is swept according to some extrusion function and creates "
"new polygonal primitives. These primitives form a \"skirt\" or swept "
"surface. For example, sweeping a line results in a quadrilateral, and "
"sweeping a triangle creates a \"wedge\"."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.extrude:12
msgid ""
"There are a number of control parameters for this filter. You can control "
"whether the sweep of a 2D object (i.e., polygon or triangle strip) is capped"
" with the generating geometry via the \"Capping\" parameter."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.extrude:17
msgid ""
"The skirt is generated by locating certain topological features. Free edges "
"(edges of polygons or triangle strips only used by one polygon or triangle "
"strips) generate surfaces. This is true also of lines or polylines. Vertices"
" generate lines."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.extrude:23
msgid ""
"This filter can be used to create 3D fonts, 3D irregular bar charts, or to "
"model 2 1/2D objects like punched plates. It also can be used to create "
"solid objects from 2D polygonal meshes."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.extrude:28
msgid "Mesh to extrude."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.extrude:30
msgid "Direction and length to extrude the mesh in."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.extrude:32
msgid "Overwrites the original mesh inplace."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.extrude:39
msgid "Extrude a half arc circle"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.fill_holes:3
msgid ""
"Holes are identified by locating boundary edges, linking them together into "
"loops, and then triangulating the resulting loops. Note that you can specify"
" an approximate limit to the size of the hole that can be filled."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.fill_holes:8
msgid ""
"Specifies the maximum hole size to fill. This is represented as a radius to "
"the bounding circumsphere containing the hole. Note that this is an "
"approximate area; the actual area cannot be computed without first "
"triangulating the hole."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.fill_holes:18
msgid "**mesh** -- Mesh with holes filled.  None when inplace=True"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.geodesic:3
msgid ""
"This will add an array titled `vtkOriginalPointIds` of the input mesh's "
"point ids to the output mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.geodesic:6
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.geodesic_distance:3
msgid "Vertex index indicating the start point of the geodesic segment."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.geodesic:8
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.geodesic_distance:5
msgid "Vertex index indicating the end point of the geodesic segment."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.geodesic:11
msgid ""
"**output** -- PolyData object consisting of the line segment between the two"
" given vertices."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.geodesic_distance:8
msgid "**length** -- Length of the geodesic segment."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.plot_boundaries:3
msgid "The color of the edges when they are added to the plotter."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.plot_boundaries:5
msgid ""
"All additional keyword arguments will be passed to "
":func:`pyvista.BasePlotter.add_mesh`"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.plot_curvature:3
msgid ""
"One of the following strings indicating curvature type  - Mean - Gaussian - "
"Maximum - Minimum"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.plot_curvature:3
msgid "One of the following strings indicating curvature type"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.plot_curvature:5
msgid "Mean"
msgstr "平均"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.plot_curvature:6
msgid "Gaussian"
msgstr "Gaussian"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.plot_curvature:7
msgid "Maximum"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.plot_curvature:8
msgid "Minimum"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.plot_curvature:10
msgid "See :func:`pyvista.plot`"
msgstr ":func:`pyvista.plot` 参照"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.plot_curvature:13
msgid "**cpos** -- List of camera position, focal point, and view up"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.ray_trace:3
msgid ""
"This requires a mesh and a line segment defined by an origin and end_point."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.ray_trace:6
msgid "Start of the line segment."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.ray_trace:8
msgid "End of the line segment."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.ray_trace:10
msgid "Returns intersection of first point only."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.ray_trace:12
msgid "Plots ray trace results"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.ray_trace:14
msgid "Plots off screen.  Used for unit testing."
msgstr "画面から印刷します。ユニットテストに使用します。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.ray_trace:17
msgid ""
"* **intersection_points** (*np.ndarray*) -- Location of the intersection "
"points.  Empty array if no   intersections. * **intersection_cells** "
"(*np.ndarray*) -- Indices of the intersection cells.  Empty array if no   "
"intersections."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.ray_trace:17
msgid ""
"**intersection_points** (*np.ndarray*) -- Location of the intersection "
"points.  Empty array if no intersections."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.ray_trace:19
msgid ""
"**intersection_cells** (*np.ndarray*) -- Indices of the intersection cells."
"  Empty array if no intersections."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.remove_points:3
msgid "Only valid for all-triangle meshes."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.remove_points:5
msgid ""
"If remove is a bool array, points that are True will be removed.  Otherwise,"
" it is treated as a list of indices."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.remove_points:8
msgid ""
"When 'all', only faces containing all points flagged for removal will be "
"removed.  Default 'all'"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.remove_points:11
msgid "When True, point and cell scalars will be passed on to the new mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.remove_points:17
msgid ""
"* **mesh** (*pyvista.PolyData*) -- Mesh without the points flagged for "
"removal.  Not returned   when inplace=False. * **ridx** (*np.ndarray*) -- "
"Indices of new points relative to the original mesh.  Not   returned when "
"inplace=False."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.remove_points:17
msgid ""
"**mesh** (*pyvista.PolyData*) -- Mesh without the points flagged for "
"removal.  Not returned when inplace=False."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.remove_points:19
msgid ""
"**ridx** (*np.ndarray*) -- Indices of new points relative to the original "
"mesh.  Not returned when inplace=False."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.ribbon:5
msgid ""
"If there are no lines in the input dataset, then the output will be an empty"
" PolyData mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.ribbon:8
msgid ""
"Set the \"half\" width of the ribbon. If the width is allowed to vary, this "
"is the minimum width. The default is 10% the length"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.ribbon:11
msgid ""
"String name of the scalars array to use to vary the ribbon width. This is "
"only used if a scalars array is specified."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.ribbon:14
msgid ""
"Set the offset angle of the ribbon from the line normal. (The angle is "
"expressed in degrees.) The default is 0.0"
msgstr "線分の法線からのリボンのオフセット角度を設定します。(角度は度数で表されます。)デフォルトは0.0です。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.ribbon:17
msgid ""
"Set the maximum ribbon width in terms of a multiple of the minimum width. "
"The default is 2.0"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.ribbon:20
msgid "Normal to use as default"
msgstr "デフォルトとして使用する標準"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.ribbon:22
msgid ""
"If True, generate texture coordinates along the ribbon. This can also be "
"specified to generate the texture coordinates in the following ways: "
"``'length'``, ``'normalized'``,"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.smooth:3
msgid ""
"The effect is to \"relax\" the mesh, making the cells better shaped and the "
"vertices more evenly distributed."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.smooth:6
msgid "Number of iterations for Laplacian smoothing."
msgstr "Laplacianスムージングの反復回数。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.smooth:8
msgid ""
"Relaxation factor controls the amount of displacement in a single iteration."
" Generally a lower relaxation factor and higher number of iterations is "
"numerically more stable."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.smooth:12
msgid ""
"Convergence criterion for the iteration process. Smaller numbers result in "
"more smoothing iterations. Range from (0 to 1)."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.smooth:15
msgid ""
"Edge angle to control smoothing along edges (either interior or boundary)."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.smooth:17
msgid "Feature angle for sharp edge identification."
msgstr "シャープエッジを識別するためのフィーチャ角度です。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.smooth:19
msgid "Boolean flag to control smoothing of boundary edges."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.smooth:21
msgid "Boolean flag to control smoothing of feature edges."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.strip:3
msgid ""
"Generates triangle strips and/or poly-lines from input polygons, triangle "
"strips, and lines."
msgstr "入力ポリゴン、三角形ストリップ、およびラインから三角形ストリップまたはポリラインを生成します。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.strip:6
msgid ""
"Polygons are assembled into triangle strips only if they are triangles; "
"other types of polygons are passed through to the output and not stripped. "
"(Use  ``triangulate`` filter to triangulate non-triangular polygons prior to"
" running this filter if you need to strip all the data.) The filter will "
"pass through (to the output) vertices if they are present in the input "
"polydata. Also note that if triangle strips or polylines are defined in the "
"input they are passed through and not joined nor extended. (If you wish to "
"strip these use ``triangulate`` filter to fragment the input into triangles "
"and lines prior to running this filter.)"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.strip:17
msgid ""
"If on, the output polygonal segments will be joined if they are contiguous. "
"This is useful after slicing a surface. The default is off."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.strip:21
msgid ""
"Specify the maximum number of triangles in a triangle strip, and/or the "
"maximum number of lines in a poly-line."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.strip:24
msgid ""
"Enable/Disable passing of the CellData in the input to the output as "
"FieldData. Note the field data is transformed."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.strip:27
msgid ""
"If on, the output polygonal dataset will have a celldata array that holds "
"the cell index of the original 3D cell that produced each output cell. This "
"is useful for picking. The default is off to conserve memory."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.strip:32
msgid ""
"If on, the output polygonal dataset will have a pointdata array that holds "
"the point index of the original vertex that produced each output vertex. "
"This is useful for picking. The default is off to conserve memory."
msgstr ""
"オンの場合、出力ポリゴンデータセットには、各出力頂点を生成したオリジナルの頂点のポイントインデックスを保持するポイントデータ配列が含まれます。これはピッキングに便利です。デフォルトでは、メモリを節約するためにオフになっています。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.subdivide:3
msgid ""
"Uses one of the following vtk subdivision filters to subdivide a mesh. "
"vtkButterflySubdivisionFilter vtkLoopSubdivisionFilter "
"vtkLinearSubdivisionFilter"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.subdivide:8
msgid ""
"Linear subdivision results in the fastest mesh subdivision, but it does not "
"smooth mesh edges, but rather splits each triangle into 4 smaller triangles."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.subdivide:12
msgid ""
"Butterfly and loop subdivision perform smoothing when dividing, and may "
"introduce artifacts into the mesh when dividing."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.subdivide:15
msgid ""
"Subdivision filter appears to fail for multiple part meshes.  Should be one "
"single mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.subdivide:18
msgid ""
"Number of subdivisions.  Each subdivision creates 4 new triangles, so the "
"number of resulting triangles is nface*4**nsub where nface is the current "
"number of faces."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.subdivide:22
msgid "Can be one of the following: 'butterfly', 'loop', 'linear'"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.subdivide:27
msgid "**mesh** -- pyvista polydata object.  None when inplace=True"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.subdivide:37
msgid "alternatively, update mesh in-place"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.tri_filter:3
msgid "DEPRECATED: Please use ``triangulate`` instead."
msgstr "非推奨: 代わりに ``triangulate`` を使用してください。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.triangulate:3
msgid "More complex polygons will be broken down into tetrahedrals."
msgstr "より複雑なポリゴンは4面体に分割されます。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.triangulate:8
msgid "**mesh** -- Mesh containing only triangles.  None when inplace=True"
msgstr "**mesh** -- 三角形のみを含むメッシュ。 inplace=True の場合はNone"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.tube:3
msgid ""
"The radius of the tube can be set to linearly vary with a scalar value."
msgstr "チューブの半径は、スカラー値で線形に変化するように設定できます。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.tube:5
msgid "Minimum tube radius (minimum because the tube radius may vary)."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.tube:7
msgid "scalars array by which the radius varies"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.tube:9
msgid "Turn on/off whether to cap the ends with polygons. Default True."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.tube:11
msgid "Set the number of sides for the tube. Minimum of 3."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.tube:13
msgid "Maximum tube radius in terms of a multiple of the minimum radius."
msgstr "最小半径の倍数で表される最大チューブ半径。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.tube:15
msgid "The field preference when searching for the scalars array by name"
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.PolyDataFilters.tube:20
msgid "**mesh** -- Tube-filtered mesh. None when inplace=True."
msgstr ""

#: ../../pyvista/docs/core/filters.rst:52
msgid "UnstructuredGrid Filters"
msgstr "UnstructuredGrid Filters"

#: ../../pyvista/docs/core/filters.rst:54
msgid ""
"The :class:`pyvista.UnstructuredGridFilters` is inherited by "
":class:`pyvista.UnstructuredGrid` making all the following filters available"
" as callable methods directly from any ``UnstructuredGrid`` mesh."
msgstr ""
":class:`pyvista.UnstructuredGridFilters` は :class:`pyvista.UnstructuredGrid`"
" によって継承され、以下のすべてのフィルタを ``UnstructuredGrid`` "
"メッシュから直接呼び出し可能なメソッドとして利用できるようにします。"

#: ../../pyvista/docs/core/filters.rst:62:<autosummary>:1
msgid ""
":obj:`delaunay_2d "
"<pyvista.core.filters.pyvista.UnstructuredGridFilters.delaunay_2d>`\\ "
"\\(\\[tol\\, alpha\\, offset\\, bound\\, ...\\]\\)"
msgstr ""
":obj:`delaunay_2d "
"<pyvista.core.filters.pyvista.UnstructuredGridFilters.delaunay_2d>`\\ "
"\\(\\[tol\\, alpha\\, offset\\, bound\\, ...\\]\\)"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.UnstructuredGridFilters:1
msgid ""
"An internal class to manage filtes/algorithms for unstructured grid "
"datasets."
msgstr "非構造化グリッドデータセットのファイル/アルゴリズムを管理する内部クラス。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.UnstructuredGridFilters.delaunay_2d:3
msgid ""
"This extracts the grid's points and performs the triangulation on those "
"alone."
msgstr "これにより、グリッドのポイントが抽出され、それらのポイントだけに対して三角形分割が実行されます。"

#: ../../pyvista/docs/core/filters.rst:72
msgid "UniformGrid Filters"
msgstr "UniformGridフィルタ"

#: ../../pyvista/docs/core/filters.rst:74
msgid ""
"The :class:`pyvista.UniformGridFilters` is inherited by "
":class:`pyvista.UniformGrid` making all the following filters available as "
"callable methods directly from any ``UniformGrid`` mesh."
msgstr ""
":class:`pyvista.UniformGridFilters` は :class:`pyvista.UniformGrid` "
"によって継承され、以下のすべてのフィルタを ``UniformGrid`` メッシュから直接呼び出し可能なメソッドとして利用できるようにします。"

#: ../../pyvista/docs/core/filters.rst:82:<autosummary>:1
msgid ""
":obj:`extract_subset "
"<pyvista.core.filters.pyvista.UniformGridFilters.extract_subset>`\\ "
"\\(voi\\[\\, rate\\, boundary\\]\\)"
msgstr ""
":obj:`extract_subset "
"<pyvista.core.filters.pyvista.UniformGridFilters.extract_subset>`\\ "
"\\(voi\\[\\, rate\\, boundary\\]\\)"

#: ../../pyvista/docs/core/filters.rst:82:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.UniformGridFilters.extract_subset:1
msgid "Select piece (e.g., volume of interest)."
msgstr "部品を選択します。(例えば、関心のあるボリューム)"

#: ../../pyvista/docs/core/filters.rst:82:<autosummary>:1
msgid ""
":obj:`gaussian_smooth "
"<pyvista.core.filters.pyvista.UniformGridFilters.gaussian_smooth>`\\ "
"\\(\\[radius\\_factor\\, std\\_dev\\, ...\\]\\)"
msgstr ""
":obj:`gaussian_smooth "
"<pyvista.core.filters.pyvista.UniformGridFilters.gaussian_smooth>`\\ "
"\\(\\[radius\\_factor\\, std\\_dev\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:82:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.UniformGridFilters.gaussian_smooth:1
msgid "Smooth the data with a Gaussian kernel."
msgstr "Gaussカーネルでデータを平滑化します。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.UniformGridFilters:1
msgid ""
"An internal class to manage filtes/algorithms for uniform grid datasets."
msgstr "構造化グリッドデータセットのファイル/アルゴリズムを管理する内部クラス。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.UniformGridFilters.extract_subset:3
msgid ""
"To use this filter set the VOI ivar which are i-j-k min/max indices that "
"specify a rectangular region in the data. (Note that these are 0-offset.) "
"You can also specify a sampling rate to subsample the data."
msgstr ""
"このフィルタを使用するには、データ内の矩形領域を指定するi-j-k min/maxインデックスであるVOI "
"ivarを設定します。(これらは0-オフセットであることに注意してください。)サンプリングレートを指定して、データをサブサンプリングすることもできます。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.UniformGridFilters.extract_subset:8
msgid ""
"Typical applications of this filter are to extract a slice from a volume for"
" image processing, subsampling large volumes to reduce data size, or "
"extracting regions of a volume with interesting data."
msgstr ""
"このフィルタの典型的な用途は、画像処理のためにボリュームからスライスを抽出すること、データ・サイズを低減するために大容量ボリュームをサブサンプリングすること、または関心のあるデータを有するボリュームの領域を抽出することです。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.UniformGridFilters.extract_subset:12
msgid ""
"Length 6 iterable of ints: ``(xmin, xmax, ymin, ymax, zmin, zmax)``. These "
"bounds specify the volume of interest in i-j-k min/max indices."
msgstr ""
"整数の長さ6反復可能: ``(xmin, xmax, ymin, ymax, zmin, "
"zmax)``。これらの境界は、i-j-kの最小/最大インデックスで対象のボリュームを指定します。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.UniformGridFilters.extract_subset:16
msgid ""
"Length 3 iterable of ints: ``(xrate, yrate, zrate)``. Default: ``(1, 1, 1)``"
msgstr "整数の反復可能な長さ3: ``(xrate, yrate, zrate)`` 。デフォルト: ``(1, 1, 1)``"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.UniformGridFilters.extract_subset:19
msgid ""
"Control whether to enforce that the \"boundary\" of the grid is output in "
"the subsampling process. (This only has effect when the rate in any "
"direction is not equal to 1). When this is on, the subsampling will always "
"include the boundary of the grid even though the sample rate is not an even "
"multiple of the grid dimensions. (By default this is off.)"
msgstr ""
"グリッドの \"boundary\" "
"をサブサンプリング処理で出力するかどうかを制御します。(これは、いずれかの方向の比率が1でない場合にのみ有効です)。このチェックボックスにチェックマークが付いている場合、サンプルレートがグリッド寸法の倍数でなくても、サブサンプリングには常にグリッドの境界が含まれます。(デフォルトではオフです。)"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.UniformGridFilters.gaussian_smooth:3
msgid "Unitless factor to limit the extent of the kernel."
msgstr "カーネルの大きさを制限する単位なし係数。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.UniformGridFilters.gaussian_smooth:5
msgid "Standard deviation of the kernel in pixel units."
msgstr ""

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.UniformGridFilters.gaussian_smooth:7
msgid "Name of scalars to process. Defaults to currently active scalars."
msgstr ""

#: ../../pyvista/docs/core/filters.rst:91
msgid "Composite Filters"
msgstr "Composite フィルタ"

#: ../../pyvista/docs/core/filters.rst:93
msgid ""
"These are filters that can be applied to composite datasets, i.e. "
":class:`pyvista.MultiBlock`. The :class:`pyvista.CompositeFilters` class "
"inherits many but not all of the filters from "
":class:`pyvista.DataSetFilters`."
msgstr ""
"これらは複合データセット、すなわち :class:`pyvista.MultiBlock` に適用できるフィルタです。 "
":class:`pyvista.CompositeFilters` クラスは、 :class:`pyvista.DataSetFilters` "
"から多くのフィルタを継承しますが、すべてを継承するわけではありません。"

#: ../../pyvista/docs/core/filters.rst:101:<autosummary>:1
msgid ""
":obj:`cell_centers "
"<pyvista.core.filters.pyvista.CompositeFilters.cell_centers>`\\ "
"\\(\\[vertex\\]\\)"
msgstr ""
":obj:`cell_centers "
"<pyvista.core.filters.pyvista.CompositeFilters.cell_centers>`\\ "
"\\(\\[vertex\\]\\)"

#: ../../pyvista/docs/core/filters.rst:101:<autosummary>:1
msgid ""
":obj:`cell_data_to_point_data "
"<pyvista.core.filters.pyvista.CompositeFilters.cell_data_to_point_data>`\\ "
"\\(\\[pass\\_cell\\_data\\]\\)"
msgstr ""
":obj:`cell_data_to_point_data "
"<pyvista.core.filters.pyvista.CompositeFilters.cell_data_to_point_data>`\\ "
"\\(\\[pass\\_cell\\_data\\]\\)"

#: ../../pyvista/docs/core/filters.rst:101:<autosummary>:1
msgid ""
":obj:`clip <pyvista.core.filters.pyvista.CompositeFilters.clip>`\\ "
"\\(\\[normal\\, origin\\, invert\\, value\\, inplace\\]\\)"
msgstr ""
":obj:`clip <pyvista.core.filters.pyvista.CompositeFilters.clip>`\\ "
"\\(\\[normal\\, origin\\, invert\\, value\\, inplace\\]\\)"

#: ../../pyvista/docs/core/filters.rst:101:<autosummary>:1
msgid ""
":obj:`clip_box <pyvista.core.filters.pyvista.CompositeFilters.clip_box>`\\ "
"\\(\\[bounds\\, invert\\, factor\\]\\)"
msgstr ""
":obj:`clip_box <pyvista.core.filters.pyvista.CompositeFilters.clip_box>`\\ "
"\\(\\[bounds\\, invert\\, factor\\]\\)"

#: ../../pyvista/docs/core/filters.rst:101:<autosummary>:1
msgid ""
":obj:`combine <pyvista.core.filters.pyvista.CompositeFilters.combine>`\\ "
"\\(\\[merge\\_points\\]\\)"
msgstr ""
":obj:`combine <pyvista.core.filters.pyvista.CompositeFilters.combine>`\\ "
"\\(\\[merge\\_points\\]\\)"

#: ../../pyvista/docs/core/filters.rst:101:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.combine:1
msgid "Append all blocks into a single unstructured grid."
msgstr "すべてのブロックを単一の非構造化グリッドに追加します。"

#: ../../pyvista/docs/core/filters.rst:101:<autosummary>:1
msgid ""
":obj:`compute_cell_sizes "
"<pyvista.core.filters.pyvista.CompositeFilters.compute_cell_sizes>`\\ "
"\\(\\[length\\, area\\, volume\\, ...\\]\\)"
msgstr ""
":obj:`compute_cell_sizes "
"<pyvista.core.filters.pyvista.CompositeFilters.compute_cell_sizes>`\\ "
"\\(\\[length\\, area\\, volume\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:101:<autosummary>:1
msgid ""
":obj:`elevation <pyvista.core.filters.pyvista.CompositeFilters.elevation>`\\"
" \\(\\[low\\_point\\, high\\_point\\, ...\\]\\)"
msgstr ""
":obj:`elevation <pyvista.core.filters.pyvista.CompositeFilters.elevation>`\\"
" \\(\\[low\\_point\\, high\\_point\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:101:<autosummary>:1
msgid ""
":obj:`extract_all_edges "
"<pyvista.core.filters.pyvista.CompositeFilters.extract_all_edges>`\\ "
"\\(\\[progress\\_bar\\]\\)"
msgstr ""
":obj:`extract_all_edges "
"<pyvista.core.filters.pyvista.CompositeFilters.extract_all_edges>`\\ "
"\\(\\[progress\\_bar\\]\\)"

#: ../../pyvista/docs/core/filters.rst:101:<autosummary>:1
msgid ""
":obj:`extract_geometry "
"<pyvista.core.filters.pyvista.CompositeFilters.extract_geometry>`\\ \\(\\)"
msgstr ""
":obj:`extract_geometry "
"<pyvista.core.filters.pyvista.CompositeFilters.extract_geometry>`\\ \\(\\)"

#: ../../pyvista/docs/core/filters.rst:101:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.extract_geometry:1
msgid "Combine the geomertry of all blocks into a single ``PolyData`` object."
msgstr "すべてのブロックのジオメトリを単一の ``PolyData`` オブジェクトに結合します。"

#: ../../pyvista/docs/core/filters.rst:101:<autosummary>:1
msgid ""
":obj:`outline <pyvista.core.filters.pyvista.CompositeFilters.outline>`\\ "
"\\(\\[generate\\_faces\\, nested\\]\\)"
msgstr ""
":obj:`outline <pyvista.core.filters.pyvista.CompositeFilters.outline>`\\ "
"\\(\\[generate\\_faces\\, nested\\]\\)"

#: ../../pyvista/docs/core/filters.rst:101:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.outline:1
msgid ""
"Produce an outline of the full extent for the all blocks in this composite "
"dataset."
msgstr "この複合データセット内のすべてのブロックの全エクステントのアウトラインを作成します。"

#: ../../pyvista/docs/core/filters.rst:101:<autosummary>:1
msgid ""
":obj:`outline_corners "
"<pyvista.core.filters.pyvista.CompositeFilters.outline_corners>`\\ "
"\\(\\[factor\\, nested\\]\\)"
msgstr ""
":obj:`outline_corners "
"<pyvista.core.filters.pyvista.CompositeFilters.outline_corners>`\\ "
"\\(\\[factor\\, nested\\]\\)"

#: ../../pyvista/docs/core/filters.rst:101:<autosummary>:1
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.outline_corners:1
msgid ""
"Produce an outline of the corners for the all blocks in this composite "
"dataset."
msgstr "この複合データセットのすべてのブロックのコーナーのアウトラインを作成します。"

#: ../../pyvista/docs/core/filters.rst:101:<autosummary>:1
msgid ""
":obj:`point_data_to_cell_data "
"<pyvista.core.filters.pyvista.CompositeFilters.point_data_to_cell_data>`\\ "
"\\(\\[pass\\_point\\_data\\]\\)"
msgstr ""
":obj:`point_data_to_cell_data "
"<pyvista.core.filters.pyvista.CompositeFilters.point_data_to_cell_data>`\\ "
"\\(\\[pass\\_point\\_data\\]\\)"

#: ../../pyvista/docs/core/filters.rst:101:<autosummary>:1
msgid ""
":obj:`slice <pyvista.core.filters.pyvista.CompositeFilters.slice>`\\ "
"\\(\\[normal\\, origin\\, generate\\_triangles\\, ...\\]\\)"
msgstr ""
":obj:`slice <pyvista.core.filters.pyvista.CompositeFilters.slice>`\\ "
"\\(\\[normal\\, origin\\, generate\\_triangles\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:101:<autosummary>:1
msgid ""
":obj:`slice_along_axis "
"<pyvista.core.filters.pyvista.CompositeFilters.slice_along_axis>`\\ "
"\\(\\[n\\, axis\\, tolerance\\, ...\\]\\)"
msgstr ""
":obj:`slice_along_axis "
"<pyvista.core.filters.pyvista.CompositeFilters.slice_along_axis>`\\ "
"\\(\\[n\\, axis\\, tolerance\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:101:<autosummary>:1
msgid ""
":obj:`slice_along_line "
"<pyvista.core.filters.pyvista.CompositeFilters.slice_along_line>`\\ "
"\\(line\\[\\, generate\\_triangles\\, ...\\]\\)"
msgstr ""
":obj:`slice_along_line "
"<pyvista.core.filters.pyvista.CompositeFilters.slice_along_line>`\\ "
"\\(line\\[\\, generate\\_triangles\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:101:<autosummary>:1
msgid ""
":obj:`slice_orthogonal "
"<pyvista.core.filters.pyvista.CompositeFilters.slice_orthogonal>`\\ "
"\\(\\[x\\, y\\, z\\, ...\\]\\)"
msgstr ""
":obj:`slice_orthogonal "
"<pyvista.core.filters.pyvista.CompositeFilters.slice_orthogonal>`\\ "
"\\(\\[x\\, y\\, z\\, ...\\]\\)"

#: ../../pyvista/docs/core/filters.rst:101:<autosummary>:1
msgid ""
":obj:`triangulate "
"<pyvista.core.filters.pyvista.CompositeFilters.triangulate>`\\ "
"\\(\\[inplace\\]\\)"
msgstr ""
":obj:`triangulate "
"<pyvista.core.filters.pyvista.CompositeFilters.triangulate>`\\ "
"\\(\\[inplace\\]\\)"

#: ../../pyvista/docs/core/filters.rst:101:<autosummary>:1
msgid ""
":obj:`wireframe <pyvista.core.filters.pyvista.CompositeFilters.wireframe>`\\"
" \\(\\[progress\\_bar\\]\\)"
msgstr ""
":obj:`wireframe <pyvista.core.filters.pyvista.CompositeFilters.wireframe>`\\"
" \\(\\[progress\\_bar\\]\\)"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters:1 ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.DataObject:1
msgid "Bases: :class:`object`"
msgstr "基底: :class:`object`"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters:1
msgid "An internal class to manage filtes/algorithms for composite datasets."
msgstr "複合データデータセットのファイル/アルゴリズムを管理する内部クラス。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.combine:3
msgid "Merge coincidental points."
msgstr "一致点をマージします。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.extract_geometry:3
msgid ""
"Place this filter at the end of a pipeline before a polydata consumer such "
"as a polydata mapper to extract geometry from all blocks and append them to "
"one polydata object."
msgstr ""
"すべてのブロックからジオメトリを抽出して1つのポリデータオブジェクトに追加するには、このフィルタをポリデータマッパなどのポリデータコンシューマの前のパイプラインの最後に配置します。"

#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.outline:5
#: ../../pyvista/pyvista/core/filters.pydocstring of
#: pyvista.CompositeFilters.outline_corners:6
msgid "If True, these creates individual outlines for each nested dataset"
msgstr "Trueの場合、ネストされたデータセットごとに個別のアウトラインが作成されます"

#: ../../pyvista/docs/core/grids.rst:2
msgid "Gridded Data"
msgstr "グリッドデータ"

#: ../../pyvista/docs/core/grids.rst:5
msgid ""
"Gridded datasets in pyvista capture ``vtkRectilinearGrid`` and "
"``vtkImageData`` data objects on the VTK backend. These data types have "
"common features which are encompassed int their shared inheritance of "
":class:`pyvista.Grid`"
msgstr ""

#: ../../pyvista/docs/core/grids.rst:15:<autosummary>:1
msgid ":obj:`dimensions <pyvista.Grid.dimensions>`\\"
msgstr ":obj:`dimensions <pyvista.Grid.dimensions>`\\"

#: ../../pyvista/docs/core/grids.rst:15:<autosummary>:1
#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.Grid.dimensions:1
#: ../../pyvista/docs/core/grids.rst:36:<autosummary>:1
#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.RectilinearGrid.dimensions:1
#: ../../pyvista/docs/core/point-grids.rst:310:<autosummary>:1
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.StructuredGrid.dimensions:1
msgid "Return a length 3 tuple of the grid's dimensions."
msgstr "グリッドの次元の長さ3タプルを戻します。"

#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.Grid:1
msgid "Bases: :class:`pyvista.core.common.Common`"
msgstr "基底: :class:`pyvista.core.common.Common`"

#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.Grid:1
msgid "A class full of common methods for non-pointset grids."
msgstr "非ポイントセットグリッド用の共通メソッドでいっぱいのクラス。"

#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.Grid.dimensions:3
#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.RectilinearGrid.dimensions:3
msgid ""
"These are effectively the number of nodes along each of the three dataset "
"axes."
msgstr ""

#: ../../pyvista/docs/core/grids.rst:28
msgid "Rectilinear Grid"
msgstr ""

#: ../../pyvista/docs/core/grids.rst:36:<autosummary>:1
msgid ":obj:`dimensions <pyvista.RectilinearGrid.dimensions>`\\"
msgstr ":obj:`dimensions <pyvista.RectilinearGrid.dimensions>`\\"

#: ../../pyvista/docs/core/grids.rst:36:<autosummary>:1
msgid ":obj:`meshgrid <pyvista.RectilinearGrid.meshgrid>`\\"
msgstr ":obj:`meshgrid <pyvista.RectilinearGrid.meshgrid>`\\"

#: ../../pyvista/docs/core/grids.rst:36:<autosummary>:1
#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.RectilinearGrid.meshgrid:1
msgid "Return a meshgrid of numpy arrays for this mesh."
msgstr "このメッシュの配列のメッシュグリッドを返します。"

#: ../../pyvista/docs/core/grids.rst:36:<autosummary>:1
msgid ":obj:`points <pyvista.RectilinearGrid.points>`\\"
msgstr ":obj:`points <pyvista.RectilinearGrid.points>`\\"

#: ../../pyvista/docs/core/grids.rst:36:<autosummary>:1
#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.RectilinearGrid.points:1
msgid "Return a copy of the points as an n by 3 numpy array."
msgstr ""

#: ../../pyvista/docs/core/grids.rst:36:<autosummary>:1
msgid ":obj:`x <pyvista.RectilinearGrid.x>`\\"
msgstr ":obj:`x <pyvista.RectilinearGrid.x>`\\"

#: ../../pyvista/docs/core/grids.rst:36:<autosummary>:1
#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.RectilinearGrid.x:1
msgid "Get the coordinates along the X-direction."
msgstr "X方向に沿った座標を取得します。"

#: ../../pyvista/docs/core/grids.rst:36:<autosummary>:1
msgid ":obj:`y <pyvista.RectilinearGrid.y>`\\"
msgstr ":obj:`y <pyvista.RectilinearGrid.y>`\\"

#: ../../pyvista/docs/core/grids.rst:36:<autosummary>:1
#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.RectilinearGrid.y:1
msgid "Get the coordinates along the Y-direction."
msgstr "Y方向の座標を取得します。"

#: ../../pyvista/docs/core/grids.rst:36:<autosummary>:1
msgid ":obj:`z <pyvista.RectilinearGrid.z>`\\"
msgstr ":obj:`z <pyvista.RectilinearGrid.z>`\\"

#: ../../pyvista/docs/core/grids.rst:36:<autosummary>:1
#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.RectilinearGrid.z:1
msgid "Get the coordinates along the Z-direction."
msgstr ""

#: ../../pyvista/docs/core/grids.rst:41:<autosummary>:1
msgid ""
":obj:`cast_to_structured_grid "
"<pyvista.RectilinearGrid.cast_to_structured_grid>`\\ \\(\\)"
msgstr ""
":obj:`cast_to_structured_grid "
"<pyvista.RectilinearGrid.cast_to_structured_grid>`\\ \\(\\)"

#: ../../pyvista/docs/core/grids.rst:41:<autosummary>:1
#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.RectilinearGrid.cast_to_structured_grid:1
msgid "Cast this rectilinear grid to a :class:`pyvista.StructuredGrid`."
msgstr "この直線グリッドを :class:`pyvista.StructuredGrid` にキャストします。"

#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.RectilinearGrid:1
msgid ""
"Bases: :class:`vtkmodules.vtkCommonDataModel.vtkRectilinearGrid`, "
":class:`pyvista.core.grid.Grid`"
msgstr ""
"基底: :class:`vtkmodules.vtkCommonDataModel.vtkRectilinearGrid`, "
":class:`pyvista.core.grid.Grid`"

#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.RectilinearGrid:1
msgid "Extend the functionality of a vtk.vtkRectilinearGrid object."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.RectilinearGrid:3
#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.UniformGrid:3
#: ../../pyvista/pyvista/core/pointset.pydocstring of pyvista.StructuredGrid:3
#: ../../pyvista/pyvista/core/pointset.pydocstring of pyvista.PolyData:3
msgid "Can be initialized in several ways:"
msgstr "いくつかの方法で初期化できます:"

#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.RectilinearGrid:5
#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.UniformGrid:5
#: ../../pyvista/pyvista/core/pointset.pydocstring of pyvista.StructuredGrid:5
msgid "Create empty grid"
msgstr "空のグリッドを作成"

#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.RectilinearGrid:6
msgid "Initialize from a vtk.vtkRectilinearGrid object"
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.RectilinearGrid:7
#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.UniformGrid:7
#: ../../pyvista/pyvista/core/pointset.pydocstring of pyvista.StructuredGrid:7
msgid "Initialize directly from the point arrays"
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.RectilinearGrid:9
#: ../../pyvista/pyvista/core/pointset.pydocstring of pyvista.StructuredGrid:9
msgid ""
"See _from_arrays in the documentation for more details on initializing from "
"point arrays"
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.RectilinearGrid.meshgrid:3
msgid ""
"This simply returns a ``numpy.meshgrid`` of the coordinates for this mesh in"
" ``ij`` indexing. These are a copy of the points of this mesh."
msgstr ""

#: ../../pyvista/docs/core/grids.rst:50
msgid "Uniform Grid"
msgstr ""

#: ../../pyvista/docs/core/grids.rst:52
msgid ""
"PyVista's definition of a uniform grid is an extension of VTK's "
"``vtkImageData``"
msgstr "PyVistaの統一グリッドの定義はVTKの ``vtkImageData`` の拡張です"

#: ../../pyvista/docs/core/grids.rst:59:<autosummary>:1
msgid ":obj:`origin <pyvista.UniformGrid.origin>`\\"
msgstr ":obj:`origin <pyvista.UniformGrid.origin>`\\"

#: ../../pyvista/docs/core/grids.rst:59:<autosummary>:1
#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.UniformGrid.origin:1
msgid "Return the origin of the grid (bottom southwest corner)."
msgstr ""

#: ../../pyvista/docs/core/grids.rst:59:<autosummary>:1
msgid ":obj:`points <pyvista.UniformGrid.points>`\\"
msgstr ":obj:`points <pyvista.UniformGrid.points>`\\"

#: ../../pyvista/docs/core/grids.rst:59:<autosummary>:1
#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.UniformGrid.points:1
msgid "Build a copy of the implicitly defined points as a numpy array."
msgstr ""

#: ../../pyvista/docs/core/grids.rst:59:<autosummary>:1
msgid ":obj:`spacing <pyvista.UniformGrid.spacing>`\\"
msgstr ":obj:`spacing <pyvista.UniformGrid.spacing>`\\"

#: ../../pyvista/docs/core/grids.rst:59:<autosummary>:1
#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.UniformGrid.spacing:1
msgid "Get the spacing for each axial direction."
msgstr ""

#: ../../pyvista/docs/core/grids.rst:59:<autosummary>:1
msgid ":obj:`x <pyvista.UniformGrid.x>`\\"
msgstr ":obj:`x <pyvista.UniformGrid.x>`\\"

#: ../../pyvista/docs/core/grids.rst:59:<autosummary>:1
#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.UniformGrid.x:1
msgid "Return all the X points."
msgstr "すべてのXポイントを返します。"

#: ../../pyvista/docs/core/grids.rst:59:<autosummary>:1
msgid ":obj:`y <pyvista.UniformGrid.y>`\\"
msgstr ":obj:`y <pyvista.UniformGrid.y>`\\"

#: ../../pyvista/docs/core/grids.rst:59:<autosummary>:1
#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.UniformGrid.y:1
msgid "Return all the Y points."
msgstr "すべてのYポイントを返します。"

#: ../../pyvista/docs/core/grids.rst:59:<autosummary>:1
msgid ":obj:`z <pyvista.UniformGrid.z>`\\"
msgstr ":obj:`z <pyvista.UniformGrid.z>`\\"

#: ../../pyvista/docs/core/grids.rst:59:<autosummary>:1
#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.UniformGrid.z:1
msgid "Return all the Z points."
msgstr "すべてのZポイントを返します。"

#: ../../pyvista/docs/core/grids.rst:64:<autosummary>:1
msgid ""
":obj:`cast_to_rectilinear_grid "
"<pyvista.UniformGrid.cast_to_rectilinear_grid>`\\ \\(\\)"
msgstr ""
":obj:`cast_to_rectilinear_grid "
"<pyvista.UniformGrid.cast_to_rectilinear_grid>`\\ \\(\\)"

#: ../../pyvista/docs/core/grids.rst:64:<autosummary>:1
#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.UniformGrid.cast_to_rectilinear_grid:1
msgid "Cast this uniform grid to a :class:`pyvista.RectilinearGrid`."
msgstr ""

#: ../../pyvista/docs/core/grids.rst:64:<autosummary>:1
msgid ""
":obj:`cast_to_structured_grid "
"<pyvista.UniformGrid.cast_to_structured_grid>`\\ \\(\\)"
msgstr ""
":obj:`cast_to_structured_grid "
"<pyvista.UniformGrid.cast_to_structured_grid>`\\ \\(\\)"

#: ../../pyvista/docs/core/grids.rst:64:<autosummary>:1
#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.UniformGrid.cast_to_structured_grid:1
msgid "Cast this uniform grid to a :class:`pyvista.StructuredGrid`."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.UniformGrid:1
msgid ""
"Bases: :class:`vtkmodules.vtkCommonDataModel.vtkImageData`, "
":class:`pyvista.core.grid.Grid`, "
":class:`pyvista.core.filters.UniformGridFilters`"
msgstr ""
"基底: :class:`vtkmodules.vtkCommonDataModel.vtkImageData`, "
":class:`pyvista.core.grid.Grid`, "
":class:`pyvista.core.filters.UniformGridFilters`"

#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.UniformGrid:1
msgid "Extend the functionality of a vtk.vtkImageData object."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.UniformGrid:6
msgid "Initialize from a vtk.vtkImageData object"
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.UniformGrid:9
msgid ""
"See ``_from_specs`` in the documentation for more details on initializing "
"from point arrays"
msgstr ""

#: ../../pyvista/docs/core/index.rst:2
msgid "Core API"
msgstr "コアAPI"

#: ../../pyvista/docs/core/index.rst:4
msgid ""
"The `Visualization Toolkit`_ (VTK), developed by Kitware_, has many mesh "
"data types that PyVista wraps. This chapter is intended to describe these "
"different mesh types and how we wrap and implement each of those mesh types "
"in VTK. This chapter also highlights how all PyVista types have direct "
"access to common VTK filters (see :ref:`filters_ref`)."
msgstr ""
"Kitware_ によって開発された `Visualization Toolkit`_ (VTK) "
"には、PyVistaがラップする多くのメッシュデータ型があります。この章では、これらの異なるメッシュタイプと、VTKでこれらのメッシュタイプをラップして実装する方法について説明します。また、すべてのPyVistaタイプが共通のVTKフィルタ("
" :ref:`filters_ref` を参照)に直接アクセスする方法についても説明します。"

#: ../../pyvista/docs/core/index.rst:15
msgid ""
"All PyVista meshes inherit from the Common dataset type (see "
":ref:`ref_common`). PyVista has the following mesh types:"
msgstr ""
"すべてのPyVistaメッシュは、共通データセットタイプ( :ref:`ref_common` "
"を参照)から継承されます。PyVistaには次のメッシュタイプがあります。"

#: ../../pyvista/docs/core/index.rst:18
msgid ""
":class:`pyvista.PolyData` consists of any 1D or 2D geometries to construct "
"vertices, lines, polygons, and triangles. We generally use ``PolyData`` to "
"construct scattered points and closed/open surfaces (non-volumetric "
"datasets). The :class:`pyvista.PolyData` class is an extension of "
"``vtk.vtkPolyData``."
msgstr ""
":class:`pyvista.PolyData` は、頂点、線、ポリゴン、および三角形を構築する1 Dまたは2 Dジオメトリで構成されます。一般的に "
"``PolyData`` を使用して、散乱点と閉じた/開いたサーフェス(非体積データセット)を構築します。 "
":class:`pyvista.PolyData` クラスは ``vtk.vtkPolyData`` の拡張です。"

#: ../../pyvista/docs/core/index.rst:20
msgid ""
"An :class:`pyvista.UnstructuredGrid` is the most general dataset type that "
"can hold any 1D, 2D, or 3D cell geometries. You can think of this as a 3D "
"extension of ``PolyData`` that allows volumetric cells to be present. It's "
"fairly uncommon to explicitly make unstructured grids but they are often the"
" result of different processing routines that might extract subsets of "
"larger datasets. The :class:`pyvista.UnstructuredGrid` class is an extension"
" of ``vtk.UnstructuredGrid``."
msgstr ""
":class:`pyvista.UnstructuredGrid` は、1 D、2 D、または3 "
"Dセル形状を保持できる最も一般的なデータセットタイプです。これは、容積測定セルの存在を可能にする ``PolyData`` の3 "
"D拡張と考えることができます。構造化されていないグリッドを明示的に作成することはあまりありませんが、多くの場合、大きなデータセットのサブセットを抽出する可能性のあるさまざまな処理ルーチンの結果です。"
" :class:`pyvista.UnstructuredGrid` クラスは ``vtk.UnstructuredGrid`` の拡張です。"

#: ../../pyvista/docs/core/index.rst:22
msgid ""
"A :class:`pyvista.StructuredGrid` is a regular lattice of points aligned "
"with an internal coordinate axes such that the connectivity can be defined "
"by a grid ordering. These are commonly made from :func:`np.meshgrid`. The "
"cell types of structured grids must be 2D Quads or 3D Hexahedrons. The "
":class:`pyvista.StructuredGrid` class is an extension of "
"``vtk.vtkStructuredGrid``."
msgstr ""
":class:`pyvista.StructuredGrid` "
"は内部座標軸と整列した点の規則的な格子であり、連結性は格子の順序付けによって定義できます。これらは一般に :func:`np.meshgrid` "
"から作成されます。構造化グリッドのセルタイプは2 D四角形または3 D六面体である必要があります。 "
":class:`pyvista.StructuredGrid` クラスは ``vtk.vtkStructuredGrid`` の拡張です。"

#: ../../pyvista/docs/core/index.rst:24
msgid ""
"A :class:`pyvista.RectilinearGrid` defines meshes with implicit geometries "
"along the axes directions that are rectangular and regular. The "
":class:`pyvista.RectilinearGrid` class is an extension of "
"``vtk.vtkRectilinearGrid``."
msgstr ""
":class:`pyvista.RectilinearGrid` は、矩形で規則的な軸方向に沿ったインプリシットなジオメトリを持つメッシュを定義します。"
" :class:`pyvista.RectilinearGrid` クラスは ``vtk.vtkRectilinearGrid`` の拡張です。"

#: ../../pyvista/docs/core/index.rst:26
msgid ""
"Image data, commonly referenced to as uniform grids, and defined by the "
":class:`pyvista.UniformGrid` class are meshes with implicit geometries where"
" cell sizes are uniformly assigned along each axis and the spatial reference"
" is built out from an origin point. The :class:`pyvista.UniformGrid` class "
"is an extension of ``vtk.vtkImageData``."
msgstr ""
"一般に均一グリッドとして参照され、 :class:`pyvista.UniformGrid` "
"クラスによって定義される画像データは、セルサイズが各軸に沿って均一に割り当てられ、空間参照が原点から構築される陰的幾何学を有するメッシュである。 "
":class:`pyvista.UniformGrid` クラスは ``vtk.vtkImageData`` の拡張です。"

#: ../../pyvista/docs/core/index.rst:28
msgid ""
":class:`pyvista.MultiBlock` datasets are containers to hold several VTK "
"datasets in one accessible and spatially referenced object. The "
":class:`pyvista.MultiBlock` class is an extension of "
"``vtk.vtkMultiBlockDataSet``."
msgstr ""
":class:`pyvista.MultiBlock` "
"データセットは、複数のVTKデータセットを1つのアクセス可能かつ空間的に参照されるオブジェクトに保持するためのコンテナです。 "
":class:`pyvista.MultiBlock` クラスは ``vtk.vtkMultiBlockDataSet`` の拡張です。"

#: ../../pyvista/docs/core/objects.rst:2
msgid "Objects"
msgstr "オブジェクト"

#: ../../pyvista/docs/core/objects.rst:4
msgid ""
"The :class:`pyvista.DataObject` class is a set of common methods and "
"attributes for all PyVista types. These objects have no spatial reference, "
"but simply hold data."
msgstr ""

#: ../../pyvista/docs/core/objects.rst:12:<autosummary>:1
msgid ":obj:`field_arrays <pyvista.DataObject.field_arrays>`\\"
msgstr ":obj:`field_arrays <pyvista.DataObject.field_arrays>`\\"

#: ../../pyvista/docs/core/objects.rst:12:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.DataObject.field_arrays:1
msgid "Return vtkFieldData as DataSetAttributes."
msgstr "DataSetAttributesとしてvtkFieldDataを返します。"

#: ../../pyvista/docs/core/objects.rst:12:<autosummary>:1
msgid ":obj:`memory_address <pyvista.DataObject.memory_address>`\\"
msgstr ":obj:`memory_address <pyvista.DataObject.memory_address>`\\"

#: ../../pyvista/docs/core/objects.rst:12:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.DataObject.memory_address:1
msgid "Get address of the underlying C++ object in format 'Addr=%p'."
msgstr ""

#: ../../pyvista/docs/core/objects.rst:17:<autosummary>:1
msgid ""
":obj:`add_field_array <pyvista.DataObject.add_field_array>`\\ \\(scalars\\, "
"name\\[\\, deep\\]\\)"
msgstr ""
":obj:`add_field_array <pyvista.DataObject.add_field_array>`\\ \\(scalars\\, "
"name\\[\\, deep\\]\\)"

#: ../../pyvista/docs/core/objects.rst:17:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.DataObject.add_field_array:1
msgid "Add a field array."
msgstr ""

#: ../../pyvista/docs/core/objects.rst:17:<autosummary>:1
msgid ":obj:`clear_field_arrays <pyvista.DataObject.clear_field_arrays>`\\ \\(\\)"
msgstr ":obj:`clear_field_arrays <pyvista.DataObject.clear_field_arrays>`\\ \\(\\)"

#: ../../pyvista/docs/core/objects.rst:17:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.DataObject.clear_field_arrays:1
msgid "Remove all field arrays."
msgstr ""

#: ../../pyvista/docs/core/objects.rst:17:<autosummary>:1
msgid ":obj:`copy <pyvista.DataObject.copy>`\\ \\(\\[deep\\]\\)"
msgstr ":obj:`copy <pyvista.DataObject.copy>`\\ \\(\\[deep\\]\\)"

#: ../../pyvista/docs/core/objects.rst:17:<autosummary>:1
msgid ":obj:`copy_meta_from <pyvista.DataObject.copy_meta_from>`\\ \\(ido\\)"
msgstr ":obj:`copy_meta_from <pyvista.DataObject.copy_meta_from>`\\ \\(ido\\)"

#: ../../pyvista/docs/core/objects.rst:17:<autosummary>:1
msgid ":obj:`deep_copy <pyvista.DataObject.deep_copy>`\\ \\(to\\_copy\\)"
msgstr ":obj:`deep_copy <pyvista.DataObject.deep_copy>`\\ \\(to\\_copy\\)"

#: ../../pyvista/docs/core/objects.rst:17:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.DataObject.deep_copy:1
msgid "Overwrite this mesh with the given mesh as a deep copy."
msgstr ""

#: ../../pyvista/docs/core/objects.rst:17:<autosummary>:1
msgid ""
":obj:`get_data_range <pyvista.DataObject.get_data_range>`\\ \\(\\[arr\\, "
"preference\\]\\)"
msgstr ""
":obj:`get_data_range <pyvista.DataObject.get_data_range>`\\ \\(\\[arr\\, "
"preference\\]\\)"

#: ../../pyvista/docs/core/objects.rst:17:<autosummary>:1
msgid ":obj:`head <pyvista.DataObject.head>`\\ \\(\\[display\\, html\\]\\)"
msgstr ":obj:`head <pyvista.DataObject.head>`\\ \\(\\[display\\, html\\]\\)"

#: ../../pyvista/docs/core/objects.rst:17:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.DataObject.head:1
msgid "Return the header stats of this dataset."
msgstr ""

#: ../../pyvista/docs/core/objects.rst:17:<autosummary>:1
msgid ":obj:`save <pyvista.DataObject.save>`\\ \\(filename\\[\\, binary\\]\\)"
msgstr ":obj:`save <pyvista.DataObject.save>`\\ \\(filename\\[\\, binary\\]\\)"

#: ../../pyvista/docs/core/objects.rst:17:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.DataObject.save:1
msgid "Save this vtk object to file."
msgstr ""

#: ../../pyvista/docs/core/objects.rst:17:<autosummary>:1
msgid ":obj:`shallow_copy <pyvista.DataObject.shallow_copy>`\\ \\(to\\_copy\\)"
msgstr ":obj:`shallow_copy <pyvista.DataObject.shallow_copy>`\\ \\(to\\_copy\\)"

#: ../../pyvista/docs/core/objects.rst:17:<autosummary>:1
#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.DataObject.shallow_copy:1
msgid "Shallow copy the given mesh to this mesh."
msgstr ""

#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.DataObject:1
msgid "Methods common to all wrapped data objects."
msgstr ""

#: ../../pyvista/pyvista/core/common.pydocstring of
#: pyvista.DataObject.get_data_range:3
#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.Table.get_data_range:3
msgid ""
"The name of the array to get the range. If None, the active scalar is used"
msgstr ""

#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.DataObject.head:3
msgid ""
"If in IPython, this will be formatted to HTML. Otherwise returns a console "
"friendly string."
msgstr "IPythonであれば、これはHTMLにフォーマットされます。IPythonでなければ、コンソールに適した文字列を返します。"

#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.DataObject.save:3
msgid ""
"Filename of output file. Writer type is inferred from the extension of the "
"filename."
msgstr "出力ファイルのファイル名。Writerのタイプは、ファイル名の拡張子から推測されます。"

#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.DataObject.save:6
msgid "If True, write as binary, else ASCII."
msgstr ""

#: ../../pyvista/pyvista/core/common.pydocstring of pyvista.DataObject.save:11
msgid ""
"Binary files write much faster than ASCII and have a smaller file size."
msgstr ""

#: ../../pyvista/docs/core/objects.rst:25
msgid "Table"
msgstr "Table"

#: ../../pyvista/docs/core/objects.rst:27
msgid ""
"The table class is a non-spatially referenced data object that can be used "
"on VTK pipelines and holds arrays of data."
msgstr "Tableクラスは非空間的に参照されるデータオブジェクトで、VTKパイプラインで使用でき、データの配列を保持します。"

#: ../../pyvista/docs/core/objects.rst:34:<autosummary>:1
msgid ":obj:`n_arrays <pyvista.Table.n_arrays>`\\"
msgstr ":obj:`n_arrays <pyvista.Table.n_arrays>`\\"

#: ../../pyvista/docs/core/objects.rst:34:<autosummary>:1
#: ../../pyvista/docs/core/objects.rst:34:<autosummary>:1
#: ../../pyvista/pyvista/core/objects.pydocstring of pyvista.Table.n_arrays:1
#: ../../pyvista/pyvista/core/objects.pydocstring of pyvista.Table.n_columns:1
msgid "Return the number of columns."
msgstr "列数を返します。"

#: ../../pyvista/docs/core/objects.rst:34:<autosummary>:1
msgid ":obj:`n_columns <pyvista.Table.n_columns>`\\"
msgstr ":obj:`n_columns <pyvista.Table.n_columns>`\\"

#: ../../pyvista/docs/core/objects.rst:34:<autosummary>:1
msgid ":obj:`n_rows <pyvista.Table.n_rows>`\\"
msgstr ":obj:`n_rows <pyvista.Table.n_rows>`\\"

#: ../../pyvista/docs/core/objects.rst:34:<autosummary>:1
#: ../../pyvista/pyvista/core/objects.pydocstring of pyvista.Table.n_rows:1
msgid "Return the number of rows."
msgstr "行数を返します。"

#: ../../pyvista/docs/core/objects.rst:34:<autosummary>:1
msgid ":obj:`row_arrays <pyvista.Table.row_arrays>`\\"
msgstr ":obj:`row_arrays <pyvista.Table.row_arrays>`\\"

#: ../../pyvista/docs/core/objects.rst:34:<autosummary>:1
#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.Table.row_arrays:1
msgid "Return the all row arrays."
msgstr "すべての行配列を返します。"

#: ../../pyvista/docs/core/objects.rst:39:<autosummary>:1
msgid ":obj:`get <pyvista.Table.get>`\\ \\(index\\)"
msgstr ":obj:`get <pyvista.Table.get>`\\ \\(index\\)"

#: ../../pyvista/docs/core/objects.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/core/objects.pydocstring of pyvista.Table.get:1
msgid "Get an array by its name."
msgstr "名前で配列を取得します。"

#: ../../pyvista/docs/core/objects.rst:39:<autosummary>:1
msgid ""
":obj:`get_data_range <pyvista.Table.get_data_range>`\\ \\(\\[arr\\, "
"preference\\]\\)"
msgstr ""
":obj:`get_data_range <pyvista.Table.get_data_range>`\\ \\(\\[arr\\, "
"preference\\]\\)"

#: ../../pyvista/docs/core/objects.rst:39:<autosummary>:1
msgid ":obj:`items <pyvista.Table.items>`\\ \\(\\)"
msgstr ":obj:`items <pyvista.Table.items>`\\ \\(\\)"

#: ../../pyvista/docs/core/objects.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/core/objects.pydocstring of pyvista.Table.items:1
msgid "Return the table items."
msgstr ""

#: ../../pyvista/docs/core/objects.rst:39:<autosummary>:1
msgid ":obj:`keys <pyvista.Table.keys>`\\ \\(\\)"
msgstr ":obj:`keys <pyvista.Table.keys>`\\ \\(\\)"

#: ../../pyvista/docs/core/objects.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/core/objects.pydocstring of pyvista.Table.keys:1
msgid "Return the table keys."
msgstr ""

#: ../../pyvista/docs/core/objects.rst:39:<autosummary>:1
msgid ":obj:`pop <pyvista.Table.pop>`\\ \\(name\\)"
msgstr ":obj:`pop <pyvista.Table.pop>`\\ \\(name\\)"

#: ../../pyvista/docs/core/objects.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/core/objects.pydocstring of pyvista.Table.pop:1
msgid "Pops off an array by the specified name."
msgstr ""

#: ../../pyvista/docs/core/objects.rst:39:<autosummary>:1
msgid ":obj:`save <pyvista.Table.save>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ":obj:`save <pyvista.Table.save>`\\ \\(\\*args\\, \\*\\*kwargs\\)"

#: ../../pyvista/docs/core/objects.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/core/objects.pydocstring of pyvista.Table.save:1
msgid "Save the table."
msgstr "テーブルを保存します。"

#: ../../pyvista/docs/core/objects.rst:39:<autosummary>:1
msgid ":obj:`to_pandas <pyvista.Table.to_pandas>`\\ \\(\\)"
msgstr ":obj:`to_pandas <pyvista.Table.to_pandas>`\\ \\(\\)"

#: ../../pyvista/docs/core/objects.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/core/objects.pydocstring of pyvista.Table.to_pandas:1
msgid "Create a Pandas DataFrame from this Table."
msgstr ""

#: ../../pyvista/docs/core/objects.rst:39:<autosummary>:1
msgid ":obj:`update <pyvista.Table.update>`\\ \\(data\\)"
msgstr ":obj:`update <pyvista.Table.update>`\\ \\(data\\)"

#: ../../pyvista/docs/core/objects.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/core/objects.pydocstring of pyvista.Table.update:1
msgid "Set the table data."
msgstr ""

#: ../../pyvista/docs/core/objects.rst:39:<autosummary>:1
msgid ":obj:`values <pyvista.Table.values>`\\ \\(\\)"
msgstr ":obj:`values <pyvista.Table.values>`\\ \\(\\)"

#: ../../pyvista/docs/core/objects.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/core/objects.pydocstring of pyvista.Table.values:1
msgid "Return the table values."
msgstr ""

#: ../../pyvista/pyvista/core/objects.pydocstring of pyvista.Table:1
msgid ""
"Bases: :class:`vtkmodules.vtkCommonDataModel.vtkTable`, "
":class:`pyvista.core.common.DataObject`"
msgstr ""
"基底: :class:`vtkmodules.vtkCommonDataModel.vtkTable`, "
":class:`pyvista.core.common.DataObject`"

#: ../../pyvista/pyvista/core/objects.pydocstring of pyvista.Table:1
msgid "Wrapper for the ``vtkTable`` class."
msgstr ""

#: ../../pyvista/pyvista/core/objects.pydocstring of pyvista.Table:3
msgid ""
"Create by passing a 2D NumPy array of shape (``n_rows`` by ``n_columns``) or"
" from a dictionary containing NumPy arrays."
msgstr ""

#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.Table.get_data_range:6
msgid ""
"When scalars is specified, this is the preferred array type to search for in"
" the dataset.  Must be either ``'row'`` or ``'field'``."
msgstr ""

#: ../../pyvista/pyvista/core/objects.pydocstring of pyvista.Table.n_arrays:3
msgid "Alias for: ``n_columns``."
msgstr ""

#: ../../pyvista/docs/core/point-grids.rst:2
msgid "Point-Based Grids"
msgstr "ポイントベースグリッド"

#: ../../pyvista/docs/core/point-grids.rst:4
msgid ""
"Structured and unstructured grids are designed to manage cells whereas a "
"polydata object manage surfaces.  The ``vtk.UnstructuredGrid`` is derived "
"class from ``vtk.vtkUnstructuredGrid`` designed to make creation, array "
"access, and plotting more straightforward than using the vtk object.  The "
"same goes with a ``vtk.StructuredGrid``."
msgstr ""
"構造化グリッドと非構造化グリッドは、セルを管理するように設計されていますが、ポリデータオブジェクトはサーフェスを管理します。 "
"``vtk.UnstructuredGrid`` は ``vtk.vtkUnstructuredGrid`` "
"から派生したクラスで、vtkオブジェクトを使用するよりも簡単に作成、配列へのアクセス、描画ができるように設計されています。 "
"``vtk.StructuredGrid`` についても同様です。"

#: ../../pyvista/docs/core/point-grids.rst:12
msgid "Unstructured Grid Creation"
msgstr "非構造化グリッドの作成"

#: ../../pyvista/docs/core/point-grids.rst:14
msgid ""
"See :ref:`ref_create_unstructured` for an example on how to create an "
"unstructured grid from NumPy arrays."
msgstr ""
"NumPy配列から非構造化グリッドを作成する方法の例については、 :ref:`ref_create_unstructured` を参照してください。"

#: ../../pyvista/docs/core/point-grids.rst:18
#: ../../pyvista/docs/core/point-grids.rst:49
#: ../../pyvista/docs/core/points.rst:15
msgid "Empty Object"
msgstr "空のオブジェクト"

#: ../../pyvista/docs/core/point-grids.rst:19
msgid "An unstructured grid can be initialized with:"
msgstr "非構造化グリッドは、次のように初期化できます:"

#: ../../pyvista/docs/core/point-grids.rst:26
msgid ""
"This creates an empty grid, and is not useful until points and cells are "
"added to it.  VTK points and cells can be added with ``SetPoints`` and "
"``SetCells``, but the inputs to these need to be ``vtk.vtkCellArray`` and "
"``vtk.vtkPoints`` objects, which need to be populated with values.  Grid "
"creation is simplified by initializing the grid directly from numpy arrays "
"as in the following section."
msgstr ""
"これにより空のグリッドが作成され、ポイントとセルが追加されるまでは使用できません。VTKポイントおよびセルは ``SetPoints`` および "
"``SetCells`` を使用して追加できますが、これらへの入力は ``vtk.vtkCellArray`` および "
"``vtk.vtkPoints`` "
"オブジェクトである必要があり、値を設定する必要があります。グリッドの作成は、次のセクションのように、多数の配列から直接グリッドを初期化することで簡単になります。"

#: ../../pyvista/docs/core/point-grids.rst:34
#: ../../pyvista/docs/core/point-grids.rst:87
msgid "Loading from File"
msgstr "ファイルからロードする"

#: ../../pyvista/docs/core/point-grids.rst:35
msgid "Unstructured grids can be loaded from a vtk file."
msgstr "非構造化グリッドは、vtkファイルからロードできます。"

#: ../../pyvista/docs/core/point-grids.rst:46
msgid "Structured Grid Creation"
msgstr "構造化グリッドの作成"

#: ../../pyvista/docs/core/point-grids.rst:50
msgid "A structured grid can be initialized with:"
msgstr "構造化グリッドは、次のように初期化できます:"

#: ../../pyvista/docs/core/point-grids.rst:57
msgid ""
"This creates an empty grid, and is not useful until points are added to it."
msgstr "これにより空のグリッドが作成され、ポイントが追加されるまで使用できません。"

#: ../../pyvista/docs/core/point-grids.rst:62
msgid "Creating from Numpy Arrays"
msgstr "Numpyの配列からの作成"

#: ../../pyvista/docs/core/point-grids.rst:63
msgid ""
"A structured grid can be created directly from numpy arrays.  This is useful"
" when creating a grid from scratch or copying it from another format."
msgstr "構造化グリッドは、numpyの配列から直接作成できます。これは、グリッドを最初から作成する場合や、別の形式からコピーする場合に便利です。"

#: ../../pyvista/docs/core/point-grids.rst:66
msgid ""
"Also see :ref:`ref_create_structured` for an example on creating a "
"structured grid from NumPy arrays."
msgstr "NumPy配列から構造化グリッドを作成する例については、 :ref:`ref_create_structured` も参照してください。"

#: ../../pyvista/docs/core/point-grids.rst:88
msgid "Structured grids can be loaded from a ``vtk`` file."
msgstr "構造化グリッドは、  ``vtk`` ファイルからロードできます。"

#: ../../pyvista/docs/core/point-grids.rst:96
msgid "Plotting Grids"
msgstr "グリッドをプロットする"

#: ../../pyvista/docs/core/point-grids.rst:97
msgid ""
"This example shows how you can load an unstructured grid from a ``vtk`` file"
" and create a plot and gif movie by updating the plotting object."
msgstr ""
"この例では、 ``vtk`` ファイルから非構造化グリッドをロードし、プロットオブジェクトを更新してプロットとgifムービーを作成する方法を示します。"

#: ../../pyvista/docs/core/point-grids.rst:117
msgid "A simple plot can be created by using:"
msgstr "次を使用して、単純なプロットを作成できます:"

#: ../../pyvista/docs/core/point-grids.rst:123
msgid "A more complex plot can be created using:"
msgstr "次のコマンドを使用して、より複雑なプロットを作成できます:"

#: ../../pyvista/docs/core/point-grids.rst:145
msgid ""
"You can animate the motion of the beam by updating the positions and scalars"
" of the grid copied to the plotting object. First you have to setup the "
"plotting object:"
msgstr ""
"はりのモーションをアニメートするには、プロットオブジェクトにコピーされたグリッドの位置とスカラーを更新します。まず、プロットオブジェクトを設定する必要があります。"

#: ../../pyvista/docs/core/point-grids.rst:158
msgid ""
"You then open the render window by plotting before opening movie file. Set "
"auto_close to False so the plotter does not close automatically. Disabling "
"interactive means the plot will automatically continue without waiting for "
"the user to exit the window."
msgstr ""
"次に、ムービーファイルを開く前にプロットして、レンダリングウィンドウを開きます。 auto_close "
"をFalseに設定して、プロッタが自動的に閉じないようにします。インタラクティブを無効にすると、ユーザがウィンドウを終了するのを待たずに、プロットが自動的に続行されます。"

#: ../../pyvista/docs/core/point-grids.rst:182
msgid "You can also render the beam as as a wire-frame object:"
msgstr ""

#: ../../pyvista/docs/core/point-grids.rst:209
msgid "Adding Labels to a Plot"
msgstr ""

#: ../../pyvista/docs/core/point-grids.rst:210
msgid ""
"Labels can be added to a plot using the ``add_point_labels`` function within"
" the ``Plotter`` object.  The following example loads the included example "
"beam, generates a plotting class, and sub-selects points along the y-z plane"
" and labels their coordinates.  ``add_point_labels`` requires that the "
"number of labels matches the number of points, and that labels is a list "
"containing one entry per point.  The code automatically converts each item "
"in the list to a string."
msgstr ""

#: ../../pyvista/docs/core/point-grids.rst:245
msgid ""
"This example is similar and shows how labels can be combined with a scalar "
"bar to show the exact value of certain points."
msgstr ""

#: ../../pyvista/docs/core/point-grids.rst:274
msgid "pv.Unstructured Grid Class Methods"
msgstr ""

#: ../../pyvista/docs/core/point-grids.rst:275
msgid ""
"The following is a description of the methods available to a "
"``pv.UnstructuredGrid`` object.  It inherits all methods from the original "
"``vtk`` object, `vtk.vtkUnstructuredGrid "
"<https://www.vtk.org/doc/nightly/html/classvtkUnstructuredGrid.html>`_."
msgstr ""

#: ../../pyvista/docs/core/point-grids.rst:285:<autosummary>:1
msgid ":obj:`cell_connectivity <pyvista.UnstructuredGrid.cell_connectivity>`\\"
msgstr ":obj:`cell_connectivity <pyvista.UnstructuredGrid.cell_connectivity>`\\"

#: ../../pyvista/docs/core/point-grids.rst:285:<autosummary>:1
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.cell_connectivity:1
msgid "Return a the vtk cell connectivity as a numpy array."
msgstr ""

#: ../../pyvista/docs/core/point-grids.rst:285:<autosummary>:1
msgid ":obj:`cells <pyvista.UnstructuredGrid.cells>`\\"
msgstr ":obj:`cells <pyvista.UnstructuredGrid.cells>`\\"

#: ../../pyvista/docs/core/point-grids.rst:285:<autosummary>:1
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.cells:1
msgid "Return a pointer to the cells as a numpy object."
msgstr "セルへのポインタをnumpyなオブジェクトとして返します。"

#: ../../pyvista/docs/core/point-grids.rst:285:<autosummary>:1
msgid ":obj:`celltypes <pyvista.UnstructuredGrid.celltypes>`\\"
msgstr ":obj:`celltypes <pyvista.UnstructuredGrid.celltypes>`\\"

#: ../../pyvista/docs/core/point-grids.rst:285:<autosummary>:1
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.celltypes:1
msgid "Get the cell types array."
msgstr ""

#: ../../pyvista/docs/core/point-grids.rst:285:<autosummary>:1
msgid ":obj:`offset <pyvista.UnstructuredGrid.offset>`\\"
msgstr ":obj:`offset <pyvista.UnstructuredGrid.offset>`\\"

#: ../../pyvista/docs/core/point-grids.rst:285:<autosummary>:1
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.offset:1
msgid "Get cell locations Array."
msgstr ""

#: ../../pyvista/docs/core/point-grids.rst:291:<autosummary>:1
msgid ":obj:`linear_copy <pyvista.UnstructuredGrid.linear_copy>`\\ \\(\\[deep\\]\\)"
msgstr ":obj:`linear_copy <pyvista.UnstructuredGrid.linear_copy>`\\ \\(\\[deep\\]\\)"

#: ../../pyvista/docs/core/point-grids.rst:291:<autosummary>:1
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.linear_copy:1
msgid "Return a copy of the unstructured grid containing only linear cells."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid:1
msgid ""
"Bases: :class:`vtkmodules.vtkCommonDataModel.vtkUnstructuredGrid`, "
":class:`pyvista.core.pointset.PointGrid`, "
":class:`pyvista.core.filters.UnstructuredGridFilters`"
msgstr ""
"基底: :class:`vtkmodules.vtkCommonDataModel.vtkUnstructuredGrid`, "
":class:`pyvista.core.pointset.PointGrid`, "
":class:`pyvista.core.filters.UnstructuredGridFilters`"

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid:1
msgid "Extends the functionality of a vtk.vtkUnstructuredGrid object."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid:3
msgid "Can be initialized by the following:"
msgstr "次の方法で初期化できます。"

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid:5
msgid "Creating an empty grid"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid:6
msgid "From a vtk.vtkPolyData object"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid:7
msgid "From cell, offset, and node arrays"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid:8 ../../pyvista/pyvista/core/pointset.pydocstring
#: of pyvista.PolyData:9
msgid "From a file"
msgstr "ファイルから"

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid:16
msgid "Create an empty grid"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid:20
msgid "Copy a vtkUnstructuredGrid"
msgstr "vtkUnstructuredGridをコピーする"

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid:31
msgid "From a string filename"
msgstr "文字列ファイル名から"

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.cells:3
msgid "Legacy method"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.linear_copy:3
msgid "Converts the following cell types to their linear equivalents."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.linear_copy:5
msgid "VTK_QUADRATIC_TETRA      --> VTK_TETRA"
msgstr "VTK_QUADRATIC_TETRA      --> VTK_TETRA"

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.linear_copy:6
msgid "VTK_QUADRATIC_PYRAMID    --> VTK_PYRAMID"
msgstr "VTK_QUADRATIC_PYRAMID    --> VTK_PYRAMID"

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.linear_copy:7
msgid "VTK_QUADRATIC_WEDGE      --> VTK_WEDGE"
msgstr "VTK_QUADRATIC_WEDGE      --> VTK_WEDGE"

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.linear_copy:8
msgid "VTK_QUADRATIC_HEXAHEDRON --> VTK_HEXAHEDRON"
msgstr "VTK_QUADRATIC_HEXAHEDRON --> VTK_HEXAHEDRON"

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.linear_copy:10
msgid ""
"When True, makes a copy of the points array.  Default False.  Cells and cell"
" types are always copied."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.linear_copy:14
msgid "**grid** -- UnstructuredGrid containing only linear cells."
msgstr "**grid** -- 線形セルのみを含むUnstructuredGridです。"

#: ../../pyvista/docs/core/point-grids.rst:299
msgid "pv.Structured Grid Class Methods"
msgstr ""

#: ../../pyvista/docs/core/point-grids.rst:300
msgid ""
"The following is a description of the methods available to a "
"``pv.StructuredGrid`` object.  It inherits all methods from the original "
"``vtk`` object, `vtk.vtkStructuredGrid "
"<https://www.vtk.org/doc/nightly/html/classvtkStructuredGrid.html>`_."
msgstr ""

#: ../../pyvista/docs/core/point-grids.rst:310:<autosummary>:1
msgid ":obj:`dimensions <pyvista.StructuredGrid.dimensions>`\\"
msgstr ":obj:`dimensions <pyvista.StructuredGrid.dimensions>`\\"

#: ../../pyvista/docs/core/point-grids.rst:310:<autosummary>:1
msgid ":obj:`x <pyvista.StructuredGrid.x>`\\"
msgstr ":obj:`x <pyvista.StructuredGrid.x>`\\"

#: ../../pyvista/docs/core/point-grids.rst:310:<autosummary>:1
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.StructuredGrid.x:1
msgid "Return the X coordinates of all points."
msgstr "すべての点のX座標を返します。"

#: ../../pyvista/docs/core/point-grids.rst:310:<autosummary>:1
msgid ":obj:`y <pyvista.StructuredGrid.y>`\\"
msgstr ":obj:`y <pyvista.StructuredGrid.y>`\\"

#: ../../pyvista/docs/core/point-grids.rst:310:<autosummary>:1
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.StructuredGrid.y:1
msgid "Return the Y coordinates of all points."
msgstr ""

#: ../../pyvista/docs/core/point-grids.rst:310:<autosummary>:1
msgid ":obj:`z <pyvista.StructuredGrid.z>`\\"
msgstr ":obj:`z <pyvista.StructuredGrid.z>`\\"

#: ../../pyvista/docs/core/point-grids.rst:310:<autosummary>:1
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.StructuredGrid.z:1
msgid "Return the Z coordinates of all points."
msgstr ""

#: ../../pyvista/docs/core/point-grids.rst:315:<autosummary>:1
msgid ":obj:`hide_cells <pyvista.StructuredGrid.hide_cells>`\\ \\(ind\\)"
msgstr ":obj:`hide_cells <pyvista.StructuredGrid.hide_cells>`\\ \\(ind\\)"

#: ../../pyvista/docs/core/point-grids.rst:315:<autosummary>:1
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.StructuredGrid.hide_cells:1
msgid "Hide cells without deleting them."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of pyvista.StructuredGrid:1
msgid ""
"Bases: :class:`vtkmodules.vtkCommonDataModel.vtkStructuredGrid`, "
":class:`pyvista.core.pointset.PointGrid`"
msgstr ""
"基底: :class:`vtkmodules.vtkCommonDataModel.vtkStructuredGrid`, "
":class:`pyvista.core.pointset.PointGrid`"

#: ../../pyvista/pyvista/core/pointset.pydocstring of pyvista.StructuredGrid:1
msgid "Extend the functionality of a vtk.vtkStructuredGrid object."
msgstr "vtk.vtkStructuredGridオブジェクトの機能を拡張します。"

#: ../../pyvista/pyvista/core/pointset.pydocstring of pyvista.StructuredGrid:6
msgid "Initialize from a vtk.vtkStructuredGrid object"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.StructuredGrid.hide_cells:3
msgid "Hides cells by setting the ghost_cells array to HIDDEN_CELL."
msgstr "ghost_cells配列をHIDDEN_CELLに設定して、セルを非表示にします。"

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.StructuredGrid.hide_cells:5
msgid ""
"List or array of cell indices to be hidden.  The array can also be a boolean"
" array of the same size as the number of cells."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.StructuredGrid.hide_cells:12
msgid "Hide part of the middle of a structured surface."
msgstr ""

#: ../../pyvista/docs/core/point-grids.rst:323
msgid "Methods in Common with Structured and Unstructured Grids"
msgstr ""

#: ../../pyvista/docs/core/point-grids.rst:324
msgid ""
"These methods are in common to both ``pv.StructuredGrid`` and "
"``pv.UnstructuredGrid`` objects."
msgstr ""

#: ../../pyvista/docs/core/point-grids.rst:333:<autosummary>:1
msgid ":obj:`volume <pyvista.PointGrid.volume>`\\"
msgstr ":obj:`volume <pyvista.PointGrid.volume>`\\"

#: ../../pyvista/docs/core/point-grids.rst:333:<autosummary>:1
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PointGrid.volume:1
msgid "Compute the volume of the point grid."
msgstr "ポイントグリッドの体積を計算します。"

#: ../../pyvista/docs/core/point-grids.rst:338:<autosummary>:1
msgid ":obj:`plot_curvature <pyvista.PointGrid.plot_curvature>`\\ \\(\\[curv\\_type\\]\\)"
msgstr ""
":obj:`plot_curvature <pyvista.PointGrid.plot_curvature>`\\ "
"\\(\\[curv\\_type\\]\\)"

#: ../../pyvista/docs/core/point-grids.rst:338:<autosummary>:1
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PointGrid.plot_curvature:1
msgid "Plot the curvature of the external surface of the grid."
msgstr "グリッドの外部表面の曲率をプロットします。"

#: ../../pyvista/pyvista/core/pointset.pydocstring of pyvista.PointGrid:1
msgid "Bases: :class:`pyvista.core.pointset.PointSet`"
msgstr "基底: :class:`pyvista.core.pointset.PointSet`"

#: ../../pyvista/pyvista/core/pointset.pydocstring of pyvista.PointGrid:1
msgid "Class in common with structured and unstructured grids."
msgstr "構造化されたグリッドと構造化されていないグリッドに共通するクラスです。"

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PointGrid.plot_curvature:3
msgid ""
"One of the following strings indicating curvature types  - mean - gaussian -"
" maximum - minimum"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PointGrid.plot_curvature:3
msgid "One of the following strings indicating curvature types"
msgstr "曲率タイプを示す次のいずれかの文字列"

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PointGrid.plot_curvature:5
msgid "mean"
msgstr "平均"

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PointGrid.plot_curvature:6
msgid "gaussian"
msgstr "gaussian"

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PointGrid.plot_curvature:7
msgid "maximum"
msgstr "最大"

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PointGrid.plot_curvature:8
msgid "minimum"
msgstr "最小"

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PointGrid.plot_curvature:10
msgid "Optional keyword arguments.  See help(pyvista.plot)"
msgstr "オプションのキーワード引数。ヘルプ参照 (pyvista.plot)"

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PointGrid.plot_curvature:13
msgid ""
"**cpos** -- Camera position, focal point, and view up.  Used for storing and"
" setting camera view."
msgstr "**cpos** -- カメラ位置、焦点、およびビューアップ。カメラビューの保存と設定に使用します。"

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PointGrid.volume:3
msgid "This extracts the external surface and computes the interior volume"
msgstr "外部サーフェスが抽出され、内部ボリュームが計算されます。"

#: ../../pyvista/docs/core/points.rst:2
msgid "Point Data"
msgstr "ポイントデータ"

#: ../../pyvista/docs/core/points.rst:3
msgid ""
"The ``pyvista.PolyData`` object adds additional functionality to the "
"``vtk.vtkPolyData`` object, to include direct array access through NumPy, "
"one line plotting, and other mesh functions."
msgstr ""
"``pyvista.PolyData`` オブジェクトは ``vtk.vtkPolyData`` "
"オブジェクトに追加機能を追加し、NumPyによる直接配列アクセス、1行描画、およびその他のメッシュ機能を含みます。"

#: ../../pyvista/docs/core/points.rst:9
msgid "PolyData Creation"
msgstr "PolyDataの作成"

#: ../../pyvista/docs/core/points.rst:11
msgid ""
"See :ref:`ref_create_poly` for an example on creating a ``pyvista.PolyData``"
" object from NumPy arrays."
msgstr ""
"NumPy配列から ``pyvista.PolyData`` オブジェクトを作成する例については、 :ref:`ref_create_poly` "
"を参照してください。"

#: ../../pyvista/docs/core/points.rst:16
msgid "A polydata object can be initialized with:"
msgstr "ポリデータオブジェクトは次のように初期化できます。"

#: ../../pyvista/docs/core/points.rst:23
msgid ""
"This creates an empty grid, and is not useful until points and cells are "
"added to it.  VTK points and cells can be added with ``SetPoints`` and "
"``SetCells``, but the inputs to these need to be ``vtk.vtkCellArray`` and "
"``vtk.vtkPoints`` objects, which need to be populated with values. Grid "
"creation is simplified by initializing the grid directly from NumPy arrays "
"as in the following section."
msgstr ""
"これにより空のグリッドが作成され、ポイントとセルが追加されるまでは使用できません。VTKポイントおよびセルは ``SetPoints`` および "
"``SetCells`` を使用して追加できますが、これらへの入力は ``vtk.vtkCellArray`` および "
"``vtk.vtkPoints`` "
"オブジェクトである必要があり、値を設定する必要があります。グリッドの作成は、次のセクションのようにNumPy配列から直接グリッドを初期化することで簡単になります。"

#: ../../pyvista/docs/core/points.rst:32
msgid "Initialize from a File"
msgstr "ファイルから初期化"

#: ../../pyvista/docs/core/points.rst:33
msgid ""
"Both binary and ASCII .ply, .stl, and .vtk files can be read using PyVista. "
"For example, the PyVista package contains example meshes and these can be "
"loaded with:"
msgstr ""
"バイナリファイルもASCII .ply, .stl, と "
".vtkファイルもPyVistaで読むことができます。たとえば、PyVistaパッケージにはメッシュの例が含まれており、次のようにしてロードできます。"

#: ../../pyvista/docs/core/points.rst:44
msgid "This mesh can then be written to a vtk file using:"
msgstr "このメッシュは、次を使用してvtkファイルに書き込むことができます。"

#: ../../pyvista/docs/core/points.rst:50
msgid "These meshes are identical."
msgstr "これらのメッシュは同一です。"

#: ../../pyvista/docs/core/points.rst:68
msgid "Mesh Manipulation and Plotting"
msgstr "メッシュ操作とプロット"

#: ../../pyvista/docs/core/points.rst:69
msgid ""
"Meshes can be directly manipulated using NumPy or with the built-in "
"translation and rotation routines. This example loads two meshes and moves, "
"scales, and copies them."
msgstr ""
"メッシュは、NumPyまたは組み込みの移動と回転ルーチンを使用して直接操作できます。この例では、2つのメッシュをロードし、移動、スケール、およびコピーします。"

#: ../../pyvista/docs/core/points.rst:91
msgid ""
"To plot more than one mesh a plotting class must be created to manage the "
"plotting. The following code creates the class and plots the meshes with "
"various colors."
msgstr ""
"複数のメッシュをプロットするには、プロットクラスを作成してプロットを管理する必要があります。次のコードは、クラスを作成し、メッシュをさまざまな色でプロットします。"

#: ../../pyvista/docs/core/points.rst:115
msgid "pyvista.PolyData Grid Class Methods"
msgstr "pyvista.PolyData グリッドクラスメソッド"

#: ../../pyvista/docs/core/points.rst:116
msgid ""
"The following is a description of the methods available to a "
"``pyvista.PolyData`` object.  It inherits all methods from the original vtk "
"object, `vtk.vtkPolyData "
"<https://www.vtk.org/doc/nightly/html/classvtkPolyData.html>`_."
msgstr ""
"以下は ``pyvista.PolyData`` オブジェクトで利用可能なメソッドの説明です。元のvtkオブジェクト `vtk.vtkPolyData "
"<https://www.vtk.org/doc/nightly/html/classvtkPolyData.html>`_ "
"からすべてのメソッドを継承します。"

#: ../../pyvista/docs/core/points.rst:126:<autosummary>:1
msgid ":obj:`area <pyvista.PolyData.area>`\\"
msgstr ":obj:`area <pyvista.PolyData.area>`\\"

#: ../../pyvista/docs/core/points.rst:126:<autosummary>:1
#: ../../pyvista/pyvista/core/pointset.pydocstring of pyvista.PolyData.area:1
msgid "Return the mesh surface area."
msgstr "メッシュ表面領域を返します。"

#: ../../pyvista/docs/core/points.rst:126:<autosummary>:1
msgid ":obj:`cell_normals <pyvista.PolyData.cell_normals>`\\"
msgstr ":obj:`cell_normals <pyvista.PolyData.cell_normals>`\\"

#: ../../pyvista/docs/core/points.rst:126:<autosummary>:1
#: ../../pyvista/docs/core/points.rst:126:<autosummary>:1
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.cell_normals:1
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.face_normals:1
msgid "Return the cell normals."
msgstr "セルの法線を返します。"

#: ../../pyvista/docs/core/points.rst:126:<autosummary>:1
msgid ":obj:`face_normals <pyvista.PolyData.face_normals>`\\"
msgstr ":obj:`face_normals <pyvista.PolyData.face_normals>`\\"

#: ../../pyvista/docs/core/points.rst:126:<autosummary>:1
msgid ":obj:`faces <pyvista.PolyData.faces>`\\"
msgstr ":obj:`faces <pyvista.PolyData.faces>`\\"

#: ../../pyvista/docs/core/points.rst:126:<autosummary>:1
msgid ":obj:`lines <pyvista.PolyData.lines>`\\"
msgstr ":obj:`lines <pyvista.PolyData.lines>`\\"

#: ../../pyvista/docs/core/points.rst:126:<autosummary>:1
#: ../../pyvista/pyvista/core/pointset.pydocstring of pyvista.PolyData.lines:1
msgid "Return a pointer to the lines as a numpy object."
msgstr "ラインへのポインタをnumpyオブジェクトとして返します。"

#: ../../pyvista/docs/core/points.rst:126:<autosummary>:1
msgid ":obj:`n_faces <pyvista.PolyData.n_faces>`\\"
msgstr ":obj:`n_faces <pyvista.PolyData.n_faces>`\\"

#: ../../pyvista/docs/core/points.rst:126:<autosummary>:1
msgid ":obj:`n_open_edges <pyvista.PolyData.n_open_edges>`\\"
msgstr ":obj:`n_open_edges <pyvista.PolyData.n_open_edges>`\\"

#: ../../pyvista/docs/core/points.rst:126:<autosummary>:1
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.n_open_edges:1
msgid "Return the number of open edges on this mesh."
msgstr "このメッシュ上の開いたエッジの数を返します。"

#: ../../pyvista/docs/core/points.rst:126:<autosummary>:1
msgid ":obj:`number_of_faces <pyvista.PolyData.number_of_faces>`\\"
msgstr ":obj:`number_of_faces <pyvista.PolyData.number_of_faces>`\\"

#: ../../pyvista/docs/core/points.rst:126:<autosummary>:1
msgid ":obj:`obbTree <pyvista.PolyData.obbTree>`\\"
msgstr ":obj:`obbTree <pyvista.PolyData.obbTree>`\\"

#: ../../pyvista/docs/core/points.rst:126:<autosummary>:1
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.obbTree:1
msgid "Return the obbTree of the polydata."
msgstr "polydataのobbTreeを返します。"

#: ../../pyvista/docs/core/points.rst:126:<autosummary>:1
msgid ":obj:`point_normals <pyvista.PolyData.point_normals>`\\"
msgstr ":obj:`point_normals <pyvista.PolyData.point_normals>`\\"

#: ../../pyvista/docs/core/points.rst:126:<autosummary>:1
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.point_normals:1
msgid "Return the point normals."
msgstr "ポイント法線を返します。"

#: ../../pyvista/docs/core/points.rst:126:<autosummary>:1
msgid ":obj:`verts <pyvista.PolyData.verts>`\\"
msgstr ":obj:`verts <pyvista.PolyData.verts>`\\"

#: ../../pyvista/docs/core/points.rst:126:<autosummary>:1
#: ../../pyvista/pyvista/core/pointset.pydocstring of pyvista.PolyData.verts:1
msgid "Get the vertex cells."
msgstr "頂点セルを取得します。"

#: ../../pyvista/docs/core/points.rst:126:<autosummary>:1
msgid ":obj:`volume <pyvista.PolyData.volume>`\\"
msgstr ":obj:`volume <pyvista.PolyData.volume>`\\"

#: ../../pyvista/docs/core/points.rst:131:<autosummary>:1
msgid ":obj:`is_all_triangles <pyvista.PolyData.is_all_triangles>`\\ \\(\\)"
msgstr ":obj:`is_all_triangles <pyvista.PolyData.is_all_triangles>`\\ \\(\\)"

#: ../../pyvista/docs/core/points.rst:131:<autosummary>:1
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.is_all_triangles:1
msgid "Return True if all the faces of the polydata are triangles."
msgstr "polydataのすべての面が三角形の場合、Trueを返します。"

#: ../../pyvista/docs/core/points.rst:131:<autosummary>:1
msgid ":obj:`save <pyvista.PolyData.save>`\\ \\(filename\\[\\, binary\\]\\)"
msgstr ":obj:`save <pyvista.PolyData.save>`\\ \\(filename\\[\\, binary\\]\\)"

#: ../../pyvista/docs/core/points.rst:131:<autosummary>:1
#: ../../pyvista/pyvista/core/pointset.pydocstring of pyvista.PolyData.save:1
msgid "Write a surface mesh to disk."
msgstr "サーフェスメッシュをディスクに書き込みます。"

#: ../../pyvista/pyvista/core/pointset.pydocstring of pyvista.PolyData:1
msgid ""
"Bases: :class:`vtkmodules.vtkCommonDataModel.vtkPolyData`, "
":class:`pyvista.core.pointset.PointSet`, "
":class:`pyvista.core.filters.PolyDataFilters`"
msgstr ""
"基底: :class:`vtkmodules.vtkCommonDataModel.vtkPolyData`, "
":class:`pyvista.core.pointset.PointSet`, "
":class:`pyvista.core.filters.PolyDataFilters`"

#: ../../pyvista/pyvista/core/pointset.pydocstring of pyvista.PolyData:1
msgid "Extend the functionality of a vtk.vtkPolyData object."
msgstr "vtk.vtkPolyDataオブジェクトの機能を拡張します。"

#: ../../pyvista/pyvista/core/pointset.pydocstring of pyvista.PolyData:5
msgid "Create an empty mesh"
msgstr "空のメッシュを作成する"

#: ../../pyvista/pyvista/core/pointset.pydocstring of pyvista.PolyData:6
msgid "Initialize from a vtk.vtkPolyData"
msgstr "vtk.vtkPolyDataから初期化する"

#: ../../pyvista/pyvista/core/pointset.pydocstring of pyvista.PolyData:7
msgid "Using vertices"
msgstr "頂点を使用する"

#: ../../pyvista/pyvista/core/pointset.pydocstring of pyvista.PolyData:8
msgid "Using vertices and faces"
msgstr "頂点と面を使用する"

#: ../../pyvista/pyvista/core/pointset.pydocstring of pyvista.PolyData.area:3
msgid "**area** -- Total area of the mesh."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.n_faces:3
msgid "Alias for ``n_cells``."
msgstr "``n_cells`` のエイリアス。"

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.obbTree:3
msgid ""
"An obbTree is an object to generate oriented bounding box (OBB) trees. An "
"oriented bounding box is a bounding box that does not necessarily line up "
"along coordinate axes. The OBB tree is a hierarchical tree structure of such"
" boxes, where deeper levels of OBB confine smaller regions of space."
msgstr ""
"obbTreeは、方向付きバウンディングボックス (OBB) "
"ツリーを生成するオブジェクトです。方向を指定した境界ボックスは、必ずしも座標軸に沿って整列しない境界ボックスです。OBBツリーはこのようなボックスの階層ツリー構造であり、そこではOBBのより深いレベルが空間のより小さな領域を限定します。"

#: ../../pyvista/pyvista/core/pointset.pydocstring of pyvista.PolyData.save:3
msgid ""
"Written file may be an ASCII or binary ply, stl, or vtk mesh file. If ply or"
" stl format is chosen, the face normals are computed in place to ensure the "
"mesh is properly saved."
msgstr ""
"書き込まれるファイルは、ASCIIまたはバイナリply、stl、またはvtkメッシュファイルです。plyまたはstlフォーマットを選択すると、メッシュが適切に保存されるように面法線が所定の位置で計算されます。"

#: ../../pyvista/pyvista/core/pointset.pydocstring of pyvista.PolyData.save:7
msgid ""
"Filename of mesh to be written.  File type is inferred from the extension of"
" the filename unless overridden with ftype.  Can be one of the following "
"types (.ply, .stl, .vtk)"
msgstr ""
"書き込むメッシュのファイル名。ftypeで上書きしない限り、ファイルタイプはファイル名の拡張子から推測されます。次のいずれかのタイプになります "
"(.ply, .stl, .vtk) 。"

#: ../../pyvista/pyvista/core/pointset.pydocstring of pyvista.PolyData.save:12
msgid "Writes the file as binary when True and ASCII when False."
msgstr "Trueの場合はバイナリとして、Falseの場合はASCIIとしてファイルを書き込みます。"

#: ../../pyvista/pyvista/core/pointset.pydocstring of pyvista.PolyData.save:17
msgid "Binary files write much faster than ASCII and have a smaller"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of pyvista.PolyData.save:18
msgid "file size."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.volume:3
msgid "This will throw a VTK error/warning if not a closed surface"
msgstr ""

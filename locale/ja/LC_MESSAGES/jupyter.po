# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017-2021, The PyVista Developers
# This file is distributed under the same license as the PyVista package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Tetsuo Koyama <tkoyama010@gmail.com>, 2022
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyVista 0.29.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-17 00:17+0000\n"
"PO-Revision-Date: 2021-04-02 08:34+0000\n"
"Last-Translator: Tetsuo Koyama <tkoyama010@gmail.com>, 2022\n"
"Language-Team: Japanese (https://www.transifex.com/tkoyama010/teams/112279/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../pyvista/docs/jupyter/index.rst:4
msgid "Jupyter Notebook Plotting"
msgstr "Jupyterノートブックプロット"

#: ../../pyvista/docs/jupyter/index.rst:5
msgid ""
"Plot with ``pyvista`` interactively within a `Juptyer "
"<https://jupyter.org/>`_ notebook!"
msgstr "`Juptyer <https://jupyter.org/>`_ ノートで ``pyvista`` でインタラクティブにプロット!"

#: ../../pyvista/docs/jupyter/index.rst:10
msgid "Demo Using ``panel``"
msgstr "``panel`` を使ったデモ"

#: ../../pyvista/docs/jupyter/index.rst:19
msgid "Demo Using ``ipygany``"
msgstr "``ipygany`` を使ったデモ"

#: ../../pyvista/docs/jupyter/index.rst:39
msgid "Supported Modules"
msgstr "サポートされるモジュール"

#: ../../pyvista/docs/jupyter/index.rst:40
msgid ""
"The PyVista module supports a variety of backends when plotting within a "
"jupyter notebook:"
msgstr "PyVistaモジュールは，Jupyterノートブック内でプロットする際のさまざまなバックエンドをサポートしています:"

#: ../../pyvista/docs/jupyter/index.rst:43
msgid ""
"Server-side rendering with PyVista streaming to the notebook through "
"`ipyvtklink <https://github.com/Kitware/ipyvtklink/>`_"
msgstr ""
"`ipyvtklink <https://github.com/Kitware/ipyvtklink/>`_ "
"を介したノートブックへのPyVistaストリーミングによるサーバ側のレンダリング"

#: ../../pyvista/docs/jupyter/index.rst:45
msgid ""
"Client-side rendering with `ipygany "
"<https://github.com/QuantStack/ipygany>`_ using ``threejs``."
msgstr ""
"``threejs`` を使用した `ipygany <https://github.com/QuantStack/ipygany>`_ "
"によるクライアント側レンダリング．"

#: ../../pyvista/docs/jupyter/index.rst:46
msgid ""
"Client-side rendering using `panel <https://github.com/holoviz/panel>`_ "
"using ``vtk.js``."
msgstr ""
"``vtk.js`` を使用した `panel <https://github.com/holoviz/panel>`_ "
"を使用したクライアント側レンダリング．"

#: ../../pyvista/docs/jupyter/index.rst:47
msgid ""
"Client-side rendering with `itkwidgets "
"<https://github.com/InsightSoftwareConsortium/itkwidgets>`_ using ``itk.js``"
" and ``vtk.js``."
msgstr ""
"``itk.js`` と ``vtk.js`` を使用した `itkwidgets "
"<https://github.com/InsightSoftwareConsortium/itkwidgets>`_ "
"によるクライアント側レンダリング．"

#: ../../pyvista/docs/jupyter/index.rst:48
msgid "Static images."
msgstr "静止画像．"

#: ../../pyvista/docs/jupyter/index.rst:53
msgid "Details for Each Backend"
msgstr "各バックエンドの詳細"

#: ../../pyvista/docs/jupyter/index.rst:54
msgid ""
"See the individual package pages on each backend for additional details on "
"how to use these plotting backends."
msgstr "これらの描画バックエンドの使用方法の詳細については，各バックエンドの個々のパッケージページを参照してください．"

#: ../../pyvista/docs/jupyter/index.rst:67
msgid "State of 3D Interactive Jupyterlab Plotting"
msgstr "3 D対話型Jupyterlabプロットの状態"

#: ../../pyvista/docs/jupyter/index.rst:71
msgid ""
"3D plotting within Jupyter notebooks is an emerging technology, partially "
"because Jupyter is still relatively new, but also because the web technology"
" used here is also new and rapidly developing as more and more users and "
"developers shift to the cloud or cloud-based visualization.  Things here are"
" likely to break and rapidly change"
msgstr ""
"Jupyterノートブック内の3 "
"Dプロットは，Jupyterがまだ比較的新しい技術であることもありますが，ここで使用されているWeb技術も新しい技術であり，ますます多くのユーザや開発者がクラウドやクラウドベースのビジュアライゼーションに移行しているため，急速に発展しています．ここにあるものは壊れ，急速に変化する可能性が高いです"

#: ../../pyvista/docs/jupyter/index.rst:77
msgid ""
"This was written in March 2021, and may already be out of date.  Be sure to "
"check the developer websites for any changes."
msgstr "これは2021年3月に書かれたもので，すでに時代遅れかもしれません．変更については，開発者のWebサイトを確認してください．"

#: ../../pyvista/docs/jupyter/index.rst:80
msgid ""
"When plotting using Jupyterlab you have the option of using one of many "
"modules, each of which has its advantages, disadvantages, and quirks.  While"
" ``pyvista`` attempts to remove some of the differences in the API when "
"using the ``Plotting`` class, the plots will still look and feel differently"
" depending on the backend.  Additionally, different backends have different "
"requirements and may not support your deployment environment."
msgstr ""
"Jupyterlabを使用してプロットする場合は，多数のモジュールのいずれかを使用することもできますが，それぞれに長所，短所，および短所があります． "
"``pyvista`` は ``Plotting`` "
"クラスを使用するときにAPIの違いのいくつかを取り除こうとしますが，プロットはバックエンドによって異なるように見えます．また，バックエンドが異なると要件も異なり，展開環境をサポートしない場合があります．"

#: ../../pyvista/docs/jupyter/index.rst:88
msgid ""
"This table details various capabilities and technologies used by the jupyter"
" notebook plotting modules:"
msgstr "次の表に，jupyterノートブックプロットモジュールで使用されるさまざまな機能とテクノロジを示します．"

#: ../../pyvista/docs/jupyter/index.rst:92
msgid "Jupyter Notebook 3D Modules"
msgstr "Jupyterノートブック3 Dモジュール"

#: ../../pyvista/docs/jupyter/index.rst:94
msgid "Jupyterlab 3"
msgstr "Jupyterlab 3"

#: ../../pyvista/docs/jupyter/index.rst:94
msgid "Rendering Location"
msgstr "レンダリングの場所"

#: ../../pyvista/docs/jupyter/index.rst:94
msgid "Backend"
msgstr "バックエンド"

#: ../../pyvista/docs/jupyter/index.rst:94
msgid "Requires Framebuffer"
msgstr "フレームバッファが必要"

#: ../../pyvista/docs/jupyter/index.rst:96
msgid "panel"
msgstr "panel"

#: ../../pyvista/docs/jupyter/index.rst:96
#: ../../pyvista/docs/jupyter/index.rst:96
#: ../../pyvista/docs/jupyter/index.rst:98
#: ../../pyvista/docs/jupyter/index.rst:100
#: ../../pyvista/docs/jupyter/index.rst:100
#: ../../pyvista/docs/jupyter/index.rst:102
msgid "Yes"
msgstr "Yes"

#: ../../pyvista/docs/jupyter/index.rst:96
#: ../../pyvista/docs/jupyter/index.rst:98
#: ../../pyvista/docs/jupyter/index.rst:102
msgid "Client"
msgstr "クライアント"

#: ../../pyvista/docs/jupyter/index.rst:96
#: ../../pyvista/docs/jupyter/index.rst:102
msgid "vtk.js"
msgstr "vtk.js"

#: ../../pyvista/docs/jupyter/index.rst:98
msgid "ipygany"
msgstr "ipygany"

#: ../../pyvista/docs/jupyter/index.rst:98
msgid "threejs"
msgstr "threejs"

#: ../../pyvista/docs/jupyter/index.rst:98
#: ../../pyvista/docs/jupyter/index.rst:102
msgid "No"
msgstr "いいえ"

#: ../../pyvista/docs/jupyter/index.rst:100
msgid "ipyvtklink"
msgstr "ipyvtklink"

#: ../../pyvista/docs/jupyter/index.rst:100
msgid "Server"
msgstr "サーバ"

#: ../../pyvista/docs/jupyter/index.rst:100
msgid "vtk"
msgstr "vtk"

#: ../../pyvista/docs/jupyter/index.rst:102
msgid "itkwidgets"
msgstr "itkwidgets"

#: ../../pyvista/docs/jupyter/index.rst:105
msgid ""
"At the moment, ``itkwidgets`` and ``ipyvtklink`` are incompatible with "
"Jupyterlab 3, and will result in a \"Error displaying widget: model not "
"found\" message from juptyer.  Additionally, all the modules other than "
"``ipygany`` require a framebuffer, which can be setup on a headless "
"environment with ``pyvista.start_xvfb()``.  However, on Google Colab, where "
"it's not possible to install system packages, you should stick with a module"
" like ``threejs``, which does not require any server side rendering or "
"framebuffer."
msgstr ""
"現時点では， ``itkwidgets`` と ``ipyvtklink`` はJupyterlab 3と互換性がなく，juptyerから "
"\"Error displaying widget: model not found\" メッセージが送信されます．さらに ``ipygany`` "
"以外のモジュールはすべてフレームバッファを必要とします．これは ``pyvista.start_xvfb()`` "
"を使ったヘッドレス環境で設定できます．しかし，システムパッケージをインストールできないGoogle Colabでは， ``threejs`` "
"のようなサーバ側のレンダリングやフレームバッファを必要としないモジュールを使うべきです．"

#: ../../pyvista/docs/jupyter/index.rst:114
msgid ""
"See :ref:`install_ref` for more details installing on a headless environment"
" for the backends requiring a framebuffer.  When installing the individual "
"packages, the Jupyterlab 3 compatible packages can be installed with a "
"simple ``pip install <package>``.  See the installation instructions for the"
" other packages for more details."
msgstr ""
"フレームバッファを必要とするバックエンドのためのヘッドレス環境へのインストールの詳細については， :ref:`install_ref` "
"を参照してください．個々のパッケージをインストールする場合，簡単な ``pip install <package>`` を使用してJupyterlab "
"3互換パッケージをインストールできます．詳細は，他のパッケージのインストール手順を参照してください．"

#: ../../pyvista/docs/jupyter/index.rst:122
msgid "Usage with PyVista"
msgstr "PyVistaでの使用法"

#: ../../pyvista/docs/jupyter/index.rst:123
msgid ""
"There are two ways to set the jupyter plotting backend.  First, it can be "
"done on a plot by plot basis by setting the ``jupyter_backend`` in either "
"``mesh.plot()`` or ``plotter.show()``.  You can also set it globally with "
"the ``pyvista.set_jupyter_backend`` function.  For further details:"
msgstr ""
"Jupyterプロットバックエンドを設定する方法は2つあります．まず， ``jupyter_backend`` を ``mesh.plot()`` "
"または ``plotter.show()`` に設定することで，プロット単位で実行できます．また， "
"``pyvista.set_jupyter_backend`` 関数を使用してグローバルに設定することもできます．詳細については，次を参照してください．"

#: ../../pyvista/pyvista/jupyter/__init__.pydocstring of
#: pyvista.jupyter.set_jupyter_backend:1
msgid "Set the plotting backend for a jupyter notebook."
msgstr "Jupyterノートブックのプロットバックエンドを設定します．"

#: ../../pyvista/pyvista/jupyter/__init__.pydocstring of
#: pyvista.jupyter.set_jupyter_backend:0
#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.add_mesh:0
#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.add_points:0
#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.show:0
msgid "Parameters"
msgstr "パラメータ"

#: ../../pyvista/pyvista/jupyter/__init__.pydocstring of
#: pyvista.jupyter.set_jupyter_backend:3
msgid ""
"Jupyter backend to use when plotting.  Must be one of the following:  * "
"``'ipyvtklink'`` : Render remotely and stream the   resulting VTK images "
"back to the client.  Supports all VTK   methods, but suffers from lag due to"
" remote rendering.   Requires that a virtual framebuffer be setup when "
"displaying   on a headless server.  Must have ``ipyvtklink`` installed.  * "
"``'panel'`` : Convert the VTK render window to a vtkjs   object and then "
"visualize that within jupyterlab. Supports   most VTK objects.  Requires "
"that a virtual framebuffer be   setup when displaying on a headless server."
"  Must have   ``panel`` installed.  * ``'ipygany'`` : Convert all the meshes"
" into ``ipygany``   meshes and streams those to be rendered on the client "
"side.   Supports VTK meshes, but few others.  Aside from ``none``,   this is"
" the only method that does not require a virtual   framebuffer.  Must have "
"``ipygany`` installed.  * ``'static'`` : Display a single static image "
"within the   Jupyterlab environment.  Still requires that a virtual   "
"framebuffer be setup when displaying on a headless server,   but does not "
"require any additional modules to be installed.  * ``'none'`` : Do not "
"display any plots within jupyterlab,   instead display using dedicated VTK "
"render windows.  This   will generate nothing on headless servers even with "
"a   virtual framebuffer."
msgstr ""
"プロット時に使用するJupyterバックエンドです．次のいずれかである必要があります:* ``'ipyvtklink'`` : "
"リモートでレンダリングし，結果のVTKイメージをクライアントにストリーミングします．すべてのVTKメソッドをサポートしますが，リモートレンダリングのために遅延が発生します．ヘッドレスサーバーで表示する場合は，仮想フレームバッファをセットアップする必要があります．"
" ``ipyvtklink`` がインストールされている必要があります． * ``'panel'`` : "
"VTKレンダーウィンドウをvtkjsオブジェクトに変換し，それをjupyterlabで視覚化します．ほとんどのVTKオブジェクトをサポートします．ヘッドレスサーバーで表示する場合は，仮想フレームバッファをセットアップする必要があります．"
" ``panel`` がインストールされている必要があります． * ``'ipygany'`` : すべてのメッシュ ``ipygany`` "
"メッシュに変換し，クライアント側でレンダリングするメッシュをストリーミングします．VTKメッシュをサポートしていますが，他にはほとんどありません． "
"``none`` を除き，これは仮想フレームバッファを必要としない唯一の方法です． ``ipygany`` がインストールされている必要があります． "
"``'static'`` : "
"Jupyterlab環境内に単一の静的イメージを表示します．ヘッドレスサーバーで表示する場合も仮想フレームバッファをセットアップする必要がありますが，追加のモジュールをインストールする必要はありません．"
" * ``'none'`` : "
"jupyterlab内にプロットを表示せず，専用のVTKレンダリングウィンドウを使用して表示します．これは，仮想フレームバッファがあっても，ヘッドレスサーバー上では何も生成しません．"

#: ../../pyvista/pyvista/jupyter/__init__.pydocstring of
#: pyvista.jupyter.set_jupyter_backend:3
msgid "Jupyter backend to use when plotting.  Must be one of the following:"
msgstr "プロット時に使用するJupyterバックエンドです．次のいずれかである必要があります．"

#: ../../pyvista/pyvista/jupyter/__init__.pydocstring of
#: pyvista.jupyter.set_jupyter_backend:5
msgid ""
"``'ipyvtklink'`` : Render remotely and stream the resulting VTK images back "
"to the client.  Supports all VTK methods, but suffers from lag due to remote"
" rendering. Requires that a virtual framebuffer be setup when displaying on "
"a headless server.  Must have ``ipyvtklink`` installed."
msgstr ""
"``'ipyvtklink'`` : "
"リモートでレンダリングし，結果のVTKイメージをクライアントにストリーミングします．すべてのVTKメソッドをサポートしますが，リモートレンダリングのために遅延が発生します．ヘッドレスサーバーで表示する場合は，仮想フレームバッファをセットアップする必要があります．"
" ``ipyvtklink`` がインストールされている必要があります．"

#: ../../pyvista/pyvista/jupyter/__init__.pydocstring of
#: pyvista.jupyter.set_jupyter_backend:11
msgid ""
"``'panel'`` : Convert the VTK render window to a vtkjs object and then "
"visualize that within jupyterlab. Supports most VTK objects.  Requires that "
"a virtual framebuffer be setup when displaying on a headless server.  Must "
"have ``panel`` installed."
msgstr ""
"``'panel'`` : "
"VTKレンダーウィンドウをvtkjsオブジェクトに変換し，それをjupyterlabで視覚化します．ほとんどのVTKオブジェクトをサポートします．ヘッドレスサーバーで表示する場合は，仮想フレームバッファをセットアップする必要があります．"
" ``panel`` がインストールされている必要があります．"

#: ../../pyvista/pyvista/jupyter/__init__.pydocstring of
#: pyvista.jupyter.set_jupyter_backend:17
msgid ""
"``'ipygany'`` : Convert all the meshes into ``ipygany`` meshes and streams "
"those to be rendered on the client side. Supports VTK meshes, but few "
"others.  Aside from ``none``, this is the only method that does not require "
"a virtual framebuffer.  Must have ``ipygany`` installed."
msgstr ""
"``'ipygany'`` : すべてのメッシュを ``ipygany`` "
"メッシュに変換し，クライアント側でレンダリングするメッシュをストリーミングします．VTKメッシュをサポートしていますが，他にはほとんどありません． "
"``none`` を除き，これは仮想フレームバッファを必要としない唯一の方法です． ``ipygany`` がインストールされている必要があります．"

#: ../../pyvista/pyvista/jupyter/__init__.pydocstring of
#: pyvista.jupyter.set_jupyter_backend:23
msgid ""
"``'static'`` : Display a single static image within the Jupyterlab "
"environment.  Still requires that a virtual framebuffer be setup when "
"displaying on a headless server, but does not require any additional modules"
" to be installed."
msgstr ""
"``'static'`` : "
"Jupyterlab環境内に単一の静的イメージを表示します．ヘッドレスサーバーで表示する場合も仮想フレームバッファをセットアップする必要がありますが，追加のモジュールをインストールする必要はありません．"

#: ../../pyvista/pyvista/jupyter/__init__.pydocstring of
#: pyvista.jupyter.set_jupyter_backend:28
msgid ""
"``'none'`` : Do not display any plots within jupyterlab, instead display "
"using dedicated VTK render windows.  This will generate nothing on headless "
"servers even with a virtual framebuffer."
msgstr ""
"``'none'`` : "
"jupyterlab内にプロットを表示せず，専用のVTKレンダリングウィンドウを使用して表示します．これは，仮想フレームバッファがあっても，ヘッドレスサーバー上では何も生成しません．"

#: ../../pyvista/pyvista/jupyter/__init__.pydocstring of
#: pyvista.jupyter.set_jupyter_backend:35
#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK:9
#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.add_points:17
msgid "Examples"
msgstr "例"

#: ../../pyvista/pyvista/jupyter/__init__.pydocstring of
#: pyvista.jupyter.set_jupyter_backend:36
msgid "Enable the ipygany backend."
msgstr "ipygany バックエンドを有効にします．"

#: ../../pyvista/pyvista/jupyter/__init__.pydocstring of
#: pyvista.jupyter.set_jupyter_backend:41
msgid "Enable the panel backend."
msgstr "panelバックエンドを有効にします．"

#: ../../pyvista/pyvista/jupyter/__init__.pydocstring of
#: pyvista.jupyter.set_jupyter_backend:45
msgid "Enable the ipyvtklink backend."
msgstr "ipyvtklink バックエンドを有効にします．"

#: ../../pyvista/pyvista/jupyter/__init__.pydocstring of
#: pyvista.jupyter.set_jupyter_backend:49
msgid "Just show static images."
msgstr "静止画像を表示するだけです．"

#: ../../pyvista/pyvista/jupyter/__init__.pydocstring of
#: pyvista.jupyter.set_jupyter_backend:53
msgid ""
"Disable all plotting within JupyterLab and display using a standard desktop "
"VTK render window."
msgstr "JupyterLab内のすべてのプロットを無効にし，準のデスクトップVTKレンダリングウィンドウを使用して表示します．"

#: ../../pyvista/docs/jupyter/ipygany.rst:4
msgid "Using ``ipygany`` with PyVista"
msgstr "PyVistaで ``ipygany`` を使う"

#: ../../pyvista/docs/jupyter/ipygany.rst:5
msgid ""
"The `ipygany <https://github.com/QuantStack/ipygany>`_ jupyterlab plotting "
"backend is a powerful module that enables pure plotting that leverages "
"`threejs <https://threejs.org/>`_ through the `pythreejs widget "
"<https://github.com/jupyter-widgets/pythreejs>`_.  It allows for embedded "
"html documentation (as shown here), rapid plotting (as compared to the other"
" client jupyterlab plotting modules like ``panel`` or ``itkwidgets``)."
msgstr ""
"`ipygany <https://github.com/QuantStack/ipygany>`_ jupyterlabプロットバックエンドは， "
"`pythreejs widget <https://github.com/jupyter-widgets/pythreejs>`_ を介して "
"`threejs <https://threejs.org/>`_ を活用した純粋なプロッティングを可能にする強力なモジュールです．(ここに示すように)"
" HTMLドキュメントの埋め込み，( ``panel`` や ``itkwidgets`` "
"などの他のクライアントjupyterlabプロットモジュールと比較して) 高速プロッティングを可能にします．"

#: ../../pyvista/docs/jupyter/ipygany.rst:13
msgid ""
"There is an excellent block post at `ipygany: Jupyter into the third "
"dimension <https://blog.jupyter.org/ipygany-jupyter-into-the-third-"
"dimension-29a97597fc33>`_ and without repeating too much here, ``ipygany`` "
"includes the following features:"
msgstr ""
"`ipygany: Jupyter into the third dimension "
"<https://blog.jupyter.org/ipygany-jupyter-into-the-third-"
"dimension-29a97597fc33>`_ には優れたブロックポストがあり，ここではあまり繰り返しませんが， ``ipygany`` "
"には以下の特徴があります．"

#: ../../pyvista/docs/jupyter/ipygany.rst:17
msgid "IsoColor: apply color-mapping to your mesh."
msgstr "IsoColor:メッシュにカラーマッピングを適用します．"

#: ../../pyvista/docs/jupyter/ipygany.rst:18
msgid ""
"Warp: deform your mesh given a 3-D input data (e.g. displacement data on a "
"beam)"
msgstr "Warp: 3 D入力データを与えられたメッシュを変形します (例えばビームの変位データ)"

#: ../../pyvista/docs/jupyter/ipygany.rst:20
msgid ""
"WarpByScalar: deform your mesh given a 1-D input data (e.g. terrain "
"elevation)"
msgstr "WarpByScalar: 1 D入力データを使用してメッシュを変形します(例えば地形標高)"

#: ../../pyvista/docs/jupyter/ipygany.rst:22
msgid ""
"Threshold: only visualize mesh parts inside a range of data (e.g. 222 K≤ "
"temperature ≤ 240 K)"
msgstr "Threshold: 一定範囲のデータ内のメッシュパーツのみを表示します(例えば222 K≦温度≦240 K)"

#: ../../pyvista/docs/jupyter/ipygany.rst:24
msgid ""
"IsoSurface: only visualize the surface where the mesh respects a data value "
"(e.g. pressure == 3 bar)"
msgstr "IsoSurface: メッシュがデータ値を尊重するサーフェスのみを表示します(例えば pressure == 3 bar)"

#: ../../pyvista/docs/jupyter/ipygany.rst:26
msgid "Glyph effects like PointCloud"
msgstr "PointCloudのようなグリフ効果"

#: ../../pyvista/docs/jupyter/ipygany.rst:27
msgid "Water visualization"
msgstr "水の可視化"

#: ../../pyvista/docs/jupyter/ipygany.rst:31
msgid "PyVista Wrapping"
msgstr "PyVistaラッピング"

#: ../../pyvista/docs/jupyter/ipygany.rst:32
msgid ""
"There are two approaches for plotting using ipygany with ``pyvista``. First,"
" you can convert between pyvista meshes ``ipygany`` PolyMesh objects using "
"the ``from_pyvista`` method from ``ipygany`` to enable a variety of advanced"
" ``ipygany`` methods and follow their examples outlined in the `ipygany "
"Documentation <https://ipygany.readthedocs.io/en/latest/>`_, or you can "
"simply use an existing ``Plotter`` class and set "
"``jupyter_backend='ipygany'``."
msgstr ""
"``pyvista`` でipyganyを使用してプロットするには，2つの方法があります．1つは， ``ipygany`` の "
"``from_pyvista`` メソッドを使用してpyvistaメッシュ ``ipygany``  "
"PolyMeshオブジェクト間で変換することで，さまざまな高度な ``ipygany`` メソッドを有効にし， `ipygany "
"Documentation <https://ipygany.readthedocs.io/en/latest/>`_ "
"で説明されている例に従うことです．もう1つは，既存の ``Plotter`` クラスを使用して "
"``jupyter_backend='ipygany'`` を設定する方法です．"

#: ../../pyvista/docs/jupyter/ipygany.rst:40
msgid ""
"Perhaps best of all, the resulting widgets can be embedded within sphinx "
"documentation:"
msgstr "おそらく最も良いのは，作成されたウィジェットをsphinxドキュメントに埋め込むことができることです．"

#: ../../pyvista/docs/jupyter/ipygany.rst:56
msgid ""
"Note how the mesh color, background color, and camera position are all "
"mapped over to the ``ipygany`` scene, meaning that you can reuse existing "
"code and change the backend depending on the type of plotting backend you "
"wish to use."
msgstr ""
"メッシュカラー，バックグラウンドカラー，カメラ位置がすべてAAAAAシーンにマップされることに注意してください．つまり，既存のコードを再利用して，使用するプロットバックエンドのタイプに応じてバックエンドを変更できます．"

#: ../../pyvista/docs/jupyter/ipygany.rst:61
msgid ""
"Note that there are many missing features, including all vtk widgets, but "
"many of these can be replaced with jupyterlab widgets.  If you wish to "
"assemble your own scene, change the jupyter_backend while returning the "
"\"viewer\" with:"
msgstr ""
"すべてのvtkウィジェットを含む多くの機能が欠けていることに注意してください，しかし，これらの多くはjupyterlabウィジェットで置き換えることができます．独自のシーンをアセンブルする場合は，次のように"
" \"viewer\" を返しながらjupyter_backendを変更します．"

#: ../../pyvista/docs/jupyter/ipygany.rst:76
msgid ""
"This scene can then be added to any number of jupyterlab widgets and then "
"shown as a complete widget.  For example, you could even display two side by"
" side using ``ipywidgets.AppLayout``."
msgstr ""
"このシーンを任意の数のjupyterlabウィジェットに追加し，完全なウィジェットとして表示できます．例えば， "
"``ipywidgets.AppLayout`` を使用して2つを並べて表示することもできます．"

#: ../../pyvista/docs/jupyter/ipygany.rst:82
msgid "Examples: Large Models"
msgstr "例: 大規模モデル"

#: ../../pyvista/docs/jupyter/ipygany.rst:83
msgid ""
"This example shows a large mesh and demonstrates how even fairly large "
"meshes, like the carburetor example which contains 500,000 faces and 250,000"
" points, can be quickly loaded.  This is, of course, bandwidth dependent, as"
" this mesh is around 6 MB."
msgstr ""
"この例では，大きなメッシュを示し，500,000 万個の面と 250,000 "
"個の点を含むCarburetorの例など非常に大きなメッシュでもすばやくロードできることを示します．このメッシュは約6 "
"MBであるため，これは帯域幅に依存します．"

#: ../../pyvista/docs/jupyter/ipygany.rst:104
msgid "Returning Scenes"
msgstr "シーンを戻します"

#: ../../pyvista/docs/jupyter/ipygany.rst:105
msgid ""
"Show several widgets simultaneously using ``ipywidgets.TwoByTwoLayout``.  "
"This is similar to the :ref:`ref_parametric_example`, except with "
"interactive widgets."
msgstr ""
"``ipywidgets.TwoByTwoLayout`` を使っていくつかのウィジェットを同時に表示します．これは "
":ref:`ref_parametric_example` に似ていますが，インタラクティブウィジェットがあります．"

#: ../../pyvista/docs/jupyter/ipygany.rst:139
msgid "Scalar Bars"
msgstr "スカラーバー"

#: ../../pyvista/docs/jupyter/ipygany.rst:140
msgid ""
"Scalar bars are automatically shown when a plot has active scalars. For "
"example, the St. Helens ``mesh`` from ``active_scalar_name`` is "
"``'Elevation'``.  Scalar bars, scalar bar title, and the colormap dropdown "
"menu are automatically added to the scene."
msgstr ""
"スカラーバーは，プロットにアクティブなスカラーがある場合に自動的に表示されます．たとえば， ``active_scalar_name`` "
"のSt.Helens ``mesh`` は ``'Elevation'`` "
"です．スカラーバー，スカラーバータイトル，カラーマップドロップダウンメニューは自動的にシーンに追加されます．"

#: ../../pyvista/docs/jupyter/ipyvtk_plotting.rst:4
msgid "Using ``ipyvtklink`` with PyVista"
msgstr "PyVistaで ``ipyvtklink`` を使う"

#: ../../pyvista/docs/jupyter/ipyvtk_plotting.rst:7
msgid ""
"As of version ``0.1.4``, ``ipyvtklink`` does not support Jupyterlab 3.  "
"Attempting to run the following will return a ``Model not found`` error "
"within jupyterlab."
msgstr ""
"バージョン ``0.1.4`` の時点では， ``ipyvtklink`` はJupyterlab "
"3をサポートしていません．次のコマンドを実行しようとすると，jupyterlab内で ``Model not found`` エラーが返されます．"

#: ../../pyvista/docs/jupyter/ipyvtk_plotting.rst:11
msgid ""
"``pyvista`` has the ability to display fully featured plots within a "
"JupyterLab environment using ``ipyvtklink``.  This feature works by "
"streaming the current render window to a canvas within JupyterLab and then "
"passing any user actions from the canvas back to the VTK render window."
msgstr ""
"``pyvista`` には， ``ipyvtklink`` "
"を使用して，JupyterLab環境内にフル機能のプロットを表示する機能があります．この機能は，現在のレンダリングウィンドウをJupyterLab内のキャンバスにストリーミングし，キャンバスからのユーザアクションをすべてVTKレンダリングウィンドウに戻すことで機能します．"

#: ../../pyvista/docs/jupyter/ipyvtk_plotting.rst:17
msgid ""
"While this isn't an exciting feature when JupyterLab is being run locally, "
"this has huge implications when plotting remotely as you can display any "
"plot (except for those with multiple render windows) from JupyterLab."
msgstr ""
"JupyterLabがローカルで実行されている場合，これはエキサイティングな機能ではありませんが，JupyterLabから任意のプロット(複数のレンダーウィンドウがある場合を除く)を表示できるため，リモートでプロットする場合には大きな意味があります．"

#: ../../pyvista/docs/jupyter/ipyvtk_plotting.rst:22
msgid ""
"For example, both sections of code will display an interactive canvas within"
" JupyterLab:"
msgstr "たとえば，コードの両方のセクションは，JupyterLab内に対話型キャンバスを表示します．"

#: ../../pyvista/docs/jupyter/ipyvtk_plotting.rst:38
msgid "For convenience, you can enable ``use_ipyvtk`` by default with:"
msgstr "便宜上， ``use_ipyvtk`` をデフォルトで有効にするには，次のコマンドを使用します．"

#: ../../pyvista/docs/jupyter/ipyvtk_plotting.rst:47
#: ../../pyvista/docs/jupyter/itk_plotting.rst:27
msgid "Installation"
msgstr "インストール"

#: ../../pyvista/docs/jupyter/ipyvtk_plotting.rst:48
msgid ""
"If you're using an Anaconda environment, installation is the quite "
"straightforward:"
msgstr "Anaconda環境を使用している場合，インストールは非常に簡単です．"

#: ../../pyvista/docs/jupyter/ipyvtk_plotting.rst:56
msgid "Where environment.yml is:"
msgstr "ここで， environment.yml は次のとおりです．"

#: ../../pyvista/docs/jupyter/ipyvtk_plotting.rst:69
msgid "On Linux, you can setup your jupyterlab environment with:"
msgstr "Linuxでは，次のようにしてjupyterlab環境をセットアップすることができます．"

#: ../../pyvista/docs/jupyter/ipyvtk_plotting.rst:80
msgid "Other Considerations"
msgstr "その他の考慮事項"

#: ../../pyvista/docs/jupyter/ipyvtk_plotting.rst:81
msgid "It may be worth using GPU acceleration, see :ref:`gpu_off_screen`."
msgstr "GPUアクセラレーションを使用する価値があるかもしれません． :ref:`gpu_off_screen` を参照してください．"

#: ../../pyvista/docs/jupyter/ipyvtk_plotting.rst:83
msgid ""
"If you do not have GPU acceleration, be sure to start up a virtual "
"framebuffer using ``Xvfb``.  You can either start it using bash with:"
msgstr ""
"GPUアクセラレーションを使用していない場合は，必ず ``Xvfb`` "
"を使用して仮想フレームバッファを起動してください．bashを使用して起動するには，次のようにします．"

#: ../../pyvista/docs/jupyter/ipyvtk_plotting.rst:98
msgid ""
"Or alternatively, start it using the built in ``pyvista.start_xvfb()``.  "
"Please be sure to install ``xvfb`` and ``libgl1-mesa-glx`` with:"
msgstr ""
"または，組み込みの ``pyvista.start_xvfb()`` を使用して起動することもできます． ``xvfb`` と "
"``libgl1-mesa-glx`` は必ず次のようにインストールしてください．"

#: ../../pyvista/docs/jupyter/itk_plotting.rst:4
msgid "Using ``itkwidgets`` with PyVista"
msgstr "PyVistaで ``itkwidgets`` を使う"

#: ../../pyvista/docs/jupyter/itk_plotting.rst:8
msgid ""
"As of version ``0.32.0``, ``itkwidgets`` does not support Jupyterlab 3.  "
"Attempting to run the following will return a ``Model not found`` error "
"within jupyterlab."
msgstr ""
"バージョン ``0.32.0`` の時点では， ``ipyvtk-simple`` はJupyterlab "
"3をサポートしていません．次のコマンドを実行しようとすると，jupyterlab内で ``Model not found`` エラーが返されます．"

#: ../../pyvista/docs/jupyter/itk_plotting.rst:12
msgid ""
"Track the progress of this in `Issue 405 "
"<https://github.com/InsightSoftwareConsortium/itkwidgets/issues/405>`_."
msgstr ""
"`Issue 405 "
"<https://github.com/InsightSoftwareConsortium/itkwidgets/issues/405>`_ "
"でこの進捗を追跡します．"

#: ../../pyvista/docs/jupyter/itk_plotting.rst:14
msgid ""
"PyVista has an interface for visualizing plots in Jupyter.  The "
"``pyvista.PlotterITK`` class allows you interactively visualize a mesh "
"within a jupyter notebook.  For those who prefer plotting within jupyter, "
"this is an great way of visualizing using ``VTK`` and ``pyvista``."
msgstr ""
"PyVistaには，Jupyterでプロットを視覚化するためのインターフェースがあります． ``pyvista.PlotterITK`` "
"クラスを使用すると，jupyterノートブック内でメッシュをインタラクティブに視覚化できます．jupyter内でのプロットを好む人にとって，これは "
"``VTK`` と ``pyvista`` を使用して視覚化する優れた方法です．"

#: ../../pyvista/docs/jupyter/itk_plotting.rst:20
msgid "Special thanks to `@thewtex`_ for the `itkwidgets`_ library."
msgstr "`itkwidgets`_ ライブラリについては `@thewtex`_ に特に感謝します．"

#: ../../pyvista/docs/jupyter/itk_plotting.rst:28
msgid ""
"To use `PlotterITK` you'll need to install ``itkwidgets>=0.25.2``. Follow "
"the installation steps `here "
"<https://github.com/InsightSoftwareConsortium/itkwidgets#installation>`_."
msgstr ""
"`PlotterITK` を使用するには， ``itkwidgets>=0.25.2`` をインストールする必要があります． `ここ "
"<https://github.com/InsightSoftwareConsortium/itkwidgets#installation>`_ "
"のインストール手順に従ってください．"

#: ../../pyvista/docs/jupyter/itk_plotting.rst:31
msgid ""
"You can install everything with `pip` if you prefer not using conda, but be "
"sure your juptyerlab is up-to-date.  If you encounter problems, uninstall "
"and reinstall jupyterlab using pip."
msgstr ""
"もしあなたがcondaを使いたくないなら， `pip` "
"で全てをインストールできますが，juptyerlabが最新であることを確認してください．問題が発生した場合は，pipを使用してjupyterlabをアンインストールして再インストールします．"

#: ../../pyvista/docs/jupyter/itk_plotting.rst:37
msgid "Example Plotting with ITKwidgets"
msgstr "ITKwidgetsを使用したプロットの例"

#: ../../pyvista/docs/jupyter/itk_plotting.rst:38
msgid ""
"The following example shows how to create a simple plot that shows a simple "
"sphere."
msgstr "次の例は，単純な球を表示する単純なプロットを作成する方法を示しています．"

#: ../../pyvista/docs/jupyter/itk_plotting.rst:58
msgid "ITKwidgets with pyvista"
msgstr "pyvistaによるITKwidgets"

#: ../../pyvista/docs/jupyter/itk_plotting.rst:61
msgid ""
"For convenience, figures can also be plotted using the ``plot_itk`` "
"function:"
msgstr "便宜上， ``plot_itk`` 関数を使用して図をプロットすることもできます．"

#: ../../pyvista/docs/jupyter/itk_plotting.rst:76
msgid "Attributes"
msgstr "アトリビュート"

#: ../../pyvista/docs/jupyter/itk_plotting.rst:79:<autosummary>:1
msgid ":obj:`background_color <pyvista.PlotterITK.background_color>`\\"
msgstr ":obj:`background_color <pyvista.PlotterITK.background_color>`\\"

#: ../../pyvista/docs/jupyter/itk_plotting.rst:79:<autosummary>:1
#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.PlotterITK.background_color:1
msgid "Return the background color of the plotter."
msgstr "プロッタの背景色を取得します．"

#: ../../pyvista/docs/jupyter/itk_plotting.rst:79:<autosummary>:1
msgid ":obj:`camera_position <pyvista.PlotterITK.camera_position>`\\"
msgstr ":obj:`camera_position <pyvista.PlotterITK.camera_position>`\\"

#: ../../pyvista/docs/jupyter/itk_plotting.rst:79:<autosummary>:1
#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.PlotterITK.camera_position:1
msgid "Return camera position of the plotter as a list."
msgstr "プロッタのカメラ位置をリストとして取得します．"

#: ../../pyvista/docs/jupyter/itk_plotting.rst:81
msgid "Methods"
msgstr "メソッド"

#: ../../pyvista/docs/jupyter/itk_plotting.rst:84:<autosummary>:1
msgid ""
":obj:`add_mesh <pyvista.PlotterITK.add_mesh>`\\ \\(mesh\\[\\, color\\, "
"scalars\\, opacity\\, ...\\]\\)"
msgstr ""
":obj:`add_mesh <pyvista.PlotterITK.add_mesh>`\\ \\(mesh\\[\\, color\\, "
"scalars\\, opacity\\, ...\\]\\)"

#: ../../pyvista/docs/jupyter/itk_plotting.rst:84:<autosummary>:1
#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.add_mesh:1
msgid "Add a PyVista/VTK mesh or dataset."
msgstr "PyVista/VTKメッシュまたはデータセットを追加します．"

#: ../../pyvista/docs/jupyter/itk_plotting.rst:84:<autosummary>:1
msgid ""
":obj:`add_points <pyvista.PlotterITK.add_points>`\\ \\(points\\[\\, color\\,"
" point\\_size\\]\\)"
msgstr ""
":obj:`add_points <pyvista.PlotterITK.add_points>`\\ \\(points\\[\\, color\\,"
" point\\_size\\]\\)"

#: ../../pyvista/docs/jupyter/itk_plotting.rst:84:<autosummary>:1
#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.add_points:1
msgid "Add points to plotter."
msgstr "プロッタに点を追加します．"

#: ../../pyvista/docs/jupyter/itk_plotting.rst:84:<autosummary>:1
msgid ""
":obj:`show <pyvista.PlotterITK.show>`\\ \\(\\[ui\\_collapsed\\, rotate\\, "
"show\\_bounds\\]\\)"
msgstr ""
":obj:`show <pyvista.PlotterITK.show>`\\ \\(\\[ui\\_collapsed\\, rotate\\, "
"show\\_bounds\\]\\)"

#: ../../pyvista/docs/jupyter/itk_plotting.rst:84:<autosummary>:1
#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.show:1
msgid "Show itkwidgets plotter in cell output."
msgstr "セル出力にitkwidgetsプロッタを表示します．"

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK:1
msgid "Bases: :class:`object`"
msgstr "基底: :class:`object`"

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK:1
msgid "ITKwidgets plotter."
msgstr "ITKウィジェットプロッタ．"

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK:3
msgid ""
"Used for plotting interactively within a jupyter notebook. Requires "
"``itkwidgets>=0.25.2``.  For installation see:"
msgstr ""
"jupyterノートブック内でインタラクティブにプロットするために使用します． ``itkwidgets>=0.25.2`` "
"が必要です．インストールについては以下を参照してください．"

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK:6
msgid "https://github.com/InsightSoftwareConsortium/itkwidgets#installation"
msgstr "https://github.com/InsightSoftwareConsortium/itkwidgets#installation"

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.add_mesh:3
msgid "Adds any PyVista/VTK mesh that itkwidgets can wrap to the scene."
msgstr "itkwidgetsがシーンにラップできるPyVista/VTKメッシュを追加します．"

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.add_mesh:6
msgid ""
"Any PyVista or VTK mesh is supported. Also, any dataset that "
":func:`pyvista.wrap` can handle including NumPy arrays of XYZ points."
msgstr ""
"PyVistaまたはVTKメッシュはサポートされています．また， :func:`pyvista.wrap` "
"が扱うことができる任意のデータセットは，XYZ点のNumPy配列を含みます．"

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.add_mesh:10
msgid ""
"Use to make the entire mesh have a single solid color. Either a string, RGB "
"list, or hex color string.  For example: ``color='white'``, ``color='w'``, "
"``color=[1, 1, 1]``, or ``color='#FFFFFF'``. Color will be overridden if "
"scalars are specified."
msgstr ""
"メッシュ全体を単一のソリッドカラーにします．文字列，RGBリスト，または16進カラー文字列．例: ``color='white'`` ， "
"``color='w'`` ， ``color=[1, 1, 1]`` ， ``color='#FFFFFF'`` "
"．スカラーが指定されている場合，色は上書きされます．"

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.add_mesh:16
msgid ""
"Scalars used to \"color\" the mesh.  Accepts a string name of an array that "
"is present on the mesh or an array equal to the number of cells or the "
"number of points in the mesh.  Array should be sized as a single vector. If "
"both ``color`` and ``scalars`` are ``None``, then the active scalars are "
"used."
msgstr ""
"メッシュの \"色\" "
"に使用されるスカラー．メッシュ上に存在する配列の文字列名，またはメッシュ内のセル数またはポイント数と等しい配列を受け入れます．配列は単一のベクトルとしてサイズを設定する必要があります．"
" ``color`` と ``scalars`` が両方 ``None`` の場合，アクティブスカラーが使用されます．"

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.add_mesh:23
msgid ""
"Opacity of the mesh. If a single float value is given, it will be the global"
" opacity of the mesh and uniformly applied everywhere - should be between 0 "
"and 1.  Default 1.0"
msgstr ""
"メッシュの不透明度．単一のfloat値を指定した場合，それはメッシュのグローバル不透明度になり，すべての場所に均一に適用されます．0から1の間でなければなりません．既定1.0"

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.add_mesh:27
msgid ""
"Smooth mesh surface mesh by taking into account surface normals.  Surface "
"will appear smoother while sharp edges will still look sharp.  Default "
"False."
msgstr ""
"サーフェス法線を考慮してメッシュサーフェスメッシュをスムースにします．サーフェスはより滑らかに表示されますが，鋭いエッジはシャープに表示されます．デフォルトはFalseです．"

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.add_points:3
msgid "n x 3 numpy array of points or pyvista dataset with points."
msgstr "n x 3個のポイントの数の多い配列またはポイントを含むpyvistaデータセット．"

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.add_points:5
msgid ""
"Either a string, rgb list, or hex color string.  For example:  "
"``color='white'`` ``color='w'`` ``color=[1, 1, 1]`` ``color='#FFFFFF'``"
msgstr ""
"文字列，RGBリスト，または16進カラー文字列．例: ``color='white'`` ``color='w'`` ``color=[1, 1, "
"1]`` ``color='#FFFFFF'``"

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.add_points:5
msgid "Either a string, rgb list, or hex color string.  For example:"
msgstr "文字列，RGBリスト，または16進カラー文字列．例:"

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.add_points:7
msgid ""
"``color='white'`` ``color='w'`` ``color=[1, 1, 1]`` ``color='#FFFFFF'``"
msgstr ""
"``color='white'`` ``color='w'`` ``color=[1, 1, 1]`` ``color='#FFFFFF'``"

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.add_points:12
msgid ""
"Point size of any nodes in the dataset plotted. Also applicable when "
"style='points'. Default ``3.0``"
msgstr ""
"プロットされたデータセット内の任意のノードのポイントサイズ． style='points' の場合にも適用できます．デフォルト ``3.0``"

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.add_points:18
msgid "Add 10 random points to the plotter"
msgstr "プロッタに10個のランダム点を追加する"

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.show:3
msgid ""
"Plot with the user interface collapsed.  UI can be enabled when plotting.  "
"Default ``False``."
msgstr "ユーザインタフェースを集約してプロットします．プロット時にUIを有効にできます．デフォルトは ``False`` です．"

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.show:6
msgid ""
"Rotate the camera around the scene.  Default ``False``. Appears to be "
"computationally intensive."
msgstr "シーンを中心にカメラを回転します．デフォルトの ``False`` ．計算量が多いように見えます．"

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.show:9
msgid "Show the bounding box.  Default False"
msgstr "境界ボックスを表示します．デフォルトはFalse"

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.show:11
msgid "Size of the points displayed in the"
msgstr "以下に表示される点のサイズ"

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.show:0
msgid "Returns"
msgstr "戻り値"

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.show:14
msgid "**viewer** -- ``ITKwidgets`` viewer."
msgstr "**viewer** --``ITKwidgets`` ビューアー．"

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.show:0
msgid "Return type"
msgstr "戻り値の型"

#: ../../pyvista/docs/jupyter/panel.rst:4
msgid "Using ``Panel`` with PyVista"
msgstr "PyVistaで ``Panel`` を使う"

#: ../../pyvista/docs/jupyter/panel.rst:5
msgid ""
"PyVista supports the usage of the `panel "
"<https://github.com/holoviz/panel>`_ module as a ``vtk.js`` jupyterlab "
"plotting backend that can be utialized as either a standalone VTK viewer, or"
" as a tightly integrated ``pyvista`` plotting backend.  For example, within "
"a Jupyter notebook environment, you can pass ``jupyter_backend='panel'`` to "
"``plot``, or ``Plotter.show`` to automatically enable plotting with Juptyer "
"and ``panel``."
msgstr ""
"PyVistaでは， `panel <https://github.com/holoviz/panel>`_ モジュールを ``vtk.js`` "
"jupyterlabプロットバックエンドとして使用できます．このバックエンドは，スタンドアロンのVTKビューアまたは緊密に統合された "
"``pyvista`` プロットバックエンドとして使用できます．たとえば，Jupyterノートブック環境で "
"``jupyter_backend='panel'`` を ``plot`` または ``Plotter.show`` に渡すと，Juptyerと "
"``panel`` を使用したプロットが自動的に有効になります．"

#: ../../pyvista/docs/jupyter/panel.rst:13
msgid "For example, here's the ``PyVista`` logo:"
msgstr "例えば，以下は ``PyVista`` のロゴです．"

#: ../../pyvista/docs/jupyter/panel.rst:20
msgid ""
"Note that this isn't a perfect replica since there are some details lost in "
"the conversion to ``vtk.js``, but for the vast majority of cases, this can "
"be used to accurately render ``pyvista`` plots within Jupyterlab."
msgstr ""
"これは， ``vtk.js`` "
"への変換でいくつかの詳細が失われるので，完璧なレプリカではないことに注意してください．しかし，ほとんどの場合，これは，Jupyterlab内の "
"``pyvista`` プロットを正確にレンダリングするために使用できます．"

#: ../../pyvista/docs/jupyter/panel.rst:27
msgid "Examples and Usage"
msgstr "例と使用方法"

#: ../../pyvista/docs/jupyter/panel.rst:28
msgid ""
"There are two ways to use ``panel`` within Jupyter notebooks.  It can be "
"done on a plot by plot basis by setting the ``jupyter_backend`` in "
"``mesh.plot()``:"
msgstr ""
"Jupyterノートブックで ``panel`` を使用する方法は2つあります．これは， ``mesh.plot()`` で "
"``jupyter_backend`` を設定することにより，プロット単位で実行できます．"

#: ../../pyvista/docs/jupyter/panel.rst:48
msgid "Alternatively, you can set the backend globally:"
msgstr "または，バックエンドをグローバルに設定できます．"

#: ../../pyvista/docs/jupyter/panel.rst:82
msgid "Configuration Considerations"
msgstr "構成に関する考慮事項"

#: ../../pyvista/docs/jupyter/panel.rst:83
msgid ""
"If running on a headless environment (e.g. Google Colab, your own VM), be "
"sure to start up a virtual framebuffer using ``Xvfb``.  You can either start"
" it using bash with:"
msgstr ""
"ヘッドレス環境(例: Google Colab，独自のVM)で実行している場合， ``Xvfb`` "
"を使用して仮想フレームバッファを必ず起動してください．次のようにbashを使用して起動することもできます．"

#: ../../pyvista/docs/jupyter/panel.rst:99
msgid ""
"Or alternatively, start it using the built in ``pyvista.start_xvfb()``.  Be "
"sure to install ``xvfb`` and ``libgl1-mesa-glx`` with:"
msgstr ""
"または，組み込みの ``pyvista.start_xvfb()`` を使用して起動することもできます． ``xvfb`` と "
"``libgl1-mesa-glx`` は必ず次のようにインストールしてください．"

#: ../../pyvista/docs/jupyter/panel.rst:107
msgid "Or using the package manager used by your environment."
msgstr "または，ご使用の環境で使用されているパッケージマネージャを使用します．"

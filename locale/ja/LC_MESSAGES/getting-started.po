# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017-2023, The PyVista Developers
# This file is distributed under the same license as the PyVista package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Tetsuo Koyama <tkoyama010@gmail.com>, 2022
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyVista 0.38.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-06 01:50+0000\n"
"PO-Revision-Date: 2020-08-05 16:06+0000\n"
"Last-Translator: Tetsuo Koyama <tkoyama010@gmail.com>, 2022\n"
"Language-Team: Japanese (https://www.transifex.com/tkoyama010/teams/112279/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../pyvista/doc/getting-started/authors.rst:2
msgid "Authors & Citation"
msgstr "著者と引用"

#: ../../pyvista/doc/getting-started/authors.rst:4
msgid ""
"PyVista is an open-source project with a community of contributors. While "
"many of PyVista's contributors are listed in the :ref:`authors_ref` section,"
" please be sure to head over to the `Contributors Graph`_."
msgstr ""
"PyVistaは，コントリビュータのコミュニティを持つオープンソースプロジェクトです．PyVistaのコントリビュータの多くは "
":ref:`authors_ref` セクションにリストされていますが， `Contributors Graph`_ に必ず目を通してください．"

#: ../../pyvista/doc/getting-started/authors.rst:13
msgid ""
"PyVista stands on the shoulders of giants, namely the Visualization Toolkit "
"(VTK) and NumPy. We owe so many thanks to the companies and communities that"
" have worked diligently to build the software stack that makes PyVista "
"possible."
msgstr ""
"PyVistaは，Visualization "
"Toolkit（VTK）とNumPyという巨人の肩の上に立っています．PyVistaを可能にするソフトウェアスタックを構築するために熱心に働いてきた企業やコミュニティに，私たちは非常に多くの感謝を捧げています．"

#: ../../pyvista/CITATION.rst:4
#: ../../pyvista/doc/getting-started/index.rst:175
msgid "Citing PyVista"
msgstr "PyVistaを引用する"

#: ../../pyvista/CITATION.rst:6
#: ../../pyvista/doc/getting-started/index.rst:177
msgid ""
"There is a `paper about PyVista <https://doi.org/10.21105/joss.01450>`_!"
msgstr "`PyVistaに関する論文 <https://doi.org/10.21105/joss.01450>`_ があります!"

#: ../../pyvista/CITATION.rst:8
msgid ""
"If you are using PyVista in your scientific research, please help our "
"scientific visibility by citing our work!"
msgstr "あなたの科学研究にPyVistaを使っているなら，私たちの仕事を引用して，私たちの科学関連の可視化を助けてください!"

#: ../../pyvista/CITATION.rst:12
msgid ""
"Sullivan and Kaszynski, (2019). PyVista: 3D plotting and mesh analysis "
"through a streamlined interface for the Visualization Toolkit (VTK). Journal"
" of Open Source Software, 4(37), 1450, https://doi.org/10.21105/joss.01450"
msgstr ""
"Sullivan and Kaszynski, (2019). PyVista: 3D plotting and mesh analysis "
"through a streamlined interface for the Visualization Toolkit (VTK). Journal"
" of Open Source Software, 4(37), 1450, https://doi.org/10.21105/joss.01450"

#: ../../pyvista/CITATION.rst:15
msgid "BibTex:"
msgstr "BibTex:"

#: ../../pyvista/AUTHORS.rst:4
msgid "Authors"
msgstr "作者"

#: ../../pyvista/AUTHORS.rst:10
msgid ""
"The following is a list of authors who have made substantial contributions "
"to the conception or design of this software; or the creation of new code "
"used in this software; or have drafted the work or substantively revised it "
"and are considered \"The PyVista Developers\":"
msgstr ""
"以下は，このソフトウェアの概念または設計に多大な貢献をした;またはこのソフトウェアで使用される新しいコードを作成した;またはその著作物を起草し若しくは実質的に修正した者であって，"
"  \"PyVista開発者\" とみなされるもののリストです．"

#: ../../pyvista/AUTHORS.rst:15
msgid "Alex Kaszynski, (`@akaszynski <https://github.com/akaszynski/>`_)"
msgstr "Alex Kaszynski, (`@akaszynski <https://github.com/akaszynski/>`_)"

#: ../../pyvista/AUTHORS.rst:16
msgid "Bane Sullivan, (`@banesullivan <https://github.com/banesullivan/>`_)"
msgstr "Bane Sullivan, (`@banesullivan <https://github.com/banesullivan/>`_)"

#: ../../pyvista/AUTHORS.rst:17
msgid "Henrik Åhl, (`@supersubscript <https://github.com/supersubscript/>`_)"
msgstr "Henrik Åhl, (`@supersubscript <https://github.com/supersubscript/>`_)"

#: ../../pyvista/AUTHORS.rst:18
msgid ""
"Guillaume Favelier, (`@GuillaumeFavelier "
"<https://github.com/GuillaumeFavelier/>`_)"
msgstr ""
"Guillaume Favelier, (`@GuillaumeFavelier "
"<https://github.com/GuillaumeFavelier/>`_)"

#: ../../pyvista/AUTHORS.rst:19
msgid "Jevin Jones, (`@JevinJ <https://github.com/JevinJ/>`_)"
msgstr "Jevin Jones, (`@JevinJ <https://github.com/JevinJ/>`_)"

#: ../../pyvista/AUTHORS.rst:20
msgid "András Deák, (`@adeak <https://github.com/adeak>`_)"
msgstr "András Deák, (`@adeak <https://github.com/adeak>`_)"

#: ../../pyvista/AUTHORS.rst:21
msgid "Tetsuo Koyama, (`@tkoyama010 <https://github.com/tkoyama010>`_)"
msgstr "Tetsuo Koyama, (`@tkoyama010 <https://github.com/tkoyama010>`_)"

#: ../../pyvista/AUTHORS.rst:22
msgid ""
"Rodrigo Mologni, (`@rodrigomologni <https://github.com/rodrigomologni>`_)"
msgstr ""
"Rodrigo Mologni, (`@rodrigomologni <https://github.com/rodrigomologni>`_)"

#: ../../pyvista/AUTHORS.rst:23
msgid "Phil Chiu, (`@whophil <https://github.com/whophil>`_)"
msgstr "Phil Chiu, (`@whophil <https://github.com/whophil>`_)"

#: ../../pyvista/AUTHORS.rst:24
msgid "Thomas G., (`@thomgrand <https://github.com/thomgrand>`_)"
msgstr "Thomas G., (`@thomgrand <https://github.com/thomgrand>`_)"

#: ../../pyvista/AUTHORS.rst:25
msgid "Eric Larson, (`@larsoner <https://github.com/larsoner>`_)"
msgstr "Eric Larson, (`@larsoner <https://github.com/larsoner>`_)"

#: ../../pyvista/AUTHORS.rst:26
msgid "Matthew Flamm, (`@MatthewFlamm <https://github.com/MatthewFlamm>`_)"
msgstr "Matthew Flamm, (`@MatthewFlamm <https://github.com/MatthewFlamm>`_)"

#: ../../pyvista/AUTHORS.rst:27
msgid "Darik Gamble, (`@darikg <https://github.com/darikg>`_)"
msgstr "Darik Gamble, (`@darikg <https://github.com/darikg>`_)"

#: ../../pyvista/AUTHORS.rst:28
msgid "Bram De Cooman, (`@dcbr <https://github.com/dcbr>`_)"
msgstr "Bram De Cooman, (`@dcbr <https://github.com/dcbr>`_)"

#: ../../pyvista/doc/getting-started/authors.rst:27
msgid "License"
msgstr "ライセンス"

#: ../../pyvista/LICENSE:1
msgid "The MIT License"
msgstr "The MIT License"

#: ../../pyvista/LICENSE:3
msgid "Copyright (c) 2017-2023 The PyVista Developers"
msgstr ""

#: ../../pyvista/LICENSE:5
msgid ""
"Permission is hereby granted, free of charge, to any person obtaining a copy"
" of this software and associated documentation files (the \"Software\"), to "
"deal in the Software without restriction, including without limitation the "
"rights to use, copy, modify, merge, publish, distribute, sublicense, and/or "
"sell copies of the Software, and to permit persons to whom the Software is "
"furnished to do so, subject to the following conditions:"
msgstr ""
"本ソフトウェアおよび関連ドキュメントファイル( \"ソフトウェア\" "
")のコピーを入手したすべての人に対して，本ソフトウェアの使用，コピー，修正，マージ，公開，配布，サブライセンス，および/または販売する権利を含むがこれらに限定されない，本ソフトウェアを制限なく取り扱うこと，および本ソフトウェアの提供を受ける人がそれを行うことを許可することが，以下の条件に従って，無償で許可されます．"

#: ../../pyvista/LICENSE:12
msgid ""
"The above copyright notice and this permission notice shall be included in "
"all copies or substantial portions of the Software."
msgstr "上記の著作権表示およびこの許諾表示は，本ソフトウェアのすべてのコピーまたは重要部分に含まれるものとします．"

#: ../../pyvista/LICENSE:15
msgid ""
"THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"
" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, "
"FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE "
"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER "
"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING "
"FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS"
" IN THE SOFTWARE."
msgstr ""
"THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"
" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, "
"FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE "
"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER "
"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING "
"FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS"
" IN THE SOFTWARE."

#: ../../pyvista/doc/getting-started/connections.rst:2
msgid "Connections"
msgstr "接続"

#: ../../pyvista/doc/getting-started/connections.rst:4
msgid ""
"PyVista is a powerful tool that researchers can harness to create "
"compelling, integrated visualizations of large datasets in an intuitive, "
"Pythonic manner."
msgstr ""
"PyVistaは強力なツールであり，研究者はこれを利用して，大規模なデータセットを直感的かつPython的な方法で，説得力のある統合された可視化を作成することができます．"

#: ../../pyvista/doc/getting-started/connections.rst:7
msgid ""
"PyVista is used across science and engineering disciplines by a diverse "
"community to visualize data/models in 3D, generate publication-quality "
"illustrations, automate analysis workflows, and build custom applications "
"leveraging PyVista's 3D capabilities."
msgstr ""
"PyVistaは，科学や工学のさまざまな分野で，データやモデルを3Dで可視化し，出版品質の図版を生成し，解析ワークフローを自動化し，PyVistaの3D機能を活用したカスタムアプリケーションを構築するために，多様なコミュニティによって利用されています．"

#: ../../pyvista/doc/getting-started/connections.rst:12
msgid "Here are a few open-source projects that leverage PyVista:"
msgstr "PyVistaを活用したオープンソースプロジェクトをいくつか紹介します．"

#: ../../pyvista/doc/getting-started/connections.rst:16
msgid "Engineering"
msgstr "エンジニアリング"

#: ../../pyvista/doc/getting-started/connections.rst:18
msgid ""
"pyleecan_: Electrical engineering open-source software providing a user-"
"friendly, unified, flexible simulation framework for the multiphysic design "
"and optimization of electrical machines and drives."
msgstr ""
"pyleecan_: "
"電気機械や駆動装置の設計や最適化のための，ユーザーフレンドリーで統一された柔軟なシミュレーションフレームワークを提供する電気工学オープンソースソフトウェア．"

#: ../../pyvista/doc/getting-started/connections.rst:19
msgid "pymapdl_: Pythonic interface to Ansys MAPDL."
msgstr "pymapdl_: Ansys MAPDLへのPythonicインターフェース．"

#: ../../pyvista/doc/getting-started/connections.rst:20
#: ../../pyvista/doc/getting-started/connections.rst:51
msgid ""
"pyprocar_: A Python library for electronic structure pre/post-processing."
msgstr "pyprocar_: 電子構造の前処理・後処理のためのPythonライブラリです．"

#: ../../pyvista/doc/getting-started/connections.rst:21
msgid ""
"AeroSandbox_: Plug-and-play analysis tools for aerodynamics, propulsion, "
"structures, trajectory design, and much more."
msgstr "AeroSandbox_: 空気力学，推進力，構造，軌道設計などのためのプラグアンドプレイ解析ツール．"

#: ../../pyvista/doc/getting-started/connections.rst:22
msgid "Ptera_: Software for analyzing flapping-wing flight."
msgstr "Ptera_: 羽ばたき飛行を解析するためのソフトウェア．"

#: ../../pyvista/doc/getting-started/connections.rst:23
msgid ""
"PyViewFactor_: A tool for the numerical computation of radiation view "
"factors, with applications in building physics, thermal comfort and heat "
"transfer."
msgstr "PyViewFactor_: 建築物理学，熱的快適性，熱伝導に応用できる，放射ビューファクタを数値計算するためのツール．"

#: ../../pyvista/doc/getting-started/connections.rst:27
msgid "Geosciences"
msgstr "地球科学"

#: ../../pyvista/doc/getting-started/connections.rst:29
msgid ""
"GemPy_: 3D structural geological modeling software using PyVista for 3D "
"visualization and interaction."
msgstr "GemPy_: PyVistaを用いた3次元構造地質モデリングソフトウェアで，3次元の可視化とインタラクションが可能です．"

#: ../../pyvista/doc/getting-started/connections.rst:30
msgid "gemgis_: Spatial data processing for geomodeling."
msgstr "gemgis_: ジオモデリングのための空間データ処理．"

#: ../../pyvista/doc/getting-started/connections.rst:31
msgid "gimli_: Geophysical inversion and modeling library."
msgstr "gimli_: 地球物理学のインバージョンとモデリングのためのライブラリです．"

#: ../../pyvista/doc/getting-started/connections.rst:32
msgid ""
"discretize_: Discretization tools for finite volume and inverse problems."
msgstr "discretize_: 有限体積問題および逆問題のための離散化ツール．"

#: ../../pyvista/doc/getting-started/connections.rst:33
msgid "SEGY-SAK_: SEGY Swiss Army Knife for Seismic Data."
msgstr "SEGY-SAK_: SEGY Swiss Army Knife for Seismic Data."

#: ../../pyvista/doc/getting-started/connections.rst:34
msgid ""
"subsurface_: Core data exchange library for subsurface science and "
"engineering."
msgstr "subsurface_: 地下科学と工学のためのコアデータ交換ライブラリ．"

#: ../../pyvista/doc/getting-started/connections.rst:35
msgid "Flownet_: Data-Driven Reservoir Predictions."
msgstr "Flownet_: データ駆動型貯水池予測．"

#: ../../pyvista/doc/getting-started/connections.rst:36
msgid ""
"PVGeo_: Python package of VTK-based algorithms to analyze geoscientific data"
" and models. PyVista is used to make the inputs and outputs of PVGeo's "
"algorithms more accessible."
msgstr ""
"PVGeo_: "
"地球科学データとモデルを分析するためのVTKベースのアルゴリズムのPythonパッケージです．PyVistaは，PVGeoのアルゴリズムの入出力をよりアクセスしやすくするために使用されます．"

#: ../../pyvista/doc/getting-started/connections.rst:37
msgid ""
"omfvista_: 3D visualization for the Open Mining Format (omf). PyVista "
"provides the foundation for this library's visualization."
msgstr ""
"omfvista_: Open Mining Format (omf) の3 D可視化．PyVistaは，このライブラリーの可視化の基礎を提供します．"

#: ../../pyvista/doc/getting-started/connections.rst:41
msgid "Many More"
msgstr "その他"

#: ../../pyvista/doc/getting-started/connections.rst:43
msgid ""
"VesselVio_: Analysis and visualization of segmented vasculature datasets."
msgstr "VesselVio_: セグメント化された血管系データセットの解析と可視化．"

#: ../../pyvista/doc/getting-started/connections.rst:44
msgid ""
"pymeshfix_: Python/Cython wrapper of Marco Attene's wonderful, award-winning"
" MeshFix_ software."
msgstr ""
"pymeshfix_: 受賞歴のあるMarco Atteneの素晴らしい MeshFix_ ソフトウェアのPython/Cythonラッパーです．"

#: ../../pyvista/doc/getting-started/connections.rst:45
msgid "tetgen_: Python Interface to Hang Si's C++ TetGen Library."
msgstr "tetgen_: Hang SiのC++TetGenライブラリへのPythonインタフェース．"

#: ../../pyvista/doc/getting-started/connections.rst:46
msgid ""
"itkwidgets_: Interactive Jupyter widgets to visualize images, point sets, "
"and meshes in 2D and 3D. Supports all PyVista mesh types."
msgstr ""
"itkwidgets_: イメージ，点セット，メッシュを2 Dおよび3 "
"Dで可視化するインタラクティブなJupyterウィジェット．すべてのPyVistaメッシュタイプをサポートします．"

#: ../../pyvista/doc/getting-started/connections.rst:47
msgid ""
"mne-python_: MNE: Magnetoencephalography (MEG) and Electroencephalography "
"(EEG) in Python."
msgstr "mne-python_: MNE: 脳磁図(MEG)と脳波(EEG)をPythonで．"

#: ../../pyvista/doc/getting-started/connections.rst:48
msgid "pyntcloud_: Python library for working with 3D point clouds."
msgstr "pyntcloud_: 3 次元点群を扱うための Python ライブラリ．"

#: ../../pyvista/doc/getting-started/connections.rst:49
msgid "DiSECt_: Differentiable Cutting Simulator."
msgstr "DiSECt_: 微分可能な切断シミュレータ．"

#: ../../pyvista/doc/getting-started/connections.rst:50
msgid ""
"torch-points3d_: Pytorch framework for doing deep learning on point clouds."
msgstr "torch-points3d_: 点群に対して深層学習を行うための Pytorch フレームワーク．"

#: ../../pyvista/doc/getting-started/connections.rst:52
msgid "FEniCSx_: FEniCS Problem Solving Environment in Python and C++."
msgstr "FEniCSx_: FEniCS PythonとC++による問題解決環境．"

#: ../../pyvista/doc/getting-started/external_examples.rst:4
msgid "External Examples"
msgstr "外部の例"

#: ../../pyvista/doc/getting-started/external_examples.rst:6
msgid ""
"Here are a list of longer, more technical examples of what PyVista can do!"
msgstr "PyVistaができることの，より長い，より技術的な例のリストを以下に示します!"

#: ../../pyvista/doc/getting-started/external_examples.rst:10
msgid ""
"Please note that these examples link to external websites.  If any of these "
"links are broken, please raise an `issue "
"<https://github.com/pyvista/pyvista/issues>`_."
msgstr ""
"これらの例は外部のWebサイトにリンクしています．これらのリンクのいずれかが壊れている場合は， `issue "
"<https://github.com/pyvista/pyvista/issues>`_ を提起してください．"

#: ../../pyvista/doc/getting-started/external_examples.rst:15
msgid ""
"Do you have a technical processing workflow or visualization routine you "
"would like to share?  If so, please consider sharing your work here "
"submitting a PR at `pyvista/pyvista <https://github.com/pyvista/pyvista/>`_ "
"and we would be glad to add it!"
msgstr ""
"共有したいテクニカルプロセッシングワークフローまたはビジュアリゼーションルーチンがありますか?もしそうなら，あなたの作品をここでシェアして， "
"`pyvista/pyvista <https://github.com/pyvista/pyvista/>`_ "
"でPRを提出することを検討してください．喜んで追加します!"

#: ../../pyvista/doc/getting-started/external_examples.rst:194
msgid "<div class=\"sphx-glr-clear\"></div>"
msgstr "<div class=\"sphx-glr-clear\"></div>"

#: ../../pyvista/doc/getting-started/index.rst:2
msgid "Getting Started"
msgstr "はじめに"

#: ../../pyvista/doc/getting-started/index.rst:4
msgid ""
"This guide is here to help you start creating interactive 3D plots with "
"PyVista with the help of our examples and tutorials."
msgstr ""
"このガイドは，PyVistaを使ってインタラクティブな3Dプロットを作成する際に，サンプルやチュートリアルを参考にしながら始めるためのものです．"

#: ../../pyvista/doc/getting-started/index.rst:0
msgid "JupyterLab"
msgstr "JupyterLab"

#: ../../pyvista/doc/getting-started/index.rst:12
msgid ""
"Here's a quick demo of PyVista running within `JupyterLab "
"<https://jupyter.org/>`_."
msgstr "`JupyterLab <https://jupyter.org/>`_ 内で動作するPyVistaの簡単なデモを紹介します．"

#: ../../pyvista/doc/getting-started/index.rst:15
msgid ""
"<video width=\"100%\" height=\"auto\" controls autoplay muted> <source\n"
"  src=\"https://tutorial.pyvista.org/_static/pyvista_jupyterlab_demo.mp4\"\n"
"  type=\"video/mp4\" style=\"margin-left: -220px; margin-right: -10.5%\">\n"
"  Your browser does not support the video tag.  </video>"
msgstr ""
"<video width=\"100%\" height=\"auto\" controls autoplay muted><source\n"
"  src=\"https://tutorial.pyvista.org/_static/pyvista_jupyterlab_demo.mp4\"\n"
"  type=\"video/mp4\" style=\"margin-left: -220px; margin-right: -10.5%\">\n"
"ご利用のブラウザはビデオタグに対応していません． </video>"

#: ../../pyvista/doc/getting-started/index.rst:0
msgid "IPython"
msgstr "IPython"

#: ../../pyvista/doc/getting-started/index.rst:24
msgid ""
"Here's a quick demo of PyVista running within a terminal using `IPython "
"<https://ipython.org/>`_."
msgstr ""
"ここでは， `IPython <https://ipython.org/>`_ を使用してターミナル内でPyVistaを実行する簡単なデモを紹介します．"

#: ../../pyvista/doc/getting-started/index.rst:27
msgid ""
"<video width=\"100%\" height=\"auto\" controls autoplay muted> <source\n"
"  src=\"https://tutorial.pyvista.org/_static/pyvista_ipython_demo.mp4\"\n"
"  type=\"video/mp4\"> Your browser does not support the video tag.\n"
"  </video>"
msgstr ""
"<video width=\"100%\" height=\"auto\" controls autoplay muted><source\n"
"  src=\"https://tutorial.pyvista.org/_static/pyvista_ipython_demo.mp4\"\n"
"  type=\"video/mp4\">\n"
"ご利用のブラウザはビデオタグに対応していません． </video>"

#: ../../pyvista/doc/getting-started/index.rst:46
#: ../../pyvista/doc/getting-started/installation.rst:4
msgid "Installation"
msgstr "インストール"

#: ../../pyvista/doc/getting-started/index.rst:47
msgid ""
"The only prerequisite for installing PyVista is Python itself. If you don’t "
"have Python yet and want the simplest way to get started, we recommend you "
"use the `Anaconda Distribution <https://www.anaconda.com/>`_."
msgstr ""
"PyVistaをインストールするための唯一の前提条件は，Pythonそのものです．Pythonをまだ持っておらず，最も簡単な方法で始めたい場合は， "
"`Anaconda Distribution <https://www.anaconda.com/>`_ を利用することをお勧めします．"

#: ../../pyvista/doc/getting-started/index.rst:56
msgid ""
"PyVista is available on `conda-forge <https://anaconda.org/conda-"
"forge/pyvista>`_."
msgstr ""
"PyVistaは `conda-forge <https://anaconda.org/conda-forge/pyvista>`_ で利用できます．"

#: ../../pyvista/doc/getting-started/index.rst:68
msgid ""
"PyVista can be installed via pip from `PyPI "
"<https://pypi.org/project/pyvista>`__."
msgstr ""
"PyVistaは `PyPI <https://pypi.org/project/pyvista>`__ から pip を使ってインストールできます::"

#: ../../pyvista/doc/getting-started/index.rst:83
msgid ""
"Installing a specific version? Installing from source? Check the "
":ref:`install_ref` page."
msgstr "特定のバージョンをインストールしますか？ソースからインストールしますか？ :ref:`install_ref` ページを確認してください．"

#: ../../pyvista/doc/getting-started/index.rst:88
msgid "First Steps"
msgstr "はじめの一歩"

#: ../../pyvista/doc/getting-started/index.rst:89
msgid ""
"We've provided a variety of resources for you to get used to PyVista's API "
"through a range of examples and tutorials."
msgstr "PyVistaのAPIを使いこなすために，さまざまなサンプルやチュートリアルを用意しています．"

#: ../../pyvista/doc/getting-started/index.rst:99
msgid ""
"Probably the best way for you to get used to PyVista is to visit our "
"dedicated `tutorial <https://tutorial.pyvista.org/tutorial.html>`_."
msgstr ""
"PyVistaに慣れるには，専用の `チュートリアル <https://tutorial.pyvista.org/tutorial.html>`_ "
"をご覧になるのが一番でしょう．"

#: ../../pyvista/doc/getting-started/index.rst:121
msgid ""
"Learn more about why we created PyVista as an interface to the Visualization"
" Toolkit (VTK)."
msgstr "Visualization Toolkit (VTK) へのインターフェースとしてPyVistaを作成した理由について学んでください．"

#: ../../pyvista/doc/getting-started/index.rst:144
msgid ""
"Using PyVista in your research? Please consider citing or acknowledging us."
"  We have a `JOSS Publication`_!"
msgstr ""
"PyVistaを研究に使用していますか?  私たちを引用または認知することをご検討ください． `JOSS Publication`_ があります!"

#: ../../pyvista/doc/getting-started/index.rst:157
msgid "Take a look at third party projects using PyVista."
msgstr "PyVistaを使用したサードパーティのプロジェクトを見る．"

#: ../../pyvista/doc/getting-started/index.rst:161
msgid "Support"
msgstr "サポート"

#: ../../pyvista/doc/getting-started/index.rst:163
msgid ""
"For general questions about the project, its applications, or about software"
" usage, please create a discussion in `pyvista/discussions`_ where the "
"community can collectively address your questions. You are also welcome to "
"join us on Slack_ or send one of the developers an email. The project "
"support team can be reached at `info@pyvista.org`_."
msgstr ""
"プロジェクト，そのアプリケーション，またはソフトウェアの使用に関する一般的な質問については，コミュニティが共同であなたの質問に対処できる "
"`pyvista/discussions`_ "
"にdiscussionを作成してください．Slackに参加したり，開発者にメールを送ったりすることもできます．プロジェクト・サポート・チームは "
"`info@pyvista.org`_ で連絡できます．"

#: ../../pyvista/doc/getting-started/index.rst:179
msgid ""
"If you are using PyVista in your scientific research, please help our "
"scientific visibility by citing our work! Head over to :ref:`citation_ref` "
"to learn more about citing PyVista."
msgstr ""
"あなたの科学研究にPyVistaを使っているなら，私たちの仕事を引用して，私たちの科学関連の可視化を助けてください!PyVistaを引用することの詳細については，"
" :ref:`citation_ref` をご覧ください．"

#: ../../pyvista/doc/getting-started/installation.rst:6
msgid ""
"PyVista is supported on Python versions 3.7+. Previous versions of Python "
"are no longer supported as outlined in `this issue`_."
msgstr ""
"PyVistaはPythonバージョン3.7以降でサポートされています．以前のバージョンのPythonは， `this issue`_ "
"で説明したようにサポートされなくなりました．"

#: ../../pyvista/doc/getting-started/installation.rst:11
msgid ""
"For the best experience, please considering using Anaconda as a virtual "
"environment and package manager for Python and following the instructions to"
" install PyVista with Anaconda."
msgstr ""
"最高の経験を得るには，AnacondaをPython用の仮想環境およびパッケージマネージャとして使用し，Anacondaを使用してPyVistaをインストールする手順に従ってください．"

#: ../../pyvista/doc/getting-started/installation.rst:17
msgid "Dependencies"
msgstr "依存関係"

#: ../../pyvista/doc/getting-started/installation.rst:19
msgid ""
"PyVista is built on top of the Visualization Toolkit (VTK) and NumPy - as "
"such, the following projects are required dependencies of PyVista:"
msgstr ""
"PyVistaはVisualization Toolkit (VTK) とNumPyの上に構築されています-"
"以下のプロジェクトはPyVistaに必要な依存関係です:"

#: ../../pyvista/doc/getting-started/installation.rst:22
msgid ""
"`vtk <https://pypi.org/project/vtk/>`_ - PyVista directly inherits types "
"from the VTK library."
msgstr "`vtk <https://pypi.org/project/vtk/>`_ - PyVistaはVTKライブラリから型を直接継承します．"

#: ../../pyvista/doc/getting-started/installation.rst:23
msgid ""
"`NumPy <https://pypi.org/project/numpy/>`_ - NumPy arrays provide a core "
"foundation for PyVista's data array access."
msgstr ""
"`NumPy <https://pypi.org/project/numpy/>`_ - "
"NumPy配列は，PyVistaのデータ配列アクセスのためのコア基盤を提供します．"

#: ../../pyvista/doc/getting-started/installation.rst:24
msgid ""
"`pillow <https://pypi.org/project/Pillow/>`_ - PIL fork used for saving "
"screenshots."
msgstr ""
"`pillow <https://pypi.org/project/Pillow/>`_ - スクリーンショットの保存に使用する PIL フォークです．"

#: ../../pyvista/doc/getting-started/installation.rst:25
msgid ""
"`imageio <https://pypi.org/project/imageio/>`_ - This library is used for "
"reading images and writing animations."
msgstr ""
"`imageio <https://pypi.org/project/imageio/>`_ - "
"画像の読み込みとアニメーションの書き込みに使用されるライブラリです．"

#: ../../pyvista/doc/getting-started/installation.rst:26
msgid ""
"`pooch <https://pypi.org/project/pooch/>`_ - Data management for our example"
" datasets so users can download tutorials on the fly."
msgstr ""
"`pooch <https://pypi.org/project/pooch/>`_ - "
"サンプルデータセットのデータ管理により，ユーザはチュートリアルをその場でダウンロードできます．"

#: ../../pyvista/doc/getting-started/installation.rst:27
msgid ""
"`scooby <https://github.com/banesullivan/scooby>`_ - Reporting and debugging"
" tools."
msgstr ""
"`scooby <https://github.com/banesullivan/scooby>`_ - レポート作成およびデバッグ用ツール．"

#: ../../pyvista/doc/getting-started/installation.rst:28
msgid ""
"`typing-extensions <https://pypi.org/project/typing-extensions/>`_ - only "
"required on Python 3.7."
msgstr ""
"`typing-extensions <https://pypi.org/project/typing-extensions/>`_ - Python "
"3.7でのみ必要です．"

#: ../../pyvista/doc/getting-started/installation.rst:32
#: ../../pyvista/doc/getting-started/installation.rst:97
msgid "Optional Dependencies"
msgstr "オプションの依存関係"

#: ../../pyvista/doc/getting-started/installation.rst:33
msgid ""
"PyVista includes several optional dependencies for visualization and reading"
" a variety of additional file formats, including:"
msgstr "PyVistaには，以下のようなさまざまな追加ファイル形式を可視化し，読み取るためのオプションの依存関係がいくつか含まれています．"

#: ../../pyvista/doc/getting-started/installation.rst:35
msgid ""
"`cmocean <https://pypi.org/project/cmocean/>`_ - Colormaps for Oceanography."
msgstr "`cmocean <https://pypi.org/project/cmocean/>`_ - 海洋学のためのカラーマップ．"

#: ../../pyvista/doc/getting-started/installation.rst:36
msgid ""
"`colorcet <https://colorcet.holoviz.org/>`_ - Perceptually accurate "
"256-color colormaps for use with Python."
msgstr ""
"`colorcet <https://colorcet.holoviz.org/>`_ - Python で使用するための，知覚的に正確な 256 "
"色のカラーマップです．"

#: ../../pyvista/doc/getting-started/installation.rst:37
msgid ""
"`ipyvtklink <https://github.com/Kitware/ipyvtklink>`_ - Minimalist ipywidget"
" to interface with any Python vtkRenderWindow."
msgstr ""
"`ipyvtklink <https://github.com/Kitware/ipyvtklink>`_ - Python の "
"vtkRenderWindow と連携する最小限の ipywidget です．"

#: ../../pyvista/doc/getting-started/installation.rst:38
msgid ""
"`matplotlib <https://pypi.org/project/matplotlib/>`_ - Used for colormaps "
"and 2D plotting with :class:`pyvista.ChartMPL`."
msgstr ""
"`matplotlib <https://pypi.org/project/matplotlib/>`_ - "
":class:`pyvista.ChartMPL` によるカラーマップと2Dプロットに使用されます．"

#: ../../pyvista/doc/getting-started/installation.rst:39
msgid ""
"`meshio <https://pypi.org/project/meshio/>`_ - Input/Output for many mesh "
"formats."
msgstr "`meshio <https://pypi.org/project/meshio/>`_ - 多くのメッシュ形式の入力/出力．"

#: ../../pyvista/doc/getting-started/installation.rst:40
msgid ""
"`pythreejs <https://pythreejs.readthedocs.io/en/stable/>`_ - Jupyter widgets"
" based notebook extension that allows Jupyter to leverage the WebGL "
"capabilities of modern browsers."
msgstr ""
"`pythreejs <https://pythreejs.readthedocs.io/en/stable/>`_ - Jupyter "
"ウィジェットベースのノートブック拡張で，Jupyter がモダンブラウザの WebGL 機能を利用できるようにします．"

#: ../../pyvista/doc/getting-started/installation.rst:44
msgid "PyPI"
msgstr "PyPI"

#: ../../pyvista/doc/getting-started/installation.rst:49
msgid ""
"PyVista can be installed from `PyPI <https://pypi.org/project/pyvista/>`_ "
"using ``pip``::"
msgstr ""
"PyVistaは `PyPI <https://pypi.org/project/pyvista/>`_ から ``pip`` "
"を使ってインストールできます::"

#: ../../pyvista/doc/getting-started/installation.rst:54
msgid ""
"To install all the additional packages that extend PyVista, install using "
"``pip`` with::"
msgstr "PyVistaを拡張するすべての追加パッケージをインストールするには，次のように ``pip`` を使ってインストールします．"

#: ../../pyvista/doc/getting-started/installation.rst:62
msgid "Anaconda"
msgstr "Anaconda"

#: ../../pyvista/doc/getting-started/installation.rst:67
msgid "To install this package with ``conda`` run::"
msgstr "``conda`` を使ってこのパッケージをインストールするには::"

#: ../../pyvista/doc/getting-started/installation.rst:75
msgid "Installing the Current Development Branch from GitHub"
msgstr "GitHubから現在の開発ブランチをインストールする"

#: ../../pyvista/doc/getting-started/installation.rst:76
msgid ""
"There may be features or bug-fixes that have been implemented in PyVista but"
" have not made their way into a release.  To install ``pyvista`` from the "
"latest up-to-date development branch from github, use one of the following"
msgstr ""
"PyVistaに実装されているが，まだリリースされていない機能やバグ修正があるかもしれません．githubの最新の開発ブランチから "
"``pyvista`` をインストールするには，以下のいずれかを使用します．"

#: ../../pyvista/doc/getting-started/installation.rst:84
msgid ""
"Alternatively, you can clone the repository with git and install it with "
"pip."
msgstr "あるいは，gitを使ってリポジトリーのクローンを作成し，pipを使ってインストールすることもできます．"

#: ../../pyvista/doc/getting-started/installation.rst:92
msgid ""
"Note the development flag ``-e``.  This allows you to change pyvista in-"
"place without having to reinstall it for each change."
msgstr ""
"開発フラグ ``-e`` に注意してください． これにより，pyvistaを変更するたびに再インストールすることなく，その場で変更することができます．"

#: ../../pyvista/doc/getting-started/installation.rst:99
msgid "The following are a list of optional dependencies and their purpose:"
msgstr "次に，オプションの依存関係とその目的の一覧を示します:"

#: ../../pyvista/doc/getting-started/installation.rst:102
msgid "Package"
msgstr "パッケージ"

#: ../../pyvista/doc/getting-started/installation.rst:102
msgid "Purpose"
msgstr "目的"

#: ../../pyvista/doc/getting-started/installation.rst:104
msgid "``matplotlib``"
msgstr "``matplotlib``"

#: ../../pyvista/doc/getting-started/installation.rst:104
msgid "Using Colormaps"
msgstr "カラーマップの使用"

#: ../../pyvista/doc/getting-started/installation.rst:106
msgid "``ipyvtklink``"
msgstr "``ipyvtklink``"

#: ../../pyvista/doc/getting-started/installation.rst:106
msgid "Interactive notebook rendering"
msgstr "インタラクティブなノートブックレンダリング"

#: ../../pyvista/doc/getting-started/installation.rst:108
msgid "``sphinx_gallery``"
msgstr "``sphinx_gallery``"

#: ../../pyvista/doc/getting-started/installation.rst:108
msgid "Capturing PyVista output for docs"
msgstr "ドキュメントのPyVista出力のキャプチャ"

#: ../../pyvista/doc/getting-started/installation.rst:110
msgid "``colorcet``"
msgstr "``colorcet``"

#: ../../pyvista/doc/getting-started/installation.rst:110
msgid "Perceptually uniform colormaps"
msgstr "知覚的に均一なカラーマップ"

#: ../../pyvista/doc/getting-started/installation.rst:112
msgid "``cmocean``"
msgstr "``cmocean``"

#: ../../pyvista/doc/getting-started/installation.rst:112
msgid "Oceanographic colormaps"
msgstr "海洋学的カラーマップ"

#: ../../pyvista/doc/getting-started/installation.rst:114
msgid "``imageio-ffmpeg``"
msgstr "``imageio-ffmpeg``"

#: ../../pyvista/doc/getting-started/installation.rst:114
msgid "Saving movie files"
msgstr "ムービーファイルの保存"

#: ../../pyvista/doc/getting-started/installation.rst:116
msgid "``tqdm``"
msgstr "``tqdm``"

#: ../../pyvista/doc/getting-started/installation.rst:116
msgid "Status bars for monitoring filters"
msgstr "フィルタを監視するためのステータスバー"

#: ../../pyvista/doc/getting-started/installation.rst:118
msgid "``trimesh`` ``rtree`` ``pyembree``"
msgstr "``trimesh`` ``rtree`` ``pyembree``"

#: ../../pyvista/doc/getting-started/installation.rst:119
msgid "Vectorised ray tracing"
msgstr "ベクトルレイトレーシング"

#: ../../pyvista/doc/getting-started/installation.rst:125
msgid "Source / Developers"
msgstr "ソース/開発者"

#: ../../pyvista/doc/getting-started/installation.rst:127
msgid ""
"Alternatively, you can install the latest version from GitHub by visiting "
"`PyVista <https://github.com/pyvista/pyvista>`_, and downloading the source "
"(cloning) by running::"
msgstr ""
"あるいは，GitHubから `PyVista <https://github.com/pyvista/pyvista>`_ "
"にアクセスして以下のコマンドを実行し，ソースをダウンロード (クローニング) して最新バージョンをインストールすることもできます:"

#: ../../pyvista/doc/getting-started/installation.rst:136
msgid ""
"The latest documentation for the ``main`` branch of PyVista can be found at "
"`dev.pyvista.org <https://dev.pyvista.org>`_."
msgstr ""
"PyVistaの ``main`` ブランチの最新のドキュメントは `dev.pyvista.org "
"<https://dev.pyvista.org>`_ にあります．"

#: ../../pyvista/doc/getting-started/installation.rst:141
msgid "Test Installation"
msgstr "インストールのテスト"

#: ../../pyvista/doc/getting-started/installation.rst:143
msgid "You can test your installation by running an example:"
msgstr "次の例を実行して，インストールをテストできます:"

#: ../../pyvista/doc/getting-started/installation.rst:150
msgid "See other examples and demos:"
msgstr "その他の例とデモを参照してください:"

#: ../../pyvista/doc/getting-started/installation.rst:166
msgid ""
"A more comprehensive testing suite is available after cloning the source "
"repository. For details on how to clone and test the PyVista source, please "
"see our `Contributing Guide`_ and specifically, the `Testing`_ section."
msgstr ""
"ソースリポジトリーのクローンを作成すると，より包括的なテストスイートを使用できるようになります．PyVistaソースをクローンしてテストする方法の詳細については，我々の"
" `Contributing Guide`_  ，特に `Testing`_ のセクションをご覧ください．"

#: ../../pyvista/doc/getting-started/installation.rst:175
msgid "Running on CI Services"
msgstr "CIサービスでの実行"

#: ../../pyvista/doc/getting-started/installation.rst:176
msgid ""
"Please head over to `pyvista/setup-headless-display-action`_ for details on "
"setting up a headless display in GitHub Actions Workflows using PyVista."
msgstr ""
"PyVistaを使ったGitHub Actions Workflowsでヘッドレス表示を設定する方法は `pyvista/setup-headless-"
"display-action`_ をご覧ください．"

#: ../../pyvista/doc/getting-started/installation.rst:179
msgid ""
"In the past, we have also supported `pyvista/gl-ci-helpers`_ for setting up "
"CI services like Travis and Azure Pipelines to run PyVista."
msgstr ""
"過去には，TravisやAzure PipelinesなどのCIサービスを設定してPyVistaを実行するための `pyvista/gl-ci "
"helpers`_ もサポートされていました．"

#: ../../pyvista/doc/getting-started/installation.rst:187
msgid "Running on MyBinder"
msgstr "MyBinderでの実行"

#: ../../pyvista/doc/getting-started/installation.rst:188
msgid ""
"This section is for advanced users that would like to install and use "
"PyVista with headless displays on notebook hosting services like MyBinder_."
msgstr ""
"このセクションは， MyBinder_ "
"のようなノートブックホスティングサービスで，ヘッドレスディスプレイでPyVistaをインストールして使いたい上級ユーザ向けです．"

#: ../../pyvista/doc/getting-started/installation.rst:191
msgid ""
"Please see `this project`_ for a convenient Cookiecutter_ to get started "
"using PyVista on the notebook hosting service MyBinder_."
msgstr ""
"ノートPCホスティングサービス MyBinder_ でPyVistaを使い始めるのに便利な Cookiecutter_ については `this "
"project`_ を見てください．"

#: ../../pyvista/doc/getting-started/installation.rst:198
msgid ""
"To get started, the Docker container will need to have ``libgl1-mesa-dev`` "
"and ``xvfb`` installed through ``apt-get``. For MyBinder, include the "
"following in a file called ``apt.txt``::"
msgstr ""
"まず，Dockerコンテナに ``apt-get`` を使って ``libgl1-mesa-dev`` と ``xvfb`` "
"をインストールする必要がある．MyBinderの場合は， ``apt.txt`` というファイルに以下を含めてください::"

#: ../../pyvista/doc/getting-started/installation.rst:205
msgid ""
"Then, you need to configure the headless display, for MyBinder, create a "
"file called ``start`` and include the following set up script that will run "
"every time your Docker container is launched:"
msgstr ""
"次に，MyBinderでヘッドレスディスプレイを設定し， ``start`` "
"というファイルを作成し，Dockerコンテナが起動されるたびに実行される以下の設定スクリプトを含める必要があります．"

#: ../../pyvista/doc/getting-started/installation.rst:223
msgid ""
"And that's it! Include PyVista in your Python requirements and get to "
"visualizing your data! If you need more help than this on setting up PyVista"
" for these types of services, hop on Slack and chat with the developers or "
"take a look at `this repository`_ that is currently using PyVista on "
"MyBinder."
msgstr ""
"以上です!Python要件にPyVistaを組み込んで，データを可視化しましょう．これらのタイプのサービスのためにPyVistaをセットアップするのにこれ以上の助けが必要なら，Slackで開発者とチャットするか，MyBinderで現在PyVistaを使っている"
" `this repository`_ を見てください．"

#: ../../pyvista/doc/getting-started/installation.rst:231
msgid "Running on Remote Servers"
msgstr "リモートサーバーでの実行"

#: ../../pyvista/doc/getting-started/installation.rst:232
msgid ""
"Using PyVista on remote servers requires similar setup steps as in the above"
" Docker case. As an example, here are the complete steps to use PyVista on "
"AWS EC2 Ubuntu 18.04 LTS (``ami-0a313d6098716f372`` in ``us-east-1``). Other"
" servers would work similarly."
msgstr ""
"リモートサーバでPyVistaを使うには，上記のDockerの場合と同様のセットアップ手順が必要です．例として，AWS EC 2 Ubuntu "
"18.04 LTS ( ``us-east-1`` の  ``ami-0a313d6098716f372`` "
")でPyVistaを使うための完全なステップを以下に示します．他のサーバも同様に動作します．"

#: ../../pyvista/doc/getting-started/installation.rst:237
msgid ""
"After logging into the remote server, install Miniconda and related "
"packages:"
msgstr "リモートサーバにログインしたら，Minicondaと関連するパッケージをインストールします:"

#: ../../pyvista/doc/getting-started/installation.rst:254
msgid "Then, configure the headless display:"
msgstr "次に，ヘッドレスディスプレイを設定します:"

#: ../../pyvista/doc/getting-started/installation.rst:265
msgid "Reconnect to the server with port-forwarding, and start Jupyter:"
msgstr "ポート転送を使用してサーバーに再接続し，Jupyterを起動します:"

#: ../../pyvista/doc/getting-started/installation.rst:273
#: ../../pyvista/doc/getting-started/installation.rst:322
#: ../../pyvista/doc/getting-started/installation.rst:350
msgid "Visit ``localhost:8888`` in the web browser."
msgstr "Webブラウザで ``localhost:8888`` にアクセスします．"

#: ../../pyvista/doc/getting-started/installation.rst:276
msgid "Running on WSL"
msgstr "WSLでの動作"

#: ../../pyvista/doc/getting-started/installation.rst:277
msgid ""
"Similar to the example of the remote server above, the windows subsystem for"
" Linux does not provide an x-server for visualization. Instead, the fastest "
"way to get up and running on WSL is through `JupyterLab "
"<https://jupyter.org/>`_."
msgstr ""
"上記のリモートサーバの例と同様に，LinuxのWindowsサブシステムは可視化のためのXサーバを提供しません．その代わりに，WSLを立ち上げる最も早い方法は，"
" `JupyterLab <https://jupyter.org/>`_ を利用することです．"

#: ../../pyvista/doc/getting-started/installation.rst:281
msgid ""
"First, make sure you have installed the correct environment through "
"Miniconda and related packages:"
msgstr "まず，Minicondaと関連パッケージによって，正しい環境がインストールされていることを確認します．"

#: ../../pyvista/doc/getting-started/installation.rst:300
msgid "VTK Link to Jupyter"
msgstr "JupyterへのVTKリンク"

#: ../../pyvista/doc/getting-started/installation.rst:301
msgid ""
"There are two ways to get vtk rendering 3D objects in JupyterLab. First you "
"can follow the example above for remote servers, skipping over the ``ssh`` "
"instructions."
msgstr ""
"JupyterLabでvtkレンダリングの3Dオブジェクトを取得する方法は2つあります．まず，上記のリモートサーバ用の例に従って， ``ssh`` "
"の説明を省くことができます．"

#: ../../pyvista/doc/getting-started/installation.rst:305
msgid "Configure the headless display:"
msgstr "ヘッドレスディスプレイを設定します:"

#: ../../pyvista/doc/getting-started/installation.rst:316
msgid "Start Jupyter:"
msgstr "Jupyterを起動します:"

#: ../../pyvista/doc/getting-started/installation.rst:324
msgid ""
"Finally add this example code and your interactive visualizations should be "
"displayed in JupyterLab."
msgstr "最後にこのサンプルコードを追加すると，JupyterLabでインタラクティブな可視化が表示されるはずです．"

#: ../../pyvista/doc/getting-started/installation.rst:337
#: ../../pyvista/doc/getting-started/installation.rst:365
msgid ""
"Your visualizations should now be showing directly in the Jupyter frontend."
msgstr "これでJupyterフロントエンドに直接ビジュアライゼーションが表示されるようになったはずです．"

#: ../../pyvista/doc/getting-started/installation.rst:340
msgid "PyThreeJS Rendering in Jupyter"
msgstr "JupyterでのPyThreeJSレンダリング"

#: ../../pyvista/doc/getting-started/installation.rst:341
msgid ""
"The second option is to change the ``PyVista`` backend to use ``pythreejs``."
msgstr "2つ目のオプションは，``PyVista`` のバックエンドを ``pythreejs`` に変更することです．"

#: ../../pyvista/doc/getting-started/installation.rst:344
msgid "To do this, first launch the Jupyter server:"
msgstr "そのために，まずJupyterサーバーを立ち上げます:"

#: ../../pyvista/doc/getting-started/installation.rst:352
msgid ""
"Finally change the PyVista backend to a web visualization library: "
"``pythreejs``."
msgstr "最後にPyVistaのバックエンドをWeb可視化ライブラリに変更します: ``pythreejs`` ．"

#: ../../pyvista/doc/getting-started/installation.rst:368
msgid "Running with Sphinx-Gallery"
msgstr "Sphinx-Galleryでの実行"

#: ../../pyvista/doc/getting-started/installation.rst:369
msgid "In your ``conf.py``, add the following:"
msgstr "あなたの ``conf.py`` に, 次を追加します．"

#: ../../pyvista/doc/getting-started/why.rst:4
msgid "Why PyVista?"
msgstr "なぜPyVistaなのか?"

#: ../../pyvista/doc/getting-started/why.rst:22
msgid ""
"VTK is an excellent visualization toolkit, and with Python bindings it "
"should be able to combine the speed of C++ with the rapid prototyping of "
"Python.  However, despite this VTK code programmed in Python generally looks"
" the same as its C++ counterpart.  This module seeks to simplify mesh "
"creation and plotting without losing functionality."
msgstr ""
"VTKは優れた可視化ツールキットであり，Pythonバインディングを使えば，C++のスピードとPythonのラピッドプロトタイピングを組み合わせることができるはずです．ただし，PythonでプログラムされたこのVTKコードは，一般的には対応するC++と同じように見えます．このモジュールは，機能を損なうことなくメッシュの作成とプロットを簡略化することを目的としています．"

#: ../../pyvista/doc/getting-started/why.rst:28
msgid ""
"Compare two approaches for loading and plotting a surface mesh from a file:"
msgstr "ファイルから表面メッシュをロードおよびプロットする2つの方法を比較します:"

#: ../../pyvista/doc/getting-started/why.rst:33
msgid "Plotting a Mesh using Python's VTK"
msgstr "PythonのVTKを使用したメッシュのプロット"

#: ../../pyvista/doc/getting-started/why.rst:34
msgid ""
"Using this `example <https://kitware.github.io/vtk-"
"examples/site/Python/IO/ReadSTL/>`_ as a baseline, loading and plotting an "
"STL file requires a lot of code when using only the `vtk`_ library.  PyVista"
" on the other hand only requires a few lines of code."
msgstr ""
"この `example <https://kitware.github.io/vtk-"
"examples/site/Python/IO/ReadSTL/>`_ を基準にすると，STLファイルの読み込みとプロットは， `vtk`_ "
"ライブラリだけを使った場合，多くのコードを必要とします． 一方，PyVistaでは数行のコードしか必要ありません．"

#: ../../pyvista/doc/getting-started/why.rst:49
msgid "Read and plot STL file using `vtk`_"
msgstr "`vtk`_ を用いたSTLファイルの読み込みと描画"

#: ../../pyvista/doc/getting-started/why.rst:49
msgid "Read an STL file using PyVista"
msgstr "PyVistaによるSTLファイルの読み込み"

#: ../../pyvista/doc/getting-started/why.rst:74
msgid ""
"The PyVista data model and API allows you to rapidly load meshes and handles"
" much of the \"grunt work\" of setting up plots, connecting classes and "
"pipelines, and cleaning up plotting windows.  It does this by exposing a "
"simplified, but functional, interface to VTK's classes."
msgstr ""
"PyVistaのデータモデルとAPIは，メッシュを素早く読み込むことができ，プロットの設定，クラスとパイプラインの接続，プロットウィンドウのクリーンアップなどの"
" \"面倒な作業\" の多くを処理します． これは，VTKのクラスへの簡素化された，しかし機能的なインターフェイスを公開することで実現しています．"

#: ../../pyvista/doc/getting-started/why.rst:79
msgid ""
"In :func:`pyvista.read`, PyVista automatically determines the correct file "
"reader based on the file extension and returns a DataSet object. This "
"dataset object contains all the methods that are available to a "
":class:`pyvista.PolyData` class, including the :func:`plot <pyvista.plot>` "
"method, allowing you to instantly generate a plot of the mesh.  Garbage "
"collection is taken care of automatically and the renderer is cleaned up "
"after the user closes the plotting window."
msgstr ""
":func:`pyvista.read` "
"では，ファイルの拡張子に基づいて，PyVistaが自動的に正しいファイルリーダーを決定し，データセットオブジェクトを取得します．このデータセットオブジェクトには，"
" :func:`plot <pyvista.plot>` メソッドを含む， :class:`pyvista.PolyData` "
"クラスで利用可能なすべてのメソッドが含まれており，メッシュのプロットを即座に生成することができます． "
"ガベージコレクションは自動的に処理され，ユーザーがプロットウィンドウを閉じた後，レンダラーはクリーンアップされます．"

#: ../../pyvista/doc/getting-started/why.rst:87
msgid ""
"For more details comparing the two APIs, please see "
":ref:`pyvista_data_model` and :ref:`vtk_to_pyvista_docs`."
msgstr ""
"2つのAPIを比較した詳細については，  :ref:`pyvista_data_model` と :ref:`vtk_to_pyvista_docs` "
"を参照してください．"

#: ../../pyvista/doc/getting-started/why.rst:92
msgid "PyVista API"
msgstr "PyVista API"

#: ../../pyvista/doc/getting-started/why.rst:93
msgid ""
"For example, triangular surface meshes in VTK can be subdivided but every "
"other object in VTK cannot.  It then makes sense that a :func:`subdivide` "
"method be added to the existing triangular surface mesh.  That way, "
"subdivision can be performed with:"
msgstr ""
"たとえば，VTKの3角形のサーフェイスメッシュは分割できますが，VTKの他のすべてのオブジェクトは分割できません．この場合，既存の3角形表面メッシュに細分化された方法を追加することは理にかなっています．このように，"
" :func:`subdivide` メソッドは次のように実行できます:"

#: ../../pyvista/doc/getting-started/why.rst:105
msgid ""
"Additionally, the docstrings for all methods in PyVista are intended to be "
"used within interactive coding sessions. This allows users to use "
"sophisticated processing routines on the fly with immediate access to a "
"description of how to use those methods:"
msgstr ""
"また，PyVistaのすべてのメソッドのdocstringは，インタラクティブなコーディングセッションで使用することを意図しています．これにより，高度な処理ルーチンをその場で使用し，メソッドの使用方法の説明にすぐにアクセスできます．"

#: ../../pyvista/doc/getting-started/why.rst:114
msgid "Interfacing With Other Libraries"
msgstr "他のライブラリとの連携"

#: ../../pyvista/doc/getting-started/why.rst:115
msgid ""
"PyVista is heavily dependent on `numpy <https://numpy.org/>`_ and uses it to"
" represent point, cell, field, and other data from the VTK meshes.  This "
"data can be easily accessed from the dataset attributes like "
":attr:`pyvista.DataSet.points`.  For example the first 10 points of a circle"
" from pyvista can be accessed with:"
msgstr ""
"PyVistaは `numpy <https://numpy.org/>`_ "
"に大きく依存しており，VTKメッシュからのポイント，セル，フィールド，その他のデータを表現するために使用しています． このデータは， "
":attr:`pyvista.DataSet.points` のようなデータセット属性から簡単にアクセスできます． "
"例えば，pyvistaの円の最初の10点には次のようにアクセスできます．"

#: ../../pyvista/doc/getting-started/why.rst:126
msgid ""
"And these points can be operated on as if it was a NumPy array, all without "
"losing connection to the underlying VTK data array."
msgstr ""
"また，これらのポイントは，あたかもNumPyの配列のように操作することができますが，その際，基礎となるVTKデータ配列との接続は失われません．"

#: ../../pyvista/doc/getting-started/why.rst:129
msgid ""
"At the same time, a variety of PyVista objects can be generated directly "
"from numpy arrays.  For example, below we generate a vector field of arrows "
"using :func:`numpy.meshgrid`:"
msgstr ""
"同時に，様々なPyVistaオブジェクトをnumpy配列から直接生成することができます． 例えば，以下では using "
":func:`numpy.meshgrid`を使って，矢印のベクトルフィールドを生成しています．"

#: ../../pyvista/doc/getting-started/why.rst:156
msgid ""
"PyVista has connections to several other libraries, such as `meshio "
"<https://github.com/nschloe/meshio>`_ and `matplotlib "
"<https://matplotlib.org/>`_, allowing PyVista to extend VTK with "
"functionality from the Python ecosystem."
msgstr ""
"PyVistaは， `meshio <https://github.com/nschloe/meshio>`_ や `matplotlib "
"<https://matplotlib.org/>`_ "
"など，いくつかの他のライブラリに接続しており，PyVistaはVTKをPythonエコシステムの機能で拡張することができます．"

# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017-2021, The PyVista Developers
# This file is distributed under the same license as the PyVista package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Tetsuo Koyama <tkoyama010@gmail.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyVista 0.28.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-17 01:23+0000\n"
"PO-Revision-Date: 2020-08-05 16:06+0000\n"
"Last-Translator: Tetsuo Koyama <tkoyama010@gmail.com>, 2021\n"
"Language-Team: Japanese (https://www.transifex.com/getfem-doc/teams/112279/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../pyvista/docs/utilities/geometric.rst:2
msgid "Geometric Objects"
msgstr "ジオメトリオブジェクト"

#: ../../pyvista/docs/utilities/geometric.rst:4
msgid ""
"PyVista includes a few functions to generate simple geometric objects. The "
"code documentation for these functions are on this page; to see what these "
"functions create, check out the example: :ref:`ref_geometric_example`."
msgstr ""
"PyVistaには，単純なジオメトリオブジェクトを生成する関数がいくつかあります．これらの関数のコードドキュメントは，このページにあります．これらの関数が何を生成するかを調べるには，例を調べてください"
" : :ref:`ref_geometric_example` ．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:1
msgid "Create a vtk Sphere."
msgstr "vtk球を作成します．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cylinder:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CylinderStructured:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Plane:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Line:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cube:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Box:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cone:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Polygon:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Disc:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.Spline:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBohemianDome:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBoy:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricDini:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEllipsoid:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricFigure8Klein:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricKuen:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricMobius:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricPluckerConoid:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRoman:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperEllipsoid:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricTorus:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.surface_from_para:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.wrap:0
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read:0
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.save_meshio:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.lines_from_points:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.fit_plane_to_points:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.get_array:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.convert_array:0
#: ../../pyvista/pyvista/utilities/regression.pydocstring of
#: pyvista.utilities.regression.compare_images:0
msgid "Parameters"
msgstr "パラメータ"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:3
msgid "Sphere radius"
msgstr "球の半径"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:5
msgid "Center in [x, y, z]"
msgstr "[x, y, z] の中心"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:7
msgid "Direction the top of the sphere points to in [x, y, z]"
msgstr "球の上端が [x, y, z] 内を指す方向"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:9
msgid ""
"Set the number of points in the longitude direction (ranging from "
"start_theta to end theta)."
msgstr "経度方向のポイント数を設定します(start_thetaからend thetaまでの範囲)．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:12
msgid ""
"Set the number of points in the latitude direction (ranging from start_phi "
"to end_phi)."
msgstr "緯度方向のポイント数を設定します(start_phiからend_phiまで)．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:15
msgid "Starting longitude angle."
msgstr "開始経度角度．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:17
msgid "Ending longitude angle."
msgstr "終了経度角度．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:19
msgid "Starting latitude angle."
msgstr "開始緯度角度．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:21
msgid "Ending latitude angle."
msgstr "終了緯度角度．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cylinder:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Plane:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.Spline:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBohemianDome:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBour:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBoy:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricDini:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEllipsoid:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEnneper:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricFigure8Klein:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricHenneberg:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricKlein:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricKuen:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricMobius:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricPluckerConoid:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricPseudosphere:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRoman:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperEllipsoid:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricTorus:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.wrap:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.lines_from_points:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.convert_array:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.get_vtk_type:0
#: ../../pyvista/pyvista/utilities/regression.pydocstring of
#: pyvista.utilities.regression.compare_images:0
msgid "Returns"
msgstr "戻り値"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:24
msgid "**sphere** -- Sphere mesh."
msgstr "**sphere** -- 球メッシュ．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cylinder:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Plane:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.Spline:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBohemianDome:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBour:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBoy:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricDini:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEllipsoid:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEnneper:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricFigure8Klein:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricHenneberg:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricKlein:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricKuen:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricMobius:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricPluckerConoid:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricPseudosphere:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRoman:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperEllipsoid:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricTorus:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.wrap:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.lines_from_points:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.convert_array:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.get_vtk_type:0
#: ../../pyvista/pyvista/utilities/regression.pydocstring of
#: pyvista.utilities.regression.compare_images:0
msgid "Return type"
msgstr "戻り値の型"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cylinder:1
msgid "Create the surface of a cylinder."
msgstr "円柱の表面を作成します．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cylinder:3
msgid "See also :func:`pyvista.CylinderStructured`."
msgstr ":func:`pyvista.CylinderStructured` も参照してください．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cylinder:5
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CylinderStructured:11
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Plane:3
msgid "Location of the centroid in [x, y, z]"
msgstr "[x, y, z] 中のセントロイドの位置"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cylinder:7
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Plane:5
msgid "Direction cylinder points to  in [x, y, z]"
msgstr "[x, y, z] 内の方向円柱"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cylinder:9
msgid "Radius of the cylinder."
msgstr "円柱の半径．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cylinder:11
msgid "Height of the cylinder."
msgstr "円柱の高さ．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cylinder:13
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CylinderStructured:15
msgid "Number of points on the circular face of the cylinder."
msgstr "円柱の円形面上の点の数です．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cylinder:15
msgid "Cap cylinder ends with polygons.  Default True"
msgstr "キャップ円柱の終点はポリゴンです．デフォルトはTrue"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cylinder:18
msgid "**cylinder** -- Cylinder surface."
msgstr "**cylinder** -- 円柱表面．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cylinder:22
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.Spline:13
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBohemianDome:12
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBour:7
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBoy:19
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricDini:19
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEllipsoid:20
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEnneper:11
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricFigure8Klein:14
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricHenneberg:7
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricKlein:12
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricKuen:17
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricMobius:10
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricPluckerConoid:16
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricPseudosphere:12
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:41
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRoman:10
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperEllipsoid:23
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:33
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricTorus:13
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.wrap:15
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read:19
#: ../../pyvista/pyvista/utilities/regression.pydocstring of
#: pyvista.utilities.regression.compare_images:25
msgid "Examples"
msgstr "例"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CylinderStructured:1
msgid "Create a cylinder mesh as a :class:`pyvista.StructuredGrid`."
msgstr ":class:`pyvista.StructuredGrid` として円柱メッシュを作成します．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CylinderStructured:3
msgid ""
"The end caps are left open. This can create a surface mesh if a single value"
" for the ``radius`` is given or a 3D mesh if multiple radii are given as a "
"list/array in the ``radius`` argument."
msgstr ""
"エンドキャップは開いたままです．これにより， ``radius`` に単一の値が指定された場合は表面メッシュが作成され， ``radius`` "
"引数に複数の半径がリスト/配列として指定された場合は3 Dメッシュが作成されます．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CylinderStructured:7
msgid "Radius of the cylinder. If an iterable"
msgstr "円柱の半径．繰り返し可能"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CylinderStructured:9
msgid "Height (length) of the cylinder along its Z-axis"
msgstr "Z軸に沿った円柱の高さ (長さ)"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CylinderStructured:13
msgid "Direction cylinder Z-axis in [x, y, z]"
msgstr "[x, y, z] の方向円柱Z軸"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CylinderStructured:17
msgid "Number of points along the height (Z-axis) of the cylinder"
msgstr "円柱の高さ (Z軸) に沿った点の数"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:1
msgid "Create a vtk Arrow."
msgstr "vtk矢印を作成します．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:3
msgid "Start location in [x, y, z]"
msgstr "[x, y, z] の開始位置"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:5
msgid "Direction the arrow points to in [x, y, z]"
msgstr "[x, y, z] で矢印が指す方向"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:7
msgid "Length of the tip."
msgstr "先端の長さ．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:9
msgid "Radius of the tip."
msgstr "先端の半径．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:11
msgid "Number of faces around the tip."
msgstr "先端の周囲の面の数．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:13
msgid "Radius of the shaft."
msgstr "軸の半径．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:15
msgid "Number of faces around the shaft."
msgstr "軸の周囲の面の数．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:17
msgid ""
"Scale factor of the entire object, default is None (i.e. scale of 1). 'auto'"
" scales to length of direction array."
msgstr "オブジェクト全体のスケール係数，デフォルトはなし(すなわち1のスケール)です． 'auto' は方向配列の長さに合わせてスケールされます．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:21
msgid "**arrow** -- Arrow surface."
msgstr "**arrow** -- 矢印表面．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Plane:1
msgid "Create a plane."
msgstr "平面を作成します．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Plane:7
msgid "Size of the plane in the i direction."
msgstr "i方向の平面のサイズ．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Plane:9
msgid "Size of the plane in the j direction."
msgstr "j方向の平面のサイズ．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Plane:11
msgid "Number of points on the plane in the i direction."
msgstr "平面上のi方向の点の数．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Plane:13
msgid "Number of points on the plane in the j direction."
msgstr "平面上のj方向の点の数．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Plane:16
msgid "**plane** -- Plane mesh"
msgstr "**plane** -- 平面メッシュ．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Line:1
msgid "Create a line."
msgstr "線分を作成します．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Line:3
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Line:5
msgid "Location in [x, y, z]."
msgstr "[x, y, z] 内の位置．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Line:7
msgid "number of pieces to divide line into"
msgstr "線分を分割する個数"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cube:1
msgid "Create a cube."
msgstr "立方体を作成します．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cube:3
msgid ""
"It's possible to specify either the center and side lengths or just the "
"bounds of the cube. If ``bounds`` are given, all other arguments are "
"ignored."
msgstr ""
"中心と辺の長さを指定することも，立方体の境界だけを指定することもできます． ``bounds`` が与えられた場合，他の全ての引数は無視されます．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cube:7
msgid "Center in [x, y, z]."
msgstr "[x, y, z] の中心．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cube:9
msgid "length of the cube in the x-direction."
msgstr "x方向の立方体の長さ．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cube:11
msgid "length of the cube in the y-direction."
msgstr "y方向の立方体の長さ．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cube:13
msgid "length of the cube in the z-direction."
msgstr "z方向の立方体の長さ．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cube:15
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Box:3
msgid ""
"Specify the bounding box of the cube. If given, all other arguments are "
"ignored. ``(xMin,xMax, yMin,yMax, zMin,zMax)``"
msgstr ""
"立方体のバウンディングボックスを指定します．指定した場合，他のすべての引数は無視されます． ``(xMin,xMax, yMin,yMax, "
"zMin,zMax)``"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Box:1
msgid "Create a box with solid faces for the given bounds."
msgstr "指定した境界のソリッド面を持つボックスを作成します．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cone:1
msgid "Create a cone."
msgstr "円錐を作成します．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cone:3
msgid "Center in [x, y, z]. middle of the axis of the cone."
msgstr "[x, y, z] の中心．円錐の軸の中央．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cone:5
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Polygon:11
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Disc:13
msgid "Direction vector in [x, y, z]. orientation vector of the cone."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cone:7
msgid "Height along the cone in its specified direction."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cone:9
msgid "Base radius of the cone"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cone:11
msgid "Turn on/off whether to cap the base of the cone with a polygon."
msgstr "円錐の底面をポリゴンでキャップするかどうかをオンまたはオフにします．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cone:13
msgid "The angle degrees between the axis of the cone and a generatrix."
msgstr "円錐の軸と母線の間の角度．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cone:15
msgid "Number of facets used to represent the cone"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Polygon:1
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Disc:1
msgid "Create a polygonal disk with a hole in the center."
msgstr "中心に穴のあるポリゴン円盤を作成します．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Polygon:3
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Disc:3
msgid ""
"The disk has zero height. The user can specify the inner and outer radius of"
" the disk, and the radial and circumferential resolution of the polygonal "
"representation."
msgstr "ディスクの高さは0です．ユーザは，ディスクの内側と外側の半径，およびポリゴン表現の半径と円周の解像度を指定できます．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Polygon:7
msgid "Center in [x, y, z]. middle of the axis of the polygon."
msgstr "[x, y, z] の中心．ポリゴンの軸の中央．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Polygon:9
msgid "The radius of the polygon"
msgstr "ポリゴンの半径"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Polygon:13
msgid "Number of sides of the polygon"
msgstr "ポリゴンの辺の数"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Disc:7
msgid "Center in [x, y, z]. middle of the axis of the disc."
msgstr "[x, y, z] の中心．円盤の軸の中央．"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Disc:9
msgid "The inner radius"
msgstr "内側の半径"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Disc:11
msgid "The outer radius"
msgstr "外側の半径"

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Disc:15
msgid "Number of points in radius direction."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Disc:17
msgid "Number of points in circumferential direction."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Text3D:1
msgid "Create 3D text from a string."
msgstr "文字列から3 Dテキストを作成します．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.Spline:1
msgid "Create a spline from points."
msgstr "点からスプラインを作成します．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.Spline:3
msgid ""
"Array of points to build a spline out of.  Array must be 3D and "
"directionally ordered."
msgstr "スプラインを作成するポイントの配列です．配列は3 Dで方向が順序付けられている必要があります．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.Spline:6
msgid "Number of points to interpolate along the points array."
msgstr "点配列に沿って補間する点の数．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.Spline:9
msgid "**spline** -- Line mesh of spline."
msgstr "**spline** -- スプラインのラインメッシュです．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.Spline:14
msgid "Construct a spline"
msgstr "スプラインを作成します"

#: ../../pyvista/docs/utilities/index.rst:2
msgid "Utilities"
msgstr "ユーティリティ"

#: ../../pyvista/docs/utilities/parametric.rst:2
msgid "Parametric Objects"
msgstr "パラメトリックオブジェクト"

#: ../../pyvista/docs/utilities/parametric.rst:4
msgid ""
"The following functions can be used to create parametric surfaces.  To see "
"what these functions create, check out the example: "
":ref:`ref_parametric_example`."
msgstr ""
"パラメトリック表面を作成するには，次の関数を使用します．これらの関数が何を生成するかを見るには，例を調べてください: "
":ref:`ref_parametric_example` ．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBohemianDome:1
msgid "Generate a Bohemian dome."
msgstr "Bohemianドームを生成します．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBohemianDome:3
msgid "Construct a Bohemian dome surface with the following parameters:"
msgstr "次のパラメータを使用して，Bohemianドームの表面を作成します．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBohemianDome:8
msgid "**surf** -- ParametricBohemianDome surface"
msgstr "**surf** -- ParametricBohemianDome表面"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBohemianDome:13
msgid "Create a ParametricBohemianDome mesh"
msgstr "ParametricBohemianDomeメッシュを作成"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBour:1
msgid "Generate Bour's minimal surface."
msgstr "Bourの最小表面を生成します．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBour:3
msgid "**surf** -- ParametricBour surface"
msgstr "**surf** -- ParametricBour表面"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBour:8
msgid "Create a ParametricBour mesh"
msgstr "ParametricBourメッシュを作成"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBoy:1
msgid "Generate Boy's surface."
msgstr "Boyの表面を生成します．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBoy:3
msgid ""
"ParametricBoy generates Boy's surface. This is a Model of the projective "
"plane without singularities. It was found by Werner Boy on assignment from "
"David Hilbert."
msgstr ""
"ParametricBoyはBoyの表面を生成します．特異点のない投影面のモデルです．Werner Boyが David "
"Hilbertからの任務で見つけました．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBoy:7
msgid ""
"For further information about this surface, please consult the technical "
"description \"Parametric surfaces\" in the \"VTK Technical Documents\" "
"section in the VTK.org web pages."
msgstr ""
"この表面の詳細については，VTK.org Webページの \"VTK Technical Documents\" セクションにある技術説明 "
"\"Parametric surfaces\" を参照してください．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBoy:11
msgid ""
"The scale factor for the z-coordinate. Default is 18, giving a nice shape."
msgstr "z座標のスケール係数．既定値は18で，きれいな形になります．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBoy:15
msgid "**surf** -- ParametricBoy surface"
msgstr "**surf** -- ParametricBoy表面"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBoy:20
msgid "Create a ParametricBoy mesh"
msgstr "ParametricBoyメッシュを作成"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricDini:1
msgid "Generate Dini's surface."
msgstr "Diniの表面を生成します．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricDini:3
msgid ""
"ParametricDini generates Dini's surface.  Dini's surface is a surface that "
"possesses constant negative Gaussian curvature"
msgstr "ParametricDiniはDiniの表面を生成します．Diniの表面は一定の負のGauss曲率を持つ表面です"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricDini:6
msgid ""
"The scale factor. See the definition in Parametric surfaces referred to "
"above. Default is 1."
msgstr "スケール係数．上記の Parametric surfaces の定義を参照してください．デフォルトは1です．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricDini:10
msgid ""
"The scale factor. See the definition in Parametric surfaces referred to "
"above. Default is 0.2"
msgstr "スケール係数．上記の Parametric surfaces の定義を参照してください．デフォルトは0.2です．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricDini:15
msgid "**surf** -- ParametricDini surface"
msgstr "**surf** -- ParametricDini表面"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricDini:20
msgid "Create a ParametricDini mesh"
msgstr "ParametricDiniメッシュを作成"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEllipsoid:1
msgid "Generate an ellipsoid."
msgstr "準拠楕円体を生成します．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEllipsoid:3
msgid ""
"ParametricEllipsoid generates an ellipsoid.  If all the radii are the same, "
"we have a sphere.  An oblate spheroid occurs if RadiusX = RadiusY > RadiusZ."
"  Here the Z-axis forms the symmetry axis. To a first approximation, this is"
" the shape of the earth.  A prolate spheroid occurs if RadiusX = RadiusY < "
"RadiusZ."
msgstr ""
"ParametricEllipsoidは，準拠楕円体を生成します．すべての半径が同じであれば，球があります． RadiusX = RadiusY > "
"RadiusZ の場合，偏球が発生します．ここでは，Z軸が対称軸を形成します．まず第一に，これは地球の形です． RadiusX = RadiusY < "
"RadiusZ の場合は，長楕円体になります．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEllipsoid:9
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperEllipsoid:8
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:18
msgid "The scaling factor for the x-axis. Default is 1."
msgstr "X軸の倍率．デフォルトは1です．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEllipsoid:11
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperEllipsoid:10
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:20
msgid "The scaling factor for the y-axis. Default is 1."
msgstr "Y軸の倍率．デフォルトは1です．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEllipsoid:13
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperEllipsoid:12
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:22
msgid "The scaling factor for the z-axis. Default is 1."
msgstr "Z軸の倍率．デフォルトは1です．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEllipsoid:16
msgid "**surf** -- ParametricEllipsoid surface"
msgstr "**surf** -- ParametricEllipsoid表面"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEllipsoid:21
msgid "Create a ParametricEllipsoid mesh"
msgstr "ParametricEllipsoidメッシュを作成"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEnneper:1
msgid "Generate Enneper's surface."
msgstr "Enneperの表面を生成します．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEnneper:3
msgid ""
"ParametricEnneper generates Enneper's surface. Enneper's surface is a a "
"self-intersecting minimal surface possessing constant negative Gaussian "
"curvature"
msgstr ""
"ParametricEnneperはEnneperの表面を生成します．Enneperの表面は，一定の負のGauss曲率を持つ自己交差最小表面です．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEnneper:7
msgid "**surf** -- ParametricEnneper surface"
msgstr "**surf** -- ParametricEnneper表面"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEnneper:12
msgid "Create a ParametricEnneper mesh"
msgstr " ParametricEnneperメッシュを作成"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricFigure8Klein:1
msgid "Generate a figure-8 Klein bottle."
msgstr "字形-8のKleinのボトルを作成します．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricFigure8Klein:3
msgid ""
"ParametricFigure8Klein generates a figure-8 Klein bottle.  A Klein bottle is"
" a closed surface with no interior and only one surface. It is unrealisable "
"in 3 dimensions without intersecting surfaces."
msgstr ""
"ParametricFigure8Kleinは，`字形-"
"8のKleinボトルを生成します．クラインのボトルは閉じたサーフェスで，内部はなく，サーフェスは1つだけです．サーフェスと交差しない3次元では実現できません．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricFigure8Klein:7
msgid "The radius of the bottle. Default is 1."
msgstr "ボトルの半径．デフォルトは1です．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricFigure8Klein:10
msgid "**surf** -- ParametricFigure8Klein surface"
msgstr "**surf** -- ParametricFigure8Klein表面"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricFigure8Klein:15
msgid "Create a ParametricFigure8Klein mesh"
msgstr "  ParametricFigure8Kleinメッシュを作成"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricHenneberg:1
msgid "Generate Henneberg's minimal surface."
msgstr "Hennebergの最小サーフェスを生成します．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricHenneberg:3
msgid "**surf** -- ParametricHenneberg surface"
msgstr "**surf** -- ParametricHenneberg表面"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricHenneberg:8
msgid "Create a ParametricHenneberg mesh"
msgstr " ParametricHennebergメッシュを作成"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricKlein:1
msgid "Generate a \"classical\" representation of a Klein bottle."
msgstr "Kleinボトルの \"古典的な\" 表現を生成します．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricKlein:3
msgid ""
"ParametricKlein generates a \"classical\" representation of a Klein bottle."
"  A Klein bottle is a closed surface with no interior and only one surface."
"  It is unrealisable in 3 dimensions without intersecting surfaces."
msgstr ""
"ParametricKleinは，Kleinボトルの \"古典的な\" "
"表現を生成します．Kleinのボトルは閉じた表面で，内部はなく，表面は1つだけです．表面と交差しない3次元では実現できません．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricKlein:8
msgid "**surf** -- ParametricKlein surface"
msgstr "**surf** -- ParametricKlein表面"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricKlein:13
msgid "Create a ParametricKlein mesh"
msgstr " ParametricKleinメッシュを作成"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricKuen:1
msgid "Generate Kuens' surface."
msgstr "Kuensの表面を生成します．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricKuen:3
msgid ""
"ParametricKuen generates Kuens' surface. This surface has a constant "
"negative gaussian curvature."
msgstr "ParametricKuenはKuensのサーフェスを生成します．このサーフェスは一定の負のGauss曲率を持ちます．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricKuen:6
msgid ""
"The value to use when V == 0. Default is 0.05, giving the best appearance "
"with the default settings. Setting it to a value less than 0.05 extrapolates"
" the surface towards a pole in the -z direction. Setting it to 0 retains the"
" pole whose z-value is -inf."
msgstr ""
" V == 0の場合に使用する値です．既定値は0.05で，既定値の設定で最適な外観が得られます．0.05未満の値に設定すると，表面は-"
"z方向の極に向かって外挿されます．0に設定すると，Z値が-infの極が保持されます．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricKuen:13
msgid "**surf** -- ParametricKuen surface"
msgstr "**surf** -- ParametricKuen表面"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricKuen:18
msgid "Create a ParametricKuen mesh"
msgstr " ParametricKuenメッシュを作成"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricMobius:1
msgid "Generate a Mobius strip."
msgstr "Mobiusの帯を生成します．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricMobius:3
msgid "The radius of the Mobius strip. Default is 1."
msgstr "Mobiusの帯の半径．デフォルトは1です．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricMobius:6
msgid "**surf** -- ParametricMobius surface"
msgstr "**surf** -- ParametricMobiusサーフェス"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricMobius:11
msgid "Create a ParametricMobius mesh"
msgstr "  ParametricMobiusメッシュを作成"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricPluckerConoid:1
msgid "Generate Plucker's conoid surface."
msgstr "Pluckerの円錐表面を生成します．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricPluckerConoid:3
msgid ""
"ParametricPluckerConoid generates Plucker's conoid surface parametrically. "
"Plucker's conoid is a ruled surface, named after Julius Plucker. It is "
"possible to set the number of folds in this class via the parameter 'N'."
msgstr ""
"ParametricPluckerConoidは，Pluckerの円錐サーフェスをパラメトリックに生成します．Plucker's "
"conoidは，Julius Pluckerにちなんで命名されたルールド表面です．パラメータ'N'を使用して，このクラスの折りたたみ数を設定できます．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricPluckerConoid:7
msgid "This is the number of folds in the conoid."
msgstr "これは，円錐曲線の折り目の数です．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricPluckerConoid:12
msgid "**surf** -- ParametricPluckerConoid surface"
msgstr "**surf** -- ParametricPluckerConoid表面"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricPluckerConoid:17
msgid "Create a ParametricPluckerConoid mesh"
msgstr " ParametricPluckerConoidメッシュを作成"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricPseudosphere:1
msgid "Generate a pseudosphere."
msgstr "pseudosphereを生成します．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricPseudosphere:3
msgid ""
"ParametricPseudosphere generates a parametric pseudosphere. The pseudosphere"
" is generated as a surface of revolution of the tractrix about it's "
"asymptote, and is a surface of constant negative Gaussian curvature."
msgstr ""
"ParametricPseudosphereはパラメトリック擬似球を生成します．擬似球は，その漸近線の周りの準線の回転面として生成され，一定の負のGauss曲率の面です．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricPseudosphere:8
msgid "**surf** -- ParametricPseudosphere surface"
msgstr "**surf** -- ParametricPseudosphere表面"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricPseudosphere:13
msgid "Create a ParametricPseudosphere mesh"
msgstr "ParametricPseudosphereメッシュを生成"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:1
msgid "Generate a surface covered with randomly placed hills."
msgstr "ランダムに配置された丘で覆われた表面を生成します．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:3
msgid ""
"ParametricRandomHills generates a surface covered with randomly placed "
"hills. Hills will vary in shape and height since the presence of nearby "
"hills will contribute to the shape and height of a given hill.  An option is"
" provided for placing hills on a regular grid on the surface.  In this case "
"the hills will all have the same shape and height."
msgstr ""
"ParametricRandomHillsは，ランダムに配置された丘で覆われた表面を生成します．丘の形状と高さは，隣接する丘の存在が丘の形状と高さに影響するため，丘の形状と高さはさまざまです．サーフェス上の通常のグリッドに丘を配置するためのオプションが用意されています．この場合，丘はすべて同じ形状と高さになります．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:10
msgid "The number of hills. Default is 30."
msgstr "丘の数．デフォルトは30です．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:13
msgid "The hill variance in the x-direction. Default is 2.5."
msgstr "x方向の丘の変化．デフォルトは2.5です．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:16
msgid "The hill variance in the y-direction. Default is 2.5."
msgstr "y方向の丘の変化．デフォルトは2.5です．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:19
msgid "The hill amplitude (height). Default is 2."
msgstr "丘の振幅 (高さ) ．デフォルトは2です．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:22
msgid ""
"The Seed for the random number generator, a value of 1 will initialize the "
"random number generator, a negative value will initialize it with the system"
" time. Default is 1."
msgstr ""
"乱数ジェネレータのシード値を1に設定すると乱数ジェネレータが初期化され，負の値に設定するとシステム時間で初期化されます．デフォルトは1です．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:27
msgid "The scaling factor for the variance in the x-direction. Default is 13."
msgstr "x方向の分散のスケール係数．デフォルトは13です．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:30
msgid "The scaling factor for the variance in the y-direction. Default is 13."
msgstr "y方向の分散のスケール係数．デフォルトは13です．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:33
msgid "The scaling factor for the amplitude. Default is 13."
msgstr "振幅のスケール係数．デフォルトは13です．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:37
msgid "**surf** -- ParametricRandomHills surface"
msgstr "**surf** -- ParametricRandomHills表面"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:42
msgid "Create a ParametricRandomHills mesh"
msgstr "ParametricRandomHillsメッシュを生成"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRoman:1
msgid "Generate Steiner's Roman Surface."
msgstr "SteinerのRoman表面を生成します．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRoman:3
msgid "The radius. Default is 1."
msgstr "半径．デフォルトは1です．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRoman:6
msgid "**surf** -- ParametricRoman surface"
msgstr "**surf** -- ParametricRoman表面"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRoman:11
msgid "Create a ParametricRoman mesh"
msgstr "ParametricRomanメッシュを生成"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperEllipsoid:1
msgid "Generate a superellipsoid."
msgstr "超楕円体を生成します．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperEllipsoid:3
msgid ""
"ParametricSuperEllipsoid generates a superellipsoid.  A superellipsoid is a "
"versatile primitive that is controlled by two parameters n1 and n2. As "
"special cases it can represent a sphere, square box, and closed cylindrical "
"can."
msgstr ""
"ParametricSuperEllipsoidは，超楕円体を生成します．超楕円体は，n1とn2の2つのパラメータによって制御される汎用プリミティブです．特殊な場合として，球，正方形のボックス，および閉じた円柱状の缶を表すことができます．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperEllipsoid:14
msgid "The \"squareness\" parameter in the z axis.  Default is 1."
msgstr "z軸の \"直角度\" パラメータ．デフォルトは1です．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperEllipsoid:16
msgid "The \"squareness\" parameter in the x-y plane. Default is 1."
msgstr "x-y平面の \"squareness\" パラメータ．デフォルトは1です．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperEllipsoid:19
msgid "**surf** -- ParametricSuperEllipsoid surface"
msgstr "**surf** -- ParametricSuperEllipsoid表面"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperEllipsoid:24
msgid "Create a ParametricSuperEllipsoid mesh"
msgstr "ParametricSuperEllipsoidメッシュを生成"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:1
msgid "Generate a supertoroid."
msgstr "スーパートロイドを生成します．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:3
msgid ""
"ParametricSuperToroid generates a supertoroid.  Essentially a supertoroid is"
" a torus with the sine and cosine terms raised to a power. A supertoroid is "
"a versatile primitive that is controlled by four parameters r0, r1, n1 and "
"n2. r0, r1 determine the type of torus whilst the value of n1 determines the"
" shape of the torus ring and n2 determines the shape of the cross section of"
" the ring. It is the different values of these powers which give rise to a "
"family of 3D shapes that are all basically toroidal in shape."
msgstr ""
"ParametricSuperToroidがスーパートロイドを生成します．本質的にスーパートロイドは，正弦項と余弦項を累乗したトーラスです．スーパートロイドは，4つのパラメータr0，r1，n1，およびn2によって制御される汎用プリミティブです．r0，r"
" "
"1はトーラスのタイプを決定し，n1の値はトーラスリングの形状を決定し，n2はリングの断面の形状を決定します．これらのパワーの異なる値によって，形状がすべて基本的にトロイダルな3"
" D形状のファミリが生成されます．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:12
msgid ""
"The radius from the center to the middle of the ring of the supertoroid. "
"Default is 1."
msgstr "スーパートロイドのリングの中心から中心までの半径．デフォルトは1です．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:15
msgid ""
"The radius of the cross section of ring of the supertoroid. Default = 0.5."
msgstr "スーパートロイドのリングの断面の半径．既定値は0.5です．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:24
msgid "The shape of the torus ring.  Default is 1."
msgstr "トーラスリングの形状．デフォルトは1です．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:26
msgid "The shape of the cross section of the ring. Default is 1."
msgstr "リングの断面の形状．デフォルトは1です．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:29
msgid "**surf** -- ParametricSuperToroid surface"
msgstr "**surf** -- ParametricSuperToroid表面"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:34
msgid "Create a ParametricSuperToroid mesh"
msgstr "ParametricSuperToroidメッシュを生成"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricTorus:1
msgid "Generate a torus."
msgstr "トーラスを生成します．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricTorus:3
msgid ""
"The radius from the center to the middle of the ring of the torus. Default "
"is 1.0."
msgstr "円環体の中心から中央までの半径．デフォルトは1.0です．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricTorus:6
msgid "The radius of the cross section of ring of the torus. Default is 0.5."
msgstr "トーラスのリングの断面の半径．デフォルトは0.5です．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricTorus:9
msgid "**surf** -- ParametricTorus surface"
msgstr "**surf** -- ParametricTorus表面"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricTorus:14
msgid "Create a ParametricTorus mesh"
msgstr "ParametricTorusメッシュを生成"

#: ../../pyvista/docs/utilities/parametric.rst:26
msgid "These functions support building parametric surfaces:"
msgstr "次の関数は，パラメトリックサーフェスの作成をサポートしています．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:1
msgid "Apply keyword arguments to a parametric function."
msgstr "パラメトリック関数にキーワード引数を適用します．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:3
msgid "The minimum u-value."
msgstr "U値の最小値．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:5
msgid "The maximum u-value."
msgstr "U値の最大値．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:7
msgid "The minimum v-value."
msgstr "V値の最小値．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:9
msgid "The maximum v-value."
msgstr "V値の最大値．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:11
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:17
msgid ""
"Joins the first triangle strip to the last one with a twist in the u "
"direction."
msgstr "最初の三角形のストリップを最後の三角形のストリップにU方向のねじれで結合します．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:14
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:20
msgid ""
"Joins the first triangle strip to the last one with a twist in the v "
"direction."
msgstr "最初の三角形の条片を，V方向にねじった最後の条片に結合します．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:23
msgid "Determines the ordering of the vertices forming the triangle strips."
msgstr "三角形の条片を形成する頂点の順序を決定します．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.surface_from_para:1
msgid "Construct a mesh from a parametric function."
msgstr "パラメトリック関数からメッシュを作成します．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.surface_from_para:3
msgid "Parametric function to generate mesh from."
msgstr "メッシュを生成するパラメトリック関数．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.surface_from_para:5
msgid "Resolution in the u direction."
msgstr "u方向の分解能．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.surface_from_para:7
msgid "Resolution in the v direction."
msgstr "v方向の分解能．"

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.surface_from_para:9
msgid "Resolution in the w direction."
msgstr "w方向の分解能．"

#: ../../pyvista/docs/utilities/utilities.rst:2
msgid "General Utilities"
msgstr "一般ユーティリティ"

#: ../../pyvista/pyvista/utilities/__init__.pydocstring of pyvista.utilities:1
msgid "Utilities routines."
msgstr "ユーティリティルーチン．"

#: ../../pyvista/pyvista/utilities/errors.pydocstring of
#: pyvista.utilities.errors.set_error_output_file:1
msgid "Set a file to write out the VTK errors."
msgstr "VTKエラーを書き出すファイルを設定します．"

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.trans_from_matrix:1
msgid "Convert a vtk matrix to a numpy.ndarray."
msgstr "vtk行列をnumpy.ndarrayに変換する．"

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.is_inside_bounds:1
msgid "Check if a point is inside a set of bounds."
msgstr "ポイントが境界のセット内にあるかどうかをチェックします．"

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.is_inside_bounds:3
msgid "This is implemented through recursion so that this is N-dimensional."
msgstr "これは再帰的に実装されているため，N次元になります．"

#: ../../pyvista/docs/utilities/utilities.rst:14
msgid "Object Conversions"
msgstr "オブジェクト変換"

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.wrap:1
msgid "Wrap any given VTK data object to its appropriate PyVista data object."
msgstr "与えられたVTKデータオブジェクトを適切なPyVistaデータオブジェクトにラップします．"

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.wrap:3
msgid ""
"Other formats that are supported include: * 2D :class:`numpy.ndarray` of XYZ"
" vertices * 3D :class:`numpy.ndarray` representing a volume. Values will be "
"scalars. * 3D :class:`trimesh.Trimesh` mesh."
msgstr ""
"サポートされているその他の形式には，XYZ頂点 * 3D :class:`numpy.ndarray` の * 2D "
":class:`numpy.ndarray` があり，ボリュームを表します．値はスカラーです．* 3D :class:`trimesh.Trimesh`"
" メッシュ"

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.wrap:8
msgid "Dataset to wrap."
msgstr "ラップするデータセット．"

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.wrap:11
msgid "**wrapped_dataset** -- The `pyvista` wrapped dataset."
msgstr "**wrapped_dataset** -- `pyvista` でラップされたデータセット．"

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.wrap:16
msgid "Wrap a numpy array representing a random point cloud"
msgstr "​ランダムなポイントクラウドを表すnumpy配列をラップする"

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.wrap:31
msgid "Wrap a Trimesh object"
msgstr "​Trimeshオブジェクトをラップする"

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.wrap:48
msgid "Wrap a VTK object"
msgstr "​VTKオブジェクトをラップする"

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.is_pyvista_dataset:1
msgid "Return True if the Object is a PyVista wrapped dataset."
msgstr "ObjectがPyVistaでラップされたデータセットである場合，Trueを返します．"

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.image_to_texture:1
msgid ""
"Convert ``vtkImageData`` (:class:`pyvista.UniformGrid`) to a ``vtkTexture``."
msgstr ""
"``vtkImageData`` (:class:`pyvista.UniformGrid`) を ``vtkTexture`` に変換します．"

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.numpy_to_texture:1
msgid "Convert a NumPy image array to a vtk.vtkTexture."
msgstr "NumPyイメージ配列をvtk.vtkTextureに変換します．"

#: ../../pyvista/docs/utilities/utilities.rst:26
msgid "File IO"
msgstr "ファイルIO"

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read:1
msgid "Read any VTK file."
msgstr "VTKファイルを読み込みます．"

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read:3
msgid ""
"It will figure out what reader to use then wrap the VTK object for use in "
"PyVista."
msgstr "どのリーダーを使用するかを判断し，PyVistaで使用するVTKオブジェクトをラップします．"

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read:6
msgid ""
"The string path to the file to read. If a list of files is given, a "
":class:`pyvista.MultiBlock` dataset is returned with each file being a "
"separate block in the dataset."
msgstr ""
"読み込むファイルへの文字列パス．ファイルのリストが与えられた場合， :class:`pyvista.MultiBlock` "
"データセットが返され，各ファイルはデータセット内の個別のブロックです．"

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read:10
msgid ""
"A dictionary of attributes to call on the reader. Keys of dictionary are the"
" attribute/method names and values are the arguments passed to those calls. "
"If you do not have any attributes to call, pass ``None`` as the value."
msgstr ""
"リーダーで呼び出すアトリビュートのディクショナリ．ディクショナリのキーはアトリビュート/メソッド名で，値はこれらの呼び出しに渡される引数です．呼び出すアトリビュートがない場合は，"
" ``None`` を値として渡します．"

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read:15
msgid "Format of file to read with meshio."
msgstr "meshioで読み込むファイルのフォーマット．"

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read:20
msgid "Load an example mesh"
msgstr "サンプルメッシュをロードする"

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read:26
msgid "Load a vtk file"
msgstr "vtkファイルをロードする"

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read:30
msgid "Load a meshio file"
msgstr "meshioファイルをロードする"

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_exodus:1
msgid "Read an ExodusII file (``'.e'`` or ``'.exo'``)."
msgstr "ExodusIIファイルを読み込みます(``'.e'`` または ``'.exo'`` )．"

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_texture:1
msgid "Load a ``vtkTexture`` from an image file."
msgstr "画像ファイルから ``vtkTexture`` を読み込みます．"

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_legacy:1
msgid "Use VTK's legacy reader to read a file."
msgstr "ファイルを読み取るには，VTKの従来のリーダーを使用します．"

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.save_meshio:1
msgid "Save mesh to file using meshio."
msgstr "meshioを使用してメッシュをファイルに保存します．"

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.save_meshio:3
msgid "Any PyVista mesh/spatial data type."
msgstr "任意のPyVistaメッシュ/空間データタイプ．"

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.save_meshio:5
msgid "File type for meshio to save."
msgstr "保存するファイルの種類を指定します．"

#: ../../pyvista/docs/utilities/utilities.rst:40
msgid "Mesh Creation"
msgstr "メッシュ作成"

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.lines_from_points:1
msgid "Make a connected line set given an array of points."
msgstr "点の配列を指定して，接続された線分セットを作成します．"

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.lines_from_points:3
msgid ""
"Points representing the vertices of the connected segments. For example, two"
" line segments would be represented as:  np.array([[0, 0, 0], [1, 0, 0], [1,"
" 1, 0]])"
msgstr ""
"接続されたセグメントの頂点を表すポイント．たとえば，2つの線分セグメントは次のように表されます: np.array([[0, 0, 0], [1, 0,"
" 0], [1, 1, 0]])"

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.lines_from_points:3
msgid ""
"Points representing the vertices of the connected segments. For example, two"
" line segments would be represented as:"
msgstr "接続されたセグメントの頂点を表すポイント．たとえば，2つの線分セグメントは次のように表されます: "

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.lines_from_points:6
msgid "np.array([[0, 0, 0], [1, 0, 0], [1, 1, 0]])"
msgstr "np.array([[0, 0, 0], [1, 0, 0], [1, 1, 0]])"

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.lines_from_points:8
msgid "If True, close the line segments into a loop"
msgstr "Trueの場合，線分セグメントを閉じてループを作成します．"

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.lines_from_points:11
msgid "**lines** -- PolyData with lines and cells."
msgstr "**lines** -- ラインとセルを持つPolyDataです．"

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.vtk_points:1
msgid "Convert numpy points to a vtkPoints object."
msgstr "numpyポイントをvtkPointsオブジェクトに変換します．"

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.vector_poly_data:1
msgid "Create a vtkPolyData object composed of vectors."
msgstr "ベクトルで構成されたvtkPolyData オブジェクトを生成."

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.fit_plane_to_points:1
msgid "Fit a plane to a set of points."
msgstr "平面を点の集合にフィットさせます．"

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.fit_plane_to_points:3
msgid "Size n by 3 array of points to fit a plane through"
msgstr "平面にフィットするように点のn x 3配列をサイズ変更"

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.fit_plane_to_points:5
msgid "If true, also returns the center and normal used to generate the plane"
msgstr "trueの場合，平面の生成に使用される中心と法線も返します．"

#: ../../pyvista/docs/utilities/utilities.rst:52
msgid "Array Access"
msgstr "配列アクセス"

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.get_array:1
msgid "Search point, cell and field data for an array."
msgstr "配列の検索ポイント，セル，およびフィールドのデータ．"

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.get_array:3
msgid "The name of the array to get the range."
msgstr "範囲を取得する配列の名前を指定します．"

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.get_array:5
msgid ""
"When scalars is specified, this is the preferred array type to search for in"
" the dataset.  Must be either ``'point'``, ``'cell'``, or ``'field'``"
msgstr ""
"スカラーが指定されている場合，これはデータセット内で検索するために推奨される配列型です． ``'point'`` ， ``'cell'`` ，または "
"``'field'`` のいずれかでなければなりません"

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.get_array:9
msgid "Return info about the array rather than the array itself."
msgstr "配列そのものではなく，配列に関する情報を返します．"

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.get_array:11
msgid "Boolean to control whether to throw an error if array is not present."
msgstr "配列が存在しない場合にエラーを投げるるかどうかを制御するブール型の値を指定します．"

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.convert_array:1
msgid "Convert a NumPy array to a vtkDataArray or vice versa."
msgstr "NumPy配列をvtkDataArrayに，またはその逆に変換します．"

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.convert_array:3
msgid "A numpy array or vtkDataArry to convert"
msgstr "変換する数値配列あるいはvtkDataArry"

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.convert_array:5
msgid "The name of the data array for VTK"
msgstr "VTKのデータ配列の名前"

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.convert_array:7
msgid "if input is numpy array then deep copy values"
msgstr "入力がnumpy arrayであれば，値を深くコピーします．"

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.convert_array:10
msgid ""
"the converted array (if input is a NumPy ndaray then returns "
"``vtkDataArray`` or is input is ``vtkDataArray`` then returns NumPy "
"``ndarray``). If pdf==True and the input is ``vtkDataArry``, return a pandas"
" DataFrame."
msgstr ""
"変換後の配列(inputがNumPy ndarayの場合は ``vtkDataArray`` を返すか，inputが ``vtkDataArray`` "
"の場合はNumPy  ``ndarray`` を返します)．pdf==Trueで，入力が ``vtkDataArry`` の場合，pandas "
"DataFrameを返します．"

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.point_array:1
msgid "Return point array of a vtk object."
msgstr "vtkオブジェクトの点配列を返します．"

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cell_array:1
msgid "Return cell array of a vtk object."
msgstr "vtkオブジェクトのセル配列を返します．"

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.field_array:1
msgid "Return field array of a vtk object."
msgstr "vtkオブジェクトのフィールド配列を返します．"

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.get_vtk_type:1
msgid "Look up the VTK type for a give python data type."
msgstr "与えられたPythonデータ型をVTK型で検索します．"

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.get_vtk_type:3
msgid "Corrects for string type mapping issues."
msgstr "文字列型マッピングの問題が修正されました．"

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.get_vtk_type:5
msgid "**int**"
msgstr "**int**"

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.vtk_bit_array_to_char:1
msgid "Cast vtk bit array to a char array."
msgstr "vtkビット配列をchar配列にキャストします．"

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.convert_string_array:1
msgid "Convert a numpy array of strings to a vtkStringArray or vice versa."
msgstr "numpy配列をvtkStringArrayに，またはその逆に変換します．"

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.convert_string_array:3
msgid ""
"Note that this is terribly inefficient - inefficient support is better than "
"no support :). If you have ideas on how to make this faster, please consider"
" opening a pull request."
msgstr ""
"これは非常に非効率的であることに注意してください-非効率的なサポートはサポートしないよりましです "
":)．これをもっと早くする方法があれば，プルリクエストを開くことを検討してください．"

#: ../../pyvista/docs/utilities/utilities.rst:72
msgid "Image Comparison and Regression"
msgstr "イメージの比較とレグレッション"

#: ../../pyvista/pyvista/utilities/regression.pydocstring of
#: pyvista.utilities.regression.compare_images:1
msgid "Compare two different images of the same size."
msgstr "同じサイズの2つの異なるイメージを比較します．"

#: ../../pyvista/pyvista/utilities/regression.pydocstring of
#: pyvista.utilities.regression.compare_images:3
#: ../../pyvista/pyvista/utilities/regression.pydocstring of
#: pyvista.utilities.regression.compare_images:6
msgid ""
"Render window, numpy array representing the output of a render window, or "
"``vtkImageData``"
msgstr "Renderウィンドウ，Renderウィンドウの出力を表すnumpy配列，または ``vtkImageData``"

#: ../../pyvista/pyvista/utilities/regression.pydocstring of
#: pyvista.utilities.regression.compare_images:9
msgid ""
"Threshold tolerance for pixel differences.  This should be greater than 0, "
"otherwise it will always return an error, even on identical images."
msgstr "ピクセル差のしきい値許容値．これは0より大きくなければなりません．そうでなければ，同じ画像であっても常にエラーを返します．"

#: ../../pyvista/pyvista/utilities/regression.pydocstring of
#: pyvista.utilities.regression.compare_images:13
msgid ""
"When disabled, computes the mean pixel error over the entire image using "
"numpy.  The difference between pixel is calculated for each RGB channel, "
"summed, and then divided by the number of pixels.  This is faster than using"
" ``vtk.vtkImageDifference`` but potentially less accurate."
msgstr ""
"無効にすると，numpyを使用してイメージ全体の平均ピクセルエラーを計算します．ピクセル間の差は，RGBチャンネルごとに計算され，合計されてからピクセル数で除算されます．これは"
" ``vtk.vtkImageDifference`` を使用するよりも速いですが，潜在的に精度が低くなります．"

#: ../../pyvista/pyvista/utilities/regression.pydocstring of
#: pyvista.utilities.regression.compare_images:20
msgid ""
"**error** -- Total error between the images if using ``use_vtk=True``, and "
"the mean pixel error when ``use_vtk=False``."
msgstr ""
"**error**-- ``use_vtk=True`` を使用している場合のイメージ間の合計エラー，および ``use_vtk=False`` "
"を使用している場合の平均ピクセルエラーです．"

#: ../../pyvista/pyvista/utilities/regression.pydocstring of
#: pyvista.utilities.regression.compare_images:26
#: ../../pyvista/pyvista/utilities/regression.pydocstring of
#: pyvista.utilities.regression.compare_images:35
msgid "Compare two active plotters"
msgstr "2つのアクティブなプロッタを比較します"

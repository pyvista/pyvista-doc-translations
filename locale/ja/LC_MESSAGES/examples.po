# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017-2021, The PyVista Developers
# This file is distributed under the same license as the PyVista package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Tetsuo Koyama <tkoyama010@gmail.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyVista 0.30.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-10 00:44+0000\n"
"PO-Revision-Date: 2020-08-05 16:06+0000\n"
"Last-Translator: Tetsuo Koyama <tkoyama010@gmail.com>, 2021\n"
"Language-Team: Japanese (https://www.transifex.com/getfem-doc/teams/112279/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../pyvista/docs/examples/00-load/create-explicit-structured-grid.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_00-load_create-explicit-"
"structured-grid.py>` to download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_00-load_create-explicit-"
"structured-grid.py>` to download the full example code"

#: ../../pyvista/docs/examples/00-load/create-explicit-structured-grid.rst:24
msgid "Creating an Explicit Structured Grid"
msgstr "明示的な構造グリッドの作成"

#: ../../pyvista/docs/examples/00-load/create-explicit-structured-grid.rst:26
msgid "Create an explicit structured grid from NumPy arrays."
msgstr "NumPy配列から明示的な構造化グリッドを作成します．"

#: ../../pyvista/docs/examples/00-load/create-explicit-structured-grid.rst:28
msgid "Note this feature is only available for ``vtk>=9``."
msgstr "この機能は ``vtk>=9`` だけで使用できます．"

#: ../../pyvista/docs/examples/00-load/create-explicit-structured-grid.rst:76
msgid "**Total running time of the script:** ( 0 minutes  0.002 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  0.002 seconds)"

#: ../../pyvista/docs/examples/00-load/create-explicit-structured-grid.rst:91
msgid ""
":download:`Download Python source code: create-explicit-structured-grid.py "
"<create-explicit-structured-grid.py>`"
msgstr ""
":download:`Download Python source code: create-explicit-structured-grid.py "
"<create-explicit-structured-grid.py>`"

#: ../../pyvista/docs/examples/00-load/create-explicit-structured-grid.rst:97
msgid ""
":download:`Download Jupyter notebook: create-explicit-structured-grid.ipynb "
"<create-explicit-structured-grid.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: create-explicit-structured-grid.ipynb "
"<create-explicit-structured-grid.ipynb>`"

#: ../../pyvista/docs/examples/00-load/create-explicit-structured-grid.rst:104
#: ../../pyvista/docs/examples/00-load/create-geometric-objects.rst:155
#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:923
#: ../../pyvista/docs/examples/00-load/create-point-cloud.rst:384
#: ../../pyvista/docs/examples/00-load/create-poly.rst:124
#: ../../pyvista/docs/examples/00-load/create-spline.rst:367
#: ../../pyvista/docs/examples/00-load/create-structured-surface.rst:424
#: ../../pyvista/docs/examples/00-load/create-surface-draped.rst:245
#: ../../pyvista/docs/examples/00-load/create-tri-surface.rst:347
#: ../../pyvista/docs/examples/00-load/create-uniform-grid.rst:186
#: ../../pyvista/docs/examples/00-load/create-unstructured-surface.rst:276
#: ../../pyvista/docs/examples/00-load/read-dolfin.rst:172
#: ../../pyvista/docs/examples/00-load/read-file.rst:376
#: ../../pyvista/docs/examples/00-load/read-image.rst:160
#: ../../pyvista/docs/examples/00-load/read-parallel.rst:280
#: ../../pyvista/docs/examples/00-load/terrain-mesh.rst:321
#: ../../pyvista/docs/examples/00-load/wrap-trimesh.rst:196
#: ../../pyvista/docs/examples/01-filter/boolean-operations.rst:318
#: ../../pyvista/docs/examples/01-filter/cell-centers.rst:191
#: ../../pyvista/docs/examples/01-filter/clipping.rst:248
#: ../../pyvista/docs/examples/01-filter/clipping-with-surface.rst:287
#: ../../pyvista/docs/examples/01-filter/compute-normals.rst:201
#: ../../pyvista/docs/examples/01-filter/compute-volume.rst:477
#: ../../pyvista/docs/examples/01-filter/connectivity.rst:158
#: ../../pyvista/docs/examples/01-filter/contouring.rst:162
#: ../../pyvista/docs/examples/01-filter/decimate.rst:231
#: ../../pyvista/docs/examples/01-filter/distance-between-surfaces.rst:285
#: ../../pyvista/docs/examples/01-filter/extract-cells-inside-surface.rst:202
#: ../../pyvista/docs/examples/01-filter/extract-edges.rst:254
#: ../../pyvista/docs/examples/01-filter/extract-surface.rst:191
#: ../../pyvista/docs/examples/01-filter/extrude-rotate.rst:215
#: ../../pyvista/docs/examples/01-filter/gaussian-smoothing.rst:195
#: ../../pyvista/docs/examples/01-filter/geodesic.rst:164
#: ../../pyvista/docs/examples/01-filter/glyphs.rst:253
#: ../../pyvista/docs/examples/01-filter/glyphs_table.rst:146
#: ../../pyvista/docs/examples/01-filter/gradients.rst:366
#: ../../pyvista/docs/examples/01-filter/interpolate.rst:293
#: ../../pyvista/docs/examples/01-filter/mesh-quality.rst:149
#: ../../pyvista/docs/examples/01-filter/poly-ray-trace.rst:113
#: ../../pyvista/docs/examples/01-filter/project-plane.rst:130
#: ../../pyvista/docs/examples/01-filter/reflect.rst:146
#: ../../pyvista/docs/examples/01-filter/resample.rst:227
#: ../../pyvista/docs/examples/01-filter/slicing.rst:584
#: ../../pyvista/docs/examples/01-filter/streamlines.rst:369
#: ../../pyvista/docs/examples/01-filter/subdivide.rst:172
#: ../../pyvista/docs/examples/01-filter/surface-smoothing.rst:223
#: ../../pyvista/docs/examples/01-filter/using-filters.rst:279
#: ../../pyvista/docs/examples/01-filter/voxelize.rst:316
#: ../../pyvista/docs/examples/01-filter/warp-by-vector.rst:144
#: ../../pyvista/docs/examples/02-plot/background_image.rst:160
#: ../../pyvista/docs/examples/02-plot/clear.rst:178
#: ../../pyvista/docs/examples/02-plot/cmap.rst:346
#: ../../pyvista/docs/examples/02-plot/depth-peeling.rst:241
#: ../../pyvista/docs/examples/02-plot/edges.rst:105
#: ../../pyvista/docs/examples/02-plot/edl.rst:297
#: ../../pyvista/docs/examples/02-plot/floors.rst:97
#: ../../pyvista/docs/examples/02-plot/ghost-cells.rst:132
#: ../../pyvista/docs/examples/02-plot/gif.rst:109
#: ../../pyvista/docs/examples/02-plot/image_depth.rst:164
#: ../../pyvista/docs/examples/02-plot/interpolate-before-map.rst:307
#: ../../pyvista/docs/examples/02-plot/isovalue.rst:224
#: ../../pyvista/docs/examples/02-plot/labels.rst:301
#: ../../pyvista/docs/examples/02-plot/lighting_mesh.rst:291
#: ../../pyvista/docs/examples/02-plot/linked.rst:110
#: ../../pyvista/docs/examples/02-plot/movie.rst:111
#: ../../pyvista/docs/examples/02-plot/multi-window.rst:329
#: ../../pyvista/docs/examples/02-plot/opacity.rst:443
#: ../../pyvista/docs/examples/02-plot/orbit.rst:169
#: ../../pyvista/docs/examples/02-plot/ortho-slices.rst:192
#: ../../pyvista/docs/examples/02-plot/pbr.rst:229
#: ../../pyvista/docs/examples/02-plot/plot-over-circular-arc.rst:148
#: ../../pyvista/docs/examples/02-plot/plot-over-line.rst:217
#: ../../pyvista/docs/examples/02-plot/scalar-bars.rst:310
#: ../../pyvista/docs/examples/02-plot/screenshot.rst:133
#: ../../pyvista/docs/examples/02-plot/shading.rst:137
#: ../../pyvista/docs/examples/02-plot/silhouette.rst:274
#: ../../pyvista/docs/examples/02-plot/spherical.rst:303
#: ../../pyvista/docs/examples/02-plot/texture.rst:579
#: ../../pyvista/docs/examples/02-plot/themes.rst:286
#: ../../pyvista/docs/examples/02-plot/topo-map.rst:270
#: ../../pyvista/docs/examples/02-plot/vector-component.rst:149
#: ../../pyvista/docs/examples/02-plot/volume.rst:533
#: ../../pyvista/docs/examples/03-widgets/box-widget.rst:148
#: ../../pyvista/docs/examples/03-widgets/checkbox-widget.rst:196
#: ../../pyvista/docs/examples/03-widgets/line-widget.rst:136
#: ../../pyvista/docs/examples/03-widgets/multi-slider-widget.rst:165
#: ../../pyvista/docs/examples/03-widgets/plane-widget.rst:335
#: ../../pyvista/docs/examples/03-widgets/slider-bar-widget.rst:205
#: ../../pyvista/docs/examples/03-widgets/sphere-widget.rst:314
#: ../../pyvista/docs/examples/03-widgets/spline-widget.rst:123
#: ../../pyvista/docs/examples/04-lights/actors.rst:218
#: ../../pyvista/docs/examples/04-lights/attenuation.rst:231
#: ../../pyvista/docs/examples/04-lights/beam_shape.rst:337
#: ../../pyvista/docs/examples/04-lights/light_types.rst:198
#: ../../pyvista/docs/examples/04-lights/mesh_lighting.rst:141
#: ../../pyvista/docs/examples/04-lights/plotter_builtins.rst:301
#: ../../pyvista/docs/examples/04-lights/shadows.rst:259
#: ../../pyvista/docs/examples/99-advanced/antarctica-compare.rst:399
#: ../../pyvista/docs/examples/99-advanced/ray-trace.rst:112
#: ../../pyvista/docs/examples/99-advanced/warp-by-vector-eigenmodes.rst:363
#: ../../pyvista/docs/examples/index.rst:2265
msgid ""
"`Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_"
msgstr "`Sphinx-Galleryによるギャラリー <https://sphinx-gallery.github.io>`_"

#: ../../pyvista/docs/examples/00-load/create-geometric-objects.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_00-load_create-geometric-"
"objects.py>` to download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_00-load_create-geometric-"
"objects.py>` to download the full example code"

#: ../../pyvista/docs/examples/00-load/create-geometric-objects.rst:24
msgid "Geometric Objects"
msgstr "ジオメトリオブジェクト"

#: ../../pyvista/docs/examples/00-load/create-geometric-objects.rst:26
msgid "The \"Hello, world!\" of VTK"
msgstr "VTKの \"Hello, world!\""

#: ../../pyvista/docs/examples/00-load/create-geometric-objects.rst:43
msgid ""
"This runs through several of the available geometric objects available in "
"VTK which PyVista provides simple convenience methods for generating."
msgstr ""
"これは，VTKで利用可能ないくつかのジオメトリックオブジェクトを介して実行され，PyVistaは生成するための簡単で便利なメソッドを提供します．"

#: ../../pyvista/docs/examples/00-load/create-geometric-objects.rst:46
msgid "Let's run through creating a few geometric objects!"
msgstr "ジオメトリオブジェクトをいくつか作成してみましょう!"

#: ../../pyvista/docs/examples/00-load/create-geometric-objects.rst:72
msgid "Now let's plot them all in one window"
msgstr "ここで，すべてを1つのウィンドウにプロットします．"

#: ../../pyvista/docs/examples/00-load/create-geometric-objects.rst:113
#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:69
#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:105
#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:149
#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:183
#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:218
#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:252
#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:286
#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:320
#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:354
#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:388
#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:422
#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:456
#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:490
#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:524
#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:558
#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:592
#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:626
#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:661
#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:695
#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:729
#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:763
#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:797
#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:842
#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:881
#: ../../pyvista/docs/examples/00-load/create-point-cloud.rst:80
#: ../../pyvista/docs/examples/00-load/create-point-cloud.rst:145
#: ../../pyvista/docs/examples/00-load/create-point-cloud.rst:176
#: ../../pyvista/docs/examples/00-load/create-point-cloud.rst:238
#: ../../pyvista/docs/examples/00-load/create-point-cloud.rst:284
#: ../../pyvista/docs/examples/00-load/create-point-cloud.rst:342
#: ../../pyvista/docs/examples/00-load/create-poly.rst:82
#: ../../pyvista/docs/examples/00-load/create-spline.rst:72
#: ../../pyvista/docs/examples/00-load/create-spline.rst:153
#: ../../pyvista/docs/examples/00-load/create-spline.rst:198
#: ../../pyvista/docs/examples/00-load/create-spline.rst:252
#: ../../pyvista/docs/examples/00-load/create-spline.rst:289
#: ../../pyvista/docs/examples/00-load/create-spline.rst:325
#: ../../pyvista/docs/examples/00-load/create-structured-surface.rst:95
#: ../../pyvista/docs/examples/00-load/create-structured-surface.rst:124
#: ../../pyvista/docs/examples/00-load/create-structured-surface.rst:154
#: ../../pyvista/docs/examples/00-load/create-structured-surface.rst:219
#: ../../pyvista/docs/examples/00-load/create-structured-surface.rst:306
#: ../../pyvista/docs/examples/00-load/create-structured-surface.rst:349
#: ../../pyvista/docs/examples/00-load/create-structured-surface.rst:382
#: ../../pyvista/docs/examples/00-load/create-surface-draped.rst:116
#: ../../pyvista/docs/examples/00-load/create-surface-draped.rst:203
#: ../../pyvista/docs/examples/00-load/create-tri-surface.rst:72
#: ../../pyvista/docs/examples/00-load/create-tri-surface.rst:109
#: ../../pyvista/docs/examples/00-load/create-tri-surface.rst:144
#: ../../pyvista/docs/examples/00-load/create-tri-surface.rst:224
#: ../../pyvista/docs/examples/00-load/create-tri-surface.rst:258
#: ../../pyvista/docs/examples/00-load/create-tri-surface.rst:305
#: ../../pyvista/docs/examples/00-load/create-uniform-grid.rst:90
#: ../../pyvista/docs/examples/00-load/create-uniform-grid.rst:144
#: ../../pyvista/docs/examples/00-load/create-unstructured-surface.rst:204
#: ../../pyvista/docs/examples/00-load/read-dolfin.rst:63
#: ../../pyvista/docs/examples/00-load/read-dolfin.rst:130
#: ../../pyvista/docs/examples/00-load/read-file.rst:72
#: ../../pyvista/docs/examples/00-load/read-file.rst:130
#: ../../pyvista/docs/examples/00-load/read-file.rst:158
#: ../../pyvista/docs/examples/00-load/read-file.rst:191
#: ../../pyvista/docs/examples/00-load/read-file.rst:236
#: ../../pyvista/docs/examples/00-load/read-file.rst:269
#: ../../pyvista/docs/examples/00-load/read-file.rst:302
#: ../../pyvista/docs/examples/00-load/read-file.rst:334
#: ../../pyvista/docs/examples/00-load/read-image.rst:90
#: ../../pyvista/docs/examples/00-load/read-image.rst:118
#: ../../pyvista/docs/examples/00-load/read-parallel.rst:112
#: ../../pyvista/docs/examples/00-load/read-parallel.rst:133
#: ../../pyvista/docs/examples/00-load/read-parallel.rst:212
#: ../../pyvista/docs/examples/00-load/read-parallel.rst:238
#: ../../pyvista/docs/examples/00-load/terrain-mesh.rst:122
#: ../../pyvista/docs/examples/00-load/terrain-mesh.rst:193
#: ../../pyvista/docs/examples/00-load/terrain-mesh.rst:279
#: ../../pyvista/docs/examples/00-load/wrap-trimesh.rst:74
#: ../../pyvista/docs/examples/00-load/wrap-trimesh.rst:106
#: ../../pyvista/docs/examples/00-load/wrap-trimesh.rst:149
#: ../../pyvista/docs/examples/01-filter/boolean-operations.rst:74
#: ../../pyvista/docs/examples/01-filter/boolean-operations.rst:115
#: ../../pyvista/docs/examples/01-filter/boolean-operations.rst:159
#: ../../pyvista/docs/examples/01-filter/boolean-operations.rst:203
#: ../../pyvista/docs/examples/01-filter/boolean-operations.rst:235
#: ../../pyvista/docs/examples/01-filter/boolean-operations.rst:276
#: ../../pyvista/docs/examples/01-filter/cell-centers.rst:75
#: ../../pyvista/docs/examples/01-filter/cell-centers.rst:119
#: ../../pyvista/docs/examples/01-filter/cell-centers.rst:149
#: ../../pyvista/docs/examples/01-filter/clipping.rst:76
#: ../../pyvista/docs/examples/01-filter/clipping.rst:121
#: ../../pyvista/docs/examples/01-filter/clipping.rst:166
#: ../../pyvista/docs/examples/01-filter/clipping.rst:206
#: ../../pyvista/docs/examples/01-filter/clipping-with-surface.rst:81
#: ../../pyvista/docs/examples/01-filter/clipping-with-surface.rst:127
#: ../../pyvista/docs/examples/01-filter/clipping-with-surface.rst:162
#: ../../pyvista/docs/examples/01-filter/clipping-with-surface.rst:204
#: ../../pyvista/docs/examples/01-filter/clipping-with-surface.rst:245
#: ../../pyvista/docs/examples/01-filter/compute-normals.rst:67
#: ../../pyvista/docs/examples/01-filter/compute-normals.rst:112
#: ../../pyvista/docs/examples/01-filter/compute-normals.rst:159
#: ../../pyvista/docs/examples/01-filter/compute-volume.rst:135
#: ../../pyvista/docs/examples/01-filter/compute-volume.rst:182
#: ../../pyvista/docs/examples/01-filter/compute-volume.rst:225
#: ../../pyvista/docs/examples/01-filter/compute-volume.rst:273
#: ../../pyvista/docs/examples/01-filter/compute-volume.rst:302
#: ../../pyvista/docs/examples/01-filter/compute-volume.rst:386
#: ../../pyvista/docs/examples/01-filter/compute-volume.rst:435
#: ../../pyvista/docs/examples/01-filter/connectivity.rst:73
#: ../../pyvista/docs/examples/01-filter/connectivity.rst:116
#: ../../pyvista/docs/examples/01-filter/contouring.rst:77
#: ../../pyvista/docs/examples/01-filter/contouring.rst:120
#: ../../pyvista/docs/examples/01-filter/decimate.rst:54
#: ../../pyvista/docs/examples/01-filter/decimate.rst:84
#: ../../pyvista/docs/examples/01-filter/decimate.rst:112
#: ../../pyvista/docs/examples/01-filter/decimate.rst:142
#: ../../pyvista/docs/examples/01-filter/decimate.rst:189
#: ../../pyvista/docs/examples/01-filter/distance-between-surfaces.rst:86
#: ../../pyvista/docs/examples/01-filter/distance-between-surfaces.rst:149
#: ../../pyvista/docs/examples/01-filter/distance-between-surfaces.rst:178
#: ../../pyvista/docs/examples/01-filter/distance-between-surfaces.rst:216
#: ../../pyvista/docs/examples/01-filter/distance-between-surfaces.rst:243
#: ../../pyvista/docs/examples/01-filter/extract-cells-inside-surface.rst:62
#: ../../pyvista/docs/examples/01-filter/extract-cells-inside-surface.rst:160
#: ../../pyvista/docs/examples/01-filter/extract-edges.rst:84
#: ../../pyvista/docs/examples/01-filter/extract-edges.rst:126
#: ../../pyvista/docs/examples/01-filter/extract-edges.rst:175
#: ../../pyvista/docs/examples/01-filter/extract-edges.rst:212
#: ../../pyvista/docs/examples/01-filter/extract-surface.rst:111
#: ../../pyvista/docs/examples/01-filter/extract-surface.rst:149
#: ../../pyvista/docs/examples/01-filter/extrude-rotate.rst:118
#: ../../pyvista/docs/examples/01-filter/extrude-rotate.rst:173
#: ../../pyvista/docs/examples/01-filter/gaussian-smoothing.rst:100
#: ../../pyvista/docs/examples/01-filter/gaussian-smoothing.rst:153
#: ../../pyvista/docs/examples/01-filter/geodesic.rst:97
#: ../../pyvista/docs/examples/01-filter/geodesic.rst:124
#: ../../pyvista/docs/examples/01-filter/glyphs.rst:83
#: ../../pyvista/docs/examples/01-filter/glyphs.rst:131
#: ../../pyvista/docs/examples/01-filter/glyphs.rst:165
#: ../../pyvista/docs/examples/01-filter/glyphs.rst:211
#: ../../pyvista/docs/examples/01-filter/glyphs_table.rst:104
#: ../../pyvista/docs/examples/01-filter/gradients.rst:98
#: ../../pyvista/docs/examples/01-filter/gradients.rst:150
#: ../../pyvista/docs/examples/01-filter/gradients.rst:253
#: ../../pyvista/docs/examples/01-filter/gradients.rst:284
#: ../../pyvista/docs/examples/01-filter/gradients.rst:324
#: ../../pyvista/docs/examples/01-filter/interpolate.rst:72
#: ../../pyvista/docs/examples/01-filter/interpolate.rst:111
#: ../../pyvista/docs/examples/01-filter/interpolate.rst:194
#: ../../pyvista/docs/examples/01-filter/interpolate.rst:251
#: ../../pyvista/docs/examples/01-filter/mesh-quality.rst:107
#: ../../pyvista/docs/examples/01-filter/poly-ray-trace.rst:37
#: ../../pyvista/docs/examples/01-filter/project-plane.rst:50
#: ../../pyvista/docs/examples/01-filter/project-plane.rst:88
#: ../../pyvista/docs/examples/01-filter/reflect.rst:104
#: ../../pyvista/docs/examples/01-filter/resample.rst:90
#: ../../pyvista/docs/examples/01-filter/resample.rst:125
#: ../../pyvista/docs/examples/01-filter/resample.rst:185
#: ../../pyvista/docs/examples/01-filter/slicing.rst:77
#: ../../pyvista/docs/examples/01-filter/slicing.rst:114
#: ../../pyvista/docs/examples/01-filter/slicing.rst:146
#: ../../pyvista/docs/examples/01-filter/slicing.rst:185
#: ../../pyvista/docs/examples/01-filter/slicing.rst:221
#: ../../pyvista/docs/examples/01-filter/slicing.rst:359
#: ../../pyvista/docs/examples/01-filter/slicing.rst:432
#: ../../pyvista/docs/examples/01-filter/slicing.rst:542
#: ../../pyvista/docs/examples/01-filter/streamlines.rst:124
#: ../../pyvista/docs/examples/01-filter/streamlines.rst:184
#: ../../pyvista/docs/examples/01-filter/streamlines.rst:252
#: ../../pyvista/docs/examples/01-filter/streamlines.rst:327
#: ../../pyvista/docs/examples/01-filter/subdivide.rst:130
#: ../../pyvista/docs/examples/01-filter/surface-smoothing.rst:74
#: ../../pyvista/docs/examples/01-filter/surface-smoothing.rst:112
#: ../../pyvista/docs/examples/01-filter/surface-smoothing.rst:147
#: ../../pyvista/docs/examples/01-filter/surface-smoothing.rst:181
#: ../../pyvista/docs/examples/01-filter/using-filters.rst:113
#: ../../pyvista/docs/examples/01-filter/using-filters.rst:171
#: ../../pyvista/docs/examples/01-filter/using-filters.rst:237
#: ../../pyvista/docs/examples/01-filter/voxelize.rst:88
#: ../../pyvista/docs/examples/01-filter/voxelize.rst:125
#: ../../pyvista/docs/examples/01-filter/voxelize.rst:198
#: ../../pyvista/docs/examples/01-filter/voxelize.rst:274
#: ../../pyvista/docs/examples/01-filter/warp-by-vector.rst:61
#: ../../pyvista/docs/examples/01-filter/warp-by-vector.rst:102
#: ../../pyvista/docs/examples/02-plot/background_image.rst:67
#: ../../pyvista/docs/examples/02-plot/background_image.rst:118
#: ../../pyvista/docs/examples/02-plot/clear.rst:63
#: ../../pyvista/docs/examples/02-plot/clear.rst:100
#: ../../pyvista/docs/examples/02-plot/clear.rst:136
#: ../../pyvista/docs/examples/02-plot/cmap.rst:138
#: ../../pyvista/docs/examples/02-plot/cmap.rst:171
#: ../../pyvista/docs/examples/02-plot/cmap.rst:203
#: ../../pyvista/docs/examples/02-plot/cmap.rst:243
#: ../../pyvista/docs/examples/02-plot/cmap.rst:304
#: ../../pyvista/docs/examples/02-plot/depth-peeling.rst:97
#: ../../pyvista/docs/examples/02-plot/depth-peeling.rst:150
#: ../../pyvista/docs/examples/02-plot/depth-peeling.rst:199
#: ../../pyvista/docs/examples/02-plot/edges.rst:63
#: ../../pyvista/docs/examples/02-plot/edl.rst:76
#: ../../pyvista/docs/examples/02-plot/edl.rst:123
#: ../../pyvista/docs/examples/02-plot/edl.rst:182
#: ../../pyvista/docs/examples/02-plot/edl.rst:220
#: ../../pyvista/docs/examples/02-plot/edl.rst:255
#: ../../pyvista/docs/examples/02-plot/floors.rst:37
#: ../../pyvista/docs/examples/02-plot/ghost-cells.rst:90
#: ../../pyvista/docs/examples/02-plot/image_depth.rst:55
#: ../../pyvista/docs/examples/02-plot/interpolate-before-map.rst:99
#: ../../pyvista/docs/examples/02-plot/interpolate-before-map.rst:151
#: ../../pyvista/docs/examples/02-plot/interpolate-before-map.rst:204
#: ../../pyvista/docs/examples/02-plot/interpolate-before-map.rst:252
#: ../../pyvista/docs/examples/02-plot/isovalue.rst:184
#: ../../pyvista/docs/examples/02-plot/labels.rst:132
#: ../../pyvista/docs/examples/02-plot/labels.rst:202
#: ../../pyvista/docs/examples/02-plot/labels.rst:259
#: ../../pyvista/docs/examples/02-plot/lighting_mesh.rst:74
#: ../../pyvista/docs/examples/02-plot/lighting_mesh.rst:105
#: ../../pyvista/docs/examples/02-plot/lighting_mesh.rst:149
#: ../../pyvista/docs/examples/02-plot/lighting_mesh.rst:180
#: ../../pyvista/docs/examples/02-plot/lighting_mesh.rst:212
#: ../../pyvista/docs/examples/02-plot/lighting_mesh.rst:244
#: ../../pyvista/docs/examples/02-plot/multi-window.rst:91
#: ../../pyvista/docs/examples/02-plot/multi-window.rst:132
#: ../../pyvista/docs/examples/02-plot/multi-window.rst:192
#: ../../pyvista/docs/examples/02-plot/multi-window.rst:287
#: ../../pyvista/docs/examples/02-plot/opacity.rst:75
#: ../../pyvista/docs/examples/02-plot/opacity.rst:128
#: ../../pyvista/docs/examples/02-plot/opacity.rst:157
#: ../../pyvista/docs/examples/02-plot/opacity.rst:244
#: ../../pyvista/docs/examples/02-plot/opacity.rst:313
#: ../../pyvista/docs/examples/02-plot/opacity.rst:352
#: ../../pyvista/docs/examples/02-plot/opacity.rst:401
#: ../../pyvista/docs/examples/02-plot/ortho-slices.rst:46
#: ../../pyvista/docs/examples/02-plot/ortho-slices.rst:98
#: ../../pyvista/docs/examples/02-plot/ortho-slices.rst:150
#: ../../pyvista/docs/examples/02-plot/pbr.rst:92
#: ../../pyvista/docs/examples/02-plot/pbr.rst:140
#: ../../pyvista/docs/examples/02-plot/plot-over-circular-arc.rst:86
#: ../../pyvista/docs/examples/02-plot/plot-over-line.rst:77
#: ../../pyvista/docs/examples/02-plot/plot-over-line.rst:148
#: ../../pyvista/docs/examples/02-plot/scalar-bars.rst:77
#: ../../pyvista/docs/examples/02-plot/scalar-bars.rst:146
#: ../../pyvista/docs/examples/02-plot/scalar-bars.rst:192
#: ../../pyvista/docs/examples/02-plot/scalar-bars.rst:228
#: ../../pyvista/docs/examples/02-plot/scalar-bars.rst:268
#: ../../pyvista/docs/examples/02-plot/screenshot.rst:69
#: ../../pyvista/docs/examples/02-plot/shading.rst:65
#: ../../pyvista/docs/examples/02-plot/shading.rst:95
#: ../../pyvista/docs/examples/02-plot/silhouette.rst:89
#: ../../pyvista/docs/examples/02-plot/silhouette.rst:130
#: ../../pyvista/docs/examples/02-plot/silhouette.rst:188
#: ../../pyvista/docs/examples/02-plot/silhouette.rst:232
#: ../../pyvista/docs/examples/02-plot/spherical.rst:131
#: ../../pyvista/docs/examples/02-plot/spherical.rst:202
#: ../../pyvista/docs/examples/02-plot/spherical.rst:261
#: ../../pyvista/docs/examples/02-plot/texture.rst:75
#: ../../pyvista/docs/examples/02-plot/texture.rst:121
#: ../../pyvista/docs/examples/02-plot/texture.rst:161
#: ../../pyvista/docs/examples/02-plot/texture.rst:196
#: ../../pyvista/docs/examples/02-plot/texture.rst:237
#: ../../pyvista/docs/examples/02-plot/texture.rst:291
#: ../../pyvista/docs/examples/02-plot/texture.rst:328
#: ../../pyvista/docs/examples/02-plot/texture.rst:356
#: ../../pyvista/docs/examples/02-plot/texture.rst:444
#: ../../pyvista/docs/examples/02-plot/texture.rst:484
#: ../../pyvista/docs/examples/02-plot/texture.rst:537
#: ../../pyvista/docs/examples/02-plot/themes.rst:96
#: ../../pyvista/docs/examples/02-plot/themes.rst:139
#: ../../pyvista/docs/examples/02-plot/themes.rst:173
#: ../../pyvista/docs/examples/02-plot/themes.rst:208
#: ../../pyvista/docs/examples/02-plot/themes.rst:244
#: ../../pyvista/docs/examples/02-plot/topo-map.rst:99
#: ../../pyvista/docs/examples/02-plot/topo-map.rst:154
#: ../../pyvista/docs/examples/02-plot/topo-map.rst:185
#: ../../pyvista/docs/examples/02-plot/topo-map.rst:228
#: ../../pyvista/docs/examples/02-plot/vector-component.rst:107
#: ../../pyvista/docs/examples/02-plot/volume.rst:103
#: ../../pyvista/docs/examples/02-plot/volume.rst:142
#: ../../pyvista/docs/examples/02-plot/volume.rst:178
#: ../../pyvista/docs/examples/02-plot/volume.rst:218
#: ../../pyvista/docs/examples/02-plot/volume.rst:258
#: ../../pyvista/docs/examples/02-plot/volume.rst:291
#: ../../pyvista/docs/examples/02-plot/volume.rst:327
#: ../../pyvista/docs/examples/02-plot/volume.rst:412
#: ../../pyvista/docs/examples/02-plot/volume.rst:454
#: ../../pyvista/docs/examples/02-plot/volume.rst:491
#: ../../pyvista/docs/examples/03-widgets/box-widget.rst:75
#: ../../pyvista/docs/examples/03-widgets/box-widget.rst:101
#: ../../pyvista/docs/examples/03-widgets/checkbox-widget.rst:73
#: ../../pyvista/docs/examples/03-widgets/checkbox-widget.rst:154
#: ../../pyvista/docs/examples/03-widgets/line-widget.rst:88
#: ../../pyvista/docs/examples/03-widgets/multi-slider-widget.rst:123
#: ../../pyvista/docs/examples/03-widgets/plane-widget.rst:57
#: ../../pyvista/docs/examples/03-widgets/plane-widget.rst:84
#: ../../pyvista/docs/examples/03-widgets/plane-widget.rst:128
#: ../../pyvista/docs/examples/03-widgets/plane-widget.rst:155
#: ../../pyvista/docs/examples/03-widgets/plane-widget.rst:217
#: ../../pyvista/docs/examples/03-widgets/plane-widget.rst:260
#: ../../pyvista/docs/examples/03-widgets/plane-widget.rst:293
#: ../../pyvista/docs/examples/03-widgets/slider-bar-widget.rst:73
#: ../../pyvista/docs/examples/03-widgets/slider-bar-widget.rst:100
#: ../../pyvista/docs/examples/03-widgets/slider-bar-widget.rst:157
#: ../../pyvista/docs/examples/03-widgets/sphere-widget.rst:92
#: ../../pyvista/docs/examples/03-widgets/sphere-widget.rst:153
#: ../../pyvista/docs/examples/03-widgets/sphere-widget.rst:266
#: ../../pyvista/docs/examples/03-widgets/spline-widget.rst:81
#: ../../pyvista/docs/examples/04-lights/actors.rst:74
#: ../../pyvista/docs/examples/04-lights/actors.rst:126
#: ../../pyvista/docs/examples/04-lights/actors.rst:176
#: ../../pyvista/docs/examples/04-lights/attenuation.rst:79
#: ../../pyvista/docs/examples/04-lights/attenuation.rst:132
#: ../../pyvista/docs/examples/04-lights/attenuation.rst:189
#: ../../pyvista/docs/examples/04-lights/beam_shape.rst:62
#: ../../pyvista/docs/examples/04-lights/beam_shape.rst:112
#: ../../pyvista/docs/examples/04-lights/beam_shape.rst:164
#: ../../pyvista/docs/examples/04-lights/beam_shape.rst:231
#: ../../pyvista/docs/examples/04-lights/beam_shape.rst:290
#: ../../pyvista/docs/examples/04-lights/light_types.rst:70
#: ../../pyvista/docs/examples/04-lights/light_types.rst:116
#: ../../pyvista/docs/examples/04-lights/light_types.rst:156
#: ../../pyvista/docs/examples/04-lights/mesh_lighting.rst:59
#: ../../pyvista/docs/examples/04-lights/mesh_lighting.rst:94
#: ../../pyvista/docs/examples/04-lights/plotter_builtins.rst:66
#: ../../pyvista/docs/examples/04-lights/plotter_builtins.rst:100
#: ../../pyvista/docs/examples/04-lights/plotter_builtins.rst:140
#: ../../pyvista/docs/examples/04-lights/plotter_builtins.rst:175
#: ../../pyvista/docs/examples/04-lights/plotter_builtins.rst:217
#: ../../pyvista/docs/examples/04-lights/plotter_builtins.rst:259
#: ../../pyvista/docs/examples/04-lights/shadows.rst:117
#: ../../pyvista/docs/examples/04-lights/shadows.rst:168
#: ../../pyvista/docs/examples/04-lights/shadows.rst:217
#: ../../pyvista/docs/examples/99-advanced/antarctica-compare.rst:125
#: ../../pyvista/docs/examples/99-advanced/antarctica-compare.rst:155
#: ../../pyvista/docs/examples/99-advanced/antarctica-compare.rst:201
#: ../../pyvista/docs/examples/99-advanced/antarctica-compare.rst:240
#: ../../pyvista/docs/examples/99-advanced/antarctica-compare.rst:288
#: ../../pyvista/docs/examples/99-advanced/antarctica-compare.rst:325
#: ../../pyvista/docs/examples/99-advanced/antarctica-compare.rst:357
#: ../../pyvista/docs/examples/99-advanced/ray-trace.rst:37
#: ../../pyvista/docs/examples/99-advanced/warp-by-vector-eigenmodes.rst:203
#: ../../pyvista/docs/examples/99-advanced/warp-by-vector-eigenmodes.rst:278
#: ../../pyvista/docs/examples/99-advanced/warp-by-vector-eigenmodes.rst:321
msgid "Out:"
msgstr "出力:"

#: ../../pyvista/docs/examples/00-load/create-geometric-objects.rst:127
msgid "**Total running time of the script:** ( 0 minutes  1.706 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.706 seconds)"

#: ../../pyvista/docs/examples/00-load/create-geometric-objects.rst:142
msgid ""
":download:`Download Python source code: create-geometric-objects.py <create-"
"geometric-objects.py>`"
msgstr ""
":download:`Download Python source code: create-geometric-objects.py <create-"
"geometric-objects.py>`"

#: ../../pyvista/docs/examples/00-load/create-geometric-objects.rst:148
msgid ""
":download:`Download Jupyter notebook: create-geometric-objects.ipynb "
"<create-geometric-objects.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: create-geometric-objects.ipynb "
"<create-geometric-objects.ipynb>`"

#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_00-load_create-parametric-"
"geometric-objects.py>` to download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_00-load_create-parametric-"
"geometric-objects.py>` to download the full example code"

#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:24
msgid "Parametric Geometric Objects"
msgstr "パラメトリックジオメトリオブジェクト"

#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:26
msgid "Creating parametric objects"
msgstr "パラメトリックオブジェクトを作成する"

#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:46
msgid "This example demonstrates how to plot parametric objects using pyvista"
msgstr "この例では，pyvistaを使用してパラメトリックオブジェクトをプロットする方法を示します．"

#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:49
msgid "Supertoroid"
msgstr "スーパートロイド"

#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:83
msgid "Parametric Ellipsoid"
msgstr "パラメトリック楕円体"

#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:119
msgid "Partial Parametric Ellipsoid"
msgstr "部分パラメトリック楕円体"

#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:163
msgid "Pseudosphere"
msgstr "Pseudosphere"

#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:197
msgid "Bohemian Dome"
msgstr "Bohemianドーム"

#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:232
msgid "Bour"
msgstr "Bour"

#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:266
msgid "Boy's Surface"
msgstr "Boyの表面"

#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:300
msgid "Catalan Minimal"
msgstr "Catalan最小"

#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:334
msgid "Conic Spiral"
msgstr "円錐スパイラル"

#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:368
msgid "Cross Cap"
msgstr "クロスキャップ"

#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:402
msgid "Dini"
msgstr "ディーニ"

#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:436
msgid "Enneper"
msgstr "Enneper"

#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:470
msgid "Figure-8 Klein"
msgstr "字形-8 Klein"

#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:504
msgid "Henneberg"
msgstr "Henneberg"

#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:538
msgid "Klein"
msgstr "Klein"

#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:572
msgid "Kuen"
msgstr "Kuen"

#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:606
msgid "Mobius"
msgstr "Mobius"

#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:640
msgid "Plucker Conoid"
msgstr "Plucker Conoid"

#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:675
msgid "Random Hills"
msgstr "ランダムな丘"

#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:709
msgid "Roman"
msgstr "ローマン"

#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:743
msgid "Super Ellipsoid"
msgstr "スーパー楕円体"

#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:777
msgid "Torus"
msgstr "トーラス"

#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:811
msgid "Circular Arc"
msgstr "円弧"

#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:856
msgid "Extruded Half Arc"
msgstr "押し出し半円弧"

#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:895
msgid "**Total running time of the script:** ( 0 minutes  15.153 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  15.153 seconds)"

#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:910
msgid ""
":download:`Download Python source code: create-parametric-geometric-"
"objects.py <create-parametric-geometric-objects.py>`"
msgstr ""
":download:`Download Python source code: create-parametric-geometric-"
"objects.py <create-parametric-geometric-objects.py>`"

#: ../../pyvista/docs/examples/00-load/create-parametric-geometric-objects.rst:916
msgid ""
":download:`Download Jupyter notebook: create-parametric-geometric-"
"objects.ipynb <create-parametric-geometric-objects.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: create-parametric-geometric-"
"objects.ipynb <create-parametric-geometric-objects.ipynb>`"

#: ../../pyvista/docs/examples/00-load/create-point-cloud.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_00-load_create-point-cloud.py>`"
" to download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_00-load_create-point-cloud.py>`"
" to download the full example code"

#: ../../pyvista/docs/examples/00-load/create-point-cloud.rst:24
msgid "Create Point Cloud"
msgstr "点群を作成"

#: ../../pyvista/docs/examples/00-load/create-point-cloud.rst:26
msgid ""
"Create a :class:`pyvista.PolyData` object from a point cloud of vertices and"
" scalar arrays for those points."
msgstr "頂点のポイントクラウドとそれらのポイントのスカラー配列から :class:`pyvista.PolyData` オブジェクトを作成します．"

#: ../../pyvista/docs/examples/00-load/create-point-cloud.rst:49
msgid ""
"Point clouds are generally constructed in the :class:`pyvista.PolyData` "
"class and can easily have scalar/vector data arrays associated with the "
"point cloud. In this example, we'll work a bit backwards using a point cloud"
" that that is available from our ``examples`` module. This however is no "
"different than creating a PyVista mesh with your own NumPy arrays of vertice"
" locations."
msgstr ""
"点群は一般に :class:`pyvista.PolyData` "
"クラスで構成され，点群に関連付けられたスカラー/ベクトルデータ配列を簡単に持つことができます．この例では， ``examples`` "
"モジュールから使用可能な点群を使用して，少し逆方向に作業します．ただし，これは独自の頂点位置のNumPy配列を使用してPyVistaメッシュを作成するのと同じです．"

#: ../../pyvista/docs/examples/00-load/create-point-cloud.rst:95
msgid ""
"Now that you have a NumPy array of points/vertices either from our sample "
"data or your own project, creating a PyVista mesh of those points is simply:"
msgstr ""
"サンプルデータまたは独自のプロジェクトからポイント/頂点のNumPy配列を取得したので，これらのポイントのPyVistaメッシュを作成するのは簡単です．"

#: ../../pyvista/docs/examples/00-load/create-point-cloud.rst:110
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>67841</td></tr>\n"
"<tr><td>N Points</td><td>67841</td></tr>\n"
"<tr><td>X Bounds</td><td>4.809e+05, 4.811e+05</td></tr>\n"
"<tr><td>Y Bounds</td><td>4.400e+06, 4.400e+06</td></tr>\n"
"<tr><td>Z Bounds</td><td>1.754e+03, 1.784e+03</td></tr>\n"
"<tr><td>N Arrays</td><td>0</td></tr>\n"
"</table>\n"
"\n"
"\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>67841</td></tr>\n"
"<tr><td>N Points</td><td>67841</td></tr>\n"
"<tr><td>X Bounds</td><td>4.809e+05, 4.811e+05</td></tr>\n"
"<tr><td>Y Bounds</td><td>4.400e+06, 4.400e+06</td></tr>\n"
"<tr><td>Z Bounds</td><td>1.754e+03, 1.784e+03</td></tr>\n"
"<tr><td>N Arrays</td><td>0</td></tr>\n"
"</table>\n"
"\n"
"\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/docs/examples/00-load/create-point-cloud.rst:131
msgid "And we can even do a sanity check"
msgstr "健全性のチェックもできます"

#: ../../pyvista/docs/examples/00-load/create-point-cloud.rst:156
msgid ""
"And now that we have a PyVista mesh, we can plot it. Note that we add an "
"option to use eye dome lighting - this is a shading technique to improve "
"depth perception with point clouds (learn more in :ref:`ref_edl`)."
msgstr ""
"これでPyVistaメッシュができたので，プロットすることができます．ここでは，eye "
"domeライティングを使用するオプションを追加します．これは，ポイントクラウド( :ref:`ref_edl` "
"についてもっと学ぶ)を使用してデプスの認識を向上させるシェーディング技法です．"

#: ../../pyvista/docs/examples/00-load/create-point-cloud.rst:189
msgid ""
"Now what if you have data attributes (scalar/vector arrays) that you'd like "
"to associate with every node of your mesh? You can easily add NumPy data "
"arrays that have a length equal to the number of points in the mesh along "
"the first axis. For example, lets add a few arrays to this new "
"``point_cloud`` mesh."
msgstr ""
"ここで，メッシュのすべてのノードに関連付けるデータアトリビュート(スカラー/ベクトル配列)があるとします．最初の軸に沿ったメッシュ内の点の数と同じ長さのNumPyデータ配列を簡単に追加できます．例えば，この新しい"
" ``point_cloud`` メッシュにいくつかの配列を追加しましょう．"

#: ../../pyvista/docs/examples/00-load/create-point-cloud.rst:195
msgid ""
"Make an array of scalar values with the same length as the points array. "
"Each element in this array will correspond to points at the same index:"
msgstr "points配列と同じ長さのスカラ値の配列を作成します．この配列の各要素は，同じインデックスのポイントに対応します．"

#: ../../pyvista/docs/examples/00-load/create-point-cloud.rst:218
msgid ""
"And now we can plot the point cloud with that random data. PyVista is smart "
"enough to plot the scalar array you added by default. Note that this time, "
"we specify to render every point as its own sphere."
msgstr ""
"これで，ランダムデータを使用して点群をプロットできます．PyVistaは，デフォルトで追加したスカラー配列をプロットするのに十分な性能を持っています．ここでは，すべてのポイントを独自の球としてレンダリングするように指定します．"

#: ../../pyvista/docs/examples/00-load/create-point-cloud.rst:251
msgid ""
"That data is kind of boring, right? You can also add data arrays with more "
"than one scalar value - perhaps a vector with three elements? Let's make a "
"little function that will compute vectors for every node in the point cloud "
"and add those vectors to the mesh."
msgstr ""
"そのデータは退屈ですよね?複数のスカラ値を持つデータ配列，例えば3つの要素を持つベクトルを追加することもできます．ポイントクラウド内のすべてのノードのベクトルを計算し，それらのベクトルをメッシュに追加する簡単な関数を作成します．"

#: ../../pyvista/docs/examples/00-load/create-point-cloud.rst:256
msgid "This time, we're going to create a totally new, random point cloud."
msgstr ""
"そのデータは退屈ですよね?複数のスカラ値を持つデータ配列，例えば3つの要素を持つベクトルを追加することもできます．ポイントクラウド内のすべてのノードのベクトルを計算し，それらのベクトルをメッシュに追加する簡単な関数を作成します．"

#: ../../pyvista/docs/examples/00-load/create-point-cloud.rst:313
msgid ""
"Now we can make arrows using those vectors using the glyph filter (see "
":ref:`glyph_example` for more details)."
msgstr ""
"今度は，グリフフィルター(詳細は :ref:`glyph_example` を参照)を使って，これらのベクトルを使って矢印を作ることができます．"

#: ../../pyvista/docs/examples/00-load/create-point-cloud.rst:356
msgid "**Total running time of the script:** ( 0 minutes  6.452 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  6.452 seconds)"

#: ../../pyvista/docs/examples/00-load/create-point-cloud.rst:371
msgid ""
":download:`Download Python source code: create-point-cloud.py <create-point-"
"cloud.py>`"
msgstr ""
":download:`Download Python source code: create-point-cloud.py <create-point-"
"cloud.py>`"

#: ../../pyvista/docs/examples/00-load/create-point-cloud.rst:377
msgid ""
":download:`Download Jupyter notebook: create-point-cloud.ipynb <create-"
"point-cloud.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: create-point-cloud.ipynb <create-"
"point-cloud.ipynb>`"

#: ../../pyvista/docs/examples/00-load/create-poly.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_00-load_create-poly.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_00-load_create-poly.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/00-load/create-poly.rst:24
msgid "Create PolyData"
msgstr "PolyDataを作成"

#: ../../pyvista/docs/examples/00-load/create-poly.rst:26
msgid ""
"Creating a PolyData (triangulated surface) object from NumPy arrays of the "
"vertices and faces."
msgstr "頂点と面のNumPy配列からPolyData (三角面)オブジェクトを作成する．"

#: ../../pyvista/docs/examples/00-load/create-poly.rst:47
msgid ""
"A PolyData object can be created quickly from numpy arrays.  The vertex "
"array contains the locations of the points in the mesh and the face array "
"contains the number of points of each face and the indices of the vertices "
"which comprise that face."
msgstr ""
"PolyDataオブジェクトは，多数の配列からすばやく作成できます．頂点配列にはメッシュ内の点の位置が含まれ，面配列には各面の点の数とその面を構成する頂点のインデックスが含まれます．"

#: ../../pyvista/docs/examples/00-load/create-poly.rst:96
msgid "**Total running time of the script:** ( 0 minutes  0.597 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  0.597 seconds)"

#: ../../pyvista/docs/examples/00-load/create-poly.rst:111
msgid ""
":download:`Download Python source code: create-poly.py <create-poly.py>`"
msgstr ""
":download:`Download Python source code: create-poly.py <create-poly.py>`"

#: ../../pyvista/docs/examples/00-load/create-poly.rst:117
msgid ""
":download:`Download Jupyter notebook: create-poly.ipynb <create-poly.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: create-poly.ipynb <create-poly.ipynb>`"

#: ../../pyvista/docs/examples/00-load/create-spline.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_00-load_create-spline.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_00-load_create-spline.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/00-load/create-spline.rst:24
msgid "Creating a Spline"
msgstr "スプラインの作成"

#: ../../pyvista/docs/examples/00-load/create-spline.rst:26
msgid "Create a spline/polyline from a numpy array of XYZ vertices"
msgstr "XYZ頂点の数の多い配列からスプライン/ポリラインを作成します"

#: ../../pyvista/docs/examples/00-load/create-spline.rst:47
msgid "Create a dataset to plot"
msgstr "プロットするデータセットを作成する"

#: ../../pyvista/docs/examples/00-load/create-spline.rst:87
msgid ""
"Now let's make a function that can create line cells on a "
":class:`pyvista.PolyData` mesh given that the points are in order for the "
"segments they make."
msgstr "ここで， :class:`pyvista.PolyData` メッシュ上にラインセルを作成できる関数を作成しましょう．"

#: ../../pyvista/docs/examples/00-load/create-spline.rst:115
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>99</td></tr>\n"
"<tr><td>N Points</td><td>100</td></tr>\n"
"<tr><td>X Bounds</td><td>-4.084e+00, 4.084e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>-3.281e+00, 5.000e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>-2.000e+00, 2.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>0</td></tr>\n"
"</table>\n"
"\n"
"\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>99</td></tr>\n"
"<tr><td>N Points</td><td>100</td></tr>\n"
"<tr><td>X Bounds</td><td>-4.084e+00, 4.084e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>-3.281e+00, 5.000e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>-2.000e+00, 2.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>0</td></tr>\n"
"</table>\n"
"\n"
"\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/docs/examples/00-load/create-spline.rst:166
msgid ""
"That tube has sharp edges at each line segment. This can be mitigated by "
"creating a single PolyLine cell for all of the points"
msgstr "そのチューブは，各線分セグメントに鋭いエッジを持っています．これは，すべての点に対して単一のポリラインセルを作成することで緩和できます．"

#: ../../pyvista/docs/examples/00-load/create-spline.rst:211
msgid "You could also interpolate those points onto a parametric spline"
msgstr "これらの点をパラメトリックスプライン上に補間することもできます．"

#: ../../pyvista/docs/examples/00-load/create-spline.rst:230
msgid "Plot spline as a tube"
msgstr "スプラインをチューブとしてプロットします"

#: ../../pyvista/docs/examples/00-load/create-spline.rst:265
msgid "The spline can also be plotted as a plain line"
msgstr "スプラインは，プレーンラインとしてプロットすることもできます．"

#: ../../pyvista/docs/examples/00-load/create-spline.rst:303
msgid "Ribbons"
msgstr "リボン"

#: ../../pyvista/docs/examples/00-load/create-spline.rst:305
msgid ""
"Ayy of the lines from the examples above can be used to create ribbons. Take"
" a look at the :func:`pyvista.PolyDataFilters.ribbon` filter."
msgstr ""
"上記の例の線のAyyを使用してリボンを作成できます． :func:`pyvista.PolyDataFilters.ribbon` "
"フィルタを見てください．"

#: ../../pyvista/docs/examples/00-load/create-spline.rst:339
msgid "**Total running time of the script:** ( 0 minutes  3.080 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  3.080 seconds)"

#: ../../pyvista/docs/examples/00-load/create-spline.rst:354
msgid ""
":download:`Download Python source code: create-spline.py <create-spline.py>`"
msgstr ""
":download:`Download Python source code: create-spline.py <create-spline.py>`"

#: ../../pyvista/docs/examples/00-load/create-spline.rst:360
msgid ""
":download:`Download Jupyter notebook: create-spline.ipynb <create-"
"spline.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: create-spline.ipynb <create-"
"spline.ipynb>`"

#: ../../pyvista/docs/examples/00-load/create-structured-surface.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_00-load_create-structured-"
"surface.py>` to download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_00-load_create-structured-"
"surface.py>` to download the full example code"

#: ../../pyvista/docs/examples/00-load/create-structured-surface.rst:24
msgid "Creating a Structured Surface"
msgstr "構造化サーフェスを作成する"

#: ../../pyvista/docs/examples/00-load/create-structured-surface.rst:26
msgid "Create a StructuredGrid surface from NumPy arrays"
msgstr "NumPy配列からStructuredGrid表面を作成します"

#: ../../pyvista/docs/examples/00-load/create-structured-surface.rst:49
msgid "From NumPy Meshgrid"
msgstr "NumPyメッシュグリッドから"

#: ../../pyvista/docs/examples/00-load/create-structured-surface.rst:51
msgid "Create a simple meshgrid using NumPy"
msgstr "NumPyを使用した単純なメッシュグリッドの作成"

#: ../../pyvista/docs/examples/00-load/create-structured-surface.rst:74
msgid "Now pass the NumPy meshgrid to PyVista"
msgstr "ここでNumPyメッシュグリッドをPyVistaに渡します．"

#: ../../pyvista/docs/examples/00-load/create-structured-surface.rst:137
msgid ""
"Generating a structured grid is a one liner in this module, and the points "
"from the resulting surface can be accessed as a NumPy array:"
msgstr "このモジュールでは，構造化されたグリッドの生成を1行で行い，生成されたサーフェスのポイントにNumPy配列としてアクセスできます:"

#: ../../pyvista/docs/examples/00-load/create-structured-surface.rst:172
msgid "From XYZ Points"
msgstr "XYZ点から"

#: ../../pyvista/docs/examples/00-load/create-structured-surface.rst:174
msgid ""
"Quite often, you might be given a set of coordinates (XYZ points) in a "
"simple tabular format where there exists some structure such that grid could"
" be built between the nodes you have. A great example is found in `pyvista-"
"support#16`_ where a structured grid that is rotated from the cartesian "
"reference frame is given as just XYZ points. In these cases, all that is "
"needed to recover the grid is the dimensions of the grid (`nx` by `ny` by "
"`nz`) and that the coordinates are ordered appropriately."
msgstr ""
"多くの場合，単純な表形式で座標(XYZ点)のセットが与えられ，その中には，所有するノード間にグリッドを構築できるような構造が存在します．すばらしい例は，"
" `pyvista-support#16`_ "
"にあり，デカルト参照フレームから回転される構造化グリッドは，単にXYZ点として与えられる．このような場合，グリッドを復元するために必要なものは，グリッドの寸法(`nx`"
" x `ny` x `nz`)と，座標が適切に順序付けられていることだけです．"

#: ../../pyvista/docs/examples/00-load/create-structured-surface.rst:184
msgid ""
"For this example, we will create a small dataset and rotate the coordinates "
"such that they are not on orthogonal to cartesian reference frame."
msgstr "この例では，小さなデータセットを作成し，デカルト参照フレームに直交しないように座標を回転します．"

#: ../../pyvista/docs/examples/00-load/create-structured-surface.rst:234
msgid ""
"Now pretend that the (n by 3) NumPy array above are coordinates that you "
"have, possibly from a file with three columns of XYZ points."
msgstr "ここで，上記の(n x 3インチ) NumPy配列がXYZ点の3列のファイルから取得した座標であると仮定します．"

#: ../../pyvista/docs/examples/00-load/create-structured-surface.rst:237
msgid ""
"We simply need to recover the dimensions of the grid that these points make "
"and then we can generate a :class:`pyvista.StructuredGrid` mesh."
msgstr ""
"単にこれらの点が作るグリッドの寸法を回復する必要があり，それから :class:`pyvista.StructuredGrid` "
"メッシュを生成することができます．"

#: ../../pyvista/docs/examples/00-load/create-structured-surface.rst:240
msgid "Let's preview the points to see what we are dealing with:"
msgstr "ポイントをプレビューして，処理対象を確認します:"

#: ../../pyvista/docs/examples/00-load/create-structured-surface.rst:268
msgid ""
"In the figure above, we can see some inherit structure to the points and "
"thus we could connect the points as a structured grid. All we need to know "
"are the dimensions of the grid present. In this case, we know (because we "
"made this dataset) the dimensions are ``[29, 32, 1]``, but you might not "
"know the dimensions of your pointset. There are a few ways to figure out the"
" dimensionality of structured grid including:"
msgstr ""
"上の図では，点への継承構造を確認できるため，点を構造化グリッドとして接続できます．私たちが知る必要があるのは，存在するグリッドの寸法だけです．この場合，(このデータセットは)寸法が"
" ``[29, 32, 1]`` "
"であることはわかっていますが，あなたはポイントセットの寸法を知らないかもしれません．構造化グリッドの次元性を確認するには，次のような方法があります:"

#: ../../pyvista/docs/examples/00-load/create-structured-surface.rst:275
msgid "manually counting the nodes along the edges of the pointset"
msgstr "点セットのエッジに沿った節点の手動カウント"

#: ../../pyvista/docs/examples/00-load/create-structured-surface.rst:276
msgid ""
"using a technique like principle component analysis to strip the rotation "
"from the dataset and count the unique values along each axis for the new;y "
"projected dataset."
msgstr "主成分分析のような手法を用いてデータセットから回転を取り除き，新しいデータの各軸に沿った固有の値をカウントする;y投影データセット．"

#: ../../pyvista/docs/examples/00-load/create-structured-surface.rst:320
msgid "Extending a 2D StructuredGrid to 3D"
msgstr "2 D構造グリッドを3 Dに拡張します"

#: ../../pyvista/docs/examples/00-load/create-structured-surface.rst:322
msgid ""
"A 2D :class:`pyvista.StructuredGrid` mesh can be extended into a 3D mesh. "
"This is highly applicable when wanting to create a terrain following mesh in"
" earth science research applications."
msgstr ""
"A 2 D :class:`pyvista.StructuredGrid` のメッシュは，3 "
"Dメッシュに拡張できます．これは，地球科学の研究アプリケーションでメッシュに沿った地形を作成する場合に非常に適しています．"

#: ../../pyvista/docs/examples/00-load/create-structured-surface.rst:326
msgid ""
"For example, we could have a :class:`pyvista.StructuredGrid` of a topography"
" surface and extend that surface to a few different levels and connect each "
"\"level\" to create the 3D terrain following mesh."
msgstr ""
"たとえば，地形サーフェスの :class:`pyvista.StructuredGrid` "
"を作成し，そのサーフェスをいくつかの異なるレベルまで延長し，各 \"レベル\" を接続して，メッシュに沿って3 D地形を作成できます．"

#: ../../pyvista/docs/examples/00-load/create-structured-surface.rst:330
msgid "Let's start with a simple example by extending the wave mesh to 3D"
msgstr "まず簡単な例として，ウェーブメッシュを3 Dに拡張します．"

#: ../../pyvista/docs/examples/00-load/create-structured-surface.rst:396
msgid "**Total running time of the script:** ( 0 minutes  3.886 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  3.886 seconds)"

#: ../../pyvista/docs/examples/00-load/create-structured-surface.rst:411
msgid ""
":download:`Download Python source code: create-structured-surface.py "
"<create-structured-surface.py>`"
msgstr ""
":download:`Download Python source code: create-structured-surface.py "
"<create-structured-surface.py>`"

#: ../../pyvista/docs/examples/00-load/create-structured-surface.rst:417
msgid ""
":download:`Download Jupyter notebook: create-structured-surface.ipynb "
"<create-structured-surface.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: create-structured-surface.ipynb "
"<create-structured-surface.ipynb>`"

#: ../../pyvista/docs/examples/00-load/create-surface-draped.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_00-load_create-surface-"
"draped.py>` to download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_00-load_create-surface-"
"draped.py>` to download the full example code"

#: ../../pyvista/docs/examples/00-load/create-surface-draped.rst:22
msgid "Drape 2D Surface From Line"
msgstr "線分から2 Dサーフェスをまとう"

#: ../../pyvista/docs/examples/00-load/create-surface-draped.rst:24
msgid "Drape a surface (2D array) from a line in 3D space."
msgstr "サーフェス(2次元配列)を3 D空間の線分からまといます．"

#: ../../pyvista/docs/examples/00-load/create-surface-draped.rst:26
msgid ""
"This is a common task to create a 2.5D image/sectional mesh of data like GPR"
" or airborne EM profiles (geophysics applications). This example provides a "
"look into how to create a 2.5D sectional mesh from typical data in those use"
" cases."
msgstr ""
"これはGPRや空中EMプロファイル(地球物理学的応用)のようなデータの2.5 "
"D画像/断面メッシュを作成する一般的なタスクです．この例では，これらのユースケースの一般的なデータから2.5 "
"D断面メッシュを作成する方法について説明します．"

#: ../../pyvista/docs/examples/00-load/create-surface-draped.rst:30
msgid ""
"For this example, we have an instrument path on the ground surface (the "
"line) and a 2D array of the collected image under that line."
msgstr "この例では，地表(線)に計測器のパスがあり，そのラインの下に収集されたイメージの2 D配列があります．"

#: ../../pyvista/docs/examples/00-load/create-surface-draped.rst:33
msgid ""
"Originally posted in `this support issue <https://github.com/pyvista"
"/pyvista-support/issues/135>`_."
msgstr ""
"`このサポートのイシュー <https://github.com/pyvista/pyvista-support/issues/135>`_ "
"で最初に掲載されました．"

#: ../../pyvista/docs/examples/00-load/create-surface-draped.rst:35
msgid ""
"Suppose you have some GPR data (or anything that produces a line of data "
"with values at depth). With these data, you'll have a 2D image/array of your"
" data values and 3D coordinates of where that line/profile is in 3D space "
"(often where you collected the data on the surface of topography). Attached "
"below are some example data for this: 1) XYZ coordinates of a GPR path and "
"2) a 2D array of data values produced from the GPR."
msgstr ""
"GPRデータ(深さ方向の値を持つデータの行を生成するものは何でもかまいません)があるとします．これらのデータを使用して，データ値の2 "
"Dイメージ/配列と，その線分/プロファイルが3 D空間のどこにあるかの3 D座標を取得できます(地形の表面のデータを集めて)．以下に，1) "
"GPRパスのXYZ座標，2) GPRから生成されたデータ値の2 D配列の例を示します．"

#: ../../pyvista/docs/examples/00-load/create-surface-draped.rst:42
msgid ""
"the data here are wacky (it's difficult to get shareable data of decent "
"quality), so ignore them but pay attention to the structure. The coordinates"
" we have are technically shifted up and we have some NaN filler above the "
"surface - its weird and just ignore it. You'll typically have a more uniform"
" looking profile in 2D with the coordinates associated to the top of each "
"column in your 2D array."
msgstr ""
"ここのデータは奇妙(質の高い共有可能なデータを入手するのは難しい)なので，無視して構造に注意してください．我々が持っている座標は技術的に上にシフトされ"
"，我々は表面の上にいくつかのNaNフィラーがあります-それは奇妙で，それを無視します．通常は，2 "
"D配列内の各柱の上端に関連付けられた座標を持つ，より均一に見える2 Dプロファイルが作成されます．"

#: ../../pyvista/docs/examples/00-load/create-surface-draped.rst:93
msgid ""
"View the the path of the GPR profile from a top-down perspective. Since we "
"have the full coordinates (XY and Z), we can create a structured mesh "
"\"draping\" down from those coordinates to hold the GPR image data."
msgstr ""
"GPRプロファイルのパスをトップダウンの視点から表示します．完全な座標(XYとZ)があるため，これらの座標から下に構造化メッシュ \"ドレーピング\" "
"を作成し，GPRイメージデータを保持できます．"

#: ../../pyvista/docs/examples/00-load/create-surface-draped.rst:155
msgid "Make a StructuredGrid from the structured points"
msgstr "構造化された点からStructuredGridを作成する"

#: ../../pyvista/docs/examples/00-load/create-surface-draped.rst:177
msgid ""
"And now we can plot it! or process or do anything, because it is a PyVista "
"mesh and the possibilities are endless with PyVista"
msgstr "これでプロットできます!PyVistaメッシュであり，PyVistaでは無限の可能性があるため，何かを処理したり，実行したりできます．"

#: ../../pyvista/docs/examples/00-load/create-surface-draped.rst:217
msgid "**Total running time of the script:** ( 0 minutes  8.527 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  8.527 seconds)"

#: ../../pyvista/docs/examples/00-load/create-surface-draped.rst:232
msgid ""
":download:`Download Python source code: create-surface-draped.py <create-"
"surface-draped.py>`"
msgstr ""
":download:`Download Python source code: create-surface-draped.py <create-"
"surface-draped.py>`"

#: ../../pyvista/docs/examples/00-load/create-surface-draped.rst:238
msgid ""
":download:`Download Jupyter notebook: create-surface-draped.ipynb <create-"
"surface-draped.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: create-surface-draped.ipynb <create-"
"surface-draped.ipynb>`"

#: ../../pyvista/docs/examples/00-load/create-tri-surface.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_00-load_create-tri-surface.py>`"
" to download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_00-load_create-tri-surface.py>`"
" to download the full example code"

#: ../../pyvista/docs/examples/00-load/create-tri-surface.rst:22
msgid "Create Triangulated Surface"
msgstr "三角形サーフェスを作成"

#: ../../pyvista/docs/examples/00-load/create-tri-surface.rst:24
msgid ""
"Create a surface from a set of points through a Delaunay triangulation."
msgstr "一連のポイントからDelaunay三角形分割を介してサーフェスを作成します．"

#: ../../pyvista/docs/examples/00-load/create-tri-surface.rst:45
msgid "Simple Triangulations"
msgstr "単純な軌道"

#: ../../pyvista/docs/examples/00-load/create-tri-surface.rst:47
msgid "First, create some points for the surface."
msgstr "まず，表面のポイントをいくつか作成します．"

#: ../../pyvista/docs/examples/00-load/create-tri-surface.rst:87
msgid ""
"Now use those points to create a point cloud PyVista data object. This will "
"be encompassed in a :class:`pyvista.PolyData` object."
msgstr ""
"これらのポイントを使用して，ポイントクラウドPyVistaデータオブジェクトを作成します．これは :class:`pyvista.PolyData` "
"オブジェクトに含まれます．"

#: ../../pyvista/docs/examples/00-load/create-tri-surface.rst:122
msgid ""
"Now that we have a PyVista data structure of the points, we can perform a "
"triangulation to turn those boring discrete points into a connected surface."
msgstr ""
"ポイントのPyVistaデータ構造ができたので，三角形分割を実行して，これらの退屈な個別のポイントを接続されたサーフェスに変えることができます．"

#: ../../pyvista/docs/examples/00-load/create-tri-surface.rst:158
msgid "Masked Triangulations"
msgstr "マスクされた三角形"

#: ../../pyvista/docs/examples/00-load/create-tri-surface.rst:183
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>100</td></tr>\n"
"<tr><td>N Points</td><td>100</td></tr>\n"
"<tr><td>X Bounds</td><td>3.574e-02, 9.234e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>4.915e-02, 9.285e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 0.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>0</td></tr>\n"
"</table>\n"
"\n"
"\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>100</td></tr>\n"
"<tr><td>N Points</td><td>100</td></tr>\n"
"<tr><td>X Bounds</td><td>3.574e-02, 9.234e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>4.915e-02, 9.285e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 0.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>0</td></tr>\n"
"</table>\n"
"\n"
"\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/docs/examples/00-load/create-tri-surface.rst:204
msgid "Run the triangulation on these points"
msgstr "これらの点で三角形分割を実行します"

#: ../../pyvista/docs/examples/00-load/create-tri-surface.rst:237
msgid ""
"Note that some of the outer edges are unconstrained and the triangulation "
"added unwanted triangles. We can mitigate that with the ``alpha`` parameter."
msgstr ""
"外側のエッジの一部は拘束されておらず，三角形分割によって不要な三角形が追加されていることに注意してください．私たちは ``alpha`` "
"パラメータでそれを緩和します．"

#: ../../pyvista/docs/examples/00-load/create-tri-surface.rst:271
msgid ""
"We could also add a polygon to ignore during the triangulation via the "
"``edge_source`` parameter."
msgstr "また， ``edge_source`` パラメータを使用して，三角形分割中に無視するポリゴンを追加することもできます．"

#: ../../pyvista/docs/examples/00-load/create-tri-surface.rst:319
msgid "**Total running time of the script:** ( 0 minutes  2.829 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  2.829 seconds)"

#: ../../pyvista/docs/examples/00-load/create-tri-surface.rst:334
msgid ""
":download:`Download Python source code: create-tri-surface.py <create-tri-"
"surface.py>`"
msgstr ""
":download:`Download Python source code: create-tri-surface.py <create-tri-"
"surface.py>`"

#: ../../pyvista/docs/examples/00-load/create-tri-surface.rst:340
msgid ""
":download:`Download Jupyter notebook: create-tri-surface.ipynb <create-tri-"
"surface.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: create-tri-surface.ipynb <create-tri-"
"surface.ipynb>`"

#: ../../pyvista/docs/examples/00-load/create-uniform-grid.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_00-load_create-uniform-"
"grid.py>` to download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_00-load_create-uniform-"
"grid.py>` to download the full example code"

#: ../../pyvista/docs/examples/00-load/create-uniform-grid.rst:22
msgid "Creating a Uniform Grid"
msgstr "統合グリッドを作成"

#: ../../pyvista/docs/examples/00-load/create-uniform-grid.rst:24
msgid "Create a simple uniform grid from a 3D NumPy array of values."
msgstr "値の3D NumPy配列から単純な均一グリッドを作成します．"

#: ../../pyvista/docs/examples/00-load/create-uniform-grid.rst:44
msgid ""
"Take a 3D NumPy array of data values that holds some spatial data where each"
" axis corresponds to the XYZ cartesian axes. This example will create a "
":class:`pyvista.UniformGrid` object that will hold the spatial reference for"
" a 3D grid which a 3D NumPy array of values can be plotted against."
msgstr ""
"各軸がXYZデカルト軸に対応する空間データを保持するデータ値の3 D NumPy配列を取ります．この例では，値の3 D NumPy配列をプロットできる3"
" Dグリッドの空間参照を保持する :class:`pyvista.UniformGrid` オブジェクトを作成します．"

#: ../../pyvista/docs/examples/00-load/create-uniform-grid.rst:51
msgid ""
"Create the 3D NumPy array of spatially referenced data. This is spatially "
"referenced such that the grid is 20 by 5 by 10 (nx by ny by nz)"
msgstr ""
"空間的に参照されるデータの3 D NumPy配列を作成します．これは，グリッドが20×5×10 (nx × ny × "
"nz)であるように空間的に参照さます"

#: ../../pyvista/docs/examples/00-load/create-uniform-grid.rst:103
msgid ""
"Don't like cell data? You could also add the NumPy array to the point data "
"of a :class:`pyvista.UniformGrid`. Take note of the subtle difference when "
"setting the grid dimensions upon initialization."
msgstr ""
"セルデータは好きではありませんか? :class:`pyvista.UniformGrid` "
"のポイントデータにNumPy配列を追加することもできます．初期化時にグリッドの寸法を設定する際には，微妙な違いに注意してください．"

#: ../../pyvista/docs/examples/00-load/create-uniform-grid.rst:158
msgid "**Total running time of the script:** ( 0 minutes  1.626 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.626 seconds)"

#: ../../pyvista/docs/examples/00-load/create-uniform-grid.rst:173
msgid ""
":download:`Download Python source code: create-uniform-grid.py <create-"
"uniform-grid.py>`"
msgstr ""
":download:`Download Python source code: create-uniform-grid.py <create-"
"uniform-grid.py>`"

#: ../../pyvista/docs/examples/00-load/create-uniform-grid.rst:179
msgid ""
":download:`Download Jupyter notebook: create-uniform-grid.ipynb <create-"
"uniform-grid.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: create-uniform-grid.ipynb <create-"
"uniform-grid.ipynb>`"

#: ../../pyvista/docs/examples/00-load/create-unstructured-surface.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_00-load_create-unstructured-"
"surface.py>` to download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_00-load_create-unstructured-"
"surface.py>` to download the full example code"

#: ../../pyvista/docs/examples/00-load/create-unstructured-surface.rst:24
msgid "Creating an Unstructured Grid"
msgstr "非構造化グリッドの作成"

#: ../../pyvista/docs/examples/00-load/create-unstructured-surface.rst:26
msgid "Create an irregular, unstructured grid from NumPy arrays."
msgstr "NumPy配列から不規則な非構造化グリッドを作成します．"

#: ../../pyvista/docs/examples/00-load/create-unstructured-surface.rst:46
msgid ""
"An unstructured grid can be created directly from NumPy arrays. This is "
"useful when creating a grid from scratch or copying it from another format."
"  See `vtkUnstructuredGrid "
"<https://www.vtk.org/doc/nightly/html/classvtkUnstructuredGrid.html>`_ for "
"available cell types and their descriptions."
msgstr ""
"非構造化グリッドは，NumPy配列から直接作成できます．これは，グリッドを最初から作成する場合や，別の形式からコピーする場合に便利です．使用可能なセルタイプとその説明については，"
" `vtkUnstructuredGrid "
"<https://www.vtk.org/doc/nightly/html/classvtkUnstructuredGrid.html>`_ "
"を参照してください．"

#: ../../pyvista/docs/examples/00-load/create-unstructured-surface.rst:126
msgid "UnstructuredGrid with Shared Points"
msgstr "共有ポイントを持つ非構造化グリッド"

#: ../../pyvista/docs/examples/00-load/create-unstructured-surface.rst:128
msgid ""
"The next example again creates an unstructured grid containing hexahedral "
"cells, but using common points between the cells."
msgstr "次の例でも，6面体セルを含み，セル間の共通点を使用する非構造グリッドを作成します．"

#: ../../pyvista/docs/examples/00-load/create-unstructured-surface.rst:215
msgid "Finally, create the unstructured grid and plot it"
msgstr "最後に，非構造化グリッドを作成してプロットします．"

#: ../../pyvista/docs/examples/00-load/create-unstructured-surface.rst:248
msgid "**Total running time of the script:** ( 0 minutes  1.312 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.312 seconds)"

#: ../../pyvista/docs/examples/00-load/create-unstructured-surface.rst:263
msgid ""
":download:`Download Python source code: create-unstructured-surface.py "
"<create-unstructured-surface.py>`"
msgstr ""
":download:`Download Python source code: create-unstructured-surface.py "
"<create-unstructured-surface.py>`"

#: ../../pyvista/docs/examples/00-load/create-unstructured-surface.rst:269
msgid ""
":download:`Download Jupyter notebook: create-unstructured-surface.ipynb "
"<create-unstructured-surface.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: create-unstructured-surface.ipynb "
"<create-unstructured-surface.ipynb>`"

#: ../../pyvista/docs/examples/00-load/read-dolfin.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_00-load_read-dolfin.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_00-load_read-dolfin.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/00-load/read-dolfin.rst:22
msgid "Read FEniCS/Dolfin Meshes"
msgstr "FEniCS/Dolfinメッシュを確認．"

#: ../../pyvista/docs/examples/00-load/read-dolfin.rst:24
msgid ""
"PyVista leverages `meshio`_ to read many mesh formats not natively supported"
" by VTK including the `FEniCS/Dolfin`_ XML format."
msgstr ""
"PyVistaは `meshio`_ を活用して， `FEniCS/Dolfin`_  "
"XMLフォーマットを含む，VTKがネイティブにサポートしていない多くのメッシュフォーマットを読み込みます．"

#: ../../pyvista/docs/examples/00-load/read-dolfin.rst:46
msgid ""
"Let's download an example FEniCS/Dolfin mesh from our example data "
"repository. This will download an XML Dolfin mesh and save it to PyVista's "
"data directory."
msgstr ""
"サンプルデータリポジトリからFEniCS/Dolfinメッシュのサンプルをダウンロードしましょう．これにより，XML "
"Dolfinメッシュがダウンロードされ，PyVistaのデータディレクトリに保存されます．"

#: ../../pyvista/docs/examples/00-load/read-dolfin.rst:74
msgid ""
"As shown, we now have an XML Dolfin mesh save locally. This filename can be "
"passed directly to PyVista's :func:`pyvista.read` method to be read into a "
"PyVista mesh."
msgstr ""
"これで，XML Dolfinメッシュをローカルに保存できました．このファイル名は，PyVistaの :func:`pyvista.read` "
"メソッドに直接渡して，PyVistaメッシュに読み込むことができます．"

#: ../../pyvista/docs/examples/00-load/read-dolfin.rst:91
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"\n"
"<table>\n"
"<tr><th>UnstructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>5400</td></tr>\n"
"<tr><td>N Points</td><td>2868</td></tr>\n"
"<tr><td>X Bounds</td><td>0.000e+00, 1.000e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>0.000e+00, 1.000e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 0.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>0</td></tr>\n"
"</table>\n"
"\n"
"\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"\n"
"<table>\n"
"<tr><th>UnstructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>5400</td></tr>\n"
"<tr><td>N Points</td><td>2868</td></tr>\n"
"<tr><td>X Bounds</td><td>0.000e+00, 1.000e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>0.000e+00, 1.000e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 0.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>0</td></tr>\n"
"</table>\n"
"\n"
"\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/docs/examples/00-load/read-dolfin.rst:112
msgid "Now we can do stuff with that Dolfin mesh!"
msgstr "Dolfinメッシュで何かできるようになりました!"

#: ../../pyvista/docs/examples/00-load/read-dolfin.rst:144
msgid "**Total running time of the script:** ( 0 minutes  1.319 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.319 seconds)"

#: ../../pyvista/docs/examples/00-load/read-dolfin.rst:159
msgid ""
":download:`Download Python source code: read-dolfin.py <read-dolfin.py>`"
msgstr ""
":download:`Download Python source code: read-dolfin.py <read-dolfin.py>`"

#: ../../pyvista/docs/examples/00-load/read-dolfin.rst:165
msgid ""
":download:`Download Jupyter notebook: read-dolfin.ipynb <read-dolfin.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: read-dolfin.ipynb <read-dolfin.ipynb>`"

#: ../../pyvista/docs/examples/00-load/read-file.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_00-load_read-file.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_00-load_read-file.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/00-load/read-file.rst:22
msgid "Load and Plot from a File"
msgstr "ファイルからロードおよびプロットする"

#: ../../pyvista/docs/examples/00-load/read-file.rst:24
msgid "Read a dataset from a known file type."
msgstr "既知のファイルタイプからデータセットを読み取ります．"

#: ../../pyvista/docs/examples/00-load/read-file.rst:29
msgid ""
"Loading a mesh is trivial - if your data is in one of the many supported "
"file formats, simply use :func:`pyvista.read` to load your spatially "
"referenced dataset into a PyVista mesh object."
msgstr ""
"メッシュのロードは簡単です．- データが多くのサポートされているファイルフォーマットの1つである場合は， :func:`pyvista.read` "
"を使用して空間的に参照されるデータセットをPyVistaメッシュオブジェクトにロードします．"

#: ../../pyvista/docs/examples/00-load/read-file.rst:33
msgid ""
"The following code block uses a built-in example file and displays an "
"airplane mesh."
msgstr "次のコードブロックでは，組み込みのサンプルファイルを使用して，飛行機のメッシュを表示します．"

#: ../../pyvista/docs/examples/00-load/read-file.rst:54
msgid ""
"The following code block uses a built-in example file, displays an airplane "
"mesh and returns the camera's position:"
msgstr "次のコードブロックでは，組み込みのサンプルファイルを使用して，飛行機のメッシュを表示し，カメラの位置を返します．"

#: ../../pyvista/docs/examples/00-load/read-file.rst:83
msgid ""
"Note the above filename, it's a ``.ply`` file - one of the many supported "
"formats in PyVista."
msgstr "上記のファイル名に注意してください．これは ``.ply`` ファイルで，PyVistaでサポートされている多くのフォーマットの1つです．"

#: ../../pyvista/docs/examples/00-load/read-file.rst:107
msgid ""
"You can also take a screenshot without creating an interactive plot window "
"using the ``Plotter``:"
msgstr "``Plotter`` を使用して，インタラクティブなプロットウィンドウを作成せずにスクリーンショットを撮ることもできます．"

#: ../../pyvista/docs/examples/00-load/read-file.rst:143
msgid "The points from the mesh are directly accessible as a NumPy array:"
msgstr "メッシュのポイントは，NumPy配列として直接アクセスできます．"

#: ../../pyvista/docs/examples/00-load/read-file.rst:175
msgid "The faces from the mesh are also directly accessible as a NumPy array:"
msgstr "メッシュの面は，NumPy配列として直接アクセスできます．"

#: ../../pyvista/docs/examples/00-load/read-file.rst:208
msgid ""
"Loading other files types is just as easy! Simply pass your file path to the"
" :func:`pyvista.read` function and that's it!"
msgstr "他のファイルタイプのロードも同じくらい簡単です．ファイルパスを :func:`pyvista.read` 関数に渡すだけです．"

#: ../../pyvista/docs/examples/00-load/read-file.rst:211
msgid ""
"Here are a few other examples - simply replace ``examples.download_*`` in "
"the examples below with ``pyvista.read('path/to/you/file.ext')``"
msgstr ""
"その他の例をいくつか紹介します -  ``examples.download_*`` を "
"``pyvista.read('path/to/you/file.ext')`` で置き換えています．"

#: ../../pyvista/docs/examples/00-load/read-file.rst:216
msgid "Example STL file:"
msgstr "STLファイルの例:"

#: ../../pyvista/docs/examples/00-load/read-file.rst:249
msgid "Example OBJ file"
msgstr "OBJファイルの例:"

#: ../../pyvista/docs/examples/00-load/read-file.rst:282
msgid "Example BYU file"
msgstr "BYUファイルの例:"

#: ../../pyvista/docs/examples/00-load/read-file.rst:315
msgid "Example VTK file"
msgstr "VTKファイルの例:"

#: ../../pyvista/docs/examples/00-load/read-file.rst:348
msgid "**Total running time of the script:** ( 0 minutes  5.318 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  5.318 seconds)"

#: ../../pyvista/docs/examples/00-load/read-file.rst:363
msgid ":download:`Download Python source code: read-file.py <read-file.py>`"
msgstr ":download:`Download Python source code: read-file.py <read-file.py>`"

#: ../../pyvista/docs/examples/00-load/read-file.rst:369
msgid ""
":download:`Download Jupyter notebook: read-file.ipynb <read-file.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: read-file.ipynb <read-file.ipynb>`"

#: ../../pyvista/docs/examples/00-load/read-image.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_00-load_read-image.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_00-load_read-image.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/00-load/read-image.rst:22
msgid "Read Image Files"
msgstr "イメージファイルの読み込み"

#: ../../pyvista/docs/examples/00-load/read-image.rst:24
msgid "Read and plot image files (JPEG, TIFF, PNG, etc)."
msgstr "イメージファイル(JPEG，TIFF，PNGなど)の読み込みとプロットを行います．"

#: ../../pyvista/docs/examples/00-load/read-image.rst:42
msgid ""
"PyVista fully supports reading images into their own spatially referenced "
"data objects (this example) as well as supports texture mapping of images "
"onto datasets (see :ref:`ref_texture_example`)."
msgstr ""
"PyVistaでは，イメージを空間的に参照されるデータオブジェクト(この例)に読み込むことが完全にサポートされており，イメージをデータセット( "
":ref:`ref_texture_example` を参照)にテクスチャマッピングすることもサポートされています．"

#: ../../pyvista/docs/examples/00-load/read-image.rst:46
msgid ""
"Download a JPEG image of a puppy and load it to "
":class:`pyvista.UniformGrid`. This could similarly be implemented with any "
"image file by using the :func:`pyvista.read` function and passing the path "
"to the image file."
msgstr ""
"子犬のJPEG画像をダウンロードし， :class:`pyvista.UniformGrid` にロードします．これは "
":func:`pyvista.read` 関数を使用し，画像ファイルへのパスを渡すことで，どんな画像ファイルにも同様に実装できます．"

#: ../../pyvista/docs/examples/00-load/read-image.rst:68
msgid ""
"When plotting images stored in :class:`pyvista.UniformGrid` objects, it is "
"important to specify using the `rgb` option when plotting to ensure that the"
" image's true colors are used and not mapped."
msgstr ""
" :class:`pyvista.UniformGrid` オブジェクトに保存されたイメージを印刷する場合，イメージのTrue "
"Colorが使用され，マップされないことを確認するために，プロット時に `rgb` オプションを使用して指定することが重要です．"

#: ../../pyvista/docs/examples/00-load/read-image.rst:132
msgid "**Total running time of the script:** ( 0 minutes  6.458 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  6.458 seconds)"

#: ../../pyvista/docs/examples/00-load/read-image.rst:147
msgid ":download:`Download Python source code: read-image.py <read-image.py>`"
msgstr ""
":download:`Download Python source code: read-image.py <read-image.py>`"

#: ../../pyvista/docs/examples/00-load/read-image.rst:153
msgid ""
":download:`Download Jupyter notebook: read-image.ipynb <read-image.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: read-image.ipynb <read-image.ipynb>`"

#: ../../pyvista/docs/examples/00-load/read-parallel.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_00-load_read-parallel.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_00-load_read-parallel.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/00-load/read-parallel.rst:22
msgid "Parallel Files"
msgstr "並列フィルタ"

#: ../../pyvista/docs/examples/00-load/read-parallel.rst:24
msgid ""
"The VTK library supports parallel file formats. Reading meshes broken up "
"into several files is natively supported by VTK and PyVista."
msgstr ""
"VTKライブラリーは並列ファイル・フォーマットをサポートしています．複数のファイルに分割されたメッシュの読み込みは，VTKおよびPyVistaでネイティブにサポートされています．"

#: ../../pyvista/docs/examples/00-load/read-parallel.rst:45
msgid ""
"Let's go ahead and download the sample dataset containing an "
":class:`pyvista.UnstructuredGrid` broken up into several files."
msgstr ""
"いくつかのファイルに分割された :class:`pyvista.UnstructuredGrid` "
"を含むサンプルデータセットをダウンロードしてみましょう．"

#: ../../pyvista/docs/examples/00-load/read-parallel.rst:61
#: ../../pyvista/docs/examples/00-load/read-parallel.rst:162
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>UnstructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>39353</td></tr>\n"
"<tr><td>N Points</td><td>48823</td></tr>\n"
"<tr><td>X Bounds</td><td>5.300e+01, 1.210e+02</td></tr>\n"
"<tr><td>Y Bounds</td><td>5.000e+01, 9.700e+01</td></tr>\n"
"<tr><td>Z Bounds</td><td>6.400e+01, 1.820e+02</td></tr>\n"
"<tr><td>N Arrays</td><td>5</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>node_value</b></td><td>Points</td><td>int32</td><td>1</td><td>0.000e+00</td><td>3.000e+00</td></tr>\n"
"<tr><td>simerr_type</td><td>Points</td><td>int32</td><td>1</td><td>0.000e+00</td><td>3.000e+00</td></tr>\n"
"<tr><td>density</td><td>Cells</td><td>float32</td><td>1</td><td>2.203e-01</td><td>5.232e-01</td></tr>\n"
"<tr><td>velocity</td><td>Cells</td><td>float32</td><td>3</td><td>-3.607e-01</td><td>8.989e-02</td></tr>\n"
"<tr><td>shearstress</td><td>Cells</td><td>float32</td><td>1</td><td>6.160e-05</td><td>1.726e-02</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>UnstructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>39353</td></tr>\n"
"<tr><td>N Points</td><td>48823</td></tr>\n"
"<tr><td>X Bounds</td><td>5.300e+01, 1.210e+02</td></tr>\n"
"<tr><td>Y Bounds</td><td>5.000e+01, 9.700e+01</td></tr>\n"
"<tr><td>Z Bounds</td><td>6.400e+01, 1.820e+02</td></tr>\n"
"<tr><td>N Arrays</td><td>5</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>node_value</b></td><td>Points</td><td>int32</td><td>1</td><td>0.000e+00</td><td>3.000e+00</td></tr>\n"
"<tr><td>simerr_type</td><td>Points</td><td>int32</td><td>1</td><td>0.000e+00</td><td>3.000e+00</td></tr>\n"
"<tr><td>density</td><td>Cells</td><td>float32</td><td>1</td><td>2.203e-01</td><td>5.232e-01</td></tr>\n"
"<tr><td>velocity</td><td>Cells</td><td>float32</td><td>3</td><td>-3.607e-01</td><td>8.989e-02</td></tr>\n"
"<tr><td>shearstress</td><td>Cells</td><td>float32</td><td>1</td><td>6.160e-05</td><td>1.726e-02</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/docs/examples/00-load/read-parallel.rst:92
msgid ""
"The above code downloaded a dataset containing a set of parallel files for a"
" blood vessel mesh and returned an :class:`pyvista.UnstructuredGrid` - we "
"did not grab that UnstructuredGrid, so that we could demo how to use these "
"types of files."
msgstr ""
"上記のコードは，血管メッシュの並列ファイルのセットを含むデータセットをダウンロードし， "
":class:`pyvista.UnstructuredGrid` を返しました - "
"私たちは，これらのタイプのファイルの使用方法をデモできるように，そのUnstructuredGridを取得しませんでした．"

#: ../../pyvista/docs/examples/00-load/read-parallel.rst:97
msgid "Let's inspect where this downloaded our dataset:"
msgstr "これがデータセットをダウンロードした場所を調べてみましょう:"

#: ../../pyvista/docs/examples/00-load/read-parallel.rst:144
msgid ""
"Note that a ``.pvtu`` file is available along side a directory. This "
"directory contains all the parallel files or pieces that make the whole "
"mesh. We can simply read the ``.pvtu`` file and VTK will handle putting the "
"mesh together."
msgstr ""
"``.pvtu`` "
"ファイルはディレクトリの横にあるので注意してください．このディレクトリには，メッシュ全体を構成するすべての並列ファイルまたはピースが含まれています． "
"``.pvtu`` ファイルを読み取るだけで，VTKがメッシュをまとめます．"

#: ../../pyvista/docs/examples/00-load/read-parallel.rst:193
msgid "Plot the pieced together mesh"
msgstr "つなぎ合わせたメッシュをプロットします"

#: ../../pyvista/docs/examples/00-load/read-parallel.rst:252
msgid "**Total running time of the script:** ( 0 minutes  2.260 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  2.260 seconds)"

#: ../../pyvista/docs/examples/00-load/read-parallel.rst:267
msgid ""
":download:`Download Python source code: read-parallel.py <read-parallel.py>`"
msgstr ""
":download:`Download Python source code: read-parallel.py <read-parallel.py>`"

#: ../../pyvista/docs/examples/00-load/read-parallel.rst:273
msgid ""
":download:`Download Jupyter notebook: read-parallel.ipynb <read-"
"parallel.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: read-parallel.ipynb <read-"
"parallel.ipynb>`"

#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:7
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:7
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:7
#: ../../pyvista/docs/examples/03-widgets/sg_execution_times.rst:7
#: ../../pyvista/docs/examples/04-lights/sg_execution_times.rst:7
#: ../../pyvista/docs/examples/99-advanced/sg_execution_times.rst:7
msgid "Computation times"
msgstr "計算時間"

#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:8
msgid "**00:00.002** total execution time for **examples_00-load** files:"
msgstr "**00:00.002** total execution time for **examples_00-load** files:"

#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:11
msgid ""
":ref:`sphx_glr_examples_00-load_create-explicit-structured-grid.py` "
"(``create-explicit-structured-grid.py``)"
msgstr ""
":ref:`sphx_glr_examples_00-load_create-explicit-structured-grid.py` "
"(``create-explicit-structured-grid.py``)"

#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:11
msgid "00:00.002"
msgstr "00:00.002"

#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:11
#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:13
#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:15
#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:17
#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:19
#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:21
#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:23
#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:25
#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:27
#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:29
#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:31
#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:33
#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:35
#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:37
#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:39
#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:41
#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:43
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:11
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:13
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:15
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:17
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:19
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:21
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:23
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:25
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:27
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:29
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:31
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:33
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:35
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:37
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:39
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:41
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:43
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:45
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:47
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:49
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:51
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:53
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:55
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:57
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:59
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:61
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:63
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:65
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:67
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:69
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:71
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:73
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:11
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:13
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:15
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:17
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:19
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:21
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:23
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:25
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:27
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:29
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:31
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:33
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:35
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:37
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:39
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:41
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:43
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:45
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:47
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:49
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:51
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:53
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:55
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:57
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:59
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:61
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:63
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:65
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:67
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:69
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:71
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:73
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:75
#: ../../pyvista/docs/examples/03-widgets/sg_execution_times.rst:11
#: ../../pyvista/docs/examples/03-widgets/sg_execution_times.rst:13
#: ../../pyvista/docs/examples/03-widgets/sg_execution_times.rst:15
#: ../../pyvista/docs/examples/03-widgets/sg_execution_times.rst:17
#: ../../pyvista/docs/examples/03-widgets/sg_execution_times.rst:19
#: ../../pyvista/docs/examples/03-widgets/sg_execution_times.rst:21
#: ../../pyvista/docs/examples/03-widgets/sg_execution_times.rst:23
#: ../../pyvista/docs/examples/03-widgets/sg_execution_times.rst:25
#: ../../pyvista/docs/examples/04-lights/sg_execution_times.rst:11
#: ../../pyvista/docs/examples/04-lights/sg_execution_times.rst:13
#: ../../pyvista/docs/examples/04-lights/sg_execution_times.rst:15
#: ../../pyvista/docs/examples/04-lights/sg_execution_times.rst:17
#: ../../pyvista/docs/examples/04-lights/sg_execution_times.rst:19
#: ../../pyvista/docs/examples/04-lights/sg_execution_times.rst:21
#: ../../pyvista/docs/examples/04-lights/sg_execution_times.rst:23
#: ../../pyvista/docs/examples/99-advanced/sg_execution_times.rst:11
#: ../../pyvista/docs/examples/99-advanced/sg_execution_times.rst:13
#: ../../pyvista/docs/examples/99-advanced/sg_execution_times.rst:15
msgid "0.0 MB"
msgstr "0.0 MB"

#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:13
msgid ""
":ref:`sphx_glr_examples_00-load_create-geometric-objects.py` (``create-"
"geometric-objects.py``)"
msgstr ""
":ref:`sphx_glr_examples_00-load_create-geometric-objects.py` (``create-"
"geometric-objects.py``)"

#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:13
#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:15
#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:17
#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:19
#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:21
#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:23
#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:25
#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:27
#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:29
#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:31
#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:33
#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:35
#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:37
#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:39
#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:41
#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:43
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:13
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:15
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:17
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:19
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:21
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:23
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:25
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:27
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:29
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:31
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:33
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:35
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:37
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:39
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:41
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:43
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:45
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:47
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:49
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:51
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:53
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:55
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:57
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:59
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:61
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:63
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:65
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:67
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:69
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:71
#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:73
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:13
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:15
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:17
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:19
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:21
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:23
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:25
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:27
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:29
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:31
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:33
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:35
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:37
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:39
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:41
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:43
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:45
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:47
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:49
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:51
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:53
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:55
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:57
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:59
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:61
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:63
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:65
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:67
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:69
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:71
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:73
#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:75
#: ../../pyvista/docs/examples/03-widgets/sg_execution_times.rst:15
#: ../../pyvista/docs/examples/03-widgets/sg_execution_times.rst:17
#: ../../pyvista/docs/examples/03-widgets/sg_execution_times.rst:19
#: ../../pyvista/docs/examples/03-widgets/sg_execution_times.rst:21
#: ../../pyvista/docs/examples/03-widgets/sg_execution_times.rst:23
#: ../../pyvista/docs/examples/03-widgets/sg_execution_times.rst:25
#: ../../pyvista/docs/examples/04-lights/sg_execution_times.rst:17
#: ../../pyvista/docs/examples/04-lights/sg_execution_times.rst:19
#: ../../pyvista/docs/examples/04-lights/sg_execution_times.rst:21
#: ../../pyvista/docs/examples/04-lights/sg_execution_times.rst:23
#: ../../pyvista/docs/examples/99-advanced/sg_execution_times.rst:13
#: ../../pyvista/docs/examples/99-advanced/sg_execution_times.rst:15
msgid "00:00.000"
msgstr "00:00.000"

#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:15
msgid ""
":ref:`sphx_glr_examples_00-load_create-parametric-geometric-objects.py` "
"(``create-parametric-geometric-objects.py``)"
msgstr ""
":ref:`sphx_glr_examples_00-load_create-parametric-geometric-objects.py` "
"(``create-parametric-geometric-objects.py``)"

#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:17
msgid ""
":ref:`sphx_glr_examples_00-load_create-point-cloud.py` (``create-point-"
"cloud.py``)"
msgstr ""
":ref:`sphx_glr_examples_00-load_create-point-cloud.py` (``create-point-"
"cloud.py``)"

#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:19
msgid ":ref:`sphx_glr_examples_00-load_create-poly.py` (``create-poly.py``)"
msgstr ":ref:`sphx_glr_examples_00-load_create-poly.py` (``create-poly.py``)"

#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:21
msgid ""
":ref:`sphx_glr_examples_00-load_create-spline.py` (``create-spline.py``)"
msgstr ""
":ref:`sphx_glr_examples_00-load_create-spline.py` (``create-spline.py``)"

#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:23
msgid ""
":ref:`sphx_glr_examples_00-load_create-structured-surface.py` (``create-"
"structured-surface.py``)"
msgstr ""
":ref:`sphx_glr_examples_00-load_create-structured-surface.py` (``create-"
"structured-surface.py``)"

#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:25
msgid ""
":ref:`sphx_glr_examples_00-load_create-surface-draped.py` (``create-surface-"
"draped.py``)"
msgstr ""
":ref:`sphx_glr_examples_00-load_create-surface-draped.py` (``create-surface-"
"draped.py``)"

#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:27
msgid ""
":ref:`sphx_glr_examples_00-load_create-tri-surface.py` (``create-tri-"
"surface.py``)"
msgstr ""
":ref:`sphx_glr_examples_00-load_create-tri-surface.py` (``create-tri-"
"surface.py``)"

#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:29
msgid ""
":ref:`sphx_glr_examples_00-load_create-uniform-grid.py` (``create-uniform-"
"grid.py``)"
msgstr ""
":ref:`sphx_glr_examples_00-load_create-uniform-grid.py` (``create-uniform-"
"grid.py``)"

#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:31
msgid ""
":ref:`sphx_glr_examples_00-load_create-unstructured-surface.py` (``create-"
"unstructured-surface.py``)"
msgstr ""
":ref:`sphx_glr_examples_00-load_create-unstructured-surface.py` (``create-"
"unstructured-surface.py``)"

#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:33
msgid ":ref:`sphx_glr_examples_00-load_read-dolfin.py` (``read-dolfin.py``)"
msgstr ":ref:`sphx_glr_examples_00-load_read-dolfin.py` (``read-dolfin.py``)"

#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:35
msgid ":ref:`sphx_glr_examples_00-load_read-file.py` (``read-file.py``)"
msgstr ":ref:`sphx_glr_examples_00-load_read-file.py` (``read-file.py``)"

#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:37
msgid ":ref:`sphx_glr_examples_00-load_read-image.py` (``read-image.py``)"
msgstr ":ref:`sphx_glr_examples_00-load_read-image.py` (``read-image.py``)"

#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:39
msgid ""
":ref:`sphx_glr_examples_00-load_read-parallel.py` (``read-parallel.py``)"
msgstr ""
":ref:`sphx_glr_examples_00-load_read-parallel.py` (``read-parallel.py``)"

#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:41
msgid ":ref:`sphx_glr_examples_00-load_terrain-mesh.py` (``terrain-mesh.py``)"
msgstr ""
":ref:`sphx_glr_examples_00-load_terrain-mesh.py` (``terrain-mesh.py``)"

#: ../../pyvista/docs/examples/00-load/sg_execution_times.rst:43
msgid ":ref:`sphx_glr_examples_00-load_wrap-trimesh.py` (``wrap-trimesh.py``)"
msgstr ""
":ref:`sphx_glr_examples_00-load_wrap-trimesh.py` (``wrap-trimesh.py``)"

#: ../../pyvista/docs/examples/00-load/terrain-mesh.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_00-load_terrain-mesh.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_00-load_terrain-mesh.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/00-load/terrain-mesh.rst:22
msgid "Terrain Following Mesh"
msgstr "メッシュ後の地形"

#: ../../pyvista/docs/examples/00-load/terrain-mesh.rst:24
msgid "Use a topographic surface to create a 3D terrain-following mesh."
msgstr "地形サーフェスを使用して，3 D地形フォローメッシュを作成します．"

#: ../../pyvista/docs/examples/00-load/terrain-mesh.rst:26
msgid ""
"Terrain following meshes are common in the environmental sciences, for "
"instance in hydrological modelling (see `Maxwell 2013 "
"<https://www.sciencedirect.com/science/article/abs/pii/S0309170812002564>`_ "
"and `ParFlow <https://parflow.org>`_)."
msgstr ""
"メッシュに続く地形は，環境科学，例えば水文モデリング( `Maxwell 2013 "
"<https://www.sciencedirect.com/science/article/abs/pii/S0309170812002564>`_ "
"と `ParFlow <https://parflow.org>`_ を参照)において一般的である．"

#: ../../pyvista/docs/examples/00-load/terrain-mesh.rst:32
msgid ""
"In this example, we demonstrate a simple way to make a 3D grid/mesh that "
"follows a given topographic surface. In this example, it is important to "
"note that the given digital elevation model (DEM) is structured (gridded and"
" not triangulated): this is common for DEMs."
msgstr ""
"この例では，特定の地形サーフェスに従う3 Dグリッド/メッシュを作成する簡単な方法を適用します．この例では，指定した数値標高モデル (DEM) "
"が構造化されていることに注意してください(グリッド付きで三角形でない): これはDEMでは一般的です．"

#: ../../pyvista/docs/examples/00-load/terrain-mesh.rst:56
msgid "Download a gridded topography surface (DEM)"
msgstr "グリッド地形サーフェス (DEM) をダウンロードします"

#: ../../pyvista/docs/examples/00-load/terrain-mesh.rst:70
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>UniformGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>1677401</td></tr>\n"
"<tr><td>N Points</td><td>1680000</td></tr>\n"
"<tr><td>X Bounds</td><td>1.810e+06, 1.831e+06</td></tr>\n"
"<tr><td>Y Bounds</td><td>5.640e+06, 5.658e+06</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 0.000e+00</td></tr>\n"
"<tr><td>Dimensions</td><td>1400, 1200, 1</td></tr>\n"
"<tr><td>Spacing</td><td>1.500e+01, 1.500e+01, 0.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>scalar1of1</b></td><td>Points</td><td>float64</td><td>1</td><td>7.339e+02</td><td>2.787e+03</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>UniformGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>1677401</td></tr>\n"
"<tr><td>N Points</td><td>1680000</td></tr>\n"
"<tr><td>X Bounds</td><td>1.810e+06, 1.831e+06</td></tr>\n"
"<tr><td>Y Bounds</td><td>5.640e+06, 5.658e+06</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 0.000e+00</td></tr>\n"
"<tr><td>Dimensions</td><td>1400, 1200, 1</td></tr>\n"
"<tr><td>Spacing</td><td>1.500e+01, 1.500e+01, 0.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>scalar1of1</b></td><td>Points</td><td>float64</td><td>1</td><td>7.339e+02</td><td>2.787e+03</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/docs/examples/00-load/terrain-mesh.rst:99
msgid ""
"Now let's subsample and extract an area of interest to make this example "
"simple (also the DEM we just load is pretty big). Since the DEM we loaded is"
" a :class:`pyvista.UniformGrid` mesh, we can use the "
":func:`pyvista.UniformGridFilters.extract_subset` filter:"
msgstr ""
"ここで，対象となる領域をサブサンプルして抽出し，この例を単純にしましょう(ロードしたばかりのDEMもかなり大きいです．)．ロードしたDEMは "
":class:`pyvista.UniformGrid` メッシュなので， "
":func:`pyvista.UniformGridFilters.extract_subset` filter: フィルタを使用できます．"

#: ../../pyvista/docs/examples/00-load/terrain-mesh.rst:135
msgid ""
"Now that we have a region of interest for our terrain following mesh, lets "
"make a 3D surface of that DEM:"
msgstr "メッシュに沿って地表の関心領域ができたので，DEMの3 Dサーフェスを作成します．"

#: ../../pyvista/docs/examples/00-load/terrain-mesh.rst:150
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>StructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>6400</td></tr>\n"
"<tr><td>N Points</td><td>6561</td></tr>\n"
"<tr><td>X Bounds</td><td>1.818e+06, 1.824e+06</td></tr>\n"
"<tr><td>Y Bounds</td><td>5.646e+06, 5.652e+06</td></tr>\n"
"<tr><td>Z Bounds</td><td>1.441e+03, 2.769e+03</td></tr>\n"
"<tr><td>Dimensions</td><td>81, 81, 1</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>scalar1of1</b></td><td>Points</td><td>float64</td><td>1</td><td>1.441e+03</td><td>2.769e+03</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>StructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>6400</td></tr>\n"
"<tr><td>N Points</td><td>6561</td></tr>\n"
"<tr><td>X Bounds</td><td>1.818e+06, 1.824e+06</td></tr>\n"
"<tr><td>Y Bounds</td><td>5.646e+06, 5.652e+06</td></tr>\n"
"<tr><td>Z Bounds</td><td>1.441e+03, 2.769e+03</td></tr>\n"
"<tr><td>Dimensions</td><td>81, 81, 1</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>scalar1of1</b></td><td>Points</td><td>float64</td><td>1</td><td>1.441e+03</td><td>2.769e+03</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/docs/examples/00-load/terrain-mesh.rst:206
msgid ""
"And now we have a 3D structured surface of the terrain! We can now extend "
"that structured surface into a 3D mesh to form a terrain following grid. To "
"do this, we first our cell spacings in the z-direction (these start from the"
" terrain surface). Then we repeat the XYZ structured coordinates of the "
"terrain mesh and decrease each Z level by our Z cell spacing. Once we have "
"those structured coordinates, we can create a "
":class:`pyvista.StructuredGrid`."
msgstr ""
"これで，地形の3 D構造サーフェスが作成されました．構造化されたサーフェスを3 "
"Dメッシュに拡張して，グリッドに沿った地形を形成できるようになりました．これを行うには，まずz方向(これらは地表から始まり)のセル間隔を設定します．次に，地表メッシュのXYZ構造化座標を繰り返し，各ZレベルをZセル間隔だけ下げます．これらの構造化された座標が得られたら，"
" :class:`pyvista.StructuredGrid` を作成できます．"

#: ../../pyvista/docs/examples/00-load/terrain-mesh.rst:234
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>StructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>70400</td></tr>\n"
"<tr><td>N Points</td><td>78732</td></tr>\n"
"<tr><td>X Bounds</td><td>1.818e+06, 1.824e+06</td></tr>\n"
"<tr><td>Y Bounds</td><td>5.646e+06, 5.652e+06</td></tr>\n"
"<tr><td>Z Bounds</td><td>9.364e+02, 2.744e+03</td></tr>\n"
"<tr><td>Dimensions</td><td>81, 81, 12</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>Elevation</b></td><td>Points</td><td>float64</td><td>1</td><td>9.364e+02</td><td>2.744e+03</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>StructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>70400</td></tr>\n"
"<tr><td>N Points</td><td>78732</td></tr>\n"
"<tr><td>X Bounds</td><td>1.818e+06, 1.824e+06</td></tr>\n"
"<tr><td>Y Bounds</td><td>5.646e+06, 5.652e+06</td></tr>\n"
"<tr><td>Z Bounds</td><td>9.364e+02, 2.744e+03</td></tr>\n"
"<tr><td>Dimensions</td><td>81, 81, 12</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>Elevation</b></td><td>Points</td><td>float64</td><td>1</td><td>9.364e+02</td><td>2.744e+03</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/docs/examples/00-load/terrain-mesh.rst:293
msgid "**Total running time of the script:** ( 0 minutes  3.297 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  3.297 seconds)"

#: ../../pyvista/docs/examples/00-load/terrain-mesh.rst:308
msgid ""
":download:`Download Python source code: terrain-mesh.py <terrain-mesh.py>`"
msgstr ""
":download:`Download Python source code: terrain-mesh.py <terrain-mesh.py>`"

#: ../../pyvista/docs/examples/00-load/terrain-mesh.rst:314
msgid ""
":download:`Download Jupyter notebook: terrain-mesh.ipynb <terrain-"
"mesh.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: terrain-mesh.ipynb <terrain-"
"mesh.ipynb>`"

#: ../../pyvista/docs/examples/00-load/wrap-trimesh.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_00-load_wrap-trimesh.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_00-load_wrap-trimesh.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/00-load/wrap-trimesh.rst:24
msgid "Wrapping Other Objects"
msgstr "​他のオブジェクトのラップ"

#: ../../pyvista/docs/examples/00-load/wrap-trimesh.rst:25
msgid "You can wrap several other object types using pyvista including:"
msgstr "​pyvistaを使用すると，次のようないくつかのオブジェクトタイプをラップできます．"

#: ../../pyvista/docs/examples/00-load/wrap-trimesh.rst:27
msgid "`numpy` arrays"
msgstr "​`numpy` 配列"

#: ../../pyvista/docs/examples/00-load/wrap-trimesh.rst:28
msgid "`trimesh.Trimesh` meshes"
msgstr "​`trimesh.Trimesh` メッシュ"

#: ../../pyvista/docs/examples/00-load/wrap-trimesh.rst:29
msgid "VTK objects"
msgstr "​VTKオブジェクト"

#: ../../pyvista/docs/examples/00-load/wrap-trimesh.rst:31
msgid ""
"This allows for the \"best of both worlds\" programming special to Python "
"due to its modularity.  If there's some limitation of pyvista (or trimesh), "
"then you can adapt your scripts to use the best features of more than one "
"module."
msgstr ""
"​これにより，モジュール性のためにPythonに特別な \"​両方の世界の最良の部分\" "
"なプログラミングが可能になります．​pyvistaに何らかの制限がある場合(またはtrimesh)，複数のモジュールの最良の機能を使用するようにスクリプトを調整することができます．"

#: ../../pyvista/docs/examples/00-load/wrap-trimesh.rst:52
msgid "Wrap a point cloud composed of random points from numpy"
msgstr "​多数のランダムなポイントで構成されるポイントクラウドをラップする"

#: ../../pyvista/docs/examples/00-load/wrap-trimesh.rst:87
msgid "Wrap an instance of Trimesh"
msgstr "​Trimeshのインスタンスをラップする"

#: ../../pyvista/docs/examples/00-load/wrap-trimesh.rst:124
msgid "Wrap an instance of vtk.vtkPolyData"
msgstr "​vtk.vtkPolyData のインスタンスをラップする"

#: ../../pyvista/docs/examples/00-load/wrap-trimesh.rst:168
msgid "**Total running time of the script:** ( 0 minutes  0.777 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  0.777 seconds)"

#: ../../pyvista/docs/examples/00-load/wrap-trimesh.rst:183
msgid ""
":download:`Download Python source code: wrap-trimesh.py <wrap-trimesh.py>`"
msgstr ""
":download:`Download Python source code: wrap-trimesh.py <wrap-trimesh.py>`"

#: ../../pyvista/docs/examples/00-load/wrap-trimesh.rst:189
msgid ""
":download:`Download Jupyter notebook: wrap-trimesh.ipynb <wrap-"
"trimesh.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: wrap-trimesh.ipynb <wrap-"
"trimesh.ipynb>`"

#: ../../pyvista/docs/examples/01-filter/boolean-operations.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_boolean-"
"operations.py>` to download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_boolean-"
"operations.py>` to download the full example code"

#: ../../pyvista/docs/examples/01-filter/boolean-operations.rst:22
msgid "Boolean Operations"
msgstr "ブール演算"

#: ../../pyvista/docs/examples/01-filter/boolean-operations.rst:24
msgid ""
"Perform boolean operations with closed surfaces (intersect, cut, etc.)."
msgstr "閉じたサーフェスで(交差，切断などの)ブーリアン演算を実行します．"

#: ../../pyvista/docs/examples/01-filter/boolean-operations.rst:26
msgid ""
"Boolean/topological operations (intersect, cut, etc.) methods are "
"implemented for :class:`pyvista.PolyData` mesh types only and are accessible"
" directly from any :class:`pyvista.PolyData` mesh. Check out "
":class:`pyvista.PolyDataFilters` and take a look at the following filters:"
msgstr ""
"ブール/位相演算(交差，切断)法は，  :class:`pyvista.PolyData` メッシュタイプに対してのみ実装され，任意の "
":class:`pyvista.PolyData` メッシュから直接アクセス可能である． "
":class:`pyvista.PolyDataFilters` をチェックして，次のフィルタを確認してください．"

#: ../../pyvista/docs/examples/01-filter/boolean-operations.rst:31
msgid ":func:`pyvista.PolyDataFilters.boolean_add`"
msgstr ":func:`pyvista.PolyDataFilters.boolean_add`"

#: ../../pyvista/docs/examples/01-filter/boolean-operations.rst:32
msgid ":func:`pyvista.PolyDataFilters.boolean_cut`"
msgstr ":func:`pyvista.PolyDataFilters.boolean_cut`"

#: ../../pyvista/docs/examples/01-filter/boolean-operations.rst:33
msgid ":func:`pyvista.PolyDataFilters.boolean_difference`"
msgstr ":func:`pyvista.PolyDataFilters.boolean_difference`"

#: ../../pyvista/docs/examples/01-filter/boolean-operations.rst:34
msgid ":func:`pyvista.PolyDataFilters.boolean_union`"
msgstr ":func:`pyvista.PolyDataFilters.boolean_union`"

#: ../../pyvista/docs/examples/01-filter/boolean-operations.rst:36
msgid ""
"For merging, the ``+`` operator can be used between any two meshes in "
"PyVista which simply calls the ``.merge()`` filter to combine any two "
"meshes. Similarly, the ``-`` operator can be used between any two "
":class:`pyvista.PolyData` meshes in PyVista to cut the first mesh by the "
"second."
msgstr ""
"マージでは， ``+`` 演算子をPyVistaの任意の2つのメッシュ間で使用できます．この演算子は，任意の2つのメッシュを結合するために "
"``.merge()`` フィルタを呼び出すだけです．同様に， ``-`` オペレータをPyVistaの任意の2つの "
":class:`pyvista.PolyData` メッシュ間で使用して，最初のメッシュを2番目のメッシュで切断することができます．"

#: ../../pyvista/docs/examples/01-filter/boolean-operations.rst:88
msgid "Boolean Add"
msgstr "ブール加算"

#: ../../pyvista/docs/examples/01-filter/boolean-operations.rst:90
msgid ""
"Add all of the two meshes together using the "
":func:`pyvista.PolyDataFilters.boolean_add` filter or the ``+`` operator."
msgstr ""
":func:`pyvista.PolyDataFilters.boolean_add` フィルタまたは ``+`` "
"操作を使用して，2つのメッシュをすべて追加します．"

#: ../../pyvista/docs/examples/01-filter/boolean-operations.rst:93
msgid ""
"Order of operations does not matter for boolean add as the entirety of both "
"meshes are appended together."
msgstr ""
"Order of operations does not matter for boolean add as the entirety of both "
"meshes are appended together."

#: ../../pyvista/docs/examples/01-filter/boolean-operations.rst:129
msgid "Boolean Cut"
msgstr "ブール切断"

#: ../../pyvista/docs/examples/01-filter/boolean-operations.rst:131
msgid ""
"Perform a boolean cut of ``a`` using ``b`` with the "
":func:`pyvista.PolyDataFilters.boolean_cut` filter or the ``-`` operator "
"since both meshes are :class:`pyvista.PolyData`."
msgstr ""
"両方のメッシュが :class:`pyvista.PolyData` であるため， "
":func:`pyvista.PolyDataFilters.boolean_cut` フィルタまたは ``-`` 演算子付きの ``b`` を使用して"
" ``a`` のブーリアンカットを実行します．"

#: ../../pyvista/docs/examples/01-filter/boolean-operations.rst:135
msgid "Order of operations does not matter for boolean cut."
msgstr "ブーリアンカットでは，操作の順序は関係ありません．"

#: ../../pyvista/docs/examples/01-filter/boolean-operations.rst:173
msgid "Boolean Difference"
msgstr "論理差"

#: ../../pyvista/docs/examples/01-filter/boolean-operations.rst:175
msgid ""
"Combine two meshes and retains only the volume in common between the meshes "
"using the :func:`pyvista.PolyDataFilters.boolean_difference` method."
msgstr ""
":func:`pyvista.PolyDataFilters.boolean_difference` "
"法を使用して，2つのメッシュを結合し，メッシュ間で共通の体積のみを保持します．"

#: ../../pyvista/docs/examples/01-filter/boolean-operations.rst:178
msgid ""
"Note that the order of operations for a boolean difference will affect the "
"results."
msgstr "ブール差の演算順序が結果に影響することに注意してください．"

#: ../../pyvista/docs/examples/01-filter/boolean-operations.rst:249
msgid "Boolean Union"
msgstr "ブール演算和"

#: ../../pyvista/docs/examples/01-filter/boolean-operations.rst:251
msgid ""
"Combine two meshes and attempts to create a manifold mesh using the "
":func:`pyvista.PolyDataFilters.boolean_union` method."
msgstr ""
"2つのメッシュを結合し， :func:`pyvista.PolyDataFilters.boolean_union` "
"方法を使用して多様体メッシュの作成を試みます．"

#: ../../pyvista/docs/examples/01-filter/boolean-operations.rst:254
msgid "Order of operations does not matter for boolean union."
msgstr "Order of operations does not matter for boolean union."

#: ../../pyvista/docs/examples/01-filter/boolean-operations.rst:290
msgid "**Total running time of the script:** ( 0 minutes  12.444 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  12.444 seconds)"

#: ../../pyvista/docs/examples/01-filter/boolean-operations.rst:305
msgid ""
":download:`Download Python source code: boolean-operations.py <boolean-"
"operations.py>`"
msgstr ""
":download:`Download Python source code: boolean-operations.py <boolean-"
"operations.py>`"

#: ../../pyvista/docs/examples/01-filter/boolean-operations.rst:311
msgid ""
":download:`Download Jupyter notebook: boolean-operations.ipynb <boolean-"
"operations.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: boolean-operations.ipynb <boolean-"
"operations.ipynb>`"

#: ../../pyvista/docs/examples/01-filter/cell-centers.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_cell-centers.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_cell-centers.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/01-filter/cell-centers.rst:22
msgid "Extract Cell Centers"
msgstr "セルの中心を抽出"

#: ../../pyvista/docs/examples/01-filter/cell-centers.rst:24
msgid "Extract the coordinates of the centers of all cells/faces in a mesh."
msgstr "メッシュ内のすべてのセル/面の中心の座標を抽出します．"

#: ../../pyvista/docs/examples/01-filter/cell-centers.rst:26
msgid "Here we use :func:`pyvista.DataSetFilters.cell_centers`"
msgstr "ここでは :func:`pyvista.DataSetFilters.cell_centers` を使います．"

#: ../../pyvista/docs/examples/01-filter/cell-centers.rst:45
msgid "First let's fetch the centers of a mesh with 2D geometries (a surface)"
msgstr "最初に，2 Dジオメトリ(表面)を使用してメッシュの中心を取得します．"

#: ../../pyvista/docs/examples/01-filter/cell-centers.rst:88
msgid "We can also do this for full 3D meshes."
msgstr "これは，フル3 Dメッシュに対しても実行できます．"

#: ../../pyvista/docs/examples/01-filter/cell-centers.rst:163
msgid "**Total running time of the script:** ( 0 minutes  2.441 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  2.441 seconds)"

#: ../../pyvista/docs/examples/01-filter/cell-centers.rst:178
msgid ""
":download:`Download Python source code: cell-centers.py <cell-centers.py>`"
msgstr ""
":download:`Download Python source code: cell-centers.py <cell-centers.py>`"

#: ../../pyvista/docs/examples/01-filter/cell-centers.rst:184
msgid ""
":download:`Download Jupyter notebook: cell-centers.ipynb <cell-"
"centers.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: cell-centers.ipynb <cell-"
"centers.ipynb>`"

#: ../../pyvista/docs/examples/01-filter/clipping.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_clipping.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_clipping.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/01-filter/clipping.rst:22
msgid "Clipping with Planes & Boxes"
msgstr "平面とボックスでクリップします"

#: ../../pyvista/docs/examples/01-filter/clipping.rst:24
msgid "Clip/cut any dataset using using planes or boxes."
msgstr "平面またはボックスを使用してデータセットをクリップ/カットします．"

#: ../../pyvista/docs/examples/01-filter/clipping.rst:44
msgid "Clip with Plane"
msgstr "平面付きクリップ"

#: ../../pyvista/docs/examples/01-filter/clipping.rst:46
msgid ""
"Clip any dataset by a user defined plane using the "
":func:`pyvista.DataSetFilters.clip` filter"
msgstr ":func:`pyvista.DataSetFilters.clip` フィルタを使用したユーザ定義平面によるデータセットのクリップ"

#: ../../pyvista/docs/examples/01-filter/clipping.rst:90
msgid "Clip with Bounds"
msgstr "境界付きクリップ"

#: ../../pyvista/docs/examples/01-filter/clipping.rst:92
msgid ""
"Clip any dataset by a set of XYZ bounds using the "
":func:`pyvista.DataSetFilters.clip_box` filter."
msgstr ""
":func:`pyvista.DataSetFilters.clip_box` "
"フィルタを使用して，XYZ境界のセットによってデータセットをクリップします．"

#: ../../pyvista/docs/examples/01-filter/clipping.rst:135
msgid "Clip with Rotated Box"
msgstr "回転ボックス付きクリップ"

#: ../../pyvista/docs/examples/01-filter/clipping.rst:137
msgid ""
"Clip any dataset by an arbitrarily rotated solid box using the "
":func:`pyvista.DataSetFilters.clip_box` filter."
msgstr ""
":func:`pyvista.DataSetFilters.clip_box` "
"フィルタを使用して任意に回転したソリッドボックスでデータセットをクリップします．"

#: ../../pyvista/docs/examples/01-filter/clipping.rst:179
msgid "Run the box clipping algorithm"
msgstr "ボックスクリッピングアルゴリズムを実行します"

#: ../../pyvista/docs/examples/01-filter/clipping.rst:220
msgid "**Total running time of the script:** ( 0 minutes  2.931 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  2.931 seconds)"

#: ../../pyvista/docs/examples/01-filter/clipping.rst:235
msgid ":download:`Download Python source code: clipping.py <clipping.py>`"
msgstr ":download:`Download Python source code: clipping.py <clipping.py>`"

#: ../../pyvista/docs/examples/01-filter/clipping.rst:241
msgid ":download:`Download Jupyter notebook: clipping.ipynb <clipping.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: clipping.ipynb <clipping.ipynb>`"

#: ../../pyvista/docs/examples/01-filter/clipping-with-surface.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_clipping-with-"
"surface.py>` to download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_clipping-with-"
"surface.py>` to download the full example code"

#: ../../pyvista/docs/examples/01-filter/clipping-with-surface.rst:22
msgid "Clipping with a Surface"
msgstr "サーフェスを使用したクリップ"

#: ../../pyvista/docs/examples/01-filter/clipping-with-surface.rst:24
msgid ""
"Clip any PyVista dataset by a :class:`pyvista.PolyData` surface mesh using "
"the :func:`pyvista.DataSet.Filters.clip_surface` filter."
msgstr ""
":func:`pyvista.DataSet.Filters.clip_surface` フィルタを使用して "
":class:`pyvista.PolyData` サーフェスメッシュによってPyVistaデータセットをクリップします．"

#: ../../pyvista/docs/examples/01-filter/clipping-with-surface.rst:27
msgid ""
"Note that we first demonstrate how the clipping is performed by computing an"
" implicit distance and thresholding the mesh. This thresholding is one "
"approach to clip by a surface, and preserve the original geometry of the "
"given mesh, but many folks leverage the ``clip_surface`` filter to "
"triangulate/tessellate the mesh geometries along the clip."
msgstr ""
"最初に，暗黙的な距離を計算してメッシュを閾値設定することにより，クリッピングを実行する方法を説明します．このしきい値設定は，サーフェスでクリップし，指定されたメッシュの元のジオメトリを保持する1つの方法ですが，多くのユーザは"
" ``clip_surface`` フィルタを利用して，クリップに沿ってメッシュジオメトリを三角形化/面分割します．"

#: ../../pyvista/docs/examples/01-filter/clipping-with-surface.rst:94
msgid ""
"Take a look at the implicit function used to perform the surface clipping by"
" using the :func:`pyvista.DataSetFilters.compute_implicit_distance` filter. "
"The clipping operation field is performed where the ``implicit_distance`` "
"field is zero and the ``invert`` flag controls which sides of zero to "
"preserve."
msgstr ""
":func:`pyvista.DataSetFilters.compute_implicit_distance` "
"フィルタを使用してサーフェスクリッピングを実行する際に使用される暗黙的な関数を確認してください． ``implicit_distance`` "
"フィールドが0であるクリッピング操作フィールドが実行され， ``invert`` フラグが0のどちら側を保持するかを制御します．"

#: ../../pyvista/docs/examples/01-filter/clipping-with-surface.rst:175
msgid ""
"Clip the rectilinear grid dataset using the :class:`pyvista.PolyData` "
"surface mesh via the :func:`pyvista.DataSet.Filters.clip_surface` filter. "
"This will triangulate/tessellate the mesh geometries along the clip."
msgstr ""
":func:`pyvista.DataSet.Filters.clip_surface` フィルタを介して "
":class:`pyvista.PolyData` "
"サーフェスメッシュを使用して，直線グリッドデータセットをクリップします．これにより，クリップに沿ってメッシュジオメトリが三角形化/面分割されます．"

#: ../../pyvista/docs/examples/01-filter/clipping-with-surface.rst:217
msgid ""
"Here is another example of clipping a mesh by a surface. This time, we'll "
"generate a :class:`pyvista.UniformGrid` around a topography surface and then"
" clip that grid using the surface to create a closed 3D model of the surface"
msgstr ""
"次に，サーフェスでメッシュをクリップする別の例を示します．今回は，地形サーフェスの周囲に :class:`pyvista.UniformGrid` "
"を生成し，サーフェスを使用してグリッドをクリップして，サーフェスの閉じた3 Dモデルを作成します．"

#: ../../pyvista/docs/examples/01-filter/clipping-with-surface.rst:259
msgid "**Total running time of the script:** ( 0 minutes  58.890 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  58.890 seconds)"

#: ../../pyvista/docs/examples/01-filter/clipping-with-surface.rst:274
msgid ""
":download:`Download Python source code: clipping-with-surface.py <clipping-"
"with-surface.py>`"
msgstr ""
":download:`Download Python source code: clipping-with-surface.py <clipping-"
"with-surface.py>`"

#: ../../pyvista/docs/examples/01-filter/clipping-with-surface.rst:280
msgid ""
":download:`Download Jupyter notebook: clipping-with-surface.ipynb <clipping-"
"with-surface.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: clipping-with-surface.ipynb <clipping-"
"with-surface.ipynb>`"

#: ../../pyvista/docs/examples/01-filter/compute-normals.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_compute-normals.py>` "
"to download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_compute-normals.py>` "
"to download the full example code"

#: ../../pyvista/docs/examples/01-filter/compute-normals.rst:22
msgid "Computing Surface Normals"
msgstr "表面の法線を計算します"

#: ../../pyvista/docs/examples/01-filter/compute-normals.rst:25
msgid "Compute normals on a surface."
msgstr "表面上の法線を計算します．"

#: ../../pyvista/docs/examples/01-filter/compute-normals.rst:45
msgid ""
"Computing the normals of a surface is quite easy using "
":class:`pyvista.PolyData`'s :func:`pyvista.PolyDataFilters.compute_normals` "
"method."
msgstr ""
"サーフェスの法線を計算するには， :class:`pyvista.PolyData` の "
":func:`pyvista.PolyDataFilters.compute_normals` メソッドを使うと非常に簡単です．"

#: ../../pyvista/docs/examples/01-filter/compute-normals.rst:80
msgid ""
"Now we have a surface dataset of the globe loaded - unfortunately, the "
"dataset shows the globe with a uniform radius which hides topographic "
"relief. Using :func:`pyvista.PolyData.compute_normals`, we can compute the "
"normal vectors on the globe at all points in the dataset, then use the "
"values given in the dataset to warp the surface in the normals direction to "
"create some exaggerated topographic relief."
msgstr ""
"これで地球のサーフェスデータセットがロードされました．残念ながら，データセットには地形起伏を隠す均一な半径の地球が表示されます． "
":func:`pyvista.PolyData.compute_normals` "
"を使用して，データセット内のすべてのポイントで地球上の法線ベクトルを計算し，データセットで指定された値を使用してサーフェスを法線方向にワープし，誇張された地形レリーフを作成します．"

#: ../../pyvista/docs/examples/01-filter/compute-normals.rst:125
msgid ""
"We could also use face/cell normals to extract a all the faces of a mesh "
"facing a general direction. In the following snippet, we take a mesh, "
"compute the normals along its cell faces, and extract the faces that face "
"upward."
msgstr ""
"面/セル法線を使用して，一般的な方向を向いているメッシュのすべての面を抽出することもできます．次のスニペットでは，メッシュを取得し，そのセル面に沿って法線を計算し，上向きの面を抽出します．"

#: ../../pyvista/docs/examples/01-filter/compute-normals.rst:173
msgid "**Total running time of the script:** ( 0 minutes  20.239 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  20.239 seconds)"

#: ../../pyvista/docs/examples/01-filter/compute-normals.rst:188
msgid ""
":download:`Download Python source code: compute-normals.py <compute-"
"normals.py>`"
msgstr ""
":download:`Download Python source code: compute-normals.py <compute-"
"normals.py>`"

#: ../../pyvista/docs/examples/01-filter/compute-normals.rst:194
msgid ""
":download:`Download Jupyter notebook: compute-normals.ipynb <compute-"
"normals.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: compute-normals.ipynb <compute-"
"normals.ipynb>`"

#: ../../pyvista/docs/examples/01-filter/compute-volume.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_compute-volume.py>` "
"to download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_compute-volume.py>` "
"to download the full example code"

#: ../../pyvista/docs/examples/01-filter/compute-volume.rst:22
msgid "Volumetric Analysis"
msgstr "ボリューム分析"

#: ../../pyvista/docs/examples/01-filter/compute-volume.rst:25
msgid "Calculate mass properties such as the volume or area of datasets"
msgstr "データセットの体積や面積などのマスプロパティを計算します"

#: ../../pyvista/docs/examples/01-filter/compute-volume.rst:45
msgid ""
"Computing mass properties such as the volume or area of datasets in PyVista "
"is quite easy using the :func:`pyvista.DataSetFilters.compute_cell_sizes` "
"filter and the :attr:`pyvista.DataSet.volume` property on all PyVista "
"meshes."
msgstr ""
"PyVistaでデータセットの体積や面積などの質量特性を計算するには，すべてのPyVistaメッシュで "
":func:`pyvista.DataSetFilters.compute_cell_sizes` フィルタと "
":attr:`pyvista.DataSet.volume` プロパティを使用すると非常に簡単です．"

#: ../../pyvista/docs/examples/01-filter/compute-volume.rst:49
msgid "Let's get started with a simple gridded mesh:"
msgstr "簡単なグリッドメッシュから始めましょう．"

#: ../../pyvista/docs/examples/01-filter/compute-volume.rst:69
msgid ""
"We can then calculate the volume of every cell in the array using the "
"``.compute_cell_sizes`` filter which will add arrays to the cell data of the"
" mesh core the volume and area by default."
msgstr ""
"次に， ``.compute_cell_sizes`` フィルタを使用して，配列内のすべてのセルの体積を計算できます． "
"``.compute_cell_sizes`` フィルタは，メッシュコアのセルデータに配列を追加します．既定では，体積と面積です．"

#: ../../pyvista/docs/examples/01-filter/compute-volume.rst:93
msgid ""
"We can also compute the total volume of the mesh using the ``.volume`` "
"property:"
msgstr "また， ``.volume`` プロパティを使用してメッシュの総体積を計算することもできます．"

#: ../../pyvista/docs/examples/01-filter/compute-volume.rst:113
msgid ""
"Okay awesome! But what if we have have a dataset that we threshold with two "
"volumetric bodies left over in one dataset? Take this for example:"
msgstr ""
"わかったわ!しかし，1つのデータセットに2つのボリュームボディを残したまま閾値を設定したデータセットがあるとしたらどうでしょうか．たとえば，次のようになります．"

#: ../../pyvista/docs/examples/01-filter/compute-volume.rst:148
msgid ""
"We could then assign a classification array for the two bodies, compute the "
"cell sizes, then extract the volumes of each body. Note that there is a "
"simpler implementation of this below in :ref:`split_vol_ref`."
msgstr ""
"次に，2つのボディの分類配列を割り当て，セルサイズを計算し，各ボディの体積を抽出します．以下の :ref:`split_vol_ref` "
"でより簡単な実装があることに注意してください．"

#: ../../pyvista/docs/examples/01-filter/compute-volume.rst:195
msgid ""
"Or better yet, you could simply extract the largest volume from your "
"thresholded dataset by passing ``largest=True`` to the ``connectivity`` "
"filter or by using ``extract_largest`` filter (both are equivalent)."
msgstr ""
"あるいはもっと良い方法として， ``largest=True`` を ``connectivity`` フィルタに渡すか， "
"``extract_largest`` "
"フィルタ(どちらも同じ)を使用することで，閾値を設定したデータセットから最大のボリュームを単純に抽出することもできます．"

#: ../../pyvista/docs/examples/01-filter/compute-volume.rst:243
msgid "Splitting Volumes"
msgstr "ボリュームの分割"

#: ../../pyvista/docs/examples/01-filter/compute-volume.rst:245
msgid ""
"What if instead, we wanted to split all the different connected bodies / "
"volumes in a dataset like the one above? We could use the "
":func:`pyvista.DataSetFilters.split_bodies` filter to extract all the "
"different connected volumes in a dataset into blocks in a "
":class:`pyvista.MultiBlock` dataset. For example, lets split the thresholded"
" volume in the example above:"
msgstr ""
"その代わりに，上記のようなデータセットで，接続されているすべてのボディ/ボリュームを分割したいとしたらどうでしょうか． "
":func:`pyvista.DataSetFilters.split_bodies` "
"フィルタを使用して，データセット内のすべての異なる接続ボリュームを :class:`pyvista.MultiBlock` "
"データセット内のブロックに抽出することができます．たとえば，上記の例で，しきい値設定されたボリュームを分割します．"

#: ../../pyvista/docs/examples/01-filter/compute-volume.rst:318
msgid "A Real Dataset"
msgstr "実際のデータセット"

#: ../../pyvista/docs/examples/01-filter/compute-volume.rst:320
msgid ""
"Here is a realistic training dataset of fluvial channels in the subsurface. "
"This will threshold the channels from the dataset then separate each "
"significantly large body and compute the volumes for each!"
msgstr ""
"これは，地下の河道の現実的なトレーニングデータセットです．これにより，データセットのチャネルがしきい値に設定され，非常に大きなボディのそれぞれが分離され，それぞれのボリュームが計算されます．"

#: ../../pyvista/docs/examples/01-filter/compute-volume.rst:324
msgid "Load up the data and threshold the channels:"
msgstr "データをロードし，チャンネルを閾値に設定します．"

#: ../../pyvista/docs/examples/01-filter/compute-volume.rst:343
msgid "Now extract all the different bodies and compute their volumes:"
msgstr "ここで，すべての異なるボディを抽出し，それらのボリュームを計算します．"

#: ../../pyvista/docs/examples/01-filter/compute-volume.rst:370
msgid "Print out the volumes for each body:"
msgstr "各ボディの体積をプリントします．"

#: ../../pyvista/docs/examples/01-filter/compute-volume.rst:417
msgid "And visualize all the different volumes:"
msgstr "そして，あらゆるボリュームを視覚化します．"

#: ../../pyvista/docs/examples/01-filter/compute-volume.rst:449
msgid "**Total running time of the script:** ( 0 minutes  18.693 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  18.693 seconds)"

#: ../../pyvista/docs/examples/01-filter/compute-volume.rst:464
msgid ""
":download:`Download Python source code: compute-volume.py <compute-"
"volume.py>`"
msgstr ""
":download:`Download Python source code: compute-volume.py <compute-"
"volume.py>`"

#: ../../pyvista/docs/examples/01-filter/compute-volume.rst:470
msgid ""
":download:`Download Jupyter notebook: compute-volume.ipynb <compute-"
"volume.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: compute-volume.ipynb <compute-"
"volume.ipynb>`"

#: ../../pyvista/docs/examples/01-filter/connectivity.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_connectivity.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_connectivity.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/01-filter/connectivity.rst:22
msgid "Connectivity"
msgstr "接続性"

#: ../../pyvista/docs/examples/01-filter/connectivity.rst:24
msgid "Use the connectivity filter to remove noisy isosurfaces."
msgstr "ノイズの多い等値面を削除するには，接続フィルタを使用します．"

#: ../../pyvista/docs/examples/01-filter/connectivity.rst:26
msgid ""
"This example is very similar to `this VTK example "
"<https://lorensen.github.io/VTKExamples/site/Python/VisualizationAlgorithms/PineRootConnectivity/>`__"
msgstr ""
"この例は `この VTK の例 "
"<https://lorensen.github.io/VTKExamples/site/Python/VisualizationAlgorithms/PineRootConnectivity/>`__"
" に非常によく似ています．"

#: ../../pyvista/docs/examples/01-filter/connectivity.rst:45
msgid "Load a dataset that has noisy isosurfaces"
msgstr "ノイズの多い等値面を持つデータセットをロードします"

#: ../../pyvista/docs/examples/01-filter/connectivity.rst:86
msgid ""
"The mesh plotted above is very noisy. We can extract the largest connected "
"isosurface in that mesh using the "
":func:`pyvista.DataSetFilters.connectivity` filter and passing "
"``largest=True`` to the ``connectivity`` filter or by using the "
":func:`pyvista.DataSetFilters.extract_largest` filter (both are equivalent)."
msgstr ""
"上にプロットしたメッシュは非常にノイズが多い． :func:`pyvista.DataSetFilters.connectivity` "
"フィルタを使用し， ``connectivity`` フィルタに ``largest=True`` を渡すか，または "
":func:`pyvista.DataSetFilters.extract_largest` "
"フィルタ(どちらも同じ)を使用することで，そのメッシュ内の最大接続等値面を抽出できます．"

#: ../../pyvista/docs/examples/01-filter/connectivity.rst:130
msgid "**Total running time of the script:** ( 0 minutes  2.782 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  2.782 seconds)"

#: ../../pyvista/docs/examples/01-filter/connectivity.rst:145
msgid ""
":download:`Download Python source code: connectivity.py <connectivity.py>`"
msgstr ""
":download:`Download Python source code: connectivity.py <connectivity.py>`"

#: ../../pyvista/docs/examples/01-filter/connectivity.rst:151
msgid ""
":download:`Download Jupyter notebook: connectivity.ipynb "
"<connectivity.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: connectivity.ipynb "
"<connectivity.ipynb>`"

#: ../../pyvista/docs/examples/01-filter/contouring.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_contouring.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_contouring.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/01-filter/contouring.rst:22
msgid "Contouring"
msgstr "コンタリング"

#: ../../pyvista/docs/examples/01-filter/contouring.rst:24
msgid ""
"Generate iso-lines or -surfaces for the scalars of a surface or volume."
msgstr "サーフェスまたはボリュームのスカラー用にアイソラインまたはサーフェスを生成します．"

#: ../../pyvista/docs/examples/01-filter/contouring.rst:26
msgid ""
"3D meshes can have 2D iso-surfaces of a scalar field extracted and 2D "
"surface meshes can have 1D iso-lines of a scalar field extracted."
msgstr ""
"3 Dメッシュはスカラーフィールドの2 D等値面を抽出することができ，2 Dサーフェスメッシュはスカラーフィールドの1 "
"D等値線を抽出することができます．"

#: ../../pyvista/docs/examples/01-filter/contouring.rst:49
msgid "Iso-Lines"
msgstr "等値線"

#: ../../pyvista/docs/examples/01-filter/contouring.rst:51
msgid "Let's extract 1D iso-lines of a scalar field from a 2D surface mesh."
msgstr "2 Dサーフェスメッシュからスカラーフィールドの1 D等値線を抽出します．"

#: ../../pyvista/docs/examples/01-filter/contouring.rst:91
msgid "Iso-Surfaces"
msgstr "等値面"

#: ../../pyvista/docs/examples/01-filter/contouring.rst:93
msgid "Let's extract 2D iso-surfaces of a scalar field from a 3D mesh."
msgstr "3 Dメッシュからスカラーフィールドの2 D等値面を抽出してみましょう．"

#: ../../pyvista/docs/examples/01-filter/contouring.rst:134
msgid "**Total running time of the script:** ( 0 minutes  5.863 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  5.863 seconds)"

#: ../../pyvista/docs/examples/01-filter/contouring.rst:149
msgid ":download:`Download Python source code: contouring.py <contouring.py>`"
msgstr ""
":download:`Download Python source code: contouring.py <contouring.py>`"

#: ../../pyvista/docs/examples/01-filter/contouring.rst:155
msgid ""
":download:`Download Jupyter notebook: contouring.ipynb <contouring.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: contouring.ipynb <contouring.ipynb>`"

#: ../../pyvista/docs/examples/01-filter/decimate.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_decimate.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_decimate.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/01-filter/decimate.rst:22
msgid "Decimation"
msgstr "間引き"

#: ../../pyvista/docs/examples/01-filter/decimate.rst:24
msgid "Decimate a mesh"
msgstr "メッシュを縮小する"

#: ../../pyvista/docs/examples/01-filter/decimate.rst:67
msgid ""
"Now let's define a target reduction and compare the "
":func:`pyvista.PolyData.decimate` and :func:`pyvista.PolyData.decimate_pro` "
"filters."
msgstr ""
"ここで，削減目標を定義し， :func:`pyvista.PolyData.decimate` フィルタと "
":func:`pyvista.PolyData.decimate_pro` フィルタを比較してみましょう．"

#: ../../pyvista/docs/examples/01-filter/decimate.rst:155
msgid "Side by side comparison:"
msgstr "並べて比較:"

#: ../../pyvista/docs/examples/01-filter/decimate.rst:203
msgid "**Total running time of the script:** ( 0 minutes  3.121 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  3.121 seconds)"

#: ../../pyvista/docs/examples/01-filter/decimate.rst:218
msgid ":download:`Download Python source code: decimate.py <decimate.py>`"
msgstr ":download:`Download Python source code: decimate.py <decimate.py>`"

#: ../../pyvista/docs/examples/01-filter/decimate.rst:224
msgid ":download:`Download Jupyter notebook: decimate.ipynb <decimate.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: decimate.ipynb <decimate.ipynb>`"

#: ../../pyvista/docs/examples/01-filter/distance-between-surfaces.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_distance-between-"
"surfaces.py>` to download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_distance-between-"
"surfaces.py>` to download the full example code"

#: ../../pyvista/docs/examples/01-filter/distance-between-surfaces.rst:22
msgid "Distance Between Two Surfaces"
msgstr "2つのサーフェス間の距離"

#: ../../pyvista/docs/examples/01-filter/distance-between-surfaces.rst:24
msgid "Compute the average thickness between two surfaces."
msgstr "2つのサーフェス間の平均厚みを計算します．"

#: ../../pyvista/docs/examples/01-filter/distance-between-surfaces.rst:26
msgid ""
"For example, you might have two surfaces that represent the boundaries of "
"lithological layers in a subsurface geological model and you want to know "
"the average thickness of a unit between those boundaries."
msgstr "たとえば，地下地質モデルの岩石層の境界を表す2つのサーフェスがあり，それらの境界間の単位の平均厚さを知りたいとします．"

#: ../../pyvista/docs/examples/01-filter/distance-between-surfaces.rst:30
msgid ""
"We can compute the thickness between the two surfaces using a few different "
"methods. First, we will demo a method where we compute the normals of the "
"bottom surface, and then project a ray to the top surface to compute the "
"distance along the surface normals. Second, we will use a KDTree to compute "
"the distance from every point in the bottom mesh to it's closest point in "
"the top mesh."
msgstr ""
"2つのサーフェス間の厚みは，いくつかの異なる方法を使用して計算できます．最初に，底面サーフェスの法線を計算し，次に上面サーフェスに光線を投影してサーフェス法線に沿った距離を計算する方法をデモします．次に，KDTreeを使用して，下部メッシュの各ポイントから上部メッシュの最も近いポイントまでの距離を計算します．"

#: ../../pyvista/docs/examples/01-filter/distance-between-surfaces.rst:100
msgid "Ray Tracing Distance"
msgstr "レイトレーシング距離"

#: ../../pyvista/docs/examples/01-filter/distance-between-surfaces.rst:102
msgid "Compute normals of lower surface"
msgstr "下部サーフェスの法線を計算"

#: ../../pyvista/docs/examples/01-filter/distance-between-surfaces.rst:120
msgid ""
"Travel along normals to the other surface and compute the thickness on each "
"vector."
msgstr "法線に沿って他のサーフェスに移動し，各ベクトルの厚みを計算します．"

#: ../../pyvista/docs/examples/01-filter/distance-between-surfaces.rst:192
msgid "Nearest Neighbor Distance"
msgstr "最近接距離"

#: ../../pyvista/docs/examples/01-filter/distance-between-surfaces.rst:194
msgid ""
"You could also use a KDTree to compare the distance between each point of "
"the upper surface and the nearest neighbor of the lower surface. This won't "
"be the exact surface to surface distance, but it will be noticeably faster "
"than a ray trace, especially for large surfaces."
msgstr ""
"KDTreeを使用して，上部サーフェスの各ポイントと下部サーフェスの最も近い隣接ポイント間の距離を比較することもできます．これはサーフェス間の正確な距離ではありませんが，特に大きなサーフェスでは，レイトレースよりも著しく高速になります．"

#: ../../pyvista/docs/examples/01-filter/distance-between-surfaces.rst:257
msgid "**Total running time of the script:** ( 0 minutes  6.482 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  6.482 seconds)"

#: ../../pyvista/docs/examples/01-filter/distance-between-surfaces.rst:272
msgid ""
":download:`Download Python source code: distance-between-surfaces.py "
"<distance-between-surfaces.py>`"
msgstr ""
":download:`Download Python source code: distance-between-surfaces.py "
"<distance-between-surfaces.py>`"

#: ../../pyvista/docs/examples/01-filter/distance-between-surfaces.rst:278
msgid ""
":download:`Download Jupyter notebook: distance-between-surfaces.ipynb "
"<distance-between-surfaces.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: distance-between-surfaces.ipynb "
"<distance-between-surfaces.ipynb>`"

#: ../../pyvista/docs/examples/01-filter/extract-cells-inside-surface.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_extract-cells-inside-"
"surface.py>` to download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_extract-cells-inside-"
"surface.py>` to download the full example code"

#: ../../pyvista/docs/examples/01-filter/extract-cells-inside-surface.rst:22
msgid "Extract Cells Inside Surface"
msgstr "サーフェス内のセルを抽出"

#: ../../pyvista/docs/examples/01-filter/extract-cells-inside-surface.rst:24
msgid ""
"Extract the cells in a mesh that exist inside or outside a closed surface of"
" another mesh"
msgstr "別のメッシュの閉じたサーフェスの内側または外側に存在するメッシュ内のセルを抽出する"

#: ../../pyvista/docs/examples/01-filter/extract-cells-inside-surface.rst:75
msgid "Mark points inside with 1 and outside with a 0"
msgstr "内側の点を1，外側の点を0でマークします．"

#: ../../pyvista/docs/examples/01-filter/extract-cells-inside-surface.rst:89
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>3263</td></tr>\n"
"<tr><td>N Points</td><td>2903</td></tr>\n"
"<tr><td>X Bounds</td><td>-4.446e+00, 5.998e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>-3.637e+00, 2.760e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>-1.701e+00, 1.701e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>SelectedPoints</b></td><td>Points</td><td>uint8</td><td>1</td><td>0.000e+00</td><td>1.000e+00</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>3263</td></tr>\n"
"<tr><td>N Points</td><td>2903</td></tr>\n"
"<tr><td>X Bounds</td><td>-4.446e+00, 5.998e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>-3.637e+00, 2.760e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>-1.701e+00, 1.701e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>SelectedPoints</b></td><td>Points</td><td>uint8</td><td>1</td><td>0.000e+00</td><td>1.000e+00</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/docs/examples/01-filter/extract-cells-inside-surface.rst:116
msgid ""
"Extract two meshes, one completely inside and one completely outside the "
"enclosing surface."
msgstr "2つのメッシュ，1つは完全に内側，もう1つは完全に外側を抽出します．"

#: ../../pyvista/docs/examples/01-filter/extract-cells-inside-surface.rst:136
msgid "display the results"
msgstr "結果を表示する"

#: ../../pyvista/docs/examples/01-filter/extract-cells-inside-surface.rst:174
msgid "**Total running time of the script:** ( 0 minutes  1.653 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.653 seconds)"

#: ../../pyvista/docs/examples/01-filter/extract-cells-inside-surface.rst:189
msgid ""
":download:`Download Python source code: extract-cells-inside-surface.py "
"<extract-cells-inside-surface.py>`"
msgstr ""
":download:`Download Python source code: extract-cells-inside-surface.py "
"<extract-cells-inside-surface.py>`"

#: ../../pyvista/docs/examples/01-filter/extract-cells-inside-surface.rst:195
msgid ""
":download:`Download Jupyter notebook: extract-cells-inside-surface.ipynb "
"<extract-cells-inside-surface.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: extract-cells-inside-surface.ipynb "
"<extract-cells-inside-surface.ipynb>`"

#: ../../pyvista/docs/examples/01-filter/extract-edges.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_extract-edges.py>` to"
" download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_extract-edges.py>` to"
" download the full example code"

#: ../../pyvista/docs/examples/01-filter/extract-edges.rst:22
msgid "Extract Edges"
msgstr "エッジを抽出"

#: ../../pyvista/docs/examples/01-filter/extract-edges.rst:24
msgid "Extracts edges from a surface."
msgstr "サーフェスからエッジを抽出します．"

#: ../../pyvista/docs/examples/01-filter/extract-edges.rst:44
msgid "From vtk documentation, the edges of a mesh are one of the following:"
msgstr "vtkのマニュアルによると，メッシュのエッジは次のいずれかです．"

#: ../../pyvista/docs/examples/01-filter/extract-edges.rst:46
msgid "boundary (used by one polygon) or a line cell"
msgstr "境界(1つのポリゴンで使用)またはラインセル"

#: ../../pyvista/docs/examples/01-filter/extract-edges.rst:47
msgid "non-manifold (used by three or more polygons)"
msgstr "非多様体(3つ以上の多角形によって使用されます)"

#: ../../pyvista/docs/examples/01-filter/extract-edges.rst:48
msgid ""
"feature edges (edges used by two triangles and whose dihedral angle > "
"feature_angle)"
msgstr "フィーチャエッジ(2つの三角形で使用され，二面角がfeature_angleより大きいエッジ)"

#: ../../pyvista/docs/examples/01-filter/extract-edges.rst:49
msgid "manifold edges (edges used by exactly two polygons)."
msgstr "多様体のエッジ(ちょうど2つのポリゴンで使用されるエッジ)．"

#: ../../pyvista/docs/examples/01-filter/extract-edges.rst:51
msgid ""
"This filter will extract those edges given a feature angle and return a "
"dataset with lines that represent the edges of the original mesh. To "
"demonstrate, we will first extract the edges around Queen Nefertiti's eyes:"
msgstr ""
"このフィルタは，フィーチャ角度が指定されたエッジを抽出し，元のメッシュのエッジを表す線分のデータセットを返します．デモンストレーションでは，まずNefertiti女王の目の周りのエッジを抽出します．"

#: ../../pyvista/docs/examples/01-filter/extract-edges.rst:97
msgid ""
"We can do this analysis for any :class:`pyvista.PolyData` object. Let's try "
"the cow mesh example:"
msgstr "この解析は :class:`pyvista.PolyData` オブジェクトに対して行うことができます．牛のメッシュの例を見てみましょう．"

#: ../../pyvista/docs/examples/01-filter/extract-edges.rst:139
msgid ""
"We can leverage the :any:`pyvista.PolyData.n_open_edges` property and "
":func:`pyvista.PolyDataFilters.extract_feature_edges` filter to count and "
"extract the open edges on a :class:`pyvista.PolyData` mesh."
msgstr ""
":any:`pyvista.PolyData.n_open_edges` プロパティと "
":func:`pyvista.PolyDataFilters.extract_feature_edges` フィルタを利用して， "
":class:`pyvista.PolyData` メッシュの開いたエッジをカウントおよび抽出できます．"

#: ../../pyvista/docs/examples/01-filter/extract-edges.rst:160
msgid "We can get a count of the open edges with:"
msgstr "次のコマンドを使用すると，開いたエッジの数を取得できます:"

#: ../../pyvista/docs/examples/01-filter/extract-edges.rst:186
msgid ""
"And we can extract those edges with the ``boundary_edges`` option of "
":func:`pyvista.PolyDataFilters.extract_feature_edges`:"
msgstr ""
":func:`pyvista.PolyDataFilters.extract_feature_edges` の ``boundary_edges`` "
"オプションを使用すると，これらのエッジを抽出できます．"

#: ../../pyvista/docs/examples/01-filter/extract-edges.rst:226
msgid "**Total running time of the script:** ( 0 minutes  11.795 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  11.795 seconds)"

#: ../../pyvista/docs/examples/01-filter/extract-edges.rst:241
msgid ""
":download:`Download Python source code: extract-edges.py <extract-edges.py>`"
msgstr ""
":download:`Download Python source code: extract-edges.py <extract-edges.py>`"

#: ../../pyvista/docs/examples/01-filter/extract-edges.rst:247
msgid ""
":download:`Download Jupyter notebook: extract-edges.ipynb <extract-"
"edges.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: extract-edges.ipynb <extract-"
"edges.ipynb>`"

#: ../../pyvista/docs/examples/01-filter/extract-surface.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_extract-surface.py>` "
"to download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_extract-surface.py>` "
"to download the full example code"

#: ../../pyvista/docs/examples/01-filter/extract-surface.rst:22
msgid "Extract Surface"
msgstr "表面を抽出"

#: ../../pyvista/docs/examples/01-filter/extract-surface.rst:24
msgid ""
"You can extract the surface of nearly any object within ``pyvista`` using "
"the ``extract_surface`` filter."
msgstr ""
"``extract_surface`` フィルタを使用して， ``pyvista`` 内のほぼすべてのオブジェクトのサーフェスを抽出できます．"

#: ../../pyvista/docs/examples/01-filter/extract-surface.rst:48
msgid "Create a quadratic cell and extract its surface"
msgstr "2次セルを作成し，そのサーフェスを抽出します"

#: ../../pyvista/docs/examples/01-filter/extract-surface.rst:49
msgid ""
"Here we create a single quadratic hexahedral cell and then extract its "
"surface to demonstrate how to extract the surface of an UnstructuredGrid."
msgstr "ここでは，1つの2次六面体セルを作成し，そのサーフェスを抽出して，UnstructuredGridのサーフェスを抽出する方法を示します．"

#: ../../pyvista/docs/examples/01-filter/extract-surface.rst:125
msgid "Nonlinear Surface Subdivision"
msgstr "非線形サーフェスサブディビジョン"

#: ../../pyvista/docs/examples/01-filter/extract-surface.rst:126
msgid ""
"Should your UnstructuredGrid contain quadratic cells, you can generate a "
"smooth surface based on the position of the \"mid-edge\" nodes.  This allows"
" the plotting of cells containing curvature.  For additional reference, "
"please see: https://prod.sandia.gov/techlib-noauth/access-"
"control.cgi/2004/041617.pdf"
msgstr ""
"UnstructuredGridに二次セルが含まれている場合， \"中間\" "
"節点の位置に基づいて滑らかなサーフェスを生成できます．これにより，曲率を含むセルをプロットできます．詳細については， "
"https://prod.sandia.gov/techlib-noauth/access-control.cgi/2004/041617.pdf "
"を参照してください．"

#: ../../pyvista/docs/examples/01-filter/extract-surface.rst:163
msgid "**Total running time of the script:** ( 0 minutes  1.382 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.382 seconds)"

#: ../../pyvista/docs/examples/01-filter/extract-surface.rst:178
msgid ""
":download:`Download Python source code: extract-surface.py <extract-"
"surface.py>`"
msgstr ""
":download:`Download Python source code: extract-surface.py <extract-"
"surface.py>`"

#: ../../pyvista/docs/examples/01-filter/extract-surface.rst:184
msgid ""
":download:`Download Jupyter notebook: extract-surface.ipynb <extract-"
"surface.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: extract-surface.ipynb <extract-"
"surface.ipynb>`"

#: ../../pyvista/docs/examples/01-filter/extrude-rotate.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_extrude-rotate.py>` "
"to download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_extrude-rotate.py>` "
"to download the full example code"

#: ../../pyvista/docs/examples/01-filter/extrude-rotate.rst:22
msgid "Extrude Rotation"
msgstr "押し出し回転"

#: ../../pyvista/docs/examples/01-filter/extrude-rotate.rst:23
msgid ""
"Sweep polygonal data creating \"skirt\" from free edges and lines, and lines"
" from vertices."
msgstr "フリーエッジとフリーラインから \"skirt\" を作成し，頂点からラインを作成して，ポリゴンデータをスイープします．"

#: ../../pyvista/docs/examples/01-filter/extrude-rotate.rst:26
msgid ""
"This takes polygonal data as input and generates polygonal data on output. "
"The input dataset is swept around the z-axis to create new polygonal "
"primitives. These primitives form a \"skirt\" or swept surface. For example,"
" sweeping a line results in a cylindrical shell, and sweeping a circle "
"creates a torus."
msgstr ""
"ポリゴンデータを入力として取り，出力時にポリゴンデータを生成します．入力データセットがZ軸を中心にスイープされ，新しいポリゴンプリミティブが作成されます．これらのプリミティブは，"
" \"skirt\" "
"またはスイープサーフェスを形成します．たとえば，線分をスイープすると円柱シェルが作成され，円をスイープするとトーラスが作成されます．"

#: ../../pyvista/docs/examples/01-filter/extrude-rotate.rst:50
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>2</td></tr>\n"
"<tr><td>N Points</td><td>33</td></tr>\n"
"<tr><td>X Bounds</td><td>-1.000e+00, 1.000e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>-9.511e-01, 9.511e-01</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 0.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>2</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>Texture Coordinates</b></td><td>Points</td><td>float32</td><td>2</td><td>0.000e+00</td><td>1.000e+00</td></tr>\n"
"<tr><td>Distance</td><td>Points</td><td>float64</td><td>1</td><td>0.000e+00</td><td>1.000e+00</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>2</td></tr>\n"
"<tr><td>N Points</td><td>33</td></tr>\n"
"<tr><td>X Bounds</td><td>-1.000e+00, 1.000e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>-9.511e-01, 9.511e-01</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 0.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>2</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>Texture Coordinates</b></td><td>Points</td><td>float32</td><td>2</td><td>0.000e+00</td><td>1.000e+00</td></tr>\n"
"<tr><td>Distance</td><td>Points</td><td>float64</td><td>1</td><td>0.000e+00</td><td>1.000e+00</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/docs/examples/01-filter/extrude-rotate.rst:79
msgid "Plot the extruded line"
msgstr "押し出されたラインをプロットする"

#: ../../pyvista/docs/examples/01-filter/extrude-rotate.rst:132
msgid "Create a spring"
msgstr "ばねを作成する"

#: ../../pyvista/docs/examples/01-filter/extrude-rotate.rst:187
msgid "**Total running time of the script:** ( 0 minutes  4.217 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  4.217 seconds)"

#: ../../pyvista/docs/examples/01-filter/extrude-rotate.rst:202
msgid ""
":download:`Download Python source code: extrude-rotate.py <extrude-"
"rotate.py>`"
msgstr ""
":download:`Download Python source code: extrude-rotate.py <extrude-"
"rotate.py>`"

#: ../../pyvista/docs/examples/01-filter/extrude-rotate.rst:208
msgid ""
":download:`Download Jupyter notebook: extrude-rotate.ipynb <extrude-"
"rotate.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: extrude-rotate.ipynb <extrude-"
"rotate.ipynb>`"

#: ../../pyvista/docs/examples/01-filter/gaussian-smoothing.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_gaussian-"
"smoothing.py>` to download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_gaussian-"
"smoothing.py>` to download the full example code"

#: ../../pyvista/docs/examples/01-filter/gaussian-smoothing.rst:22
msgid "Gaussian Smoothing"
msgstr "Gaussianスムージング"

#: ../../pyvista/docs/examples/01-filter/gaussian-smoothing.rst:24
msgid "Perform a Gaussian convolution on a uniformly gridded data set."
msgstr "均一グリッドデータセットでGauss畳み込みを実行します．"

#: ../../pyvista/docs/examples/01-filter/gaussian-smoothing.rst:26
msgid ""
":class:`pyvista.UniformGrid` data sets (a.k.a. images) a can be smoothed by "
"convolving the  image data set with a Gaussian for one- to three-dimensional"
" inputs. This is commonly referred to as Gaussian blurring and typically "
"used to reduce noise or decrease the detail of an image dataset"
msgstr ""
":class:`pyvista.UniformGrid` データ集合(a.k.a. イメージ) "
"aは，画像データ集合を1次元から3次元入力に対してガウス関数で畳み込むことによって平滑化することができる．これは，一般にガウスぼかしと呼ばれ，通常，ノイズを低減するか，または画像データセットの詳細を低減するために使用される．"

#: ../../pyvista/docs/examples/01-filter/gaussian-smoothing.rst:59
msgid ""
"Let's apply the gaussian smoothing with different values of standard "
"deviation."
msgstr "異なる値の標準偏差でGaussスムージングを適用します．"

#: ../../pyvista/docs/examples/01-filter/gaussian-smoothing.rst:113
msgid "Now let's see an example on a 3D dataset with volume rendering:"
msgstr "次に，ボリュームレンダリングを使用した3Dデータセットの例を見てみましょう:"

#: ../../pyvista/docs/examples/01-filter/gaussian-smoothing.rst:167
msgid "**Total running time of the script:** ( 0 minutes  12.293 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  12.293 seconds)"

#: ../../pyvista/docs/examples/01-filter/gaussian-smoothing.rst:182
msgid ""
":download:`Download Python source code: gaussian-smoothing.py <gaussian-"
"smoothing.py>`"
msgstr ""
":download:`Download Python source code: gaussian-smoothing.py <gaussian-"
"smoothing.py>`"

#: ../../pyvista/docs/examples/01-filter/gaussian-smoothing.rst:188
msgid ""
":download:`Download Jupyter notebook: gaussian-smoothing.ipynb <gaussian-"
"smoothing.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: gaussian-smoothing.ipynb <gaussian-"
"smoothing.ipynb>`"

#: ../../pyvista/docs/examples/01-filter/geodesic.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_geodesic.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_geodesic.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/01-filter/geodesic.rst:22
msgid "Geodesic Paths"
msgstr "測地パス"

#: ../../pyvista/docs/examples/01-filter/geodesic.rst:24
msgid ""
"Calculates the geodesic path between two vertices using Dijkstra's algorithm"
msgstr "Dijkstraのアルゴリズムを使用して2つの頂点間の測地パスを計算します"

#: ../../pyvista/docs/examples/01-filter/geodesic.rst:46
msgid "Get the geodesic path as a new :class:`pyvista.PolyData` object:"
msgstr "測地線パスを新しい :class:`pyvista.PolyData` オブジェクトとして取得します．"

#: ../../pyvista/docs/examples/01-filter/geodesic.rst:70
msgid "Render the path along the land surface"
msgstr "ランドサーフェスに沿ってパスをレンダリングします"

#: ../../pyvista/docs/examples/01-filter/geodesic.rst:110
msgid "How long is that path?"
msgstr "その道はどのくらいの長さですか．"

#: ../../pyvista/docs/examples/01-filter/geodesic.rst:136
msgid "**Total running time of the script:** ( 0 minutes  14.437 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  14.437 seconds)"

#: ../../pyvista/docs/examples/01-filter/geodesic.rst:151
msgid ":download:`Download Python source code: geodesic.py <geodesic.py>`"
msgstr ":download:`Download Python source code: geodesic.py <geodesic.py>`"

#: ../../pyvista/docs/examples/01-filter/geodesic.rst:157
msgid ":download:`Download Jupyter notebook: geodesic.ipynb <geodesic.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: geodesic.ipynb <geodesic.ipynb>`"

#: ../../pyvista/docs/examples/01-filter/glyphs.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_glyphs.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_glyphs.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/01-filter/glyphs.rst:24
msgid "Plotting Glyphs (Vectors or PolyData)"
msgstr "字形のプロット (ベクトルかPolyData)"

#: ../../pyvista/docs/examples/01-filter/glyphs.rst:26
msgid "Use vectors in a dataset to plot and orient glyphs/geometric objects."
msgstr "データセット内のベクトルを使用して，記号/ジオメトリオブジェクトを印刷したり方向を設定します．"

#: ../../pyvista/docs/examples/01-filter/glyphs.rst:47
msgid ""
"Glyphying can be done via the :func:`pyvista.DataSetFilters.glyph` filter"
msgstr "グリフィイングは :func:`pyvista.DataSetFilters.glyph` フィルターを介して行うことができる"

#: ../../pyvista/docs/examples/01-filter/glyphs.rst:96
msgid ""
"Another approach is to load the vectors directly to the mesh object and then"
" access the :attr:`pyvista.DataSet.arrows` property."
msgstr ""
"もう1つの方法は，ベクトルを直接メッシュオブジェクトにロードし， :attr:`pyvista.DataSet.arrows` "
"プロパティにアクセスすることです．"

#: ../../pyvista/docs/examples/01-filter/glyphs.rst:179
msgid "Subset of Glyphs"
msgstr "字形のサブセット"

#: ../../pyvista/docs/examples/01-filter/glyphs.rst:181
msgid ""
"Sometimes you might not want glyphs for every node in the input dataset. In "
"this case, you can choose to build glyphs for a subset of the input dataset "
"by using a merging tolerance. Here we specify a merging tolerance of five "
"percent which equates to five percent of the bounding box's length."
msgstr ""
"入力データセットのすべてのノードにグリフが必要ない場合があります．この場合，マージ許容値を使用して，入力データセットのサブセットのグリフを作成することを選択できます．ここでは，5パーセントのマージ許容値を指定します．これは，バウンディングボックスの長さの5パーセントに相当します．"

#: ../../pyvista/docs/examples/01-filter/glyphs.rst:225
msgid "**Total running time of the script:** ( 0 minutes  9.930 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  9.930 seconds)"

#: ../../pyvista/docs/examples/01-filter/glyphs.rst:240
msgid ":download:`Download Python source code: glyphs.py <glyphs.py>`"
msgstr ":download:`Download Python source code: glyphs.py <glyphs.py>`"

#: ../../pyvista/docs/examples/01-filter/glyphs.rst:246
msgid ":download:`Download Jupyter notebook: glyphs.ipynb <glyphs.ipynb>`"
msgstr ":download:`Download Jupyter notebook: glyphs.ipynb <glyphs.ipynb>`"

#: ../../pyvista/docs/examples/01-filter/glyphs_table.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_glyphs_table.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_glyphs_table.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/01-filter/glyphs_table.rst:24
msgid "Table of Glyphs"
msgstr "字形表"

#: ../../pyvista/docs/examples/01-filter/glyphs_table.rst:26
msgid ""
"``vtk`` supports tables of glyphs from which glyphs are looked up. This "
"example demonstrates this functionality."
msgstr "``vtk`` は，字形が検索される字形のテーブルをサポートします．この例では，この機能を示します．"

#: ../../pyvista/docs/examples/01-filter/glyphs_table.rst:47
msgid ""
"We can allow tables of glyphs in a backward-compatible way by allowing a "
"sequence of geometries as well as single (scalar) geometries to be passed as"
" the ``geom`` kwarg of :func:`pyvista.DataSetFilters.glyph`. An ``indices`` "
"optional keyword specifies the index of each glyph geometry in the table, "
"and it has to be the same length as ``geom`` if specified. If it is absent a"
" default value of ``range(len(geom))`` is assumed."
msgstr ""
":func:`pyvista.DataSetFilters.glyph` の ``geom`` kwargとして渡されるジオメトリのシーケンスと単一 "
"(スカラ) ジオメトリを許可することによって，下位互換性のある方法でグリフのテーブルを許可することができます． ``indices`` "
"オプションキーワードはテーブル内の各グリフジオメトリのインデックスを指定し，指定された場合は ``geom`` "
"と同じ長さである必要があります．省略した場合は， ``range(len(geom))`` のデフォルト値が想定されます．"

#: ../../pyvista/docs/examples/01-filter/glyphs_table.rst:118
msgid "**Total running time of the script:** ( 0 minutes  1.745 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.745 seconds)"

#: ../../pyvista/docs/examples/01-filter/glyphs_table.rst:133
msgid ""
":download:`Download Python source code: glyphs_table.py <glyphs_table.py>`"
msgstr ""
":download:`Download Python source code: glyphs_table.py <glyphs_table.py>`"

#: ../../pyvista/docs/examples/01-filter/glyphs_table.rst:139
msgid ""
":download:`Download Jupyter notebook: glyphs_table.ipynb "
"<glyphs_table.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: glyphs_table.ipynb "
"<glyphs_table.ipynb>`"

#: ../../pyvista/docs/examples/01-filter/gradients.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_gradients.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_gradients.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/01-filter/gradients.rst:22
msgid "Compute Gradients of a Field"
msgstr "フィールドの勾配を計算する"

#: ../../pyvista/docs/examples/01-filter/gradients.rst:24
msgid "Estimate the gradient of a scalar or vector field in a data set."
msgstr "Estimate the gradient of a scalar or vector field in a data set."

#: ../../pyvista/docs/examples/01-filter/gradients.rst:26
msgid ""
"The ordering for the output gradient tuple will be {du/dx, du/dy, du/dz, "
"dv/dx, dv/dy, dv/dz, dw/dx, dw/dy, dw/dz} for an input array {u, v, w}."
msgstr ""
"入力配列 {u, v, w} の場合，出力グラディエントタプルの順序は {du/dx, du/dy, du/dz, dv/dx, dv/dy, "
"dv/dz, dw/dx, dw/dy, dw/dz} になります．"

#: ../../pyvista/docs/examples/01-filter/gradients.rst:30
msgid "Showing the :func:`pyvista.DataSetFilters.compute_derivative` filter."
msgstr ":func:`pyvista.DataSetFilters.compute_derivative` フィルタを表示します．"

#: ../../pyvista/docs/examples/01-filter/gradients.rst:51
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>UniformGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>158400</td></tr>\n"
"<tr><td>N Points</td><td>167580</td></tr>\n"
"<tr><td>X Bounds</td><td>1.000e+02, 1.750e+02</td></tr>\n"
"<tr><td>Y Bounds</td><td>8.000e+01, 1.280e+02</td></tr>\n"
"<tr><td>Z Bounds</td><td>1.000e+00, 4.500e+01</td></tr>\n"
"<tr><td>Dimensions</td><td>76, 49, 45</td></tr>\n"
"<tr><td>Spacing</td><td>1.000e+00, 1.000e+00, 1.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>2</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>scalars</b></td><td>Points</td><td>float32</td><td>1</td><td>0.000e+00</td><td>5.800e+02</td></tr>\n"
"<tr><td>vectors</td><td>Points</td><td>float32</td><td>3</td><td>-2.263e+01</td><td>1.662e+01</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>UniformGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>158400</td></tr>\n"
"<tr><td>N Points</td><td>167580</td></tr>\n"
"<tr><td>X Bounds</td><td>1.000e+02, 1.750e+02</td></tr>\n"
"<tr><td>Y Bounds</td><td>8.000e+01, 1.280e+02</td></tr>\n"
"<tr><td>Z Bounds</td><td>1.000e+00, 4.500e+01</td></tr>\n"
"<tr><td>Dimensions</td><td>76, 49, 45</td></tr>\n"
"<tr><td>Spacing</td><td>1.000e+00, 1.000e+00, 1.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>2</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>scalars</b></td><td>Points</td><td>float32</td><td>1</td><td>0.000e+00</td><td>5.800e+02</td></tr>\n"
"<tr><td>vectors</td><td>Points</td><td>float32</td><td>3</td><td>-2.263e+01</td><td>1.662e+01</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/docs/examples/01-filter/gradients.rst:81
msgid ""
"Now compute the gradients of the ``vectors`` vector field in the point data "
"of that mesh. This is as simple as calling "
":func:`pyvista.DataSetFilters.compute_derivative`."
msgstr ""
"ここで，そのメッシュの点データにおける ``vectors`` ベクトルフィールドの勾配を計算する．これは "
":func:`pyvista.DataSetFilters.compute_derivative` を呼び出すのと同じくらい簡単です．"

#: ../../pyvista/docs/examples/01-filter/gradients.rst:121
msgid ""
"You can also use :func:`pyvista.DataSetFilters.compute_derivative` for "
"computing other derivative based quantities, such as divergence, vorticity, "
"and Q-criterion. See function documentation for options."
msgstr ""
"また， :func:`pyvista.DataSetFilters.compute_derivative` "
"を使用して，発散，渦度，Q基準など，他の導関数ベースの量を計算することもできます．オプションについては，関数のマニュアルを参照してください．"

#: ../../pyvista/docs/examples/01-filter/gradients.rst:127
msgid ""
"``mesh_g[\"gradient\"]`` is an ``N`` by 9 NumPy array of the gradients, so "
"we could make a dictionary of NumPy arrays of the gradients like:"
msgstr ""
"``mesh_g[\"gradient\"]`` は勾配の 9 NumPy 配列による ``N`` "
"なので，勾配のNumPy配列の辞書を作ることができます:"

#: ../../pyvista/docs/examples/01-filter/gradients.rst:170
msgid ""
"And we can add all of those components as individual arrays back to the mesh"
" by:"
msgstr "これらのコンポーネントを個別の配列としてメッシュに追加するには，次のようにします．"

#: ../../pyvista/docs/examples/01-filter/gradients.rst:185
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>UniformGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>158400</td></tr>\n"
"<tr><td>N Points</td><td>167580</td></tr>\n"
"<tr><td>X Bounds</td><td>1.000e+02, 1.750e+02</td></tr>\n"
"<tr><td>Y Bounds</td><td>8.000e+01, 1.280e+02</td></tr>\n"
"<tr><td>Z Bounds</td><td>1.000e+00, 4.500e+01</td></tr>\n"
"<tr><td>Dimensions</td><td>76, 49, 45</td></tr>\n"
"<tr><td>Spacing</td><td>1.000e+00, 1.000e+00, 1.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>12</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>scalars</b></td><td>Points</td><td>float32</td><td>1</td><td>0.000e+00</td><td>5.800e+02</td></tr>\n"
"<tr><td>vectors</td><td>Points</td><td>float32</td><td>3</td><td>-2.263e+01</td><td>1.662e+01</td></tr>\n"
"<tr><td>gradient</td><td>Points</td><td>float32</td><td>9</td><td>-1.585e+01</td><td>1.536e+01</td></tr>\n"
"<tr><td>du/dx</td><td>Points</td><td>float32</td><td>1</td><td>-8.293e+00</td><td>8.336e+00</td></tr>\n"
"<tr><td>du/dy</td><td>Points</td><td>float32</td><td>1</td><td>-1.084e+01</td><td>8.334e+00</td></tr>\n"
"<tr><td>du/dz</td><td>Points</td><td>float32</td><td>1</td><td>-8.300e+00</td><td>8.317e+00</td></tr>\n"
"<tr><td>dv/dx</td><td>Points</td><td>float32</td><td>1</td><td>-1.133e+01</td><td>1.536e+01</td></tr>\n"
"<tr><td>dv/dy</td><td>Points</td><td>float32</td><td>1</td><td>-1.585e+01</td><td>1.170e+01</td></tr>\n"
"<tr><td>dv/dz</td><td>Points</td><td>float32</td><td>1</td><td>-1.131e+01</td><td>7.459e+00</td></tr>\n"
"<tr><td>dw/dx</td><td>Points</td><td>float32</td><td>1</td><td>-8.738e+00</td><td>1.212e+01</td></tr>\n"
"<tr><td>dw/dy</td><td>Points</td><td>float32</td><td>1</td><td>-8.734e+00</td><td>8.740e+00</td></tr>\n"
"<tr><td>dw/dz</td><td>Points</td><td>float32</td><td>1</td><td>-1.124e+01</td><td>8.728e+00</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>UniformGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>158400</td></tr>\n"
"<tr><td>N Points</td><td>167580</td></tr>\n"
"<tr><td>X Bounds</td><td>1.000e+02, 1.750e+02</td></tr>\n"
"<tr><td>Y Bounds</td><td>8.000e+01, 1.280e+02</td></tr>\n"
"<tr><td>Z Bounds</td><td>1.000e+00, 4.500e+01</td></tr>\n"
"<tr><td>Dimensions</td><td>76, 49, 45</td></tr>\n"
"<tr><td>Spacing</td><td>1.000e+00, 1.000e+00, 1.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>12</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>scalars</b></td><td>Points</td><td>float32</td><td>1</td><td>0.000e+00</td><td>5.800e+02</td></tr>\n"
"<tr><td>vectors</td><td>Points</td><td>float32</td><td>3</td><td>-2.263e+01</td><td>1.662e+01</td></tr>\n"
"<tr><td>gradient</td><td>Points</td><td>float32</td><td>9</td><td>-1.585e+01</td><td>1.536e+01</td></tr>\n"
"<tr><td>du/dx</td><td>Points</td><td>float32</td><td>1</td><td>-8.293e+00</td><td>8.336e+00</td></tr>\n"
"<tr><td>du/dy</td><td>Points</td><td>float32</td><td>1</td><td>-1.084e+01</td><td>8.334e+00</td></tr>\n"
"<tr><td>du/dz</td><td>Points</td><td>float32</td><td>1</td><td>-8.300e+00</td><td>8.317e+00</td></tr>\n"
"<tr><td>dv/dx</td><td>Points</td><td>float32</td><td>1</td><td>-1.133e+01</td><td>1.536e+01</td></tr>\n"
"<tr><td>dv/dy</td><td>Points</td><td>float32</td><td>1</td><td>-1.585e+01</td><td>1.170e+01</td></tr>\n"
"<tr><td>dv/dz</td><td>Points</td><td>float32</td><td>1</td><td>-1.131e+01</td><td>7.459e+00</td></tr>\n"
"<tr><td>dw/dx</td><td>Points</td><td>float32</td><td>1</td><td>-8.738e+00</td><td>1.212e+01</td></tr>\n"
"<tr><td>dw/dy</td><td>Points</td><td>float32</td><td>1</td><td>-8.734e+00</td><td>8.740e+00</td></tr>\n"
"<tr><td>dw/dz</td><td>Points</td><td>float32</td><td>1</td><td>-1.124e+01</td><td>8.728e+00</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/docs/examples/01-filter/gradients.rst:266
msgid ""
"And there you have it, the gradients for a vector field! We could also do "
"this for a scalar  field like for the ``scalars`` field in the given "
"dataset."
msgstr ""
"これがベクトル場の勾配です!また，与えられたデータセットの ``scalars`` "
"フィールドのようなスカラーフィールドに対してもこれを行うことができます．"

#: ../../pyvista/docs/examples/01-filter/gradients.rst:338
msgid "**Total running time of the script:** ( 0 minutes  2.552 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  2.552 seconds)"

#: ../../pyvista/docs/examples/01-filter/gradients.rst:353
msgid ":download:`Download Python source code: gradients.py <gradients.py>`"
msgstr ":download:`Download Python source code: gradients.py <gradients.py>`"

#: ../../pyvista/docs/examples/01-filter/gradients.rst:359
msgid ""
":download:`Download Jupyter notebook: gradients.ipynb <gradients.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: gradients.ipynb <gradients.ipynb>`"

#: ../../pyvista/docs/examples/01-filter/interpolate.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_interpolate.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_interpolate.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/01-filter/interpolate.rst:22
msgid "Interpolating"
msgstr "補間"

#: ../../pyvista/docs/examples/01-filter/interpolate.rst:24
msgid ""
"Interpolate one mesh's point/cell arrays onto another mesh's nodes using a "
"Gaussian Kernel."
msgstr "Gaussianカーネルを使用して，あるメッシュのポイント/セル配列を別のメッシュのノードに補間します．"

#: ../../pyvista/docs/examples/01-filter/interpolate.rst:45
msgid "Simple Surface Interpolation"
msgstr "単純なサーフェス補間"

#: ../../pyvista/docs/examples/01-filter/interpolate.rst:46
msgid "Resample the points' arrays onto a surface"
msgstr "サーフェス上にポイントの配列をリサンプルする"

#: ../../pyvista/docs/examples/01-filter/interpolate.rst:85
msgid "Run the interpolation"
msgstr "補間を実行します"

#: ../../pyvista/docs/examples/01-filter/interpolate.rst:125
msgid "Complex Interpolation"
msgstr "複合補間"

#: ../../pyvista/docs/examples/01-filter/interpolate.rst:126
msgid ""
"In this example, we will in interpolate sparse points in 3D space into a "
"volume. These data are from temperature probes in the subsurface and the "
"goal is to create an approximate 3D model of the temperature field in the "
"subsurface."
msgstr ""
"この例では，3 "
"D空間の疎なポイントをボリュームに補間します．これらのデータはサブサーフェイスの温度プローブから得られたもので，目標はサブサーフェイスの温度場の近似3 "
"Dモデルを作成することです．"

#: ../../pyvista/docs/examples/01-filter/interpolate.rst:131
msgid ""
"This approach is a great for back-of-the-hand estimations but pales in "
"comparison to kriging"
msgstr "このアプローチは簡単な見積もりには適していますが，クリギングに比べると見劣りします．"

#: ../../pyvista/docs/examples/01-filter/interpolate.rst:151
msgid "Create the interpolation grid around the sparse data"
msgstr "スパースデータの周囲に補間グリッドを作成する"

#: ../../pyvista/docs/examples/01-filter/interpolate.rst:207
msgid "Run an interpolation"
msgstr "補間を実行します"

#: ../../pyvista/docs/examples/01-filter/interpolate.rst:224
msgid "Visualize the results"
msgstr "結果を視覚化する"

#: ../../pyvista/docs/examples/01-filter/interpolate.rst:265
msgid "**Total running time of the script:** ( 0 minutes  11.502 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  11.502 seconds)"

#: ../../pyvista/docs/examples/01-filter/interpolate.rst:280
msgid ""
":download:`Download Python source code: interpolate.py <interpolate.py>`"
msgstr ""
":download:`Download Python source code: interpolate.py <interpolate.py>`"

#: ../../pyvista/docs/examples/01-filter/interpolate.rst:286
msgid ""
":download:`Download Jupyter notebook: interpolate.ipynb <interpolate.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: interpolate.ipynb <interpolate.ipynb>`"

#: ../../pyvista/docs/examples/01-filter/mesh-quality.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_mesh-quality.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_mesh-quality.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/01-filter/mesh-quality.rst:22
msgid "Computing Mesh Quality"
msgstr "メッシュ品質の計算"

#: ../../pyvista/docs/examples/01-filter/mesh-quality.rst:24
msgid "Leverage a powerful VTK algorithm for computing mesh quality."
msgstr "強力なVTKアルゴリズムを利用して，メッシュ品質を計算します．"

#: ../../pyvista/docs/examples/01-filter/mesh-quality.rst:26
msgid ""
"Here we will use the :func:`pyvista.DataSetFilters.compute_cell_quality` "
"filter to compute the cell qualities. For a full list of the various quality"
" metrics available, please refer to the documentation for that filter."
msgstr ""
"ここでは， :func:`pyvista.DataSetFilters.compute_cell_quality` "
"フィルタを使用してセル品質を計算します．利用可能なさまざまな品質メトリックの完全なリストについては，そのフィルタのドキュメントを参照してください．"

#: ../../pyvista/docs/examples/01-filter/mesh-quality.rst:53
msgid ""
"Compute the cell quality. Note that there are many different quality "
"measures"
msgstr "セル品質を計算します．多くの異なる品質尺度があることに注意してください．"

#: ../../pyvista/docs/examples/01-filter/mesh-quality.rst:67
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>1740</td></tr>\n"
"<tr><td>N Points</td><td>871</td></tr>\n"
"<tr><td>X Bounds</td><td>-4.389e+00, 6.005e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>-3.648e+00, 2.761e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>-1.701e+00, 1.701e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>CellQuality</b></td><td>Cells</td><td>float64</td><td>1</td><td>6.197e-02</td><td>9.911e-01</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>1740</td></tr>\n"
"<tr><td>N Points</td><td>871</td></tr>\n"
"<tr><td>X Bounds</td><td>-4.389e+00, 6.005e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>-3.648e+00, 2.761e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>-1.701e+00, 1.701e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>CellQuality</b></td><td>Cells</td><td>float64</td><td>1</td><td>6.197e-02</td><td>9.911e-01</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/docs/examples/01-filter/mesh-quality.rst:121
msgid "**Total running time of the script:** ( 0 minutes  0.797 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  0.797 seconds)"

#: ../../pyvista/docs/examples/01-filter/mesh-quality.rst:136
msgid ""
":download:`Download Python source code: mesh-quality.py <mesh-quality.py>`"
msgstr ""
":download:`Download Python source code: mesh-quality.py <mesh-quality.py>`"

#: ../../pyvista/docs/examples/01-filter/mesh-quality.rst:142
msgid ""
":download:`Download Jupyter notebook: mesh-quality.ipynb <mesh-"
"quality.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: mesh-quality.ipynb <mesh-"
"quality.ipynb>`"

#: ../../pyvista/docs/examples/01-filter/poly-ray-trace.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_poly-ray-trace.py>` "
"to download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_poly-ray-trace.py>` "
"to download the full example code"

#: ../../pyvista/docs/examples/01-filter/poly-ray-trace.rst:22
#: ../../pyvista/docs/examples/99-advanced/ray-trace.rst:22
msgid "Ray Tracing"
msgstr "レイトレーシング"

#: ../../pyvista/docs/examples/01-filter/poly-ray-trace.rst:24
#: ../../pyvista/docs/examples/99-advanced/ray-trace.rst:24
msgid "Single line segment ray tracing for PolyData objects."
msgstr "PolyDataオブジェクトの単一線分セグメントのレイトレーシング．"

#: ../../pyvista/docs/examples/01-filter/poly-ray-trace.rst:85
msgid "**Total running time of the script:** ( 0 minutes  0.516 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  0.516 seconds)"

#: ../../pyvista/docs/examples/01-filter/poly-ray-trace.rst:100
msgid ""
":download:`Download Python source code: poly-ray-trace.py <poly-ray-"
"trace.py>`"
msgstr ""
":download:`Download Python source code: poly-ray-trace.py <poly-ray-"
"trace.py>`"

#: ../../pyvista/docs/examples/01-filter/poly-ray-trace.rst:106
msgid ""
":download:`Download Jupyter notebook: poly-ray-trace.ipynb <poly-ray-"
"trace.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: poly-ray-trace.ipynb <poly-ray-"
"trace.ipynb>`"

#: ../../pyvista/docs/examples/01-filter/project-plane.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_project-plane.py>` to"
" download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_project-plane.py>` to"
" download the full example code"

#: ../../pyvista/docs/examples/01-filter/project-plane.rst:22
msgid "Project to a Plane"
msgstr "平面に投影"

#: ../../pyvista/docs/examples/01-filter/project-plane.rst:24
msgid ""
":class:`pyvista.PolyData` surfaces and pointsets can easily be projected to "
"a plane defined by a normal and origin"
msgstr ":class:`pyvista.PolyData` サーフェスとポイントセットは，法線と原点によって定義される平面に簡単に投影できます．"

#: ../../pyvista/docs/examples/01-filter/project-plane.rst:63
msgid "Project that surface to a plane underneath the surface"
msgstr "そのサーフェスをサーフェスの下の平面に投影します．"

#: ../../pyvista/docs/examples/01-filter/project-plane.rst:102
msgid "**Total running time of the script:** ( 0 minutes  1.631 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.631 seconds)"

#: ../../pyvista/docs/examples/01-filter/project-plane.rst:117
msgid ""
":download:`Download Python source code: project-plane.py <project-plane.py>`"
msgstr ""
":download:`Download Python source code: project-plane.py <project-plane.py>`"

#: ../../pyvista/docs/examples/01-filter/project-plane.rst:123
msgid ""
":download:`Download Jupyter notebook: project-plane.ipynb <project-"
"plane.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: project-plane.ipynb <project-"
"plane.ipynb>`"

#: ../../pyvista/docs/examples/01-filter/reflect.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_reflect.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_reflect.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/01-filter/reflect.rst:24
msgid "Reflect Meshes"
msgstr "メッシュを反射"

#: ../../pyvista/docs/examples/01-filter/reflect.rst:26
msgid "This example reflects a mesh across a plane."
msgstr "この例では，メッシュを平面に反射します．"

#: ../../pyvista/docs/examples/01-filter/reflect.rst:46
msgid "This example demonstrates how to reflect a mesh across a plane."
msgstr "この例では，メッシュをプレーンに反射させる方法を示します．"

#: ../../pyvista/docs/examples/01-filter/reflect.rst:48
msgid "Load an example mesh:"
msgstr "サンプルメッシュをロードする:"

#: ../../pyvista/docs/examples/01-filter/reflect.rst:65
msgid ""
"Reflect the mesh across a plane parallel to Z plane and coincident with (0, "
"0, -100)"
msgstr "Z平面に平行で (0, 0, -100) に一致する平面でメッシュを反射します．"

#: ../../pyvista/docs/examples/01-filter/reflect.rst:83
msgid "Plot the reflected mesh:"
msgstr "反射メッシュをプロットする:"

#: ../../pyvista/docs/examples/01-filter/reflect.rst:118
msgid "**Total running time of the script:** ( 0 minutes  0.444 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  0.444 seconds)"

#: ../../pyvista/docs/examples/01-filter/reflect.rst:133
msgid ":download:`Download Python source code: reflect.py <reflect.py>`"
msgstr ":download:`Download Python source code: reflect.py <reflect.py>`"

#: ../../pyvista/docs/examples/01-filter/reflect.rst:139
msgid ":download:`Download Jupyter notebook: reflect.ipynb <reflect.ipynb>`"
msgstr ":download:`Download Jupyter notebook: reflect.ipynb <reflect.ipynb>`"

#: ../../pyvista/docs/examples/01-filter/resample.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_resample.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_resample.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/01-filter/resample.rst:22
msgid "Resampling"
msgstr "再サンプリング"

#: ../../pyvista/docs/examples/01-filter/resample.rst:24
msgid "Resample one mesh's point/cell arrays onto another mesh's nodes."
msgstr "メッシュのポイント/セル配列を別のメッシュのノードにリサンプルします．"

#: ../../pyvista/docs/examples/01-filter/resample.rst:28
msgid ""
"This example will resample a volumetric mesh's  scalar data onto the surface"
" of a sphere contained in that volume."
msgstr "この例では，ボリュームメッシュのスカラーデータを，そのボリュームに含まれる球体の表面にリサンプルします．"

#: ../../pyvista/docs/examples/01-filter/resample.rst:50
msgid "Simple Resample"
msgstr "簡易リサンプル"

#: ../../pyvista/docs/examples/01-filter/resample.rst:51
msgid "Query a grids points onto a sphere"
msgstr "球上のグリッドポイントを照会する"

#: ../../pyvista/docs/examples/01-filter/resample.rst:69
msgid "Plot the two datasets"
msgstr "2つのデータセットをプロットする"

#: ../../pyvista/docs/examples/01-filter/resample.rst:103
msgid "Run the algorithm and plot the result"
msgstr "アルゴリズムを実行し，結果をプロットします．"

#: ../../pyvista/docs/examples/01-filter/resample.rst:139
msgid "Complex Resample"
msgstr "複雑なリサンプル"

#: ../../pyvista/docs/examples/01-filter/resample.rst:140
msgid ""
"Take a volume of data and create a grid of lower resolution to resample on"
msgstr "大量のデータを取得し，解像度の低いグリッドを作成してリサンプルします．"

#: ../../pyvista/docs/examples/01-filter/resample.rst:199
msgid "**Total running time of the script:** ( 0 minutes  11.159 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  11.159 seconds)"

#: ../../pyvista/docs/examples/01-filter/resample.rst:214
msgid ":download:`Download Python source code: resample.py <resample.py>`"
msgstr ":download:`Download Python source code: resample.py <resample.py>`"

#: ../../pyvista/docs/examples/01-filter/resample.rst:220
msgid ":download:`Download Jupyter notebook: resample.ipynb <resample.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: resample.ipynb <resample.ipynb>`"

#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:8
msgid "**00:04.332** total execution time for **examples_01-filter** files:"
msgstr "**00:04.332** total execution time for **examples_01-filter** files:"

#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:11
msgid ""
":ref:`sphx_glr_examples_01-filter_warp-by-vector.py` (``warp-by-vector.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_warp-by-vector.py` (``warp-by-vector.py``)"

#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:11
msgid "00:04.332"
msgstr "00:04.332"

#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:13
msgid ""
":ref:`sphx_glr_examples_01-filter_boolean-operations.py` (``boolean-"
"operations.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_boolean-operations.py` (``boolean-"
"operations.py``)"

#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:15
msgid ""
":ref:`sphx_glr_examples_01-filter_cell-centers.py` (``cell-centers.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_cell-centers.py` (``cell-centers.py``)"

#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:17
msgid ""
":ref:`sphx_glr_examples_01-filter_clipping-with-surface.py` (``clipping-"
"with-surface.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_clipping-with-surface.py` (``clipping-"
"with-surface.py``)"

#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:19
msgid ":ref:`sphx_glr_examples_01-filter_clipping.py` (``clipping.py``)"
msgstr ":ref:`sphx_glr_examples_01-filter_clipping.py` (``clipping.py``)"

#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:21
msgid ""
":ref:`sphx_glr_examples_01-filter_compute-normals.py` (``compute-"
"normals.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_compute-normals.py` (``compute-"
"normals.py``)"

#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:23
msgid ""
":ref:`sphx_glr_examples_01-filter_compute-volume.py` (``compute-volume.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_compute-volume.py` (``compute-volume.py``)"

#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:25
msgid ""
":ref:`sphx_glr_examples_01-filter_connectivity.py` (``connectivity.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_connectivity.py` (``connectivity.py``)"

#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:27
msgid ":ref:`sphx_glr_examples_01-filter_contouring.py` (``contouring.py``)"
msgstr ":ref:`sphx_glr_examples_01-filter_contouring.py` (``contouring.py``)"

#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:29
msgid ":ref:`sphx_glr_examples_01-filter_decimate.py` (``decimate.py``)"
msgstr ":ref:`sphx_glr_examples_01-filter_decimate.py` (``decimate.py``)"

#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:31
msgid ""
":ref:`sphx_glr_examples_01-filter_distance-between-surfaces.py` (``distance-"
"between-surfaces.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_distance-between-surfaces.py` (``distance-"
"between-surfaces.py``)"

#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:33
msgid ""
":ref:`sphx_glr_examples_01-filter_extract-cells-inside-surface.py` "
"(``extract-cells-inside-surface.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_extract-cells-inside-surface.py` "
"(``extract-cells-inside-surface.py``)"

#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:35
msgid ""
":ref:`sphx_glr_examples_01-filter_extract-edges.py` (``extract-edges.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_extract-edges.py` (``extract-edges.py``)"

#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:37
msgid ""
":ref:`sphx_glr_examples_01-filter_extract-surface.py` (``extract-"
"surface.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_extract-surface.py` (``extract-"
"surface.py``)"

#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:39
msgid ""
":ref:`sphx_glr_examples_01-filter_extrude-rotate.py` (``extrude-rotate.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_extrude-rotate.py` (``extrude-rotate.py``)"

#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:41
msgid ""
":ref:`sphx_glr_examples_01-filter_gaussian-smoothing.py` (``gaussian-"
"smoothing.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_gaussian-smoothing.py` (``gaussian-"
"smoothing.py``)"

#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:43
msgid ":ref:`sphx_glr_examples_01-filter_geodesic.py` (``geodesic.py``)"
msgstr ":ref:`sphx_glr_examples_01-filter_geodesic.py` (``geodesic.py``)"

#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:45
msgid ":ref:`sphx_glr_examples_01-filter_glyphs.py` (``glyphs.py``)"
msgstr ":ref:`sphx_glr_examples_01-filter_glyphs.py` (``glyphs.py``)"

#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:47
msgid ""
":ref:`sphx_glr_examples_01-filter_glyphs_table.py` (``glyphs_table.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_glyphs_table.py` (``glyphs_table.py``)"

#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:49
msgid ":ref:`sphx_glr_examples_01-filter_gradients.py` (``gradients.py``)"
msgstr ":ref:`sphx_glr_examples_01-filter_gradients.py` (``gradients.py``)"

#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:51
msgid ":ref:`sphx_glr_examples_01-filter_interpolate.py` (``interpolate.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_interpolate.py` (``interpolate.py``)"

#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:53
msgid ""
":ref:`sphx_glr_examples_01-filter_mesh-quality.py` (``mesh-quality.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_mesh-quality.py` (``mesh-quality.py``)"

#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:55
msgid ""
":ref:`sphx_glr_examples_01-filter_poly-ray-trace.py` (``poly-ray-trace.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_poly-ray-trace.py` (``poly-ray-trace.py``)"

#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:57
msgid ""
":ref:`sphx_glr_examples_01-filter_project-plane.py` (``project-plane.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_project-plane.py` (``project-plane.py``)"

#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:59
msgid ":ref:`sphx_glr_examples_01-filter_reflect.py` (``reflect.py``)"
msgstr ":ref:`sphx_glr_examples_01-filter_reflect.py` (``reflect.py``)"

#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:61
msgid ":ref:`sphx_glr_examples_01-filter_resample.py` (``resample.py``)"
msgstr ":ref:`sphx_glr_examples_01-filter_resample.py` (``resample.py``)"

#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:63
msgid ":ref:`sphx_glr_examples_01-filter_slicing.py` (``slicing.py``)"
msgstr ":ref:`sphx_glr_examples_01-filter_slicing.py` (``slicing.py``)"

#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:65
msgid ":ref:`sphx_glr_examples_01-filter_streamlines.py` (``streamlines.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_streamlines.py` (``streamlines.py``)"

#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:67
msgid ":ref:`sphx_glr_examples_01-filter_subdivide.py` (``subdivide.py``)"
msgstr ":ref:`sphx_glr_examples_01-filter_subdivide.py` (``subdivide.py``)"

#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:69
msgid ""
":ref:`sphx_glr_examples_01-filter_surface-smoothing.py` (``surface-"
"smoothing.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_surface-smoothing.py` (``surface-"
"smoothing.py``)"

#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:71
msgid ""
":ref:`sphx_glr_examples_01-filter_using-filters.py` (``using-filters.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_using-filters.py` (``using-filters.py``)"

#: ../../pyvista/docs/examples/01-filter/sg_execution_times.rst:73
msgid ":ref:`sphx_glr_examples_01-filter_voxelize.py` (``voxelize.py``)"
msgstr ":ref:`sphx_glr_examples_01-filter_voxelize.py` (``voxelize.py``)"

#: ../../pyvista/docs/examples/01-filter/slicing.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_slicing.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_slicing.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/01-filter/slicing.rst:22
msgid "Slicing"
msgstr "スライシング"

#: ../../pyvista/docs/examples/01-filter/slicing.rst:24
msgid "Extract thin planar slices from a volume"
msgstr "ボリュームから薄い平面スライスを抽出します"

#: ../../pyvista/docs/examples/01-filter/slicing.rst:45
msgid ""
"PyVista meshes have several slicing filters bound directly to all datasets. "
"These filters allow you to slice through a volumetric dataset to extract and"
" view sections through the volume of data."
msgstr ""
"PyVistaメッシュには，すべてのデータセットに直接バインドされた複数のスライシングフィルタがあります．これらのフィルタを使用すると，ボリュームデータセットをスライスして，データのボリュームからセクションを抽出して表示できます．"

#: ../../pyvista/docs/examples/01-filter/slicing.rst:49
msgid ""
"One of the most common slicing filters used in PyVista is the "
":func:`pyvista.DataSetFilters.slice_orthogonal` filter which creates three "
"orthogonal slices through the dataset parallel to the three Cartesian "
"planes. For example, let's slice through the sample geostatistical training "
"image volume. First, load up the volume and preview it:"
msgstr ""
"PyVistaで使用される最も一般的なスライシングフィルタの1つは， 3つの直交面に平行なデータセットを通して3つの直交スライスを生成する "
":func:`pyvista.DataSetFilters.slice_orthogonal` "
"フィルタです．たとえば，サンプルの地理統計トレーニングイメージボリュームをスライスしてみましょう．まず，ボリュームをロードしてプレビューします．"

#: ../../pyvista/docs/examples/01-filter/slicing.rst:90
msgid ""
"Note that this dataset is a 3D volume and there might be regions within this"
" volume that we would like to inspect. We can create slices through the mesh"
" to gain further insight about the internals of the volume."
msgstr ""
"このデータセットは3 "
"Dボリュームであり，このボリューム内に検査したい領域がある場合があります．メッシュを使用してスライスを作成し，ボリュームの内部についてさらに詳しく調べることができます．"

#: ../../pyvista/docs/examples/01-filter/slicing.rst:127
msgid "The orthogonal slices can be easily translated throughout the volume:"
msgstr "直交スライスは，ボリューム全体で簡単に変換できます:"

#: ../../pyvista/docs/examples/01-filter/slicing.rst:159
msgid ""
"We can also add just a single slice of the volume by specifying the origin "
"and normal of the slicing plane with the "
":func:`pyvista.DataSetFilters.slice` filter:"
msgstr ""
":func:`pyvista.DataSetFilters.slice`  "
"フィルタでスライス平面の原点と法線を指定することで，ボリュームの単一スライスを追加することもできます．"

#: ../../pyvista/docs/examples/01-filter/slicing.rst:198
msgid ""
"Adding slicing planes uniformly across an axial direction can also be "
"automated with the :func:`pyvista.DataSetFilters.slice_along_axis` filter:"
msgstr ""
"軸方向に均一にスライス平面を追加することも， :func:`pyvista.DataSetFilters.slice_along_axis` "
"フィルタを使用して自動化できます．"

#: ../../pyvista/docs/examples/01-filter/slicing.rst:235
msgid "Slice Along Line"
msgstr "線分に沿ってスライス"

#: ../../pyvista/docs/examples/01-filter/slicing.rst:237
msgid ""
"We can also slice a dataset along a :func:`pyvista.Spline` or "
":func:`pyvista.Line` using the :func:`DataSetFilters.slice_along_line` "
"filter."
msgstr ""
":func:`DataSetFilters.slice_along_line` フィルタを用いて :func:`pyvista.Spline` または "
":func:`pyvista.Line` に沿ってデータセットをスライスすることもできる．"

#: ../../pyvista/docs/examples/01-filter/slicing.rst:240
msgid ""
"First, define a line source through the dataset of interest. Please note "
"that this type of slicing is computationally expensive and might take a "
"while if there are a lot of points in the line - try to keep the resolution "
"of the line low."
msgstr ""
"最初に，対象のデータセットを使用して線のソースを定義します．このタイプのスライスは計算コストが高く，線に多くの点がある場合は時間がかかることに注意してください．線の解像度を低くしてください．"

#: ../../pyvista/docs/examples/01-filter/slicing.rst:272
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>1</td></tr>\n"
"<tr><td>N Points</td><td>15</td></tr>\n"
"<tr><td>X Bounds</td><td>0.000e+00, 2.475e+02</td></tr>\n"
"<tr><td>Y Bounds</td><td>0.000e+00, 2.400e+02</td></tr>\n"
"<tr><td>Z Bounds</td><td>9.000e+00, 1.100e+01</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>arc_length</b></td><td>Points</td><td>float32</td><td>1</td><td>0.000e+00</td><td>3.605e+02</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>1</td></tr>\n"
"<tr><td>N Points</td><td>15</td></tr>\n"
"<tr><td>X Bounds</td><td>0.000e+00, 2.475e+02</td></tr>\n"
"<tr><td>Y Bounds</td><td>0.000e+00, 2.400e+02</td></tr>\n"
"<tr><td>Z Bounds</td><td>9.000e+00, 1.100e+01</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>arc_length</b></td><td>Points</td><td>float32</td><td>1</td><td>0.000e+00</td><td>3.605e+02</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/docs/examples/01-filter/slicing.rst:299
msgid "Then run the filter"
msgstr "次に，フィルタを実行します．"

#: ../../pyvista/docs/examples/01-filter/slicing.rst:313
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>49100</td></tr>\n"
"<tr><td>N Points</td><td>49692</td></tr>\n"
"<tr><td>X Bounds</td><td>0.000e+00, 2.500e+02</td></tr>\n"
"<tr><td>Y Bounds</td><td>0.000e+00, 2.415e+02</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 1.000e+02</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>facies</b></td><td>Cells</td><td>int64</td><td>1</td><td>0.000e+00</td><td>4.000e+00</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>49100</td></tr>\n"
"<tr><td>N Points</td><td>49692</td></tr>\n"
"<tr><td>X Bounds</td><td>0.000e+00, 2.500e+02</td></tr>\n"
"<tr><td>Y Bounds</td><td>0.000e+00, 2.415e+02</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 1.000e+02</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>facies</b></td><td>Cells</td><td>int64</td><td>1</td><td>0.000e+00</td><td>4.000e+00</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/docs/examples/01-filter/slicing.rst:373
msgid "Multiple Slices in Vector Direction"
msgstr "ベクトル方向の複数のスライス"

#: ../../pyvista/docs/examples/01-filter/slicing.rst:375
msgid "Slice a mesh along a vector direction perpendicularly."
msgstr "ベクトル方向に沿って垂直にメッシュをスライスします．"

#: ../../pyvista/docs/examples/01-filter/slicing.rst:446
msgid "Slice At Different Bearings"
msgstr "異なる軸受でスライス"

#: ../../pyvista/docs/examples/01-filter/slicing.rst:448
msgid ""
"From `pyvista-support#23 <https://github.com/pyvista/pyvista-"
"support/issues/23>`_"
msgstr ""
"`pyvista-support#23 <https://github.com/pyvista/pyvista-support/issues/23>`_"
" から"

#: ../../pyvista/docs/examples/01-filter/slicing.rst:450
msgid ""
"An example of how to get many slices at different bearings all centered "
"around a user-chosen location."
msgstr "ユーザーが選択した位置を中心にして，さまざまな方位のスライスを多数作成する方法の例．"

#: ../../pyvista/docs/examples/01-filter/slicing.rst:453
msgid "Create a point to orient slices around"
msgstr "スライスを方向付けるポイントの作成"

#: ../../pyvista/docs/examples/01-filter/slicing.rst:471
msgid ""
"Now generate a few normal vectors to rotate a slice around the z-axis. Use "
"equation for circle since its about the Z-axis."
msgstr "ここで，Z軸を中心にスライスを回転させる法線ベクトルをいくつか生成します．円はZ軸を中心としているため，円の計算式を使用します．"

#: ../../pyvista/docs/examples/01-filter/slicing.rst:492
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Information</th><th>Blocks</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>MultiBlock</th><th>Values</th></tr>\n"
"<tr><td>N Blocks</td><td>6</td></tr>\n"
"<tr><td>X Bounds</td><td>0.000, 250.000</td></tr>\n"
"<tr><td>Y Bounds</td><td>0.000, 250.000</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000, 100.000</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Index</th><th>Name</th><th>Type</th></tr>\n"
"<tr><th>0</th><th>Bearing: 0.00</th><th>PolyData</th></tr>\n"
"<tr><th>1</th><th>Bearing: 30.00</th><th>PolyData</th></tr>\n"
"<tr><th>2</th><th>Bearing: 60.00</th><th>PolyData</th></tr>\n"
"<tr><th>3</th><th>Bearing: 90.00</th><th>PolyData</th></tr>\n"
"<tr><th>4</th><th>Bearing: 120.00</th><th>PolyData</th></tr>\n"
"<tr><th>5</th><th>Bearing: 150.00</th><th>PolyData</th></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Information</th><th>Blocks</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>MultiBlock</th><th>Values</th></tr>\n"
"<tr><td>N Blocks</td><td>6</td></tr>\n"
"<tr><td>X Bounds</td><td>0.000, 250.000</td></tr>\n"
"<tr><td>Y Bounds</td><td>0.000, 250.000</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000, 100.000</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Index</th><th>Name</th><th>Type</th></tr>\n"
"<tr><th>0</th><th>Bearing: 0.00</th><th>PolyData</th></tr>\n"
"<tr><th>1</th><th>Bearing: 30.00</th><th>PolyData</th></tr>\n"
"<tr><th>2</th><th>Bearing: 60.00</th><th>PolyData</th></tr>\n"
"<tr><th>3</th><th>Bearing: 90.00</th><th>PolyData</th></tr>\n"
"<tr><th>4</th><th>Bearing: 120.00</th><th>PolyData</th></tr>\n"
"<tr><th>5</th><th>Bearing: 150.00</th><th>PolyData</th></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/docs/examples/01-filter/slicing.rst:522
msgid "And now display it!"
msgstr "これを表示します．"

#: ../../pyvista/docs/examples/01-filter/slicing.rst:556
msgid "**Total running time of the script:** ( 0 minutes  35.039 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  35.039 seconds)"

#: ../../pyvista/docs/examples/01-filter/slicing.rst:571
msgid ":download:`Download Python source code: slicing.py <slicing.py>`"
msgstr ":download:`Download Python source code: slicing.py <slicing.py>`"

#: ../../pyvista/docs/examples/01-filter/slicing.rst:577
msgid ":download:`Download Jupyter notebook: slicing.ipynb <slicing.ipynb>`"
msgstr ":download:`Download Jupyter notebook: slicing.ipynb <slicing.ipynb>`"

#: ../../pyvista/docs/examples/01-filter/streamlines.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_streamlines.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_streamlines.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/01-filter/streamlines.rst:22
msgid "Streamlines"
msgstr "流線"

#: ../../pyvista/docs/examples/01-filter/streamlines.rst:24
msgid "Integrate a vector field to generate streamlines."
msgstr "ベクトルフィールドを積分して，流線を生成します．"

#: ../../pyvista/docs/examples/01-filter/streamlines.rst:28
msgid ""
"This example generates streamlines of blood velocity. An isosurface of speed"
" provides context. The starting positions for the streamtubes were "
"determined by experimenting with the data."
msgstr "この例では，血流速度の流線を生成します．速度の等値面がコンテキストを提供します．流管の開始位置はデータを実験して決定しました．"

#: ../../pyvista/docs/examples/01-filter/streamlines.rst:52
msgid "Carotid"
msgstr "頸動脈"

#: ../../pyvista/docs/examples/01-filter/streamlines.rst:53
msgid ""
"Download a sample dataset containing a vector field that can be integrated."
msgstr "統合可能なベクトルフィールドを含むサンプルデータセットをダウンロードします．"

#: ../../pyvista/docs/examples/01-filter/streamlines.rst:71
msgid "Run the stream line filtering algorithm."
msgstr "流線フィルタリングアルゴリズムを実行します．"

#: ../../pyvista/docs/examples/01-filter/streamlines.rst:97
msgid ""
"Display the results! Please note that because this dataset's velocity field "
"was measured with low resolution, many streamlines travel outside the "
"artery."
msgstr "結果を表示します．このデータセットの速度場は低分解能で測定されたため，多くの流線が動脈の外側を通過することに注意してください．"

#: ../../pyvista/docs/examples/01-filter/streamlines.rst:138
msgid "Blood Vessels"
msgstr "血管"

#: ../../pyvista/docs/examples/01-filter/streamlines.rst:139
msgid "Here is another example of blood flow:"
msgstr "血流の別の例を次に示します:"

#: ../../pyvista/docs/examples/01-filter/streamlines.rst:198
msgid "Kitchen"
msgstr "キッチン"

#: ../../pyvista/docs/examples/01-filter/streamlines.rst:266
msgid "Custom 3D Vector Field"
msgstr "カスタム3 Dベクトルフィールド"

#: ../../pyvista/docs/examples/01-filter/streamlines.rst:341
msgid "**Total running time of the script:** ( 0 minutes  7.355 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  7.355 seconds)"

#: ../../pyvista/docs/examples/01-filter/streamlines.rst:356
msgid ""
":download:`Download Python source code: streamlines.py <streamlines.py>`"
msgstr ""
":download:`Download Python source code: streamlines.py <streamlines.py>`"

#: ../../pyvista/docs/examples/01-filter/streamlines.rst:362
msgid ""
":download:`Download Jupyter notebook: streamlines.ipynb <streamlines.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: streamlines.ipynb <streamlines.ipynb>`"

#: ../../pyvista/docs/examples/01-filter/subdivide.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_subdivide.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_subdivide.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/01-filter/subdivide.rst:22
msgid "Subdivide Cells"
msgstr "セルのサブディバイド"

#: ../../pyvista/docs/examples/01-filter/subdivide.rst:24
msgid ""
"Increase the number of triangles in a single, connected triangular mesh."
msgstr "単一の接続された三角形メッシュ内の三角形の数を増やします．"

#: ../../pyvista/docs/examples/01-filter/subdivide.rst:26
msgid ""
"The :func:`pyvista.PolyDataFilters.subdivide` filter utilizes three "
"different subdivision algorithms to subdivide a mesh's cells: `butterfly`, "
"`loop`, or `linear`."
msgstr ""
":func:`pyvista.PolyDataFilters.subdivide` フィルタは， `butterfly` ， `loop` ， "
"`linear` の3つの異なるサブディビジョンアルゴリズムを使用してメッシュのセルをサブディバイドします．"

#: ../../pyvista/docs/examples/01-filter/subdivide.rst:46
msgid ""
"First, let's load a **triangulated** mesh to subdivide. We can use the "
":func:`pyvista.DataSetFilters.triangulate` filter to ensure the mesh we are "
"using is purely triangles."
msgstr ""
"まず， **triangulated** メッシュをロードして再分割しましょう． "
":func:`pyvista.DataSetFilters.triangulate` "
"フィルタを使用して，使用しているメッシュが純粋な三角形であることを確認できます．"

#: ../../pyvista/docs/examples/01-filter/subdivide.rst:69
msgid ""
"Now, lets do a few subdivisions with the mesh and compare the results. Below"
" is a helper function to make a comparison plot of thee different "
"subdivisions."
msgstr "ここで，メッシュをいくつか分割して，結果を比較してみましょう．以下は，さまざまな小区分の比較プロットを作成するヘルパー関数です．"

#: ../../pyvista/docs/examples/01-filter/subdivide.rst:110
msgid "Run the subdivisions for 1 and 3 levels."
msgstr "1レベルと3レベルの区画を実行します．"

#: ../../pyvista/docs/examples/01-filter/subdivide.rst:144
msgid "**Total running time of the script:** ( 0 minutes  1.649 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.649 seconds)"

#: ../../pyvista/docs/examples/01-filter/subdivide.rst:159
msgid ":download:`Download Python source code: subdivide.py <subdivide.py>`"
msgstr ":download:`Download Python source code: subdivide.py <subdivide.py>`"

#: ../../pyvista/docs/examples/01-filter/subdivide.rst:165
msgid ""
":download:`Download Jupyter notebook: subdivide.ipynb <subdivide.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: subdivide.ipynb <subdivide.ipynb>`"

#: ../../pyvista/docs/examples/01-filter/surface-smoothing.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_surface-"
"smoothing.py>` to download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_surface-"
"smoothing.py>` to download the full example code"

#: ../../pyvista/docs/examples/01-filter/surface-smoothing.rst:22
msgid "Surface Smoothing"
msgstr "サーフェイススムージング"

#: ../../pyvista/docs/examples/01-filter/surface-smoothing.rst:24
msgid "Smoothing rough edges of a surface mesh"
msgstr "サーフェスメッシュの粗いエッジをスムージングする"

#: ../../pyvista/docs/examples/01-filter/surface-smoothing.rst:43
msgid ""
"Suppose you extract a volumetric subset of a dataset that has roughly "
"defined edges. Perhaps you'd like a smooth representation of that model "
"region. This can be achieved by extracting the bounding surface of the "
"volume and applying a :func:`pyvista.PolyData.smooth` filter."
msgstr ""
"大まかに定義されたエッジを持つデータセットのボリュームサブセットを抽出するとします．おそらく，そのモデル領域をスムーズに表現する必要があります．これは，ボリュームの境界サーフェスを抽出し，"
" :func:`pyvista.PolyData.smooth` フィルタを適用することで実現できます．"

#: ../../pyvista/docs/examples/01-filter/surface-smoothing.rst:48
msgid ""
"The below code snippet loads a sample roughly edged volumetric dataset:"
msgstr "次のコードスニペットは，サンプルの大まかなエッジのボリュームデータセットをロードします．"

#: ../../pyvista/docs/examples/01-filter/surface-smoothing.rst:87
msgid ""
"Extract the outer surface of the volume using the "
":func:`pyvista.DataSetFilters.extract_geometry` filter and then apply the "
"smoothing filter:"
msgstr ""
":func:`pyvista.DataSetFilters.extract_geometry` "
"フィルタを使用してボリュームの外側サーフェスを抽出し，次にスムージングフィルタを適用します．"

#: ../../pyvista/docs/examples/01-filter/surface-smoothing.rst:125
msgid ""
"Not smooth enough? Try increasing the number of iterations for the Laplacian"
" smoothing algorithm:"
msgstr "滑らかさが足りませんか?Laplacianスムージングアルゴリズムの反復回数を増やしてみます．"

#: ../../pyvista/docs/examples/01-filter/surface-smoothing.rst:160
msgid ""
"Still not smooth enough? Increase the number of iterations for the Laplacian"
" smoothing algorithm to a crazy high value:"
msgstr "まだ滑らかではありませんか?ラプラシアン平滑化アルゴリズムの反復回数を非常に高い値に増やします．"

#: ../../pyvista/docs/examples/01-filter/surface-smoothing.rst:195
msgid "**Total running time of the script:** ( 0 minutes  3.176 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  3.176 seconds)"

#: ../../pyvista/docs/examples/01-filter/surface-smoothing.rst:210
msgid ""
":download:`Download Python source code: surface-smoothing.py <surface-"
"smoothing.py>`"
msgstr ""
":download:`Download Python source code: surface-smoothing.py <surface-"
"smoothing.py>`"

#: ../../pyvista/docs/examples/01-filter/surface-smoothing.rst:216
msgid ""
":download:`Download Jupyter notebook: surface-smoothing.ipynb <surface-"
"smoothing.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: surface-smoothing.ipynb <surface-"
"smoothing.ipynb>`"

#: ../../pyvista/docs/examples/01-filter/using-filters.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_using-filters.py>` to"
" download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_using-filters.py>` to"
" download the full example code"

#: ../../pyvista/docs/examples/01-filter/using-filters.rst:22
msgid "Using Common Filters"
msgstr "共通フィルタの使用"

#: ../../pyvista/docs/examples/01-filter/using-filters.rst:24
msgid "Using common filters like thresholding and clipping"
msgstr "閾値設定やクリッピングなどの一般的なフィルタの使用"

#: ../../pyvista/docs/examples/01-filter/using-filters.rst:44
msgid ""
"PyVista wrapped data objects have a suite of common filters ready for "
"immediate use directly on the object. These filters include the following "
"(see :ref:`filters_ref` for a complete list):"
msgstr ""
"PyVistaラップされたデータオブジェクトには，オブジェクト上で直接使用できるように，一連の共通フィルタが用意されています．これらのフィルタには，次のものがあります(完全なリストについては"
" :ref:`filters_ref` を参照)．"

#: ../../pyvista/docs/examples/01-filter/using-filters.rst:48
msgid ""
"``slice``: creates a single slice through the input dataset on a user "
"defined plane"
msgstr "``slice``: ユーザ定義平面上の入力データセットから単一のスライスを作成します．"

#: ../../pyvista/docs/examples/01-filter/using-filters.rst:49
msgid ""
"``slice_orthogonal``: creates a ``MultiBlock`` dataset of three orthogonal "
"slices"
msgstr "``slice_orthogonal``: 3つの直交スライスの ``MultiBlock`` データセットを作成する"

#: ../../pyvista/docs/examples/01-filter/using-filters.rst:50
msgid ""
"``slice_along_axis``: creates a ``MultiBlock`` dataset of many slices along "
"a specified axis"
msgstr ""
"``slice_along_axis``: creates a ``MultiBlock`` dataset of many slices along "
"a specified axis"

#: ../../pyvista/docs/examples/01-filter/using-filters.rst:51
msgid ""
"``threshold``: Thresholds a dataset by a single value or range of values"
msgstr "``threshold``: 単一の値または値の範囲によるデータセットの閾値"

#: ../../pyvista/docs/examples/01-filter/using-filters.rst:52
msgid "``threshold_percent``: Threshold by percentages of the scalar range"
msgstr "``threshold_percent``: スカラー範囲のパーセンテージによる閾値"

#: ../../pyvista/docs/examples/01-filter/using-filters.rst:53
msgid "``clip``: Clips the dataset by a user defined plane"
msgstr "``clip``: ユーザ定義平面によってデータセットをクリップします"

#: ../../pyvista/docs/examples/01-filter/using-filters.rst:54
msgid "``outline_corners``: Outlines the corners of the data extent"
msgstr "``outline_corners``: データ範囲の隅のアウトラインを表示します．"

#: ../../pyvista/docs/examples/01-filter/using-filters.rst:55
msgid "``extract_geometry``: Extract surface geometry"
msgstr "``extract_geometry``: サーフェスジオメトリを抽出する"

#: ../../pyvista/docs/examples/01-filter/using-filters.rst:57
msgid ""
"To use these filters, call the method of your choice directly on your data "
"object:"
msgstr "これらのフィルタを使用するには，データ・オブジェクトで選択したメソッドを直接呼び出します．"

#: ../../pyvista/docs/examples/01-filter/using-filters.rst:82
msgid ""
"And now there is a thresholded version of the input dataset in the new "
"``threshed`` object. To learn more about what keyword arguments are "
"available to alter how filters are executed, print the docstring for any "
"filter attached to PyVista objects with either ``help(dataset.threshold)`` "
"or using ``shift+tab`` in an IPython environment."
msgstr ""
"これで，新しい ``threshed`` "
"オブジェクトに入力データセットのしきい値が設定されたバージョンがあります．フィルタの実行方法を変更するためにどのようなキーワード引数を使用できるかを調べるには，"
" ``help(dataset.threshold)`` またはIPython環境で ``shift+tab`` "
"を使用してPyVistaオブジェクトに付加されたフィルタのdocstringを出力します．"

#: ../../pyvista/docs/examples/01-filter/using-filters.rst:88
msgid ""
"We can now plot this filtered dataset along side an outline of the original "
"dataset"
msgstr "このフィルタ処理されたデータセットを，元のデータセットのアウトラインに沿ってプロットできるようになりました．"

#: ../../pyvista/docs/examples/01-filter/using-filters.rst:126
msgid ""
"What about other filters? Let's collect a few filter results and compare "
"them:"
msgstr "他のフィルターはどうですか?いくつかのフィルタ結果を収集して比較してみましょう．"

#: ../../pyvista/docs/examples/01-filter/using-filters.rst:185
msgid "Filter Pipeline"
msgstr "フィルタパイプライン"

#: ../../pyvista/docs/examples/01-filter/using-filters.rst:187
msgid ""
"In VTK, filters are often used in a pipeline where each algorithm passes its"
" output to the next filtering algorithm. In PyVista, we can mimic the "
"filtering pipeline through a chain; attaching each filter to the last "
"filter. In the following example, several filters are chained together:"
msgstr ""
"VTKでは，フィルタがパイプラインで使用されることが多く，各アルゴリズムはその出力を次のフィルタリング・アルゴリズムに渡します．PyVistaでは，次のようにしてフィルタリングパイプラインを模倣できます．各フィルタを最後のフィルタにアタッチします．次の例では，複数のフィルタが連結されています．"

#: ../../pyvista/docs/examples/01-filter/using-filters.rst:192
msgid "First, and empty ``threshold`` filter to clean out any ``NaN`` values."
msgstr "まず， ``threshold`` フィルタを空にして， ``NaN`` 値をすべて消去します．"

#: ../../pyvista/docs/examples/01-filter/using-filters.rst:193
msgid ""
"Use an ``elevation`` filter to generate scalar values corresponding to "
"height."
msgstr "``elevation`` フィルタを使用して，高さに対応するスカラー値を生成します．"

#: ../../pyvista/docs/examples/01-filter/using-filters.rst:194
msgid "Use the ``clip`` filter to cut the dataset in half."
msgstr "``clip`` フィルタを使用して，データセットを半分にカットします．"

#: ../../pyvista/docs/examples/01-filter/using-filters.rst:195
msgid ""
"Create three slices along each axial plane using the ``slice_orthogonal`` "
"filter."
msgstr "``slice_orthogonal`` フィルタを使用して，各軸平面に沿ってスライスを3つ作成します．"

#: ../../pyvista/docs/examples/01-filter/using-filters.rst:214
msgid ""
"And to view this filtered data, simply call the ``plot`` method "
"(``result.plot()``) or create a rendering scene:"
msgstr ""
"フィルタリングされたデータを表示するには， ``plot`` メソッド (``result.plot()``) "
"を呼び出すか，レンダリングシーンを作成します．"

#: ../../pyvista/docs/examples/01-filter/using-filters.rst:251
msgid "**Total running time of the script:** ( 0 minutes  2.522 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  2.522 seconds)"

#: ../../pyvista/docs/examples/01-filter/using-filters.rst:266
msgid ""
":download:`Download Python source code: using-filters.py <using-filters.py>`"
msgstr ""
":download:`Download Python source code: using-filters.py <using-filters.py>`"

#: ../../pyvista/docs/examples/01-filter/using-filters.rst:272
msgid ""
":download:`Download Jupyter notebook: using-filters.ipynb <using-"
"filters.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: using-filters.ipynb <using-"
"filters.ipynb>`"

#: ../../pyvista/docs/examples/01-filter/voxelize.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_voxelize.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_voxelize.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/01-filter/voxelize.rst:22
msgid "Voxelize a Surface Mesh"
msgstr "サーフェスメッシュをボクセル化する"

#: ../../pyvista/docs/examples/01-filter/voxelize.rst:24
msgid ""
"Create a voxel model (like legos) of a closed surface or volumetric mesh."
msgstr "閉じたサーフェスまたはボリュームメッシュのボクセルモデル(レゴのように)を作成します．"

#: ../../pyvista/docs/examples/01-filter/voxelize.rst:26
msgid ""
"This example also demonstrates how to compute an implicit distance from a "
"bounding :class:`pyvista.PolyData` surface."
msgstr "この例はまた，境界 :class:`pyvista.PolyData` 表面からの陰的距離を計算する方法を示す．"

#: ../../pyvista/docs/examples/01-filter/voxelize.rst:48
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>4204</td></tr>\n"
"<tr><td>N Points</td><td>2154</td></tr>\n"
"<tr><td>X Bounds</td><td>-5.633e+00, 5.633e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>-1.860e+00, 1.860e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>-2.125e+00, 2.126e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>0</td></tr>\n"
"</table>\n"
"\n"
"\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>4204</td></tr>\n"
"<tr><td>N Points</td><td>2154</td></tr>\n"
"<tr><td>X Bounds</td><td>-5.633e+00, 5.633e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>-1.860e+00, 1.860e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>-2.125e+00, 2.126e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>0</td></tr>\n"
"</table>\n"
"\n"
"\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/docs/examples/01-filter/voxelize.rst:101
msgid "Create a voxel model of the bounding surface"
msgstr "境界面のボクセルモデルを作成する"

#: ../../pyvista/docs/examples/01-filter/voxelize.rst:138
msgid ""
"We could even add a scalar field to that new voxel model in case we wanted "
"to create grids for modelling. In this case, let's add a scalar field for "
"bone density noting:"
msgstr ""
"モデリング用のグリッドを作成する場合に備えて，新しいボクセルモデルにスカラーフィールドを追加することもできます．ここでは，ボーン密度のスカラーフィールドを追加します．"

#: ../../pyvista/docs/examples/01-filter/voxelize.rst:154
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>UnstructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>93041</td></tr>\n"
"<tr><td>N Points</td><td>113192</td></tr>\n"
"<tr><td>X Bounds</td><td>-5.633e+00, 5.584e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>-1.860e+00, 1.858e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>-2.125e+00, 2.097e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>3</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td>vtkOriginalPointIds</td><td>Points</td><td>int64</td><td>1</td><td>3.685e+03</td><td>7.283e+05</td></tr>\n"
"<tr><td><b>vtkOriginalCellIds</b></td><td>Cells</td><td>int64</td><td>1</td><td>3.624e+03</td><td>7.017e+05</td></tr>\n"
"<tr><td>density</td><td>Cells</td><td>float64</td><td>1</td><td>3.650e+00</td><td>3.650e+00</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>UnstructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>93041</td></tr>\n"
"<tr><td>N Points</td><td>113192</td></tr>\n"
"<tr><td>X Bounds</td><td>-5.633e+00, 5.584e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>-1.860e+00, 1.858e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>-2.125e+00, 2.097e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>3</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td>vtkOriginalPointIds</td><td>Points</td><td>int64</td><td>1</td><td>3.685e+03</td><td>7.283e+05</td></tr>\n"
"<tr><td><b>vtkOriginalCellIds</b></td><td>Cells</td><td>int64</td><td>1</td><td>3.624e+03</td><td>7.017e+05</td></tr>\n"
"<tr><td>density</td><td>Cells</td><td>float64</td><td>1</td><td>3.650e+00</td><td>3.650e+00</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/docs/examples/01-filter/voxelize.rst:211
msgid ""
"A constant scalar field is kind of boring, so let's get a little fancier by "
"added a scalar field that varies by the distance from the bounding surface."
msgstr ""
"一定のスカラーフィールドは退屈なので，バウンディングサーフェスからの距離によって変化するスカラーフィールドを追加して少しおしゃれにしましょう．"

#: ../../pyvista/docs/examples/01-filter/voxelize.rst:226
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>UnstructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>93041</td></tr>\n"
"<tr><td>N Points</td><td>113192</td></tr>\n"
"<tr><td>X Bounds</td><td>-5.633e+00, 5.584e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>-1.860e+00, 1.858e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>-2.125e+00, 2.097e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>4</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td>vtkOriginalPointIds</td><td>Points</td><td>int64</td><td>1</td><td>3.685e+03</td><td>7.283e+05</td></tr>\n"
"<tr><td>implicit_distance</td><td>Points</td><td>float64</td><td>1</td><td>-6.951e-01</td><td>4.148e-01</td></tr>\n"
"<tr><td><b>vtkOriginalCellIds</b></td><td>Cells</td><td>int64</td><td>1</td><td>3.624e+03</td><td>7.017e+05</td></tr>\n"
"<tr><td>density</td><td>Cells</td><td>float64</td><td>1</td><td>3.650e+00</td><td>3.650e+00</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>UnstructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>93041</td></tr>\n"
"<tr><td>N Points</td><td>113192</td></tr>\n"
"<tr><td>X Bounds</td><td>-5.633e+00, 5.584e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>-1.860e+00, 1.858e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>-2.125e+00, 2.097e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>4</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td>vtkOriginalPointIds</td><td>Points</td><td>int64</td><td>1</td><td>3.685e+03</td><td>7.283e+05</td></tr>\n"
"<tr><td>implicit_distance</td><td>Points</td><td>float64</td><td>1</td><td>-6.951e-01</td><td>4.148e-01</td></tr>\n"
"<tr><td><b>vtkOriginalCellIds</b></td><td>Cells</td><td>int64</td><td>1</td><td>3.624e+03</td><td>7.017e+05</td></tr>\n"
"<tr><td>density</td><td>Cells</td><td>float64</td><td>1</td><td>3.650e+00</td><td>3.650e+00</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/docs/examples/01-filter/voxelize.rst:288
msgid "**Total running time of the script:** ( 0 minutes  24.489 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  24.489 seconds)"

#: ../../pyvista/docs/examples/01-filter/voxelize.rst:303
msgid ":download:`Download Python source code: voxelize.py <voxelize.py>`"
msgstr ":download:`Download Python source code: voxelize.py <voxelize.py>`"

#: ../../pyvista/docs/examples/01-filter/voxelize.rst:309
msgid ":download:`Download Jupyter notebook: voxelize.ipynb <voxelize.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: voxelize.ipynb <voxelize.ipynb>`"

#: ../../pyvista/docs/examples/01-filter/warp-by-vector.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_warp-by-vector.py>` "
"to download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_warp-by-vector.py>` "
"to download the full example code"

#: ../../pyvista/docs/examples/01-filter/warp-by-vector.rst:22
msgid "Warping by Vectors"
msgstr "ベクトルによるワープ"

#: ../../pyvista/docs/examples/01-filter/warp-by-vector.rst:24
msgid ""
"This example applies the ``warp_by_vector`` filter to a sphere mesh that has"
" 3D displacement vectors defined at each node."
msgstr ""
"この例では， ``warp_by_vector`` フィルタを，各ノードで定義された3 Dディスプレイスメントベクトルを持つ球メッシュに適用します．"

#: ../../pyvista/docs/examples/01-filter/warp-by-vector.rst:29
msgid "We first compare the unwarped sphere to the warped sphere."
msgstr "まず，ワープしていない球体とワープしている球体を比較します．"

#: ../../pyvista/docs/examples/01-filter/warp-by-vector.rst:74
msgid ""
"We then use several values for the scale factor applied to the warp "
"operation. Applying a warping factor that is too high can often lead to "
"unrealistic results."
msgstr ""
"次に，ワープ操作に適用されるスケール係数にいくつかの値を使用します．過度に高いワープ係数を適用すると，非現実的な結果になることがよくあります．"

#: ../../pyvista/docs/examples/01-filter/warp-by-vector.rst:116
msgid "**Total running time of the script:** ( 0 minutes  4.332 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  4.332 seconds)"

#: ../../pyvista/docs/examples/01-filter/warp-by-vector.rst:131
msgid ""
":download:`Download Python source code: warp-by-vector.py <warp-by-"
"vector.py>`"
msgstr ""
":download:`Download Python source code: warp-by-vector.py <warp-by-"
"vector.py>`"

#: ../../pyvista/docs/examples/01-filter/warp-by-vector.rst:137
msgid ""
":download:`Download Jupyter notebook: warp-by-vector.ipynb <warp-by-"
"vector.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: warp-by-vector.ipynb <warp-by-"
"vector.ipynb>`"

#: ../../pyvista/docs/examples/02-plot/background_image.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_background_image.py>` "
"to download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_background_image.py>` "
"to download the full example code"

#: ../../pyvista/docs/examples/02-plot/background_image.rst:22
msgid "Background Image"
msgstr "背景イメージ"

#: ../../pyvista/docs/examples/02-plot/background_image.rst:24
msgid "Add a background image with ``add_background_image``"
msgstr "``add_background_image`` で背景画像を追加する"

#: ../../pyvista/docs/examples/02-plot/background_image.rst:44
msgid "Plot an airplane with the map of the earth in the background"
msgstr "地球の地図を背景に飛行機を配置する"

#: ../../pyvista/docs/examples/02-plot/background_image.rst:80
msgid "Plot several earth related plots"
msgstr "複数の地球関連プロットをプロットする"

#: ../../pyvista/docs/examples/02-plot/background_image.rst:132
msgid "**Total running time of the script:** ( 0 minutes  5.354 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  5.354 seconds)"

#: ../../pyvista/docs/examples/02-plot/background_image.rst:147
msgid ""
":download:`Download Python source code: background_image.py "
"<background_image.py>`"
msgstr ""
":download:`Download Python source code: background_image.py "
"<background_image.py>`"

#: ../../pyvista/docs/examples/02-plot/background_image.rst:153
msgid ""
":download:`Download Jupyter notebook: background_image.ipynb "
"<background_image.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: background_image.ipynb "
"<background_image.ipynb>`"

#: ../../pyvista/docs/examples/02-plot/clear.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_clear.py>` to download "
"the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_clear.py>` to download "
"the full example code"

#: ../../pyvista/docs/examples/02-plot/clear.rst:22
msgid "Clearing a Mesh or the Entire Plot"
msgstr "メッシュまたはプロット全体の消去"

#: ../../pyvista/docs/examples/02-plot/clear.rst:24
msgid "This example demonstrates how to remove elements from a scene."
msgstr "この例では，シーンから要素を削除する方法を示します．"

#: ../../pyvista/docs/examples/02-plot/clear.rst:76
msgid "Clearing the entire plotting window:"
msgstr "プロットウィンドウ全体をクリアする:"

#: ../../pyvista/docs/examples/02-plot/clear.rst:113
msgid ""
"Or you can give any actor a ``name`` when adding it and if an actor is added"
" with that same name at a later time, it will replace the previous actor:"
msgstr "または，追加するときに任意のアクターに ``name`` を指定し，アクターが後で同じ名前で追加された場合に，前のアクターを置き換えます:"

#: ../../pyvista/docs/examples/02-plot/clear.rst:150
msgid "**Total running time of the script:** ( 0 minutes  0.981 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  0.981 seconds)"

#: ../../pyvista/docs/examples/02-plot/clear.rst:165
msgid ":download:`Download Python source code: clear.py <clear.py>`"
msgstr ":download:`Download Python source code: clear.py <clear.py>`"

#: ../../pyvista/docs/examples/02-plot/clear.rst:171
msgid ":download:`Download Jupyter notebook: clear.ipynb <clear.ipynb>`"
msgstr ":download:`Download Jupyter notebook: clear.ipynb <clear.ipynb>`"

#: ../../pyvista/docs/examples/02-plot/cmap.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_cmap.py>` to download "
"the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_cmap.py>` to download "
"the full example code"

#: ../../pyvista/docs/examples/02-plot/cmap.rst:22
msgid "Colormap Choices"
msgstr "カラーマップの選択肢"

#: ../../pyvista/docs/examples/02-plot/cmap.rst:24
msgid ""
"Use a Matplotlib, Colorcet, cmocean, or custom colormap when plotting scalar"
" values."
msgstr "スカラー値をプロットする場合は，Matplotlib，Colorcet，cmocean，またはカスタムカラーマップを使用します．"

#: ../../pyvista/docs/examples/02-plot/cmap.rst:47
msgid ""
"Any colormap built for ``matplotlib``, ``colorcet``, or ``cmocean`` is fully"
" compatible with PyVista. Colormaps are typically specified by passing the "
"string name of the colormap to the plotting routine via the ``cmap`` "
"argument."
msgstr ""
"``matplotlib`` ， ``colorcet`` ， ``cmocean`` "
"用に作成されたカラーマップはすべてPyVistaと完全に互換性があります．カラーマップは通常， ``cmap`` "
"引数によってカラーマップの文字列名をプロットルーチンに渡すことで指定します．"

#: ../../pyvista/docs/examples/02-plot/cmap.rst:52
msgid ""
"See `Matplotlib's complete list of available colormaps`_, `Colorcet's "
"complete list`_, and `cmocean's complete list`_."
msgstr ""
"`Matplotlib's complete list of available colormaps`_ ， `Colorcet's complete "
"list`_ および `cmocean's complete list`_ を参照．"

#: ../../pyvista/docs/examples/02-plot/cmap.rst:62
msgid "Custom Made Colormaps"
msgstr "カスタムメイドのカラーマップ"

#: ../../pyvista/docs/examples/02-plot/cmap.rst:64
msgid ""
"To get started using a custom colormap, download some data with scalar "
"values to plot."
msgstr "カスタムのカラーマップを使い始めるには，スカラー値を含むデータをダウンロードしてプロットします．"

#: ../../pyvista/docs/examples/02-plot/cmap.rst:85
msgid ""
"Build a custom colormap - here we make a colormap with 5 discrete colors and"
" we specify the ranges where those colors fall:"
msgstr "独自のカラーマップを作成します．ここでは，5つの個別の色を持つカラーマップを作成し，それらの色の範囲を指定します:"

#: ../../pyvista/docs/examples/02-plot/cmap.rst:120
msgid "Simply pass the colormap to the plotting routine!"
msgstr "単にカラーマップを描画ルーチンに渡すだけです!"

#: ../../pyvista/docs/examples/02-plot/cmap.rst:151
msgid ""
"Or you could make a simple colormap... any Matplotlib colormap can be passed"
" to PyVista!"
msgstr "あるいは，簡単なカラーマップを作ることもできます...どんなMatplotlibカラーマップでもPyVistaに渡すことができます!"

#: ../../pyvista/docs/examples/02-plot/cmap.rst:184
msgid ""
"You can also pass a list of color strings to the color map.  This approach "
"divides up the colormap into 5 equal parts."
msgstr "カラー文字列のリストをカラーマップに渡すこともできます．この方法では，カラーマップは5等分されます．"

#: ../../pyvista/docs/examples/02-plot/cmap.rst:216
msgid ""
"If you still wish to have control of the separation of values, you can do "
"this by creating a scalar array and passing that to the plotter along with "
"the the colormap"
msgstr "値の分離を制御したい場合は，スカラー配列を作成し，それをカラーマップとともにプロッタに渡すことで制御できます．"

#: ../../pyvista/docs/examples/02-plot/cmap.rst:257
msgid "Matplotlib vs. Colorcet"
msgstr "Matplotlib対Colorcet"

#: ../../pyvista/docs/examples/02-plot/cmap.rst:259
msgid ""
"Let's compare Colorcet's perceptually uniform \"fire\" colormap to "
"Matplotlib's \"hot\" colormap much like the example on the `first page of "
"Colorcet's docs`_."
msgstr ""
"Colorcetの知覚的に一様な \"fire\" カラーマップとMatplotlibの \"hot\" カラーマップを `first page of "
"Colorcet's docs`_ の例のように比較してみましょう．"

#: ../../pyvista/docs/examples/02-plot/cmap.rst:264
msgid ""
"The \"hot\" version washes out detail at the high end, as if the image is "
"overexposed, while \"fire\" makes detail visible throughout the data range."
msgstr ""
"\"hot\" バージョンは，画像が露出オーバーであるかのようにハイエンドのディテールを洗い流しますが， \"fire\" "
"バージョンは，データ範囲を通してディテールを可視化します．"

#: ../../pyvista/docs/examples/02-plot/cmap.rst:267
msgid ""
"Please note that in order to use Colorcet's colormaps including \"fire\", "
"you must have Colorcet installed in your Python environment: ``pip install "
"colorcet``"
msgstr ""
"\"fire\" "
"を含むColorcetのカラーマップを使用するには，Python環境にColorcetをインストールしておく必要があることに注意してください: "
"``pip install colorcet``"

#: ../../pyvista/docs/examples/02-plot/cmap.rst:318
msgid "**Total running time of the script:** ( 0 minutes  6.740 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  6.740 seconds)"

#: ../../pyvista/docs/examples/02-plot/cmap.rst:333
msgid ":download:`Download Python source code: cmap.py <cmap.py>`"
msgstr ":download:`Download Python source code: cmap.py <cmap.py>`"

#: ../../pyvista/docs/examples/02-plot/cmap.rst:339
msgid ":download:`Download Jupyter notebook: cmap.ipynb <cmap.ipynb>`"
msgstr ":download:`Download Jupyter notebook: cmap.ipynb <cmap.ipynb>`"

#: ../../pyvista/docs/examples/02-plot/depth-peeling.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_depth-peeling.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_depth-peeling.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/02-plot/depth-peeling.rst:22
msgid "Depth Peeling"
msgstr "深度ピーリング"

#: ../../pyvista/docs/examples/02-plot/depth-peeling.rst:24
msgid ""
"Depth peeling is a technique to correctly render translucent geometry. This "
"is not enabled by default in `pyvista.rcParams` as some operating systems "
"and versions of VTK have issues with this routine."
msgstr ""
"深さのピーリングは，半透明のジオメトリを正しくレンダーするテクニックです．いくつかのオペレーティングシステムとVTKのバージョンはこのルーチンで問題があるので，"
" :any:`pyvista.rcParams` ではデフォルトで有効になっていません．"

#: ../../pyvista/docs/examples/02-plot/depth-peeling.rst:28
msgid ""
"For this example, we will showcase the difference that depth peeling "
"provides."
msgstr "この例では，深度ピーリングによって得られる違いを示します．"

#: ../../pyvista/docs/examples/02-plot/depth-peeling.rst:110
msgid ""
"The following room surfaces example mesh, provided courtesy of `Sam Potter "
"<https://github.com/sampotter>`_ has coincident topology and depth rendering"
" helps correctly render those geometries when a global opacity value is "
"used."
msgstr ""
"次の部屋のサーフェスの例では， `Sam Potter <https://github.com/sampotter>`_ "
"によって提供されたメッシュは，トポロジが一致しており，グローバル不透明度値が使用されている場合に，深度レンダリングがこれらのジオメトリを正しくレンダリングするのに役立ちます．"

#: ../../pyvista/docs/examples/02-plot/depth-peeling.rst:163
msgid ""
"And here is another example wheen rendering many translucent contour "
"surfaces."
msgstr "次に，多くの半透明のコンタサーフェスをレンダリングする別の例を示します．"

#: ../../pyvista/docs/examples/02-plot/depth-peeling.rst:213
msgid "**Total running time of the script:** ( 0 minutes  53.580 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  53.580 seconds)"

#: ../../pyvista/docs/examples/02-plot/depth-peeling.rst:228
msgid ""
":download:`Download Python source code: depth-peeling.py <depth-peeling.py>`"
msgstr ""
":download:`Download Python source code: depth-peeling.py <depth-peeling.py>`"

#: ../../pyvista/docs/examples/02-plot/depth-peeling.rst:234
msgid ""
":download:`Download Jupyter notebook: depth-peeling.ipynb <depth-"
"peeling.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: depth-peeling.ipynb <depth-"
"peeling.ipynb>`"

#: ../../pyvista/docs/examples/02-plot/edges.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_edges.py>` to download "
"the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_edges.py>` to download "
"the full example code"

#: ../../pyvista/docs/examples/02-plot/edges.rst:22
msgid "Show Edges"
msgstr "エッジを表示"

#: ../../pyvista/docs/examples/02-plot/edges.rst:24
msgid "Show the edges of all geometries within a mesh"
msgstr "メッシュ内のすべてのジオメトリのエッジを表示"

#: ../../pyvista/docs/examples/02-plot/edges.rst:28
msgid ""
"Sometimes it can be useful to show all of the edges of a mesh when rendering"
" to communicate aspects of the dataset like resolution."
msgstr "レンダリング時にメッシュのすべてのエッジを表示して，解像度などのデータセットの側面を伝えると便利な場合があります．"

#: ../../pyvista/docs/examples/02-plot/edges.rst:31
msgid ""
"Showing the edges for any rendered dataset is as simple as specifying the "
"the ``show_edges`` keyword argument to ``True`` when plotting a dataset."
msgstr ""
"レンダリングされたデータセットのエッジを表示するには，データセットをプロットするときに ``True`` に ``show_edges`` "
"キーワード引数を指定するだけです．"

#: ../../pyvista/docs/examples/02-plot/edges.rst:77
msgid "**Total running time of the script:** ( 0 minutes  7.565 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  7.565 seconds)"

#: ../../pyvista/docs/examples/02-plot/edges.rst:92
msgid ":download:`Download Python source code: edges.py <edges.py>`"
msgstr ":download:`Download Python source code: edges.py <edges.py>`"

#: ../../pyvista/docs/examples/02-plot/edges.rst:98
msgid ":download:`Download Jupyter notebook: edges.ipynb <edges.ipynb>`"
msgstr ":download:`Download Jupyter notebook: edges.ipynb <edges.ipynb>`"

#: ../../pyvista/docs/examples/02-plot/edl.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_edl.py>` to download "
"the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_edl.py>` to download "
"the full example code"

#: ../../pyvista/docs/examples/02-plot/edl.rst:24
msgid "Eye Dome Lighting"
msgstr "Eye Dome Lighting"

#: ../../pyvista/docs/examples/02-plot/edl.rst:26
msgid ""
"Eye-Dome Lighting (EDL) is a non-photorealistic, image-based shading "
"technique designed to improve depth perception in scientific visualization "
"images. To learn more, please see `this blog post`_."
msgstr ""
"Eye‐Dome Lighting (EDL) "
"は，科学的可視化画像における奥行き知覚を改善するために設計された非フォトリアリスティック，画像ベースシェーディングテクニックである．詳しくは `this"
" blog post`_ をご覧ください．"

#: ../../pyvista/docs/examples/02-plot/edl.rst:52
msgid "Statue"
msgstr "像"

#: ../../pyvista/docs/examples/02-plot/edl.rst:54
msgid ""
"Eye-Dome Lighting can dramatically improve depth perception when plotting "
"incredibly sophisticated meshes like the creative commons Queen Nefertiti "
"statue:"
msgstr ""
"Eye-Dome "
"Lightingは，クリエイティブ・コモンズのNefertiti女王像のような非常に洗練されたメッシュを描画するときに，奥行きの知覚を劇的に向上させることができます．"

#: ../../pyvista/docs/examples/02-plot/edl.rst:89
msgid "Here we will compare a EDL shading side by side with normal shading"
msgstr "ここでは，EDLシェーディングと通常のシェーディングを並べて比較します．"

#: ../../pyvista/docs/examples/02-plot/edl.rst:137
msgid "Point Cloud"
msgstr "点群"

#: ../../pyvista/docs/examples/02-plot/edl.rst:139
msgid ""
"When plotting a simple point cloud, it can be difficult to perceive depth. "
"Take this Lidar point cloud for example:"
msgstr "単純な点群を印刷する場合，深さを認識するのが難しいことがあります．このライダーポイントクラウドを例にとってみましょう．"

#: ../../pyvista/docs/examples/02-plot/edl.rst:159
msgid "And now plot this point cloud as-is:"
msgstr "次に，この点群をそのままプロットします:"

#: ../../pyvista/docs/examples/02-plot/edl.rst:195
msgid ""
"We can improve the depth mapping by enabling eye dome lighting on the "
"renderer with :func:`pyvista.Renderer.enable_eye_dome_lighting`."
msgstr ""
":func:`pyvista.Renderer.enable_eye_dome_lighting` "
"を使用してレンダラーで目のドーム照明を有効にすることで，深度マッピングを改善できます．"

#: ../../pyvista/docs/examples/02-plot/edl.rst:233
msgid "The eye dome lighting mode can also handle plotting scalar arrays:"
msgstr "Eye Dome Lightingモードでは，スカラー配列のプロットも処理できます．"

#: ../../pyvista/docs/examples/02-plot/edl.rst:269
msgid "**Total running time of the script:** ( 0 minutes  22.996 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  22.996 seconds)"

#: ../../pyvista/docs/examples/02-plot/edl.rst:284
msgid ":download:`Download Python source code: edl.py <edl.py>`"
msgstr ":download:`Download Python source code: edl.py <edl.py>`"

#: ../../pyvista/docs/examples/02-plot/edl.rst:290
msgid ":download:`Download Jupyter notebook: edl.ipynb <edl.ipynb>`"
msgstr ":download:`Download Jupyter notebook: edl.ipynb <edl.ipynb>`"

#: ../../pyvista/docs/examples/02-plot/floors.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_floors.py>` to download"
" the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_floors.py>` to download"
" the full example code"

#: ../../pyvista/docs/examples/02-plot/floors.rst:22
msgid "Plot with Floors"
msgstr "床を使用してプロットする"

#: ../../pyvista/docs/examples/02-plot/floors.rst:24
msgid "Add a floor/wall at the boundary of the rendering scene."
msgstr "レンダリングシーンの境界に床/壁を追加します．"

#: ../../pyvista/docs/examples/02-plot/floors.rst:69
msgid "**Total running time of the script:** ( 0 minutes  3.016 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  3.016 seconds)"

#: ../../pyvista/docs/examples/02-plot/floors.rst:84
msgid ":download:`Download Python source code: floors.py <floors.py>`"
msgstr ":download:`Download Python source code: floors.py <floors.py>`"

#: ../../pyvista/docs/examples/02-plot/floors.rst:90
msgid ":download:`Download Jupyter notebook: floors.ipynb <floors.ipynb>`"
msgstr ":download:`Download Jupyter notebook: floors.ipynb <floors.ipynb>`"

#: ../../pyvista/docs/examples/02-plot/ghost-cells.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_ghost-cells.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_ghost-cells.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/02-plot/ghost-cells.rst:22
msgid "Hide Cells with Ghosting"
msgstr "ゴーストを使用してセルを非表示にする"

#: ../../pyvista/docs/examples/02-plot/ghost-cells.rst:24
msgid "Specify specific cells to hide when plotting."
msgstr "印刷時に非表示にする特定のセルを指定します．"

#: ../../pyvista/docs/examples/02-plot/ghost-cells.rst:26
msgid ""
"This is a lightweight alternative to thresholding to quickly hide cells in a"
" mesh without creating a new mesh."
msgstr "これは，新しいメッシュを作成せずにメッシュ内のセルをすばやく非表示にするための，しきい値の代わりとなる軽量のオプションです．"

#: ../../pyvista/docs/examples/02-plot/ghost-cells.rst:29
msgid ""
"Notably, the mesh must be cast to an :class:`pyvista.UnstructuredGrid` type "
"for this to work (use the ``cast_to_unstructured_grid`` filter)."
msgstr ""
"特に，これが機能するためにはメッシュを :class:`pyvista.UnstructuredGrid` 型にキャストする必要があります( "
"``cast_to_unstructured_grid`` フィルターを使用する)．"

#: ../../pyvista/docs/examples/02-plot/ghost-cells.rst:52
msgid ""
"Decide which cells are ghosted with a criteria (feel free to adjust this or "
"manually create this array to hide specific cells)."
msgstr "基準を使用してゴースト化するセルを決定します(この配列を自由に調整するか，手動で作成して特定のセルを非表示にします)．"

#: ../../pyvista/docs/examples/02-plot/ghost-cells.rst:73
msgid "Now we can plot the mesh and those cells will be hidden"
msgstr "メッシュをプロットすると，これらのセルは非表示になります．"

#: ../../pyvista/docs/examples/02-plot/ghost-cells.rst:104
msgid "**Total running time of the script:** ( 0 minutes  5.807 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  5.807 seconds)"

#: ../../pyvista/docs/examples/02-plot/ghost-cells.rst:119
msgid ""
":download:`Download Python source code: ghost-cells.py <ghost-cells.py>`"
msgstr ""
":download:`Download Python source code: ghost-cells.py <ghost-cells.py>`"

#: ../../pyvista/docs/examples/02-plot/ghost-cells.rst:125
msgid ""
":download:`Download Jupyter notebook: ghost-cells.ipynb <ghost-cells.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: ghost-cells.ipynb <ghost-cells.ipynb>`"

#: ../../pyvista/docs/examples/02-plot/gif.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_gif.py>` to download "
"the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_gif.py>` to download "
"the full example code"

#: ../../pyvista/docs/examples/02-plot/gif.rst:22
msgid "Create a GIF Movie"
msgstr "GIFムービーの作成"

#: ../../pyvista/docs/examples/02-plot/gif.rst:24
msgid "Generate a moving gif from an active plotter"
msgstr "アクティブなプロッタから動くgifを生成する"

#: ../../pyvista/docs/examples/02-plot/gif.rst:81
msgid "**Total running time of the script:** ( 0 minutes  9.667 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  9.667 seconds)"

#: ../../pyvista/docs/examples/02-plot/gif.rst:96
msgid ":download:`Download Python source code: gif.py <gif.py>`"
msgstr ":download:`Download Python source code: gif.py <gif.py>`"

#: ../../pyvista/docs/examples/02-plot/gif.rst:102
msgid ":download:`Download Jupyter notebook: gif.ipynb <gif.ipynb>`"
msgstr ":download:`Download Jupyter notebook: gif.ipynb <gif.ipynb>`"

#: ../../pyvista/docs/examples/02-plot/image_depth.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_image_depth.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_image_depth.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/02-plot/image_depth.rst:22
msgid "Render a depth image"
msgstr "デプスイメージをレンダーする"

#: ../../pyvista/docs/examples/02-plot/image_depth.rst:24
msgid ""
"Plot a depth image as viewed from a camera overlooking the \"hills\" example"
" mesh."
msgstr "\"丘\"メッシュの例を見ながら，カメラから見た深度イメージをプロットします．"

#: ../../pyvista/docs/examples/02-plot/image_depth.rst:68
msgid "Record depth image without and with a custom fill value"
msgstr "Record depth image without and with a custom fill value"

#: ../../pyvista/docs/examples/02-plot/image_depth.rst:86
msgid "Visualize depth images"
msgstr "Visualize depth images"

#: ../../pyvista/docs/examples/02-plot/image_depth.rst:136
msgid "**Total running time of the script:** ( 0 minutes  1.715 seconds)"
msgstr "**スクリプトの合計実行時間:** ( 0 分  1.715 秒)"

#: ../../pyvista/docs/examples/02-plot/image_depth.rst:151
msgid ""
":download:`Download Python source code: image_depth.py <image_depth.py>`"
msgstr ""
":download:`Download Python source code: image_depth.py <image_depth.py>`"

#: ../../pyvista/docs/examples/02-plot/image_depth.rst:157
msgid ""
":download:`Download Jupyter notebook: image_depth.ipynb <image_depth.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: image_depth.ipynb <image_depth.ipynb>`"

#: ../../pyvista/docs/examples/02-plot/interpolate-before-map.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_interpolate-before-"
"map.py>` to download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_interpolate-before-"
"map.py>` to download the full example code"

#: ../../pyvista/docs/examples/02-plot/interpolate-before-map.rst:22
msgid "Interpolate Before Mapping"
msgstr "マッピング前に補間"

#: ../../pyvista/docs/examples/02-plot/interpolate-before-map.rst:24
msgid ""
"The ``add_mesh`` function has an ``interpolate_before_map`` argument - this "
"affects the way scalar data is visualized with colors. The effect can of "
"this can vary depending on the dataset's topology and the chosen colormap."
msgstr ""
"``add_mesh`` 関数には ``interpolate_before_map`` 引数があります-"
"これはスカラーデータを色で視覚化する方法に影響します．この効果は，データセットのトポロジと選択したカラーマップによって異なります．"

#: ../../pyvista/docs/examples/02-plot/interpolate-before-map.rst:29
msgid ""
"This example serves to demo the difference and why we've chosen to enable "
"this by default."
msgstr "この例では，この違いと，この機能をデフォルトで有効にした理由を説明します．"

#: ../../pyvista/docs/examples/02-plot/interpolate-before-map.rst:32
msgid ""
"For more details, please see `this blog post <https://blog.kitware.com/what-"
"is-interpolatescalarsbeforemapping-in-vtk/>`_"
msgstr ""
"詳しくは `このブログポスト <https://blog.kitware.com/what-is-"
"interpolatescalarsbeforemapping-in-vtk/>`_ をご覧ください．"

#: ../../pyvista/docs/examples/02-plot/interpolate-before-map.rst:50
msgid ""
"Meshes are colored by the data on their nodes or cells - when coloring a "
"mesh by data on its nodes, the values must be interpolated across the faces "
"of cells. The process by which those scalars are interpolated is critical. "
"If the ``interpolate_before_map`` is left off, the color mapping occurs at "
"polygon points and  colors are interpolated, which is generally less "
"accurate whereas if the ``interpolate_before_map`` is on, then the scalars "
"will be interpolated across the topology of the dataset which is more "
"accurate."
msgstr ""
"メッシュは，ノードまたはセルのデータによって色付けされます．ノードのデータによってメッシュを色付けする場合は，値をセルの面全体に補間する必要があります．これらのスカラーを補間するプロセスは重要です．"
" ``interpolate_before_map`` "
"を省略すると，カラーマッピングはポリゴンポイントで行われ，カラーは補間されますが，一般的には精度が低くなります．一方， "
"``interpolate_before_map`` がオンの場合は，スカラはデータセットのトポロジ全体にわたって補間され，より精度が高くなります．"

#: ../../pyvista/docs/examples/02-plot/interpolate-before-map.rst:58
msgid ""
"To summarize, when ``interpolate_before_map`` is off, the colors are "
"interpolated after rendering and when ``interpolate_before_map`` is on, the "
"scalars are interpolated across the mesh and those values are mapped to "
"colors."
msgstr ""
"To summarize, when ``interpolate_before_map`` is off, the colors are "
"interpolated after rendering and when ``interpolate_before_map`` is on, the "
"scalars are interpolated across the mesh and those values are mapped to "
"colors."

#: ../../pyvista/docs/examples/02-plot/interpolate-before-map.rst:63
msgid "So lets take a look at the difference:"
msgstr "違いを見てみましょう"

#: ../../pyvista/docs/examples/02-plot/interpolate-before-map.rst:112
msgid ""
"Shown in the figure above, when not interpolating the scalars before "
"mapping, the colors (RGB values, not scalars) are interpolated between the "
"vertices by the underlying graphics library (OpenGL), and the colors shown "
"are not accurate."
msgstr ""
"上の図に示すように，マッピング前にスカラーを補間しない場合，基本のグラフィックライブラリ (OpenGL) "
"によって頂点間でカラー(スカラーではなくRGB値)が補間され，表示されるカラーは正確ではありません．"

#: ../../pyvista/docs/examples/02-plot/interpolate-before-map.rst:117
msgid "The same interpolation effect occurs for wireframe visualization too:"
msgstr "ワイヤフレームの表示でも，同じ補間効果が得られます．"

#: ../../pyvista/docs/examples/02-plot/interpolate-before-map.rst:164
msgid ""
"The cylinder mesh above is a great example dataset for this as it has a wide"
" spread between the vertices (points are only at the top and bottom of the "
"cylinder) which means high surface are of the mesh has to be interpolated."
msgstr ""
"上のcyliderメッシュは，頂点間に広いスプレッドがあり(点は円柱の上部と下部のみにあります)，メッシュの高いサーフェスを補間する必要があるため，これに関する優れたサンプルデータセットです．"

#: ../../pyvista/docs/examples/02-plot/interpolate-before-map.rst:168
msgid ""
"However, most meshes don't have such a wide spread and the effects of color "
"interpolating are harder to notice. Let's take a look at a wavelet example "
"and try to figure out how the ``interpolate_before_map`` option affects its "
"rendering."
msgstr ""
"ただし，ほとんどのメッシュではそのような広がりはなく，カラー補間の効果を確認するのは困難です．waveletの例を見て， "
"``interpolate_before_map`` オプションがレンダリングにどのように影響するかを調べてみましょう．"

#: ../../pyvista/docs/examples/02-plot/interpolate-before-map.rst:217
msgid ""
"This time is pretty difficult to notice the differences - they are there, "
"subtle, but present. The differences become more apparent when we decrease "
"the number of colors in colormap. Let's take a look at the differences when "
"using eight discrete colors via the ``n_colors`` argument:"
msgstr ""
"今回は違いに気付くのがかなり難しいです-違いはそこにあり，微妙ですが，存在しています．カラーマップ内の色の数を減らすと，違いがより顕著になります． "
"``n_colors`` 引数によって8つの個別の色を使用する場合の違いを見てみましょう．"

#: ../../pyvista/docs/examples/02-plot/interpolate-before-map.rst:265
msgid ""
"Left, ``interpolate_before_map`` OFF.  Right, ``interpolate_before_map`` ON."
msgstr "左 ``interpolate_before_map`` OFF．右, ``interpolate_before_map``  ON．"

#: ../../pyvista/docs/examples/02-plot/interpolate-before-map.rst:267
msgid ""
"Now that is much more compelling! On the right, the contours of the scalar "
"field are visible, but on the left, the contours are obscured due to the "
"color interpolation by OpenGL. In both cases, the colors at the vertices are"
" the same, the difference is how color is assigned between the vertices."
msgstr ""
"これで，さらに説得力が増しました．右側ではスカラーフィールドの輪郭が表示されていますが，左側ではOpenGLによるカラー補間のために輪郭が不明瞭になっています．どちらの場合も頂点のカラーは同じで，頂点間のカラーの割り当て方法が異なります．"

#: ../../pyvista/docs/examples/02-plot/interpolate-before-map.rst:272
msgid ""
"In our opinion, color interpolation is not a preferred default for "
"scientific visualization and is why we have chosen to set the "
"``interpolate_before_map`` flag to ``True``."
msgstr ""
"私たちの意見では，色補間は科学的可視化のための好ましいデフォルトではなく， ``interpolate_before_map`` フラグを "
"``True`` に設定することを選んだ理由です．"

#: ../../pyvista/docs/examples/02-plot/interpolate-before-map.rst:279
msgid "**Total running time of the script:** ( 0 minutes  3.611 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  3.611 seconds)"

#: ../../pyvista/docs/examples/02-plot/interpolate-before-map.rst:294
msgid ""
":download:`Download Python source code: interpolate-before-map.py "
"<interpolate-before-map.py>`"
msgstr ""
":download:`Download Python source code: interpolate-before-map.py "
"<interpolate-before-map.py>`"

#: ../../pyvista/docs/examples/02-plot/interpolate-before-map.rst:300
msgid ""
":download:`Download Jupyter notebook: interpolate-before-map.ipynb "
"<interpolate-before-map.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: interpolate-before-map.ipynb "
"<interpolate-before-map.ipynb>`"

#: ../../pyvista/docs/examples/02-plot/isovalue.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_isovalue.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_isovalue.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/02-plot/isovalue.rst:22
msgid "Moving Isovalue"
msgstr "等値移動"

#: ../../pyvista/docs/examples/02-plot/isovalue.rst:24
msgid "Make an animation of an isovalue through a volumetric dataset"
msgstr "ボリュームデータセットを使用して等値のアニメーションを作成する"

#: ../../pyvista/docs/examples/02-plot/isovalue.rst:42
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>UniformGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>6998400</td></tr>\n"
"<tr><td>N Points</td><td>7109137</td></tr>\n"
"<tr><td>X Bounds</td><td>0.000e+00, 1.800e+02</td></tr>\n"
"<tr><td>Y Bounds</td><td>0.000e+00, 2.160e+02</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 1.800e+02</td></tr>\n"
"<tr><td>Dimensions</td><td>181, 217, 181</td></tr>\n"
"<tr><td>Spacing</td><td>1.000e+00, 1.000e+00, 1.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>image_data</b></td><td>Points</td><td>uint8</td><td>1</td><td>0.000e+00</td><td>2.550e+02</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>UniformGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>6998400</td></tr>\n"
"<tr><td>N Points</td><td>7109137</td></tr>\n"
"<tr><td>X Bounds</td><td>0.000e+00, 1.800e+02</td></tr>\n"
"<tr><td>Y Bounds</td><td>0.000e+00, 2.160e+02</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 1.800e+02</td></tr>\n"
"<tr><td>Dimensions</td><td>181, 217, 181</td></tr>\n"
"<tr><td>Spacing</td><td>1.000e+00, 1.000e+00, 1.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>image_data</b></td><td>Points</td><td>uint8</td><td>1</td><td>0.000e+00</td><td>2.550e+02</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/docs/examples/02-plot/isovalue.rst:71
msgid ""
"Now lets make an array of all of the isovalues for which we want to show."
msgstr "次に，表示するすべての等値の配列を作成します．"

#: ../../pyvista/docs/examples/02-plot/isovalue.rst:88
msgid "Now let's create an initial isosurface that we can plot and move"
msgstr "次に，プロットして移動できる最初の等値面を作成します．"

#: ../../pyvista/docs/examples/02-plot/isovalue.rst:105
msgid "Precompute the surfaces"
msgstr "サーフェスを事前計算します"

#: ../../pyvista/docs/examples/02-plot/isovalue.rst:122
msgid "Set a single surface as the one being plotted that can be overwritten"
msgstr "1つのサーフェスを上書き可能な印刷対象として設定する"

#: ../../pyvista/docs/examples/02-plot/isovalue.rst:196
msgid "**Total running time of the script:** ( 0 minutes  33.233 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  33.233 seconds)"

#: ../../pyvista/docs/examples/02-plot/isovalue.rst:211
msgid ":download:`Download Python source code: isovalue.py <isovalue.py>`"
msgstr ":download:`Download Python source code: isovalue.py <isovalue.py>`"

#: ../../pyvista/docs/examples/02-plot/isovalue.rst:217
msgid ":download:`Download Jupyter notebook: isovalue.ipynb <isovalue.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: isovalue.ipynb <isovalue.ipynb>`"

#: ../../pyvista/docs/examples/02-plot/labels.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_labels.py>` to download"
" the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_labels.py>` to download"
" the full example code"

#: ../../pyvista/docs/examples/02-plot/labels.rst:22
msgid "Label Points"
msgstr "ラベルポイント"

#: ../../pyvista/docs/examples/02-plot/labels.rst:24
msgid "Use string arrays in a point set to label points"
msgstr "ポイントセットで文字列配列を使用してポイントにラベルを付ける"

#: ../../pyvista/docs/examples/02-plot/labels.rst:45
msgid "Label String Array"
msgstr "ラベル文字列配列"

#: ../../pyvista/docs/examples/02-plot/labels.rst:47
msgid ""
"This example will label the nodes of a mesh with a given array of string "
"labels for each of the nodes."
msgstr "この例では，各ノードの文字列ラベルの配列を使用して，メッシュのノードにラベルを付けます．"

#: ../../pyvista/docs/examples/02-plot/labels.rst:67
msgid ""
"Add string labels to the point data - this associates a label with every "
"node:"
msgstr "文字列ラベルをポイントデータに追加します．これにより，各ノードにラベルが関連付けられます．"

#: ../../pyvista/docs/examples/02-plot/labels.rst:83
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>10</td></tr>\n"
"<tr><td>N Points</td><td>10</td></tr>\n"
"<tr><td>X Bounds</td><td>1.105e-01, 9.761e-01</td></tr>\n"
"<tr><td>Y Bounds</td><td>3.106e-02, 9.056e-01</td></tr>\n"
"<tr><td>Z Bounds</td><td>1.265e-01, 9.906e-01</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>My Labels</b></td><td>Points</td><td><U7</td><td>1</td><td>nan</td><td>nan</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>10</td></tr>\n"
"<tr><td>N Points</td><td>10</td></tr>\n"
"<tr><td>X Bounds</td><td>1.105e-01, 9.761e-01</td></tr>\n"
"<tr><td>Y Bounds</td><td>3.106e-02, 9.056e-01</td></tr>\n"
"<tr><td>Z Bounds</td><td>1.265e-01, 9.906e-01</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>My Labels</b></td><td>Points</td><td><U7</td><td>1</td><td>nan</td><td>nan</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/docs/examples/02-plot/labels.rst:110
msgid "Now plot the points with labels:"
msgstr "次に，点をラベル付きでプロットします:"

#: ../../pyvista/docs/examples/02-plot/labels.rst:146
msgid "Label Node Locations"
msgstr "ラベルノードの位置"

#: ../../pyvista/docs/examples/02-plot/labels.rst:148
msgid ""
"This example will label the nodes of a mesh with their coordinate locations"
msgstr "この例では，メッシュの節点に座標位置のラベルを付けます．"

#: ../../pyvista/docs/examples/02-plot/labels.rst:168
msgid "Create plotting class and add the unstructured grid"
msgstr "プロッティングクラスを作成し，非構造化グリッドを追加します"

#: ../../pyvista/docs/examples/02-plot/labels.rst:216
msgid "Label Scalar Values"
msgstr "ラベルスカラー値"

#: ../../pyvista/docs/examples/02-plot/labels.rst:218
msgid "This example will label each point with their scalar values"
msgstr "この例では，各ポイントにスカラー値のラベルを付けます．"

#: ../../pyvista/docs/examples/02-plot/labels.rst:273
msgid "**Total running time of the script:** ( 0 minutes  1.844 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.844 seconds)"

#: ../../pyvista/docs/examples/02-plot/labels.rst:288
msgid ":download:`Download Python source code: labels.py <labels.py>`"
msgstr ":download:`Download Python source code: labels.py <labels.py>`"

#: ../../pyvista/docs/examples/02-plot/labels.rst:294
msgid ":download:`Download Jupyter notebook: labels.ipynb <labels.ipynb>`"
msgstr ":download:`Download Jupyter notebook: labels.ipynb <labels.ipynb>`"

#: ../../pyvista/docs/examples/02-plot/lighting_mesh.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_lighting_mesh.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_lighting_mesh.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/02-plot/lighting_mesh.rst:24
msgid "Lighting Properties"
msgstr "照明プロパティ"

#: ../../pyvista/docs/examples/02-plot/lighting_mesh.rst:26
msgid ""
"Control aspects of the rendered mesh's lighting such as Ambient, Diffuse, "
"and Specular. These options only work if the ``lighting`` argument to "
"``add_mesh`` is ``True`` (it's ``True`` by default)."
msgstr ""
"周囲光 ，拡散反射光 ， 鏡面反射光など，レンダリングされたメッシュのライティングを制御します．これらのオプションは， ``add_mesh`` への "
"``lighting`` 引数が ``True``  (デフォルトでは ``True`` です．)の場合にのみ動作します．"

#: ../../pyvista/docs/examples/02-plot/lighting_mesh.rst:30
msgid ""
"You can turn off all lighting for the given mesh by passing "
"``lighting=False`` to ``add_mesh``."
msgstr "``lighting=False`` を ``add_mesh`` に渡すと，指定したメッシュのすべてのライティングをオフにできます．"

#: ../../pyvista/docs/examples/02-plot/lighting_mesh.rst:56
msgid "First, lets take a look at the mesh with default lighting conditions"
msgstr "まず，デフォルトのライティング条件を持つメッシュを見てみましょう．"

#: ../../pyvista/docs/examples/02-plot/lighting_mesh.rst:87
msgid "What about with no lighting"
msgstr "照明なしではどうですか"

#: ../../pyvista/docs/examples/02-plot/lighting_mesh.rst:118
msgid "Demonstration of the specular property"
msgstr "鏡面特性の実証"

#: ../../pyvista/docs/examples/02-plot/lighting_mesh.rst:162
msgid "Just specular"
msgstr "鏡面反射のみ"

#: ../../pyvista/docs/examples/02-plot/lighting_mesh.rst:193
msgid "Specular power"
msgstr "スペキュラパワー"

#: ../../pyvista/docs/examples/02-plot/lighting_mesh.rst:225
msgid "Demonstration of all three in use"
msgstr "3機種の使用実績"

#: ../../pyvista/docs/examples/02-plot/lighting_mesh.rst:257
msgid ""
"For detailed control over lighting conditions in general see the "
":ref:`ref_light_examples` examples."
msgstr "一般的なライティング条件の詳細については， :ref:`ref_light_examples` の例を参照してください．"

#: ../../pyvista/docs/examples/02-plot/lighting_mesh.rst:263
msgid "**Total running time of the script:** ( 0 minutes  6.417 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  6.417 seconds)"

#: ../../pyvista/docs/examples/02-plot/lighting_mesh.rst:278
msgid ""
":download:`Download Python source code: lighting_mesh.py <lighting_mesh.py>`"
msgstr ""
":download:`Download Python source code: lighting_mesh.py <lighting_mesh.py>`"

#: ../../pyvista/docs/examples/02-plot/lighting_mesh.rst:284
msgid ""
":download:`Download Jupyter notebook: lighting_mesh.ipynb "
"<lighting_mesh.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: lighting_mesh.ipynb "
"<lighting_mesh.ipynb>`"

#: ../../pyvista/docs/examples/02-plot/linked.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_linked.py>` to download"
" the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_linked.py>` to download"
" the full example code"

#: ../../pyvista/docs/examples/02-plot/linked.rst:22
msgid "Linked Views in Subplots"
msgstr "サブプロットのリンクビュー"

#: ../../pyvista/docs/examples/02-plot/linked.rst:82
msgid "**Total running time of the script:** ( 0 minutes  5.969 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  5.969 seconds)"

#: ../../pyvista/docs/examples/02-plot/linked.rst:97
msgid ":download:`Download Python source code: linked.py <linked.py>`"
msgstr ":download:`Download Python source code: linked.py <linked.py>`"

#: ../../pyvista/docs/examples/02-plot/linked.rst:103
msgid ":download:`Download Jupyter notebook: linked.ipynb <linked.ipynb>`"
msgstr ":download:`Download Jupyter notebook: linked.ipynb <linked.ipynb>`"

#: ../../pyvista/docs/examples/02-plot/movie.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_movie.py>` to download "
"the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_movie.py>` to download "
"the full example code"

#: ../../pyvista/docs/examples/02-plot/movie.rst:22
msgid "Create a MP4 Movie"
msgstr "MP 4ムービーを作成する"

#: ../../pyvista/docs/examples/02-plot/movie.rst:24
msgid "Create an animated MP4 movie of a rendering scene."
msgstr "レンダリングシーンのアニメーションMP 4ムービーを作成する．"

#: ../../pyvista/docs/examples/02-plot/movie.rst:27
msgid ""
"This movie will appear static since MP4 movies will not be rendered on a "
"sphinx gallery example."
msgstr "MP4ムービーはsphinxギャラリーの例ではレンダリングされないため，このムービーは静的に表示されます．"

#: ../../pyvista/docs/examples/02-plot/movie.rst:83
msgid "**Total running time of the script:** ( 0 minutes  27.051 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  27.051 seconds)"

#: ../../pyvista/docs/examples/02-plot/movie.rst:98
msgid ":download:`Download Python source code: movie.py <movie.py>`"
msgstr ":download:`Download Python source code: movie.py <movie.py>`"

#: ../../pyvista/docs/examples/02-plot/movie.rst:104
msgid ":download:`Download Jupyter notebook: movie.ipynb <movie.ipynb>`"
msgstr ":download:`Download Jupyter notebook: movie.ipynb <movie.ipynb>`"

#: ../../pyvista/docs/examples/02-plot/multi-window.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_multi-window.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_multi-window.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/02-plot/multi-window.rst:22
msgid "Multi-Window Plot"
msgstr "マルチウィンドウプロット"

#: ../../pyvista/docs/examples/02-plot/multi-window.rst:25
msgid "Subplotting: having multiple scenes in a single window"
msgstr "サブプロット:1つのウィンドウに複数のシーンを表示"

#: ../../pyvista/docs/examples/02-plot/multi-window.rst:44
msgid ""
"This example shows how to create a multi-window plotter by specifying the "
"``shape`` parameter.  The window generated is a two by two window by setting"
" ``shape=(2, 2)``. Use the :func:`pyvista.BasePlotter.subplot` function to "
"select the subplot you wish to be the active subplot."
msgstr ""
"この例では， ``shape`` パラメータを指定してマルチウィンドウプロッタを作成する方法を示します． ``shape=(2, 2)`` "
"を設定すると，生成されるウィンドウは2×2ウィンドウになります．アクティブなサブプロットにするサブプロットを選択するには， "
":func:`pyvista.BasePlotter.subplot` 関数を使用します．"

#: ../../pyvista/docs/examples/02-plot/multi-window.rst:145
msgid ""
"Split the rendering window in half and subdivide it in a nr. of vertical or "
"horizontal subplots."
msgstr "レンダリングウィンドウを半分に分割し，垂直サブプロットまたは水平サブプロットに分割します．"

#: ../../pyvista/docs/examples/02-plot/multi-window.rst:205
msgid ""
"To get full flexibility over the layout grid, you can define the relative "
"weighting of rows and columns and register groups that can span over "
"multiple rows and columns. A group is defined through a tuple "
"``(rows,cols)`` of row and column indices or slices. The group always spans "
"from the smallest to the largest (row or column) id that is passed through "
"the list or slice."
msgstr ""
"レイアウトグリッド上で完全な柔軟性を得るには，行と列の相対的な重み付けを定義し，複数の行と列にまたがるレジスタグループを定義します．グループは，行と列のインデックスかスライスの組"
" ``(行,列)`` を通して定義されます．グループは常に，リストまたはスライスを通過する最小のIDから最大のID (行または列)までの範囲になります．"

#: ../../pyvista/docs/examples/02-plot/multi-window.rst:301
msgid "**Total running time of the script:** ( 0 minutes  4.440 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  4.440 seconds)"

#: ../../pyvista/docs/examples/02-plot/multi-window.rst:316
msgid ""
":download:`Download Python source code: multi-window.py <multi-window.py>`"
msgstr ""
":download:`Download Python source code: multi-window.py <multi-window.py>`"

#: ../../pyvista/docs/examples/02-plot/multi-window.rst:322
msgid ""
":download:`Download Jupyter notebook: multi-window.ipynb <multi-"
"window.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: multi-window.ipynb <multi-"
"window.ipynb>`"

#: ../../pyvista/docs/examples/02-plot/opacity.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_opacity.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_opacity.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/02-plot/opacity.rst:22
msgid "Plot with Opacity"
msgstr "不透明度を指定してプロット"

#: ../../pyvista/docs/examples/02-plot/opacity.rst:24
msgid ""
"Plot a mesh's scalar array with an opacity transfer function or opacity "
"mapping based on a scalar array."
msgstr "不透明度伝達関数またはスカラー配列に基づく不透明度マッピングを使用して，メッシュのスカラー配列をプロットします．"

#: ../../pyvista/docs/examples/02-plot/opacity.rst:50
msgid "Global Value"
msgstr "グローバル値"

#: ../../pyvista/docs/examples/02-plot/opacity.rst:52
msgid ""
"You can also apply a global opacity value to the mesh by passing a single "
"float between 0 and 1 which would enable you to see objects behind the mesh:"
msgstr ""
"また，0から1の範囲で1つのfloat値を渡すことにより，グローバル不透明度値をメッシュに適用し，メッシュの背後にあるオブジェクトを表示することもできます．"

#: ../../pyvista/docs/examples/02-plot/opacity.rst:88
msgid ""
"Note that you can specify ``use_transparency=True`` to convert opacities to "
"transparencies in any of the following examples."
msgstr "次の例では， ``use_transparency=True`` を指定して不透明度を透明度に変換できます．"

#: ../../pyvista/docs/examples/02-plot/opacity.rst:94
msgid "Transfer Functions"
msgstr "転送機能"

#: ../../pyvista/docs/examples/02-plot/opacity.rst:96
msgid ""
"It's possible to apply an opacity mapping to any scalar array plotted. You "
"can specify either a single static value to make the mesh transparent on all"
" cells, or use a transfer function where the scalar array plotted is mapped "
"to the opacity. We have several predefined transfer functions."
msgstr ""
"プロットされた任意のスカラー配列に不透明度マッピングを適用することができます．単一の静的な値を指定してすべてのセルでメッシュを透明にするか，またはプロットされたスカラー配列が不透明度にマップされる伝達関数を使用できます．いくつかの伝達関数があらかじめ定義されています．"

#: ../../pyvista/docs/examples/02-plot/opacity.rst:101
msgid "Opacity transfer functions are:"
msgstr "不透明度転送関数は次のとおりです．"

#: ../../pyvista/docs/examples/02-plot/opacity.rst:103
msgid ""
"``'linear'``: linearly vary (increase) opacity across the plotted scalar "
"range from low to high"
msgstr "``'linear'``: プロットされたスカラー範囲の不透明度を低い値から高い値まで直線的に変化 (増加) させます"

#: ../../pyvista/docs/examples/02-plot/opacity.rst:104
msgid ""
"``'linear_r'``: linearly vary (increase) opacity across the plotted scalar "
"range from high to low"
msgstr "``'linear_r'``: プロットされたスカラー範囲全体の不透明度を高い値から低い値まで直線的に変化 (増加) させる"

#: ../../pyvista/docs/examples/02-plot/opacity.rst:105
msgid ""
"``'geom'``: on a log scale, vary (increase) opacity across the plotted "
"scalar range from low to high"
msgstr "``'geom'``: 対数スケールで，プロットされたスカラー範囲全体の不透明度を低から高まで変化 (増加) させます"

#: ../../pyvista/docs/examples/02-plot/opacity.rst:106
msgid ""
"``'geom_r'``: on a log scale, vary (increase) opacity across the plotted "
"scalar range from high to low"
msgstr "``'geom_r'``: 対数スケールで，プロットされたスカラー範囲全体の不透明度を高から低まで変化 (増加) させます"

#: ../../pyvista/docs/examples/02-plot/opacity.rst:107
msgid ""
"``'sigmoid'``: vary (increase) opacity on a sigmoidal s-curve across the "
"plotted scalar range from low to high"
msgstr "``'sigmoid'``: S字曲線上の不透明度を低い値から高い値までプロットされたスカラー範囲にわたって変化させる (増加させる)"

#: ../../pyvista/docs/examples/02-plot/opacity.rst:108
msgid ""
"``'sigmoid_r'``: vary (increase) opacity on a sigmoidal s-curve across the "
"plotted scalar range from high to low"
msgstr "``'sigmoid_r'``: S字曲線上の不透明度を，プロットされたスカラー範囲の高低で変化 (増加) させる"

#: ../../pyvista/docs/examples/02-plot/opacity.rst:170
msgid ""
"It's also possible to use your own transfer function that will be linearly "
"mapped to the scalar array plotted. For example, we can create an opacity "
"mapping as:"
msgstr ""
"また，プロットされたスカラー配列に線形にマップされる独自の伝達関数を使用することもできます．たとえば，次のように不透明度マッピングを作成できます．"

#: ../../pyvista/docs/examples/02-plot/opacity.rst:189
msgid ""
"When given a minimized opacity mapping like that above, PyVista interpolates"
" it across a range of how many colors are shown when mapping the scalars. If"
" ``scipy`` is available, then a quadratic interpolation is used - otherwise,"
" a simple linear interpolation is used. Curious what that opacity transfer "
"function looks like? You can fetch it:"
msgstr ""
"上記のように最小化された不透明度マッピングが与えられると，PyVistaはスカラーをマッピングするときに表示される色の数の範囲にわたって不透明度マッピングを補間します．"
" ``scipy`` が利用可能なら，二次補間が使用されます-"
"そうでなければ，単純な線形補間が使用されます．不透明度伝達関数がどのようなものか知りたいですか?次のようにして取得できます．"

#: ../../pyvista/docs/examples/02-plot/opacity.rst:223
msgid ""
"That opacity mapping will have an opacity of 0.0 at the minimum scalar "
"range, a value or 0.9 at the middle of the scalar range, and a value of 0.3 "
"at the maximum of the scalar range:"
msgstr "不透明度マッピングの不透明度は，最小スカラー範囲で0.0，値はスカラー範囲の中央で0.9，値はスカラー範囲の最大で0.3になります．"

#: ../../pyvista/docs/examples/02-plot/opacity.rst:257
msgid ""
"Opacity mapping is often useful when plotting DICOM images. For example, "
"download the sample knee DICOM image:"
msgstr ""
"不透明度マッピングは， DICOM画像をプロットするときにしばしば有用である．たとえば，サンプルのknee DICOMイメージをダウンロードします．"

#: ../../pyvista/docs/examples/02-plot/opacity.rst:275
msgid ""
"And here we inspect the DICOM image with a few different opacity mappings:"
msgstr "ここでは，いくつかの異なる不透明度マッピングを使用してDICOM画像を検査します．"

#: ../../pyvista/docs/examples/02-plot/opacity.rst:327
msgid "Opacity by Array"
msgstr "配列による不透明度"

#: ../../pyvista/docs/examples/02-plot/opacity.rst:329
msgid ""
"You can also use a scalar array associated with the mesh to give each cell "
"its own opacity/transparency value derived from a scalar field. For example,"
" an uncertainty array from a modelling result could be used to hide regions "
"of a mesh that are uncertain and highlight regions that are well resolved."
msgstr ""
"メッシュに関連付けられたスカラー配列を使用して，スカラーフィールドから得られた独自の不透明度/透明度値を各セルに与えることもできます．たとえば，モデリング結果の不確実性配列を使用して，不確実性のあるメッシュ領域を非表示にし，適切に解決された領域をハイライト表示することができます．"

#: ../../pyvista/docs/examples/02-plot/opacity.rst:334
msgid ""
"The following is a demonstration of plotting a mesh with colored values and "
"using a second array to control the transparency of the mesh"
msgstr "次に，カラー値を使用してメッシュをプロットし，2番目の配列を使用してメッシュの透明度を制御する例を示します．"

#: ../../pyvista/docs/examples/02-plot/opacity.rst:363
msgid ""
"Make sure to flag ``use_transparency=True`` since we want areas of high "
"variance to have high transparency."
msgstr "分散の大きい領域に高い透明度を持たせたいので，必ず ``use_transparency=True`` にフラグを立ててください．"

#: ../../pyvista/docs/examples/02-plot/opacity.rst:366
msgid ""
"Also, since the opacity array must be between 0 and 1, we normalize the "
"temperature variance array by the maximum value.  That way high variance "
"will be completely transparent."
msgstr ""
"Also, since the opacity array must be between 0 and 1, we normalize the "
"temperature variance array by the maximum value.  That way high variance "
"will be completely transparent."

#: ../../pyvista/docs/examples/02-plot/opacity.rst:415
msgid "**Total running time of the script:** ( 0 minutes  13.791 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  13.791 seconds)"

#: ../../pyvista/docs/examples/02-plot/opacity.rst:430
msgid ":download:`Download Python source code: opacity.py <opacity.py>`"
msgstr ":download:`Download Python source code: opacity.py <opacity.py>`"

#: ../../pyvista/docs/examples/02-plot/opacity.rst:436
msgid ":download:`Download Jupyter notebook: opacity.ipynb <opacity.ipynb>`"
msgstr ":download:`Download Jupyter notebook: opacity.ipynb <opacity.ipynb>`"

#: ../../pyvista/docs/examples/02-plot/orbit.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_orbit.py>` to download "
"the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_orbit.py>` to download "
"the full example code"

#: ../../pyvista/docs/examples/02-plot/orbit.rst:22
msgid "Orbiting"
msgstr "オービット"

#: ../../pyvista/docs/examples/02-plot/orbit.rst:24
msgid "Orbit around a scene."
msgstr "シーンを周回します．"

#: ../../pyvista/docs/examples/02-plot/orbit.rst:26
msgid ""
"NOTE: using ``p.open_movie('orbit.mp4')`` is better than "
"``p.open_gif('orbit.gif')``"
msgstr ""
"NOTE: ``p.open_movie('orbit.mp4')`` を使ったほうが ``p.open_gif('orbit.gif')`` よりいい"

#: ../../pyvista/docs/examples/02-plot/orbit.rst:29
msgid ""
"For orbiting to work you first have to show the scene and leave the plotter "
"open with ``.show(auto_close=False)``."
msgstr ""
"オービットを機能させるには，まずシーンを表示し， ``.show(auto_close=False)`` "
"でプロッタを開いたままにしておく必要があります．"

#: ../../pyvista/docs/examples/02-plot/orbit.rst:141
msgid "**Total running time of the script:** ( 3 minutes  2.108 seconds)"
msgstr "**Total running time of the script:** ( 3 minutes  2.108 seconds)"

#: ../../pyvista/docs/examples/02-plot/orbit.rst:156
msgid ":download:`Download Python source code: orbit.py <orbit.py>`"
msgstr ":download:`Download Python source code: orbit.py <orbit.py>`"

#: ../../pyvista/docs/examples/02-plot/orbit.rst:162
msgid ":download:`Download Jupyter notebook: orbit.ipynb <orbit.ipynb>`"
msgstr ":download:`Download Jupyter notebook: orbit.ipynb <orbit.ipynb>`"

#: ../../pyvista/docs/examples/02-plot/ortho-slices.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_ortho-slices.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_ortho-slices.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/02-plot/ortho-slices.rst:22
msgid "Orthogonal Slices"
msgstr "直交スライス"

#: ../../pyvista/docs/examples/02-plot/ortho-slices.rst:24
msgid "View three orthogonal slices from a mesh."
msgstr "メッシュから3つの直交スライスを表示します．"

#: ../../pyvista/docs/examples/02-plot/ortho-slices.rst:26
msgid ""
"Use the :func:`pyvista.DataSetFilters.slice_orthogonal` filter to create "
"these slices simultaneously."
msgstr ""
"これらのスライスを同時に作成するには， :func:`pyvista.DataSetFilters.slice_orthogonal` "
"フィルタを使用します．"

#: ../../pyvista/docs/examples/02-plot/ortho-slices.rst:57
msgid ""
"Create three slices. Easily control their locations with the ``x``, ``y``, "
"and ``z`` arguments."
msgstr "3つのスライスを作成します． ``x`` ， ``y`` ，および ``z`` の引数を使用して，簡単に位置を制御できます．"

#: ../../pyvista/docs/examples/02-plot/ortho-slices.rst:164
msgid "**Total running time of the script:** ( 0 minutes  5.204 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  5.204 seconds)"

#: ../../pyvista/docs/examples/02-plot/ortho-slices.rst:179
msgid ""
":download:`Download Python source code: ortho-slices.py <ortho-slices.py>`"
msgstr ""
":download:`Download Python source code: ortho-slices.py <ortho-slices.py>`"

#: ../../pyvista/docs/examples/02-plot/ortho-slices.rst:185
msgid ""
":download:`Download Jupyter notebook: ortho-slices.ipynb <ortho-"
"slices.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: ortho-slices.ipynb <ortho-"
"slices.ipynb>`"

#: ../../pyvista/docs/examples/02-plot/pbr.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_pbr.py>` to download "
"the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_pbr.py>` to download "
"the full example code"

#: ../../pyvista/docs/examples/02-plot/pbr.rst:22
msgid "Physically Based Rendering"
msgstr "物理ベースのレンダリング"

#: ../../pyvista/docs/examples/02-plot/pbr.rst:24
msgid ""
"VTK 9 introduced Physically Based Rendering (PBR) and we have exposed that "
"functionality in PyVista. Read the `blog about PBR <https://blog.kitware.com"
"/vtk-pbr/>`_ for more details."
msgstr ""
"VTK9は物理ベースレンダリング(PBR)を導入しており，その機能をPyVistaで公開しています．詳細については `blog about PBR "
"<https://blog.kitware.com/vtk-pbr/>`_ をお読みください．"

#: ../../pyvista/docs/examples/02-plot/pbr.rst:28
msgid ""
"PBR is only supported for :class:`pyvista.PolyData` and can be triggered via"
" the ``pbr`` keyword argument of ``add_mesh``. Also use the ``metallic`` and"
" ``roughness`` arguments for further control."
msgstr ""
"PBRは :class:`pyvista.PolyData` に対してのみサポートされており， ``add_mesh`` の ``pbr`` "
"キーワード引数を介して起動できます．また， ``metallic`` および ``roughness`` 引数を使用してさらに制御できます．"

#: ../../pyvista/docs/examples/02-plot/pbr.rst:32
msgid ""
"Let's show off this functionality by rendering a high quality mesh of a "
"statue as though it were metallic."
msgstr "この機能を，彫像の高品質メッシュを金属のようにレンダリングすることで示しましょう．"

#: ../../pyvista/docs/examples/02-plot/pbr.rst:60
msgid ""
"Let's render the mesh with a base color of \"linen\" to give it a metal "
"looking finish."
msgstr "ベースカラーが \"linen\" のメッシュをレンダリングして，メタルのような仕上がりにしてみましょう．"

#: ../../pyvista/docs/examples/02-plot/pbr.rst:105
msgid "Show the variation of the metallic and roughness parameters."
msgstr "メタリックパラメータと粗さパラメータの変化を表示します．"

#: ../../pyvista/docs/examples/02-plot/pbr.rst:107
msgid ""
"Plot with metallic increasing from left to right and roughness increasing "
"from bottom to top."
msgstr "左から右にメタリックが増加し，下から上に粗さが増加するようにプロットします．"

#: ../../pyvista/docs/examples/02-plot/pbr.rst:153
msgid "Combine custom lighting and physically based rendering."
msgstr "カスタム照明と物理ベースレンダリングを組み合わせます．"

#: ../../pyvista/docs/examples/02-plot/pbr.rst:201
msgid "**Total running time of the script:** ( 0 minutes  48.205 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  48.205 seconds)"

#: ../../pyvista/docs/examples/02-plot/pbr.rst:216
msgid ":download:`Download Python source code: pbr.py <pbr.py>`"
msgstr ":download:`Download Python source code: pbr.py <pbr.py>`"

#: ../../pyvista/docs/examples/02-plot/pbr.rst:222
msgid ":download:`Download Jupyter notebook: pbr.ipynb <pbr.ipynb>`"
msgstr ":download:`Download Jupyter notebook: pbr.ipynb <pbr.ipynb>`"

#: ../../pyvista/docs/examples/02-plot/plot-over-circular-arc.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_plot-over-circular-"
"arc.py>` to download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_plot-over-circular-"
"arc.py>` to download the full example code"

#: ../../pyvista/docs/examples/02-plot/plot-over-circular-arc.rst:22
msgid "Plot Scalars Over a Circular Arc"
msgstr "円形円弧上にスカラーをプロットします"

#: ../../pyvista/docs/examples/02-plot/plot-over-circular-arc.rst:24
msgid "Interpolate the scalars of a dataset over a circular arc."
msgstr "データセットのスカラーを円弧上で補間します．"

#: ../../pyvista/docs/examples/02-plot/plot-over-circular-arc.rst:45
#: ../../pyvista/docs/examples/02-plot/plot-over-line.rst:45
msgid "Volumetric Mesh"
msgstr "ボリュームメッシュ"

#: ../../pyvista/docs/examples/02-plot/plot-over-circular-arc.rst:47
msgid "Add the height scalars to a uniform 3D mesh."
msgstr "高さスカラーを均一な3 Dメッシュに追加します．"

#: ../../pyvista/docs/examples/02-plot/plot-over-circular-arc.rst:99
msgid "Run the filter and produce a line plot."
msgstr "フィルタを実行し，ラインプロットを作成します．"

#: ../../pyvista/docs/examples/02-plot/plot-over-circular-arc.rst:120
msgid "**Total running time of the script:** ( 0 minutes  0.912 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  0.912 seconds)"

#: ../../pyvista/docs/examples/02-plot/plot-over-circular-arc.rst:135
msgid ""
":download:`Download Python source code: plot-over-circular-arc.py <plot-"
"over-circular-arc.py>`"
msgstr ""
":download:`Download Python source code: plot-over-circular-arc.py <plot-"
"over-circular-arc.py>`"

#: ../../pyvista/docs/examples/02-plot/plot-over-circular-arc.rst:141
msgid ""
":download:`Download Jupyter notebook: plot-over-circular-arc.ipynb <plot-"
"over-circular-arc.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plot-over-circular-arc.ipynb <plot-"
"over-circular-arc.ipynb>`"

#: ../../pyvista/docs/examples/02-plot/plot-over-line.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_plot-over-line.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_plot-over-line.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/02-plot/plot-over-line.rst:22
msgid "Plot Over Line"
msgstr "線上のプロット"

#: ../../pyvista/docs/examples/02-plot/plot-over-line.rst:24
msgid "Plot the values of a dataset over a line through that dataset"
msgstr "データセットの値をそのデータセットの行にプロットする"

#: ../../pyvista/docs/examples/02-plot/plot-over-line.rst:47
msgid "First a 3D mesh example to demonstrate"
msgstr "最初に説明する3 Dメッシュの例"

#: ../../pyvista/docs/examples/02-plot/plot-over-line.rst:90
#: ../../pyvista/docs/examples/02-plot/plot-over-line.rst:161
msgid "Run the filter and produce a line plot"
msgstr "フィルタを実行し，ラインプロットを作成する"

#: ../../pyvista/docs/examples/02-plot/plot-over-line.rst:113
msgid "Flat Surface"
msgstr "フラットサーフェス"

#: ../../pyvista/docs/examples/02-plot/plot-over-line.rst:115
msgid "We could also plot the values of a mesh that lies on a flat surface"
msgstr "平面上にあるメッシュの値をプロットすることもできます．"

#: ../../pyvista/docs/examples/02-plot/plot-over-line.rst:189
msgid "**Total running time of the script:** ( 0 minutes  1.814 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.814 seconds)"

#: ../../pyvista/docs/examples/02-plot/plot-over-line.rst:204
msgid ""
":download:`Download Python source code: plot-over-line.py <plot-over-"
"line.py>`"
msgstr ""
":download:`Download Python source code: plot-over-line.py <plot-over-"
"line.py>`"

#: ../../pyvista/docs/examples/02-plot/plot-over-line.rst:210
msgid ""
":download:`Download Jupyter notebook: plot-over-line.ipynb <plot-over-"
"line.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plot-over-line.ipynb <plot-over-"
"line.ipynb>`"

#: ../../pyvista/docs/examples/02-plot/scalar-bars.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_scalar-bars.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_scalar-bars.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/02-plot/scalar-bars.rst:22
msgid "Customize Scalar Bars"
msgstr "スカラバーをカスタマイズ"

#: ../../pyvista/docs/examples/02-plot/scalar-bars.rst:24
msgid ""
"Walk through of all the different capabilities of scalar bars and how a user"
" can customize scalar bars."
msgstr "スカラーバーのさまざまな機能と，ユーザーによるスカラーバーのカスタマイズ方法について説明します．"

#: ../../pyvista/docs/examples/02-plot/scalar-bars.rst:46
msgid ""
"By default, when plotting a dataset with a scalar array, a scalar bar for "
"that array is added. To turn off this behavior, a user could specify "
"``show_scalar_bar=False`` when calling ``.add_mesh()``. Let's start with a "
"sample dataset provide via PyVista to demonstrate the default behavior of "
"scalar bar plotting:"
msgstr ""
"デフォルトでは，スカラー配列を使用してデータセットをプロットすると，その配列のスカラーバーが追加されます．この動作を無効にするには，ユーザが "
"``.add_mesh()`` を呼び出すときに ``show_scalar_bar=False`` "
"を指定します．PyVistaで提供されるサンプルデータセットから始めて，スカラーバープロットのデフォルトの動作を説明しましょう．"

#: ../../pyvista/docs/examples/02-plot/scalar-bars.rst:90
msgid ""
"We could also plot the scene with an interactive scalar bar to move around "
"and place where we like by specifying passing keyword arguments to control "
"the scalar bar via the ``scalar_bar_args`` parameter in "
":func:`pyvista.BasePlotter.add_mesh`. The keyword arguments to control the "
"scalar bar are defined in :func:`pyvista.BasePlotter.add_scalar_bar`."
msgstr ""
":func:`pyvista.BasePlotter.add_mesh` の ``scalar_bar_args`` "
"パラメータを介してスカラバーを制御するキーワード引数を渡すことにより，インタラクティブなスカラバーでシーンをプロットして好きな場所に移動することもできます．スカラバーを制御するキーワード引数は"
" :func:`pyvista.BasePlotter.add_scalar_bar` で定義されます．"

#: ../../pyvista/docs/examples/02-plot/scalar-bars.rst:122
msgid "Or manually define the scalar bar's location:"
msgstr "または，スカラーバーの位置を手動で定義します:"

#: ../../pyvista/docs/examples/02-plot/scalar-bars.rst:159
msgid "The text properties of the scalar bar can also be controlled:"
msgstr "スカラーバーのテキストプロパティも制御できます:"

#: ../../pyvista/docs/examples/02-plot/scalar-bars.rst:205
msgid "Labelling values outside of the scalar range"
msgstr "スカラー範囲外の値のラベル付け"

#: ../../pyvista/docs/examples/02-plot/scalar-bars.rst:241
msgid ""
"Annotate values of interest using a dictionary. The key of the dictionary "
"must be the value to annotate, and the value must be the string label."
msgstr "辞書を使用して目的の値に注釈を付けます．ディクショナリのキーは注釈を付ける値で，値は文字列ラベルである必要があります．"

#: ../../pyvista/docs/examples/02-plot/scalar-bars.rst:282
msgid "**Total running time of the script:** ( 0 minutes  5.407 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  5.407 seconds)"

#: ../../pyvista/docs/examples/02-plot/scalar-bars.rst:297
msgid ""
":download:`Download Python source code: scalar-bars.py <scalar-bars.py>`"
msgstr ""
":download:`Download Python source code: scalar-bars.py <scalar-bars.py>`"

#: ../../pyvista/docs/examples/02-plot/scalar-bars.rst:303
msgid ""
":download:`Download Jupyter notebook: scalar-bars.ipynb <scalar-bars.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: scalar-bars.ipynb <scalar-bars.ipynb>`"

#: ../../pyvista/docs/examples/02-plot/screenshot.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_screenshot.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_screenshot.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/02-plot/screenshot.rst:22
msgid "Saving Screenshots"
msgstr "スクリーンショットを保存する"

#: ../../pyvista/docs/examples/02-plot/screenshot.rst:47
msgid ""
"You can also take a screenshot without creating an interactive plot window "
"using the :class:`pyvista.Plotter`:"
msgstr ""
":class:`pyvista.Plotter` を使用して，インタラクティブなプロットウィンドウを作成せずにスクリーンショットを撮ることもできます．"

#: ../../pyvista/docs/examples/02-plot/screenshot.rst:82
msgid ""
"The ``img`` array can be used to plot the screenshot in ``matplotlib``:"
msgstr "``img`` 配列を使用して，スクリーンショットを ``matplotlib`` にプロットすることができます．"

#: ../../pyvista/docs/examples/02-plot/screenshot.rst:105
msgid "**Total running time of the script:** ( 0 minutes  0.878 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  0.878 seconds)"

#: ../../pyvista/docs/examples/02-plot/screenshot.rst:120
msgid ":download:`Download Python source code: screenshot.py <screenshot.py>`"
msgstr ""
":download:`Download Python source code: screenshot.py <screenshot.py>`"

#: ../../pyvista/docs/examples/02-plot/screenshot.rst:126
msgid ""
":download:`Download Jupyter notebook: screenshot.ipynb <screenshot.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: screenshot.ipynb <screenshot.ipynb>`"

#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:8
msgid "**00:01.715** total execution time for **examples_02-plot** files:"
msgstr "**00:01.715** total execution time for **examples_02-plot** files:"

#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:11
msgid ":ref:`sphx_glr_examples_02-plot_image_depth.py` (``image_depth.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_image_depth.py` (``image_depth.py``)"

#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:11
msgid "00:01.715"
msgstr "00:01.715"

#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:13
msgid ""
":ref:`sphx_glr_examples_02-plot_background_image.py` "
"(``background_image.py``)"
msgstr ""
":ref:`sphx_glr_examples_02-plot_background_image.py` "
"(``background_image.py``)"

#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:15
msgid ":ref:`sphx_glr_examples_02-plot_clear.py` (``clear.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_clear.py` (``clear.py``)"

#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:17
msgid ":ref:`sphx_glr_examples_02-plot_cmap.py` (``cmap.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_cmap.py` (``cmap.py``)"

#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:19
msgid ""
":ref:`sphx_glr_examples_02-plot_depth-peeling.py` (``depth-peeling.py``)"
msgstr ""
":ref:`sphx_glr_examples_02-plot_depth-peeling.py` (``depth-peeling.py``)"

#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:21
msgid ":ref:`sphx_glr_examples_02-plot_edges.py` (``edges.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_edges.py` (``edges.py``)"

#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:23
msgid ":ref:`sphx_glr_examples_02-plot_edl.py` (``edl.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_edl.py` (``edl.py``)"

#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:25
msgid ":ref:`sphx_glr_examples_02-plot_floors.py` (``floors.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_floors.py` (``floors.py``)"

#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:27
msgid ":ref:`sphx_glr_examples_02-plot_ghost-cells.py` (``ghost-cells.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_ghost-cells.py` (``ghost-cells.py``)"

#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:29
msgid ":ref:`sphx_glr_examples_02-plot_gif.py` (``gif.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_gif.py` (``gif.py``)"

#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:31
msgid ""
":ref:`sphx_glr_examples_02-plot_interpolate-before-map.py` (``interpolate-"
"before-map.py``)"
msgstr ""
":ref:`sphx_glr_examples_02-plot_interpolate-before-map.py` (``interpolate-"
"before-map.py``)"

#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:33
msgid ":ref:`sphx_glr_examples_02-plot_isovalue.py` (``isovalue.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_isovalue.py` (``isovalue.py``)"

#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:35
msgid ":ref:`sphx_glr_examples_02-plot_labels.py` (``labels.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_labels.py` (``labels.py``)"

#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:37
msgid ""
":ref:`sphx_glr_examples_02-plot_lighting_mesh.py` (``lighting_mesh.py``)"
msgstr ""
":ref:`sphx_glr_examples_02-plot_lighting_mesh.py` (``lighting_mesh.py``)"

#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:39
msgid ":ref:`sphx_glr_examples_02-plot_linked.py` (``linked.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_linked.py` (``linked.py``)"

#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:41
msgid ":ref:`sphx_glr_examples_02-plot_movie.py` (``movie.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_movie.py` (``movie.py``)"

#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:43
msgid ":ref:`sphx_glr_examples_02-plot_multi-window.py` (``multi-window.py``)"
msgstr ""
":ref:`sphx_glr_examples_02-plot_multi-window.py` (``multi-window.py``)"

#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:45
msgid ":ref:`sphx_glr_examples_02-plot_opacity.py` (``opacity.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_opacity.py` (``opacity.py``)"

#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:47
msgid ":ref:`sphx_glr_examples_02-plot_orbit.py` (``orbit.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_orbit.py` (``orbit.py``)"

#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:49
msgid ":ref:`sphx_glr_examples_02-plot_ortho-slices.py` (``ortho-slices.py``)"
msgstr ""
":ref:`sphx_glr_examples_02-plot_ortho-slices.py` (``ortho-slices.py``)"

#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:51
msgid ":ref:`sphx_glr_examples_02-plot_pbr.py` (``pbr.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_pbr.py` (``pbr.py``)"

#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:53
msgid ""
":ref:`sphx_glr_examples_02-plot_plot-over-circular-arc.py` (``plot-over-"
"circular-arc.py``)"
msgstr ""
":ref:`sphx_glr_examples_02-plot_plot-over-circular-arc.py` (``plot-over-"
"circular-arc.py``)"

#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:55
msgid ""
":ref:`sphx_glr_examples_02-plot_plot-over-line.py` (``plot-over-line.py``)"
msgstr ""
":ref:`sphx_glr_examples_02-plot_plot-over-line.py` (``plot-over-line.py``)"

#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:57
msgid ":ref:`sphx_glr_examples_02-plot_scalar-bars.py` (``scalar-bars.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_scalar-bars.py` (``scalar-bars.py``)"

#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:59
msgid ":ref:`sphx_glr_examples_02-plot_screenshot.py` (``screenshot.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_screenshot.py` (``screenshot.py``)"

#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:61
msgid ":ref:`sphx_glr_examples_02-plot_shading.py` (``shading.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_shading.py` (``shading.py``)"

#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:63
msgid ":ref:`sphx_glr_examples_02-plot_silhouette.py` (``silhouette.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_silhouette.py` (``silhouette.py``)"

#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:65
msgid ":ref:`sphx_glr_examples_02-plot_spherical.py` (``spherical.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_spherical.py` (``spherical.py``)"

#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:67
msgid ":ref:`sphx_glr_examples_02-plot_texture.py` (``texture.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_texture.py` (``texture.py``)"

#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:69
msgid ":ref:`sphx_glr_examples_02-plot_themes.py` (``themes.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_themes.py` (``themes.py``)"

#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:71
msgid ":ref:`sphx_glr_examples_02-plot_topo-map.py` (``topo-map.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_topo-map.py` (``topo-map.py``)"

#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:73
msgid ""
":ref:`sphx_glr_examples_02-plot_vector-component.py` (``vector-"
"component.py``)"
msgstr ""
":ref:`sphx_glr_examples_02-plot_vector-component.py` (``vector-"
"component.py``)"

#: ../../pyvista/docs/examples/02-plot/sg_execution_times.rst:75
msgid ":ref:`sphx_glr_examples_02-plot_volume.py` (``volume.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_volume.py` (``volume.py``)"

#: ../../pyvista/docs/examples/02-plot/shading.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_shading.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_shading.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/02-plot/shading.rst:22
msgid "Types of Shading"
msgstr "シェーディングのタイプ"

#: ../../pyvista/docs/examples/02-plot/shading.rst:24
msgid "Comparison of default, flat shading vs. smooth shading."
msgstr "デフォルトのフラットシェーディングとスムーズシェーディングの比較．"

#: ../../pyvista/docs/examples/02-plot/shading.rst:43
msgid ""
"PyVista supports two types of shading, flat and smooth shading that uses "
"VTK's Phong shading algorithm."
msgstr ""
"PyVistaでは，VTKのPhongシェーディングアルゴリズムを使用したフラットシェーディングとスムーズシェーディングの2種類のシェーディングがサポートされています．"

#: ../../pyvista/docs/examples/02-plot/shading.rst:46
msgid "This is a plot with the default flat shading:"
msgstr "これは，デフォルトのフラットシェーディングを使用したプロットです．"

#: ../../pyvista/docs/examples/02-plot/shading.rst:78
msgid "Here's the same sphere with smooth shading:"
msgstr "次に，スムーズシェーディングを適用した同じ球を示します．"

#: ../../pyvista/docs/examples/02-plot/shading.rst:109
msgid "**Total running time of the script:** ( 0 minutes  1.226 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.226 seconds)"

#: ../../pyvista/docs/examples/02-plot/shading.rst:124
msgid ":download:`Download Python source code: shading.py <shading.py>`"
msgstr ":download:`Download Python source code: shading.py <shading.py>`"

#: ../../pyvista/docs/examples/02-plot/shading.rst:130
msgid ":download:`Download Jupyter notebook: shading.ipynb <shading.ipynb>`"
msgstr ":download:`Download Jupyter notebook: shading.ipynb <shading.ipynb>`"

#: ../../pyvista/docs/examples/02-plot/silhouette.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_silhouette.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_silhouette.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/02-plot/silhouette.rst:22
msgid "Silhouette Highlight"
msgstr "シルエットハイライト"

#: ../../pyvista/docs/examples/02-plot/silhouette.rst:24
msgid ""
"Extract a subset of the edges of a polygonal mesh to generate an outline "
"(silhouette) of a mesh."
msgstr "ポリゴンメッシュのエッジのサブセットを抽出し，メッシュのアウトライン (シルエット) を生成します．"

#: ../../pyvista/docs/examples/02-plot/silhouette.rst:44
msgid "Prepare a triangulated ``PolyData``"
msgstr "三角 ``PolyData`` を作成する"

#: ../../pyvista/docs/examples/02-plot/silhouette.rst:61
msgid "Now we can display the silhouette of the mesh and compare the result:"
msgstr "メッシュのシルエットを表示し，結果を比較できます:"

#: ../../pyvista/docs/examples/02-plot/silhouette.rst:102
msgid ""
"Maybe the default parameters are not enough to really notice the silhouette."
" But by using a ``dict``, it is possible to modify the properties of the "
"outline. For example, color and width could be specified like so:"
msgstr ""
"デフォルトのパラメータでは，シルエットを認識するのに十分でない可能性があります．しかし， ``dict`` "
"を使用することで，アウトラインのプロパティを変更することができます．たとえば，色と幅は次のように指定できます:"

#: ../../pyvista/docs/examples/02-plot/silhouette.rst:143
msgid ""
"By default, PyVista uses a pretty aggressive decimation level but we might "
"want to disable it. It is also possible to display sharp edges:"
msgstr ""
"デフォルトでは，PyVistaはかなりアグレッシブなデシメーションレベルを使用しますが，無効にしたい場合もあります．シャープエッジを表示することもできます:"

#: ../../pyvista/docs/examples/02-plot/silhouette.rst:201
msgid "Here is another example:"
msgstr "次に別の例を示します:"

#: ../../pyvista/docs/examples/02-plot/silhouette.rst:246
msgid "**Total running time of the script:** ( 0 minutes  16.106 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  16.106 seconds)"

#: ../../pyvista/docs/examples/02-plot/silhouette.rst:261
msgid ":download:`Download Python source code: silhouette.py <silhouette.py>`"
msgstr ""
":download:`Download Python source code: silhouette.py <silhouette.py>`"

#: ../../pyvista/docs/examples/02-plot/silhouette.rst:267
msgid ""
":download:`Download Jupyter notebook: silhouette.ipynb <silhouette.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: silhouette.ipynb <silhouette.ipynb>`"

#: ../../pyvista/docs/examples/02-plot/spherical.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_spherical.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_spherical.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/02-plot/spherical.rst:22
msgid "Plot data in spherical coordinates"
msgstr "球座標でデータをプロットする"

#: ../../pyvista/docs/examples/02-plot/spherical.rst:24
msgid ""
"Generate and visualize meshes from data in longitude-latitude coordinates."
msgstr "緯度-経度座標のデータからメッシュを生成および表示します．"

#: ../../pyvista/docs/examples/02-plot/spherical.rst:103
msgid "Create a structured grid"
msgstr "構造化グリッドの作成"

#: ../../pyvista/docs/examples/02-plot/spherical.rst:144
msgid "Visualize vectors in spherical coordinates Vertical wind"
msgstr "球座標でのベクトルの視覚化垂直風"

#: ../../pyvista/docs/examples/02-plot/spherical.rst:215
msgid "Isurfaces of 3D data in spherical coordinates"
msgstr "球座標の3 Dデータのサーフェス"

#: ../../pyvista/docs/examples/02-plot/spherical.rst:275
msgid "**Total running time of the script:** ( 0 minutes  2.044 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  2.044 seconds)"

#: ../../pyvista/docs/examples/02-plot/spherical.rst:290
msgid ":download:`Download Python source code: spherical.py <spherical.py>`"
msgstr ":download:`Download Python source code: spherical.py <spherical.py>`"

#: ../../pyvista/docs/examples/02-plot/spherical.rst:296
msgid ""
":download:`Download Jupyter notebook: spherical.ipynb <spherical.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: spherical.ipynb <spherical.ipynb>`"

#: ../../pyvista/docs/examples/02-plot/texture.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_texture.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_texture.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/02-plot/texture.rst:24
msgid "Applying Textures"
msgstr "テクスチャを適用する"

#: ../../pyvista/docs/examples/02-plot/texture.rst:26
msgid "Plot a mesh with an image projected onto it as a texture."
msgstr "イメージをテクスチャとして投影したメッシュをプロットします．"

#: ../../pyvista/docs/examples/02-plot/texture.rst:47
msgid ""
"Texture mapping is easily implemented using PyVista. Many of the geometric "
"objects come preloaded with texture coordinates, so quickly creating a "
"surface and displaying an image is simply:"
msgstr ""
"テクスチャマッピングは，PyVistaを使用して簡単に実装できます．多くのジオメトリックオブジェクトには，テクスチャ座標があらかじめロードされているため，サーフェスをすばやく作成してイメージを表示するのは，次のように簡単です:"

#: ../../pyvista/docs/examples/02-plot/texture.rst:88
msgid ""
"But what if your dataset doesn't have texture coordinates? Then you can "
"harness the :func:`pyvista.DataSetFilters.texture_map_to_plane` filter to "
"properly map an image to a dataset's surface. For example, let's map that "
"same image of bricks to a curvey surface:"
msgstr ""
"しかし，データセットにテクスチャ座標がない場合はどうでしょうか．その後， "
":func:`pyvista.DataSetFilters.texture_map_to_plane` "
"フィルタを利用して，イメージをデータセットのサーフェスに適切にマッピングできます．たとえば，同じレンガのイメージをカーブサーフェスにマップします．"

#: ../../pyvista/docs/examples/02-plot/texture.rst:134
msgid ""
"Display scalar data along with a texture by ensuring the "
"``interpolate_before_map`` setting is ``False`` and specifying both the "
"``texture`` and ``scalars`` arguments."
msgstr ""
" ``interpolate_before_map`` 設定が ``False`` であることを確認し， ``texture`` 引数と "
"``scalars`` 引数の両方を指定することによって，テクスチャとともにスカラデータを表示します．"

#: ../../pyvista/docs/examples/02-plot/texture.rst:174
msgid "Note that this process can be completed with any image texture!"
msgstr "このプロセスは任意のイメージテクスチャで完了できることに注意してください!"

#: ../../pyvista/docs/examples/02-plot/texture.rst:210
msgid "Textures from Files"
msgstr "ファイルからのテクスチャ"

#: ../../pyvista/docs/examples/02-plot/texture.rst:212
msgid ""
"What about loading your own texture from an image? This is often most easily"
" done using the :func:`pyvista.read_texture` function - simply pass an image"
" file's path, and this function with handle making a ``vtkTexture`` for you "
"to use."
msgstr ""
"イメージから独自のテクスチャをロードするのはどうでしょうか．これは多くの場合， :func:`pyvista.read_texture` "
"関数を使用して最も簡単に行うことができます-単に画像ファイルのパスを渡すだけで，この関数はあなたが使用するために ``vtkTexture`` "
"を作るハンドルを持っています．"

#: ../../pyvista/docs/examples/02-plot/texture.rst:251
msgid "NumPy Arrays as Textures"
msgstr "テクスチャとしてのNumPy配列"

#: ../../pyvista/docs/examples/02-plot/texture.rst:253
msgid ""
"Want to use a programmatically built image? :class:`pyvista.UniformGrid` "
"objects can be converted to textures using :func:`pyvista.image_to_texture` "
"and 3D NumPy (X by Y by RGB) arrays can be converted to textures using "
":func:`pyvista.numpy_to_texture`."
msgstr ""
"プログラムで作成されたイメージを使用したい場合? :class:`pyvista.UniformGrid` オブジェクトは "
":func:`pyvista.image_to_texture` を使用してテクスチャに変換でき，3 D NumPy (X x Y，RGB)配列は "
":func:`pyvista.numpy_to_texture`  を使用してテクスチャに変換できます．"

#: ../../pyvista/docs/examples/02-plot/texture.rst:305
msgid "Textures with Transparency"
msgstr "透明度のあるテクスチャ"

#: ../../pyvista/docs/examples/02-plot/texture.rst:307
msgid ""
"Textures can also specify per-pixel opacity values. The image must contain a"
" 4th channel specifying the opacity value from 0 [transparent] to 255 [fully"
" visible]. To enable this feature just pass the opacity array as the 4th "
"channel of the image as a 3 dimensional matrix with shape [nrows, ncols, 4] "
":func:`pyvista.numpy_to_texture`."
msgstr ""
"テクスチャでは，ピクセル単位の不透明度値も指定できます．画像は0 [透明]から255 "
"[不透明]までの不透明度値を指定する第4チャンネルを含まなければなりません．この機能を有効にするためには，画像の第4チャンネルとして不透明度配列を形[行,例,"
" 4]   :func:`pyvista.numpy_to_texture` の3次元マトリックスとして渡すだけです．"

#: ../../pyvista/docs/examples/02-plot/texture.rst:313
msgid "Here we can download an image that has an alpha channel:"
msgstr "ここでは，アルファチャンネルを含むイメージをダウンロードできます:"

#: ../../pyvista/docs/examples/02-plot/texture.rst:370
msgid "Repeating Textures"
msgstr "テクスチャを繰り返す"

#: ../../pyvista/docs/examples/02-plot/texture.rst:372
msgid ""
"What if you have a single texture that you'd like to repeat across a mesh? "
"Simply define the texture coordinates for all nodes explicitly."
msgstr "単一のテクスチャをメッシュ全体で繰り返したい場合はどうすればよいですか．すべてのノードのテクスチャ座標を明示的に定義するだけです．"

#: ../../pyvista/docs/examples/02-plot/texture.rst:375
msgid ""
"Here we create the texture coordinates to fill up the grid with several "
"mappings of a single texture. In order to do this we must define texture "
"coordinates outside of the typical ``(0, 1)`` range:"
msgstr ""
"ここでは，テクスチャ座標を作成して，1つのテクスチャの複数のマッピングでグリッドを埋めます．これを行うには，一般的な ``(0, 1)`` "
"範囲外のテクスチャ座標を定義する必要があります．"

#: ../../pyvista/docs/examples/02-plot/texture.rst:400
msgid ""
"By defining texture coordinates that range ``(0, 4)`` on each axis, we will "
"produce 4 repetitions of the same texture on this mesh."
msgstr "各軸で ``(0, 4)`` の範囲のテクスチャ座標を定義することにより，このメッシュ上に同じテクスチャの4つの反復を生成します．"

#: ../../pyvista/docs/examples/02-plot/texture.rst:403
msgid ""
"Then we must associate those texture coordinates with the mesh through the "
":attr:`pyvista.DataSet.t_coords` property."
msgstr ""
"次に， :attr:`pyvista.DataSet.t_coords` "
"プロパティを使用して，これらのテクスチャ座標をメッシュに関連付ける必要があります．"

#: ../../pyvista/docs/examples/02-plot/texture.rst:422
msgid "Now display all the puppies!"
msgstr "今子犬を全部展示しています!"

#: ../../pyvista/docs/examples/02-plot/texture.rst:458
msgid "Spherical Texture Coordinates"
msgstr "球状テクスチャ座標"

#: ../../pyvista/docs/examples/02-plot/texture.rst:459
msgid ""
"We have a built in convienance method for mapping textures to spherical "
"coordinate systems much like the planar mapping demoed above."
msgstr "上でデモした平面マッピングのように，テクスチャを球座標系にマッピングするための組み込みの方法があります．"

#: ../../pyvista/docs/examples/02-plot/texture.rst:497
msgid ""
"The helper method above does not always produce the desired texture "
"coordinates, so sometimes it must be done manually. Here is a great, user "
"contributed example from `this support issue <https://github.com/pyvista"
"/pyvista-support/issues/257>`_"
msgstr ""
"上記のヘルパーメソッドは，必ずしも目的のテクスチャ座標を生成するわけではないため，手動で行う必要がある場合があります．これは `このサポートイシュー "
"<https://github.com/pyvista/pyvista-support/issues/257>`_ からの素晴らしいユーザ投稿の例です．"

#: ../../pyvista/docs/examples/02-plot/texture.rst:501
msgid ""
"Manually create the texture coordinates for a globe map. First, we create "
"the mesh that will be used as the globe. Note the `start_theta` for a slight"
" overlappig"
msgstr ""
"地球マップのテクスチャ座標を手動で作成します．まず，地球として使用するメッシュを作成します． `start_theta` "
"に若干の重複があることに注意してください．"

#: ../../pyvista/docs/examples/02-plot/texture.rst:551
msgid "**Total running time of the script:** ( 0 minutes  13.963 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  13.963 seconds)"

#: ../../pyvista/docs/examples/02-plot/texture.rst:566
msgid ":download:`Download Python source code: texture.py <texture.py>`"
msgstr ":download:`Download Python source code: texture.py <texture.py>`"

#: ../../pyvista/docs/examples/02-plot/texture.rst:572
msgid ":download:`Download Jupyter notebook: texture.ipynb <texture.ipynb>`"
msgstr ":download:`Download Jupyter notebook: texture.ipynb <texture.ipynb>`"

#: ../../pyvista/docs/examples/02-plot/themes.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_themes.py>` to download"
" the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_themes.py>` to download"
" the full example code"

#: ../../pyvista/docs/examples/02-plot/themes.rst:22
msgid "Change the Theme"
msgstr "テーマの変更"

#: ../../pyvista/docs/examples/02-plot/themes.rst:24
msgid "PyVista has a few coloring themes for you to choose!"
msgstr "PyVistaには選べるカラーテーマがいくつかあります!"

#: ../../pyvista/docs/examples/02-plot/themes.rst:42
msgid "Define a simple plotting routine for comparing the themes"
msgstr "主題を比較するための単純なプロットルーチンを定義する"

#: ../../pyvista/docs/examples/02-plot/themes.rst:68
msgid ""
"PyVista's default color theme is chosen to be generally easy on your eyes "
"and is best used when working long hours on your visualization project. The "
"grey background and warm colormaps are chosen to make sure 3D renderings do "
"not drastically change the brightness of your screen when working in dark "
"environments."
msgstr ""
"PyVistaのデフォルトのカラーテーマは，一般的に見やすいように選択されており，視覚化プロジェクトで長時間作業する場合に最適です．グレーの背景と暖色のカラーマップは，暗い環境で作業しているときに3"
" Dレンダリングによって画面の明るさが大幅に変化しないように選択されています．"

#: ../../pyvista/docs/examples/02-plot/themes.rst:74
msgid ""
"Here's an example of our default plotting theme - this is what you would see"
" by default after running any of our examples."
msgstr "デフォルトのプロットテーマの例を次に示します． - これは，サンプルを実行した後にデフォルトで表示されるテーマです．"

#: ../../pyvista/docs/examples/02-plot/themes.rst:109
msgid "PyVista also ships with a few plotting themes:"
msgstr "PyVistaにはいくつかのプロットテーマも付属しています．"

#: ../../pyvista/docs/examples/02-plot/themes.rst:111
msgid ""
"``'ParaView'``: this is designed to mimic ParaView's default plotting theme"
msgstr "``'ParaView'``: これは，ParaViewの既定のプロットテーマを模倣するように設計されています"

#: ../../pyvista/docs/examples/02-plot/themes.rst:112
msgid ""
"``'night'``: this is designed to be night-mode friendly with dark "
"backgrounds and color schemes"
msgstr "``'night'``: 暗い背景とカラースキームを使用して，夜間モードに適した設計になっています．"

#: ../../pyvista/docs/examples/02-plot/themes.rst:113
msgid ""
"``'document'``: this is built for use in document style plotting and making "
"publication quality figures"
msgstr "``'document'``: これは，文書スタイルのプロットおよび文書品質図の作成に使用するために作成されています．"

#: ../../pyvista/docs/examples/02-plot/themes.rst:117
msgid "Demo the ``'ParaView'`` theme"
msgstr "``'ParaView'`` テーマのデモ"

#: ../../pyvista/docs/examples/02-plot/themes.rst:152
msgid "Demo the ``'night'`` theme"
msgstr "``'night'`` テーマのデモ"

#: ../../pyvista/docs/examples/02-plot/themes.rst:186
msgid "Demo the ``'document'`` theme"
msgstr "``'document'`` テーマのデモ"

#: ../../pyvista/docs/examples/02-plot/themes.rst:221
msgid ""
"Note that you can also use color gradients for the background of the "
"plotting window!"
msgstr "プロットウィンドウの背景には，カラーグラデーションを使用することもできます．"

#: ../../pyvista/docs/examples/02-plot/themes.rst:258
msgid "**Total running time of the script:** ( 0 minutes  3.018 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  3.018 seconds)"

#: ../../pyvista/docs/examples/02-plot/themes.rst:273
msgid ":download:`Download Python source code: themes.py <themes.py>`"
msgstr ":download:`Download Python source code: themes.py <themes.py>`"

#: ../../pyvista/docs/examples/02-plot/themes.rst:279
msgid ":download:`Download Jupyter notebook: themes.ipynb <themes.ipynb>`"
msgstr ":download:`Download Jupyter notebook: themes.ipynb <themes.ipynb>`"

#: ../../pyvista/docs/examples/02-plot/topo-map.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_topo-map.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_topo-map.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/02-plot/topo-map.rst:22
msgid "Topographic Map"
msgstr "地形図"

#: ../../pyvista/docs/examples/02-plot/topo-map.rst:24
msgid ""
"This is very similar to the :ref:`ref_texture_example` example except it is "
"focused on plotting aerial imagery from a GeoTIFF on top of some topography "
"mesh."
msgstr ""
"これは :ref:`ref_texture_example` "
"の例と非常に似ていますが，地形メッシュの上にGeoTIFFからの航空画像をプロットすることに焦点を当てています．"

#: ../../pyvista/docs/examples/02-plot/topo-map.rst:49
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>StructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>1677401</td></tr>\n"
"<tr><td>N Points</td><td>1680000</td></tr>\n"
"<tr><td>X Bounds</td><td>1.810e+06, 1.831e+06</td></tr>\n"
"<tr><td>Y Bounds</td><td>5.640e+06, 5.658e+06</td></tr>\n"
"<tr><td>Z Bounds</td><td>7.339e+02, 2.787e+03</td></tr>\n"
"<tr><td>Dimensions</td><td>1400, 1200, 1</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>scalar1of1</b></td><td>Points</td><td>float64</td><td>1</td><td>7.339e+02</td><td>2.787e+03</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>StructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>1677401</td></tr>\n"
"<tr><td>N Points</td><td>1680000</td></tr>\n"
"<tr><td>X Bounds</td><td>1.810e+06, 1.831e+06</td></tr>\n"
"<tr><td>Y Bounds</td><td>5.640e+06, 5.658e+06</td></tr>\n"
"<tr><td>Z Bounds</td><td>7.339e+02, 2.787e+03</td></tr>\n"
"<tr><td>Dimensions</td><td>1400, 1200, 1</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>scalar1of1</b></td><td>Points</td><td>float64</td><td>1</td><td>7.339e+02</td><td>2.787e+03</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/docs/examples/02-plot/topo-map.rst:77
msgid "Let's inspect the imagery that we just loaded"
msgstr "ロードしたばかりの画像を"

#: ../../pyvista/docs/examples/02-plot/topo-map.rst:110
msgid ""
"Once you have a topography mesh loaded as a surface mesh (we use a "
":class:`pyvista.StructuredGrid` here) and an image loaded as a "
":class:`pyvista.Texture` object using the :func:`pyvista.read_texture` "
"method, then you can map that imagery to the surface mesh as follows:"
msgstr ""
"サーフェスメッシュ(ここでは :class:`pyvista.StructuredGrid` を使います)として地形メッシュをロードし， "
":func:`pyvista.read_texture` メソッドを使用して:class:`pyvista.Texture` "
"オブジェクトとしてイメージをロードしたら，次のようにイメージをサーフェスメッシュにマッピングできます．"

#: ../../pyvista/docs/examples/02-plot/topo-map.rst:136
msgid "Now display it! Note that the imagery is aligned as we expect."
msgstr "表示します!イメージが予想どおりに調整されていることに注意してください．"

#: ../../pyvista/docs/examples/02-plot/topo-map.rst:167
msgid "And here is a 3D perspective!"
msgstr "これが3 D遠近法です!"

#: ../../pyvista/docs/examples/02-plot/topo-map.rst:198
msgid ""
"We could also display the entire region by extracting the surrounding region"
" and plotting the texture mapped local topography and the outside area"
msgstr "また，周辺領域を抽出し，テクスチャマッピングされた局所的な地形と外部領域をプロットすることによって，領域全体を表示することもできます．"

#: ../../pyvista/docs/examples/02-plot/topo-map.rst:242
msgid "**Total running time of the script:** ( 0 minutes  19.999 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  19.999 seconds)"

#: ../../pyvista/docs/examples/02-plot/topo-map.rst:257
msgid ":download:`Download Python source code: topo-map.py <topo-map.py>`"
msgstr ":download:`Download Python source code: topo-map.py <topo-map.py>`"

#: ../../pyvista/docs/examples/02-plot/topo-map.rst:263
msgid ":download:`Download Jupyter notebook: topo-map.ipynb <topo-map.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: topo-map.ipynb <topo-map.ipynb>`"

#: ../../pyvista/docs/examples/02-plot/vector-component.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_vector-component.py>` "
"to download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_vector-component.py>` "
"to download the full example code"

#: ../../pyvista/docs/examples/02-plot/vector-component.rst:22
msgid "Plot Vector Component"
msgstr "プロットベクトルコンポーネント"

#: ../../pyvista/docs/examples/02-plot/vector-component.rst:24
msgid "Plot a single component of a vector as a scalar array."
msgstr "ベクトルの単一コンポーネントをスカラー配列としてプロットします．"

#: ../../pyvista/docs/examples/02-plot/vector-component.rst:26
msgid ""
"We can plot individual components of multi-component arrays with the "
"``component`` argument  of the ``add_mesh`` method."
msgstr "``add_mesh`` メソッドの ``component`` 引数を用いて多成分アレイの個々の成分をプロットすることができる．"

#: ../../pyvista/docs/examples/02-plot/vector-component.rst:47
msgid "Download an example notched beam stress"
msgstr "ノッチ付きはり応力の例をダウンロードします"

#: ../../pyvista/docs/examples/02-plot/vector-component.rst:65
msgid ""
"The default behavior with no component specified is to use the vector "
"magnitude. We can access each component by specifying the component "
"argument."
msgstr ""
"コンポーネントが指定されていない場合の既定の動作では，ベクトルの大きさが使用されます．各コンポーネントにアクセスするには，component引数を指定します．"

#: ../../pyvista/docs/examples/02-plot/vector-component.rst:121
msgid "**Total running time of the script:** ( 0 minutes  1.629 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.629 seconds)"

#: ../../pyvista/docs/examples/02-plot/vector-component.rst:136
msgid ""
":download:`Download Python source code: vector-component.py <vector-"
"component.py>`"
msgstr ""
":download:`Download Python source code: vector-component.py <vector-"
"component.py>`"

#: ../../pyvista/docs/examples/02-plot/vector-component.rst:142
msgid ""
":download:`Download Jupyter notebook: vector-component.ipynb <vector-"
"component.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: vector-component.ipynb <vector-"
"component.ipynb>`"

#: ../../pyvista/docs/examples/02-plot/volume.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_volume.py>` to download"
" the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_volume.py>` to download"
" the full example code"

#: ../../pyvista/docs/examples/02-plot/volume.rst:22
msgid "Volume Rendering"
msgstr "ボリュームレンダリング"

#: ../../pyvista/docs/examples/02-plot/volume.rst:24
msgid ""
"Volume render uniform mesh types like :class:`pyvista.UniformGrid` or 3D "
"NumPy arrays."
msgstr ":class:`pyvista.UniformGrid` または3 D NumPy配列のようなボリュームレンダリングの均一メッシュタイプ．"

#: ../../pyvista/docs/examples/02-plot/volume.rst:27
msgid ""
"This also explores how to extract a volume of interest (VOI) from a "
":class:`pyvista.UniformGrid` using the "
":func:`pyvista.UniformGridFilters.extract_subset` filter."
msgstr ""
"これはまた :func:`pyvista.UniformGridFilters.extract_subset` フィルタを使用して "
":class:`pyvista.UniformGrid` から関心領域 (VOI) を抽出する方法を探求する．"

#: ../../pyvista/docs/examples/02-plot/volume.rst:49
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>UniformGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>10225800</td></tr>\n"
"<tr><td>N Points</td><td>10368384</td></tr>\n"
"<tr><td>X Bounds</td><td>0.000e+00, 1.497e+02</td></tr>\n"
"<tr><td>Y Bounds</td><td>0.000e+00, 1.786e+02</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 2.000e+02</td></tr>\n"
"<tr><td>Dimensions</td><td>208, 248, 201</td></tr>\n"
"<tr><td>Spacing</td><td>7.230e-01, 7.230e-01, 1.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>SLCImage</b></td><td>Points</td><td>uint8</td><td>1</td><td>0.000e+00</td><td>1.740e+02</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>UniformGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>10225800</td></tr>\n"
"<tr><td>N Points</td><td>10368384</td></tr>\n"
"<tr><td>X Bounds</td><td>0.000e+00, 1.497e+02</td></tr>\n"
"<tr><td>Y Bounds</td><td>0.000e+00, 1.786e+02</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 2.000e+02</td></tr>\n"
"<tr><td>Dimensions</td><td>208, 248, 201</td></tr>\n"
"<tr><td>Spacing</td><td>7.230e-01, 7.230e-01, 1.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>SLCImage</b></td><td>Points</td><td>uint8</td><td>1</td><td>0.000e+00</td><td>1.740e+02</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/docs/examples/02-plot/volume.rst:79
msgid "Simple Volume Render"
msgstr "シンプルボリュームレンダー"

#: ../../pyvista/docs/examples/02-plot/volume.rst:117
msgid "Opacity Mappings"
msgstr "不透明度マッピング"

#: ../../pyvista/docs/examples/02-plot/volume.rst:119
msgid ""
"Or use the :func:`pyvista.BasePlotter.add_volume` method like below. Note "
"that here we use a non-default opacity mapping to a sigmoid:"
msgstr ""
"または，以下のように :func:`pyvista.BasePlotter.add_volume` "
"メソッドを使用します．ここでは，シグモイドへのデフォルト以外の不透明度マッピングを使用することに注意してください．"

#: ../../pyvista/docs/examples/02-plot/volume.rst:155
msgid "You can also use a custom opacity mapping"
msgstr "カスタム不透明度マッピングを使用することもできます．"

#: ../../pyvista/docs/examples/02-plot/volume.rst:191
msgid ""
"We can also use a shading technique when volume rendering with the ``shade``"
" option"
msgstr "``shade`` オプションを使用してボリュームレンダリングを行う場合は，シェーディングテクニックを使用することもできます．"

#: ../../pyvista/docs/examples/02-plot/volume.rst:232
msgid "Cool Volume Examples"
msgstr "かっこいい体積の例"

#: ../../pyvista/docs/examples/02-plot/volume.rst:234
msgid "Here are a few more cool volume rendering examples"
msgstr "ここでは，クールなボリュームレンダリングの例をいくつか紹介します．"

#: ../../pyvista/docs/examples/02-plot/volume.rst:341
msgid "Extracting a VOI"
msgstr "VOIの抽出"

#: ../../pyvista/docs/examples/02-plot/volume.rst:343
msgid ""
"Use the :func:`pyvista.UniformGridFilters.extract_subset` filter to extract "
"a volume of interest/subset volume to volume render. This is ideal when "
"dealing with particularly large volumes and you want to volume render only a"
" specific region."
msgstr ""
":func:`pyvista.UniformGridFilters.extract_subset` "
"フィルタを使用して，ボリュームレンダリングの対象となるボリューム/サブセットボリュームを抽出します．これは，特に大きなボリュームを処理し，特定の領域のみをボリュームレンダーする場合に理想的です．"

#: ../../pyvista/docs/examples/02-plot/volume.rst:362
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>UniformGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>11003760</td></tr>\n"
"<tr><td>N Points</td><td>11156040</td></tr>\n"
"<tr><td>X Bounds</td><td>4.130e+05, 6.920e+05</td></tr>\n"
"<tr><td>Y Bounds</td><td>3.864e+06, 4.096e+06</td></tr>\n"
"<tr><td>Z Bounds</td><td>-5.479e+04, 5.302e+03</td></tr>\n"
"<tr><td>Dimensions</td><td>280, 233, 171</td></tr>\n"
"<tr><td>Spacing</td><td>1.000e+03, 1.000e+03, 3.535e+02</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>data</b></td><td>Points</td><td>float32</td><td>1</td><td>9.782e-15</td><td>1.000e+02</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>UniformGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>11003760</td></tr>\n"
"<tr><td>N Points</td><td>11156040</td></tr>\n"
"<tr><td>X Bounds</td><td>4.130e+05, 6.920e+05</td></tr>\n"
"<tr><td>Y Bounds</td><td>3.864e+06, 4.096e+06</td></tr>\n"
"<tr><td>Z Bounds</td><td>-5.479e+04, 5.302e+03</td></tr>\n"
"<tr><td>Dimensions</td><td>280, 233, 171</td></tr>\n"
"<tr><td>Spacing</td><td>1.000e+03, 1.000e+03, 3.535e+02</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>data</b></td><td>Points</td><td>float32</td><td>1</td><td>9.782e-15</td><td>1.000e+02</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/docs/examples/02-plot/volume.rst:425
msgid ""
"Woah, that's a big volume! We probably don't want to volume render the whole"
" thing. So let's extract a region of interest under the volcano."
msgstr "わあ，すごいボリュームだ!全体をボリュームレンダリングしたくはないでしょう．火山の下の興味深い地域を抽出してみましょう．"

#: ../../pyvista/docs/examples/02-plot/volume.rst:428
msgid ""
"The region we will extract will be between nodes 175 and 200 on the x-axis, "
"between nodes 105 and 132 on the y-axis, and between nodes 98 and 170 on the"
" z-axis."
msgstr "抽出する領域は，x軸上の節点175と200の間，y軸上の節点105と132の間，およびz軸上の節点98と170の間になります．"

#: ../../pyvista/docs/examples/02-plot/volume.rst:467
msgid "Ah, much better. Let's now volume render that region of interest!"
msgstr "ああ，だいぶよくなりました．次に，その対象領域をボリュームレンダリングします．"

#: ../../pyvista/docs/examples/02-plot/volume.rst:505
msgid "**Total running time of the script:** ( 0 minutes  42.797 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  42.797 seconds)"

#: ../../pyvista/docs/examples/02-plot/volume.rst:520
msgid ":download:`Download Python source code: volume.py <volume.py>`"
msgstr ":download:`Download Python source code: volume.py <volume.py>`"

#: ../../pyvista/docs/examples/02-plot/volume.rst:526
msgid ":download:`Download Jupyter notebook: volume.ipynb <volume.ipynb>`"
msgstr ":download:`Download Jupyter notebook: volume.ipynb <volume.ipynb>`"

#: ../../pyvista/docs/examples/03-widgets/box-widget.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_03-widgets_box-widget.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_03-widgets_box-widget.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/03-widgets/box-widget.rst:22
msgid "Box Widget"
msgstr "ボックスウィジェット"

#: ../../pyvista/docs/examples/03-widgets/box-widget.rst:24
msgid ""
"The box widget can be enabled and disabled by the "
":func:`pyvista.WidgetHelper.add_box_widget` and "
":func:`pyvista.WidgetHelper.clear_box_widgets` methods respectively. When "
"enabling the box widget, you must provide a custom callback function "
"otherwise the box would appear and do nothing - the callback functions are "
"what allow us to leverage the widget to perform a task like "
"clipping/cropping."
msgstr ""
"ボックスウィジェットは， :func:`pyvista.WidgetHelper.add_box_widget` および "
":func:`pyvista.WidgetHelper.clear_box_widgets` "
"メソッドによって，それぞれ有効および無効にすることができます．ボックスウィジェットを有効にする場合は，カスタムコールバック関数を提供する必要があります．そうしないとボックスが表示されて何も実行されません．コールバック関数を使用すると，クリップやクロッピングなどのタスクをウィジェットで実行できます．"

#: ../../pyvista/docs/examples/03-widgets/box-widget.rst:31
msgid ""
"Considering that using a box to clip/crop a mesh is one of the most common "
"use cases, we have included a helper method that will allow you to add a "
"mesh to a scene with a box widget that controls its extent, the "
":func:`pyvista.WidgetHelper.add_mesh_clip_box` method."
msgstr ""
"メッシュをクリップ/クロップするためにボックスを使用することが最も一般的な使用例の1つであることを考慮して，メッシュの範囲を制御するボックスウィジェットを使用してシーンにメッシュを追加できるヘルパーメソッド，"
" :func:`pyvista.WidgetHelper.add_mesh_clip_box` メソッドを含めました．"

#: ../../pyvista/docs/examples/03-widgets/box-widget.rst:88
#: ../../pyvista/docs/examples/03-widgets/plane-widget.rst:70
msgid "After interacting with the scene, the clipped mesh is available as:"
msgstr "シーンを操作すると，クリップされたメッシュは次のように表示されます．"

#: ../../pyvista/docs/examples/03-widgets/box-widget.rst:120
msgid "**Total running time of the script:** ( 0 minutes  10.613 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  10.613 seconds)"

#: ../../pyvista/docs/examples/03-widgets/box-widget.rst:135
msgid ":download:`Download Python source code: box-widget.py <box-widget.py>`"
msgstr ""
":download:`Download Python source code: box-widget.py <box-widget.py>`"

#: ../../pyvista/docs/examples/03-widgets/box-widget.rst:141
msgid ""
":download:`Download Jupyter notebook: box-widget.ipynb <box-widget.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: box-widget.ipynb <box-widget.ipynb>`"

#: ../../pyvista/docs/examples/03-widgets/checkbox-widget.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_03-widgets_checkbox-widget.py>`"
" to download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_03-widgets_checkbox-widget.py>`"
" to download the full example code"

#: ../../pyvista/docs/examples/03-widgets/checkbox-widget.rst:22
msgid "Checkbox Widget"
msgstr "チェックボックスウィジェット"

#: ../../pyvista/docs/examples/03-widgets/checkbox-widget.rst:24
msgid "Use a checkbox to turn on/off the visibility of meshes in a scene."
msgstr "チェックボックスを使用して，シーン内のメッシュの表示/非表示を切り替えます．"

#: ../../pyvista/docs/examples/03-widgets/checkbox-widget.rst:26
msgid ""
"See :func:`pyvista.WidgetHelper.add_checkbox_button_widget` for more "
"details."
msgstr ""
"詳細については， :func:`pyvista.WidgetHelper.add_checkbox_button_widget` を参照してください．"

#: ../../pyvista/docs/examples/03-widgets/checkbox-widget.rst:45
msgid "Single Checkbox"
msgstr "単一チェックボックス"

#: ../../pyvista/docs/examples/03-widgets/checkbox-widget.rst:87
msgid "Multiple Checkboxes"
msgstr "複数のチェックボックス"

#: ../../pyvista/docs/examples/03-widgets/checkbox-widget.rst:89
msgid ""
"In this example, we will add many meshes to a scene with unique colors and "
"create corresponding checkboxes for those meshes of the same color to toggle"
" their visibility in the scene."
msgstr ""
"この例では，一意のカラーを持つ多数のメッシュをシーンに追加し，同じカラーのメッシュに対応するチェックボックスを作成してシーン内での可視性を切り替えます．"

#: ../../pyvista/docs/examples/03-widgets/checkbox-widget.rst:168
msgid "**Total running time of the script:** ( 0 minutes  1.270 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.270 seconds)"

#: ../../pyvista/docs/examples/03-widgets/checkbox-widget.rst:183
msgid ""
":download:`Download Python source code: checkbox-widget.py <checkbox-"
"widget.py>`"
msgstr ""
":download:`Download Python source code: checkbox-widget.py <checkbox-"
"widget.py>`"

#: ../../pyvista/docs/examples/03-widgets/checkbox-widget.rst:189
msgid ""
":download:`Download Jupyter notebook: checkbox-widget.ipynb <checkbox-"
"widget.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: checkbox-widget.ipynb <checkbox-"
"widget.ipynb>`"

#: ../../pyvista/docs/examples/03-widgets/line-widget.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_03-widgets_line-widget.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_03-widgets_line-widget.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/03-widgets/line-widget.rst:22
msgid "Line Widget"
msgstr "線ウィジェット"

#: ../../pyvista/docs/examples/03-widgets/line-widget.rst:24
msgid ""
"The line widget can be enabled and disabled by the "
":func:`pyvista.WidgetHelper.add_line_widget` and "
":func:`pyvista.WidgetHelper.clear_line_widgets` methods respectively. "
"Unfortunately, PyVista does not have any helper methods to utilize this "
"widget, so it is necessary to pass a custom callback method."
msgstr ""
"行ウィジェットは， :func:`pyvista.WidgetHelper.add_line_widget` および "
":func:`pyvista.WidgetHelper.clear_line_widgets` "
"メソッドによって，それぞれ有効および無効にすることができます．残念ながら，PyVistaにはこのウィジェットを利用するヘルパー・メソッドがないため，カスタムのコールバック・メソッドを渡す必要があります．"

#: ../../pyvista/docs/examples/03-widgets/line-widget.rst:30
msgid ""
"One particularly fun example is to use the line widget to create a source "
"for the :func:`pyvista.DataSetFilters.streamlines` filter. Again note the "
"use of the ``name`` argument in ``add_mesh``."
msgstr ""
"特に面白い例は，行ウィジェットを使って :func:`pyvista.DataSetFilters.streamlines` "
"フィルタのソースを作成することです． ``add_mesh`` で ``name`` 引数を使用していることに再度注意してください．"

#: ../../pyvista/docs/examples/03-widgets/line-widget.rst:101
#: ../../pyvista/docs/examples/03-widgets/plane-widget.rst:102
#: ../../pyvista/docs/examples/03-widgets/plane-widget.rst:173
#: ../../pyvista/docs/examples/03-widgets/plane-widget.rst:230
#: ../../pyvista/docs/examples/03-widgets/slider-bar-widget.rst:118
#: ../../pyvista/docs/examples/03-widgets/slider-bar-widget.rst:170
#: ../../pyvista/docs/examples/03-widgets/sphere-widget.rst:105
#: ../../pyvista/docs/examples/03-widgets/sphere-widget.rst:166
#: ../../pyvista/docs/examples/03-widgets/sphere-widget.rst:279
msgid "And here is a screen capture of a user interacting with this"
msgstr "以下はユーザ対話型のスクリーンショットです"

#: ../../pyvista/docs/examples/03-widgets/line-widget.rst:108
msgid "**Total running time of the script:** ( 0 minutes  0.960 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  0.960 seconds)"

#: ../../pyvista/docs/examples/03-widgets/line-widget.rst:123
msgid ""
":download:`Download Python source code: line-widget.py <line-widget.py>`"
msgstr ""
":download:`Download Python source code: line-widget.py <line-widget.py>`"

#: ../../pyvista/docs/examples/03-widgets/line-widget.rst:129
msgid ""
":download:`Download Jupyter notebook: line-widget.ipynb <line-widget.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: line-widget.ipynb <line-widget.ipynb>`"

#: ../../pyvista/docs/examples/03-widgets/multi-slider-widget.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_03-widgets_multi-slider-"
"widget.py>` to download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_03-widgets_multi-slider-"
"widget.py>` to download the full example code"

#: ../../pyvista/docs/examples/03-widgets/multi-slider-widget.rst:22
msgid "Multiple Slider Widgets"
msgstr "複数のスライダウィジェット"

#: ../../pyvista/docs/examples/03-widgets/multi-slider-widget.rst:24
msgid ""
"Use a class based callback to track multiple slider widgets for updating a "
"single mesh."
msgstr "クラスベースのコールバックを使用して，1つのメッシュを更新するために複数のスライダウィジェットを追跡します．"

#: ../../pyvista/docs/examples/03-widgets/multi-slider-widget.rst:27
msgid ""
"In this example we simply change a few parameters for the "
":func:`pyvista.Sphere` method, but this could easily be applied to any mesh-"
"generating/altering code."
msgstr ""
"この例では， :func:`pyvista.Sphere` "
"メソッドのパラメータをいくつか変更するだけですが，これはどのようなメッシュ生成/変更コードにも簡単に適用できます．"

#: ../../pyvista/docs/examples/03-widgets/multi-slider-widget.rst:137
msgid "**Total running time of the script:** ( 0 minutes  0.331 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  0.331 seconds)"

#: ../../pyvista/docs/examples/03-widgets/multi-slider-widget.rst:152
msgid ""
":download:`Download Python source code: multi-slider-widget.py <multi-"
"slider-widget.py>`"
msgstr ""
":download:`Download Python source code: multi-slider-widget.py <multi-"
"slider-widget.py>`"

#: ../../pyvista/docs/examples/03-widgets/multi-slider-widget.rst:158
msgid ""
":download:`Download Jupyter notebook: multi-slider-widget.ipynb <multi-"
"slider-widget.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: multi-slider-widget.ipynb <multi-"
"slider-widget.ipynb>`"

#: ../../pyvista/docs/examples/03-widgets/plane-widget.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_03-widgets_plane-widget.py>` to"
" download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_03-widgets_plane-widget.py>` to"
" download the full example code"

#: ../../pyvista/docs/examples/03-widgets/plane-widget.rst:22
msgid "Plane Widget"
msgstr "平面ウィジェット"

#: ../../pyvista/docs/examples/03-widgets/plane-widget.rst:24
msgid ""
"The plane widget can be enabled and disabled by the "
":func:`pyvista.WidgetHelper.add_plane_widget` and "
":func:`pyvista.WidgetHelper.clear_plane_widgets` methods respectively. As "
"with all widgets, you must provide a custom callback method to utilize that "
"plane. Considering that planes are most commonly used for clipping and "
"slicing meshes, we have included two helper methods for doing those tasks!"
msgstr ""
"プレーンウィジェットは，それぞれ :func:`pyvista.WidgetHelper.add_plane_widget` と "
":func:`pyvista.WidgetHelper.clear_plane_widgets` "
"メソッドによって有効と無効にすることができます．すべてのウィジェットと同様に，このプレーンを利用するにはカスタム・コールバック・メソッドを提供する必要があります．メッシュのクリッピングとスライスに平面が最も一般的に使用されることを考慮して，これらのタスクを実行する2つのヘルパーメソッドを用意しました．"

#: ../../pyvista/docs/examples/03-widgets/plane-widget.rst:31
msgid "Let's use a plane to clip a mesh:"
msgstr "平面を使用してメッシュをクリップしましょう:"

#: ../../pyvista/docs/examples/03-widgets/plane-widget.rst:108
msgid "Or you could slice a mesh using the plane widget:"
msgstr "または，平面ウィジェットを使用してメッシュをスライスすることもできます．"

#: ../../pyvista/docs/examples/03-widgets/plane-widget.rst:141
msgid "After interacting with the scene, the slice is available as:"
msgstr "シーンを操作すると，スライスは次のように表示されます．"

#: ../../pyvista/docs/examples/03-widgets/plane-widget.rst:179
msgid ""
"Or you could leverage the plane widget for some custom task like glyphing a "
"vector field along that plane. Note that we have to pass a ``name`` when "
"calling ``add_mesh`` to ensure that there is only one set of glyphs plotted "
"at a time."
msgstr ""
"あるいは，平面ウィジェットを利用して，その平面に沿ってベクトルフィールドをグリフするなどのカスタムタスクを実行することもできます． "
"``add_mesh`` を呼び出す際には，一度に出力されるグリフのセットが1つだけであることを保証するために ``name`` "
"を渡す必要があることに注意してください．"

#: ../../pyvista/docs/examples/03-widgets/plane-widget.rst:236
msgid ""
"Further, a user can disable the arrow vector by setting the "
"``normal_rotation`` argument to ``False``. For example, here we "
"programmatically set the normal vector on which we want to translate the "
"plane and we disable the arrow to prevent its rotation."
msgstr ""
"さらに， ``normal_rotation`` 引数を ``False`` "
"に設定することで，矢印ベクトルを無効にすることができます．たとえば，ここでは平面を移動する法線ベクトルをプログラムで設定し，矢印を無効にして回転を防止します．"

#: ../../pyvista/docs/examples/03-widgets/plane-widget.rst:273
msgid ""
"The vector is also forcibly disabled anytime the ``assign_to_axis`` argument"
" is set."
msgstr "このベクトルは， ``assign_to_axis`` 引数が設定されている場合は常に強制的に無効にされます．"

#: ../../pyvista/docs/examples/03-widgets/plane-widget.rst:307
msgid "**Total running time of the script:** ( 0 minutes  8.548 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  8.548 seconds)"

#: ../../pyvista/docs/examples/03-widgets/plane-widget.rst:322
msgid ""
":download:`Download Python source code: plane-widget.py <plane-widget.py>`"
msgstr ""
":download:`Download Python source code: plane-widget.py <plane-widget.py>`"

#: ../../pyvista/docs/examples/03-widgets/plane-widget.rst:328
msgid ""
":download:`Download Jupyter notebook: plane-widget.ipynb <plane-"
"widget.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plane-widget.ipynb <plane-"
"widget.ipynb>`"

#: ../../pyvista/docs/examples/03-widgets/sg_execution_times.rst:8
msgid "**00:09.818** total execution time for **examples_03-widgets** files:"
msgstr "**00:09.818** total execution time for **examples_03-widgets** files:"

#: ../../pyvista/docs/examples/03-widgets/sg_execution_times.rst:11
msgid ""
":ref:`sphx_glr_examples_03-widgets_plane-widget.py` (``plane-widget.py``)"
msgstr ""
":ref:`sphx_glr_examples_03-widgets_plane-widget.py` (``plane-widget.py``)"

#: ../../pyvista/docs/examples/03-widgets/sg_execution_times.rst:11
msgid "00:08.548"
msgstr "00:08.548"

#: ../../pyvista/docs/examples/03-widgets/sg_execution_times.rst:13
msgid ""
":ref:`sphx_glr_examples_03-widgets_checkbox-widget.py` (``checkbox-"
"widget.py``)"
msgstr ""
":ref:`sphx_glr_examples_03-widgets_checkbox-widget.py` (``checkbox-"
"widget.py``)"

#: ../../pyvista/docs/examples/03-widgets/sg_execution_times.rst:13
msgid "00:01.270"
msgstr "00:01.270"

#: ../../pyvista/docs/examples/03-widgets/sg_execution_times.rst:15
msgid ":ref:`sphx_glr_examples_03-widgets_box-widget.py` (``box-widget.py``)"
msgstr ":ref:`sphx_glr_examples_03-widgets_box-widget.py` (``box-widget.py``)"

#: ../../pyvista/docs/examples/03-widgets/sg_execution_times.rst:17
msgid ""
":ref:`sphx_glr_examples_03-widgets_line-widget.py` (``line-widget.py``)"
msgstr ""
":ref:`sphx_glr_examples_03-widgets_line-widget.py` (``line-widget.py``)"

#: ../../pyvista/docs/examples/03-widgets/sg_execution_times.rst:19
msgid ""
":ref:`sphx_glr_examples_03-widgets_multi-slider-widget.py` (``multi-slider-"
"widget.py``)"
msgstr ""
":ref:`sphx_glr_examples_03-widgets_multi-slider-widget.py` (``multi-slider-"
"widget.py``)"

#: ../../pyvista/docs/examples/03-widgets/sg_execution_times.rst:21
msgid ""
":ref:`sphx_glr_examples_03-widgets_slider-bar-widget.py` (``slider-bar-"
"widget.py``)"
msgstr ""
":ref:`sphx_glr_examples_03-widgets_slider-bar-widget.py` (``slider-bar-"
"widget.py``)"

#: ../../pyvista/docs/examples/03-widgets/sg_execution_times.rst:23
msgid ""
":ref:`sphx_glr_examples_03-widgets_sphere-widget.py` (``sphere-widget.py``)"
msgstr ""
":ref:`sphx_glr_examples_03-widgets_sphere-widget.py` (``sphere-widget.py``)"

#: ../../pyvista/docs/examples/03-widgets/sg_execution_times.rst:25
msgid ""
":ref:`sphx_glr_examples_03-widgets_spline-widget.py` (``spline-widget.py``)"
msgstr ""
":ref:`sphx_glr_examples_03-widgets_spline-widget.py` (``spline-widget.py``)"

#: ../../pyvista/docs/examples/03-widgets/slider-bar-widget.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_03-widgets_slider-bar-"
"widget.py>` to download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_03-widgets_slider-bar-"
"widget.py>` to download the full example code"

#: ../../pyvista/docs/examples/03-widgets/slider-bar-widget.rst:22
msgid "Slider Bar Widget"
msgstr "スライダバーウィジェット"

#: ../../pyvista/docs/examples/03-widgets/slider-bar-widget.rst:24
msgid ""
"The slider widget can be enabled and disabled by the "
":func:`pyvista.WidgetHelper.add_slider_widget` and "
":func:`pyvista.WidgetHelper.clear_slider_widgets` methods respectively. This"
" is one of the most versatile widgets as it can control a value that can be "
"used for just about anything."
msgstr ""
"スライダウィジェットは， :func:`pyvista.WidgetHelper.add_slider_widget` メソッドおよび "
":func:`pyvista.WidgetHelper.clear_slider_widgets` "
"メソッドによって，それぞれ有効および無効にすることができます．これは，ほぼすべてのものに使用できる値を制御できるため，最も用途の広いウィジェットの1つです．"

#: ../../pyvista/docs/examples/03-widgets/slider-bar-widget.rst:45
msgid ""
"One helper method we've added is the "
":func:`pyvista.WidgetHelper.add_mesh_threshold` method which leverages the "
"slider widget to control a thresholding value."
msgstr ""
"追加したヘルパーメソッドの1つに :func:`pyvista.WidgetHelper.add_mesh_threshold` "
"メソッドがあります．これは，スライダウィジェットを利用して閾値を制御します．"

#: ../../pyvista/docs/examples/03-widgets/slider-bar-widget.rst:86
msgid "After interacting with the scene, the threshold mesh is available as:"
msgstr "シーンを操作すると，しきい値メッシュは次のように使用できます．"

#: ../../pyvista/docs/examples/03-widgets/slider-bar-widget.rst:125
msgid "Custom Callback"
msgstr "カスタムコールバック"

#: ../../pyvista/docs/examples/03-widgets/slider-bar-widget.rst:127
msgid ""
"Or you could leverage a custom callback function that takes a single value "
"from the slider as its argument to do something like control the resolution "
"of a mesh. Again note the use of the ``name`` argument in ``add_mesh``:"
msgstr ""
"あるいは，スライダから1つの値を引数として取るカスタムコールバック関数を利用して，メッシュの解像度を制御するなどのことができます．ここでも "
"``add_mesh`` における ``name`` 引数の使用に注意してください．"

#: ../../pyvista/docs/examples/03-widgets/slider-bar-widget.rst:177
msgid "**Total running time of the script:** ( 0 minutes  2.372 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  2.372 seconds)"

#: ../../pyvista/docs/examples/03-widgets/slider-bar-widget.rst:192
msgid ""
":download:`Download Python source code: slider-bar-widget.py <slider-bar-"
"widget.py>`"
msgstr ""
":download:`Download Python source code: slider-bar-widget.py <slider-bar-"
"widget.py>`"

#: ../../pyvista/docs/examples/03-widgets/slider-bar-widget.rst:198
msgid ""
":download:`Download Jupyter notebook: slider-bar-widget.ipynb <slider-bar-"
"widget.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: slider-bar-widget.ipynb <slider-bar-"
"widget.ipynb>`"

#: ../../pyvista/docs/examples/03-widgets/sphere-widget.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_03-widgets_sphere-widget.py>` "
"to download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_03-widgets_sphere-widget.py>` "
"to download the full example code"

#: ../../pyvista/docs/examples/03-widgets/sphere-widget.rst:22
msgid "Sphere Widget"
msgstr "球体ウィジェット"

#: ../../pyvista/docs/examples/03-widgets/sphere-widget.rst:24
msgid ""
"The sphere widget can be enabled and disabled by the "
":func:`pyvista.WidgetHelper.add_sphere_widget` and "
":func:`pyvista.WidgetHelper.clear_sphere_widgets` methods respectively. This"
" is a very versatile widget as it can control vertex location that can be "
"used to control or update the location of just about anything."
msgstr ""
"球ウィジェットは， :func:`pyvista.WidgetHelper.add_sphere_widget` メソッドおよび "
":func:`pyvista.WidgetHelper.clear_sphere_widgets` "
"メソッドによって，それぞれ有効および無効にすることができます．このウィジェットは，頂点の位置を制御できるため，非常に用途が広く，ほとんどすべてのオブジェクトの位置を制御または更新できます．"

#: ../../pyvista/docs/examples/03-widgets/sphere-widget.rst:30
msgid ""
"We don't have any convenient helper methods that utilize this widget out of "
"the box, but we have added a lot of ways to use this widget so that you can "
"easily add several widgets to a scene."
msgstr ""
"このウィジェットをそのまま使用する便利なヘルパーメソッドはありませんが，このウィジェットを使用する方法が多数追加されているため，シーンに複数のウィジェットを簡単に追加できます．"

#: ../../pyvista/docs/examples/03-widgets/sphere-widget.rst:34
msgid "Let's look at a few use cases that all update a surface mesh."
msgstr "すべてがサーフェスメッシュを更新するいくつかの使用例を見てみましょう．"

#: ../../pyvista/docs/examples/03-widgets/sphere-widget.rst:52
msgid "Example A"
msgstr "例A"

#: ../../pyvista/docs/examples/03-widgets/sphere-widget.rst:54
msgid "Use a single sphere widget"
msgstr "単一の球ウィジェットを使用します"

#: ../../pyvista/docs/examples/03-widgets/sphere-widget.rst:112
msgid "Example B"
msgstr "例B"

#: ../../pyvista/docs/examples/03-widgets/sphere-widget.rst:114
msgid "Use several sphere widgets at once"
msgstr "一度に複数の球体ウィジェットを使用します"

#: ../../pyvista/docs/examples/03-widgets/sphere-widget.rst:173
msgid "Example C"
msgstr "例C"

#: ../../pyvista/docs/examples/03-widgets/sphere-widget.rst:175
msgid ""
"This one is the coolest - use four sphere widgets to update perturbations on"
" a surface and interpolate between them with some boundary conditions"
msgstr "これは，4つの球体ウィジェットを使用してサーフェス上の摂動を更新し，いくつかの境界条件でそれらの間を補間する最もクールな方法です．"

#: ../../pyvista/docs/examples/03-widgets/sphere-widget.rst:286
msgid "**Total running time of the script:** ( 0 minutes  1.155 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.155 seconds)"

#: ../../pyvista/docs/examples/03-widgets/sphere-widget.rst:301
msgid ""
":download:`Download Python source code: sphere-widget.py <sphere-widget.py>`"
msgstr ""
":download:`Download Python source code: sphere-widget.py <sphere-widget.py>`"

#: ../../pyvista/docs/examples/03-widgets/sphere-widget.rst:307
msgid ""
":download:`Download Jupyter notebook: sphere-widget.ipynb <sphere-"
"widget.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: sphere-widget.ipynb <sphere-"
"widget.ipynb>`"

#: ../../pyvista/docs/examples/03-widgets/spline-widget.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_03-widgets_spline-widget.py>` "
"to download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_03-widgets_spline-widget.py>` "
"to download the full example code"

#: ../../pyvista/docs/examples/03-widgets/spline-widget.rst:22
msgid "Spline Widget"
msgstr "スプラインウィジェット"

#: ../../pyvista/docs/examples/03-widgets/spline-widget.rst:25
msgid ""
"A spline widget can be enabled and disabled by the "
":func:`pyvista.WidgetHelper.add_spline_widget` and "
":func:`pyvista.WidgetHelper.clear_spline_widgets` methods respectively. This"
" widget allows users to interactively create a poly line (spline) through a "
"scene and use that spline."
msgstr ""
"スプラインウィジェットは， :func:`pyvista.WidgetHelper.add_spline_widget` メソッドと "
":func:`pyvista.WidgetHelper.clear_spline_widgets` "
"メソッドでそれぞれ有効または無効にできます．このウィジェットを使用すると，ユーザはシーンを通してポリゴンライン (スプライン) "
"をインタラクティブに作成し，そのスプラインを使用できます．"

#: ../../pyvista/docs/examples/03-widgets/spline-widget.rst:31
msgid ""
"A common task with splines is to slice a volumetric dataset using an "
"irregular path. To do this, we have added a convenient helper method which "
"leverages the :func:`pyvista.DataSetFilters.slice_along_line` filter named "
":func:`pyvista.WidgetHelper.add_mesh_slice_spline`."
msgstr ""
"スプラインを使用する一般的なタスクは，不規則なパスを使用してボリュームデータセットをスライスすることです．これを行うために，我々は "
":func:`pyvista.WidgetHelper.add_mesh_slice_spline` という名前の "
":func:`pyvista.DataSetFilters.slice_along_line` フィルタを活用する便利なヘルパーメソッドを追加しました．"

#: ../../pyvista/docs/examples/03-widgets/spline-widget.rst:95
msgid "**Total running time of the script:** ( 0 minutes  0.532 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  0.532 seconds)"

#: ../../pyvista/docs/examples/03-widgets/spline-widget.rst:110
msgid ""
":download:`Download Python source code: spline-widget.py <spline-widget.py>`"
msgstr ""
":download:`Download Python source code: spline-widget.py <spline-widget.py>`"

#: ../../pyvista/docs/examples/03-widgets/spline-widget.rst:116
msgid ""
":download:`Download Jupyter notebook: spline-widget.ipynb <spline-"
"widget.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: spline-widget.ipynb <spline-"
"widget.ipynb>`"

#: ../../pyvista/docs/examples/04-lights/actors.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_04-lights_actors.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_04-lights_actors.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/04-lights/actors.rst:22
msgid "Light Actors"
msgstr "Lightアクター"

#: ../../pyvista/docs/examples/04-lights/actors.rst:24
msgid ""
"Positional lights in PyVista have customizable beam shapes, see the "
":ref:`ref_light_beam_shape_example` example. Spotlights are special in the "
"sense that they are unidirectional lights with a finite position, so they "
"can be visualized using a cone."
msgstr ""
"PyVistaのポジションライトにはカスタマイズ可能なビームシェイプがあります． :ref:`ref_light_beam_shape_example`"
" の例を参照してください．スポットライトは，限の位置を持つ単一指向性ライトであるという点で特殊であり，円錐を使用して視覚化できます．"

#: ../../pyvista/docs/examples/04-lights/actors.rst:29
msgid ""
"This is exactly the purpose of a ``vtk.vtkLightActor``, the functionality of"
" which can be enabled for spotlights:"
msgstr "これはまさに ``vtk.vtkLightActor`` の目的であり，スポットライトに対してその機能を有効にすることができます:"

#: ../../pyvista/docs/examples/04-lights/actors.rst:87
msgid ""
"Light actors can be very useful when designing complex scenes where "
"spotlights are involved in lighting."
msgstr "ライトアクターは，ポットライトが照明に関係する複雑なシーンを設計する場合に非常に便利です．"

#: ../../pyvista/docs/examples/04-lights/actors.rst:139
msgid ""
"One thing to watch out for is that the light actors are represented such "
"that their cone has a fixed height. This implies that for very large cone "
"angles we typically end up with enormous light actors, in which case setting"
" a manual camera position before rendering is usually a good idea. "
"Increasing the first example's cone angle and omitting the manual camera "
"positioning exemplifies the problem:"
msgstr ""
"1つ注意すべき点は，ライトアクターは円錐の高さが固定されるように表現されることです．これは，円錐角度が非常に大きい場合，通常は膨大なライトアクターになることを意味します．この場合，レンダリング前に手動でカメラ位置を設定することをお勧めします．最初の例の円錐角度を大きくし，手動でのカメラの配置を省略すると，問題が発生します．"

#: ../../pyvista/docs/examples/04-lights/actors.rst:190
msgid "**Total running time of the script:** ( 0 minutes  2.203 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  2.203 seconds)"

#: ../../pyvista/docs/examples/04-lights/actors.rst:205
msgid ":download:`Download Python source code: actors.py <actors.py>`"
msgstr ":download:`Download Python source code: actors.py <actors.py>`"

#: ../../pyvista/docs/examples/04-lights/actors.rst:211
msgid ":download:`Download Jupyter notebook: actors.ipynb <actors.ipynb>`"
msgstr ":download:`Download Jupyter notebook: actors.ipynb <actors.ipynb>`"

#: ../../pyvista/docs/examples/04-lights/attenuation.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_04-lights_attenuation.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_04-lights_attenuation.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/04-lights/attenuation.rst:24
msgid "Attenuation"
msgstr "減衰"

#: ../../pyvista/docs/examples/04-lights/attenuation.rst:26
msgid ""
"Attenuation is the phenomenon of light's intensity being gradually dampened "
"as it propagates through a medium. In PyVista positional lights can show "
"attenuation. The quadratic attenuation model uses three parameters to "
"describe attenuation: a constant, a linear and a quadratic parameter. These "
"parameters describe the decrease of the beam intensity as a function of the "
"distance, `I(r)`. In a broad sense the constant, linear and quadratic "
"components correspond to `I(r) = 1`, `I(r) = 1/r` and `I(r) = 1/r^2` decay "
"of the intensity with distance from the point source. In all cases a larger "
"attenuation value (of a given kind) means stronger dampening (weaker light "
"at a given distance)."
msgstr ""
"減衰とは，光が媒質を通過するときに，光の強度が徐々に減衰する現象です．PyVistaでは，ポジションライトは減衰を示します．2次減衰モデルでは，減衰を記述するために，定数，線形，2次の3つのパラメータを使用します．これらのパラメータは，距離"
" `I(r)` の関数としてビーム強度の減少を記述し，広い意味で，1次，2次成分は点源からの距離による強度の `I(r) = 1` ， `I(r) = "
"1/r` ，  `I(r) = 1/r^2` "
"減衰に対応します．いずれの場合も，(ある種の)減衰値が大きいほど，(一定の距離の弱い光の)減衰が強くなります．"

#: ../../pyvista/docs/examples/04-lights/attenuation.rst:36
msgid ""
"So the constant attenuation parameter corresponds roughly to a constant "
"intensity component. The linear and the quadratic attenuation parameters "
"correspond to intensity components that decay with distance from the source."
" For the same parameter value the quadratic attenuation produces a beam that"
" is shorter in range than that produced by linear attenuation."
msgstr ""
"したがって，一定減衰パラメータは，ほぼ一定強度成分に対応します．線形及び2次減衰パラメータは，光源からの距離と共に減衰する強度成分に対応します．同じパラメータ値に対して，2次減衰は，線形減衰によって生成されるものよりも短い範囲のビームを生成します．"

#: ../../pyvista/docs/examples/04-lights/attenuation.rst:42
msgid "Three spotlights with three different attenuation profiles each:"
msgstr "3つの異なる減衰プロファイルを持つ3つのスポットライト:"

#: ../../pyvista/docs/examples/04-lights/attenuation.rst:92
msgid ""
"It's not too obvious but it's visible that the rightmost light with "
"quadratic attenuation has a shorter range than the middle one with linear "
"attenuation. Although it seems that even the leftmost light with constant "
"attenuation loses its brightness gradually, this partly has to do with the "
"fact that we sliced the light beams very close to their respective axes, "
"meaning that light hits the surface in a very small angle. Altering the "
"scene such that the lights are further away from the plane changes this:"
msgstr ""
"一目瞭然ではありませんが，2次減衰された右端のライトの範囲は，線形減衰された中央のライトの範囲よりも短いことがわかります．減衰が一定の一番左のライトでも徐々に輝度が失われているように見えますが，これはライトビームをそれぞれの軸に非常に近いところでスライスしたこと，つまりライトが非常に小さい角度でサーフェスに当たったことに関係しています．ライトが平面から離れるようにシーンを変更すると，次のように変更されます．"

#: ../../pyvista/docs/examples/04-lights/attenuation.rst:145
msgid "Now the relationship of the three kinds of attenuation seems clearer."
msgstr "3種類の減衰の関係がより明確になりました．"

#: ../../pyvista/docs/examples/04-lights/attenuation.rst:147
msgid ""
"For a more practical comparison, let's look at planes that are perpendicular"
" to the axis of each light (making use of the fact that shadowing between "
"objects is not handled by default):"
msgstr ""
"より実用的な比較のために，各ライトの軸に垂直な平面を見てみましょう(オブジェクト間のシャドウがデフォルトでは処理されないという事実を利用する):"

#: ../../pyvista/docs/examples/04-lights/attenuation.rst:203
msgid "**Total running time of the script:** ( 0 minutes  0.759 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  0.759 seconds)"

#: ../../pyvista/docs/examples/04-lights/attenuation.rst:218
msgid ""
":download:`Download Python source code: attenuation.py <attenuation.py>`"
msgstr ""
":download:`Download Python source code: attenuation.py <attenuation.py>`"

#: ../../pyvista/docs/examples/04-lights/attenuation.rst:224
msgid ""
":download:`Download Jupyter notebook: attenuation.ipynb <attenuation.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: attenuation.ipynb <attenuation.ipynb>`"

#: ../../pyvista/docs/examples/04-lights/beam_shape.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_04-lights_beam_shape.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_04-lights_beam_shape.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/04-lights/beam_shape.rst:24
msgid "Beam Shape"
msgstr "ビーム形状"

#: ../../pyvista/docs/examples/04-lights/beam_shape.rst:26
msgid ""
"The default directional lights are infinitely distant point sources, for "
"which the only geometric customization option is the choice of beam "
"direction defined by the light's position and focal point. Positional "
"lights, however, have more options for beam customization."
msgstr ""
"既定のディレクショナルライトは非常に離れたポイントソースで，ジオメトリのカスタマイズオプションはライトの位置と焦点によって定義されるビーム方向の選択だけです．ただし，ポジションライトには，より多くのビームカスタマイズオプションがあります．"

#: ../../pyvista/docs/examples/04-lights/beam_shape.rst:31
msgid "Consider two hemispheres:"
msgstr "2つの半球を考えてみましょう:"

#: ../../pyvista/docs/examples/04-lights/beam_shape.rst:75
msgid ""
"We can see that the default lighting does a very good job of articulating "
"the shape of the hemispheres."
msgstr "既定値のライティングでは，半球の形をはっきりと表現できます．"

#: ../../pyvista/docs/examples/04-lights/beam_shape.rst:78
msgid ""
"Let's shine a directional light on them, positioned between the hemispheres "
"and oriented along their centers:"
msgstr "半球の間に配置され，半球の中心に沿って方向付けられたディレクショナルライトを照らします．"

#: ../../pyvista/docs/examples/04-lights/beam_shape.rst:125
msgid ""
"Both hemispheres have their surface lit on the side that faces the light. "
"This is consistent with the point source positioned at infinity, directed "
"from the light's nominal position toward the focal point."
msgstr "両半球のサーフェスは，ライトに面した側で照らされます．これは，光の公称位置から焦点に向かう無限遠に位置する点光源と一致します．"

#: ../../pyvista/docs/examples/04-lights/beam_shape.rst:129
msgid ""
"Now let's change the light to a positional light (but not a spotlight):"
msgstr "ここで，ライトをポジショナルライトに変更します(スポットライトではありません):"

#: ../../pyvista/docs/examples/04-lights/beam_shape.rst:177
msgid ""
"Now the inner surface of both hemispheres is lit. A positional light with a "
"cone angle of 90 degrees (or more) acts as a point source located at the "
"light's nominal position. It could still display attenuation, see the "
":ref:`ref_attenuation_example` example."
msgstr ""
"これで両半球の内側のサーフェスが照らされました．コーンアングルが90度(以上)の位置ライトは，ライトの公称位置にあるポイントソースとして機能します．減衰も表示できます．"
" :ref:`ref_attenuation_example` の例を参照してください．"

#: ../../pyvista/docs/examples/04-lights/beam_shape.rst:182
msgid ""
"Switching to a spotlight (i.e. a positional light with a cone angle less "
"than 90 degrees) will enable beam shaping using the :py:attr:`exponent` "
"property. Let's put our hemispheres side by side for this, and put a light "
"in the center of each: one spotlight, one merely positional."
msgstr ""
"スポットライト(コーンアングルが90度未満のポジショナルライト)に切り替えると， :py:attr:`exponent` "
"プロパティを使用したビーム成形が有効になります．このために半球を並べて，それぞれの中心にライトを配置しましょう．1つのスポットライトで，1つは単に位置を示すライトです．"

#: ../../pyvista/docs/examples/04-lights/beam_shape.rst:244
msgid ""
"Even though the two lights only differ by a fraction of a degree in cone "
"angle, the beam shaping effect enabled for spotlights causes a marked "
"difference in the result."
msgstr ""
"2つのライトのコーンアングルの違いはほんのわずかですが，スポットライトで有効にしたビーム成形エフェクトによって，結果に著しい違いが生じます．"

#: ../../pyvista/docs/examples/04-lights/beam_shape.rst:248
msgid ""
"Once we have a spotlight we can change its :py:attr:`exponent` to make the "
"beam shape sharper or broader. Three spotlights with varying sharpness:"
msgstr ""
"スポットライトができたら，その :py:attr:`exponent` "
"を変更して，ビームシェイプをよりシャープにしたり，より広くしたりすることができます．シャープさが異なる3つのスポットライト:"

#: ../../pyvista/docs/examples/04-lights/beam_shape.rst:303
msgid ""
"The spotlight with exponent 0.3 is practically uniform, and the one with "
"exponent 5 is visibly focused along the axis of the light."
msgstr "指数0.3のスポットライトは実質的に均一で，指数5のスポットライトはライトの軸に沿って目に見えるようにフォーカスされています．"

#: ../../pyvista/docs/examples/04-lights/beam_shape.rst:309
msgid "**Total running time of the script:** ( 0 minutes  0.978 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  0.978 seconds)"

#: ../../pyvista/docs/examples/04-lights/beam_shape.rst:324
msgid ":download:`Download Python source code: beam_shape.py <beam_shape.py>`"
msgstr ""
":download:`Download Python source code: beam_shape.py <beam_shape.py>`"

#: ../../pyvista/docs/examples/04-lights/beam_shape.rst:330
msgid ""
":download:`Download Jupyter notebook: beam_shape.ipynb <beam_shape.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: beam_shape.ipynb <beam_shape.ipynb>`"

#: ../../pyvista/docs/examples/04-lights/light_types.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_04-lights_light_types.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_04-lights_light_types.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/04-lights/light_types.rst:22
msgid "Light Types"
msgstr "光源タイプ"

#: ../../pyvista/docs/examples/04-lights/light_types.rst:24
msgid "Lights come in three types:"
msgstr "ライトには次の3つのタイプがあります:"

#: ../../pyvista/docs/examples/04-lights/light_types.rst:26
msgid ""
"headlights, the axis of which always coincides with the view of the camera,"
msgstr "その軸が常にカメラのビューと一致するヘッドライト，"

#: ../../pyvista/docs/examples/04-lights/light_types.rst:27
msgid ""
"camera lights, which move together with the camera, but which can occupy any"
" fixed relative position with respect to the camera,"
msgstr "カメラライトはカメラとともに移動しますが，カメラに対して固定された相対位置を占めることができます．"

#: ../../pyvista/docs/examples/04-lights/light_types.rst:29
msgid ""
"scene lights, the position of which is fixed to the scene, and which is thus"
" unaffected by moving the camera. This is the default type."
msgstr "シーンライト．その位置はシーンに固定されているため，カメラを移動しても影響を受けません．これがデフォルトのタイプです．"

#: ../../pyvista/docs/examples/04-lights/light_types.rst:33
msgid "Headlight"
msgstr "ヘッドライト"

#: ../../pyvista/docs/examples/04-lights/light_types.rst:35
msgid ""
"For headlights the :py:attr:`position` and :py:attr:`focal_point` properties"
" are meaningless. No matter where you move the camera, the light always "
"emanates from the view point:"
msgstr ""
"ヘッドライトの場合， :py:attr:`position` および :py:attr:`focal_point` "
"プロパティは意味がありません．カメラをどこに移動しても，ライトは常に視点から放射されます．"

#: ../../pyvista/docs/examples/04-lights/light_types.rst:84
msgid "Camera light"
msgstr "カメラライト"

#: ../../pyvista/docs/examples/04-lights/light_types.rst:86
msgid ""
"Camera lights define their :py:attr:`position` and :py:attr:`focal_point` "
"properties in a coordinate system that is local to the camera. The "
"coordinates in the scene's coordinate system can be accessed through the "
":py:attr:`world_position` and :py:attr:`world_focal_point` read-only "
"properties, respectively. For specifics of the local coordinate system used "
"for the coordinates please see the documentation of "
":func:`pyvista.Light.set_camera_light`."
msgstr ""
"カメラライトは，カメラに対してローカルな座標系で :py:attr:`position` と :py:attr:`focal_point` "
"プロパティを定義します．シーンの座標系の座標には，それぞれ読み込み専用プロパティ:py:attr:`world_position` および "
":py:attr:`world_focal_point` を使用してアクセスできます．座標に使用されるローカル座標系の詳細については， "
":func:`pyvista.Light.set_camera_light` のドキュメントを参照してください．"

#: ../../pyvista/docs/examples/04-lights/light_types.rst:130
msgid "Scene light"
msgstr "シーンライト"

#: ../../pyvista/docs/examples/04-lights/light_types.rst:132
msgid ""
"Scene lights are attached to the scene, their position and focal point are "
"interpreted as global coordinates:"
msgstr "シーンライトはシーンにアタッチされ，その位置と焦点はグローバル座標として解釈されます．"

#: ../../pyvista/docs/examples/04-lights/light_types.rst:170
msgid "**Total running time of the script:** ( 0 minutes  0.915 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  0.915 seconds)"

#: ../../pyvista/docs/examples/04-lights/light_types.rst:185
msgid ""
":download:`Download Python source code: light_types.py <light_types.py>`"
msgstr ""
":download:`Download Python source code: light_types.py <light_types.py>`"

#: ../../pyvista/docs/examples/04-lights/light_types.rst:191
msgid ""
":download:`Download Jupyter notebook: light_types.ipynb <light_types.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: light_types.ipynb <light_types.ipynb>`"

#: ../../pyvista/docs/examples/04-lights/mesh_lighting.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_04-lights_mesh_lighting.py>` to"
" download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_04-lights_mesh_lighting.py>` to"
" download the full example code"

#: ../../pyvista/docs/examples/04-lights/mesh_lighting.rst:22
msgid "Disabling Mesh Lighting"
msgstr "メッシュライティングの無効化"

#: ../../pyvista/docs/examples/04-lights/mesh_lighting.rst:24
msgid ""
"While plotters have a default set of lights and there are many options for "
"customizing lighting conditions in general, meshes have the option to opt "
"out of lighting altogether. Pass ``lighting=False`` to ``add_mesh`` to "
"disable lighting for the given mesh:"
msgstr ""
"プロッタには既定の照明セットがあり，一般的に照明条件をカスタマイズするためのオプションが多数ありますが，メッシュには照明を完全にオフにするオプションがあります．"
" ``lighting=False`` を ``add_mesh`` に渡すと，指定されたメッシュのライティングが無効になります．"

#: ../../pyvista/docs/examples/04-lights/mesh_lighting.rst:72
msgid ""
"Due to the obvious lack of depth detail this mostly makes sense for meshes "
"with non-trivial colors or textures. If it weren't for the edges being "
"drawn, the second mesh would be practically impossible to understand even "
"with the option to interactively explore the surface:"
msgstr ""
"深さの詳細が明らかに不足しているため，通常のカラーやテクスチャを使用するメッシュではほとんど問題ありません．エッジが描画されていない場合，2番目のメッシュは，サーフェスをインタラクティブに調査するオプションを使用しても実際には理解できません．"

#: ../../pyvista/docs/examples/04-lights/mesh_lighting.rst:107
msgid ""
"For further examples about fine-tuning mesh properties that affect light "
"rendering, see the :ref:`ref_lighting_properties_example` example."
msgstr ""
"ライトレンダリングに影響するメッシュプロパティの微調整の詳細な例については， "
":ref:`ref_lighting_properties_example` の例を参照してください．"

#: ../../pyvista/docs/examples/04-lights/mesh_lighting.rst:113
msgid "**Total running time of the script:** ( 0 minutes  1.472 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.472 seconds)"

#: ../../pyvista/docs/examples/04-lights/mesh_lighting.rst:128
msgid ""
":download:`Download Python source code: mesh_lighting.py <mesh_lighting.py>`"
msgstr ""
":download:`Download Python source code: mesh_lighting.py <mesh_lighting.py>`"

#: ../../pyvista/docs/examples/04-lights/mesh_lighting.rst:134
msgid ""
":download:`Download Jupyter notebook: mesh_lighting.ipynb "
"<mesh_lighting.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: mesh_lighting.ipynb "
"<mesh_lighting.ipynb>`"

#: ../../pyvista/docs/examples/04-lights/plotter_builtins.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_04-lights_plotter_builtins.py>`"
" to download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_04-lights_plotter_builtins.py>`"
" to download the full example code"

#: ../../pyvista/docs/examples/04-lights/plotter_builtins.rst:22
msgid "Plotter Lighting Systems"
msgstr "プロッタ照明システム"

#: ../../pyvista/docs/examples/04-lights/plotter_builtins.rst:24
msgid ""
"The :class:`pyvista.Plotter` class comes with three options for the default "
"lighting system:"
msgstr ":class:`pyvista.Plotter` クラスには，既定の照明システム用に次の3つのオプションがあります．"

#: ../../pyvista/docs/examples/04-lights/plotter_builtins.rst:27
msgid "a light kit consisting of a headlight and four camera lights,"
msgstr "ヘッドライトと4つのカメラライトで構成されたライトキット"

#: ../../pyvista/docs/examples/04-lights/plotter_builtins.rst:28
msgid ""
"an illumination system containing three lights arranged around the camera,"
msgstr "カメラの周囲に配置された3つのライトを含む照明システム，"

#: ../../pyvista/docs/examples/04-lights/plotter_builtins.rst:29
msgid "no lighting."
msgstr "照明なし．"

#: ../../pyvista/docs/examples/04-lights/plotter_builtins.rst:31
msgid ""
"With meshes that don't have depth information encoded in their color the "
"importance of an appropriate lighting setup becomes paramount for accurate "
"visualization."
msgstr "メッシュのカラーにエンコードされた深度情報がない場合，正確に表示するには適切なライティング設定が最も重要になります．"

#: ../../pyvista/docs/examples/04-lights/plotter_builtins.rst:36
msgid "Light kit"
msgstr "ライトキット"

#: ../../pyvista/docs/examples/04-lights/plotter_builtins.rst:38
msgid ""
"The default ``lighting='light kit'`` option recreates a lighting setup that "
"corresponds to a ``vtk.vtkLightKit``. We can check what type of lights this "
"lighting comprises:"
msgstr ""
"デフォルトの ``lighting='light kit'`` オプションは， ``vtk.vtkLightKit`` "
"に対応するライティング設定を再作成します．このライティングがどのタイプのライトで構成されているかを確認できます．"

#: ../../pyvista/docs/examples/04-lights/plotter_builtins.rst:77
msgid "Add a white terrain to the scene:"
msgstr "シーンに白い地形を追加する:"

#: ../../pyvista/docs/examples/04-lights/plotter_builtins.rst:114
msgid "Three-lights illumination"
msgstr "3ライトイルミネーション"

#: ../../pyvista/docs/examples/04-lights/plotter_builtins.rst:116
msgid ""
"Switching to three-lights illumination gives a different character to the "
"figure, in this case showing less contrast when viewing the mountain from "
"the top, but having more contrast with views closer to the side. This "
"becomes especially clear when exploring the figures interactively."
msgstr ""
"3つのライトのイルミネーションに切り替えると，フィギュアに異なるキャラクタが追加されます．この場合は，上から山を見たときのコントラストは小さくなりますが，横から見たときのコントラストは大きくなります．これは，図形を対話的に探索する場合に特に明らかになります．"

#: ../../pyvista/docs/examples/04-lights/plotter_builtins.rst:153
msgid "Again we can check what kind of lights this setting uses:"
msgstr "ここでも，この設定で使用されるライトの種類を確認できます．"

#: ../../pyvista/docs/examples/04-lights/plotter_builtins.rst:187
msgid "Custom lighting"
msgstr "カスタム照明"

#: ../../pyvista/docs/examples/04-lights/plotter_builtins.rst:189
msgid ""
"We can introduce our own lighting from scratch by disabling any lighting on "
"plotter initialization. Adding a single scene light to a scene will often "
"result in ominous visuals due to objects having larger regions in shadow."
msgstr ""
"プロッタの初期化時に照明を無効にすることで，独自の照明をゼロから導入できます．単一のシーンライトをシーンに追加すると，オブジェクトのシャドウの領域が大きくなるため，不気味な外観になることがよくあります．"

#: ../../pyvista/docs/examples/04-lights/plotter_builtins.rst:231
msgid "Custom lighting with shadows"
msgstr "影付きのカスタムライティング"

#: ../../pyvista/docs/examples/04-lights/plotter_builtins.rst:233
msgid ""
"Here, we ``enable_shadows`` to enhance the effect that the lighting angle "
"has.  It has a subtle, but realistic effect.  Notice the sharp shadows due "
"to the mountaintop."
msgstr ""
"ここでは， ``enable_shadows`` "
"を使用して照明角度の効果を強化しています．微妙ですが，リアルな効果が得られます．山頂に起因する鋭い影に注目してください．"

#: ../../pyvista/docs/examples/04-lights/plotter_builtins.rst:273
msgid "**Total running time of the script:** ( 0 minutes  3.776 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  3.776 seconds)"

#: ../../pyvista/docs/examples/04-lights/plotter_builtins.rst:288
msgid ""
":download:`Download Python source code: plotter_builtins.py "
"<plotter_builtins.py>`"
msgstr ""
":download:`Download Python source code: plotter_builtins.py "
"<plotter_builtins.py>`"

#: ../../pyvista/docs/examples/04-lights/plotter_builtins.rst:294
msgid ""
":download:`Download Jupyter notebook: plotter_builtins.ipynb "
"<plotter_builtins.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plotter_builtins.ipynb "
"<plotter_builtins.ipynb>`"

#: ../../pyvista/docs/examples/04-lights/sg_execution_times.rst:8
msgid "**00:10.762** total execution time for **examples_04-lights** files:"
msgstr "**00:10.762** total execution time for **examples_04-lights** files:"

#: ../../pyvista/docs/examples/04-lights/sg_execution_times.rst:11
msgid ":ref:`sphx_glr_examples_04-lights_shadows.py` (``shadows.py``)"
msgstr ":ref:`sphx_glr_examples_04-lights_shadows.py` (``shadows.py``)"

#: ../../pyvista/docs/examples/04-lights/sg_execution_times.rst:11
msgid "00:04.783"
msgstr "00:04.783"

#: ../../pyvista/docs/examples/04-lights/sg_execution_times.rst:13
msgid ""
":ref:`sphx_glr_examples_04-lights_plotter_builtins.py` "
"(``plotter_builtins.py``)"
msgstr ""
":ref:`sphx_glr_examples_04-lights_plotter_builtins.py` "
"(``plotter_builtins.py``)"

#: ../../pyvista/docs/examples/04-lights/sg_execution_times.rst:13
msgid "00:03.776"
msgstr "00:03.776"

#: ../../pyvista/docs/examples/04-lights/sg_execution_times.rst:15
msgid ":ref:`sphx_glr_examples_04-lights_actors.py` (``actors.py``)"
msgstr ":ref:`sphx_glr_examples_04-lights_actors.py` (``actors.py``)"

#: ../../pyvista/docs/examples/04-lights/sg_execution_times.rst:15
msgid "00:02.203"
msgstr "00:02.203"

#: ../../pyvista/docs/examples/04-lights/sg_execution_times.rst:17
msgid ":ref:`sphx_glr_examples_04-lights_attenuation.py` (``attenuation.py``)"
msgstr ""
":ref:`sphx_glr_examples_04-lights_attenuation.py` (``attenuation.py``)"

#: ../../pyvista/docs/examples/04-lights/sg_execution_times.rst:19
msgid ":ref:`sphx_glr_examples_04-lights_beam_shape.py` (``beam_shape.py``)"
msgstr ":ref:`sphx_glr_examples_04-lights_beam_shape.py` (``beam_shape.py``)"

#: ../../pyvista/docs/examples/04-lights/sg_execution_times.rst:21
msgid ":ref:`sphx_glr_examples_04-lights_light_types.py` (``light_types.py``)"
msgstr ""
":ref:`sphx_glr_examples_04-lights_light_types.py` (``light_types.py``)"

#: ../../pyvista/docs/examples/04-lights/sg_execution_times.rst:23
msgid ""
":ref:`sphx_glr_examples_04-lights_mesh_lighting.py` (``mesh_lighting.py``)"
msgstr ""
":ref:`sphx_glr_examples_04-lights_mesh_lighting.py` (``mesh_lighting.py``)"

#: ../../pyvista/docs/examples/04-lights/shadows.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_04-lights_shadows.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_04-lights_shadows.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/04-lights/shadows.rst:22
msgid "Shadows"
msgstr "シャドウ"

#: ../../pyvista/docs/examples/04-lights/shadows.rst:24
msgid "Demonstrate the usage of lights and shadows in PyVista."
msgstr "PyVistaでのライトとシャドウの使用方法をデモンストレーションします．"

#: ../../pyvista/docs/examples/04-lights/shadows.rst:50
msgid "Using two lights, plot the Stanford Dragon with shadows."
msgstr "2つのライトを使用して，影をつけたStanford Dragonをプロットします．"

#: ../../pyvista/docs/examples/04-lights/shadows.rst:53
msgid ""
"VTK has known issues when rendering shadows on certain window sizes.  Be "
"prepared to experiment with the ``window_size`` parameter.  An initial "
"window size of ``(1000, 1000)`` seems to work well, which can be manually "
"resized without issue."
msgstr ""
"特定のウィンドウサイズでシャドウをレンダリングする場合，VTKに既知の問題があります． ``window_size`` "
"パラメータを試してみることをお勧めします． ``(1000, 1000)`` "
"の初期ウィンドウサイズは，問題なく手動でサイズ変更できるため，正常に動作するようです．"

#: ../../pyvista/docs/examples/04-lights/shadows.rst:130
msgid ""
"Show light penetrating several planes.  Adjust the light intensity and the "
"``shadow_attenuation`` to change how many planes the light can go through."
msgstr ""
"複数の平面を貫通するライトを表示します．ライトの強度と ``shadow_attenuation`` "
"を調整して，ライトが通過できる平面の数を変更します．"

#: ../../pyvista/docs/examples/04-lights/shadows.rst:181
msgid ""
"Here, we use a lower shadow_attenuation value to demonstrate how the light "
"can travel through more planes."
msgstr "ここでは，より低い shadow_attenuation 値を使用して，ライトがより多くの面を通過する方法を示します．"

#: ../../pyvista/docs/examples/04-lights/shadows.rst:231
msgid "**Total running time of the script:** ( 0 minutes  4.783 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  4.783 seconds)"

#: ../../pyvista/docs/examples/04-lights/shadows.rst:246
msgid ":download:`Download Python source code: shadows.py <shadows.py>`"
msgstr ":download:`Download Python source code: shadows.py <shadows.py>`"

#: ../../pyvista/docs/examples/04-lights/shadows.rst:252
msgid ":download:`Download Jupyter notebook: shadows.ipynb <shadows.ipynb>`"
msgstr ":download:`Download Jupyter notebook: shadows.ipynb <shadows.ipynb>`"

#: ../../pyvista/docs/examples/99-advanced/antarctica-compare.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_99-advanced_antarctica-"
"compare.py>` to download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_99-advanced_antarctica-"
"compare.py>` to download the full example code"

#: ../../pyvista/docs/examples/99-advanced/antarctica-compare.rst:22
msgid "Compare Field Across Mesh Regions"
msgstr "メッシュ領域間でフィールドを比較"

#: ../../pyvista/docs/examples/99-advanced/antarctica-compare.rst:24
msgid ""
"Here is some velocity data from a glacier modelling simulation that is "
"compared across nodes in the simulation. We have simplified the mesh to have"
" the simulation node value already on the mesh."
msgstr ""
"氷河モデリングシミュレーションの速度データをシミュレーションのノード間で比較したものです．メッシュを簡略化して，シミュレーションノードの値がすでにメッシュ上にあるようにしました．"

#: ../../pyvista/docs/examples/99-advanced/antarctica-compare.rst:28
msgid ""
"This was originally posted to `pyvista/pyvista-support#83 "
"<https://github.com/pyvista/pyvista-support/issues/83>`_."
msgstr ""
"これは元々 `pyvista/pyvista-support#83 <https://github.com/pyvista/pyvista-"
"support/issues/83>`_ に投稿されました．"

#: ../../pyvista/docs/examples/99-advanced/antarctica-compare.rst:30
msgid ""
"The modeling results are courtesy of `Urruty Benoit "
"<https://github.com/BenoitURRUTY>`_ and  are from the `Elmer/Ice "
"<http://elmerice.elmerfem.org>`_ simulation software."
msgstr ""
"モデリング結果は`Urruty Benoit <https://github.com/BenoitURRUTY>`_ の好意により `Elmer/Ice"
" <http://elmerice.elmerfem.org>`_ シミュレーションソフトウェアから得たものである．"

#: ../../pyvista/docs/examples/99-advanced/antarctica-compare.rst:54
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>1106948</td></tr>\n"
"<tr><td>N Points</td><td>557470</td></tr>\n"
"<tr><td>X Bounds</td><td>-2.506e+06, 2.743e+06</td></tr>\n"
"<tr><td>Y Bounds</td><td>-2.143e+06, 2.240e+06</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 0.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>3</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>ssavelocity</b></td><td>Points</td><td>float64</td><td>3</td><td>-4.341e+03</td><td>9.677e+03</td></tr>\n"
"<tr><td>node_value</td><td>Points</td><td>int64</td><td>1</td><td>0.000e+00</td><td>2.300e+01</td></tr>\n"
"<tr><td>magnitude</td><td>Points</td><td>float64</td><td>1</td><td>6.649e-03</td><td>1.013e+04</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>1106948</td></tr>\n"
"<tr><td>N Points</td><td>557470</td></tr>\n"
"<tr><td>X Bounds</td><td>-2.506e+06, 2.743e+06</td></tr>\n"
"<tr><td>Y Bounds</td><td>-2.143e+06, 2.240e+06</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 0.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>3</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>ssavelocity</b></td><td>Points</td><td>float64</td><td>3</td><td>-4.341e+03</td><td>9.677e+03</td></tr>\n"
"<tr><td>node_value</td><td>Points</td><td>int64</td><td>1</td><td>0.000e+00</td><td>2.300e+01</td></tr>\n"
"<tr><td>magnitude</td><td>Points</td><td>float64</td><td>1</td><td>6.649e-03</td><td>1.013e+04</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/docs/examples/99-advanced/antarctica-compare.rst:83
msgid ""
"Here is a helper to extract regions of the mesh based on the simulation "
"node."
msgstr "ここには，シミュレーションノードに基づいてメッシュの領域を抽出するヘルパーがあります．"

#: ../../pyvista/docs/examples/99-advanced/antarctica-compare.rst:214
msgid "plot vectors without mesh"
msgstr "メッシュなしでベクトルをプロット"

#: ../../pyvista/docs/examples/99-advanced/antarctica-compare.rst:253
msgid ""
"Compare directions. Normalize them so we can get a reasonable direction "
"comparison."
msgstr "方向を比較します．適切な方向比較ができるように正規化します．"

#: ../../pyvista/docs/examples/99-advanced/antarctica-compare.rst:301
msgid "flow_a that agrees with the mean flow path of flow_b"
msgstr "flow_b の平均流路と一致する flow_a"

#: ../../pyvista/docs/examples/99-advanced/antarctica-compare.rst:371
msgid "**Total running time of the script:** ( 0 minutes  13.182 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  13.182 seconds)"

#: ../../pyvista/docs/examples/99-advanced/antarctica-compare.rst:386
msgid ""
":download:`Download Python source code: antarctica-compare.py <antarctica-"
"compare.py>`"
msgstr ""
":download:`Download Python source code: antarctica-compare.py <antarctica-"
"compare.py>`"

#: ../../pyvista/docs/examples/99-advanced/antarctica-compare.rst:392
msgid ""
":download:`Download Jupyter notebook: antarctica-compare.ipynb <antarctica-"
"compare.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: antarctica-compare.ipynb <antarctica-"
"compare.ipynb>`"

#: ../../pyvista/docs/examples/99-advanced/ray-trace.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_99-advanced_ray-trace.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_99-advanced_ray-trace.py>` to "
"download the full example code"

#: ../../pyvista/docs/examples/99-advanced/ray-trace.rst:84
msgid "**Total running time of the script:** ( 0 minutes  0.360 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  0.360 seconds)"

#: ../../pyvista/docs/examples/99-advanced/ray-trace.rst:99
msgid ":download:`Download Python source code: ray-trace.py <ray-trace.py>`"
msgstr ":download:`Download Python source code: ray-trace.py <ray-trace.py>`"

#: ../../pyvista/docs/examples/99-advanced/ray-trace.rst:105
msgid ""
":download:`Download Jupyter notebook: ray-trace.ipynb <ray-trace.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: ray-trace.ipynb <ray-trace.ipynb>`"

#: ../../pyvista/docs/examples/99-advanced/sg_execution_times.rst:8
msgid "**00:13.182** total execution time for **examples_99-advanced** files:"
msgstr ""
"**00:13.182** total execution time for **examples_99-advanced** files:"

#: ../../pyvista/docs/examples/99-advanced/sg_execution_times.rst:11
msgid ""
":ref:`sphx_glr_examples_99-advanced_antarctica-compare.py` (``antarctica-"
"compare.py``)"
msgstr ""
":ref:`sphx_glr_examples_99-advanced_antarctica-compare.py` (``antarctica-"
"compare.py``)"

#: ../../pyvista/docs/examples/99-advanced/sg_execution_times.rst:11
msgid "00:13.182"
msgstr "00:13.182"

#: ../../pyvista/docs/examples/99-advanced/sg_execution_times.rst:13
msgid ":ref:`sphx_glr_examples_99-advanced_ray-trace.py` (``ray-trace.py``)"
msgstr ":ref:`sphx_glr_examples_99-advanced_ray-trace.py` (``ray-trace.py``)"

#: ../../pyvista/docs/examples/99-advanced/sg_execution_times.rst:15
msgid ""
":ref:`sphx_glr_examples_99-advanced_warp-by-vector-eigenmodes.py` (``warp-"
"by-vector-eigenmodes.py``)"
msgstr ""
":ref:`sphx_glr_examples_99-advanced_warp-by-vector-eigenmodes.py` (``warp-"
"by-vector-eigenmodes.py``)"

#: ../../pyvista/docs/examples/99-advanced/warp-by-vector-eigenmodes.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_99-advanced_warp-by-vector-"
"eigenmodes.py>` to download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_99-advanced_warp-by-vector-"
"eigenmodes.py>` to download the full example code"

#: ../../pyvista/docs/examples/99-advanced/warp-by-vector-eigenmodes.rst:22
msgid "Displaying eigenmodes of vibration using ``warp_by_vector``"
msgstr "``warp_by_vector`` を用いた振動固有モードの表示"

#: ../../pyvista/docs/examples/99-advanced/warp-by-vector-eigenmodes.rst:24
msgid ""
"This example applies the ``warp_by_vector`` filter to a cube whose "
"eigenmodes have been computed using the Ritz method, as outlined in "
"Visscher, William M., Albert Migliori, Thomas M. Bell, et Robert A. Reinert."
" « On the normal modes of free vibration of inhomogeneous and anisotropic "
"elastic objects ». The Journal of the Acoustical Society of America 90, nᵒ 4"
" (october 1991): 2154‑62. https://doi.org/10.1121/1.401643."
msgstr ""
"この例は，Visscher, William M., Albert Migliori, Thomas M.Bell, et Robert "
"A.Reinertで概説されているように，固有モードがRitz法を使用して計算された立方体に ``warp_by_vector`` "
"フィルタを適用します．« On the normal modes of free vibration of inhomogeneous and "
"anisotropic elastic objects ». The Journal of the Acoustical Society of "
"America 90, nᵒ 4 (october 1991): 2154‑62. https://doi.org/10.1121/1.401643."

#: ../../pyvista/docs/examples/99-advanced/warp-by-vector-eigenmodes.rst:34
msgid ""
"First, let's solve the eigenvalue problem for a vibrating cube. We use a "
"crude approximation (by choosing a low max polynomial order) to get a fast "
"computation."
msgstr "まず，振動する立方体の固有値問題を解く．高速計算を得るために(低い最大多項式次数を選択した)粗近似を用いました．"

#: ../../pyvista/docs/examples/99-advanced/warp-by-vector-eigenmodes.rst:222
msgid "Now, let's display a mode on a mesh of the cube."
msgstr "次に，立方体のメッシュにモードを表示します．"

#: ../../pyvista/docs/examples/99-advanced/warp-by-vector-eigenmodes.rst:291
msgid "Finally, let's make a gallery of the first 8 unique eigenmodes."
msgstr "最後に，最初の8つの固有モードのギャラリーを作成します．"

#: ../../pyvista/docs/examples/99-advanced/warp-by-vector-eigenmodes.rst:335
msgid "**Total running time of the script:** ( 0 minutes  16.779 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  16.779 seconds)"

#: ../../pyvista/docs/examples/99-advanced/warp-by-vector-eigenmodes.rst:350
msgid ""
":download:`Download Python source code: warp-by-vector-eigenmodes.py <warp-"
"by-vector-eigenmodes.py>`"
msgstr ""
":download:`Download Python source code: warp-by-vector-eigenmodes.py <warp-"
"by-vector-eigenmodes.py>`"

#: ../../pyvista/docs/examples/99-advanced/warp-by-vector-eigenmodes.rst:356
msgid ""
":download:`Download Jupyter notebook: warp-by-vector-eigenmodes.ipynb <warp-"
"by-vector-eigenmodes.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: warp-by-vector-eigenmodes.ipynb <warp-"
"by-vector-eigenmodes.ipynb>`"

#: ../../pyvista/docs/examples/index.rst:10
msgid "Examples"
msgstr "例"

#: ../../pyvista/docs/examples/index.rst:12
msgid ""
"Here is a gallery of several examples demonstrating what PyVista can do!"
msgstr "ここにPyVistaができることを示すいくつかの例のギャラリーがあります!"

#: ../../pyvista/docs/examples/index.rst:15
msgid "All of these examples are live and available on MyBinder."
msgstr "これらの例はすべて，MyBinderでライブで入手できます。"

#: ../../pyvista/docs/examples/index.rst:22
#: ../../pyvista/docs/examples/index.rst:398
#: ../../pyvista/docs/examples/index.rst:1094
#: ../../pyvista/docs/examples/index.rst:1814
#: ../../pyvista/docs/examples/index.rst:2006
#: ../../pyvista/docs/examples/index.rst:2177
#: ../../pyvista/docs/examples/index.rst:2255
msgid "<div class=\"sphx-glr-clear\"></div>"
msgstr "<div class=\"sphx-glr-clear\"></div>"

#: ../../pyvista/docs/examples/index.rst:31
msgid "Mesh Creation"
msgstr "メッシュ作成"

#: ../../pyvista/docs/examples/index.rst:33
msgid ""
"These examples demo how to read various file types into PyVista mesh "
"objects, create meshes from NumPy arrays, and how to create primitive "
"geometric objects like spheres, arrows, cubes, ellipsoids and more! Once a "
"mesh is loaded, it is ready for plotting with just a few lines of code - "
"explore these examples to get started with using PyVista for your data."
msgstr ""
"これらのサンプルでは，さまざまなファイルタイプをPyVistaメッシュオブジェクトに読み込んだり，NumPy配列からメッシュを作成したりする方法や，球，矢印，立方体，楕円体などのプリミティブジオメトリオブジェクトを作成する方法をデモしています．メッシュがロードされると，数行のコードでプロットできるようになります．データにPyVistaを使用する場合は，これらの例を参照してください．"

#: ../../pyvista/docs/examples/index.rst:42
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create an explicit "
"structured grid from NumPy arrays.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create an explicit "
"structured grid from NumPy arrays.\">"

#: ../../pyvista/docs/examples/index.rst:51
msgid ":ref:`sphx_glr_examples_00-load_create-explicit-structured-grid.py`"
msgstr ":ref:`sphx_glr_examples_00-load_create-explicit-structured-grid.py`"

#: ../../pyvista/docs/examples/index.rst:53
#: ../../pyvista/docs/examples/index.rst:74
#: ../../pyvista/docs/examples/index.rst:95
#: ../../pyvista/docs/examples/index.rst:116
#: ../../pyvista/docs/examples/index.rst:137
#: ../../pyvista/docs/examples/index.rst:158
#: ../../pyvista/docs/examples/index.rst:179
#: ../../pyvista/docs/examples/index.rst:200
#: ../../pyvista/docs/examples/index.rst:221
#: ../../pyvista/docs/examples/index.rst:242
#: ../../pyvista/docs/examples/index.rst:263
#: ../../pyvista/docs/examples/index.rst:284
#: ../../pyvista/docs/examples/index.rst:305
#: ../../pyvista/docs/examples/index.rst:326
#: ../../pyvista/docs/examples/index.rst:347
#: ../../pyvista/docs/examples/index.rst:368
#: ../../pyvista/docs/examples/index.rst:389
#: ../../pyvista/docs/examples/index.rst:434
#: ../../pyvista/docs/examples/index.rst:455
#: ../../pyvista/docs/examples/index.rst:476
#: ../../pyvista/docs/examples/index.rst:497
#: ../../pyvista/docs/examples/index.rst:518
#: ../../pyvista/docs/examples/index.rst:539
#: ../../pyvista/docs/examples/index.rst:560
#: ../../pyvista/docs/examples/index.rst:581
#: ../../pyvista/docs/examples/index.rst:602
#: ../../pyvista/docs/examples/index.rst:623
#: ../../pyvista/docs/examples/index.rst:644
#: ../../pyvista/docs/examples/index.rst:665
#: ../../pyvista/docs/examples/index.rst:686
#: ../../pyvista/docs/examples/index.rst:707
#: ../../pyvista/docs/examples/index.rst:728
#: ../../pyvista/docs/examples/index.rst:749
#: ../../pyvista/docs/examples/index.rst:770
#: ../../pyvista/docs/examples/index.rst:791
#: ../../pyvista/docs/examples/index.rst:812
#: ../../pyvista/docs/examples/index.rst:833
#: ../../pyvista/docs/examples/index.rst:854
#: ../../pyvista/docs/examples/index.rst:875
#: ../../pyvista/docs/examples/index.rst:896
#: ../../pyvista/docs/examples/index.rst:917
#: ../../pyvista/docs/examples/index.rst:938
#: ../../pyvista/docs/examples/index.rst:959
#: ../../pyvista/docs/examples/index.rst:980
#: ../../pyvista/docs/examples/index.rst:1001
#: ../../pyvista/docs/examples/index.rst:1022
#: ../../pyvista/docs/examples/index.rst:1043
#: ../../pyvista/docs/examples/index.rst:1064
#: ../../pyvista/docs/examples/index.rst:1085
#: ../../pyvista/docs/examples/index.rst:1133
#: ../../pyvista/docs/examples/index.rst:1154
#: ../../pyvista/docs/examples/index.rst:1175
#: ../../pyvista/docs/examples/index.rst:1196
#: ../../pyvista/docs/examples/index.rst:1217
#: ../../pyvista/docs/examples/index.rst:1238
#: ../../pyvista/docs/examples/index.rst:1259
#: ../../pyvista/docs/examples/index.rst:1280
#: ../../pyvista/docs/examples/index.rst:1301
#: ../../pyvista/docs/examples/index.rst:1322
#: ../../pyvista/docs/examples/index.rst:1343
#: ../../pyvista/docs/examples/index.rst:1364
#: ../../pyvista/docs/examples/index.rst:1385
#: ../../pyvista/docs/examples/index.rst:1406
#: ../../pyvista/docs/examples/index.rst:1427
#: ../../pyvista/docs/examples/index.rst:1448
#: ../../pyvista/docs/examples/index.rst:1469
#: ../../pyvista/docs/examples/index.rst:1490
#: ../../pyvista/docs/examples/index.rst:1511
#: ../../pyvista/docs/examples/index.rst:1532
#: ../../pyvista/docs/examples/index.rst:1553
#: ../../pyvista/docs/examples/index.rst:1574
#: ../../pyvista/docs/examples/index.rst:1595
#: ../../pyvista/docs/examples/index.rst:1616
#: ../../pyvista/docs/examples/index.rst:1637
#: ../../pyvista/docs/examples/index.rst:1658
#: ../../pyvista/docs/examples/index.rst:1679
#: ../../pyvista/docs/examples/index.rst:1700
#: ../../pyvista/docs/examples/index.rst:1721
#: ../../pyvista/docs/examples/index.rst:1742
#: ../../pyvista/docs/examples/index.rst:1763
#: ../../pyvista/docs/examples/index.rst:1784
#: ../../pyvista/docs/examples/index.rst:1805
#: ../../pyvista/docs/examples/index.rst:1850
#: ../../pyvista/docs/examples/index.rst:1871
#: ../../pyvista/docs/examples/index.rst:1892
#: ../../pyvista/docs/examples/index.rst:1913
#: ../../pyvista/docs/examples/index.rst:1934
#: ../../pyvista/docs/examples/index.rst:1955
#: ../../pyvista/docs/examples/index.rst:1976
#: ../../pyvista/docs/examples/index.rst:1997
#: ../../pyvista/docs/examples/index.rst:2042
#: ../../pyvista/docs/examples/index.rst:2063
#: ../../pyvista/docs/examples/index.rst:2084
#: ../../pyvista/docs/examples/index.rst:2105
#: ../../pyvista/docs/examples/index.rst:2126
#: ../../pyvista/docs/examples/index.rst:2147
#: ../../pyvista/docs/examples/index.rst:2168
#: ../../pyvista/docs/examples/index.rst:2204
#: ../../pyvista/docs/examples/index.rst:2225
#: ../../pyvista/docs/examples/index.rst:2246
msgid "</div>"
msgstr "</div>"

#: ../../pyvista/docs/examples/index.rst:63
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The &quot;Hello, "
"world!&quot; of VTK\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The &quot;Hello, "
"world!&quot; of VTK\">"

#: ../../pyvista/docs/examples/index.rst:72
msgid ":ref:`sphx_glr_examples_00-load_create-geometric-objects.py`"
msgstr ":ref:`sphx_glr_examples_00-load_create-geometric-objects.py`"

#: ../../pyvista/docs/examples/index.rst:84
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Creating parametric "
"objects\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Creating parametric "
"objects\">"

#: ../../pyvista/docs/examples/index.rst:93
msgid ""
":ref:`sphx_glr_examples_00-load_create-parametric-geometric-objects.py`"
msgstr ""
":ref:`sphx_glr_examples_00-load_create-parametric-geometric-objects.py`"

#: ../../pyvista/docs/examples/index.rst:105
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create a pyvista.PolyData "
"object from a point cloud of vertices and scalar arrays for those poi...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create a pyvista.PolyData "
"object from a point cloud of vertices and scalar arrays for those poi...\">"

#: ../../pyvista/docs/examples/index.rst:114
msgid ":ref:`sphx_glr_examples_00-load_create-point-cloud.py`"
msgstr ":ref:`sphx_glr_examples_00-load_create-point-cloud.py`"

#: ../../pyvista/docs/examples/index.rst:126
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Creating a PolyData "
"(triangulated surface) object from NumPy arrays of the vertices and "
"faces.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Creating a PolyData "
"(triangulated surface) object from NumPy arrays of the vertices and "
"faces.\">"

#: ../../pyvista/docs/examples/index.rst:135
msgid ":ref:`sphx_glr_examples_00-load_create-poly.py`"
msgstr ":ref:`sphx_glr_examples_00-load_create-poly.py`"

#: ../../pyvista/docs/examples/index.rst:147
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create a spline/polyline "
"from a numpy array of XYZ vertices\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create a spline/polyline "
"from a numpy array of XYZ vertices\">"

#: ../../pyvista/docs/examples/index.rst:156
msgid ":ref:`sphx_glr_examples_00-load_create-spline.py`"
msgstr ":ref:`sphx_glr_examples_00-load_create-spline.py`"

#: ../../pyvista/docs/examples/index.rst:168
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create a StructuredGrid "
"surface from NumPy arrays\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create a StructuredGrid "
"surface from NumPy arrays\">"

#: ../../pyvista/docs/examples/index.rst:177
msgid ":ref:`sphx_glr_examples_00-load_create-structured-surface.py`"
msgstr ":ref:`sphx_glr_examples_00-load_create-structured-surface.py`"

#: ../../pyvista/docs/examples/index.rst:189
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Drape a surface (2D array) "
"from a line in 3D space.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Drape a surface (2D array) "
"from a line in 3D space.\">"

#: ../../pyvista/docs/examples/index.rst:198
msgid ":ref:`sphx_glr_examples_00-load_create-surface-draped.py`"
msgstr ":ref:`sphx_glr_examples_00-load_create-surface-draped.py`"

#: ../../pyvista/docs/examples/index.rst:210
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create a surface from a set"
" of points through a Delaunay triangulation.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create a surface from a set"
" of points through a Delaunay triangulation.\">"

#: ../../pyvista/docs/examples/index.rst:219
msgid ":ref:`sphx_glr_examples_00-load_create-tri-surface.py`"
msgstr ":ref:`sphx_glr_examples_00-load_create-tri-surface.py`"

#: ../../pyvista/docs/examples/index.rst:231
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create a simple uniform "
"grid from a 3D NumPy array of values.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create a simple uniform "
"grid from a 3D NumPy array of values.\">"

#: ../../pyvista/docs/examples/index.rst:240
msgid ":ref:`sphx_glr_examples_00-load_create-uniform-grid.py`"
msgstr ":ref:`sphx_glr_examples_00-load_create-uniform-grid.py`"

#: ../../pyvista/docs/examples/index.rst:252
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create an irregular, "
"unstructured grid from NumPy arrays.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create an irregular, "
"unstructured grid from NumPy arrays.\">"

#: ../../pyvista/docs/examples/index.rst:261
msgid ":ref:`sphx_glr_examples_00-load_create-unstructured-surface.py`"
msgstr ":ref:`sphx_glr_examples_00-load_create-unstructured-surface.py`"

#: ../../pyvista/docs/examples/index.rst:273
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"PyVista leverages `meshio`_"
" to read many mesh formats not natively supported by VTK including t...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"PyVista leverages `meshio`_"
" to read many mesh formats not natively supported by VTK including t...\">"

#: ../../pyvista/docs/examples/index.rst:282
msgid ":ref:`sphx_glr_examples_00-load_read-dolfin.py`"
msgstr ":ref:`sphx_glr_examples_00-load_read-dolfin.py`"

#: ../../pyvista/docs/examples/index.rst:294
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Read a dataset from a known"
" file type.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Read a dataset from a known"
" file type.\">"

#: ../../pyvista/docs/examples/index.rst:303
msgid ":ref:`sphx_glr_examples_00-load_read-file.py`"
msgstr ":ref:`sphx_glr_examples_00-load_read-file.py`"

#: ../../pyvista/docs/examples/index.rst:315
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Read and plot image files "
"(JPEG, TIFF, PNG, etc).\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Read and plot image files "
"(JPEG, TIFF, PNG, etc).\">"

#: ../../pyvista/docs/examples/index.rst:324
msgid ":ref:`sphx_glr_examples_00-load_read-image.py`"
msgstr ":ref:`sphx_glr_examples_00-load_read-image.py`"

#: ../../pyvista/docs/examples/index.rst:336
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The VTK library supports "
"parallel file formats. Reading meshes broken up into several files is ...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The VTK library supports "
"parallel file formats. Reading meshes broken up into several files is ...\">"

#: ../../pyvista/docs/examples/index.rst:345
msgid ":ref:`sphx_glr_examples_00-load_read-parallel.py`"
msgstr ":ref:`sphx_glr_examples_00-load_read-parallel.py`"

#: ../../pyvista/docs/examples/index.rst:357
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Use a topographic surface "
"to create a 3D terrain-following mesh.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Use a topographic surface "
"to create a 3D terrain-following mesh.\">"

#: ../../pyvista/docs/examples/index.rst:366
msgid ":ref:`sphx_glr_examples_00-load_terrain-mesh.py`"
msgstr ":ref:`sphx_glr_examples_00-load_terrain-mesh.py`"

#: ../../pyvista/docs/examples/index.rst:378
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"- numpy arrays - "
"trimesh.Trimesh meshes - VTK objects\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"- numpy arrays - "
"trimesh.Trimesh meshes - VTK objects\">"

#: ../../pyvista/docs/examples/index.rst:387
msgid ":ref:`sphx_glr_examples_00-load_wrap-trimesh.py`"
msgstr ":ref:`sphx_glr_examples_00-load_wrap-trimesh.py`"

#: ../../pyvista/docs/examples/index.rst:407
msgid "Filtering"
msgstr "フィルタリング"

#: ../../pyvista/docs/examples/index.rst:409
msgid ""
"These examples show case various mesh analysis and filtering routines "
"present in the :ref:`filters_ref` module. Explore these demos to perform "
"tasks such as:"
msgstr ""
"これらの例は :ref:`filters_ref` "
"モジュールに存在する様々なメッシュ解析とフィルタリングルーチンの事例を示します．次のようなタスクを実行するには，これらのデモを参照してください．"

#: ../../pyvista/docs/examples/index.rst:412
msgid "Slicing and cutting meshes"
msgstr "メッシュのスライスとカット"

#: ../../pyvista/docs/examples/index.rst:413
msgid "Computing mesh properties like volume, area, and surface normals"
msgstr "ボリューム，領域，サーフェス法線などのメッシュプロパティの計算"

#: ../../pyvista/docs/examples/index.rst:414
msgid "Mesh decimation"
msgstr "メッシュ間引き"

#: ../../pyvista/docs/examples/index.rst:415
msgid "Extract regions of one mesh using another mesh's surface"
msgstr "別のメッシュのサーフェスを使用して1つのメッシュの領域を抽出します"

#: ../../pyvista/docs/examples/index.rst:416
msgid "Ray tracing through surface meshes"
msgstr "サーフェスメッシュを使用したレイトレーシング"

#: ../../pyvista/docs/examples/index.rst:417
msgid "Resampling and interpolating scalar/vector values across meshes"
msgstr "メッシュ間のスカラー/ベクトル値のリサンプリングと補間"

#: ../../pyvista/docs/examples/index.rst:418
msgid "Integrating a vector field to generate streamlines"
msgstr "ベクトルフィールドを積分して，流線を生成します．"

#: ../../pyvista/docs/examples/index.rst:419
msgid "Smoothing surfaces"
msgstr "サーフェスをスムージングする"

#: ../../pyvista/docs/examples/index.rst:423
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Perform boolean operations "
"with closed surfaces (intersect, cut, etc.).\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Perform boolean operations "
"with closed surfaces (intersect, cut, etc.).\">"

#: ../../pyvista/docs/examples/index.rst:432
msgid ":ref:`sphx_glr_examples_01-filter_boolean-operations.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_boolean-operations.py`"

#: ../../pyvista/docs/examples/index.rst:444
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Extract the coordinates of "
"the centers of all cells/faces in a mesh.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Extract the coordinates of "
"the centers of all cells/faces in a mesh.\">"

#: ../../pyvista/docs/examples/index.rst:453
msgid ":ref:`sphx_glr_examples_01-filter_cell-centers.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_cell-centers.py`"

#: ../../pyvista/docs/examples/index.rst:465
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Clip any PyVista dataset by"
" a pyvista.PolyData surface mesh using the pyvista.DataSet.Filters.c...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Clip any PyVista dataset by"
" a pyvista.PolyData surface mesh using the pyvista.DataSet.Filters.c...\">"

#: ../../pyvista/docs/examples/index.rst:474
msgid ":ref:`sphx_glr_examples_01-filter_clipping-with-surface.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_clipping-with-surface.py`"

#: ../../pyvista/docs/examples/index.rst:486
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Clip/cut any dataset using "
"using planes or boxes.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Clip/cut any dataset using "
"using planes or boxes.\">"

#: ../../pyvista/docs/examples/index.rst:495
msgid ":ref:`sphx_glr_examples_01-filter_clipping.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_clipping.py`"

#: ../../pyvista/docs/examples/index.rst:507
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\" Compute normals on a "
"surface.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\" Compute normals on a "
"surface.\">"

#: ../../pyvista/docs/examples/index.rst:516
msgid ":ref:`sphx_glr_examples_01-filter_compute-normals.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_compute-normals.py`"

#: ../../pyvista/docs/examples/index.rst:528
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\" Calculate mass properties "
"such as the volume or area of datasets\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\" Calculate mass properties "
"such as the volume or area of datasets\">"

#: ../../pyvista/docs/examples/index.rst:537
msgid ":ref:`sphx_glr_examples_01-filter_compute-volume.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_compute-volume.py`"

#: ../../pyvista/docs/examples/index.rst:549
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Use the connectivity filter"
" to remove noisy isosurfaces.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Use the connectivity filter"
" to remove noisy isosurfaces.\">"

#: ../../pyvista/docs/examples/index.rst:558
msgid ":ref:`sphx_glr_examples_01-filter_connectivity.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_connectivity.py`"

#: ../../pyvista/docs/examples/index.rst:570
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Generate iso-lines or "
"-surfaces for the scalars of a surface or volume.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Generate iso-lines or "
"-surfaces for the scalars of a surface or volume.\">"

#: ../../pyvista/docs/examples/index.rst:579
msgid ":ref:`sphx_glr_examples_01-filter_contouring.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_contouring.py`"

#: ../../pyvista/docs/examples/index.rst:591
msgid "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Decimate a mesh\">"
msgstr "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Decimate a mesh\">"

#: ../../pyvista/docs/examples/index.rst:600
msgid ":ref:`sphx_glr_examples_01-filter_decimate.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_decimate.py`"

#: ../../pyvista/docs/examples/index.rst:612
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Compute the average "
"thickness between two surfaces.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Compute the average "
"thickness between two surfaces.\">"

#: ../../pyvista/docs/examples/index.rst:621
msgid ":ref:`sphx_glr_examples_01-filter_distance-between-surfaces.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_distance-between-surfaces.py`"

#: ../../pyvista/docs/examples/index.rst:633
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Extract the cells in a mesh"
" that exist inside or outside a closed surface of another mesh\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Extract the cells in a mesh"
" that exist inside or outside a closed surface of another mesh\">"

#: ../../pyvista/docs/examples/index.rst:642
msgid ":ref:`sphx_glr_examples_01-filter_extract-cells-inside-surface.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_extract-cells-inside-surface.py`"

#: ../../pyvista/docs/examples/index.rst:654
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Extracts edges from a "
"surface.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Extracts edges from a "
"surface.\">"

#: ../../pyvista/docs/examples/index.rst:663
msgid ":ref:`sphx_glr_examples_01-filter_extract-edges.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_extract-edges.py`"

#: ../../pyvista/docs/examples/index.rst:675
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"You can extract the surface"
" of nearly any object within pyvista using the extract_surface filte...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"You can extract the surface"
" of nearly any object within pyvista using the extract_surface filte...\">"

#: ../../pyvista/docs/examples/index.rst:684
msgid ":ref:`sphx_glr_examples_01-filter_extract-surface.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_extract-surface.py`"

#: ../../pyvista/docs/examples/index.rst:696
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This takes polygonal data "
"as input and generates polygonal data on output. The input dataset is...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This takes polygonal data "
"as input and generates polygonal data on output. The input dataset is...\">"

#: ../../pyvista/docs/examples/index.rst:705
msgid ":ref:`sphx_glr_examples_01-filter_extrude-rotate.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_extrude-rotate.py`"

#: ../../pyvista/docs/examples/index.rst:717
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Perform a Gaussian "
"convolution on a uniformly gridded data set.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Perform a Gaussian "
"convolution on a uniformly gridded data set.\">"

#: ../../pyvista/docs/examples/index.rst:726
msgid ":ref:`sphx_glr_examples_01-filter_gaussian-smoothing.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_gaussian-smoothing.py`"

#: ../../pyvista/docs/examples/index.rst:738
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Calculates the geodesic "
"path between two vertices using Dijkstra&#x27;s algorithm\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Calculates the geodesic "
"path between two vertices using Dijkstra&#x27;s algorithm\">"

#: ../../pyvista/docs/examples/index.rst:747
msgid ":ref:`sphx_glr_examples_01-filter_geodesic.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_geodesic.py`"

#: ../../pyvista/docs/examples/index.rst:759
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Use vectors in a dataset to"
" plot and orient glyphs/geometric objects.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Use vectors in a dataset to"
" plot and orient glyphs/geometric objects.\">"

#: ../../pyvista/docs/examples/index.rst:768
msgid ":ref:`sphx_glr_examples_01-filter_glyphs.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_glyphs.py`"

#: ../../pyvista/docs/examples/index.rst:780
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"vtk supports tables of "
"glyphs from which glyphs are looked up. This example demonstrates this "
"f...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"vtk supports tables of "
"glyphs from which glyphs are looked up. This example demonstrates this "
"f...\">"

#: ../../pyvista/docs/examples/index.rst:789
msgid ":ref:`sphx_glr_examples_01-filter_glyphs_table.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_glyphs_table.py`"

#: ../../pyvista/docs/examples/index.rst:801
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Estimate the gradient of a "
"scalar or vector field in a data set.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Estimate the gradient of a "
"scalar or vector field in a data set.\">"

#: ../../pyvista/docs/examples/index.rst:810
msgid ":ref:`sphx_glr_examples_01-filter_gradients.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_gradients.py`"

#: ../../pyvista/docs/examples/index.rst:822
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Interpolate one mesh&#x27;s"
" point/cell arrays onto another mesh&#x27;s nodes using a Gaussian "
"Kernel.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Interpolate one mesh&#x27;s"
" point/cell arrays onto another mesh&#x27;s nodes using a Gaussian "
"Kernel.\">"

#: ../../pyvista/docs/examples/index.rst:831
msgid ":ref:`sphx_glr_examples_01-filter_interpolate.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_interpolate.py`"

#: ../../pyvista/docs/examples/index.rst:843
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Leverage a powerful VTK "
"algorithm for computing mesh quality.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Leverage a powerful VTK "
"algorithm for computing mesh quality.\">"

#: ../../pyvista/docs/examples/index.rst:852
msgid ":ref:`sphx_glr_examples_01-filter_mesh-quality.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_mesh-quality.py`"

#: ../../pyvista/docs/examples/index.rst:864
#: ../../pyvista/docs/examples/index.rst:2214
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Single line segment ray "
"tracing for PolyData objects.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Single line segment ray "
"tracing for PolyData objects.\">"

#: ../../pyvista/docs/examples/index.rst:873
msgid ":ref:`sphx_glr_examples_01-filter_poly-ray-trace.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_poly-ray-trace.py`"

#: ../../pyvista/docs/examples/index.rst:885
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"pyvista.PolyData surfaces "
"and pointsets can easily be projected to a plane defined by a normal ...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"pyvista.PolyData surfaces "
"and pointsets can easily be projected to a plane defined by a normal ...\">"

#: ../../pyvista/docs/examples/index.rst:894
msgid ":ref:`sphx_glr_examples_01-filter_project-plane.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_project-plane.py`"

#: ../../pyvista/docs/examples/index.rst:906
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example reflects a "
"mesh across a plane.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example reflects a "
"mesh across a plane.\">"

#: ../../pyvista/docs/examples/index.rst:915
msgid ":ref:`sphx_glr_examples_01-filter_reflect.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_reflect.py`"

#: ../../pyvista/docs/examples/index.rst:927
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Resample one mesh&#x27;s "
"point/cell arrays onto another mesh&#x27;s nodes.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Resample one mesh&#x27;s "
"point/cell arrays onto another mesh&#x27;s nodes.\">"

#: ../../pyvista/docs/examples/index.rst:936
msgid ":ref:`sphx_glr_examples_01-filter_resample.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_resample.py`"

#: ../../pyvista/docs/examples/index.rst:948
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Extract thin planar slices "
"from a volume\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Extract thin planar slices "
"from a volume\">"

#: ../../pyvista/docs/examples/index.rst:957
msgid ":ref:`sphx_glr_examples_01-filter_slicing.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_slicing.py`"

#: ../../pyvista/docs/examples/index.rst:969
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Integrate a vector field to"
" generate streamlines.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Integrate a vector field to"
" generate streamlines.\">"

#: ../../pyvista/docs/examples/index.rst:978
msgid ":ref:`sphx_glr_examples_01-filter_streamlines.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_streamlines.py`"

#: ../../pyvista/docs/examples/index.rst:990
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Increase the number of "
"triangles in a single, connected triangular mesh.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Increase the number of "
"triangles in a single, connected triangular mesh.\">"

#: ../../pyvista/docs/examples/index.rst:999
msgid ":ref:`sphx_glr_examples_01-filter_subdivide.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_subdivide.py`"

#: ../../pyvista/docs/examples/index.rst:1011
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Smoothing rough edges of a "
"surface mesh\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Smoothing rough edges of a "
"surface mesh\">"

#: ../../pyvista/docs/examples/index.rst:1020
msgid ":ref:`sphx_glr_examples_01-filter_surface-smoothing.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_surface-smoothing.py`"

#: ../../pyvista/docs/examples/index.rst:1032
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Using common filters like "
"thresholding and clipping\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Using common filters like "
"thresholding and clipping\">"

#: ../../pyvista/docs/examples/index.rst:1041
msgid ":ref:`sphx_glr_examples_01-filter_using-filters.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_using-filters.py`"

#: ../../pyvista/docs/examples/index.rst:1053
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create a voxel model (like "
"legos) of a closed surface or volumetric mesh.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create a voxel model (like "
"legos) of a closed surface or volumetric mesh.\">"

#: ../../pyvista/docs/examples/index.rst:1062
msgid ":ref:`sphx_glr_examples_01-filter_voxelize.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_voxelize.py`"

#: ../../pyvista/docs/examples/index.rst:1074
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example applies the "
"warp_by_vector filter to a sphere mesh that has 3D displacement vector...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example applies the "
"warp_by_vector filter to a sphere mesh that has 3D displacement vector...\">"

#: ../../pyvista/docs/examples/index.rst:1083
msgid ":ref:`sphx_glr_examples_01-filter_warp-by-vector.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_warp-by-vector.py`"

#: ../../pyvista/docs/examples/index.rst:1103
msgid "Plotting"
msgstr "プロット"

#: ../../pyvista/docs/examples/index.rst:1105
msgid ""
"These examples show case many of the possibilities for altering how you "
"display spatial data. Explore these examples to learn how to leverage our "
"powerful 3D plotting routines to perform tasks like:"
msgstr ""
"これらの例は，空間データの表示方法を変更する可能性の多くを示しています．次のようなタスクを実行するために，強力な3 "
"Dプロットルーチンを活用する方法については，これらの例を参照してください．"

#: ../../pyvista/docs/examples/index.rst:1109
msgid "Color mapping scalar values with ``matplotlib`` colormaps"
msgstr "``matplotlib`` カラーマップを持つカラーマッピングスカラー値"

#: ../../pyvista/docs/examples/index.rst:1110
msgid "Creating animations as GIFs or movie files"
msgstr "GIFまたはムービーファイルとしてアニメーションを作成します"

#: ../../pyvista/docs/examples/index.rst:1111
msgid "Showing the edges and nodes of different mesh types"
msgstr "異なるメッシュタイプのエッジとノードを表示する"

#: ../../pyvista/docs/examples/index.rst:1112
msgid ""
"Use sophisticated lighting techniques like smooth shading or Eye Dome "
"Lighting"
msgstr "スムースシェーディングやアイドームライティングなどの洗練されたライティングテクニックを使用する"

#: ../../pyvista/docs/examples/index.rst:1113
msgid ""
"Glyph a vector or scalar field on a mesh (place/orient a mesh on anther "
"mesh's nodes and scale/orient based on data values)"
msgstr ""
"メッシュ上のベクトルフィールドまたはスカラーフィールドをグリフします(別のメッシュのノードにメッシュを配置/方向設定し，データ値に基づいてスケール/方向設定します．)"

#: ../../pyvista/docs/examples/index.rst:1114
msgid "Label points in 3D space along side your meshes"
msgstr "メッシュの側面に沿って3 D空間でポイントにラベルを付けます"

#: ../../pyvista/docs/examples/index.rst:1115
msgid "Creating side-by-side comparisons"
msgstr "並列比較の作成"

#: ../../pyvista/docs/examples/index.rst:1116
msgid "Making a dataset transparent or using a scalar value to map opacity"
msgstr "データセットを透明にする，またはスカラー値を使用して不透明度をマップします"

#: ../../pyvista/docs/examples/index.rst:1117
msgid "Adding textures/images draped over a mesh (texture mapping)"
msgstr "メッシュ上にまとったテクスチャ/イメージを追加する(テクスチャマッピング)"

#: ../../pyvista/docs/examples/index.rst:1118
msgid "Rendering a depth image"
msgstr "デプスイメージをレンダーする"

#: ../../pyvista/docs/examples/index.rst:1122
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Add a background image with"
" add_background_image\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Add a background image with"
" add_background_image\">"

#: ../../pyvista/docs/examples/index.rst:1131
msgid ":ref:`sphx_glr_examples_02-plot_background_image.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_background_image.py`"

#: ../../pyvista/docs/examples/index.rst:1143
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example demonstrates "
"how to remove elements from a scene.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example demonstrates "
"how to remove elements from a scene.\">"

#: ../../pyvista/docs/examples/index.rst:1152
msgid ":ref:`sphx_glr_examples_02-plot_clear.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_clear.py`"

#: ../../pyvista/docs/examples/index.rst:1164
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Use a Matplotlib, Colorcet,"
" cmocean, or custom colormap when plotting scalar values.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Use a Matplotlib, Colorcet,"
" cmocean, or custom colormap when plotting scalar values.\">"

#: ../../pyvista/docs/examples/index.rst:1173
msgid ":ref:`sphx_glr_examples_02-plot_cmap.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_cmap.py`"

#: ../../pyvista/docs/examples/index.rst:1185
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Depth peeling is a "
"technique to correctly render translucent geometry. This is not enabled by "
"d...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Depth peeling is a "
"technique to correctly render translucent geometry. This is not enabled by "
"d...\">"

#: ../../pyvista/docs/examples/index.rst:1194
msgid ":ref:`sphx_glr_examples_02-plot_depth-peeling.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_depth-peeling.py`"

#: ../../pyvista/docs/examples/index.rst:1206
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Show the edges of all "
"geometries within a mesh\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Show the edges of all "
"geometries within a mesh\">"

#: ../../pyvista/docs/examples/index.rst:1215
msgid ":ref:`sphx_glr_examples_02-plot_edges.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_edges.py`"

#: ../../pyvista/docs/examples/index.rst:1227
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Eye-Dome Lighting (EDL) is "
"a non-photorealistic, image-based shading technique designed to impr...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Eye-Dome Lighting (EDL) is "
"a non-photorealistic, image-based shading technique designed to impr...\">"

#: ../../pyvista/docs/examples/index.rst:1236
msgid ":ref:`sphx_glr_examples_02-plot_edl.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_edl.py`"

#: ../../pyvista/docs/examples/index.rst:1248
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Add a floor/wall at the "
"boundary of the rendering scene.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Add a floor/wall at the "
"boundary of the rendering scene.\">"

#: ../../pyvista/docs/examples/index.rst:1257
msgid ":ref:`sphx_glr_examples_02-plot_floors.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_floors.py`"

#: ../../pyvista/docs/examples/index.rst:1269
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Specify specific cells to "
"hide when plotting.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Specify specific cells to "
"hide when plotting.\">"

#: ../../pyvista/docs/examples/index.rst:1278
msgid ":ref:`sphx_glr_examples_02-plot_ghost-cells.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_ghost-cells.py`"

#: ../../pyvista/docs/examples/index.rst:1290
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Generate a moving gif from "
"an active plotter\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Generate a moving gif from "
"an active plotter\">"

#: ../../pyvista/docs/examples/index.rst:1299
msgid ":ref:`sphx_glr_examples_02-plot_gif.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_gif.py`"

#: ../../pyvista/docs/examples/index.rst:1311
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Plot a depth image as "
"viewed from a camera overlooking the &quot;hills&quot; example mesh.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Plot a depth image as "
"viewed from a camera overlooking the &quot;hills&quot; example mesh.\">"

#: ../../pyvista/docs/examples/index.rst:1320
msgid ":ref:`sphx_glr_examples_02-plot_image_depth.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_image_depth.py`"

#: ../../pyvista/docs/examples/index.rst:1332
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The add_mesh function has "
"an interpolate_before_map argument - this affects the way scalar data...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The add_mesh function has "
"an interpolate_before_map argument - this affects the way scalar data...\">"

#: ../../pyvista/docs/examples/index.rst:1341
msgid ":ref:`sphx_glr_examples_02-plot_interpolate-before-map.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_interpolate-before-map.py`"

#: ../../pyvista/docs/examples/index.rst:1353
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Make an animation of an "
"isovalue through a volumetric dataset\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Make an animation of an "
"isovalue through a volumetric dataset\">"

#: ../../pyvista/docs/examples/index.rst:1362
msgid ":ref:`sphx_glr_examples_02-plot_isovalue.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_isovalue.py`"

#: ../../pyvista/docs/examples/index.rst:1374
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Use string arrays in a "
"point set to label points\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Use string arrays in a "
"point set to label points\">"

#: ../../pyvista/docs/examples/index.rst:1383
msgid ":ref:`sphx_glr_examples_02-plot_labels.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_labels.py`"

#: ../../pyvista/docs/examples/index.rst:1395
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Control aspects of the "
"rendered mesh&#x27;s lighting such as Ambient, Diffuse, and Specular. These "
"o...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Control aspects of the "
"rendered mesh&#x27;s lighting such as Ambient, Diffuse, and Specular. These "
"o...\">"

#: ../../pyvista/docs/examples/index.rst:1404
msgid ":ref:`sphx_glr_examples_02-plot_lighting_mesh.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_lighting_mesh.py`"

#: ../../pyvista/docs/examples/index.rst:1416
msgid "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Linked Views in Subplots\">"
msgstr "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Linked Views in Subplots\">"

#: ../../pyvista/docs/examples/index.rst:1425
msgid ":ref:`sphx_glr_examples_02-plot_linked.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_linked.py`"

#: ../../pyvista/docs/examples/index.rst:1437
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create an animated MP4 "
"movie of a rendering scene.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create an animated MP4 "
"movie of a rendering scene.\">"

#: ../../pyvista/docs/examples/index.rst:1446
msgid ":ref:`sphx_glr_examples_02-plot_movie.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_movie.py`"

#: ../../pyvista/docs/examples/index.rst:1458
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\" Subplotting: having "
"multiple scenes in a single window\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\" Subplotting: having "
"multiple scenes in a single window\">"

#: ../../pyvista/docs/examples/index.rst:1467
msgid ":ref:`sphx_glr_examples_02-plot_multi-window.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_multi-window.py`"

#: ../../pyvista/docs/examples/index.rst:1479
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Plot a mesh&#x27;s scalar "
"array with an opacity transfer function or opacity mapping based on a "
"scal...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Plot a mesh&#x27;s scalar "
"array with an opacity transfer function or opacity mapping based on a "
"scal...\">"

#: ../../pyvista/docs/examples/index.rst:1488
msgid ":ref:`sphx_glr_examples_02-plot_opacity.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_opacity.py`"

#: ../../pyvista/docs/examples/index.rst:1500
msgid "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Orbit around a scene.\">"
msgstr "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Orbit around a scene.\">"

#: ../../pyvista/docs/examples/index.rst:1509
msgid ":ref:`sphx_glr_examples_02-plot_orbit.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_orbit.py`"

#: ../../pyvista/docs/examples/index.rst:1521
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"View three orthogonal "
"slices from a mesh.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"View three orthogonal "
"slices from a mesh.\">"

#: ../../pyvista/docs/examples/index.rst:1530
msgid ":ref:`sphx_glr_examples_02-plot_ortho-slices.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_ortho-slices.py`"

#: ../../pyvista/docs/examples/index.rst:1542
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"VTK 9 introduced Physically"
" Based Rendering (PBR) and we have exposed that functionality in PyV...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"VTK 9 introduced Physically"
" Based Rendering (PBR) and we have exposed that functionality in PyV...\">"

#: ../../pyvista/docs/examples/index.rst:1551
msgid ":ref:`sphx_glr_examples_02-plot_pbr.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_pbr.py`"

#: ../../pyvista/docs/examples/index.rst:1563
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Interpolate the scalars of "
"a dataset over a circular arc.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Interpolate the scalars of "
"a dataset over a circular arc.\">"

#: ../../pyvista/docs/examples/index.rst:1572
msgid ":ref:`sphx_glr_examples_02-plot_plot-over-circular-arc.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_plot-over-circular-arc.py`"

#: ../../pyvista/docs/examples/index.rst:1584
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Plot the values of a "
"dataset over a line through that dataset\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Plot the values of a "
"dataset over a line through that dataset\">"

#: ../../pyvista/docs/examples/index.rst:1593
msgid ":ref:`sphx_glr_examples_02-plot_plot-over-line.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_plot-over-line.py`"

#: ../../pyvista/docs/examples/index.rst:1605
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Walk through of all the "
"different capabilities of scalar bars and how a user can customize "
"scal...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Walk through of all the "
"different capabilities of scalar bars and how a user can customize "
"scal...\">"

#: ../../pyvista/docs/examples/index.rst:1614
msgid ":ref:`sphx_glr_examples_02-plot_scalar-bars.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_scalar-bars.py`"

#: ../../pyvista/docs/examples/index.rst:1626
msgid "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Saving Screenshots\">"
msgstr "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Saving Screenshots\">"

#: ../../pyvista/docs/examples/index.rst:1635
msgid ":ref:`sphx_glr_examples_02-plot_screenshot.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_screenshot.py`"

#: ../../pyvista/docs/examples/index.rst:1647
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Comparison of default, flat"
" shading vs. smooth shading.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Comparison of default, flat"
" shading vs. smooth shading.\">"

#: ../../pyvista/docs/examples/index.rst:1656
msgid ":ref:`sphx_glr_examples_02-plot_shading.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_shading.py`"

#: ../../pyvista/docs/examples/index.rst:1668
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Extract a subset of the "
"edges of a polygonal mesh to generate an outline (silhouette) of a "
"mesh...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Extract a subset of the "
"edges of a polygonal mesh to generate an outline (silhouette) of a "
"mesh...\">"

#: ../../pyvista/docs/examples/index.rst:1677
msgid ":ref:`sphx_glr_examples_02-plot_silhouette.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_silhouette.py`"

#: ../../pyvista/docs/examples/index.rst:1689
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Generate and visualize "
"meshes from data in longitude-latitude coordinates.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Generate and visualize "
"meshes from data in longitude-latitude coordinates.\">"

#: ../../pyvista/docs/examples/index.rst:1698
msgid ":ref:`sphx_glr_examples_02-plot_spherical.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_spherical.py`"

#: ../../pyvista/docs/examples/index.rst:1710
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Plot a mesh with an image "
"projected onto it as a texture.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Plot a mesh with an image "
"projected onto it as a texture.\">"

#: ../../pyvista/docs/examples/index.rst:1719
msgid ":ref:`sphx_glr_examples_02-plot_texture.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_texture.py`"

#: ../../pyvista/docs/examples/index.rst:1731
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"PyVista has a few coloring "
"themes for you to choose!\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"PyVista has a few coloring "
"themes for you to choose!\">"

#: ../../pyvista/docs/examples/index.rst:1740
msgid ":ref:`sphx_glr_examples_02-plot_themes.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_themes.py`"

#: ../../pyvista/docs/examples/index.rst:1752
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This is very similar to the"
" ref_texture_example example except it is focused on plotting aerial...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This is very similar to the"
" ref_texture_example example except it is focused on plotting aerial...\">"

#: ../../pyvista/docs/examples/index.rst:1761
msgid ":ref:`sphx_glr_examples_02-plot_topo-map.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_topo-map.py`"

#: ../../pyvista/docs/examples/index.rst:1773
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Plot a single component of "
"a vector as a scalar array.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Plot a single component of "
"a vector as a scalar array.\">"

#: ../../pyvista/docs/examples/index.rst:1782
msgid ":ref:`sphx_glr_examples_02-plot_vector-component.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_vector-component.py`"

#: ../../pyvista/docs/examples/index.rst:1794
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Volume render uniform mesh "
"types like pyvista.UniformGrid or 3D NumPy arrays.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Volume render uniform mesh "
"types like pyvista.UniformGrid or 3D NumPy arrays.\">"

#: ../../pyvista/docs/examples/index.rst:1803
msgid ":ref:`sphx_glr_examples_02-plot_volume.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_volume.py`"

#: ../../pyvista/docs/examples/index.rst:1825
msgid "Widgets"
msgstr "ウィジェット"

#: ../../pyvista/docs/examples/index.rst:1827
msgid ""
"PyVista has several widgets that can be added to the rendering scene to "
"control filters like clipping, slicing, and thresholding - specifically "
"there are widgets to control the positions of boxes, planes, and lines or "
"slider bars which can all be highly customized through the use of custom "
"callback functions."
msgstr ""
"PyVistaには，クリッピング，スライス，および閾値などのフィルタを制御するためにレンダリングシーンに追加できるいくつかのウィジェットがあります．具体的には，ボックス，プレーン，およびラインまたはスライダバーの位置を制御するウィジェットがあり，これらはすべてカスタムコールバック関数を使用して高度にカスタマイズできます．"

#: ../../pyvista/docs/examples/index.rst:1833
msgid ""
"Here we'll take a look at the various widgets, some helper methods that "
"leverage those widgets to do common tasks, and demonstrate how to leverage "
"the widgets for user defined tasks and processing routines."
msgstr ""
"ここでは，さまざまなウィジェット，これらのウィジェットを利用して一般的なタスクを実行するヘルパー・メソッド，およびユーザー定義タスクと処理ルーチン用のウィジェットを利用する方法について説明します．"

#: ../../pyvista/docs/examples/index.rst:1839
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The box widget can be "
"enabled and disabled by the pyvista.WidgetHelper.add_box_widget and "
"pyvis...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The box widget can be "
"enabled and disabled by the pyvista.WidgetHelper.add_box_widget and "
"pyvis...\">"

#: ../../pyvista/docs/examples/index.rst:1848
msgid ":ref:`sphx_glr_examples_03-widgets_box-widget.py`"
msgstr ":ref:`sphx_glr_examples_03-widgets_box-widget.py`"

#: ../../pyvista/docs/examples/index.rst:1860
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Use a checkbox to turn "
"on/off the visibility of meshes in a scene.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Use a checkbox to turn "
"on/off the visibility of meshes in a scene.\">"

#: ../../pyvista/docs/examples/index.rst:1869
msgid ":ref:`sphx_glr_examples_03-widgets_checkbox-widget.py`"
msgstr ":ref:`sphx_glr_examples_03-widgets_checkbox-widget.py`"

#: ../../pyvista/docs/examples/index.rst:1881
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The line widget can be "
"enabled and disabled by the pyvista.WidgetHelper.add_line_widget and "
"pyv...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The line widget can be "
"enabled and disabled by the pyvista.WidgetHelper.add_line_widget and "
"pyv...\">"

#: ../../pyvista/docs/examples/index.rst:1890
msgid ":ref:`sphx_glr_examples_03-widgets_line-widget.py`"
msgstr ":ref:`sphx_glr_examples_03-widgets_line-widget.py`"

#: ../../pyvista/docs/examples/index.rst:1902
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Use a class based callback "
"to track multiple slider widgets for updating a single mesh.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Use a class based callback "
"to track multiple slider widgets for updating a single mesh.\">"

#: ../../pyvista/docs/examples/index.rst:1911
msgid ":ref:`sphx_glr_examples_03-widgets_multi-slider-widget.py`"
msgstr ":ref:`sphx_glr_examples_03-widgets_multi-slider-widget.py`"

#: ../../pyvista/docs/examples/index.rst:1923
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The plane widget can be "
"enabled and disabled by the pyvista.WidgetHelper.add_plane_widget and "
"p...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The plane widget can be "
"enabled and disabled by the pyvista.WidgetHelper.add_plane_widget and "
"p...\">"

#: ../../pyvista/docs/examples/index.rst:1932
msgid ":ref:`sphx_glr_examples_03-widgets_plane-widget.py`"
msgstr ":ref:`sphx_glr_examples_03-widgets_plane-widget.py`"

#: ../../pyvista/docs/examples/index.rst:1944
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The slider widget can be "
"enabled and disabled by the pyvista.WidgetHelper.add_slider_widget and...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The slider widget can be "
"enabled and disabled by the pyvista.WidgetHelper.add_slider_widget and...\">"

#: ../../pyvista/docs/examples/index.rst:1953
msgid ":ref:`sphx_glr_examples_03-widgets_slider-bar-widget.py`"
msgstr ":ref:`sphx_glr_examples_03-widgets_slider-bar-widget.py`"

#: ../../pyvista/docs/examples/index.rst:1965
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The sphere widget can be "
"enabled and disabled by the pyvista.WidgetHelper.add_sphere_widget and...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The sphere widget can be "
"enabled and disabled by the pyvista.WidgetHelper.add_sphere_widget and...\">"

#: ../../pyvista/docs/examples/index.rst:1974
msgid ":ref:`sphx_glr_examples_03-widgets_sphere-widget.py`"
msgstr ":ref:`sphx_glr_examples_03-widgets_sphere-widget.py`"

#: ../../pyvista/docs/examples/index.rst:1986
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\" A spline widget can be "
"enabled and disabled by the pyvista.WidgetHelper.add_spline_widget and "
"...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\" A spline widget can be "
"enabled and disabled by the pyvista.WidgetHelper.add_spline_widget and "
"...\">"

#: ../../pyvista/docs/examples/index.rst:1995
msgid ":ref:`sphx_glr_examples_03-widgets_spline-widget.py`"
msgstr ":ref:`sphx_glr_examples_03-widgets_spline-widget.py`"

#: ../../pyvista/docs/examples/index.rst:2017
msgid "Lighting"
msgstr "照明"

#: ../../pyvista/docs/examples/index.rst:2019
msgid ""
"These examples demonstrate how to take fine-tuned control over lighting "
"conditions in a scene. Explore them to learn how to go beyond the default "
"lighting setup to truly bring out the best of your visualization:"
msgstr ""
"これらの例は，シーン内の照明条件を微調整してコントロールする方法を示しています．既定の照明設定を超えて視覚効果を最大限に引き出す方法を学習するには，次のようにします:"

#: ../../pyvista/docs/examples/index.rst:2023
msgid "Choose between preset lighting systems for plotters"
msgstr "プロッタのプリセット照明システムを選択"

#: ../../pyvista/docs/examples/index.rst:2024
msgid "Disable lighting on the mesh level"
msgstr "メッシュレベルでライティングを無効にする"

#: ../../pyvista/docs/examples/index.rst:2025
msgid "Learn about the different light types"
msgstr "さまざまなライトタイプについて学習する"

#: ../../pyvista/docs/examples/index.rst:2026
msgid "Customize the shape of positional lights"
msgstr "ポジションライトの形をカスタマイズする"

#: ../../pyvista/docs/examples/index.rst:2027
msgid "Use actors to visualize the beams of spotlights"
msgstr "アクターを使用してスポットライトのビームを視覚化する"

#: ../../pyvista/docs/examples/index.rst:2031
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Positional lights in "
"PyVista have customizable beam shapes, see the "
"ref_light_beam_shape_exampl...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Positional lights in "
"PyVista have customizable beam shapes, see the "
"ref_light_beam_shape_exampl...\">"

#: ../../pyvista/docs/examples/index.rst:2040
msgid ":ref:`sphx_glr_examples_04-lights_actors.py`"
msgstr ":ref:`sphx_glr_examples_04-lights_actors.py`"

#: ../../pyvista/docs/examples/index.rst:2052
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Attenuation is the "
"phenomenon of light&#x27;s intensity being gradually dampened as it "
"propagates th...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Attenuation is the "
"phenomenon of light&#x27;s intensity being gradually dampened as it "
"propagates th...\">"

#: ../../pyvista/docs/examples/index.rst:2061
msgid ":ref:`sphx_glr_examples_04-lights_attenuation.py`"
msgstr ":ref:`sphx_glr_examples_04-lights_attenuation.py`"

#: ../../pyvista/docs/examples/index.rst:2073
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The default directional "
"lights are infinitely distant point sources, for which the only "
"geometr...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The default directional "
"lights are infinitely distant point sources, for which the only "
"geometr...\">"

#: ../../pyvista/docs/examples/index.rst:2082
msgid ":ref:`sphx_glr_examples_04-lights_beam_shape.py`"
msgstr ":ref:`sphx_glr_examples_04-lights_beam_shape.py`"

#: ../../pyvista/docs/examples/index.rst:2094
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Lights come in three "
"types:\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Lights come in three "
"types:\">"

#: ../../pyvista/docs/examples/index.rst:2103
msgid ":ref:`sphx_glr_examples_04-lights_light_types.py`"
msgstr ":ref:`sphx_glr_examples_04-lights_light_types.py`"

#: ../../pyvista/docs/examples/index.rst:2115
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"While plotters have a "
"default set of lights and there are many options for customizing "
"lighting...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"While plotters have a "
"default set of lights and there are many options for customizing "
"lighting...\">"

#: ../../pyvista/docs/examples/index.rst:2124
msgid ":ref:`sphx_glr_examples_04-lights_mesh_lighting.py`"
msgstr ":ref:`sphx_glr_examples_04-lights_mesh_lighting.py`"

#: ../../pyvista/docs/examples/index.rst:2136
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The pyvista.Plotter class "
"comes with three options for the default lighting system:\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The pyvista.Plotter class "
"comes with three options for the default lighting system:\">"

#: ../../pyvista/docs/examples/index.rst:2145
msgid ":ref:`sphx_glr_examples_04-lights_plotter_builtins.py`"
msgstr ":ref:`sphx_glr_examples_04-lights_plotter_builtins.py`"

#: ../../pyvista/docs/examples/index.rst:2157
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Demonstrate the usage of "
"lights and shadows in PyVista.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Demonstrate the usage of "
"lights and shadows in PyVista.\">"

#: ../../pyvista/docs/examples/index.rst:2166
msgid ":ref:`sphx_glr_examples_04-lights_shadows.py`"
msgstr ":ref:`sphx_glr_examples_04-lights_shadows.py`"

#: ../../pyvista/docs/examples/index.rst:2186
msgid "Advanced"
msgstr "詳細設定"

#: ../../pyvista/docs/examples/index.rst:2188
msgid ""
"Include here are few longer, more advanced examples from our users and "
"developers."
msgstr "ここでは，ユーザと開発者による，より長く，より高度な例をいくつか紹介します．"

#: ../../pyvista/docs/examples/index.rst:2193
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Here is some velocity data "
"from a glacier modelling simulation that is compared across nodes in...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Here is some velocity data "
"from a glacier modelling simulation that is compared across nodes in...\">"

#: ../../pyvista/docs/examples/index.rst:2202
msgid ":ref:`sphx_glr_examples_99-advanced_antarctica-compare.py`"
msgstr ":ref:`sphx_glr_examples_99-advanced_antarctica-compare.py`"

#: ../../pyvista/docs/examples/index.rst:2223
msgid ":ref:`sphx_glr_examples_99-advanced_ray-trace.py`"
msgstr ":ref:`sphx_glr_examples_99-advanced_ray-trace.py`"

#: ../../pyvista/docs/examples/index.rst:2235
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example applies the "
"warp_by_vector filter to a cube whose eigenmodes have been computed us...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example applies the "
"warp_by_vector filter to a cube whose eigenmodes have been computed us...\">"

#: ../../pyvista/docs/examples/index.rst:2244
msgid ":ref:`sphx_glr_examples_99-advanced_warp-by-vector-eigenmodes.py`"
msgstr ":ref:`sphx_glr_examples_99-advanced_warp-by-vector-eigenmodes.py`"

# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017-2023, The PyVista Developers
# This file is distributed under the same license as the PyVista package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Tetsuo Koyama <tkoyama010@gmail.com>, 2023
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyVista 0.43.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-10-17 01:08+0000\n"
"PO-Revision-Date: 2020-08-05 16:06+0000\n"
"Last-Translator: Tetsuo Koyama <tkoyama010@gmail.com>, 2023\n"
"Language-Team: Japanese (https://app.transifex.com/tkoyama010/teams/112279/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../pyvista/doc/source/examples/00-load/create-explicit-structured-grid.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_00-load_create-explicit-"
"structured-grid.py>` to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_00-load_create-explicit-"
"structured-grid.py>` をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/00-load/create-explicit-structured-grid.rst:24
msgid "Creating an Explicit Structured Grid"
msgstr "明示的な構造グリッドの作成"

#: ../../pyvista/doc/source/examples/00-load/create-explicit-structured-grid.rst:26
msgid "Create an explicit structured grid from NumPy arrays."
msgstr "NumPy配列から明示的な構造化グリッドを作成します．"

#: ../../pyvista/doc/source/examples/00-load/create-explicit-structured-grid.rst:79
msgid "**Total running time of the script:** (0 minutes 1.188 seconds)"
msgstr "**Total running time of the script:** (0 minutes 1.188 seconds)"

#: ../../pyvista/doc/source/examples/00-load/create-explicit-structured-grid.rst:93
msgid ""
":download:`Download Python source code: create-explicit-structured-grid.py "
"<create-explicit-structured-grid.py>`"
msgstr ""
":download:`Download Python source code: create-explicit-structured-grid.py "
"<create-explicit-structured-grid.py>`"

#: ../../pyvista/doc/source/examples/00-load/create-explicit-structured-grid.rst:97
msgid ""
":download:`Download Jupyter notebook: create-explicit-structured-grid.ipynb "
"<create-explicit-structured-grid.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: create-explicit-structured-grid.ipynb "
"<create-explicit-structured-grid.ipynb>`"

#: ../../pyvista/doc/source/examples/00-load/create-explicit-structured-grid.rst:104
#: ../../pyvista/doc/source/examples/00-load/create-geometric-objects.rst:143
#: ../../pyvista/doc/source/examples/00-load/create-kochanek-spline.rst:181
#: ../../pyvista/doc/source/examples/00-load/create-parametric-geometric-objects.rst:711
#: ../../pyvista/doc/source/examples/00-load/create-pixel-art.rst:192
#: ../../pyvista/doc/source/examples/00-load/create-platonic-solids.rst:170
#: ../../pyvista/doc/source/examples/00-load/create-point-cloud.rst:352
#: ../../pyvista/doc/source/examples/00-load/create-pointset.rst:172
#: ../../pyvista/doc/source/examples/00-load/create-poly.rst:174
#: ../../pyvista/doc/source/examples/00-load/create-polydata-strips.rst:311
#: ../../pyvista/doc/source/examples/00-load/create-polyhedron.rst:349
#: ../../pyvista/doc/source/examples/00-load/create-spline.rst:348
#: ../../pyvista/doc/source/examples/00-load/create-structured-surface.rst:372
#: ../../pyvista/doc/source/examples/00-load/create-surface-draped.rst:237
#: ../../pyvista/doc/source/examples/00-load/create-tri-surface.rst:302
#: ../../pyvista/doc/source/examples/00-load/create-truss.rst:172
#: ../../pyvista/doc/source/examples/00-load/create-uniform-grid.rst:165
#: ../../pyvista/doc/source/examples/00-load/create-unstructured-surface.rst:344
#: ../../pyvista/doc/source/examples/00-load/linear-cells.rst:412
#: ../../pyvista/doc/source/examples/00-load/load-gltf.rst:135
#: ../../pyvista/doc/source/examples/00-load/load-vrml.rst:102
#: ../../pyvista/doc/source/examples/00-load/read-dolfin.rst:158
#: ../../pyvista/doc/source/examples/00-load/read-file.rst:323
#: ../../pyvista/doc/source/examples/00-load/read-image.rst:138
#: ../../pyvista/doc/source/examples/00-load/read-parallel.rst:219
#: ../../pyvista/doc/source/examples/00-load/reader.rst:460
#: ../../pyvista/doc/source/examples/00-load/terrain-mesh.rst:295
#: ../../pyvista/doc/source/examples/00-load/wrap-trimesh.rst:177
#: ../../pyvista/doc/source/examples/01-filter/boolean-operations.rst:342
#: ../../pyvista/doc/source/examples/01-filter/cell-centers.rst:242
#: ../../pyvista/doc/source/examples/01-filter/clipping-with-surface.rst:248
#: ../../pyvista/doc/source/examples/01-filter/clipping.rst:316
#: ../../pyvista/doc/source/examples/01-filter/collisions.rst:165
#: ../../pyvista/doc/source/examples/01-filter/compute-normals.rst:173
#: ../../pyvista/doc/source/examples/01-filter/compute-volume.rst:520
#: ../../pyvista/doc/source/examples/01-filter/connectivity.rst:427
#: ../../pyvista/doc/source/examples/01-filter/contouring.rst:223
#: ../../pyvista/doc/source/examples/01-filter/decimate.rst:190
#: ../../pyvista/doc/source/examples/01-filter/distance-between-surfaces.rst:329
#: ../../pyvista/doc/source/examples/01-filter/extract-cells-inside-surface.rst:182
#: ../../pyvista/doc/source/examples/01-filter/extract-edges.rst:239
#: ../../pyvista/doc/source/examples/01-filter/extract-surface.rst:175
#: ../../pyvista/doc/source/examples/01-filter/extrude-rotate.rst:210
#: ../../pyvista/doc/source/examples/01-filter/extrude-trim.rst:315
#: ../../pyvista/doc/source/examples/01-filter/flying_edges.rst:240
#: ../../pyvista/doc/source/examples/01-filter/gaussian-smoothing.rst:173
#: ../../pyvista/doc/source/examples/01-filter/geodesic.rst:158
#: ../../pyvista/doc/source/examples/01-filter/glyphs.rst:222
#: ../../pyvista/doc/source/examples/01-filter/glyphs_table.rst:141
#: ../../pyvista/doc/source/examples/01-filter/gradients.rst:342
#: ../../pyvista/doc/source/examples/01-filter/image-fft-perlin-noise.rst:394
#: ../../pyvista/doc/source/examples/01-filter/image-fft.rst:280
#: ../../pyvista/doc/source/examples/01-filter/integrate-data.rst:314
#: ../../pyvista/doc/source/examples/01-filter/interpolate.rst:272
#: ../../pyvista/doc/source/examples/01-filter/mesh-quality.rst:142
#: ../../pyvista/doc/source/examples/01-filter/poly-ray-trace.rst:99
#: ../../pyvista/doc/source/examples/01-filter/project-plane.rst:111
#: ../../pyvista/doc/source/examples/01-filter/reflect.rst:132
#: ../../pyvista/doc/source/examples/01-filter/resample.rst:217
#: ../../pyvista/doc/source/examples/01-filter/rotate.rst:293
#: ../../pyvista/doc/source/examples/01-filter/sampling_functions_2d.rst:201
#: ../../pyvista/doc/source/examples/01-filter/sampling_functions_3d.rst:155
#: ../../pyvista/doc/source/examples/01-filter/slicing.rst:518
#: ../../pyvista/doc/source/examples/01-filter/streamlines.rst:404
#: ../../pyvista/doc/source/examples/01-filter/streamlines_2D.rst:254
#: ../../pyvista/doc/source/examples/01-filter/subdivide.rst:170
#: ../../pyvista/doc/source/examples/01-filter/surface-smoothing.rst:247
#: ../../pyvista/doc/source/examples/01-filter/surface_reconstruction.rst:137
#: ../../pyvista/doc/source/examples/01-filter/using-filters.rst:257
#: ../../pyvista/doc/source/examples/01-filter/voxelize.rst:284
#: ../../pyvista/doc/source/examples/01-filter/warp-by-vector.rst:126
#: ../../pyvista/doc/source/examples/02-plot/anti-aliasing.rst:307
#: ../../pyvista/doc/source/examples/02-plot/backface_props.rst:288
#: ../../pyvista/doc/source/examples/02-plot/background_image.rst:140
#: ../../pyvista/doc/source/examples/02-plot/blurring.rst:157
#: ../../pyvista/doc/source/examples/02-plot/bounds.rst:194
#: ../../pyvista/doc/source/examples/02-plot/chart_basics.rst:408
#: ../../pyvista/doc/source/examples/02-plot/chart_overlays.rst:184
#: ../../pyvista/doc/source/examples/02-plot/clear.rst:146
#: ../../pyvista/doc/source/examples/02-plot/cmap.rst:328
#: ../../pyvista/doc/source/examples/02-plot/color_cycler.rst:277
#: ../../pyvista/doc/source/examples/02-plot/composite-picking.rst:151
#: ../../pyvista/doc/source/examples/02-plot/depth-peeling.rst:205
#: ../../pyvista/doc/source/examples/02-plot/depth_of_field.rst:197
#: ../../pyvista/doc/source/examples/02-plot/distance-along-spline.rst:203
#: ../../pyvista/doc/source/examples/02-plot/distance_measurement.rst:88
#: ../../pyvista/doc/source/examples/02-plot/edges.rst:98
#: ../../pyvista/doc/source/examples/02-plot/edl.rst:247
#: ../../pyvista/doc/source/examples/02-plot/element-picking.rst:170
#: ../../pyvista/doc/source/examples/02-plot/floors.rst:86
#: ../../pyvista/doc/source/examples/02-plot/ghost-cells.rst:147
#: ../../pyvista/doc/source/examples/02-plot/gif.rst:162
#: ../../pyvista/doc/source/examples/02-plot/image_depth.rst:151
#: ../../pyvista/doc/source/examples/02-plot/interpolate-before-map.rst:285
#: ../../pyvista/doc/source/examples/02-plot/isovalue.rst:226
#: ../../pyvista/doc/source/examples/02-plot/labels.rst:268
#: ../../pyvista/doc/source/examples/02-plot/lighting_mesh.rst:229
#: ../../pyvista/doc/source/examples/02-plot/linked.rst:111
#: ../../pyvista/doc/source/examples/02-plot/lookup-table.rst:500
#: ../../pyvista/doc/source/examples/02-plot/mesh-picking.rst:185
#: ../../pyvista/doc/source/examples/02-plot/movie.rst:115
#: ../../pyvista/doc/source/examples/02-plot/movie_glyphs.rst:163
#: ../../pyvista/doc/source/examples/02-plot/moving_cmap.rst:138
#: ../../pyvista/doc/source/examples/02-plot/multi-window.rst:295
#: ../../pyvista/doc/source/examples/02-plot/opacity.rst:394
#: ../../pyvista/doc/source/examples/02-plot/orbit.rst:186
#: ../../pyvista/doc/source/examples/02-plot/ortho-slices.rst:177
#: ../../pyvista/doc/source/examples/02-plot/pbr.rst:204
#: ../../pyvista/doc/source/examples/02-plot/plot-over-circular-arc.rst:137
#: ../../pyvista/doc/source/examples/02-plot/plot-over-line.rst:200
#: ../../pyvista/doc/source/examples/02-plot/point-cell-scalars.rst:272
#: ../../pyvista/doc/source/examples/02-plot/point-clouds.rst:356
#: ../../pyvista/doc/source/examples/02-plot/point-picking.rst:193
#: ../../pyvista/doc/source/examples/02-plot/scalar-bars.rst:260
#: ../../pyvista/doc/source/examples/02-plot/screenshot.rst:126
#: ../../pyvista/doc/source/examples/02-plot/shading.rst:212
#: ../../pyvista/doc/source/examples/02-plot/silhouette.rst:247
#: ../../pyvista/doc/source/examples/02-plot/spherical.rst:279
#: ../../pyvista/doc/source/examples/02-plot/ssao.rst:275
#: ../../pyvista/doc/source/examples/02-plot/surface-picking.rst:135
#: ../../pyvista/doc/source/examples/02-plot/texture.rst:545
#: ../../pyvista/doc/source/examples/02-plot/themes.rst:540
#: ../../pyvista/doc/source/examples/02-plot/topo-map.rst:285
#: ../../pyvista/doc/source/examples/02-plot/vector-component.rst:139
#: ../../pyvista/doc/source/examples/02-plot/vertices.rst:219
#: ../../pyvista/doc/source/examples/02-plot/volume.rst:471
#: ../../pyvista/doc/source/examples/03-widgets/animation.rst:92
#: ../../pyvista/doc/source/examples/03-widgets/box-widget.rst:141
#: ../../pyvista/doc/source/examples/03-widgets/checkbox-widget.rst:190
#: ../../pyvista/doc/source/examples/03-widgets/clip-volume.rst:212
#: ../../pyvista/doc/source/examples/03-widgets/line-widget.rst:131
#: ../../pyvista/doc/source/examples/03-widgets/multi-slider-widget.rst:154
#: ../../pyvista/doc/source/examples/03-widgets/plane-widget.rst:325
#: ../../pyvista/doc/source/examples/03-widgets/slider-bar-widget.rst:190
#: ../../pyvista/doc/source/examples/03-widgets/sphere-widget.rst:297
#: ../../pyvista/doc/source/examples/03-widgets/spline-widget.rst:117
#: ../../pyvista/doc/source/examples/04-lights/actors.rst:188
#: ../../pyvista/doc/source/examples/04-lights/attenuation.rst:198
#: ../../pyvista/doc/source/examples/04-lights/beam_shape.rst:286
#: ../../pyvista/doc/source/examples/04-lights/light_types.rst:172
#: ../../pyvista/doc/source/examples/04-lights/mesh_lighting.rst:123
#: ../../pyvista/doc/source/examples/04-lights/plotter_builtins.rst:259
#: ../../pyvista/doc/source/examples/04-lights/shadows.rst:267
#: ../../pyvista/doc/source/examples/98-common/project-points-tessellate.rst:157
#: ../../pyvista/doc/source/examples/99-advanced/add-example.rst:454
#: ../../pyvista/doc/source/examples/99-advanced/antarctica-compare.rst:341
#: ../../pyvista/doc/source/examples/99-advanced/atomic-orbitals.rst:461
#: ../../pyvista/doc/source/examples/99-advanced/customization-trame-toolbar.rst:287
#: ../../pyvista/doc/source/examples/99-advanced/extending-pyvista.rst:464
#: ../../pyvista/doc/source/examples/99-advanced/fea-hertzian-contact-pressure.rst:322
#: ../../pyvista/doc/source/examples/99-advanced/magnetic-fields.rst:245
#: ../../pyvista/doc/source/examples/99-advanced/openfoam-cooling.rst:352
#: ../../pyvista/doc/source/examples/99-advanced/openfoam-example.rst:448
#: ../../pyvista/doc/source/examples/99-advanced/openfoam-tubes.rst:288
#: ../../pyvista/doc/source/examples/99-advanced/osmnx-example.rst:159
#: ../../pyvista/doc/source/examples/99-advanced/planets.rst:246
#: ../../pyvista/doc/source/examples/99-advanced/plotting-algorithms.rst:235
#: ../../pyvista/doc/source/examples/99-advanced/pump-bracket.rst:269
#: ../../pyvista/doc/source/examples/99-advanced/ray-trace-moeller.rst:241
#: ../../pyvista/doc/source/examples/99-advanced/ray-trace.rst:97
#: ../../pyvista/doc/source/examples/99-advanced/sphere_eversion.rst:359
#: ../../pyvista/doc/source/examples/99-advanced/warp-by-vector-eigenmodes.rst:353
#: ../../pyvista/doc/source/examples/index.rst:2969
msgid ""
"`Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_"
msgstr "`Sphinx-Galleryによるギャラリー <https://sphinx-gallery.github.io>`_"

#: ../../pyvista/doc/source/examples/00-load/create-geometric-objects.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_00-load_create-geometric-"
"objects.py>` to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_00-load_create-geometric-"
"objects.py>` をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/00-load/create-geometric-objects.rst:24
msgid "Geometric Objects"
msgstr "ジオメトリオブジェクト"

#: ../../pyvista/doc/source/examples/00-load/create-geometric-objects.rst:26
msgid "The \"Hello, world!\" of VTK"
msgstr "VTKの \"Hello, world!\""

#: ../../pyvista/doc/source/examples/00-load/create-geometric-objects.rst:43
msgid ""
"This runs through several of the available geometric objects available in "
"VTK which PyVista provides simple convenience methods for generating."
msgstr ""
"これは，VTKで利用可能ないくつかのジオメトリックオブジェクトを介して実行され，PyVistaは生成するための簡単で便利なメソッドを提供します．"

#: ../../pyvista/doc/source/examples/00-load/create-geometric-objects.rst:46
msgid "Let's run through creating a few geometric objects."
msgstr "ジオメトリオブジェクトをいくつか作成してみましょう．"

#: ../../pyvista/doc/source/examples/00-load/create-geometric-objects.rst:72
msgid "Now let's plot them all in one window"
msgstr "ここで，すべてを1つのウィンドウにプロットします．"

#: ../../pyvista/doc/source/examples/00-load/create-geometric-objects.rst:118
msgid "**Total running time of the script:** (0 minutes 0.624 seconds)"
msgstr "**Total running time of the script:** (0 minutes 0.624 seconds)"

#: ../../pyvista/doc/source/examples/00-load/create-geometric-objects.rst:132
msgid ""
":download:`Download Python source code: create-geometric-objects.py <create-"
"geometric-objects.py>`"
msgstr ""
":download:`Download Python source code: create-geometric-objects.py <create-"
"geometric-objects.py>`"

#: ../../pyvista/doc/source/examples/00-load/create-geometric-objects.rst:136
msgid ""
":download:`Download Jupyter notebook: create-geometric-objects.ipynb "
"<create-geometric-objects.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: create-geometric-objects.ipynb "
"<create-geometric-objects.ipynb>`"

#: ../../pyvista/doc/source/examples/00-load/create-kochanek-spline.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_00-load_create-kochanek-"
"spline.py>` to download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_00-load_create-kochanek-spline.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/00-load/create-kochanek-spline.rst:24
msgid "Create a Kochanek Spline"
msgstr "Kochanekスプラインの作成"

#: ../../pyvista/doc/source/examples/00-load/create-kochanek-spline.rst:26
msgid "Create a Kochanek spline/polyline from a numpy array of XYZ vertices."
msgstr "XYZ頂点の数の多い配列からKochanekスプライン/ポリラインを作成します．"

#: ../../pyvista/doc/source/examples/00-load/create-kochanek-spline.rst:46
#: ../../pyvista/doc/source/examples/00-load/create-spline.rst:47
msgid "Create a dataset to plot"
msgstr "プロットするデータセットを作成する"

#: ../../pyvista/doc/source/examples/00-load/create-kochanek-spline.rst:73
#: ../../pyvista/doc/source/examples/00-load/create-tri-surface.rst:74
#: ../../pyvista/doc/source/examples/00-load/create-truss.rst:91
#: ../../pyvista/doc/source/examples/00-load/read-parallel.rst:68
#: ../../pyvista/doc/source/examples/00-load/read-parallel.rst:90
#: ../../pyvista/doc/source/examples/00-load/reader.rst:71
#: ../../pyvista/doc/source/examples/00-load/reader.rst:120
#: ../../pyvista/doc/source/examples/00-load/reader.rst:149
#: ../../pyvista/doc/source/examples/00-load/reader.rst:180
#: ../../pyvista/doc/source/examples/00-load/reader.rst:217
#: ../../pyvista/doc/source/examples/00-load/reader.rst:247
#: ../../pyvista/doc/source/examples/00-load/reader.rst:281
#: ../../pyvista/doc/source/examples/00-load/reader.rst:384
#: ../../pyvista/doc/source/examples/01-filter/geodesic.rst:118
#: ../../pyvista/doc/source/examples/01-filter/integrate-data.rst:167
#: ../../pyvista/doc/source/examples/01-filter/integrate-data.rst:194
#: ../../pyvista/doc/source/examples/01-filter/integrate-data.rst:226
#: ../../pyvista/doc/source/examples/01-filter/integrate-data.rst:271
#: ../../pyvista/doc/source/examples/01-filter/rotate.rst:252
#: ../../pyvista/doc/source/examples/01-filter/streamlines_2D.rst:79
#: ../../pyvista/doc/source/examples/02-plot/bounds.rst:108
#: ../../pyvista/doc/source/examples/02-plot/distance-along-spline.rst:78
#: ../../pyvista/doc/source/examples/02-plot/distance-along-spline.rst:131
#: ../../pyvista/doc/source/examples/02-plot/opacity.rst:310
#: ../../pyvista/doc/source/examples/02-plot/ortho-slices.rst:47
#: ../../pyvista/doc/source/examples/03-widgets/box-widget.rst:94
#: ../../pyvista/doc/source/examples/03-widgets/slider-bar-widget.rst:92
#: ../../pyvista/doc/source/examples/99-advanced/extending-pyvista.rst:115
#: ../../pyvista/doc/source/examples/99-advanced/extending-pyvista.rst:149
#: ../../pyvista/doc/source/examples/99-advanced/extending-pyvista.rst:184
#: ../../pyvista/doc/source/examples/99-advanced/extending-pyvista.rst:215
#: ../../pyvista/doc/source/examples/99-advanced/extending-pyvista.rst:275
#: ../../pyvista/doc/source/examples/99-advanced/extending-pyvista.rst:309
#: ../../pyvista/doc/source/examples/99-advanced/extending-pyvista.rst:344
#: ../../pyvista/doc/source/examples/99-advanced/extending-pyvista.rst:382
#: ../../pyvista/doc/source/examples/99-advanced/openfoam-example.rst:85
#: ../../pyvista/doc/source/examples/99-advanced/openfoam-example.rst:115
#: ../../pyvista/doc/source/examples/99-advanced/openfoam-example.rst:141
#: ../../pyvista/doc/source/examples/99-advanced/openfoam-example.rst:178
#: ../../pyvista/doc/source/examples/99-advanced/openfoam-example.rst:222
#: ../../pyvista/doc/source/examples/99-advanced/openfoam-example.rst:273
#: ../../pyvista/doc/source/examples/99-advanced/openfoam-example.rst:322
msgid "Out:"
msgstr "出力:"

#: ../../pyvista/doc/source/examples/00-load/create-kochanek-spline.rst:88
msgid "Interpolate those points onto a parametric Kochanek spline"
msgstr "これらの点をパラメトリックなKochanekスプラインに補間します"

#: ../../pyvista/doc/source/examples/00-load/create-kochanek-spline.rst:153
msgid "**Total running time of the script:** ( 0 minutes  0.907 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  0.907 seconds)"

#: ../../pyvista/doc/source/examples/00-load/create-kochanek-spline.rst:168
msgid ""
":download:`Download Python source code: create-kochanek-spline.py <create-"
"kochanek-spline.py>`"
msgstr ""
":download:`Download Python source code: create-kochanek-spline.py <create-"
"kochanek-spline.py>`"

#: ../../pyvista/doc/source/examples/00-load/create-kochanek-spline.rst:174
msgid ""
":download:`Download Jupyter notebook: create-kochanek-spline.ipynb <create-"
"kochanek-spline.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: create-kochanek-spline.ipynb <create-"
"kochanek-spline.ipynb>`"

#: ../../pyvista/doc/source/examples/00-load/create-parametric-geometric-objects.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_00-load_create-parametric-"
"geometric-objects.py>` to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_00-load_create-parametric-"
"geometric-objects.py>` をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/00-load/create-parametric-geometric-objects.rst:24
msgid "Parametric Geometric Objects"
msgstr "パラメトリックジオメトリオブジェクト"

#: ../../pyvista/doc/source/examples/00-load/create-parametric-geometric-objects.rst:26
msgid "Creating parametric objects"
msgstr "パラメトリックオブジェクトを作成する"

#: ../../pyvista/doc/source/examples/00-load/create-parametric-geometric-objects.rst:46
msgid "This example demonstrates how to plot parametric objects using pyvista"
msgstr "この例では，pyvistaを使用してパラメトリックオブジェクトをプロットする方法を示します．"

#: ../../pyvista/doc/source/examples/00-load/create-parametric-geometric-objects.rst:49
msgid "Supertoroid"
msgstr "スーパートロイド"

#: ../../pyvista/doc/source/examples/00-load/create-parametric-geometric-objects.rst:74
msgid "Parametric Ellipsoid"
msgstr "パラメトリック楕円体"

#: ../../pyvista/doc/source/examples/00-load/create-parametric-geometric-objects.rst:101
msgid "Partial Parametric Ellipsoid"
msgstr "部分パラメトリック楕円体"

#: ../../pyvista/doc/source/examples/00-load/create-parametric-geometric-objects.rst:136
msgid "Pseudosphere"
msgstr "Pseudosphere"

#: ../../pyvista/doc/source/examples/00-load/create-parametric-geometric-objects.rst:161
msgid "Bohemian Dome"
msgstr "Bohemianドーム"

#: ../../pyvista/doc/source/examples/00-load/create-parametric-geometric-objects.rst:187
msgid "Bour"
msgstr "Bour"

#: ../../pyvista/doc/source/examples/00-load/create-parametric-geometric-objects.rst:212
msgid "Boy's Surface"
msgstr "Boyの表面"

#: ../../pyvista/doc/source/examples/00-load/create-parametric-geometric-objects.rst:237
msgid "Catalan Minimal"
msgstr "Catalan最小"

#: ../../pyvista/doc/source/examples/00-load/create-parametric-geometric-objects.rst:262
msgid "Conic Spiral"
msgstr "円錐スパイラル"

#: ../../pyvista/doc/source/examples/00-load/create-parametric-geometric-objects.rst:287
msgid "Cross Cap"
msgstr "クロスキャップ"

#: ../../pyvista/doc/source/examples/00-load/create-parametric-geometric-objects.rst:312
msgid "Dini"
msgstr "ディーニ"

#: ../../pyvista/doc/source/examples/00-load/create-parametric-geometric-objects.rst:337
msgid "Enneper"
msgstr "Enneper"

#: ../../pyvista/doc/source/examples/00-load/create-parametric-geometric-objects.rst:362
msgid "Figure-8 Klein"
msgstr "字形-8 Klein"

#: ../../pyvista/doc/source/examples/00-load/create-parametric-geometric-objects.rst:387
msgid "Henneberg"
msgstr "Henneberg"

#: ../../pyvista/doc/source/examples/00-load/create-parametric-geometric-objects.rst:412
msgid "Klein"
msgstr "Klein"

#: ../../pyvista/doc/source/examples/00-load/create-parametric-geometric-objects.rst:437
msgid "Kuen"
msgstr "Kuen"

#: ../../pyvista/doc/source/examples/00-load/create-parametric-geometric-objects.rst:462
msgid "Mobius"
msgstr "Mobius"

#: ../../pyvista/doc/source/examples/00-load/create-parametric-geometric-objects.rst:487
msgid "Plucker Conoid"
msgstr "Plucker Conoid"

#: ../../pyvista/doc/source/examples/00-load/create-parametric-geometric-objects.rst:513
msgid "Random Hills"
msgstr "ランダムな丘"

#: ../../pyvista/doc/source/examples/00-load/create-parametric-geometric-objects.rst:538
msgid "Roman"
msgstr "ローマン"

#: ../../pyvista/doc/source/examples/00-load/create-parametric-geometric-objects.rst:563
msgid "Super Ellipsoid"
msgstr "スーパー楕円体"

#: ../../pyvista/doc/source/examples/00-load/create-parametric-geometric-objects.rst:588
msgid "Torus"
msgstr "トーラス"

#: ../../pyvista/doc/source/examples/00-load/create-parametric-geometric-objects.rst:613
msgid "Circular Arc"
msgstr "円弧"

#: ../../pyvista/doc/source/examples/00-load/create-parametric-geometric-objects.rst:649
msgid "Extruded Half Arc"
msgstr "押し出し半円弧"

#: ../../pyvista/doc/source/examples/00-load/create-parametric-geometric-objects.rst:686
msgid "**Total running time of the script:** (0 minutes 11.980 seconds)"
msgstr "**Total running time of the script:** (0 minutes 11.980 seconds)"

#: ../../pyvista/doc/source/examples/00-load/create-parametric-geometric-objects.rst:700
msgid ""
":download:`Download Python source code: create-parametric-geometric-"
"objects.py <create-parametric-geometric-objects.py>`"
msgstr ""
":download:`Download Python source code: create-parametric-geometric-"
"objects.py <create-parametric-geometric-objects.py>`"

#: ../../pyvista/doc/source/examples/00-load/create-parametric-geometric-objects.rst:704
msgid ""
":download:`Download Jupyter notebook: create-parametric-geometric-"
"objects.ipynb <create-parametric-geometric-objects.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: create-parametric-geometric-"
"objects.ipynb <create-parametric-geometric-objects.ipynb>`"

#: ../../pyvista/doc/source/examples/00-load/create-pixel-art.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_00-load_create-pixel-art.py>` "
"to download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_00-load_create-pixel-art.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/00-load/create-pixel-art.rst:24
msgid "Pixel Art of ALIEN MONSTERS"
msgstr "ALIEN MONSTERSのピクセルアート"

#: ../../pyvista/doc/source/examples/00-load/create-pixel-art.rst:26
msgid ""
"Here we use :func:`pyvista.Box` to make `pixel art "
"<https://en.wikipedia.org/wiki/Pixel_art>`_. Pixel string `source "
"<https://commons.wikimedia.org/wiki/File:Noto_Emoji_Pie_1f47e.svg>`_ and "
"`license <https://github.com/googlefonts/noto-emoji/blob/main/LICENSE>`_."
msgstr ""
"ここでは， :func:`pyvista.Box` を使って， `ピクセルアート "
"<https://en.wikipedia.org/wiki/Pixel_art>`_ を作ります．ピクセル文字列 `ソース "
"<https://commons.wikimedia.org/wiki/File:Noto_Emoji_Pie_1f47e.svg>`_ と "
"`ライセンス <https://github.com/googlefonts/noto-emoji/blob/main/LICENSE>`_ ．"

#: ../../pyvista/doc/source/examples/00-load/create-pixel-art.rst:47
msgid "Convert pixel art to an array"
msgstr "ピクセルアートを配列に変換"

#: ../../pyvista/doc/source/examples/00-load/create-pixel-art.rst:88
msgid "Define function to draw pixels"
msgstr "ピクセルを描画する関数の定義"

#: ../../pyvista/doc/source/examples/00-load/create-pixel-art.rst:89
msgid "Define a helper function to add pixel boxes to plotter."
msgstr "プロッタにピクセルボックスを追加するヘルパー関数を定義します．"

#: ../../pyvista/doc/source/examples/00-load/create-pixel-art.rst:129
msgid "Now you can plot a pixel art of ALIEN MONSTERS."
msgstr "ALIEN MONSTERS のピクセルアートを描くことができます．"

#: ../../pyvista/doc/source/examples/00-load/create-pixel-art.rst:169
msgid "**Total running time of the script:** ( 0 minutes  1.089 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.089 seconds)"

#: ../../pyvista/doc/source/examples/00-load/create-pixel-art.rst:181
msgid ""
":download:`Download Python source code: create-pixel-art.py <create-pixel-"
"art.py>`"
msgstr ""
":download:`Download Python source code: create-pixel-art.py <create-pixel-"
"art.py>`"

#: ../../pyvista/doc/source/examples/00-load/create-pixel-art.rst:185
msgid ""
":download:`Download Jupyter notebook: create-pixel-art.ipynb <create-pixel-"
"art.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: create-pixel-art.ipynb <create-pixel-"
"art.ipynb>`"

#: ../../pyvista/doc/source/examples/00-load/create-platonic-solids.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_00-load_create-platonic-"
"solids.py>` to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_00-load_create-platonic-"
"solids.py>` をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/00-load/create-platonic-solids.rst:24
msgid "Platonic Solids"
msgstr "プラトン立体"

#: ../../pyvista/doc/source/examples/00-load/create-platonic-solids.rst:26
msgid ""
"PyVista wraps the ``vtk.vtkPlatonicSolidSource`` filter as "
":func:`pyvista.PlatonicSolid`."
msgstr ""
"PyVistaでは， ``vtk.vtkPlatonicSolidSource`` フィルタを "
":func:`pyvista.PlatonicSolid` としてラップしています．"

#: ../../pyvista/doc/source/examples/00-load/create-platonic-solids.rst:47
msgid ""
"We can either use the generic :func:`PlatonicSolid() "
"<pyvista.PlatonicSolid>` and specify the different kinds of solids to "
"generate, or we can use the thin wrappers:"
msgstr ""
"一般的な :func:`PlatonicSolid() <pyvista.PlatonicSolid>` "
"を使って，生成するさまざまな種類の固体を指定することもできますし，薄いラッパーを使うこともできます．"

#: ../../pyvista/doc/source/examples/00-load/create-platonic-solids.rst:51
msgid ":func:`pyvista.Tetrahedron`"
msgstr ":func:`pyvista.Tetrahedron`"

#: ../../pyvista/doc/source/examples/00-load/create-platonic-solids.rst:52
msgid ":func:`pyvista.Octahedron`"
msgstr ":func:`pyvista.Octahedron`"

#: ../../pyvista/doc/source/examples/00-load/create-platonic-solids.rst:53
msgid ":func:`pyvista.Dodecahedron`"
msgstr ":func:`pyvista.Dodecahedron`"

#: ../../pyvista/doc/source/examples/00-load/create-platonic-solids.rst:54
msgid ":func:`pyvista.Icosahedron`"
msgstr ":func:`pyvista.Icosahedron`"

#: ../../pyvista/doc/source/examples/00-load/create-platonic-solids.rst:55
msgid ":func:`pyvista.Cube` (implemented via a different filter)"
msgstr ":func:`pyvista.Cube` (別のフィルタで実装)"

#: ../../pyvista/doc/source/examples/00-load/create-platonic-solids.rst:57
msgid ""
"Let's generate all the Platonic solids, along with the :func:`teapotahedron "
"<pyvista.examples.downloads.download_teapot>`."
msgstr ""
"すべてのプラトン立体を， :func:`teapotahedron "
"<pyvista.examples.downloads.download_teapot>` と共に生成してみましょう．"

#: ../../pyvista/doc/source/examples/00-load/create-platonic-solids.rst:99
msgid "Now let's plot them all."
msgstr "ここで，すべてをプロットします．"

#: ../../pyvista/doc/source/examples/00-load/create-platonic-solids.rst:102
#: ../../pyvista/doc/source/examples/04-lights/shadows.rst:72
msgid ""
"VTK has known issues when rendering shadows on certain window sizes.  Be "
"prepared to experiment with the ``window_size`` parameter.  An initial "
"window size of ``(1000, 1000)`` seems to work well, which can be manually "
"resized without issue."
msgstr ""
"特定のウィンドウサイズでシャドウをレンダリングする場合，VTKに既知の問題があります． ``window_size`` "
"パラメータを試してみることをお勧めします． ``(1000, 1000)`` "
"の初期ウィンドウサイズは，問題なく手動でサイズ変更できるため，正常に動作するようです．"

#: ../../pyvista/doc/source/examples/00-load/create-platonic-solids.rst:139
msgid ""
"The Platonic solids come with cell scalars that index each face of the "
"solids."
msgstr "プラトン立体には，立体の各面にインデックスを付けるセルスカラーが付いています．"

#: ../../pyvista/doc/source/examples/00-load/create-platonic-solids.rst:145
msgid "**Total running time of the script:** ( 0 minutes  1.346 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.346 seconds)"

#: ../../pyvista/doc/source/examples/00-load/create-platonic-solids.rst:159
msgid ""
":download:`Download Python source code: create-platonic-solids.py <create-"
"platonic-solids.py>`"
msgstr ""
":download:`Download Python source code: create-platonic-solids.py <create-"
"platonic-solids.py>`"

#: ../../pyvista/doc/source/examples/00-load/create-platonic-solids.rst:163
msgid ""
":download:`Download Jupyter notebook: create-platonic-solids.ipynb <create-"
"platonic-solids.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: create-platonic-solids.ipynb <create-"
"platonic-solids.ipynb>`"

#: ../../pyvista/doc/source/examples/00-load/create-point-cloud.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_00-load_create-point-"
"cloud.py>` to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_00-load_create-point-"
"cloud.py>` をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/00-load/create-point-cloud.rst:24
msgid "Create Point Cloud"
msgstr "点群を作成"

#: ../../pyvista/doc/source/examples/00-load/create-point-cloud.rst:26
msgid ""
"Create a :class:`pyvista.PolyData` object from a point cloud of vertices and"
" scalar arrays for those points."
msgstr "頂点のポイントクラウドとそれらのポイントのスカラー配列から :class:`pyvista.PolyData` オブジェクトを作成します．"

#: ../../pyvista/doc/source/examples/00-load/create-point-cloud.rst:48
msgid ""
"Point clouds are generally constructed in the :class:`pyvista.PolyData` "
"class and can easily have scalar/vector data arrays associated with the "
"point cloud. In this example, we'll work a bit backwards using a point cloud"
" that that is available from our ``examples`` module. This however is no "
"different than creating a PyVista mesh with your own NumPy arrays of vertice"
" locations."
msgstr ""
"点群は一般に :class:`pyvista.PolyData` "
"クラスで構成され，点群に関連付けられたスカラー/ベクトルデータ配列を簡単に持つことができます．この例では， ``examples`` "
"モジュールから使用可能な点群を使用して，少し逆方向に作業します．ただし，これは独自の頂点位置のNumPy配列を使用してPyVistaメッシュを作成するのと同じです．"

#: ../../pyvista/doc/source/examples/00-load/create-point-cloud.rst:92
msgid ""
"Now that you have a NumPy array of points/vertices either from our sample "
"data or your own project, creating a PyVista mesh of those points is simply:"
msgstr ""
"サンプルデータまたは独自のプロジェクトからポイント/頂点のNumPy配列を取得したので，これらのポイントのPyVistaメッシュを作成するのは簡単です．"

#: ../../pyvista/doc/source/examples/00-load/create-point-cloud.rst:107
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"\n"
"<table style='width: 100%;'>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>67841</td></tr>\n"
"<tr><td>N Points</td><td>67841</td></tr>\n"
"<tr><td>N Strips</td><td>0</td></tr>\n"
"<tr><td>X Bounds</td><td>4.809e+05, 4.811e+05</td></tr>\n"
"<tr><td>Y Bounds</td><td>4.400e+06, 4.400e+06</td></tr>\n"
"<tr><td>Z Bounds</td><td>1.754e+03, 1.784e+03</td></tr>\n"
"<tr><td>N Arrays</td><td>0</td></tr>\n"
"</table>\n"
"\n"
"\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"\n"
"<table style='width: 100%;'>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>67841</td></tr>\n"
"<tr><td>N Points</td><td>67841</td></tr>\n"
"<tr><td>N Strips</td><td>0</td></tr>\n"
"<tr><td>X Bounds</td><td>4.809e+05, 4.811e+05</td></tr>\n"
"<tr><td>Y Bounds</td><td>4.400e+06, 4.400e+06</td></tr>\n"
"<tr><td>Z Bounds</td><td>1.754e+03, 1.784e+03</td></tr>\n"
"<tr><td>N Arrays</td><td>0</td></tr>\n"
"</table>\n"
"\n"
"\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/00-load/create-point-cloud.rst:129
msgid "And we can even do a sanity check"
msgstr "健全性のチェックもできます"

#: ../../pyvista/doc/source/examples/00-load/create-point-cloud.rst:152
msgid ""
"And now that we have a PyVista mesh, we can plot it. Note that we add an "
"option to use eye dome lighting - this is a shading technique to improve "
"depth perception with point clouds (learn more in :ref:`edl`)."
msgstr ""
"これでPyVistaメッシュができたので，プロットすることができます．ここでは，eye "
"domeライティングを使用するオプションを追加します．これは，ポイントクラウド( :ref:`edl` "
"についてもっと学ぶ)を使用して深さの認識を向上させるシェーディング技法です．"

#: ../../pyvista/doc/source/examples/00-load/create-point-cloud.rst:176
msgid ""
"Now what if you have data attributes (scalar/vector arrays) that you'd like "
"to associate with every node of your mesh? You can easily add NumPy data "
"arrays that have a length equal to the number of points in the mesh along "
"the first axis. For example, lets add a few arrays to this new "
"``point_cloud`` mesh."
msgstr ""
"ここで，メッシュのすべてのノードに関連付けるデータアトリビュート(スカラー/ベクトル配列)があるとします．最初の軸に沿ったメッシュ内の点の数と同じ長さのNumPyデータ配列を簡単に追加できます．例えば，この新しい"
" ``point_cloud`` メッシュにいくつかの配列を追加しましょう．"

#: ../../pyvista/doc/source/examples/00-load/create-point-cloud.rst:182
msgid ""
"Make an array of scalar values with the same length as the points array. "
"Each element in this array will correspond to points at the same index:"
msgstr "points配列と同じ長さのスカラー値の配列を作成します．この配列の各要素は，同じインデックスのポイントに対応します．"

#: ../../pyvista/doc/source/examples/00-load/create-point-cloud.rst:205
msgid ""
"And now we can plot the point cloud with that random data. PyVista is smart "
"enough to plot the scalar array you added by default. Note that this time, "
"we specify to render every point as its own sphere."
msgstr ""
"これで，ランダムデータを使用して点群をプロットできます．PyVistaは，デフォルトで追加したスカラー配列をプロットするのに十分な性能を持っています．ここでは，すべてのポイントを独自の球としてレンダリングするように指定します．"

#: ../../pyvista/doc/source/examples/00-load/create-point-cloud.rst:229
msgid ""
"That data is kind of boring, right? You can also add data arrays with more "
"than one scalar value - perhaps a vector with three elements? Let's make a "
"little function that will compute vectors for every node in the point cloud "
"and add those vectors to the mesh."
msgstr ""
"そのデータは退屈ですよね?複数のスカラー値を持つデータ配列，例えば3つの要素を持つベクトルを追加することもできます．ポイントクラウド内のすべてのノードのベクトルを計算し，それらのベクトルをメッシュに追加する簡単な関数を作成します．"

#: ../../pyvista/doc/source/examples/00-load/create-point-cloud.rst:234
msgid "This time, we're going to create a totally new, random point cloud."
msgstr ""
"そのデータは退屈ですよね?複数のスカラー値を持つデータ配列，例えば3つの要素を持つベクトルを追加することもできます．ポイントクラウド内のすべてのノードのベクトルを計算し，それらのベクトルをメッシュに追加する簡単な関数を作成します．"

#: ../../pyvista/doc/source/examples/00-load/create-point-cloud.rst:290
msgid ""
"Now we can make arrows using those vectors using the glyph filter (see "
":ref:`glyph_example` for more details)."
msgstr ""
"今度は，グリフフィルター(詳細は :ref:`glyph_example` を参照)を使って，これらのベクトルを使って矢印を作ることができます．"

#: ../../pyvista/doc/source/examples/00-load/create-point-cloud.rst:327
msgid "**Total running time of the script:** (0 minutes 7.365 seconds)"
msgstr "**Total running time of the script:** (0 minutes 7.365 seconds)"

#: ../../pyvista/doc/source/examples/00-load/create-point-cloud.rst:341
msgid ""
":download:`Download Python source code: create-point-cloud.py <create-point-"
"cloud.py>`"
msgstr ""
":download:`Download Python source code: create-point-cloud.py <create-point-"
"cloud.py>`"

#: ../../pyvista/doc/source/examples/00-load/create-point-cloud.rst:345
msgid ""
":download:`Download Jupyter notebook: create-point-cloud.ipynb <create-"
"point-cloud.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: create-point-cloud.ipynb <create-"
"point-cloud.ipynb>`"

#: ../../pyvista/doc/source/examples/00-load/create-pointset.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_00-load_create-pointset.py>`"
" to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_00-load_create-pointset.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/00-load/create-pointset.rst:24
msgid "Create a PointSet"
msgstr "PointSetの作成"

#: ../../pyvista/doc/source/examples/00-load/create-pointset.rst:26
msgid ""
"A :class:`pyvista.PointSet` is a concrete class representing a set of points"
" that specifies the interface for datasets that explicitly use \"point\" "
"arrays to represent geometry. This class is useful for improving the "
"performance of filters on point clouds."
msgstr ""
"クラス :`pyvista.PointSet` は，点の集合を表す具象クラスで，ジオメトリを表現するために \"点\" "
"の配列を明示的に使用するデータセットのためのインターフェイスを指定します．このクラスは，点群に対するフィルタのパフォーマンスを向上させるために役立ちます．"

#: ../../pyvista/doc/source/examples/00-load/create-pointset.rst:31
msgid ""
"This example shows the performance improvement when clipping using the "
":func:`pyvista.DataSetFilters.clip` filter on a :class:`pyvista.PointSet`."
msgstr ""
"この例では， :class:`pyvista.PointSet` の :func:`pyvista.DataSetFilters.clip` "
"フィルターを使用してクリッピングした場合のパフォーマンスの向上を示しています．"

#: ../../pyvista/doc/source/examples/00-load/create-pointset.rst:65
msgid "Plot the clipped polydata"
msgstr "切り取られたポリデータをプロットします"

#: ../../pyvista/doc/source/examples/00-load/create-pointset.rst:87
msgid ""
"Show the performance improvement when using a PointSet. This is only "
"available with VTK >= 9.1.0."
msgstr "PointSetを使用したときのパフォーマンスの向上を表示します． VTK >= 9.1.0 でのみ利用可能です．"

#: ../../pyvista/doc/source/examples/00-load/create-pointset.rst:119
msgid "Plot the same dataset."
msgstr "同じデータセットをプロットします．"

#: ../../pyvista/doc/source/examples/00-load/create-pointset.rst:122
msgid ""
"PyVista must still create an intermediate PolyData to be able to plot, so "
"there is no performance improvement when using a :class:`pyvista.PointSet`"
msgstr ""
"PyVistaは，プロットできるようにするために，中間的なPolyDataを作成しなければならないので， "
":class:`pyvista.PointSet` を使用してもパフォーマンスが向上することはありません．"

#: ../../pyvista/doc/source/examples/00-load/create-pointset.rst:147
msgid "**Total running time of the script:** ( 0 minutes  11.243 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  11.243 seconds)"

#: ../../pyvista/doc/source/examples/00-load/create-pointset.rst:161
msgid ""
":download:`Download Python source code: create-pointset.py <create-"
"pointset.py>`"
msgstr ""
":download:`Download Python source code: create-pointset.py <create-"
"pointset.py>`"

#: ../../pyvista/doc/source/examples/00-load/create-pointset.rst:165
msgid ""
":download:`Download Jupyter notebook: create-pointset.ipynb <create-"
"pointset.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: create-pointset.ipynb <create-"
"pointset.ipynb>`"

#: ../../pyvista/doc/source/examples/00-load/create-poly.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_00-load_create-poly.py>` to "
"download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_00-load_create-poly.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/00-load/create-poly.rst:24
msgid "Create PolyData"
msgstr "PolyDataを作成"

#: ../../pyvista/doc/source/examples/00-load/create-poly.rst:26
msgid ""
"Creating a :class:`pyvista.PolyData` (surface mesh) from vertices and faces."
msgstr "頂点と面から :class:`pyvista.PolyData` (表面メッシュ)を作成します．"

#: ../../pyvista/doc/source/examples/00-load/create-poly.rst:46
msgid ""
"A PolyData object can be created quickly from numpy arrays.  The vertex "
"array contains the locations of the points in the mesh and the face array "
"contains the number of points of each face and the indices of the vertices "
"which comprise that face."
msgstr ""
"PolyDataオブジェクトは，多数の配列からすばやく作成できます．頂点配列にはメッシュ内の点の位置が含まれ，面配列には各面の点の数とその面を構成する頂点のインデックスが含まれます．"

#: ../../pyvista/doc/source/examples/00-load/create-poly.rst:95
msgid "Polygonal PolyData"
msgstr "多角形 PolyData"

#: ../../pyvista/doc/source/examples/00-load/create-poly.rst:96
msgid "Create a three face polygonal mesh directly from points and faces."
msgstr "点と面から直接3面ポリゴンメッシュを作成します．"

#: ../../pyvista/doc/source/examples/00-load/create-poly.rst:99
msgid ""
"It is generally more efficient to use a numpy array rather than stacking "
"lists for large meshes."
msgstr "一般に，大きなメッシュではリストを積み重ねるよりもnumpyの配列を使う方が効率的です．"

#: ../../pyvista/doc/source/examples/00-load/create-poly.rst:149
msgid "**Total running time of the script:** (0 minutes 0.779 seconds)"
msgstr "**Total running time of the script:** (0 minutes 0.779 seconds)"

#: ../../pyvista/doc/source/examples/00-load/create-poly.rst:163
msgid ""
":download:`Download Python source code: create-poly.py <create-poly.py>`"
msgstr ""
":download:`Download Python source code: create-poly.py <create-poly.py>`"

#: ../../pyvista/doc/source/examples/00-load/create-poly.rst:167
msgid ""
":download:`Download Jupyter notebook: create-poly.ipynb <create-poly.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: create-poly.ipynb <create-poly.ipynb>`"

#: ../../pyvista/doc/source/examples/00-load/create-polydata-strips.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_00-load_create-polydata-"
"strips.py>` to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_00-load_create-polydata-"
"strips.py>` をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/00-load/create-polydata-strips.rst:24
msgid "Triangle Strips"
msgstr "トライアングル ストリップ"

#: ../../pyvista/doc/source/examples/00-load/create-polydata-strips.rst:26
msgid ""
"This example shows how to build a simple :class:`pyvista.PolyData` using "
"triangle strips."
msgstr "この例では，トライアングル ストリップを使ったシンプルな :class:`pyvista.PolyData` を構築する方法を紹介します．"

#: ../../pyvista/doc/source/examples/00-load/create-polydata-strips.rst:29
msgid ""
"Triangle strips are a more efficient way of storing the connectivity of "
"adjacent triangles."
msgstr "トライアングルストリップは，隣接する3角形の連結をより効率的に保存する方法です．"

#: ../../pyvista/doc/source/examples/00-load/create-polydata-strips.rst:64
msgid "Build the connectivity of the strips"
msgstr "ストリップの連結を構築する"

#: ../../pyvista/doc/source/examples/00-load/create-polydata-strips.rst:65
msgid ""
"The first element is the number of points in the strip next three elements "
"is the initial triangle the rest of the points is where the strip extends "
"to."
msgstr "最初の要素は帯の点の数で，次の3つの要素は最初の3角形で，残りの点は帯が伸びている場所です．"

#: ../../pyvista/doc/source/examples/00-load/create-polydata-strips.rst:85
#: ../../pyvista/doc/source/examples/00-load/create-polydata-strips.rst:240
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>1</td></tr>\n"
"<tr><td>N Points</td><td>8</td></tr>\n"
"<tr><td>N Strips</td><td>1</td></tr>\n"
"<tr><td>X Bounds</td><td>0.000e+00, 1.000e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>0.000e+00, 3.000e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 0.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>0</td></tr>\n"
"</table>\n"
"\n"
"\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>1</td></tr>\n"
"<tr><td>N Points</td><td>8</td></tr>\n"
"<tr><td>N Strips</td><td>1</td></tr>\n"
"<tr><td>X Bounds</td><td>0.000e+00, 1.000e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>0.000e+00, 3.000e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 0.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>0</td></tr>\n"
"</table>\n"
"\n"
"\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/00-load/create-polydata-strips.rst:108
msgid "Plot the triangle strips"
msgstr "トライアングル ストリップをプロットする"

#: ../../pyvista/doc/source/examples/00-load/create-polydata-strips.rst:109
msgid ""
"Plot the ``PolyData`` and include the point labels using "
":func:`add_point_labels() <pyvista.Plotter.add_point_labels>` so we can see "
"how the PolyData is constructed using triangle strips."
msgstr ""
"``PolyData`` をプロットし， :func:`add_point_labels() "
"<pyvista.Plotter.add_point_labels>` を用いてポイントラベルを含めれば，トライアングル ストリップを用いて "
"PolyData がどのように構築されるかが分かります．"

#: ../../pyvista/doc/source/examples/00-load/create-polydata-strips.rst:141
msgid "Convert strips to triangles"
msgstr "トライアングル ストリップに変換する"

#: ../../pyvista/doc/source/examples/00-load/create-polydata-strips.rst:142
msgid ""
"You can convert strips to triangle faces using :func:`triangulate "
"<pyvista.DataSetFilters.triangulate>`."
msgstr ""
":func:`triangulate <pyvista.DataSetFilters.triangulate>` "
"を使用すると，ストリップを3角形の面に変換することができます．"

#: ../../pyvista/doc/source/examples/00-load/create-polydata-strips.rst:158
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>6</td></tr>\n"
"<tr><td>N Points</td><td>8</td></tr>\n"
"<tr><td>N Strips</td><td>0</td></tr>\n"
"<tr><td>X Bounds</td><td>0.000e+00, 1.000e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>0.000e+00, 3.000e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 0.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>0</td></tr>\n"
"</table>\n"
"\n"
"\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>6</td></tr>\n"
"<tr><td>N Points</td><td>8</td></tr>\n"
"<tr><td>N Strips</td><td>0</td></tr>\n"
"<tr><td>X Bounds</td><td>0.000e+00, 1.000e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>0.000e+00, 3.000e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 0.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>0</td></tr>\n"
"</table>\n"
"\n"
"\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/00-load/create-polydata-strips.rst:180
msgid ""
"We can use this new :class:`pyvista.PolyData` to see how VTK represents "
"triangle strips as individual faces."
msgstr ""
"この新しい :class:`pyvista.PolyData` を使って，VTK がトライアングル "
"ストリップを個々の面としてどのように表現するかを見ることができます．"

#: ../../pyvista/doc/source/examples/00-load/create-polydata-strips.rst:183
msgid ""
"See how the faces array is much larger (~3x more) even for this basic "
"example even despite representing the same data."
msgstr "同じデータであっても，この基本的な例では，顔の配列の方がはるかに大きい（〜3倍）ことがわかります．"

#: ../../pyvista/doc/source/examples/00-load/create-polydata-strips.rst:187
msgid ""
"The faces array from VTK always contains padding (the number of points in "
"the face) for each face in the face array. This is the initial ``3`` in the "
"following face array."
msgstr ""
"VTK の面配列は，面配列の各面に対して必ずパディング（面の点の数）を含んでいます．これは，以下の面配列の初期値である ``3`` に相当します．"

#: ../../pyvista/doc/source/examples/00-load/create-polydata-strips.rst:221
msgid "Convert triangles to strips"
msgstr "3角形をストリップに変換する"

#: ../../pyvista/doc/source/examples/00-load/create-polydata-strips.rst:222
msgid ""
"Convert faces from a :class:`pyvista.PolyData` to strips using "
":func:`strip() <pyvista.PolyDataFilters.strip>`. Here, for demonstration "
"purposes we convert the triangulated mesh back to a stripped mesh."
msgstr ""
":func:`strip() <pyvista.PolyDataFilters.strip>` を使用して， "
":class:`pyvista.PolyData` "
"からストリップに面を変換します．ここでは，デモンストレーションのために，3角形化されたメッシュをストリップされたメッシュに戻します．"

#: ../../pyvista/doc/source/examples/00-load/create-polydata-strips.rst:262
msgid ""
"The output from the ``strip`` filter is, as expected, identical to the "
"original ``mesh``."
msgstr "``strip`` フィルタの出力は，予想通り，元の ``mesh`` と同じです．"

#: ../../pyvista/doc/source/examples/00-load/create-polydata-strips.rst:286
msgid "**Total running time of the script:** ( 0 minutes  0.440 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  0.440 seconds)"

#: ../../pyvista/doc/source/examples/00-load/create-polydata-strips.rst:300
msgid ""
":download:`Download Python source code: create-polydata-strips.py <create-"
"polydata-strips.py>`"
msgstr ""
":download:`Download Python source code: create-polydata-strips.py <create-"
"polydata-strips.py>`"

#: ../../pyvista/doc/source/examples/00-load/create-polydata-strips.rst:304
msgid ""
":download:`Download Jupyter notebook: create-polydata-strips.ipynb <create-"
"polydata-strips.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: create-polydata-strips.ipynb <create-"
"polydata-strips.ipynb>`"

#: ../../pyvista/doc/source/examples/00-load/create-polyhedron.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_00-load_create-polyhedron.py>` "
"to download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_00-load_create-polyhedron.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/00-load/create-polyhedron.rst:24
msgid "Unstructured Grid with Polyhedra"
msgstr "多面体による非構造化グリッド"

#: ../../pyvista/doc/source/examples/00-load/create-polyhedron.rst:26
msgid ""
"This example shows how to build a simple :class:`pyvista.UnstructuredGrid` "
"using polyhedra. We will be using VTK types to determine which type of cells"
" we are building."
msgstr ""
"この例では，多面体を使ってシンプルな :class:`pyvista.UnstructuredGrid` "
"を構築する方法を紹介します．VTKの型を使用して，どのタイプのセルを構築するかを決定します．"

#: ../../pyvista/doc/source/examples/00-load/create-polyhedron.rst:30
msgid "First, we import the required libraries."
msgstr "まず，必要なライブラリをインポートします．"

#: ../../pyvista/doc/source/examples/00-load/create-polyhedron.rst:49
msgid "Define Points"
msgstr "ポイントの定義"

#: ../../pyvista/doc/source/examples/00-load/create-polyhedron.rst:50
msgid ""
"We will mix several cells in one grid for this example. Here we create the "
"points that will define each cell."
msgstr "この例では，1つのグリッドに複数のセルを混在させることにします．ここでは，各セルを定義するポイントを作成します．"

#: ../../pyvista/doc/source/examples/00-load/create-polyhedron.rst:54
msgid ""
"It is not necessary that each cell has an isolated set of points. This has "
"been done here to create isolated cells for this example."
msgstr "各セルが孤立した点の集合を持つ必要はありません．この例では，孤立したセルを作成するために，このような方法をとっています．"

#: ../../pyvista/doc/source/examples/00-load/create-polyhedron.rst:111
msgid "Cell connectivity"
msgstr "セルの接続性"

#: ../../pyvista/doc/source/examples/00-load/create-polyhedron.rst:112
msgid ""
"Connectivity describes the indices of the points to compose each cell. The "
"first item in each cell's connectivity is the number of items the cell will "
"have. For example, a quad cell is composed of points ``[0, 1, 2, 3]`` and "
"totaling 4 points, therefore ``[4, 0, 1, 2, 3]`` describes its connectivity."
msgstr ""
"接続性は，各セルを構成する点のインデックスを記述します．各セルのコネクティビティの最初の項目は，そのセルが持つ項目の数です．例えば，4角形のセルは点 "
"``[0, 1, 2, 3]`` と合計4つの点から構成されるので， ``[4, 0, 1, 2, 3]`` がその接続性を表していることになります．"

#: ../../pyvista/doc/source/examples/00-load/create-polyhedron.rst:118
msgid ""
"This example uses lists for simplicity, but internally PyVista converts "
"these lists to a :class:`numpy.ndarray` with ``dtype=pyvista.ID_TYPE`` and "
"passes it to VTK."
msgstr ""
"この例では簡単のためにリストを使っていますが，内部的にはPyVistaはこれらのリストを ``dtype=pyvista.ID_TYPE`` で "
":class:`numpy.ndarray` に変換してVTKに渡します．"

#: ../../pyvista/doc/source/examples/00-load/create-polyhedron.rst:122
msgid "The same approach can be applied to all the other cell types."
msgstr "他のすべてのセルタイプにも同じアプローチが可能です．"

#: ../../pyvista/doc/source/examples/00-load/create-polyhedron.rst:144
msgid "Polyhedron connectivity array"
msgstr "多面体接続配列"

#: ../../pyvista/doc/source/examples/00-load/create-polyhedron.rst:145
msgid ""
"The connectivity array of polyhedra is defined differently from the rest of "
"the cell types. For polyhedra, we need to set the faces with the following "
"format:"
msgstr "多面体の接続配列は，他のセルタイプとは異なる定義になっています．多面体の場合，次のような形式で面を設定する必要があります．"

#: ../../pyvista/doc/source/examples/00-load/create-polyhedron.rst:148
msgid ""
"``[NItems, NFaces, Face0NPoints, Face0Point0, Face0Point1..., Face0PointN-1,"
" Face1NPoints, ...]``"
msgstr ""
"``[NItems, NFaces, Face0NPoints, Face0Point0, Face0Point1..., Face0PointN-1,"
" Face1NPoints, ...]``"

#: ../../pyvista/doc/source/examples/00-load/create-polyhedron.rst:150
msgid "Where:"
msgstr "ここで:"

#: ../../pyvista/doc/source/examples/00-load/create-polyhedron.rst:152
msgid ""
"``NItems`` refers to the total number of items in the list needed to "
"describe the polyhedron."
msgstr "``NItems`` は，多面体を表現するために必要なリストのアイテムの総数を指します．"

#: ../../pyvista/doc/source/examples/00-load/create-polyhedron.rst:154
msgid "``NFaces`` is the number of faces the polyhedron will have."
msgstr "``NFaces`` は，多面体が持つ面の数です．"

#: ../../pyvista/doc/source/examples/00-load/create-polyhedron.rst:155
msgid "``Face0NPoints`` is the number of points the first face will have."
msgstr "``Face0NPoints`` は，最初の面が持つ点の数です．"

#: ../../pyvista/doc/source/examples/00-load/create-polyhedron.rst:156
msgid ""
"``Face0Point0...Face0PointN-1`` are each of the points that describe "
"``face0``."
msgstr "``Face0Point0...Face0PointN-1`` は ``face0`` を記述する各点です．"

#: ../../pyvista/doc/source/examples/00-load/create-polyhedron.rst:158
msgid ""
"In ``polyhedron_connectivity``, the first item is ``NFaces``. ``NItems`` is "
"added to ``polyhedron``."
msgstr ""
"``polyhedron_connectivity`` では，最初の項目は ``NFaces`` です． ``NItems`` は "
"``polyhedron`` に追加されます．"

#: ../../pyvista/doc/source/examples/00-load/create-polyhedron.rst:222
msgid "Cells array"
msgstr "セル配列"

#: ../../pyvista/doc/source/examples/00-load/create-polyhedron.rst:223
msgid ""
"Now we build the input cells array for the "
":class:`pyvista.UnstructuredGrid`. Here, we join all cells in a flat list. "
"Internally, the ``NItems`` previously described is used to determine which "
"nodes belong to which cells."
msgstr ""
"ここで， :class:`pyvista.UnstructuredGrid` "
"の入力セル配列を作成します．ここでは，すべてのセルをフラットリストで結合します．内部的には，先に説明した ``NItems`` "
"を使用して，どのノードがどのセルに属しているかを判断します．"

#: ../../pyvista/doc/source/examples/00-load/create-polyhedron.rst:246
msgid "Cell types"
msgstr "セルタイプ"

#: ../../pyvista/doc/source/examples/00-load/create-polyhedron.rst:247
msgid ""
"We need to specify the cell types for each of the cells we define in the "
"cells array."
msgstr "セル配列に定義した各セルに対して，セルの種類を指定する必要があります．"

#: ../../pyvista/doc/source/examples/00-load/create-polyhedron.rst:250
msgid ""
"The number of items in this list must match the number of cells in the "
"connectivity array."
msgstr "このリストの項目数は，接続配列のセル数と一致させる必要があります．"

#: ../../pyvista/doc/source/examples/00-load/create-polyhedron.rst:271
msgid "Create the grid"
msgstr "グリッドの作成"

#: ../../pyvista/doc/source/examples/00-load/create-polyhedron.rst:272
msgid ""
"To create the grid, we use the cells array we built, the cell types, and the"
" points that describe the faces."
msgstr "グリッドの作成には，構築したセル配列，セルの種類，面を記述する点を使用します．"

#: ../../pyvista/doc/source/examples/00-load/create-polyhedron.rst:292
msgid "Plot the mesh"
msgstr "メッシュをプロットする"

#: ../../pyvista/doc/source/examples/00-load/create-polyhedron.rst:293
msgid ""
"Finally, we can plot the grid we've created. Label each cell at its cell "
"center for clarity."
msgstr "最後に，作成したグリッドをプロットすることができます．わかりやすくするために，各セルの中心にラベルを貼ってください．"

#: ../../pyvista/doc/source/examples/00-load/create-polyhedron.rst:326
msgid "**Total running time of the script:** ( 0 minutes  0.516 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  0.516 seconds)"

#: ../../pyvista/doc/source/examples/00-load/create-polyhedron.rst:338
msgid ""
":download:`Download Python source code: create-polyhedron.py <create-"
"polyhedron.py>`"
msgstr ""
":download:`Download Python source code: create-polyhedron.py <create-"
"polyhedron.py>`"

#: ../../pyvista/doc/source/examples/00-load/create-polyhedron.rst:342
msgid ""
":download:`Download Jupyter notebook: create-polyhedron.ipynb <create-"
"polyhedron.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: create-polyhedron.ipynb <create-"
"polyhedron.ipynb>`"

#: ../../pyvista/doc/source/examples/00-load/create-spline.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_00-load_create-spline.py>` to "
"download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_00-load_create-spline.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/00-load/create-spline.rst:24
msgid "Creating a Spline"
msgstr "スプラインの作成"

#: ../../pyvista/doc/source/examples/00-load/create-spline.rst:26
msgid ""
"Create a spline/polyline from a numpy array of XYZ vertices using "
":func:`pyvista.Spline`."
msgstr ":func:`pyvista.Spline` を使用してXYZ頂点の数の多い配列からスプライン/ポリラインを作成します"

#: ../../pyvista/doc/source/examples/00-load/create-spline.rst:87
msgid ""
"Now let's make a function that can create line cells on a "
":class:`pyvista.PolyData` mesh given that the points are in order for the "
"segments they make."
msgstr "ここで， :class:`pyvista.PolyData` メッシュ上にラインセルを作成できる関数を作成しましょう．"

#: ../../pyvista/doc/source/examples/00-load/create-spline.rst:116
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>99</td></tr>\n"
"<tr><td>N Points</td><td>100</td></tr>\n"
"<tr><td>N Strips</td><td>0</td></tr>\n"
"<tr><td>X Bounds</td><td>-4.084e+00, 4.084e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>-3.281e+00, 5.000e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>-2.000e+00, 2.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>0</td></tr>\n"
"</table>\n"
"\n"
"\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>99</td></tr>\n"
"<tr><td>N Points</td><td>100</td></tr>\n"
"<tr><td>N Strips</td><td>0</td></tr>\n"
"<tr><td>X Bounds</td><td>-4.084e+00, 4.084e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>-3.281e+00, 5.000e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>-2.000e+00, 2.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>0</td></tr>\n"
"</table>\n"
"\n"
"\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/00-load/create-spline.rst:159
msgid ""
"That tube has sharp edges at each line segment. This can be mitigated by "
"creating a single PolyLine cell for all of the points"
msgstr "そのチューブは，各線分セグメントに鋭いエッジを持っています．これは，すべての点に対して単一のポリラインセルを作成することで緩和できます．"

#: ../../pyvista/doc/source/examples/00-load/create-spline.rst:197
msgid "You could also interpolate those points onto a parametric spline"
msgstr "これらの点をパラメトリックスプライン上に補間することもできます．"

#: ../../pyvista/doc/source/examples/00-load/create-spline.rst:216
msgid "Plot spline as a tube"
msgstr "スプラインをチューブとしてプロットします"

#: ../../pyvista/doc/source/examples/00-load/create-spline.rst:242
msgid "The spline can also be plotted as a plain line"
msgstr "スプラインは，プレーンラインとしてプロットすることもできます．"

#: ../../pyvista/doc/source/examples/00-load/create-spline.rst:270
msgid "The radius of the tube can be modulated with scalars"
msgstr "チューブの半径は，スカラーで変調することができます．"

#: ../../pyvista/doc/source/examples/00-load/create-spline.rst:298
msgid "Ribbons"
msgstr "リボン"

#: ../../pyvista/doc/source/examples/00-load/create-spline.rst:300
msgid ""
"Ayy of the lines from the examples above can be used to create ribbons. Take"
" a look at the :func:`pyvista.PolyDataFilters.ribbon` filter."
msgstr ""
"上記の例の線のAyyを使用してリボンを作成できます． :func:`pyvista.PolyDataFilters.ribbon` "
"フィルタを見てください．"

#: ../../pyvista/doc/source/examples/00-load/create-spline.rst:325
msgid "**Total running time of the script:** ( 0 minutes  1.877 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.877 seconds)"

#: ../../pyvista/doc/source/examples/00-load/create-spline.rst:337
msgid ""
":download:`Download Python source code: create-spline.py <create-spline.py>`"
msgstr ""
":download:`Download Python source code: create-spline.py <create-spline.py>`"

#: ../../pyvista/doc/source/examples/00-load/create-spline.rst:341
msgid ""
":download:`Download Jupyter notebook: create-spline.ipynb <create-"
"spline.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: create-spline.ipynb <create-"
"spline.ipynb>`"

#: ../../pyvista/doc/source/examples/00-load/create-structured-surface.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_00-load_create-structured-"
"surface.py>` to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_00-load_create-structured-"
"surface.py>` をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/00-load/create-structured-surface.rst:24
msgid "Creating a Structured Surface"
msgstr "構造化サーフェスを作成する"

#: ../../pyvista/doc/source/examples/00-load/create-structured-surface.rst:26
msgid "Create a StructuredGrid surface from NumPy arrays"
msgstr "NumPy配列からStructuredGrid表面を作成します"

#: ../../pyvista/doc/source/examples/00-load/create-structured-surface.rst:48
msgid "From NumPy Meshgrid"
msgstr "NumPyメッシュグリッドから"

#: ../../pyvista/doc/source/examples/00-load/create-structured-surface.rst:50
msgid "Create a simple meshgrid using NumPy"
msgstr "NumPyを使用した単純なメッシュグリッドの作成"

#: ../../pyvista/doc/source/examples/00-load/create-structured-surface.rst:73
msgid "Now pass the NumPy meshgrid to PyVista"
msgstr "ここでNumPyメッシュグリッドをPyVistaに渡します．"

#: ../../pyvista/doc/source/examples/00-load/create-structured-surface.rst:118
msgid ""
"Generating a structured grid is a one-liner in this module, and the points "
"from the resulting surface can be accessed as a NumPy array:"
msgstr "このモジュールでは，構造化されたグリッドの生成を1行で行い，生成されたサーフェスのポイントにNumPy配列としてアクセスできます:"

#: ../../pyvista/doc/source/examples/00-load/create-structured-surface.rst:151
msgid "From XYZ Points"
msgstr "XYZ点から"

#: ../../pyvista/doc/source/examples/00-load/create-structured-surface.rst:153
msgid ""
"Quite often, you might be given a set of coordinates (XYZ points) in a "
"simple tabular format where there exists some structure such that grid could"
" be built between the nodes you have. A great example is found in `pyvista-"
"support#16`_ where a structured grid that is rotated from the cartesian "
"reference frame is given as just XYZ points. In these cases, all that is "
"needed to recover the grid is the dimensions of the grid (`nx` by `ny` by "
"`nz`) and that the coordinates are ordered appropriately."
msgstr ""
"多くの場合，単純な表形式で座標(XYZ点)のセットが与えられ，その中には，所有するノード間にグリッドを構築できるような構造が存在します．すばらしい例は，"
" `pyvista-support#16`_ "
"にあり，デカルト参照フレームから回転される構造化グリッドは，単にXYZ点として与えられる．このような場合，グリッドを復元するために必要なものは，グリッドの寸法(`nx`"
" x `ny` x `nz`)と，座標が適切に順序付けられていることだけです．"

#: ../../pyvista/doc/source/examples/00-load/create-structured-surface.rst:163
msgid ""
"For this example, we will create a small dataset and rotate the coordinates "
"such that they are not on orthogonal to cartesian reference frame."
msgstr "この例では，小さなデータセットを作成し，デカルト参照フレームに直交しないように座標を回転します．"

#: ../../pyvista/doc/source/examples/00-load/create-structured-surface.rst:211
msgid ""
"Now pretend that the (n by 3) NumPy array above are coordinates that you "
"have, possibly from a file with three columns of XYZ points."
msgstr "ここで，上記の(n x 3インチ) NumPy配列がXYZ点の3列のファイルから取得した座標であると仮定します．"

#: ../../pyvista/doc/source/examples/00-load/create-structured-surface.rst:214
msgid ""
"We simply need to recover the dimensions of the grid that these points make "
"and then we can generate a :class:`pyvista.StructuredGrid` mesh."
msgstr ""
"単にこれらの点が作るグリッドの寸法を回復する必要があり，それから :class:`pyvista.StructuredGrid` "
"メッシュを生成することができます．"

#: ../../pyvista/doc/source/examples/00-load/create-structured-surface.rst:217
msgid "Let's preview the points to see what we are dealing with:"
msgstr "ポイントをプレビューして，処理対象を確認します:"

#: ../../pyvista/doc/source/examples/00-load/create-structured-surface.rst:246
msgid ""
"In the figure above, we can see some inherit structure to the points and "
"thus we could connect the points as a structured grid. All we need to know "
"are the dimensions of the grid present. In this case, we know (because we "
"made this dataset) the dimensions are ``[29, 32, 1]``, but you might not "
"know the dimensions of your pointset. There are a few ways to figure out the"
" dimensionality of structured grid including:"
msgstr ""
"上の図では，点への継承構造を確認できるため，点を構造化グリッドとして接続できます．私たちが知る必要があるのは，存在するグリッドの寸法だけです．この場合，(このデータセットは)寸法が"
" ``[29, 32, 1]`` "
"であることはわかっていますが，あなたはポイントセットの寸法を知らないかもしれません．構造化グリッドの次元性を確認するには，次のような方法があります:"

#: ../../pyvista/doc/source/examples/00-load/create-structured-surface.rst:253
msgid "manually counting the nodes along the edges of the pointset"
msgstr "点セットのエッジに沿った節点の手動カウント"

#: ../../pyvista/doc/source/examples/00-load/create-structured-surface.rst:254
msgid ""
"using a technique like principle component analysis to strip the rotation "
"from the dataset and count the unique values along each axis for the new;y "
"projected dataset."
msgstr "主成分分析のような手法を用いてデータセットから回転を取り除き，新しいデータの各軸に沿った固有の値をカウントする;y投影データセット．"

#: ../../pyvista/doc/source/examples/00-load/create-structured-surface.rst:289
msgid "Extending a 2D StructuredGrid to 3D"
msgstr "2 D構造グリッドを3 Dに拡張します"

#: ../../pyvista/doc/source/examples/00-load/create-structured-surface.rst:291
msgid ""
"A 2D :class:`pyvista.StructuredGrid` mesh can be extended into a 3D mesh. "
"This is highly applicable when wanting to create a terrain following mesh in"
" earth science research applications."
msgstr ""
"A 2 D :class:`pyvista.StructuredGrid` のメッシュは，3 "
"Dメッシュに拡張できます．これは，地球科学の研究アプリケーションでメッシュに沿った地形を作成する場合に非常に適しています．"

#: ../../pyvista/doc/source/examples/00-load/create-structured-surface.rst:295
msgid ""
"For example, we could have a :class:`pyvista.StructuredGrid` of a topography"
" surface and extend that surface to a few different levels and connect each "
"\"level\" to create the 3D terrain following mesh."
msgstr ""
"たとえば，地形サーフェスの :class:`pyvista.StructuredGrid` "
"を作成し，そのサーフェスをいくつかの異なるレベルまで延長し，各 \"レベル\" を接続して，メッシュに沿って3 D地形を作成できます．"

#: ../../pyvista/doc/source/examples/00-load/create-structured-surface.rst:299
msgid "Let's start with a simple example by extending the wave mesh to 3D"
msgstr "まず簡単な例として，ウェーブメッシュを3 Dに拡張します．"

#: ../../pyvista/doc/source/examples/00-load/create-structured-surface.rst:347
msgid "**Total running time of the script:** (0 minutes 2.687 seconds)"
msgstr "**Total running time of the script:** (0 minutes 2.687 seconds)"

#: ../../pyvista/doc/source/examples/00-load/create-structured-surface.rst:361
msgid ""
":download:`Download Python source code: create-structured-surface.py "
"<create-structured-surface.py>`"
msgstr ""
":download:`Download Python source code: create-structured-surface.py "
"<create-structured-surface.py>`"

#: ../../pyvista/doc/source/examples/00-load/create-structured-surface.rst:365
msgid ""
":download:`Download Jupyter notebook: create-structured-surface.ipynb "
"<create-structured-surface.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: create-structured-surface.ipynb "
"<create-structured-surface.ipynb>`"

#: ../../pyvista/doc/source/examples/00-load/create-surface-draped.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_00-load_create-surface-"
"draped.py>` to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_00-load_create-surface-"
"draped.py>` をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/00-load/create-surface-draped.rst:24
msgid "Drape 2D Surface From Line"
msgstr "線分から2 Dサーフェスをまとう"

#: ../../pyvista/doc/source/examples/00-load/create-surface-draped.rst:26
msgid "Drape a surface (2D array) from a line in 3D space."
msgstr "サーフェス(2次元配列)を3 D空間の線分からまといます．"

#: ../../pyvista/doc/source/examples/00-load/create-surface-draped.rst:28
msgid ""
"This is a common task to create a 2.5D image/sectional mesh of data like GPR"
" or airborne EM profiles (geophysics applications). This example provides a "
"look into how to create a 2.5D sectional mesh from typical data in those use"
" cases."
msgstr ""
"これはGPRや空中EMプロファイル(地球物理学的応用)のようなデータの2.5 "
"D画像/断面メッシュを作成する一般的なタスクです．この例では，これらのユースケースの一般的なデータから2.5 "
"D断面メッシュを作成する方法について説明します．"

#: ../../pyvista/doc/source/examples/00-load/create-surface-draped.rst:32
msgid ""
"For this example, we have an instrument path on the ground surface (the "
"line) and a 2D array of the collected image under that line."
msgstr "この例では，地表(線)に計測器のパスがあり，そのラインの下に収集されたイメージの2 D配列があります．"

#: ../../pyvista/doc/source/examples/00-load/create-surface-draped.rst:35
msgid ""
"Originally posted in `this support issue "
"<https://github.com/pyvista/pyvista-support/issues/135>`_."
msgstr ""
"`このサポートのイシュー <https://github.com/pyvista/pyvista-support/issues/135>`_ "
"で最初に掲載されました．"

#: ../../pyvista/doc/source/examples/00-load/create-surface-draped.rst:37
msgid ""
"Suppose you have some GPR data (or anything that produces a line of data "
"with values at depth). With these data, you'll have a 2D image/array of your"
" data values and 3D coordinates of where that line/profile is in 3D space "
"(often where you collected the data on the surface of topography). Attached "
"below are some example data for this: 1) XYZ coordinates of a GPR path and "
"2) a 2D array of data values produced from the GPR."
msgstr ""
"GPRデータ(深さ方向の値を持つデータの行を生成するものは何でもかまいません)があるとします．これらのデータを使用して，データ値の2 "
"Dイメージ/配列と，その線分/プロファイルが3 D空間のどこにあるかの3 D座標を取得できます(地形の表面のデータを集めて)．以下に，1) "
"GPRパスのXYZ座標，2) GPRから生成されたデータ値の2 D配列の例を示します．"

#: ../../pyvista/doc/source/examples/00-load/create-surface-draped.rst:44
msgid ""
"the data here are wacky (it's difficult to get shareable data of decent "
"quality), so ignore them but pay attention to the structure. The coordinates"
" we have are technically shifted up and we have some NaN filler above the "
"surface - its weird and just ignore it. You'll typically have a more uniform"
" looking profile in 2D with the coordinates associated to the top of each "
"column in your 2D array."
msgstr ""
"ここのデータは奇妙(質の高い共有可能なデータを入手するのは難しい)なので，無視して構造に注意してください．我々が持っている座標は技術的に上にシフトされ，我々は表面の上にいくつかのNaNフィラーがあります-"
"それは奇妙で，それを無視します．通常は，2 D配列内の各柱の上端に関連付けられた座標を持つ，より均一に見える2 Dプロファイルが作成されます．"

#: ../../pyvista/doc/source/examples/00-load/create-surface-draped.rst:96
msgid ""
"View the path of the GPR profile from a top-down perspective. Since we have "
"the full coordinates (XY and Z), we can create a structured mesh \"draping\""
" down from those coordinates to hold the GPR image data."
msgstr ""
"GPRプロファイルのパスをトップダウンの視点から表示します．完全な座標(XYとZ)があるため，これらの座標から下に構造化メッシュ \"ドレーピング\" "
"を作成し，GPRイメージデータを保持できます．"

#: ../../pyvista/doc/source/examples/00-load/create-surface-draped.rst:157
msgid "Make a StructuredGrid from the structured points"
msgstr "構造化された点からStructuredGridを作成する"

#: ../../pyvista/doc/source/examples/00-load/create-surface-draped.rst:179
msgid ""
"And now we can plot it, process it, or do anything, because it is a PyVista "
"mesh and the possibilities are endless with PyVista."
msgstr ""
"これはPyVistaメッシュであり，PyVistaでは無限の可能性があるため，これでプロットでしたり，何かを処理したり，実行したりできます．"

#: ../../pyvista/doc/source/examples/00-load/create-surface-draped.rst:212
msgid "**Total running time of the script:** ( 0 minutes  10.066 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  10.066 seconds)"

#: ../../pyvista/doc/source/examples/00-load/create-surface-draped.rst:226
msgid ""
":download:`Download Python source code: create-surface-draped.py <create-"
"surface-draped.py>`"
msgstr ""
":download:`Download Python source code: create-surface-draped.py <create-"
"surface-draped.py>`"

#: ../../pyvista/doc/source/examples/00-load/create-surface-draped.rst:230
msgid ""
":download:`Download Jupyter notebook: create-surface-draped.ipynb <create-"
"surface-draped.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: create-surface-draped.ipynb <create-"
"surface-draped.ipynb>`"

#: ../../pyvista/doc/source/examples/00-load/create-tri-surface.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_00-load_create-tri-surface.py>`"
" to download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_00-load_create-tri-surface.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/00-load/create-tri-surface.rst:24
msgid "Create Triangulated Surface"
msgstr "3角形サーフェスを作成"

#: ../../pyvista/doc/source/examples/00-load/create-tri-surface.rst:26
msgid ""
"Create a surface from a set of points through a Delaunay triangulation."
msgstr "一連のポイントからDelaunay3角形分割を介してサーフェスを作成します．"

#: ../../pyvista/doc/source/examples/00-load/create-tri-surface.rst:47
msgid "Simple Triangulations"
msgstr "単純な軌道"

#: ../../pyvista/doc/source/examples/00-load/create-tri-surface.rst:49
msgid "First, create some points for the surface."
msgstr "まず，表面のポイントをいくつか作成します．"

#: ../../pyvista/doc/source/examples/00-load/create-tri-surface.rst:89
msgid ""
"Now use those points to create a point cloud PyVista data object. This will "
"be encompassed in a :class:`pyvista.PolyData` object."
msgstr ""
"これらのポイントを使用して，ポイントクラウドPyVistaデータオブジェクトを作成します．これは :class:`pyvista.PolyData` "
"オブジェクトに含まれます．"

#: ../../pyvista/doc/source/examples/00-load/create-tri-surface.rst:115
msgid ""
"Now that we have a PyVista data structure of the points, we can perform a "
"triangulation to turn those boring discrete points into a connected surface."
msgstr ""
"ポイントのPyVistaデータ構造ができたので，3角形分割を実行して，これらの退屈な個別のポイントを接続されたサーフェスに変えることができます．"

#: ../../pyvista/doc/source/examples/00-load/create-tri-surface.rst:142
msgid "Masked Triangulations"
msgstr "マスクされた3角形"

#: ../../pyvista/doc/source/examples/00-load/create-tri-surface.rst:165
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>100</td></tr>\n"
"<tr><td>N Points</td><td>100</td></tr>\n"
"<tr><td>X Bounds</td><td>2.433e-02, 9.213e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>1.486e-02, 9.297e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 0.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>0</td></tr>\n"
"</table>\n"
"\n"
"\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>100</td></tr>\n"
"<tr><td>N Points</td><td>100</td></tr>\n"
"<tr><td>X Bounds</td><td>2.433e-02, 9.213e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>1.486e-02, 9.297e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 0.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>0</td></tr>\n"
"</table>\n"
"\n"
"\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/00-load/create-tri-surface.rst:186
msgid "Run the triangulation on these points"
msgstr "これらの点で3角形分割を実行します"

#: ../../pyvista/doc/source/examples/00-load/create-tri-surface.rst:210
msgid ""
"Note that some of the outer edges are unconstrained and the triangulation "
"added unwanted triangles. We can mitigate that with the ``alpha`` parameter."
msgstr ""
"外側のエッジの一部は拘束されておらず，3角形分割によって不要な3角形が追加されていることに注意してください．私たちは ``alpha`` "
"パラメータでそれを緩和します．"

#: ../../pyvista/doc/source/examples/00-load/create-tri-surface.rst:235
msgid ""
"We could also add a polygon to ignore during the triangulation via the "
"``edge_source`` parameter."
msgstr "また， ``edge_source`` パラメータを使用して，3角形分割中に無視するポリゴンを追加することもできます．"

#: ../../pyvista/doc/source/examples/00-load/create-tri-surface.rst:274
msgid "**Total running time of the script:** ( 0 minutes  1.825 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.825 seconds)"

#: ../../pyvista/doc/source/examples/00-load/create-tri-surface.rst:289
msgid ""
":download:`Download Python source code: create-tri-surface.py <create-tri-"
"surface.py>`"
msgstr ""
":download:`Download Python source code: create-tri-surface.py <create-tri-"
"surface.py>`"

#: ../../pyvista/doc/source/examples/00-load/create-tri-surface.rst:295
msgid ""
":download:`Download Jupyter notebook: create-tri-surface.ipynb <create-tri-"
"surface.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: create-tri-surface.ipynb <create-tri-"
"surface.ipynb>`"

#: ../../pyvista/doc/source/examples/00-load/create-truss.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_00-load_create-truss.py>` to "
"download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_00-load_create-truss.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/00-load/create-truss.rst:24
msgid "Plot Truss-like FEA Solution with Cylinders"
msgstr "円柱を用いたトラス状のFEAソリューションのプロット"

#: ../../pyvista/doc/source/examples/00-load/create-truss.rst:26
msgid ""
"Plot connections between points in 3D as cylinders, colored by scalars."
msgstr "点と点の間のつながりを，スカラーで色づけされた円柱として3Dにプロットします．"

#: ../../pyvista/doc/source/examples/00-load/create-truss.rst:46
msgid ""
"Define the points and elements of the truss.  Call them ``nodes`` here as it"
" comes from finite element analysis."
msgstr "トラスの点と要素を定義します． ここでは，有限要素解析から来ているように， ``ノード`` と呼びます．"

#: ../../pyvista/doc/source/examples/00-load/create-truss.rst:110
msgid "Plot the truss while rendering the lines as tubes."
msgstr "ラインをチューブとしてレンダリングしながらトラスをプロットします．"

#: ../../pyvista/doc/source/examples/00-load/create-truss.rst:144
msgid "**Total running time of the script:** ( 0 minutes  0.571 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  0.571 seconds)"

#: ../../pyvista/doc/source/examples/00-load/create-truss.rst:159
msgid ""
":download:`Download Python source code: create-truss.py <create-truss.py>`"
msgstr ""
":download:`Download Python source code: create-truss.py <create-truss.py>`"

#: ../../pyvista/doc/source/examples/00-load/create-truss.rst:165
msgid ""
":download:`Download Jupyter notebook: create-truss.ipynb <create-"
"truss.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: create-truss.ipynb <create-"
"truss.ipynb>`"

#: ../../pyvista/doc/source/examples/00-load/create-uniform-grid.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_00-load_create-uniform-"
"grid.py>` to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_00-load_create-uniform-"
"grid.py>` をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/00-load/create-uniform-grid.rst:22
msgid "Creating a Uniform Grid"
msgstr "統合グリッドを作成"

#: ../../pyvista/doc/source/examples/00-load/create-uniform-grid.rst:24
msgid "Create a simple uniform grid from a 3D NumPy array of values."
msgstr "値の3D NumPy配列から単純な均一グリッドを作成します．"

#: ../../pyvista/doc/source/examples/00-load/create-uniform-grid.rst:44
msgid ""
"Take a 3D NumPy array of data values that holds some spatial data where each"
" axis corresponds to the XYZ cartesian axes. This example will create a "
":class:`pyvista.ImageData` object that will hold the spatial reference for a"
" 3D grid which a 3D NumPy array of values can be plotted against."
msgstr ""
"各軸がXYZデカルト軸に対応する空間データを保持するデータ値の3 D NumPy配列を取ります．この例では，値の3 D NumPy配列をプロットできる3"
" Dグリッドの空間参照を保持する :class:`pyvista.ImageData` オブジェクトを作成します．"

#: ../../pyvista/doc/source/examples/00-load/create-uniform-grid.rst:51
msgid ""
"Create the 3D NumPy array of spatially referenced data. This is spatially "
"referenced such that the grid is 20 by 5 by 10 (nx by ny by nz)"
msgstr ""
"空間的に参照されるデータの3 D NumPy配列を作成します．これは，グリッドが20×5×10 (nx × ny × "
"nz)であるように空間的に参照さます"

#: ../../pyvista/doc/source/examples/00-load/create-uniform-grid.rst:94
msgid ""
"Don't like cell data? You could also add the NumPy array to the point data "
"of a :class:`pyvista.ImageData`. Take note of the subtle difference when "
"setting the grid dimensions upon initialization."
msgstr ""
"セルデータは好きではありませんか? :class:`pyvista.ImageData` "
"のポイントデータにNumPy配列を追加することもできます．初期化時にグリッドの寸法を設定する際には，微妙な違いに注意してください．"

#: ../../pyvista/doc/source/examples/00-load/create-uniform-grid.rst:140
msgid "**Total running time of the script:** ( 0 minutes  1.368 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.368 seconds)"

#: ../../pyvista/doc/source/examples/00-load/create-uniform-grid.rst:154
msgid ""
":download:`Download Python source code: create-uniform-grid.py <create-"
"uniform-grid.py>`"
msgstr ""
":download:`Download Python source code: create-uniform-grid.py <create-"
"uniform-grid.py>`"

#: ../../pyvista/doc/source/examples/00-load/create-uniform-grid.rst:158
msgid ""
":download:`Download Jupyter notebook: create-uniform-grid.ipynb <create-"
"uniform-grid.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: create-uniform-grid.ipynb <create-"
"uniform-grid.ipynb>`"

#: ../../pyvista/doc/source/examples/00-load/create-unstructured-surface.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_00-load_create-unstructured-"
"surface.py>` to download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_00-load_create-unstructured-"
"surface.py>` をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/00-load/create-unstructured-surface.rst:24
msgid "Creating an Unstructured Grid"
msgstr "非構造化グリッドの作成"

#: ../../pyvista/doc/source/examples/00-load/create-unstructured-surface.rst:26
msgid "Create an irregular, unstructured grid from NumPy arrays."
msgstr "NumPy配列から不規則な非構造化グリッドを作成します．"

#: ../../pyvista/doc/source/examples/00-load/create-unstructured-surface.rst:47
msgid ""
"An unstructured grid can be created directly from NumPy arrays. This is "
"useful when creating a grid from scratch or copying it from another format."
"  See `vtkUnstructuredGrid "
"<https://www.vtk.org/doc/nightly/html/classvtkUnstructuredGrid.html>`_ for "
"available cell types and their descriptions."
msgstr ""
"非構造化グリッドは，NumPy配列から直接作成できます．これは，グリッドを最初から作成する場合や，別の形式からコピーする場合に便利です．使用可能なセルタイプとその説明については，"
" `vtkUnstructuredGrid "
"<https://www.vtk.org/doc/nightly/html/classvtkUnstructuredGrid.html>`_ "
"を参照してください．"

#: ../../pyvista/doc/source/examples/00-load/create-unstructured-surface.rst:124
msgid "UnstructuredGrid with Shared Points"
msgstr "共有ポイントを持つ非構造化グリッド"

#: ../../pyvista/doc/source/examples/00-load/create-unstructured-surface.rst:126
msgid ""
"The next example again creates an unstructured grid containing hexahedral "
"cells, but using common points between the cells."
msgstr "次の例でも，6面体セルを含み，セル間の共通点を使用する非構造グリッドを作成します．"

#: ../../pyvista/doc/source/examples/00-load/create-unstructured-surface.rst:197
msgid "Finally, create the unstructured grid and plot it"
msgstr "最後に，非構造化グリッドを作成してプロットします．"

#: ../../pyvista/doc/source/examples/00-load/create-unstructured-surface.rst:230
msgid "Tetrahedral Grid"
msgstr "4面体グリッド"

#: ../../pyvista/doc/source/examples/00-load/create-unstructured-surface.rst:231
msgid "Here is how we can create an unstructured tetrahedral grid."
msgstr "ここでは，非構造化4面体グリッドを作成する方法を説明します．"

#: ../../pyvista/doc/source/examples/00-load/create-unstructured-surface.rst:296
msgid ""
"For fun, let's separate all the cells and plot out the individual cells. "
"Shift them a little bit from the center to create an \"exploded view\"."
msgstr "面白半分に，すべてのセルを分離して，個々のセルをプロットしてみましょう．中心から少しずらして， \"分解図\" を作ってみましょう．"

#: ../../pyvista/doc/source/examples/00-load/create-unstructured-surface.rst:321
msgid "**Total running time of the script:** ( 0 minutes  2.054 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  2.054 seconds)"

#: ../../pyvista/doc/source/examples/00-load/create-unstructured-surface.rst:333
msgid ""
":download:`Download Python source code: create-unstructured-surface.py "
"<create-unstructured-surface.py>`"
msgstr ""
":download:`Download Python source code: create-unstructured-surface.py "
"<create-unstructured-surface.py>`"

#: ../../pyvista/doc/source/examples/00-load/create-unstructured-surface.rst:337
msgid ""
":download:`Download Jupyter notebook: create-unstructured-surface.ipynb "
"<create-unstructured-surface.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: create-unstructured-surface.ipynb "
"<create-unstructured-surface.ipynb>`"

#: ../../pyvista/doc/source/examples/00-load/index.rst:6
#: ../../pyvista/doc/source/examples/index.rst:29
msgid "Mesh Creation"
msgstr "メッシュ作成"

#: ../../pyvista/doc/source/examples/00-load/index.rst:8
#: ../../pyvista/doc/source/examples/index.rst:31
msgid ""
"These examples demo how to read various file types into PyVista mesh "
"objects, create meshes from NumPy arrays, and how to create primitive "
"geometric objects like spheres, arrows, cubes, ellipsoids and more."
msgstr ""
"これらの例では，様々なファイルタイプをPyVistaのメッシュオブジェクトに読み込む方法，NumPyの配列からメッシュを作成する方法，球，矢印，立方体，楕円体などのプリミティブな幾何学オブジェクトを作成する方法についてデモを行います．"

#: ../../pyvista/doc/source/examples/00-load/index.rst:12
#: ../../pyvista/doc/source/examples/index.rst:35
msgid ""
"Once a mesh is loaded, it is ready for plotting with just a few lines of "
"code - explore these examples to get started with using PyVista for your "
"data."
msgstr ""
"メッシュを読み込んだら，数行のコードでプロットできるようになります．これらの例を参考に，PyVistaを使ったデータ処理を始めてみてください．"

#: ../../pyvista/doc/source/examples/00-load/index.rst:18
#: ../../pyvista/doc/source/examples/01-filter/index.rst:22
#: ../../pyvista/doc/source/examples/02-plot/index.rst:25
#: ../../pyvista/doc/source/examples/03-widgets/index.rst:22
#: ../../pyvista/doc/source/examples/04-lights/index.rst:22
#: ../../pyvista/doc/source/examples/98-common/index.rst:19
#: ../../pyvista/doc/source/examples/99-advanced/index.rst:13
#: ../../pyvista/doc/source/examples/index.rst:19
#: ../../pyvista/doc/source/examples/index.rst:41
#: ../../pyvista/doc/source/examples/index.rst:543
#: ../../pyvista/doc/source/examples/index.rst:1303
#: ../../pyvista/doc/source/examples/index.rst:2263
#: ../../pyvista/doc/source/examples/index.rst:2458
#: ../../pyvista/doc/source/examples/index.rst:2600
#: ../../pyvista/doc/source/examples/index.rst:2634
msgid "<div class=\"sphx-glr-thumbnails\">"
msgstr "<div class=\"sphx-glr-thumbnails\">"

#: ../../pyvista/doc/source/examples/00-load/index.rst:23
#: ../../pyvista/doc/source/examples/index.rst:46
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create an explicit "
"structured grid from NumPy arrays.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create an explicit "
"structured grid from NumPy arrays.\">"

#: ../../pyvista/doc/source/examples/00-load/index.rst:32
#: ../../pyvista/doc/source/examples/index.rst:55
msgid ":ref:`sphx_glr_examples_00-load_create-explicit-structured-grid.py`"
msgstr ":ref:`sphx_glr_examples_00-load_create-explicit-structured-grid.py`"

#: ../../pyvista/doc/source/examples/00-load/index.rst:34
#: ../../pyvista/doc/source/examples/index.rst:57
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Creating an Explicit Structured Grid</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Creating an Explicit Structured Grid</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/00-load/index.rst:40
#: ../../pyvista/doc/source/examples/index.rst:63
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The &quot;Hello, "
"world!&quot; of VTK\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The &quot;Hello, "
"world!&quot; of VTK\">"

#: ../../pyvista/doc/source/examples/00-load/index.rst:49
#: ../../pyvista/doc/source/examples/index.rst:72
msgid ":ref:`sphx_glr_examples_00-load_create-geometric-objects.py`"
msgstr ":ref:`sphx_glr_examples_00-load_create-geometric-objects.py`"

#: ../../pyvista/doc/source/examples/00-load/index.rst:51
#: ../../pyvista/doc/source/examples/index.rst:74
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Geometric Objects</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Geometric Objects</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/00-load/index.rst:57
#: ../../pyvista/doc/source/examples/index.rst:80
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create a Kochanek "
"spline/polyline from a numpy array of XYZ vertices.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create a Kochanek "
"spline/polyline from a numpy array of XYZ vertices.\">"

#: ../../pyvista/doc/source/examples/00-load/index.rst:66
#: ../../pyvista/doc/source/examples/index.rst:89
msgid ":ref:`sphx_glr_examples_00-load_create-kochanek-spline.py`"
msgstr ":ref:`sphx_glr_examples_00-load_create-kochanek-spline.py`"

#: ../../pyvista/doc/source/examples/00-load/index.rst:68
#: ../../pyvista/doc/source/examples/index.rst:91
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Create a Kochanek Spline</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Create a Kochanek Spline</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/00-load/index.rst:74
#: ../../pyvista/doc/source/examples/index.rst:97
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Creating parametric "
"objects\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Creating parametric "
"objects\">"

#: ../../pyvista/doc/source/examples/00-load/index.rst:83
#: ../../pyvista/doc/source/examples/index.rst:106
msgid ""
":ref:`sphx_glr_examples_00-load_create-parametric-geometric-objects.py`"
msgstr ""
":ref:`sphx_glr_examples_00-load_create-parametric-geometric-objects.py`"

#: ../../pyvista/doc/source/examples/00-load/index.rst:85
#: ../../pyvista/doc/source/examples/index.rst:108
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Parametric Geometric Objects</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Parametric Geometric Objects</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/00-load/index.rst:91
#: ../../pyvista/doc/source/examples/index.rst:114
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Here we use pyvista.Box to "
"make pixel art. Pixel string source and license.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Here we use pyvista.Box to "
"make pixel art. Pixel string source and license.\">"

#: ../../pyvista/doc/source/examples/00-load/index.rst:100
#: ../../pyvista/doc/source/examples/index.rst:123
msgid ":ref:`sphx_glr_examples_00-load_create-pixel-art.py`"
msgstr ":ref:`sphx_glr_examples_00-load_create-pixel-art.py`"

#: ../../pyvista/doc/source/examples/00-load/index.rst:102
#: ../../pyvista/doc/source/examples/index.rst:125
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Pixel Art of ALIEN MONSTERS</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Pixel Art of ALIEN MONSTERS</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/00-load/index.rst:108
#: ../../pyvista/doc/source/examples/index.rst:131
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"PyVista wraps the "
"vtk.vtkPlatonicSolidSource filter as pyvista.PlatonicSolid.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"PyVista wraps the "
"vtk.vtkPlatonicSolidSource filter as pyvista.PlatonicSolid.\">"

#: ../../pyvista/doc/source/examples/00-load/index.rst:117
#: ../../pyvista/doc/source/examples/index.rst:140
msgid ":ref:`sphx_glr_examples_00-load_create-platonic-solids.py`"
msgstr ":ref:`sphx_glr_examples_00-load_create-platonic-solids.py`"

#: ../../pyvista/doc/source/examples/00-load/index.rst:119
#: ../../pyvista/doc/source/examples/index.rst:142
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Platonic Solids</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Platonic Solids</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/00-load/index.rst:125
#: ../../pyvista/doc/source/examples/index.rst:148
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create a pyvista.PolyData "
"object from a point cloud of vertices and scalar arrays for those poi...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create a pyvista.PolyData "
"object from a point cloud of vertices and scalar arrays for those poi...\">"

#: ../../pyvista/doc/source/examples/00-load/index.rst:134
#: ../../pyvista/doc/source/examples/index.rst:157
msgid ":ref:`sphx_glr_examples_00-load_create-point-cloud.py`"
msgstr ":ref:`sphx_glr_examples_00-load_create-point-cloud.py`"

#: ../../pyvista/doc/source/examples/00-load/index.rst:136
#: ../../pyvista/doc/source/examples/index.rst:159
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Create Point Cloud</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Create Point Cloud</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/00-load/index.rst:142
#: ../../pyvista/doc/source/examples/index.rst:165
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"A pyvista.PointSet is a "
"concrete class representing a set of points that specifies the "
"interfac...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"A pyvista.PointSet is a "
"concrete class representing a set of points that specifies the "
"interfac...\">"

#: ../../pyvista/doc/source/examples/00-load/index.rst:151
#: ../../pyvista/doc/source/examples/index.rst:174
msgid ":ref:`sphx_glr_examples_00-load_create-pointset.py`"
msgstr ":ref:`sphx_glr_examples_00-load_create-pointset.py`"

#: ../../pyvista/doc/source/examples/00-load/index.rst:153
#: ../../pyvista/doc/source/examples/index.rst:176
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Create a PointSet</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Create a PointSet</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/00-load/index.rst:159
#: ../../pyvista/doc/source/examples/index.rst:182
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Creating a pyvista.PolyData"
" (surface mesh) from vertices and faces.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Creating a pyvista.PolyData"
" (surface mesh) from vertices and faces.\">"

#: ../../pyvista/doc/source/examples/00-load/index.rst:168
#: ../../pyvista/doc/source/examples/index.rst:191
msgid ":ref:`sphx_glr_examples_00-load_create-poly.py`"
msgstr ":ref:`sphx_glr_examples_00-load_create-poly.py`"

#: ../../pyvista/doc/source/examples/00-load/index.rst:170
#: ../../pyvista/doc/source/examples/index.rst:193
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Create PolyData</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Create PolyData</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/00-load/index.rst:176
#: ../../pyvista/doc/source/examples/index.rst:199
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example shows how to "
"build a simple pyvista.PolyData using triangle strips.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example shows how to "
"build a simple pyvista.PolyData using triangle strips.\">"

#: ../../pyvista/doc/source/examples/00-load/index.rst:185
#: ../../pyvista/doc/source/examples/index.rst:208
msgid ":ref:`sphx_glr_examples_00-load_create-polydata-strips.py`"
msgstr ":ref:`sphx_glr_examples_00-load_create-polydata-strips.py`"

#: ../../pyvista/doc/source/examples/00-load/index.rst:187
#: ../../pyvista/doc/source/examples/index.rst:210
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Triangle Strips</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Triangle Strips</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/00-load/index.rst:193
#: ../../pyvista/doc/source/examples/index.rst:216
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example shows how to "
"build a simple pyvista.UnstructuredGrid using polyhedra. We will be u...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example shows how to "
"build a simple pyvista.UnstructuredGrid using polyhedra. We will be u...\">"

#: ../../pyvista/doc/source/examples/00-load/index.rst:202
#: ../../pyvista/doc/source/examples/index.rst:225
msgid ":ref:`sphx_glr_examples_00-load_create-polyhedron.py`"
msgstr ":ref:`sphx_glr_examples_00-load_create-polyhedron.py`"

#: ../../pyvista/doc/source/examples/00-load/index.rst:204
#: ../../pyvista/doc/source/examples/index.rst:227
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Unstructured Grid with Polyhedra</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Unstructured Grid with Polyhedra</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/00-load/index.rst:210
#: ../../pyvista/doc/source/examples/index.rst:233
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create a spline/polyline "
"from a numpy array of XYZ vertices using pyvista.Spline.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create a spline/polyline "
"from a numpy array of XYZ vertices using pyvista.Spline.\">"

#: ../../pyvista/doc/source/examples/00-load/index.rst:219
#: ../../pyvista/doc/source/examples/index.rst:242
msgid ":ref:`sphx_glr_examples_00-load_create-spline.py`"
msgstr ":ref:`sphx_glr_examples_00-load_create-spline.py`"

#: ../../pyvista/doc/source/examples/00-load/index.rst:221
#: ../../pyvista/doc/source/examples/index.rst:244
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Creating a Spline</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Creating a Spline</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/00-load/index.rst:227
#: ../../pyvista/doc/source/examples/index.rst:250
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create a StructuredGrid "
"surface from NumPy arrays\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create a StructuredGrid "
"surface from NumPy arrays\">"

#: ../../pyvista/doc/source/examples/00-load/index.rst:236
#: ../../pyvista/doc/source/examples/index.rst:259
msgid ":ref:`sphx_glr_examples_00-load_create-structured-surface.py`"
msgstr ":ref:`sphx_glr_examples_00-load_create-structured-surface.py`"

#: ../../pyvista/doc/source/examples/00-load/index.rst:238
#: ../../pyvista/doc/source/examples/index.rst:261
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Creating a Structured Surface</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Creating a Structured Surface</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/00-load/index.rst:244
#: ../../pyvista/doc/source/examples/index.rst:267
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Drape a surface (2D array) "
"from a line in 3D space.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Drape a surface (2D array) "
"from a line in 3D space.\">"

#: ../../pyvista/doc/source/examples/00-load/index.rst:253
#: ../../pyvista/doc/source/examples/index.rst:276
msgid ":ref:`sphx_glr_examples_00-load_create-surface-draped.py`"
msgstr ":ref:`sphx_glr_examples_00-load_create-surface-draped.py`"

#: ../../pyvista/doc/source/examples/00-load/index.rst:255
#: ../../pyvista/doc/source/examples/index.rst:278
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Drape 2D Surface From Line</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Drape 2D Surface From Line</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/00-load/index.rst:261
#: ../../pyvista/doc/source/examples/index.rst:284
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create a surface from a set"
" of points through a Delaunay triangulation.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create a surface from a set"
" of points through a Delaunay triangulation.\">"

#: ../../pyvista/doc/source/examples/00-load/index.rst:270
#: ../../pyvista/doc/source/examples/index.rst:293
msgid ":ref:`sphx_glr_examples_00-load_create-tri-surface.py`"
msgstr ":ref:`sphx_glr_examples_00-load_create-tri-surface.py`"

#: ../../pyvista/doc/source/examples/00-load/index.rst:272
#: ../../pyvista/doc/source/examples/index.rst:295
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Create Triangulated Surface</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Create Triangulated Surface</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/00-load/index.rst:278
#: ../../pyvista/doc/source/examples/index.rst:301
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Plot connections between "
"points in 3D as cylinders, colored by scalars.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Plot connections between "
"points in 3D as cylinders, colored by scalars.\">"

#: ../../pyvista/doc/source/examples/00-load/index.rst:287
#: ../../pyvista/doc/source/examples/index.rst:310
msgid ":ref:`sphx_glr_examples_00-load_create-truss.py`"
msgstr ":ref:`sphx_glr_examples_00-load_create-truss.py`"

#: ../../pyvista/doc/source/examples/00-load/index.rst:289
#: ../../pyvista/doc/source/examples/index.rst:312
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Plot Truss-like FEA Solution with Cylinders</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Plot Truss-like FEA Solution with Cylinders</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/00-load/index.rst:295
#: ../../pyvista/doc/source/examples/index.rst:318
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create a simple uniform "
"grid from a 3D NumPy array of values.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create a simple uniform "
"grid from a 3D NumPy array of values.\">"

#: ../../pyvista/doc/source/examples/00-load/index.rst:304
#: ../../pyvista/doc/source/examples/index.rst:327
msgid ":ref:`sphx_glr_examples_00-load_create-uniform-grid.py`"
msgstr ":ref:`sphx_glr_examples_00-load_create-uniform-grid.py`"

#: ../../pyvista/doc/source/examples/00-load/index.rst:306
#: ../../pyvista/doc/source/examples/index.rst:329
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Creating a Uniform Grid</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Creating a Uniform Grid</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/00-load/index.rst:312
#: ../../pyvista/doc/source/examples/index.rst:335
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create an irregular, "
"unstructured grid from NumPy arrays.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create an irregular, "
"unstructured grid from NumPy arrays.\">"

#: ../../pyvista/doc/source/examples/00-load/index.rst:321
#: ../../pyvista/doc/source/examples/index.rst:344
msgid ":ref:`sphx_glr_examples_00-load_create-unstructured-surface.py`"
msgstr ":ref:`sphx_glr_examples_00-load_create-unstructured-surface.py`"

#: ../../pyvista/doc/source/examples/00-load/index.rst:323
#: ../../pyvista/doc/source/examples/index.rst:346
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Creating an Unstructured Grid</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Creating an Unstructured Grid</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/00-load/index.rst:329
#: ../../pyvista/doc/source/examples/index.rst:352
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example extends the "
"create_unstructured_example example by including an explanation of lin...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example extends the "
"create_unstructured_example example by including an explanation of lin...\">"

#: ../../pyvista/doc/source/examples/00-load/index.rst:338
#: ../../pyvista/doc/source/examples/index.rst:361
msgid ":ref:`sphx_glr_examples_00-load_linear-cells.py`"
msgstr ":ref:`sphx_glr_examples_00-load_linear-cells.py`"

#: ../../pyvista/doc/source/examples/00-load/index.rst:340
#: ../../pyvista/doc/source/examples/index.rst:363
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Linear Cells</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Linear Cells</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/00-load/index.rst:346
#: ../../pyvista/doc/source/examples/index.rst:369
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"First, download the "
"examples.  Note that here we&#x27;re using a high dynamic range texture "
"since gl...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"First, download the "
"examples.  Note that here we&#x27;re using a high dynamic range texture "
"since gl...\">"

#: ../../pyvista/doc/source/examples/00-load/index.rst:355
#: ../../pyvista/doc/source/examples/index.rst:378
msgid ":ref:`sphx_glr_examples_00-load_load-gltf.py`"
msgstr ":ref:`sphx_glr_examples_00-load_load-gltf.py`"

#: ../../pyvista/doc/source/examples/00-load/index.rst:357
#: ../../pyvista/doc/source/examples/index.rst:380
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Working with glTF Files</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Working with glTF Files</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/00-load/index.rst:363
#: ../../pyvista/doc/source/examples/index.rst:386
msgid "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Working with VRML Files\">"
msgstr "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Working with VRML Files\">"

#: ../../pyvista/doc/source/examples/00-load/index.rst:372
#: ../../pyvista/doc/source/examples/index.rst:395
msgid ":ref:`sphx_glr_examples_00-load_load-vrml.py`"
msgstr ":ref:`sphx_glr_examples_00-load_load-vrml.py`"

#: ../../pyvista/doc/source/examples/00-load/index.rst:374
#: ../../pyvista/doc/source/examples/index.rst:397
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Working with VRML Files</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Working with VRML Files</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/00-load/index.rst:380
#: ../../pyvista/doc/source/examples/index.rst:403
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"PyVista leverages `meshio`_"
" to read many mesh formats not natively supported by VTK including t...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"PyVista leverages `meshio`_"
" to read many mesh formats not natively supported by VTK including t...\">"

#: ../../pyvista/doc/source/examples/00-load/index.rst:389
#: ../../pyvista/doc/source/examples/index.rst:412
msgid ":ref:`sphx_glr_examples_00-load_read-dolfin.py`"
msgstr ":ref:`sphx_glr_examples_00-load_read-dolfin.py`"

#: ../../pyvista/doc/source/examples/00-load/index.rst:391
#: ../../pyvista/doc/source/examples/index.rst:414
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Read FEniCS/Dolfin Meshes</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Read FEniCS/Dolfin Meshes</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/00-load/index.rst:397
#: ../../pyvista/doc/source/examples/index.rst:420
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Read a dataset from a known"
" file type.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Read a dataset from a known"
" file type.\">"

#: ../../pyvista/doc/source/examples/00-load/index.rst:406
#: ../../pyvista/doc/source/examples/index.rst:429
msgid ":ref:`sphx_glr_examples_00-load_read-file.py`"
msgstr ":ref:`sphx_glr_examples_00-load_read-file.py`"

#: ../../pyvista/doc/source/examples/00-load/index.rst:408
#: ../../pyvista/doc/source/examples/index.rst:431
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Load and Plot from a File</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Load and Plot from a File</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/00-load/index.rst:414
#: ../../pyvista/doc/source/examples/index.rst:437
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Read and plot image files "
"(JPEG, TIFF, PNG, etc).\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Read and plot image files "
"(JPEG, TIFF, PNG, etc).\">"

#: ../../pyvista/doc/source/examples/00-load/index.rst:423
#: ../../pyvista/doc/source/examples/index.rst:446
msgid ":ref:`sphx_glr_examples_00-load_read-image.py`"
msgstr ":ref:`sphx_glr_examples_00-load_read-image.py`"

#: ../../pyvista/doc/source/examples/00-load/index.rst:425
#: ../../pyvista/doc/source/examples/index.rst:448
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Read Image Files</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Read Image Files</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/00-load/index.rst:431
#: ../../pyvista/doc/source/examples/index.rst:454
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The VTK library supports "
"parallel file formats. Reading meshes broken up into several files is ...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The VTK library supports "
"parallel file formats. Reading meshes broken up into several files is ...\">"

#: ../../pyvista/doc/source/examples/00-load/index.rst:440
#: ../../pyvista/doc/source/examples/index.rst:463
msgid ":ref:`sphx_glr_examples_00-load_read-parallel.py`"
msgstr ":ref:`sphx_glr_examples_00-load_read-parallel.py`"

#: ../../pyvista/doc/source/examples/00-load/index.rst:442
#: ../../pyvista/doc/source/examples/index.rst:465
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Parallel Files</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Parallel Files</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/00-load/index.rst:448
#: ../../pyvista/doc/source/examples/index.rst:471
msgid "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Load data using a Reader\">"
msgstr "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Load data using a Reader\">"

#: ../../pyvista/doc/source/examples/00-load/index.rst:457
#: ../../pyvista/doc/source/examples/index.rst:480
msgid ":ref:`sphx_glr_examples_00-load_reader.py`"
msgstr ":ref:`sphx_glr_examples_00-load_reader.py`"

#: ../../pyvista/doc/source/examples/00-load/index.rst:459
#: ../../pyvista/doc/source/examples/index.rst:482
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Load data using a Reader</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Load data using a Reader</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/00-load/index.rst:465
#: ../../pyvista/doc/source/examples/index.rst:488
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Use a topographic surface "
"to create a 3D terrain-following mesh.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Use a topographic surface "
"to create a 3D terrain-following mesh.\">"

#: ../../pyvista/doc/source/examples/00-load/index.rst:474
#: ../../pyvista/doc/source/examples/index.rst:497
msgid ":ref:`sphx_glr_examples_00-load_terrain-mesh.py`"
msgstr ":ref:`sphx_glr_examples_00-load_terrain-mesh.py`"

#: ../../pyvista/doc/source/examples/00-load/index.rst:476
#: ../../pyvista/doc/source/examples/index.rst:499
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Terrain Following Mesh</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Terrain Following Mesh</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/00-load/index.rst:482
#: ../../pyvista/doc/source/examples/index.rst:505
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"- numpy arrays - "
"trimesh.Trimesh meshes - VTK objects\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"- numpy arrays - "
"trimesh.Trimesh meshes - VTK objects\">"

#: ../../pyvista/doc/source/examples/00-load/index.rst:491
#: ../../pyvista/doc/source/examples/index.rst:514
msgid ":ref:`sphx_glr_examples_00-load_wrap-trimesh.py`"
msgstr ":ref:`sphx_glr_examples_00-load_wrap-trimesh.py`"

#: ../../pyvista/doc/source/examples/00-load/index.rst:493
#: ../../pyvista/doc/source/examples/index.rst:516
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Wrapping Other Objects</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Wrapping Other Objects</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/00-load/index.rst:499
#: ../../pyvista/doc/source/examples/01-filter/index.rst:758
#: ../../pyvista/doc/source/examples/02-plot/index.rst:965
#: ../../pyvista/doc/source/examples/03-widgets/index.rst:197
#: ../../pyvista/doc/source/examples/04-lights/index.rst:146
#: ../../pyvista/doc/source/examples/98-common/index.rst:41
#: ../../pyvista/doc/source/examples/99-advanced/index.rst:324
#: ../../pyvista/doc/source/examples/index.rst:24
#: ../../pyvista/doc/source/examples/index.rst:522
#: ../../pyvista/doc/source/examples/index.rst:1279
#: ../../pyvista/doc/source/examples/index.rst:2243
#: ../../pyvista/doc/source/examples/index.rst:2438
#: ../../pyvista/doc/source/examples/index.rst:2582
#: ../../pyvista/doc/source/examples/index.rst:2622
#: ../../pyvista/doc/source/examples/index.rst:2945
msgid "</div>"
msgstr "</div>"

#: ../../pyvista/doc/source/examples/00-load/linear-cells.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_00-load_linear-cells.py>` to"
" download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_00-load_linear-cells.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/00-load/linear-cells.rst:24
msgid "Linear Cells"
msgstr "線形セル"

#: ../../pyvista/doc/source/examples/00-load/linear-cells.rst:26
msgid ""
"This example extends the :ref:`create_unstructured_example` example by "
"including an explanation of linear VTK cell types and how you can create "
"them in PyVista."
msgstr ""
"このサンプルは :ref:`create_unstructured_example` のサンプルを拡張して，線形 VTK セルタイプの説明と "
"PyVista でどのように作成できるかの説明を含んでいます．"

#: ../../pyvista/doc/source/examples/00-load/linear-cells.rst:30
msgid ""
"Linear cells are cells where points only occur at the edges of each cell. "
"Non-linear cells contain additional points along the edges of the cell."
msgstr "線形セルとは，各セルのエッジにのみ点が存在するセルのことです．非線形のセルには，セルのエッジに沿ってさらに点が存在します．"

#: ../../pyvista/doc/source/examples/00-load/linear-cells.rst:33
msgid ""
"For more details regarding what a :class:`pyvista.UnstructuredGrid` is, "
"please see :ref:`point_sets_api`."
msgstr ""
":class:`pyvista.UnstructuredGrid` がどのようなものであるかについての詳細は， "
":ref:`point_sets_api` を参照してください．"

#: ../../pyvista/doc/source/examples/00-load/linear-cells.rst:59
msgid "Plot an example cell"
msgstr "セルの例をプロットする"

#: ../../pyvista/doc/source/examples/00-load/linear-cells.rst:60
msgid ""
"PyVista contains a simple utility to plot a single cell, which is the "
"fundamental unit of each :class:`pyvista.UnstructuredGrid`. For example, "
"let's plot a simple :func:`Wedge <pyvista.examples.cells.Wedge>`."
msgstr ""
"PyVistaには，各 :class:`pyvista.UnstructuredGrid` "
"の基本単位である，1つのセルをプロットするためのシンプルなユーティリティが含まれています．例えば，単純な  :func:`Wedge "
"<pyvista.examples.cells.Wedge>` をプロットしてみましょう．"

#: ../../pyvista/doc/source/examples/00-load/linear-cells.rst:87
msgid "This linear cell is composed of 6 points."
msgstr "この線形セルは6点で構成されています．"

#: ../../pyvista/doc/source/examples/00-load/linear-cells.rst:117
msgid ""
"The UnstructuredGrid is also composed of a single cell and the point indices"
" of that cell are defined in :attr:`cells <pyvista.UnstructuredGrid.cells>`."
msgstr ""
"UnstructuredGridも1つのセルで構成され，そのセルの点インデックスは :attr:`cells "
"<pyvista.UnstructuredGrid.cells>` で定義されています．"

#: ../../pyvista/doc/source/examples/00-load/linear-cells.rst:121
msgid "The leading ``6`` is the number of points in the cell."
msgstr "先頭の ``6`` はセル内のポイント数です．"

#: ../../pyvista/doc/source/examples/00-load/linear-cells.rst:147
msgid "Combine two UnstructuredGrids"
msgstr "2つのUnstructuredGridを結合する"

#: ../../pyvista/doc/source/examples/00-load/linear-cells.rst:148
msgid ""
"We can combine two unstructured grids to create a single unstructured grid "
"using the ``+`` operator."
msgstr "2つの非構造化グリッドを組み合わせて，1つの非構造化グリッドを作るには， ``+`` 演算子を使用します．"

#: ../../pyvista/doc/source/examples/00-load/linear-cells.rst:152
msgid ""
"This is an inefficient way of creating :class:`pyvista.UnstructuredGrid` "
"objects. To see a more efficient implementation see "
":ref:`create_unstructured_example`."
msgstr ""
"これは :class:`pyvista.UnstructuredGrid` オブジェクトを作成するための非効率的な方法です．より効率的な実装を見るには，"
" :ref:`create_unstructured_example` を参照してください．"

#: ../../pyvista/doc/source/examples/00-load/linear-cells.rst:185
msgid ""
"This example helps to illustrate meaning behind the :attr:`cells "
"<pyvista.UnstructuredGrid.cells>` attribute. The first cell, a hexahedron "
"contains 8 points and the hexagonal prism contains 12 points. The ``cells`` "
"attribute shows this along with indices composing each cell."
msgstr ""
"この例は， :attr:`cells <pyvista.UnstructuredGrid.cells>` "
"属性の背後にある意味を説明するのに役立ちます．最初のセルである6面体は8個の点を含み，6角プリズムは12個の点を含んでいます． ``cells`` "
"属性は，各セルを構成するインデックスと共に，これを表示します．"

#: ../../pyvista/doc/source/examples/00-load/linear-cells.rst:215
msgid "Cell Types"
msgstr "セルタイプ"

#: ../../pyvista/doc/source/examples/00-load/linear-cells.rst:216
msgid ""
"PyVista contains the :class:`pyvista.CellType` enumerator, which contains "
"all the available VTK cell types mapped to a Python enumerator. These cell "
"types are used when creating cells and also can be used when checking the "
":attr:`celltypes <pyvista.UnstructuredGrid.celltypes>` attribute. For "
"example ``combined.celltypes`` contains both the ``pv.CellType.HEXAHEDRON`` "
"and ``pv.CellType.HEXAGONAL_PRISM`` cell types."
msgstr ""
"PyVista には :class:`pyvista.CellType` という列挙体があり，利用可能なすべての VTK セルタイプが Python "
"の列挙体にマッピングされています．これらのセルタイプはセルを作成するときに使用され， :attr:`celltypes "
"<pyvista.UnstructuredGrid.celltypes>` 属性を確認するときにも使用されます．例えば， "
"``combined.celltypes`` には， ``pv.CellType.HEXAHEDRON`` と "
"``pv.CellType.HEXAGONAL_PRISM`` という両方のセルタイプが含まれます．"

#: ../../pyvista/doc/source/examples/00-load/linear-cells.rst:249
msgid "Create an UnstructuredGrid with a single linear cell"
msgstr "単一の線形セルを持つUnstructuredGridを作成する"

#: ../../pyvista/doc/source/examples/00-load/linear-cells.rst:250
msgid ""
"Now that you know the three main inputs of an "
":class:`pyvista.UnstructuredGrid`, it's quite straightforward to create an "
"unstructured grid with a one or more cells. If you need to reference point "
"ordering or additional, you can either read the source of `cells.py "
"<https://github.com/pyvista/pyvista/blob/main/pyvista/examples/cells.py>`_ "
"or simply create a cell from the ``pyvista.core.cells`` module and inspect "
"its attributes."
msgstr ""
":class:`pyvista.UnstructuredGrid` "
"の3つの主要な入力がわかったので，1つ以上のセルを持つ非構造化グリッドを作成することはとても簡単です．もし，点の順序や追加を参照する必要がある場合は， "
"`cells.py "
"<https://github.com/pyvista/pyvista/blob/main/pyvista/examples/cells.py>`_ "
"のソースを読むか，あるいは ``pyvista.core.cells`` モジュールからセルを作成してその属性を確認することができます．"

#: ../../pyvista/doc/source/examples/00-load/linear-cells.rst:289
msgid "Plot all linear cell Types"
msgstr "すべての線形セルタイプをプロットする"

#: ../../pyvista/doc/source/examples/00-load/linear-cells.rst:290
msgid ""
"Let's create a ``(4, 4)`` :class:`pyvista.Plotter` and plot all 16 linear "
"cells in a single plot."
msgstr ""
"``(4, 4)`` :class:`pyvista.Plotter` を作成し，16個の線形セルすべてを1つのプロットにまとめてみましょう．"

#: ../../pyvista/doc/source/examples/00-load/linear-cells.rst:387
msgid "**Total running time of the script:** ( 0 minutes  3.954 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  3.954 seconds)"

#: ../../pyvista/doc/source/examples/00-load/linear-cells.rst:401
msgid ""
":download:`Download Python source code: linear-cells.py <linear-cells.py>`"
msgstr ""
":download:`Download Python source code: linear-cells.py <linear-cells.py>`"

#: ../../pyvista/doc/source/examples/00-load/linear-cells.rst:405
msgid ""
":download:`Download Jupyter notebook: linear-cells.ipynb <linear-"
"cells.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: linear-cells.ipynb <linear-"
"cells.ipynb>`"

#: ../../pyvista/doc/source/examples/00-load/load-gltf.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_00-load_load-gltf.py>` to "
"download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_00-load_load-gltf.py>` to "
"download the full example code"

#: ../../pyvista/doc/source/examples/00-load/load-gltf.rst:24
msgid "Working with glTF Files"
msgstr "glTFファイルの取り扱いについて"

#: ../../pyvista/doc/source/examples/00-load/load-gltf.rst:25
msgid ""
"Import a glTF file directly into a PyVista plotting scene.  For more details"
" regarding the glTF format, see: https://www.khronos.org/gltf/"
msgstr ""
"glTFファイルをPyVistaのプロッティングシーンに直接インポートできます． glTFフォーマットの詳細については， "
"https://www.khronos.org/gltf/ を参照してください．"

#: ../../pyvista/doc/source/examples/00-load/load-gltf.rst:29
msgid ""
"First, download the examples.  Note that here we're using a high dynamic "
"range texture since glTF files generally contain physically based rendering "
"and VTK v9 supports high dynamic range textures."
msgstr ""
"まず，サンプルをダウンロードします． "
"なお，ここではハイダイナミックレンジのテクスチャを使用していますが，これはglTFファイルが一般的に物理ベースのレンダリングを含んでおり，VTK "
"v9がハイダイナミックレンジのテクスチャをサポートしているためです．"

#: ../../pyvista/doc/source/examples/00-load/load-gltf.rst:54
msgid ""
"Set up the plotter and enable environment textures.  This works well for "
"physically based rendering enabled meshes like the damaged helmet example."
msgstr ""
"プロッタを設定し，環境テクスチャを有効にします． これは，ダメージを受けたヘルメットの例のように，物理ベースのレンダリングが可能なメッシュに有効です．"

#: ../../pyvista/doc/source/examples/00-load/load-gltf.rst:84
msgid ""
"You can also directly read in gltf files and extract the underlying mesh."
msgstr "また，gltfファイルを直接読み込んで，基礎となるメッシュを抽出することもできます．"

#: ../../pyvista/doc/source/examples/00-load/load-gltf.rst:110
msgid "**Total running time of the script:** ( 0 minutes  52.769 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  52.769 seconds)"

#: ../../pyvista/doc/source/examples/00-load/load-gltf.rst:124
msgid ":download:`Download Python source code: load-gltf.py <load-gltf.py>`"
msgstr ":download:`Download Python source code: load-gltf.py <load-gltf.py>`"

#: ../../pyvista/doc/source/examples/00-load/load-gltf.rst:128
msgid ""
":download:`Download Jupyter notebook: load-gltf.ipynb <load-gltf.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: load-gltf.ipynb <load-gltf.ipynb>`"

#: ../../pyvista/doc/source/examples/00-load/load-vrml.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_00-load_load-vrml.py>` to "
"download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_00-load_load-vrml.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/00-load/load-vrml.rst:24
msgid "Working with VRML Files"
msgstr "VRMLファイルの取り扱いについて"

#: ../../pyvista/doc/source/examples/00-load/load-vrml.rst:25
msgid ""
"Import a VRML file directly into a PyVista plotting scene. For more details "
"regarding the VRML format, see: https://en.wikipedia.org/wiki/VRML"
msgstr ""
"VRML ファイルを PyVista の作図シーンに直接インポートします．VRMLフォーマットに関する詳細については， "
"https://en.wikipedia.org/wiki/VRML を参照してください．"

#: ../../pyvista/doc/source/examples/00-load/load-vrml.rst:49
msgid "Set up the plotter and import VRML file."
msgstr "プロッタをセットアップし，VRMLファイルをインポートします．"

#: ../../pyvista/doc/source/examples/00-load/load-vrml.rst:74
msgid "**Total running time of the script:** ( 0 minutes  0.618 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  0.618 seconds)"

#: ../../pyvista/doc/source/examples/00-load/load-vrml.rst:89
msgid ":download:`Download Python source code: load-vrml.py <load-vrml.py>`"
msgstr ":download:`Download Python source code: load-vrml.py <load-vrml.py>`"

#: ../../pyvista/doc/source/examples/00-load/load-vrml.rst:95
msgid ""
":download:`Download Jupyter notebook: load-vrml.ipynb <load-vrml.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: load-vrml.ipynb <load-vrml.ipynb>`"

#: ../../pyvista/doc/source/examples/00-load/read-dolfin.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_00-load_read-dolfin.py>` to "
"download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_00-load_read-dolfin.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/00-load/read-dolfin.rst:22
msgid "Read FEniCS/Dolfin Meshes"
msgstr "FEniCS/Dolfinメッシュを確認．"

#: ../../pyvista/doc/source/examples/00-load/read-dolfin.rst:24
msgid ""
"PyVista leverages `meshio`_ to read many mesh formats not natively supported"
" by VTK including the `FEniCS/Dolfin`_ XML format."
msgstr ""
"PyVistaは `meshio`_ を活用して， `FEniCS/Dolfin`_  "
"XMLフォーマットを含む，VTKがネイティブにサポートしていない多くのメッシュフォーマットを読み込みます．"

#: ../../pyvista/doc/source/examples/00-load/read-dolfin.rst:46
msgid ""
"Let's download an example FEniCS/Dolfin mesh from our example data "
"repository. This will download an XML Dolfin mesh and save it to PyVista's "
"data directory."
msgstr ""
"サンプルデータリポジトリからFEniCS/Dolfinメッシュのサンプルをダウンロードしましょう．これにより，XML "
"Dolfinメッシュがダウンロードされ，PyVistaのデータディレクトリに保存されます．"

#: ../../pyvista/doc/source/examples/00-load/read-dolfin.rst:72
msgid ""
"As shown, we now have an XML Dolfin mesh save locally. This filename can be "
"passed directly to PyVista's :func:`pyvista.read` method to be read into a "
"PyVista mesh."
msgstr ""
"これで，XML Dolfinメッシュをローカルに保存できました．このファイル名は，PyVistaの :func:`pyvista.read` "
"メソッドに直接渡して，PyVistaメッシュに読み込むことができます．"

#: ../../pyvista/doc/source/examples/00-load/read-dolfin.rst:89
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"\n"
"<table>\n"
"<tr><th>UnstructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>5400</td></tr>\n"
"<tr><td>N Points</td><td>2868</td></tr>\n"
"<tr><td>X Bounds</td><td>0.000e+00, 1.000e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>0.000e+00, 1.000e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 0.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>0</td></tr>\n"
"</table>\n"
"\n"
"\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"\n"
"<table>\n"
"<tr><th>UnstructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>5400</td></tr>\n"
"<tr><td>N Points</td><td>2868</td></tr>\n"
"<tr><td>X Bounds</td><td>0.000e+00, 1.000e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>0.000e+00, 1.000e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 0.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>0</td></tr>\n"
"</table>\n"
"\n"
"\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/00-load/read-dolfin.rst:110
msgid "Now we can work on and plot that Dolfin mesh."
msgstr "Dolfinメッシュを加工してプロットすることができます．"

#: ../../pyvista/doc/source/examples/00-load/read-dolfin.rst:133
msgid "**Total running time of the script:** ( 0 minutes  1.044 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.044 seconds)"

#: ../../pyvista/doc/source/examples/00-load/read-dolfin.rst:147
msgid ""
":download:`Download Python source code: read-dolfin.py <read-dolfin.py>`"
msgstr ""
":download:`Download Python source code: read-dolfin.py <read-dolfin.py>`"

#: ../../pyvista/doc/source/examples/00-load/read-dolfin.rst:151
msgid ""
":download:`Download Jupyter notebook: read-dolfin.ipynb <read-dolfin.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: read-dolfin.ipynb <read-dolfin.ipynb>`"

#: ../../pyvista/doc/source/examples/00-load/read-file.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_00-load_read-file.py>` to "
"download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_00-load_read-file.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/00-load/read-file.rst:24
msgid "Load and Plot from a File"
msgstr "ファイルからロードおよびプロットする"

#: ../../pyvista/doc/source/examples/00-load/read-file.rst:26
msgid "Read a dataset from a known file type."
msgstr "既知のファイルタイプからデータセットを読み取ります．"

#: ../../pyvista/doc/source/examples/00-load/read-file.rst:30
msgid ""
"Loading a mesh is trivial - if your data is in one of the many supported "
"file formats, simply use :func:`pyvista.read` to load your spatially "
"referenced dataset into a PyVista mesh object."
msgstr ""
"メッシュのロードは簡単です．- データが多くのサポートされているファイルフォーマットの1つである場合は， :func:`pyvista.read` "
"を使用して空間的に参照されるデータセットをPyVistaメッシュオブジェクトにロードします．"

#: ../../pyvista/doc/source/examples/00-load/read-file.rst:34
msgid ""
"The following code block uses a built-in example file and displays an "
"airplane mesh."
msgstr "次のコードブロックでは，組み込みのサンプルファイルを使用して，飛行機のメッシュを表示します．"

#: ../../pyvista/doc/source/examples/00-load/read-file.rst:54
msgid ""
"The following code block uses a built-in example file, displays an airplane "
"mesh and returns the camera's position:"
msgstr "次のコードブロックでは，組み込みのサンプルファイルを使用して，飛行機のメッシュを表示し，カメラの位置を取得します．"

#: ../../pyvista/doc/source/examples/00-load/read-file.rst:81
msgid ""
"Note the above filename, it's a ``.ply`` file - one of the many supported "
"formats in PyVista."
msgstr "上記のファイル名に注意してください．これは ``.ply`` ファイルで，PyVistaでサポートされている多くのフォーマットの1つです．"

#: ../../pyvista/doc/source/examples/00-load/read-file.rst:106
msgid ""
"You can also take a screenshot without creating an interactive plot window "
"using the ``Plotter``:"
msgstr "``Plotter`` を使用して，インタラクティブなプロットウィンドウを作成せずにスクリーンショットを撮ることもできます．"

#: ../../pyvista/doc/source/examples/00-load/read-file.rst:133
msgid "The points from the mesh are directly accessible as a NumPy array:"
msgstr "メッシュのポイントは，NumPy配列として直接アクセスできます．"

#: ../../pyvista/doc/source/examples/00-load/read-file.rst:163
msgid "The faces from the mesh are also directly accessible as a NumPy array:"
msgstr "メッシュの面は，NumPy配列として直接アクセスできます．"

#: ../../pyvista/doc/source/examples/00-load/read-file.rst:194
msgid ""
"Loading other files types is just as easy. Simply pass your file path to the"
" :func:`pyvista.read` function and that's it."
msgstr "他のファイルタイプのロードも同じくらい簡単です．ファイルパスを :func:`pyvista.read` 関数に渡すだけです．"

#: ../../pyvista/doc/source/examples/00-load/read-file.rst:197
msgid ""
"Here are a few other examples - simply replace ``examples.download_*`` in "
"the examples below with ``pyvista.read('path/to/you/file.ext')``"
msgstr ""
"その他の例をいくつか紹介します -  ``examples.download_*`` を "
"``pyvista.read('path/to/you/file.ext')`` で置き換えています．"

#: ../../pyvista/doc/source/examples/00-load/read-file.rst:202
msgid "Example STL file:"
msgstr "STLファイルの例:"

#: ../../pyvista/doc/source/examples/00-load/read-file.rst:226
msgid "Example OBJ file"
msgstr "OBJファイルの例:"

#: ../../pyvista/doc/source/examples/00-load/read-file.rst:250
msgid "Example BYU file"
msgstr "BYUファイルの例:"

#: ../../pyvista/doc/source/examples/00-load/read-file.rst:274
msgid "Example VTK file"
msgstr "VTKファイルの例:"

#: ../../pyvista/doc/source/examples/00-load/read-file.rst:298
msgid "**Total running time of the script:** ( 0 minutes  3.601 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  3.601 seconds)"

#: ../../pyvista/doc/source/examples/00-load/read-file.rst:312
msgid ":download:`Download Python source code: read-file.py <read-file.py>`"
msgstr ":download:`Download Python source code: read-file.py <read-file.py>`"

#: ../../pyvista/doc/source/examples/00-load/read-file.rst:316
msgid ""
":download:`Download Jupyter notebook: read-file.ipynb <read-file.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: read-file.ipynb <read-file.ipynb>`"

#: ../../pyvista/doc/source/examples/00-load/read-image.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_00-load_read-image.py>` to "
"download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_00-load_read-image.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/00-load/read-image.rst:22
msgid "Read Image Files"
msgstr "イメージファイルの読み込み"

#: ../../pyvista/doc/source/examples/00-load/read-image.rst:24
msgid "Read and plot image files (JPEG, TIFF, PNG, etc)."
msgstr "イメージファイル(JPEG，TIFF，PNGなど)の読み込みとプロットを行います．"

#: ../../pyvista/doc/source/examples/00-load/read-image.rst:41
msgid ""
"PyVista fully supports reading images into their own spatially referenced "
"data objects (this example) as well as supports texture mapping of images "
"onto datasets (see :ref:`texture_example`)."
msgstr ""
"PyVistaでは，イメージを空間的に参照されるデータオブジェクト(この例)に読み込むことが完全にサポートされており，イメージをデータセット( "
":ref:`texture_example` を参照)にテクスチャマッピングすることもサポートされています．"

#: ../../pyvista/doc/source/examples/00-load/read-image.rst:45
msgid ""
"Download a JPEG image of a puppy and load it to :class:`pyvista.ImageData`. "
"This could similarly be implemented with any image file by using the "
":func:`pyvista.read` function and passing the path to the image file."
msgstr ""
"子犬のJPEG画像をダウンロードし， :class:`pyvista.ImageData` にロードします．これは "
":func:`pyvista.read` 関数を使用し，画像ファイルへのパスを渡すことで，どんな画像ファイルにも同様に実装できます．"

#: ../../pyvista/doc/source/examples/00-load/read-image.rst:67
msgid ""
"When plotting images stored in :class:`pyvista.ImageData` objects, it is "
"important to specify using the `rgb` option when plotting to ensure that the"
" image's true colors are used and not mapped."
msgstr ""
" :class:`pyvista.ImageData` オブジェクトに保存されたイメージを印刷する場合，イメージのTrue "
"Colorが使用され，マップされないことを確認するために，プロット時に `rgb` オプションを使用して指定することが重要です．"

#: ../../pyvista/doc/source/examples/00-load/read-image.rst:113
msgid "**Total running time of the script:** (0 minutes 38.965 seconds)"
msgstr "**Total running time of the script:** (0 minutes 38.965 seconds)"

#: ../../pyvista/doc/source/examples/00-load/read-image.rst:127
msgid ":download:`Download Python source code: read-image.py <read-image.py>`"
msgstr ""
":download:`Download Python source code: read-image.py <read-image.py>`"

#: ../../pyvista/doc/source/examples/00-load/read-image.rst:131
msgid ""
":download:`Download Jupyter notebook: read-image.ipynb <read-image.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: read-image.ipynb <read-image.ipynb>`"

#: ../../pyvista/doc/source/examples/00-load/read-parallel.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_00-load_read-parallel.py>` to "
"download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_00-load_read-parallel.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/00-load/read-parallel.rst:24
msgid "Parallel Files"
msgstr "並列フィルタ"

#: ../../pyvista/doc/source/examples/00-load/read-parallel.rst:26
msgid ""
"The VTK library supports parallel file formats. Reading meshes broken up "
"into several files is natively supported by VTK and PyVista."
msgstr ""
"VTKライブラリーは並列ファイル・フォーマットをサポートしています．複数のファイルに分割されたメッシュの読み込みは，VTKおよびPyVistaでネイティブにサポートされています．"

#: ../../pyvista/doc/source/examples/00-load/read-parallel.rst:47
msgid ""
"Let's go ahead and download the sample dataset containing an "
":class:`pyvista.UnstructuredGrid` broken up into several files."
msgstr ""
"いくつかのファイルに分割された :class:`pyvista.UnstructuredGrid` "
"を含むサンプルデータセットをダウンロードしてみましょう．"

#: ../../pyvista/doc/source/examples/00-load/read-parallel.rst:50
msgid ""
"Let's inspect where this downloaded our dataset by setting ``load=False`` "
"and looking at the directory containing the file we downloaded."
msgstr ""
"``load=False`` を設定し，ダウンロードしたファイルがあるディレクトリを見て，データセットがどこにダウンロードされたかを調べてみましょう．"

#: ../../pyvista/doc/source/examples/00-load/read-parallel.rst:101
msgid ""
"Note that a ``.pvtu`` file is available alongside a directory. This "
"directory contains all the parallel files or pieces that make the whole "
"mesh. We can simply read the ``.pvtu`` file and VTK will handle putting the "
"mesh together."
msgstr ""
"``.pvtu`` "
"ファイルはディレクトリの横にあるので注意してください．このディレクトリには，メッシュ全体を構成するすべての並列ファイルまたはピースが含まれています． "
"``.pvtu`` ファイルを読み取るだけで，VTKがメッシュをまとめます．"

#: ../../pyvista/doc/source/examples/00-load/read-parallel.rst:119
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>UnstructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>39353</td></tr>\n"
"<tr><td>N Points</td><td>48823</td></tr>\n"
"<tr><td>X Bounds</td><td>5.300e+01, 1.210e+02</td></tr>\n"
"<tr><td>Y Bounds</td><td>5.000e+01, 9.700e+01</td></tr>\n"
"<tr><td>Z Bounds</td><td>6.400e+01, 1.820e+02</td></tr>\n"
"<tr><td>N Arrays</td><td>5</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td>node_value</td><td>Points</td><td>int32</td><td>1</td><td>0.000e+00</td><td>3.000e+00</td></tr>\n"
"<tr><td>simerr_type</td><td>Points</td><td>int32</td><td>1</td><td>0.000e+00</td><td>3.000e+00</td></tr>\n"
"<tr><td>density</td><td>Cells</td><td>float32</td><td>1</td><td>2.203e-01</td><td>5.232e-01</td></tr>\n"
"<tr><td>velocity</td><td>Cells</td><td>float32</td><td>3</td><td>-3.607e-01</td><td>8.989e-02</td></tr>\n"
"<tr><td>shearstress</td><td>Cells</td><td>float32</td><td>1</td><td>6.160e-05</td><td>1.726e-02</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>UnstructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>39353</td></tr>\n"
"<tr><td>N Points</td><td>48823</td></tr>\n"
"<tr><td>X Bounds</td><td>5.300e+01, 1.210e+02</td></tr>\n"
"<tr><td>Y Bounds</td><td>5.000e+01, 9.700e+01</td></tr>\n"
"<tr><td>Z Bounds</td><td>6.400e+01, 1.820e+02</td></tr>\n"
"<tr><td>N Arrays</td><td>5</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td>node_value</td><td>Points</td><td>int32</td><td>1</td><td>0.000e+00</td><td>3.000e+00</td></tr>\n"
"<tr><td>simerr_type</td><td>Points</td><td>int32</td><td>1</td><td>0.000e+00</td><td>3.000e+00</td></tr>\n"
"<tr><td>density</td><td>Cells</td><td>float32</td><td>1</td><td>2.203e-01</td><td>5.232e-01</td></tr>\n"
"<tr><td>velocity</td><td>Cells</td><td>float32</td><td>3</td><td>-3.607e-01</td><td>8.989e-02</td></tr>\n"
"<tr><td>shearstress</td><td>Cells</td><td>float32</td><td>1</td><td>6.160e-05</td><td>1.726e-02</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/00-load/read-parallel.rst:150
msgid "Plot the pieced together mesh"
msgstr "つなぎ合わせたメッシュをプロットします"

#: ../../pyvista/doc/source/examples/00-load/read-parallel.rst:191
msgid "**Total running time of the script:** ( 0 minutes  1.869 seconds)"
msgstr "**スクリプトの合計実行時間:** ( 0 分  1.869 秒)"

#: ../../pyvista/doc/source/examples/00-load/read-parallel.rst:206
msgid ""
":download:`Download Python source code: read-parallel.py <read-parallel.py>`"
msgstr ""
":download:`Download Python source code: read-parallel.py <read-parallel.py>`"

#: ../../pyvista/doc/source/examples/00-load/read-parallel.rst:212
msgid ""
":download:`Download Jupyter notebook: read-parallel.ipynb <read-"
"parallel.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: read-parallel.ipynb <read-"
"parallel.ipynb>`"

#: ../../pyvista/doc/source/examples/00-load/reader.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_00-load_reader.py>` to download"
" the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_00-load_reader.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/00-load/reader.rst:24
msgid "Load data using a Reader"
msgstr "リーダーによるデータの読み込み"

#: ../../pyvista/doc/source/examples/00-load/reader.rst:28
msgid ""
"To have more control over reading data files, use a class based reader. This"
" class allows for more fine-grained control over reading datasets from "
"files.  See :func:`pyvista.get_reader` for a list of file types supported."
msgstr ""
"データファイルの読み取りをより細かく制御するには，クラスベースのリーダーを使用します．このクラスは，ファイルからのデータセットの読み込みをより細かく制御することができます．"
" サポートされているファイルタイプのリストは， :func:`pyvista.get_reader` を参照してください．"

#: ../../pyvista/doc/source/examples/00-load/reader.rst:54
msgid ""
"An XML PolyData file in ``.vtp`` format is created.  It will be saved in a "
"temporary file for this example."
msgstr "``.vtp`` 形式のXML PolyDataファイルが作成されます． このファイルは，今回の例では一時ファイルに保存されます．"

#: ../../pyvista/doc/source/examples/00-load/reader.rst:82
msgid ""
":class:`pyvista.Sphere` already includes ``Normals`` point data.  "
"Additionally ``height`` point data and ``id`` cell data is added."
msgstr ""
":class:`pyvista.Sphere` には，すでに ``Normals`` という点データが含まれています． さらに， ``height`` "
"のポイントデータと ``id`` のセルデータを追加します．"

#: ../../pyvista/doc/source/examples/00-load/reader.rst:103
msgid ""
":func:`pyvista.read` function reads all the data in the file. This provides "
"a quick and easy one-liner to read data from files."
msgstr ""
":func:`pyvista.read` "
"関数は，ファイル内のすべてのデータを読み込みます．これは，ファイルからデータを読み取るための，迅速で簡単なワンライナーを提供します．"

#: ../../pyvista/doc/source/examples/00-load/reader.rst:131
msgid ""
"Using :func:`pyvista.get_reader` enables more fine-grained control of "
"reading data files. Reading in a ``.vtp``` file uses the "
":class:`pyvista.XMLPolyDataReader`."
msgstr ""
":func:`pyvista.get_reader` を使用することで，データファイルの読み込みをより細かく制御することができます． ``.vtp```"
" ファイルの読み込みには， :class:`pyvista.XMLPolyDataReader` を使用します．"

#: ../../pyvista/doc/source/examples/00-load/reader.rst:160
msgid ""
"Some reader classes, including this one, offer the ability to inspect the "
"data file before loading all the data. For example, we can access the number"
" and names of point and cell arrays."
msgstr ""
"このクラスを含め，いくつかのリーダークラスは，すべてのデータを読み込む前にデータファイルを検査する機能を提供しています．例えば，点配列やセル配列の数や名前にアクセスすることができます．"

#: ../../pyvista/doc/source/examples/00-load/reader.rst:194
msgid ""
"We can select which data to read by selectively disabling or enabling "
"specific arrays or all arrays.  Here we disable all the cell arrays and the "
"``Normals`` point array to leave only the ``height`` point array.  The data "
"is finally read into a pyvista object that only has the ``height`` point "
"array."
msgstr ""
"特定の配列，あるいはすべての配列を選択的に無効あるいは有効にすることで，読み取るデータを選択することができます． ここでは，すべてのセル配列と "
"``Normals`` 点の配列を無効にして， ``height`` 点の配列だけを残しています． データは最終的に ``height`` "
"点の配列のみを持つ pyvista オブジェクトに読み込まれます．"

#: ../../pyvista/doc/source/examples/00-load/reader.rst:230
msgid ""
"We can reuse the reader object to choose different variables if needed."
msgstr "必要に応じて，リーダーオブジェクトを再利用して，異なる変数を選択することができます．"

#: ../../pyvista/doc/source/examples/00-load/reader.rst:258
msgid ""
"Some Readers support setting different time points or iterations. In both "
"cases, this is done using the time point functionality. The NACA dataset has"
" two such points with density.  This dataset is in EnSight format, which "
"uses the :class:`pyvista.EnSightReader` class."
msgstr ""
"一部のリーダーでは，異なるタイムポイントやイテレーションの設定が可能です．いずれの場合も，タイムポイント機能を使って設定します．NACAデータセットには，密度を持つ2つのそのようなポイントがあります．"
" このデータセットはEnSight形式で， :class:`pyvista.EnSightReader` クラスを使用しています．"

#: ../../pyvista/doc/source/examples/00-load/reader.rst:294
msgid ""
"First both time points are read in, and then the difference in density is "
"calculated and saved on the second mesh.  The read method of "
":class:`pyvista.EnSightReader` returns a :class:`pyvista.MultiBlock` "
"instance. In this dataset, there are 3 blocks and the new scalar must be "
"applied on each block."
msgstr ""
"まず両方のタイムポイントが読み込まれ，次に密度の差が計算され，2番目のメッシュに保存されます．:class:`pyvista.EnSightReader`"
" の read メソッドは， :class:`pyvista.MultiBlock` "
"インスタンスを取得します．このデータセットでは，3つのブロックがあり，新しいスカラーを各ブロックに適用する必要があります．"

#: ../../pyvista/doc/source/examples/00-load/reader.rst:322
msgid ""
"The value of `DENS` is plotted on the left column for both time points, and "
"the difference on the right."
msgstr "左側の列には両時点での `DENS` の値が，右側の列にはその差がプロットされています．"

#: ../../pyvista/doc/source/examples/00-load/reader.rst:364
msgid ""
"Reading time points or iterations can also be utilized to make a movie. "
"Compare to :ref:`gif_movie_example`, but here a set of files are read in "
"through a ParaView Data format file. This file format and reader also return"
" a :class:`pyvista.MultiBlock` mesh."
msgstr ""
"タイムポイントやイタレーションを読み込んで，ムービーを作ることもできます． :ref:`gif_movie_example` "
"と似ていますが，ここではParaViewデータ形式のファイルを使って，ファイルセットを読み込みます．このファイルフォーマットとリーダーは， "
":class:`pyvista.MultiBlock` メッシュも取得します．"

#: ../../pyvista/doc/source/examples/00-load/reader.rst:395
msgid ""
"For each time point, plot the mesh colored by the height. Put iteration "
"value in top left"
msgstr "各時点で，高さによって色付けされたメッシュをプロットします．左上に反復値を表示します"

#: ../../pyvista/doc/source/examples/00-load/reader.rst:432
msgid "**Total running time of the script:** ( 0 minutes  8.451 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  8.451 seconds)"

#: ../../pyvista/doc/source/examples/00-load/reader.rst:447
msgid ":download:`Download Python source code: reader.py <reader.py>`"
msgstr ":download:`Download Python source code: reader.py <reader.py>`"

#: ../../pyvista/doc/source/examples/00-load/reader.rst:453
msgid ":download:`Download Jupyter notebook: reader.ipynb <reader.ipynb>`"
msgstr ":download:`Download Jupyter notebook: reader.ipynb <reader.ipynb>`"

#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:8
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:8
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:8
#: ../../pyvista/doc/source/examples/03-widgets/sg_execution_times.rst:8
#: ../../pyvista/doc/source/examples/04-lights/sg_execution_times.rst:8
#: ../../pyvista/doc/source/examples/98-common/sg_execution_times.rst:8
#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:8
msgid "Computation times"
msgstr "計算時間"

#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:9
msgid "**01:04.468** total execution time for **examples_00-load** files:"
msgstr "**01:04.468** total execution time for **examples_00-load** files:"

#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:12
msgid ":ref:`sphx_glr_examples_00-load_read-image.py` (``read-image.py``)"
msgstr ":ref:`sphx_glr_examples_00-load_read-image.py` (``read-image.py``)"

#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:12
msgid "00:38.965"
msgstr "00:38.965"

#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:12
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:14
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:16
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:18
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:20
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:22
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:24
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:26
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:28
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:30
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:32
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:34
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:36
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:38
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:40
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:42
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:44
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:46
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:48
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:50
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:52
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:54
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:56
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:58
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:60
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:62
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:64
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:66
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:12
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:14
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:16
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:18
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:20
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:22
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:24
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:26
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:28
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:30
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:32
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:34
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:36
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:38
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:40
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:42
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:44
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:46
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:48
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:50
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:52
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:54
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:56
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:58
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:60
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:62
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:64
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:66
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:68
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:70
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:72
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:74
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:76
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:78
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:80
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:82
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:84
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:86
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:88
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:90
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:92
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:94
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:96
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:12
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:14
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:16
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:18
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:20
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:22
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:24
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:26
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:28
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:30
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:32
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:34
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:36
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:38
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:40
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:42
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:44
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:46
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:48
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:50
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:52
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:54
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:56
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:58
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:60
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:62
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:64
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:66
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:68
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:70
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:72
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:74
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:76
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:78
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:80
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:82
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:84
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:86
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:88
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:90
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:92
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:94
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:96
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:98
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:100
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:102
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:104
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:106
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:108
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:110
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:112
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:114
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:116
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:118
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:120
#: ../../pyvista/doc/source/examples/03-widgets/sg_execution_times.rst:12
#: ../../pyvista/doc/source/examples/03-widgets/sg_execution_times.rst:14
#: ../../pyvista/doc/source/examples/03-widgets/sg_execution_times.rst:16
#: ../../pyvista/doc/source/examples/03-widgets/sg_execution_times.rst:18
#: ../../pyvista/doc/source/examples/03-widgets/sg_execution_times.rst:20
#: ../../pyvista/doc/source/examples/03-widgets/sg_execution_times.rst:22
#: ../../pyvista/doc/source/examples/03-widgets/sg_execution_times.rst:24
#: ../../pyvista/doc/source/examples/03-widgets/sg_execution_times.rst:26
#: ../../pyvista/doc/source/examples/03-widgets/sg_execution_times.rst:28
#: ../../pyvista/doc/source/examples/03-widgets/sg_execution_times.rst:30
#: ../../pyvista/doc/source/examples/04-lights/sg_execution_times.rst:12
#: ../../pyvista/doc/source/examples/04-lights/sg_execution_times.rst:14
#: ../../pyvista/doc/source/examples/04-lights/sg_execution_times.rst:16
#: ../../pyvista/doc/source/examples/04-lights/sg_execution_times.rst:18
#: ../../pyvista/doc/source/examples/04-lights/sg_execution_times.rst:20
#: ../../pyvista/doc/source/examples/04-lights/sg_execution_times.rst:22
#: ../../pyvista/doc/source/examples/04-lights/sg_execution_times.rst:24
#: ../../pyvista/doc/source/examples/98-common/sg_execution_times.rst:12
#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:12
#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:14
#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:16
#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:18
#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:20
#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:22
#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:24
#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:26
#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:28
#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:30
#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:32
#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:34
#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:36
#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:38
#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:40
#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:42
#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:44
#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:46
msgid "0.0 MB"
msgstr "0.0 MB"

#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:14
msgid ""
":ref:`sphx_glr_examples_00-load_create-parametric-geometric-objects.py` "
"(``create-parametric-geometric-objects.py``)"
msgstr ""
":ref:`sphx_glr_examples_00-load_create-parametric-geometric-objects.py` "
"(``create-parametric-geometric-objects.py``)"

#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:14
msgid "00:11.980"
msgstr "00:11.980"

#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:16
msgid ""
":ref:`sphx_glr_examples_00-load_create-point-cloud.py` (``create-point-"
"cloud.py``)"
msgstr ""
":ref:`sphx_glr_examples_00-load_create-point-cloud.py` (``create-point-"
"cloud.py``)"

#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:16
msgid "00:07.365"
msgstr "00:07.365"

#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:18
msgid ""
":ref:`sphx_glr_examples_00-load_create-structured-surface.py` (``create-"
"structured-surface.py``)"
msgstr ""
":ref:`sphx_glr_examples_00-load_create-structured-surface.py` (``create-"
"structured-surface.py``)"

#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:18
msgid "00:02.687"
msgstr "00:02.687"

#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:20
msgid ""
":ref:`sphx_glr_examples_00-load_create-explicit-structured-grid.py` "
"(``create-explicit-structured-grid.py``)"
msgstr ""
":ref:`sphx_glr_examples_00-load_create-explicit-structured-grid.py` "
"(``create-explicit-structured-grid.py``)"

#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:20
msgid "00:01.188"
msgstr "00:01.188"

#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:22
msgid ":ref:`sphx_glr_examples_00-load_wrap-trimesh.py` (``wrap-trimesh.py``)"
msgstr ""
":ref:`sphx_glr_examples_00-load_wrap-trimesh.py` (``wrap-trimesh.py``)"

#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:22
msgid "00:00.880"
msgstr "00:00.880"

#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:24
msgid ":ref:`sphx_glr_examples_00-load_create-poly.py` (``create-poly.py``)"
msgstr ":ref:`sphx_glr_examples_00-load_create-poly.py` (``create-poly.py``)"

#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:24
msgid "00:00.779"
msgstr "00:00.779"

#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:26
msgid ""
":ref:`sphx_glr_examples_00-load_create-geometric-objects.py` (``create-"
"geometric-objects.py``)"
msgstr ""
":ref:`sphx_glr_examples_00-load_create-geometric-objects.py` (``create-"
"geometric-objects.py``)"

#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:26
msgid "00:00.624"
msgstr "00:00.624"

#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:28
msgid ""
":ref:`sphx_glr_examples_00-load_create-kochanek-spline.py` (``create-"
"kochanek-spline.py``)"
msgstr ""
":ref:`sphx_glr_examples_00-load_create-kochanek-spline.py` (``create-"
"kochanek-spline.py``)"

#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:28
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:30
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:32
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:34
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:36
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:38
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:40
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:42
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:44
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:46
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:48
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:50
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:52
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:54
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:56
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:58
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:60
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:62
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:64
#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:66
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:16
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:18
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:20
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:22
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:24
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:26
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:28
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:30
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:32
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:34
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:36
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:38
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:40
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:42
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:44
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:46
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:48
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:50
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:52
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:54
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:56
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:58
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:60
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:62
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:64
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:66
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:68
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:70
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:72
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:74
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:76
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:78
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:80
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:82
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:84
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:86
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:88
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:90
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:92
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:94
#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:96
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:14
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:16
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:18
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:20
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:22
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:24
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:26
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:28
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:30
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:32
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:34
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:36
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:38
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:40
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:42
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:44
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:46
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:48
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:50
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:52
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:54
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:56
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:58
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:60
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:62
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:64
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:66
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:68
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:70
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:72
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:74
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:76
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:78
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:80
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:82
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:84
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:86
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:88
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:90
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:92
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:94
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:96
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:98
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:100
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:102
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:104
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:106
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:108
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:110
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:112
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:114
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:116
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:118
#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:120
#: ../../pyvista/doc/source/examples/03-widgets/sg_execution_times.rst:14
#: ../../pyvista/doc/source/examples/03-widgets/sg_execution_times.rst:16
#: ../../pyvista/doc/source/examples/03-widgets/sg_execution_times.rst:18
#: ../../pyvista/doc/source/examples/03-widgets/sg_execution_times.rst:20
#: ../../pyvista/doc/source/examples/03-widgets/sg_execution_times.rst:22
#: ../../pyvista/doc/source/examples/03-widgets/sg_execution_times.rst:24
#: ../../pyvista/doc/source/examples/03-widgets/sg_execution_times.rst:26
#: ../../pyvista/doc/source/examples/03-widgets/sg_execution_times.rst:28
#: ../../pyvista/doc/source/examples/03-widgets/sg_execution_times.rst:30
#: ../../pyvista/doc/source/examples/04-lights/sg_execution_times.rst:20
#: ../../pyvista/doc/source/examples/04-lights/sg_execution_times.rst:22
#: ../../pyvista/doc/source/examples/04-lights/sg_execution_times.rst:24
#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:14
#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:16
#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:18
#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:20
#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:22
#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:24
#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:26
#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:28
#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:30
#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:32
#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:34
#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:36
#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:38
#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:40
#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:42
#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:44
#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:46
msgid "00:00.000"
msgstr "00:00.000"

#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:30
msgid ""
":ref:`sphx_glr_examples_00-load_create-pixel-art.py` (``create-pixel-"
"art.py``)"
msgstr ""
":ref:`sphx_glr_examples_00-load_create-pixel-art.py` (``create-pixel-"
"art.py``)"

#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:32
msgid ""
":ref:`sphx_glr_examples_00-load_create-platonic-solids.py` (``create-"
"platonic-solids.py``)"
msgstr ""
":ref:`sphx_glr_examples_00-load_create-platonic-solids.py` (``create-"
"platonic-solids.py``)"

#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:34
msgid ""
":ref:`sphx_glr_examples_00-load_create-pointset.py` (``create-pointset.py``)"
msgstr ""
":ref:`sphx_glr_examples_00-load_create-pointset.py` (``create-pointset.py``)"

#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:36
msgid ""
":ref:`sphx_glr_examples_00-load_create-polydata-strips.py` (``create-"
"polydata-strips.py``)"
msgstr ""
":ref:`sphx_glr_examples_00-load_create-polydata-strips.py` (``create-"
"polydata-strips.py``)"

#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:38
msgid ""
":ref:`sphx_glr_examples_00-load_create-polyhedron.py` (``create-"
"polyhedron.py``)"
msgstr ""
":ref:`sphx_glr_examples_00-load_create-polyhedron.py` (``create-"
"polyhedron.py``)"

#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:40
msgid ""
":ref:`sphx_glr_examples_00-load_create-spline.py` (``create-spline.py``)"
msgstr ""
":ref:`sphx_glr_examples_00-load_create-spline.py` (``create-spline.py``)"

#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:42
msgid ""
":ref:`sphx_glr_examples_00-load_create-surface-draped.py` (``create-surface-"
"draped.py``)"
msgstr ""
":ref:`sphx_glr_examples_00-load_create-surface-draped.py` (``create-surface-"
"draped.py``)"

#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:44
msgid ""
":ref:`sphx_glr_examples_00-load_create-tri-surface.py` (``create-tri-"
"surface.py``)"
msgstr ""
":ref:`sphx_glr_examples_00-load_create-tri-surface.py` (``create-tri-"
"surface.py``)"

#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:46
msgid ":ref:`sphx_glr_examples_00-load_create-truss.py` (``create-truss.py``)"
msgstr ""
":ref:`sphx_glr_examples_00-load_create-truss.py` (``create-truss.py``)"

#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:48
msgid ""
":ref:`sphx_glr_examples_00-load_create-uniform-grid.py` (``create-uniform-"
"grid.py``)"
msgstr ""
":ref:`sphx_glr_examples_00-load_create-uniform-grid.py` (``create-uniform-"
"grid.py``)"

#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:50
msgid ""
":ref:`sphx_glr_examples_00-load_create-unstructured-surface.py` (``create-"
"unstructured-surface.py``)"
msgstr ""
":ref:`sphx_glr_examples_00-load_create-unstructured-surface.py` (``create-"
"unstructured-surface.py``)"

#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:52
msgid ":ref:`sphx_glr_examples_00-load_linear-cells.py` (``linear-cells.py``)"
msgstr ""
":ref:`sphx_glr_examples_00-load_linear-cells.py` (``linear-cells.py``)"

#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:54
msgid ":ref:`sphx_glr_examples_00-load_load-gltf.py` (``load-gltf.py``)"
msgstr ":ref:`sphx_glr_examples_00-load_load-gltf.py` (``load-gltf.py``)"

#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:56
msgid ":ref:`sphx_glr_examples_00-load_load-vrml.py` (``load-vrml.py``)"
msgstr ":ref:`sphx_glr_examples_00-load_load-vrml.py` (``load-vrml.py``)"

#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:58
msgid ":ref:`sphx_glr_examples_00-load_read-dolfin.py` (``read-dolfin.py``)"
msgstr ":ref:`sphx_glr_examples_00-load_read-dolfin.py` (``read-dolfin.py``)"

#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:60
msgid ":ref:`sphx_glr_examples_00-load_read-file.py` (``read-file.py``)"
msgstr ":ref:`sphx_glr_examples_00-load_read-file.py` (``read-file.py``)"

#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:62
msgid ""
":ref:`sphx_glr_examples_00-load_read-parallel.py` (``read-parallel.py``)"
msgstr ""
":ref:`sphx_glr_examples_00-load_read-parallel.py` (``read-parallel.py``)"

#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:64
msgid ":ref:`sphx_glr_examples_00-load_reader.py` (``reader.py``)"
msgstr ":ref:`sphx_glr_examples_00-load_reader.py` (``reader.py``)"

#: ../../pyvista/doc/source/examples/00-load/sg_execution_times.rst:66
msgid ":ref:`sphx_glr_examples_00-load_terrain-mesh.py` (``terrain-mesh.py``)"
msgstr ""
":ref:`sphx_glr_examples_00-load_terrain-mesh.py` (``terrain-mesh.py``)"

#: ../../pyvista/doc/source/examples/00-load/terrain-mesh.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_00-load_terrain-mesh.py>` to"
" download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_00-load_terrain-mesh.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/00-load/terrain-mesh.rst:24
msgid "Terrain Following Mesh"
msgstr "メッシュ後の地形"

#: ../../pyvista/doc/source/examples/00-load/terrain-mesh.rst:26
msgid "Use a topographic surface to create a 3D terrain-following mesh."
msgstr "地形サーフェスを使用して，3 D地形フォローメッシュを作成します．"

#: ../../pyvista/doc/source/examples/00-load/terrain-mesh.rst:28
msgid ""
"Terrain following meshes are common in the environmental sciences, for "
"instance in hydrological modelling (see `Maxwell 2013 "
"<https://www.sciencedirect.com/science/article/abs/pii/S0309170812002564>`_ "
"and `ParFlow <https://parflow.org>`_)."
msgstr ""
"メッシュに続く地形は，環境科学，例えば水文モデリング( `Maxwell 2013 "
"<https://www.sciencedirect.com/science/article/abs/pii/S0309170812002564>`_ "
"と `ParFlow <https://parflow.org>`_ を参照)において一般的である．"

#: ../../pyvista/doc/source/examples/00-load/terrain-mesh.rst:34
msgid ""
"In this example, we demonstrate a simple way to make a 3D grid/mesh that "
"follows a given topographic surface. In this example, it is important to "
"note that the given digital elevation model (DEM) is structured (gridded and"
" not triangulated): this is common for DEMs."
msgstr ""
"この例では，特定の地形サーフェスに従う3 Dグリッド/メッシュを作成する簡単な方法を適用します．この例では，指定した数値標高モデル (DEM) "
"が構造化されていることに注意してください(グリッド付きで3角形でない): これはDEMでは一般的です．"

#: ../../pyvista/doc/source/examples/00-load/terrain-mesh.rst:58
msgid "Download a gridded topography surface (DEM)"
msgstr "グリッド地形サーフェス (DEM) をダウンロードします"

#: ../../pyvista/doc/source/examples/00-load/terrain-mesh.rst:72
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>ImageData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>1677401</td></tr>\n"
"<tr><td>N Points</td><td>1680000</td></tr>\n"
"<tr><td>X Bounds</td><td>1.810e+06, 1.831e+06</td></tr>\n"
"<tr><td>Y Bounds</td><td>5.640e+06, 5.658e+06</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 0.000e+00</td></tr>\n"
"<tr><td>Dimensions</td><td>1400, 1200, 1</td></tr>\n"
"<tr><td>Spacing</td><td>1.500e+01, 1.500e+01, 0.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>scalar1of1</b></td><td>Points</td><td>float64</td><td>1</td><td>7.339e+02</td><td>2.787e+03</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>ImageData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>1677401</td></tr>\n"
"<tr><td>N Points</td><td>1680000</td></tr>\n"
"<tr><td>X Bounds</td><td>1.810e+06, 1.831e+06</td></tr>\n"
"<tr><td>Y Bounds</td><td>5.640e+06, 5.658e+06</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 0.000e+00</td></tr>\n"
"<tr><td>Dimensions</td><td>1400, 1200, 1</td></tr>\n"
"<tr><td>Spacing</td><td>1.500e+01, 1.500e+01, 0.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>scalar1of1</b></td><td>Points</td><td>float64</td><td>1</td><td>7.339e+02</td><td>2.787e+03</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/00-load/terrain-mesh.rst:101
msgid ""
"Now let's subsample and extract an area of interest to make this example "
"simple (also the DEM we just load is pretty big). Since the DEM we loaded is"
" a :class:`pyvista.ImageData` mesh, we can use the "
":func:`pyvista.ImageDataFilters.extract_subset` filter:"
msgstr ""
"ここで，対象となる領域をサブサンプルして抽出し，この例を単純にしましょう(ロードしたばかりのDEMもかなり大きいです．)．ロードしたDEMは "
":class:`pyvista.ImageData` メッシュなので， :func:`pyvista.ImageData.extract_subset`"
" filter: フィルタを使用できます．"

#: ../../pyvista/doc/source/examples/00-load/terrain-mesh.rst:128
msgid ""
"Now that we have a region of interest for our terrain following mesh, lets "
"make a 3D surface of that DEM:"
msgstr "メッシュに沿って地表の関心領域ができたので，DEMの3 Dサーフェスを作成します．"

#: ../../pyvista/doc/source/examples/00-load/terrain-mesh.rst:143
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>StructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>6400</td></tr>\n"
"<tr><td>N Points</td><td>6561</td></tr>\n"
"<tr><td>X Bounds</td><td>1.818e+06, 1.824e+06</td></tr>\n"
"<tr><td>Y Bounds</td><td>5.646e+06, 5.652e+06</td></tr>\n"
"<tr><td>Z Bounds</td><td>1.441e+03, 2.769e+03</td></tr>\n"
"<tr><td>Dimensions</td><td>81, 81, 1</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>scalar1of1</b></td><td>Points</td><td>float64</td><td>1</td><td>1.441e+03</td><td>2.769e+03</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>StructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>6400</td></tr>\n"
"<tr><td>N Points</td><td>6561</td></tr>\n"
"<tr><td>X Bounds</td><td>1.818e+06, 1.824e+06</td></tr>\n"
"<tr><td>Y Bounds</td><td>5.646e+06, 5.652e+06</td></tr>\n"
"<tr><td>Z Bounds</td><td>1.441e+03, 2.769e+03</td></tr>\n"
"<tr><td>Dimensions</td><td>81, 81, 1</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>scalar1of1</b></td><td>Points</td><td>float64</td><td>1</td><td>1.441e+03</td><td>2.769e+03</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/00-load/terrain-mesh.rst:190
msgid ""
"And now we have a 3D structured surface of the terrain. We can now extend "
"that structured surface into a 3D mesh to form a terrain following grid. To "
"do this, we first our cell spacings in the z-direction (these start from the"
" terrain surface). Then we repeat the XYZ structured coordinates of the "
"terrain mesh and decrease each Z level by our Z cell spacing. Once we have "
"those structured coordinates, we can create a "
":class:`pyvista.StructuredGrid`."
msgstr ""
"これで，地形の3 D構造サーフェスが作成されました．構造化されたサーフェスを3 "
"Dメッシュに拡張して，グリッドに沿った地形を形成できるようになりました．これを行うには，まずz方向(これらは地表から始まり)のセル間隔を設定します．次に，地表メッシュのXYZ構造化座標を繰り返し，各ZレベルをZセル間隔だけ下げます．これらの構造化された座標が得られたら，"
" :class:`pyvista.StructuredGrid` を作成できます．"

#: ../../pyvista/doc/source/examples/00-load/terrain-mesh.rst:218
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>StructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>70400</td></tr>\n"
"<tr><td>N Points</td><td>78732</td></tr>\n"
"<tr><td>X Bounds</td><td>1.818e+06, 1.824e+06</td></tr>\n"
"<tr><td>Y Bounds</td><td>5.646e+06, 5.652e+06</td></tr>\n"
"<tr><td>Z Bounds</td><td>9.364e+02, 2.744e+03</td></tr>\n"
"<tr><td>Dimensions</td><td>81, 81, 12</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>Elevation</b></td><td>Points</td><td>float64</td><td>1</td><td>9.364e+02</td><td>2.744e+03</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>StructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>70400</td></tr>\n"
"<tr><td>N Points</td><td>78732</td></tr>\n"
"<tr><td>X Bounds</td><td>1.818e+06, 1.824e+06</td></tr>\n"
"<tr><td>Y Bounds</td><td>5.646e+06, 5.652e+06</td></tr>\n"
"<tr><td>Z Bounds</td><td>9.364e+02, 2.744e+03</td></tr>\n"
"<tr><td>Dimensions</td><td>81, 81, 12</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>Elevation</b></td><td>Points</td><td>float64</td><td>1</td><td>9.364e+02</td><td>2.744e+03</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/00-load/terrain-mesh.rst:270
msgid "**Total running time of the script:** ( 0 minutes  3.547 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  3.547 seconds)"

#: ../../pyvista/doc/source/examples/00-load/terrain-mesh.rst:284
msgid ""
":download:`Download Python source code: terrain-mesh.py <terrain-mesh.py>`"
msgstr ""
":download:`Download Python source code: terrain-mesh.py <terrain-mesh.py>`"

#: ../../pyvista/doc/source/examples/00-load/terrain-mesh.rst:288
msgid ""
":download:`Download Jupyter notebook: terrain-mesh.ipynb <terrain-"
"mesh.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: terrain-mesh.ipynb <terrain-"
"mesh.ipynb>`"

#: ../../pyvista/doc/source/examples/00-load/wrap-trimesh.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_00-load_wrap-trimesh.py>` to"
" download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_00-load_wrap-trimesh.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/00-load/wrap-trimesh.rst:24
msgid "Wrapping Other Objects"
msgstr "​他のオブジェクトのラップ"

#: ../../pyvista/doc/source/examples/00-load/wrap-trimesh.rst:25
msgid "You can wrap several other object types using pyvista including:"
msgstr "​pyvistaを使用すると，次のようないくつかのオブジェクトタイプをラップできます．"

#: ../../pyvista/doc/source/examples/00-load/wrap-trimesh.rst:27
msgid "`numpy` arrays"
msgstr "​`numpy` 配列"

#: ../../pyvista/doc/source/examples/00-load/wrap-trimesh.rst:28
msgid "`trimesh.Trimesh` meshes"
msgstr "​`trimesh.Trimesh` メッシュ"

#: ../../pyvista/doc/source/examples/00-load/wrap-trimesh.rst:29
msgid "VTK objects"
msgstr "​VTKオブジェクト"

#: ../../pyvista/doc/source/examples/00-load/wrap-trimesh.rst:31
msgid ""
"This allows for the \"best of both worlds\" programming special to Python "
"due to its modularity.  If there's some limitation of pyvista (or trimesh), "
"then you can adapt your scripts to use the best features of more than one "
"module."
msgstr ""
"​これにより，モジュール性のためにPythonに特別な \"​両方の世界の最良の部分\" "
"なプログラミングが可能になります．​pyvistaに何らかの制限がある場合(またはtrimesh)，複数のモジュールの最良の機能を使用するようにスクリプトを調整することができます．"

#: ../../pyvista/doc/source/examples/00-load/wrap-trimesh.rst:38
msgid "Wrap a point cloud composed of random points from numpy"
msgstr "​多数のランダムなポイントで構成されるポイントクラウドをラップする"

#: ../../pyvista/doc/source/examples/00-load/wrap-trimesh.rst:73
msgid "Wrap an instance of Trimesh"
msgstr "​Trimeshのインスタンスをラップする"

#: ../../pyvista/doc/source/examples/00-load/wrap-trimesh.rst:109
msgid "Wrap an instance of vtk.vtkPolyData"
msgstr "​vtk.vtkPolyData のインスタンスをラップする"

#: ../../pyvista/doc/source/examples/00-load/wrap-trimesh.rst:152
msgid "**Total running time of the script:** (0 minutes 0.880 seconds)"
msgstr "**Total running time of the script:** (0 minutes 0.880 seconds)"

#: ../../pyvista/doc/source/examples/00-load/wrap-trimesh.rst:166
msgid ""
":download:`Download Python source code: wrap-trimesh.py <wrap-trimesh.py>`"
msgstr ""
":download:`Download Python source code: wrap-trimesh.py <wrap-trimesh.py>`"

#: ../../pyvista/doc/source/examples/00-load/wrap-trimesh.rst:170
msgid ""
":download:`Download Jupyter notebook: wrap-trimesh.ipynb <wrap-"
"trimesh.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: wrap-trimesh.ipynb <wrap-"
"trimesh.ipynb>`"

#: ../../pyvista/doc/source/examples/01-filter/boolean-operations.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_boolean-"
"operations.py>` to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_boolean-"
"operations.py>` to download the full example code"

#: ../../pyvista/doc/source/examples/01-filter/boolean-operations.rst:24
msgid "Boolean Operations"
msgstr "ブール演算"

#: ../../pyvista/doc/source/examples/01-filter/boolean-operations.rst:26
msgid "Perform boolean operations with closed (manifold) surfaces."
msgstr "閉じた（多様な）曲面でブーリアン演算を行う．"

#: ../../pyvista/doc/source/examples/01-filter/boolean-operations.rst:28
msgid ""
"Boolean/topological operations (intersect, union, difference) methods are "
"implemented for :class:`pyvista.PolyData` mesh types only and are accessible"
" directly from any :class:`pyvista.PolyData` mesh. Check out "
":class:`pyvista.PolyDataFilters` and take a look at the following filters:"
msgstr ""
"ブール/位相演算(交差，結合，切断)法は，  :class:`pyvista.PolyData` メッシュタイプに対してのみ実装され，任意の "
":class:`pyvista.PolyData` メッシュから直接アクセス可能である． "
":class:`pyvista.PolyDataFilters` をチェックして，次のフィルタを確認してください．"

#: ../../pyvista/doc/source/examples/01-filter/boolean-operations.rst:34
msgid ":func:`pyvista.PolyDataFilters.boolean_difference`"
msgstr ":func:`pyvista.PolyDataFilters.boolean_difference`"

#: ../../pyvista/doc/source/examples/01-filter/boolean-operations.rst:35
msgid ":func:`pyvista.PolyDataFilters.boolean_union`"
msgstr ":func:`pyvista.PolyDataFilters.boolean_union`"

#: ../../pyvista/doc/source/examples/01-filter/boolean-operations.rst:36
msgid ":func:`pyvista.PolyDataFilters.boolean_intersection`"
msgstr ":func:`pyvista.PolyDataFilters.boolean_intersection`"

#: ../../pyvista/doc/source/examples/01-filter/boolean-operations.rst:38
msgid ""
"Essentially, boolean union, difference, and intersection are all the same "
"operation. Just different parts of the objects are kept at the end."
msgstr "基本的に，ブーリアン結合，切断，交差はすべて同じ操作です．ただ，オブジェクトの異なる部分が最終的に保持されるだけです．"

#: ../../pyvista/doc/source/examples/01-filter/boolean-operations.rst:42
msgid ""
"The ``-`` operator can be used between any two :class:`pyvista.PolyData` "
"meshes in PyVista to cut the first mesh by the second.  These meshes must be"
" all triangle meshes, which you can check with "
":attr:`pyvista.PolyData.is_all_triangles`."
msgstr ""
"演算子 ``-`` は，PyVistaの任意の2つの :class:`pyvista.PolyData` "
"メッシュの間で使用することができ，最初のメッシュを2番目のメッシュでカットします． これらのメッシュはすべて3角形のメッシュでなければなりません．これは"
" :attr:`pyvista.PolyData.is_all_triangles` で確認できます．"

#: ../../pyvista/doc/source/examples/01-filter/boolean-operations.rst:48
msgid ""
"For merging, the ``+`` operator can be used between any two meshes in "
"PyVista which simply calls the ``.merge()`` filter to combine any two "
"meshes.  This is different from ``boolean_union`` as it simply superimposes "
"the two meshes without performing additional calculations on the result."
msgstr ""
"マージでは， ``+`` 演算子をPyVistaの任意の2つのメッシュ間で使用できます．この演算子は，任意の2つのメッシュを結合するために "
"``.merge()`` フィルタを呼び出すだけです．これは ``boolean_union`` "
"とは異なり，結果に対して追加の計算を行うことなく，単純に2つのメッシュを重ね合わせるものです．"

#: ../../pyvista/doc/source/examples/01-filter/boolean-operations.rst:55
msgid ""
"If your boolean operations don't react the way you think they should (i.e. "
"the wrong parts disappear), one of your meshes probably has its normals "
"pointing inward. Use :func:`pyvista.PolyDataFilters.plot_normals` to "
"visualize the normals."
msgstr ""
"ブーリアン演算が思った通りに反応しない(例えば，間違った部分が消えてしまう)場合，メッシュの1つが法線を内側に向けている可能性があります．法線を可視化するには，"
" :func:`pyvista.PolyDataFilters.plot_normals` を使用してください．"

#: ../../pyvista/doc/source/examples/01-filter/boolean-operations.rst:81
msgid "Boolean Union"
msgstr "ブール演算和"

#: ../../pyvista/doc/source/examples/01-filter/boolean-operations.rst:83
msgid ""
"Perform a boolean union of ``A`` and ``B`` using the "
":func:`pyvista.PolyDataFilters.boolean_union` filter."
msgstr ""
":func:`pyvista.PolyDataFilters.boolean_union` フィルタを使用して， ``A`` と ``B`` "
"のブール結合を行います．"

#: ../../pyvista/doc/source/examples/01-filter/boolean-operations.rst:86
msgid ""
"The union of two manifold meshes ``A`` and ``B`` is the mesh which is in "
"``A``, in ``B``, or in both ``A`` and ``B``."
msgstr ""
"2つの多様体メッシュ　``A`` と ``B`` の結合は， ``A`` にあるメッシュ， ``B`` にあるメッシュ，または ``A`` と "
"``B`` の両方にあるメッシュとなります．"

#: ../../pyvista/doc/source/examples/01-filter/boolean-operations.rst:89
msgid ""
"Order of operands does not matter for boolean union (the operation is "
"commutative)."
msgstr "論理和にはオペランドの順序は関係ありません（演算は可換です）．"

#: ../../pyvista/doc/source/examples/01-filter/boolean-operations.rst:121
msgid "Boolean Difference"
msgstr "論理差"

#: ../../pyvista/doc/source/examples/01-filter/boolean-operations.rst:123
msgid ""
"Perform a boolean difference of ``A`` and ``B`` using the "
":func:`pyvista.PolyDataFilters.boolean_difference` filter or the ``-`` "
"operator since both meshes are :class:`pyvista.PolyData`."
msgstr ""
"両方のメッシュが :class:`pyvista.PolyData` であるため， "
":func:`pyvista.PolyDataFilters.boolean_difference` フィルタまたは ``-`` 演算子を使用して "
"``A`` と ``B`` のブーリアン値の差を実行します．"

#: ../../pyvista/doc/source/examples/01-filter/boolean-operations.rst:127
msgid ""
"The difference of two manifold meshes ``A`` and ``B`` is the volume of the "
"mesh in ``A`` not belonging to ``B``."
msgstr "2つのマニフォールドメッシュ ``A`` と ``B`` の差は， ``A`` のメッシュのうち ``B`` に属さない部分の体積である．"

#: ../../pyvista/doc/source/examples/01-filter/boolean-operations.rst:130
msgid "Order of operands matters for boolean difference."
msgstr "真偽判定にはオペランドの順序が重要です．"

#: ../../pyvista/doc/source/examples/01-filter/boolean-operations.rst:161
msgid "Boolean Intersection"
msgstr "ブール交差"

#: ../../pyvista/doc/source/examples/01-filter/boolean-operations.rst:163
msgid ""
"Perform a boolean intersection of ``A`` and ``B`` using the "
":func:`pyvista.PolyDataFilters.boolean_intersection` filter."
msgstr ""
":func:`pyvista.PolyDataFilters.boolean_intersection` フィルタを使用して， ``A`` と "
"``B`` のブール交差を行います．"

#: ../../pyvista/doc/source/examples/01-filter/boolean-operations.rst:166
msgid ""
"The intersection of two manifold meshes ``A`` and ``B`` is the mesh which is"
" the volume of ``A`` that is also in ``B``."
msgstr "2つの多様体メッシュ``A``と``B```の交点は，``A``の体積が``B``の中にもあるメッシュである．"

#: ../../pyvista/doc/source/examples/01-filter/boolean-operations.rst:169
msgid ""
"Order of operands does not matter for boolean intersection (the operation is"
" commutative)."
msgstr "論理交差にはオペランドの順序は関係ありません（演算は可換です）．"

#: ../../pyvista/doc/source/examples/01-filter/boolean-operations.rst:201
msgid "Behavior due to flipped normals"
msgstr "法線の反転による挙動"

#: ../../pyvista/doc/source/examples/01-filter/boolean-operations.rst:202
msgid ""
"Note that these boolean filters behave differently depending on the "
"orientation of the normals."
msgstr "これらのブーリアンフィルターは，法線の向きによって動作が異なることに注意してください．"

#: ../../pyvista/doc/source/examples/01-filter/boolean-operations.rst:205
msgid ""
"Boolean difference with both cube and sphere normals pointed outward.  This "
"is the \"normal\" behavior."
msgstr "立方体と球体の両方の法線が外側に向いている状態でのブール型の差分です． これが \"normal\" の動作です．"

#: ../../pyvista/doc/source/examples/01-filter/boolean-operations.rst:233
msgid "Boolean difference with cube normals outward, sphere inward."
msgstr "立方体の法線を外側に，球体を内側にしたブール値の差．"

#: ../../pyvista/doc/source/examples/01-filter/boolean-operations.rst:261
msgid "Boolean difference with cube normals inward, sphere outward."
msgstr "立方体の法線を内側に，球体を外側にしたブール差です．"

#: ../../pyvista/doc/source/examples/01-filter/boolean-operations.rst:289
msgid "Both cube and sphere normals inward."
msgstr "立方体と球体の両方の法線を内側にします．"

#: ../../pyvista/doc/source/examples/01-filter/boolean-operations.rst:317
msgid "**Total running time of the script:** ( 0 minutes  8.307 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  8.307 seconds)"

#: ../../pyvista/doc/source/examples/01-filter/boolean-operations.rst:331
msgid ""
":download:`Download Python source code: boolean-operations.py <boolean-"
"operations.py>`"
msgstr ""
":download:`Download Python source code: boolean-operations.py <boolean-"
"operations.py>`"

#: ../../pyvista/doc/source/examples/01-filter/boolean-operations.rst:335
msgid ""
":download:`Download Jupyter notebook: boolean-operations.ipynb <boolean-"
"operations.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: boolean-operations.ipynb <boolean-"
"operations.ipynb>`"

#: ../../pyvista/doc/source/examples/01-filter/cell-centers.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_cell-centers.py>` "
"to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_cell-centers.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/01-filter/cell-centers.rst:24
msgid "Extract Cell Centers"
msgstr "セルの中心を抽出"

#: ../../pyvista/doc/source/examples/01-filter/cell-centers.rst:26
msgid ""
"Extract the coordinates of the centers of all cells or faces in a mesh."
msgstr "メッシュ内のすべてのセルまたは面の中心の座標を抽出します．"

#: ../../pyvista/doc/source/examples/01-filter/cell-centers.rst:28
msgid ""
"Here we use :func:`cell_centers <pyvista.DataSetFilters.cell_centers>`."
msgstr ""
"ここでは :func:`cell_centers <pyvista.DataSetFilters.cell_centers>` を使用しています．"

#: ../../pyvista/doc/source/examples/01-filter/cell-centers.rst:47
msgid "First let's fetch the centers of a mesh with 2D geometries (a surface)"
msgstr "最初に，2 Dジオメトリ(表面)を使用してメッシュの中心を取得します．"

#: ../../pyvista/doc/source/examples/01-filter/cell-centers.rst:83
msgid "We can also do this for full 3D meshes."
msgstr "これは，フル3 Dメッシュに対しても実行できます．"

#: ../../pyvista/doc/source/examples/01-filter/cell-centers.rst:144
msgid "Edge centers"
msgstr "エッジの中心"

#: ../../pyvista/doc/source/examples/01-filter/cell-centers.rst:145
msgid ""
"You can use :func:`cell_centers <pyvista.DataSetFilters.cell_centers>` in "
"combination with :func:`extract_all_edges "
"<pyvista.DataSetFilters.extract_all_edges>` to get the center of all edges "
"of a mesh."
msgstr ""
":func:`cell_centers <pyvista.DataSetFilters.cell_centers>` と "
":func:`extract_all_edges <pyvista.DataSetFilters.extract_all_edges>` "
"を組み合わせて使用すると，メッシュのすべての辺の中心を取得することができます．"

#: ../../pyvista/doc/source/examples/01-filter/cell-centers.rst:186
msgid "Add labels to cells"
msgstr "セルにラベルを追加する"

#: ../../pyvista/doc/source/examples/01-filter/cell-centers.rst:187
msgid ""
"There is not a method to add labels to cells. If you want to label it, you "
"need to extract the position to label it."
msgstr "セルにラベルを付ける方法はありません．ラベルを付けたい場合は，ラベルを付ける位置を抽出する必要があります．"

#: ../../pyvista/doc/source/examples/01-filter/cell-centers.rst:217
msgid "**Total running time of the script:** ( 0 minutes  3.255 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  3.255 seconds)"

#: ../../pyvista/doc/source/examples/01-filter/cell-centers.rst:231
msgid ""
":download:`Download Python source code: cell-centers.py <cell-centers.py>`"
msgstr ""
":download:`Download Python source code: cell-centers.py <cell-centers.py>`"

#: ../../pyvista/doc/source/examples/01-filter/cell-centers.rst:235
msgid ""
":download:`Download Jupyter notebook: cell-centers.ipynb <cell-"
"centers.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: cell-centers.ipynb <cell-"
"centers.ipynb>`"

#: ../../pyvista/doc/source/examples/01-filter/clipping.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_clipping.py>` to "
"download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_clipping.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/01-filter/clipping.rst:24
msgid "Clipping with Planes & Boxes"
msgstr "平面とボックスでクリップします"

#: ../../pyvista/doc/source/examples/01-filter/clipping.rst:26
msgid "Clip/cut any dataset using planes or boxes."
msgstr "平面またはボックスを使用してデータセットをクリップ/カットします．"

#: ../../pyvista/doc/source/examples/01-filter/clipping.rst:45
msgid "Clip with Plane"
msgstr "平面付きクリップ"

#: ../../pyvista/doc/source/examples/01-filter/clipping.rst:47
msgid ""
"Clip any dataset by a user defined plane using the "
":func:`pyvista.DataSetFilters.clip` filter"
msgstr ":func:`pyvista.DataSetFilters.clip` フィルタを使用したユーザ定義平面によるデータセットのクリップ"

#: ../../pyvista/doc/source/examples/01-filter/clipping.rst:80
msgid "Clip with Bounds"
msgstr "境界付きクリップ"

#: ../../pyvista/doc/source/examples/01-filter/clipping.rst:82
msgid ""
"Clip any dataset by a set of XYZ bounds using the "
":func:`pyvista.DataSetFilters.clip_box` filter."
msgstr ""
":func:`pyvista.DataSetFilters.clip_box` "
"フィルタを使用して，XYZ境界のセットによってデータセットをクリップします．"

#: ../../pyvista/doc/source/examples/01-filter/clipping.rst:116
msgid "Clip with Rotated Box"
msgstr "回転ボックス付きクリップ"

#: ../../pyvista/doc/source/examples/01-filter/clipping.rst:118
msgid ""
"Clip any dataset by an arbitrarily rotated solid box using the "
":func:`pyvista.DataSetFilters.clip_box` filter."
msgstr ""
":func:`pyvista.DataSetFilters.clip_box` "
"フィルタを使用して任意に回転したソリッドボックスでデータセットをクリップします．"

#: ../../pyvista/doc/source/examples/01-filter/clipping.rst:150
msgid "Run the box clipping algorithm"
msgstr "ボックスクリッピングアルゴリズムを実行します"

#: ../../pyvista/doc/source/examples/01-filter/clipping.rst:183
msgid "Crinkled Clipping"
msgstr "しわくちゃなクリッピング"

#: ../../pyvista/doc/source/examples/01-filter/clipping.rst:184
msgid ""
"Crinkled clipping is useful if you don’t want the clip filter to truly clip "
"cells on the boundary, but want to preserve the input cell structure and to "
"pass the entire cell on through the boundary."
msgstr ""
"クリンプクリッピングは，クリップフィルタが境界上のセルを本当にクリップするのではなく，入力セルの構造を保持し，セル全体を境界から通過させたい場合に有効です．"

#: ../../pyvista/doc/source/examples/01-filter/clipping.rst:188
msgid ""
"This option is available for :func:`pyvista.DataSetFilters.clip`, "
":func:`pyvista.DataSetFilters.clip_box`, and "
":func:`pyvista.DataSetFilters.clip_surface`, but not available when clipping"
" by scalar in :func:`pyvista.DataSetFilters.clip_scalar`."
msgstr ""
"このオプションは :func:`pyvista.DataSetFilters.clip`, "
":func:`pyvista.DataSetFilters.clip_box`, "
":func:`pyvista.DataSetFilters.clip_surface` で使用できますが， "
":func:`pyvista.DataSetFilters.clip_scalar` でスカラーによるクリッピングを行っても利用することはできません．"

#: ../../pyvista/doc/source/examples/01-filter/clipping.rst:210
msgid "Define clipping plane"
msgstr "クリッピングプレーンの定義"

#: ../../pyvista/doc/source/examples/01-filter/clipping.rst:228
msgid "Perform a standard clip"
msgstr "標準クリップを実行します"

#: ../../pyvista/doc/source/examples/01-filter/clipping.rst:245
msgid "Perform a crinkled clip"
msgstr "クリンプクリップを行います"

#: ../../pyvista/doc/source/examples/01-filter/clipping.rst:262
msgid "Plot comparison"
msgstr "プロット比較"

#: ../../pyvista/doc/source/examples/01-filter/clipping.rst:291
msgid "**Total running time of the script:** ( 0 minutes  2.654 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  2.654 seconds)"

#: ../../pyvista/doc/source/examples/01-filter/clipping.rst:305
msgid ":download:`Download Python source code: clipping.py <clipping.py>`"
msgstr ":download:`Download Python source code: clipping.py <clipping.py>`"

#: ../../pyvista/doc/source/examples/01-filter/clipping.rst:309
msgid ":download:`Download Jupyter notebook: clipping.ipynb <clipping.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: clipping.ipynb <clipping.ipynb>`"

#: ../../pyvista/doc/source/examples/01-filter/clipping-with-surface.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_clipping-with-"
"surface.py>` to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_clipping-with-"
"surface.py>` をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/01-filter/clipping-with-surface.rst:24
msgid "Clipping with a Surface"
msgstr "サーフェスを使用したクリップ"

#: ../../pyvista/doc/source/examples/01-filter/clipping-with-surface.rst:26
msgid ""
"Clip any PyVista dataset by a :class:`pyvista.PolyData` surface mesh using "
"the :func:`pyvista.DataSetFilters.clip_surface` filter."
msgstr ""
":func:`pyvista.DataSetFilters.clip_surface` フィルタを使用して "
":class:`pyvista.PolyData` サーフェスメッシュによってPyVistaデータセットをクリップします．"

#: ../../pyvista/doc/source/examples/01-filter/clipping-with-surface.rst:29
msgid ""
"Note that we first demonstrate how the clipping is performed by computing an"
" implicit distance and thresholding the mesh. This thresholding is one "
"approach to clip by a surface, and preserve the original geometry of the "
"given mesh, but many folks leverage the ``clip_surface`` filter to "
"triangulate/tessellate the mesh geometries along the clip."
msgstr ""
"最初に，暗黙的な距離を計算してメッシュを閾値設定することにより，クリッピングを実行する方法を説明します．このしきい値設定は，サーフェスでクリップし，指定されたメッシュの元のジオメトリを保持する1つの方法ですが，多くのユーザは"
" ``clip_surface`` フィルタを利用して，クリップに沿ってメッシュジオメトリを3角形化/面分割します．"

#: ../../pyvista/doc/source/examples/01-filter/clipping-with-surface.rst:84
msgid ""
"Take a look at the implicit function used to perform the surface clipping by"
" using the :func:`pyvista.DataSetFilters.compute_implicit_distance` filter. "
"The clipping operation field is performed where the ``implicit_distance`` "
"field is zero and the ``invert`` flag controls which sides of zero to "
"preserve."
msgstr ""
":func:`pyvista.DataSetFilters.compute_implicit_distance` "
"フィルタを使用してサーフェスクリッピングを実行する際に使用される暗黙的な関数を確認してください． ``implicit_distance`` "
"フィールドが0であるクリッピング操作フィールドが実行され， ``invert`` フラグが0のどちら側を保持するかを制御します．"

#: ../../pyvista/doc/source/examples/01-filter/clipping-with-surface.rst:158
msgid ""
"Clip the rectilinear grid dataset using the :class:`pyvista.PolyData` "
"surface mesh via the :func:`pyvista.DataSetFilters.clip_surface` filter. "
"This will triangulate/tessellate the mesh geometries along the clip."
msgstr ""
":func:`pyvista.DataSetFilters.clip_surface` フィルタを介して "
":class:`pyvista.PolyData` "
"サーフェスメッシュを使用して，直線グリッドデータセットをクリップします．これにより，クリップに沿ってメッシュジオメトリが3角形化/面分割されます．"

#: ../../pyvista/doc/source/examples/01-filter/clipping-with-surface.rst:190
msgid ""
"Here is another example of clipping a mesh by a surface. This time, we'll "
"generate a :class:`pyvista.ImageData` around a topography surface and then "
"clip that grid using the surface to create a closed 3D model of the surface"
msgstr ""
"次に，サーフェスでメッシュをクリップする別の例を示します．今回は，地形サーフェスの周囲に :class:`pyvista.ImageData` "
"を生成し，サーフェスを使用してグリッドをクリップして，サーフェスの閉じた3 Dモデルを作成します．"

#: ../../pyvista/doc/source/examples/01-filter/clipping-with-surface.rst:223
msgid "**Total running time of the script:** ( 0 minutes  54.991 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  54.991 seconds)"

#: ../../pyvista/doc/source/examples/01-filter/clipping-with-surface.rst:237
msgid ""
":download:`Download Python source code: clipping-with-surface.py <clipping-"
"with-surface.py>`"
msgstr ""
":download:`Download Python source code: clipping-with-surface.py <clipping-"
"with-surface.py>`"

#: ../../pyvista/doc/source/examples/01-filter/clipping-with-surface.rst:241
msgid ""
":download:`Download Jupyter notebook: clipping-with-surface.ipynb <clipping-"
"with-surface.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: clipping-with-surface.ipynb <clipping-"
"with-surface.ipynb>`"

#: ../../pyvista/doc/source/examples/01-filter/collisions.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_collisions.py>` to "
"download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_01-filter_collisions.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/01-filter/collisions.rst:24
msgid "Collision"
msgstr "衝突"

#: ../../pyvista/doc/source/examples/01-filter/collisions.rst:25
msgid "Perform a collision detection between two meshes."
msgstr "2つのメッシュの衝突判定を行います．"

#: ../../pyvista/doc/source/examples/01-filter/collisions.rst:27
msgid ""
"This example use the :class:`collision <pyvista.PolyDataFilters.collision>` "
"filter to detect the faces from one sphere colliding with another sphere."
msgstr ""
"この例では， :class:`collision <pyvista.PolyDataFilters.collision>` "
"フィルタを使用して，ある球体が別の球体に衝突したときの面を検出します．"

#: ../../pyvista/doc/source/examples/01-filter/collisions.rst:32
msgid ""
"Due to the nature of the `vtk.vtkCollisionDetectionFilter "
"<https://vtk.org/doc/nightly/html/classvtkCollisionDetectionFilter.html>`_, "
"repeated uses of this method will be slower that using the "
"``vtk.vtkCollisionDetectionFilter`` directly.  The first update of the "
"filter creates two instances of `vtkOBBTree "
"<https://vtk.org/doc/nightly/html/classvtkOBBTree.html>`_, which can be "
"subsequently updated by modifying the transform or matrix of the input "
"meshes."
msgstr ""
"`vtk.vtkCollisionDetectionFilter "
"<https://vtk.org/doc/nightly/html/classvtkCollisionDetectionFilter.html>`_ "
"の性質上，このメソッドを繰り返し使用すると ``vtk.vtkCollisionDetectionFilter`` "
"を直接使用した場合よりも遅くなります． このフィルタの最初の更新では， `vtkOBBTree "
"<https://vtk.org/doc/nightly/html/classvtkOBBTree.html>`_ "
"のインスタンスが2つ作成されます．その後，入力メッシュの変換や行列を変更することで，このインスタンスを更新することができます．"

#: ../../pyvista/doc/source/examples/01-filter/collisions.rst:41
msgid ""
"This method assumes no transform and is easier to use for single collision "
"tests, but it is recommended to use a combination of ``pyvista`` and ``vtk``"
" for rapidly computing repeated collisions.  See the `Collision Detection "
"Example <https://kitware.github.io/vtk-"
"examples/site/Python/Visualization/CollisionDetection/>`_"
msgstr ""
"このメソッドは変換を前提としていないので，単一の衝突テストには使いやすいですが，繰り返される衝突を高速に計算するには ``pyvista`` と "
"``vtk`` の組み合わせを使うことをお勧めします． 詳しくは， `Collision Detection Example "
"<https://kitware.github.io/vtk-"
"examples/site/Python/Visualization/CollisionDetection/>`_ をご覧ください．"

#: ../../pyvista/doc/source/examples/01-filter/collisions.rst:68
msgid "Create the main mesh and the secondary \"moving\" mesh"
msgstr "メインのメッシュとセカンダリーの \"moving\" メッシュの作成"

#: ../../pyvista/doc/source/examples/01-filter/collisions.rst:70
msgid ""
"Collision faces will be plotted on this sphere, and to do so we initialize "
"an initial ``\"collisions\"`` mask."
msgstr "衝突面はこの球体上にプロットされますが，そのために初期の ``\"collisions\"`` マスクを設定します．"

#: ../../pyvista/doc/source/examples/01-filter/collisions.rst:92
msgid ""
"Set up the plotter open a movie, and write a frame after moving the sphere."
msgstr "プロッターをセットアップしてムービーを開き，球体を動かした後のフレームを書き込んでいきます．"

#: ../../pyvista/doc/source/examples/01-filter/collisions.rst:142
msgid "**Total running time of the script:** ( 0 minutes  6.767 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  6.767 seconds)"

#: ../../pyvista/doc/source/examples/01-filter/collisions.rst:154
msgid ":download:`Download Python source code: collisions.py <collisions.py>`"
msgstr ""
":download:`Download Python source code: collisions.py <collisions.py>`"

#: ../../pyvista/doc/source/examples/01-filter/collisions.rst:158
msgid ""
":download:`Download Jupyter notebook: collisions.ipynb <collisions.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: collisions.ipynb <collisions.ipynb>`"

#: ../../pyvista/doc/source/examples/01-filter/compute-normals.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_compute-"
"normals.py>` to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_compute-"
"normals.py>` をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/01-filter/compute-normals.rst:24
msgid "Computing Surface Normals"
msgstr "表面の法線を計算します"

#: ../../pyvista/doc/source/examples/01-filter/compute-normals.rst:25
msgid "Compute normals on a surface."
msgstr "表面上の法線を計算します．"

#: ../../pyvista/doc/source/examples/01-filter/compute-normals.rst:45
msgid ""
"Computing the normals of a surface is quite easy using "
":class:`pyvista.PolyData`'s :func:`pyvista.PolyDataFilters.compute_normals` "
"method."
msgstr ""
"サーフェスの法線を計算するには， :class:`pyvista.PolyData` の "
":func:`pyvista.PolyDataFilters.compute_normals` メソッドを使うと非常に簡単です．"

#: ../../pyvista/doc/source/examples/01-filter/compute-normals.rst:71
msgid ""
"Now we have a surface dataset of the globe loaded - unfortunately, the "
"dataset shows the globe with a uniform radius which hides topographic "
"relief. Using :func:`pyvista.PolyDataFilters.compute_normals`, we can "
"compute the normal vectors on the globe at all points in the dataset, then "
"use the values given in the dataset to warp the surface in the normals "
"direction to create some exaggerated topographic relief."
msgstr ""
"これで地球のサーフェスデータセットがロードされました．残念ながら，データセットには地形起伏を隠す均一な半径の地球が表示されます． "
":func:`pyvista.PolyDataFilters.compute_normals` "
"を使用して，データセット内のすべてのポイントで地球上の法線ベクトルを計算し，データセットで指定された値を使用してサーフェスを法線方向にワープし，誇張された地形レリーフを作成します．"

#: ../../pyvista/doc/source/examples/01-filter/compute-normals.rst:107
msgid ""
"We could also use face/cell normals to extract all the faces of a mesh "
"facing a general direction. In the following snippet, we take a mesh, "
"compute the normals along its cell faces, and extract the faces that face "
"upward."
msgstr ""
"面/セル法線を使用して，一般的な方向を向いているメッシュのすべての面を抽出することもできます．次のスニペットでは，メッシュを取得し，そのセル面に沿って法線を計算し，上向きの面を抽出します．"

#: ../../pyvista/doc/source/examples/01-filter/compute-normals.rst:148
msgid "**Total running time of the script:** ( 0 minutes  17.477 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  17.477 seconds)"

#: ../../pyvista/doc/source/examples/01-filter/compute-normals.rst:162
msgid ""
":download:`Download Python source code: compute-normals.py <compute-"
"normals.py>`"
msgstr ""
":download:`Download Python source code: compute-normals.py <compute-"
"normals.py>`"

#: ../../pyvista/doc/source/examples/01-filter/compute-normals.rst:166
msgid ""
":download:`Download Jupyter notebook: compute-normals.ipynb <compute-"
"normals.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: compute-normals.ipynb <compute-"
"normals.ipynb>`"

#: ../../pyvista/doc/source/examples/01-filter/compute-volume.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_compute-"
"volume.py>` to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_compute-"
"volume.py>` をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/01-filter/compute-volume.rst:24
msgid "Volumetric Analysis"
msgstr "ボリューム分析"

#: ../../pyvista/doc/source/examples/01-filter/compute-volume.rst:27
msgid "Calculate mass properties such as the volume or area of datasets"
msgstr "データセットの体積や面積などのマスプロパティを計算します"

#: ../../pyvista/doc/source/examples/01-filter/compute-volume.rst:47
msgid ""
"Computing mass properties such as the volume or area of datasets in PyVista "
"is quite easy using the :func:`pyvista.DataSetFilters.compute_cell_sizes` "
"filter and the :attr:`pyvista.DataSet.volume` property on all PyVista "
"meshes."
msgstr ""
"PyVistaでデータセットの体積や面積などの質量特性を計算するには，すべてのPyVistaメッシュで "
":func:`pyvista.DataSetFilters.compute_cell_sizes` フィルタと "
":attr:`pyvista.DataSet.volume` プロパティを使用すると非常に簡単です．"

#: ../../pyvista/doc/source/examples/01-filter/compute-volume.rst:51
msgid "Let's get started with a simple gridded mesh:"
msgstr "簡単なグリッドメッシュから始めましょう．"

#: ../../pyvista/doc/source/examples/01-filter/compute-volume.rst:157
msgid ""
"We can then calculate the volume of every cell in the array using the "
"``.compute_cell_sizes`` filter which will add arrays to the cell data of the"
" mesh core the volume and area by default."
msgstr ""
"次に， ``.compute_cell_sizes`` フィルタを使用して，配列内のすべてのセルの体積を計算できます． "
"``.compute_cell_sizes`` フィルタは，メッシュコアのセルデータに配列を追加します．既定では，体積と面積です．"

#: ../../pyvista/doc/source/examples/01-filter/compute-volume.rst:181
msgid ""
"We can also compute the total volume of the mesh using the ``.volume`` "
"property:"
msgstr "また， ``.volume`` プロパティを使用してメッシュの総体積を計算することもできます．"

#: ../../pyvista/doc/source/examples/01-filter/compute-volume.rst:201
msgid ""
"But what if we have a dataset that we threshold with two volumetric bodies "
"left over in one dataset? Take this for example:"
msgstr ""
"しかし，1つのデータセットに2つのボリュームボディを残したまま閾値を設定したデータセットがあるとしたらどうでしょうか．たとえば，次のようになります．"

#: ../../pyvista/doc/source/examples/01-filter/compute-volume.rst:227
msgid ""
"We could then assign a classification array for the two bodies, compute the "
"cell sizes, then extract the volumes of each body. Note that there is a "
"simpler implementation of this below in :ref:`split_vol`."
msgstr ""
"次に，2つのボディの分類配列を割り当て，セルサイズを計算し，各ボディの体積を抽出します．以下の :ref:`split_vol` "
"でより簡単な実装があることに注意してください．"

#: ../../pyvista/doc/source/examples/01-filter/compute-volume.rst:272
msgid ""
"Or better yet, you could simply extract the largest volume from your dataset"
" directly by passing ``'largest'`` to the ``connectivity`` and specifying "
"the scalar range of interest."
msgstr ""
"あるいは，単純に ``connectivity`` に ``'largest'`` "
"を渡し，目的のスカラー範囲を指定することで，データセットから最大のボリュームを直接抽出することもできます．"

#: ../../pyvista/doc/source/examples/01-filter/compute-volume.rst:311
msgid "Splitting Volumes"
msgstr "ボリュームの分割"

#: ../../pyvista/doc/source/examples/01-filter/compute-volume.rst:313
msgid ""
"What if instead, we wanted to split all the different connected bodies / "
"volumes in a dataset like the one above? We could use the "
":func:`pyvista.DataSetFilters.split_bodies` filter to extract all the "
"different connected volumes in a dataset into blocks in a "
":class:`pyvista.MultiBlock` dataset. For example, lets split the thresholded"
" volume in the example above:"
msgstr ""
"その代わりに，上記のようなデータセットで，接続されているすべてのボディ/ボリュームを分割したいとしたらどうでしょうか． "
":func:`pyvista.DataSetFilters.split_bodies` "
"フィルタを使用して，データセット内のすべての異なる接続ボリュームを :class:`pyvista.MultiBlock` "
"データセット内のブロックに抽出することができます．たとえば，上記の例で，しきい値設定されたボリュームを分割します．"

#: ../../pyvista/doc/source/examples/01-filter/compute-volume.rst:375
msgid "A Real Dataset"
msgstr "実際のデータセット"

#: ../../pyvista/doc/source/examples/01-filter/compute-volume.rst:377
msgid ""
"Here is a realistic training dataset of fluvial channels in the subsurface. "
"This will threshold the channels from the dataset then separate each "
"significantly large body and compute the volumes for each."
msgstr ""
"これは，地下の河道の現実的なトレーニングデータセットです．これにより，データセットのチャネルがしきい値に設定され，非常に大きなボディのそれぞれが分離され，それぞれのボリュームが計算されます．"

#: ../../pyvista/doc/source/examples/01-filter/compute-volume.rst:381
msgid "Load up the data and threshold the channels:"
msgstr "データをロードし，チャンネルを閾値に設定します．"

#: ../../pyvista/doc/source/examples/01-filter/compute-volume.rst:400
msgid "Now extract all the different bodies and compute their volumes:"
msgstr "ここで，すべての異なるボディを抽出し，それらのボリュームを計算します．"

#: ../../pyvista/doc/source/examples/01-filter/compute-volume.rst:427
msgid "Print out the volumes for each body:"
msgstr "各ボディの体積をプリントします．"

#: ../../pyvista/doc/source/examples/01-filter/compute-volume.rst:472
msgid "And visualize all the different volumes:"
msgstr "そして，あらゆるボリュームを可視化します．"

#: ../../pyvista/doc/source/examples/01-filter/compute-volume.rst:495
msgid "**Total running time of the script:** (0 minutes 9.744 seconds)"
msgstr "**Total running time of the script:** (0 minutes 9.744 seconds)"

#: ../../pyvista/doc/source/examples/01-filter/compute-volume.rst:509
msgid ""
":download:`Download Python source code: compute-volume.py <compute-"
"volume.py>`"
msgstr ""
":download:`Download Python source code: compute-volume.py <compute-"
"volume.py>`"

#: ../../pyvista/doc/source/examples/01-filter/compute-volume.rst:513
msgid ""
":download:`Download Jupyter notebook: compute-volume.ipynb <compute-"
"volume.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: compute-volume.ipynb <compute-"
"volume.ipynb>`"

#: ../../pyvista/doc/source/examples/01-filter/connectivity.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_connectivity.py>` "
"to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_connectivity.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/01-filter/connectivity.rst:24
msgid "Connectivity"
msgstr "連結度"

#: ../../pyvista/doc/source/examples/01-filter/connectivity.rst:26
msgid ""
"This example highlights some applications of the "
":func:`~pyvista.DataSetFilters.connectivity` filter."
msgstr "この例では， :func:`~pyvista.DataSetFilters.connectivity` フィルタの応用例を紹介します．"

#: ../../pyvista/doc/source/examples/01-filter/connectivity.rst:32
msgid "Remove Noisy Isosurfaces"
msgstr "ノイズの多い等値面を取り除く"

#: ../../pyvista/doc/source/examples/01-filter/connectivity.rst:34
msgid "Use connectivity to remove noisy isosurfaces."
msgstr "ノイズの多い等値面を削除するには，連結度を使用します．"

#: ../../pyvista/doc/source/examples/01-filter/connectivity.rst:36
msgid ""
"This section is similar to `this VTK example <https://kitware.github.io/vtk-"
"examples/site/Python/VisualizationAlgorithms/PineRootConnectivity/>`__."
msgstr ""
"このセクションは `この VTK の例 <https://kitware.github.io/vtk-"
"examples/site/Python/VisualizationAlgorithms/PineRootConnectivity/>`__ "
"に似ています．"

#: ../../pyvista/doc/source/examples/01-filter/connectivity.rst:57
msgid "Load a dataset with noisy isosurfaces."
msgstr "ノイズの多い等値面を持つデータセットをロードします"

#: ../../pyvista/doc/source/examples/01-filter/connectivity.rst:86
msgid ""
"The plotted mesh is very noisy. We can extract the largest connected "
"isosurface using the ``'largest'`` ``extraction_mode`` of  the "
":func:`~pyvista.DataSetFilters.connectivity` filter. Equivalently, "
":func:`~pyvista.DataSetFilters.extract_largest` may also be used."
msgstr ""
"プロットされたメッシュは非常にノイズが多いです． :func:`~pyvista.DataSetFilters.connectivity` フィルタの "
"``'largest'`` ``extraction_mode`` を使用することで，最大連結等曲面を抽出することができます．同様に， "
":func:`~pyvista.DataSetFilters.extract_largest` フィルタを使用することもできます．"

#: ../../pyvista/doc/source/examples/01-filter/connectivity.rst:122
msgid "Extract Small Regions"
msgstr "小領域の抽出"

#: ../../pyvista/doc/source/examples/01-filter/connectivity.rst:124
msgid ""
"Use connectivity to extract the smaller 'noisy' regions that were removed in"
" the remove noisy isosurfaces example above."
msgstr "上記のノイズの多い等値面を除去する例で除去された，より小さい 'noisy' な領域を抽出するために接続性を使用します．"

#: ../../pyvista/doc/source/examples/01-filter/connectivity.rst:127
msgid "First, get a list of all region ids."
msgstr "まず，すべての領域IDのリストを取得します．"

#: ../../pyvista/doc/source/examples/01-filter/connectivity.rst:145
msgid ""
"Since the region IDs are sorted in descending order (by cell count), we can "
"extract all regions *except* for the largest one using the ``'specified'`` "
"``extraction_mode`` of the :func:`~pyvista.DataSetFilters.connectivity` "
"filter."
msgstr ""
"領域IDは降順 (セル数順) にソートされているので， :func:`~pyvista.DataSetFilters.connectivity` "
"フィルタの ``'specified'``` ``extraction_mode`` を使用して，最大の領域を除くすべての領域を抽出することができます．"

#: ../../pyvista/doc/source/examples/01-filter/connectivity.rst:166
msgid "Plot the noisy regions. For context, also plot the largest region."
msgstr "ノイズの多い領域をプロットします．文脈のために、最大の領域もプロットします．"

#: ../../pyvista/doc/source/examples/01-filter/connectivity.rst:195
msgid "Label Disconnected Regions"
msgstr "切断された領域にラベルをする"

#: ../../pyvista/doc/source/examples/01-filter/connectivity.rst:197
msgid "Use connectivity to label all disconnected regions."
msgstr "接続性を使用して，すべての切断された領域にラベルを付けます．"

#: ../../pyvista/doc/source/examples/01-filter/connectivity.rst:199
msgid ""
"This section is similar to `this VTK example "
"<https://examples.vtk.org/site/Cxx/PolyData/ColorDisconnectedRegionsDemo/>`__."
msgstr ""
"このセクションは "
"`このVTKの例<https://examples.vtk.org/site/Cxx/PolyData/ColorDisconnectedRegionsDemo/>`__"
" に似ています．"

#: ../../pyvista/doc/source/examples/01-filter/connectivity.rst:201
msgid "First, load a dataset with disconnected regions."
msgstr "まず，切断された領域を含むデータセットをロードします．"

#: ../../pyvista/doc/source/examples/01-filter/connectivity.rst:218
msgid "Extract all regions."
msgstr "すべての領域を抽出します．"

#: ../../pyvista/doc/source/examples/01-filter/connectivity.rst:235
msgid "Plot the labeled regions."
msgstr "ラベルを付けた領域をプロットします．"

#: ../../pyvista/doc/source/examples/01-filter/connectivity.rst:272
msgid "Extract Regions From Seed Points"
msgstr "シードポイントから領域を抽出する"

#: ../../pyvista/doc/source/examples/01-filter/connectivity.rst:274
msgid ""
"Use connectivity to extract regions of interest using scalar data and seed "
"points."
msgstr "スカラーデータとシードポイントを用いて，連結性を利用して関心のある領域を抽出します．"

#: ../../pyvista/doc/source/examples/01-filter/connectivity.rst:277
msgid ""
"First, create a dataset with salient features. Here, we create hills and use"
" curvature to define its peaks and valleys."
msgstr "まず，顕著な特徴を持つデータセットを作成します．ここでは丘を作り，曲率を使って山と谷を定義します．"

#: ../../pyvista/doc/source/examples/01-filter/connectivity.rst:296
msgid ""
"Visualize the peaks and valleys. Peaks have large positive curvature (i.e. "
"are convex). Valleys have large negative curvature (i.e. are concave). Flat "
"regions have curvature close to zero."
msgstr "山と谷を視覚化します．山は正の曲率が大きい (つまり凸状) 谷は負の曲率が大きい (つまり凹状) 平坦な領域は曲率がゼロに近いです．"

#: ../../pyvista/doc/source/examples/01-filter/connectivity.rst:326
msgid ""
"Extract a region of interest using the ``'point_seed'`` ``extraction_mode`` "
"of the :func:`~pyvista.DataSetFilters.connectivity` filter. Let's extract "
"the steepest peak using a seed point where the curvature is maximized."
msgstr ""
":func:`~pyvista.DataSetFilters.connectivity` フィルターの ``'point_seed'`` "
"``extraction_mode`` を使用して関心のある領域を抽出します． "
"曲率が最大になるシードポイントを使用して，最も急峻なピークを抽出してみましょう．"

#: ../../pyvista/doc/source/examples/01-filter/connectivity.rst:354
msgid ""
"Let's also extract the closest valley to the steepest peak using the "
"``'closest'`` ``extraction_mode`` of the "
":func:`~pyvista.DataSetFilters.connectivity` filter."
msgstr ""
":func:`~pyvista.DataSetFilters.connectivity` フィルターの ``'closeest'`` "
"``extraction_mode`` を使用して，最も急峻なピークに最も近い谷も抽出してみましょう．"

#: ../../pyvista/doc/source/examples/01-filter/connectivity.rst:375
msgid "Plot extracted regions."
msgstr "抽出された領域をプロットします．"

#: ../../pyvista/doc/source/examples/01-filter/connectivity.rst:402
msgid "**Total running time of the script:** (0 minutes 14.425 seconds)"
msgstr "**Total running time of the script:** (0 minutes 14.425 seconds)"

#: ../../pyvista/doc/source/examples/01-filter/connectivity.rst:416
msgid ""
":download:`Download Python source code: connectivity.py <connectivity.py>`"
msgstr ""
":download:`Download Python source code: connectivity.py <connectivity.py>`"

#: ../../pyvista/doc/source/examples/01-filter/connectivity.rst:420
msgid ""
":download:`Download Jupyter notebook: connectivity.ipynb "
"<connectivity.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: connectivity.ipynb "
"<connectivity.ipynb>`"

#: ../../pyvista/doc/source/examples/01-filter/contouring.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_contouring.py>` to "
"download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_01-filter_contouring.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/01-filter/contouring.rst:24
msgid "Contouring"
msgstr "コンタリング"

#: ../../pyvista/doc/source/examples/01-filter/contouring.rst:26
msgid ""
"Generate iso-lines or -surfaces for the scalars of a surface or volume."
msgstr "サーフェスまたはボリュームのスカラー用にアイソラインまたはサーフェスを生成します．"

#: ../../pyvista/doc/source/examples/01-filter/contouring.rst:28
msgid ""
"3D meshes can have 2D iso-surfaces of a scalar field extracted and 2D "
"surface meshes can have 1D iso-lines of a scalar field extracted."
msgstr ""
"3 Dメッシュはスカラーフィールドの2 D等値面を抽出することができ，2 Dサーフェスメッシュはスカラーフィールドの1 "
"D等値線を抽出することができます．"

#: ../../pyvista/doc/source/examples/01-filter/contouring.rst:50
msgid "Iso-Lines"
msgstr "等値線"

#: ../../pyvista/doc/source/examples/01-filter/contouring.rst:52
msgid "Let's extract 1D iso-lines of a scalar field from a 2D surface mesh."
msgstr "2 Dサーフェスメッシュからスカラーフィールドの1 D等値線を抽出します．"

#: ../../pyvista/doc/source/examples/01-filter/contouring.rst:83
msgid "Iso-Surfaces"
msgstr "等値面"

#: ../../pyvista/doc/source/examples/01-filter/contouring.rst:85
msgid "Let's extract 2D iso-surfaces of a scalar field from a 3D mesh."
msgstr "3 Dメッシュからスカラーフィールドの2 D等値面を抽出してみましょう．"

#: ../../pyvista/doc/source/examples/01-filter/contouring.rst:121
msgid "Banded Contours"
msgstr "縞模様のコンター"

#: ../../pyvista/doc/source/examples/01-filter/contouring.rst:122
msgid ""
"Create banded contours for surface meshes using :func:`contour_banded() "
"<pyvista.PolyDataFilters.contour_banded>`."
msgstr ""
":func:`contour_banded() <pyvista.PolyDataFilters.contour_banded>` "
"を使用して，表面メッシュに縞模様のコンターを作成します．"

#: ../../pyvista/doc/source/examples/01-filter/contouring.rst:139
msgid "Set number of contours and produce mesh and lines"
msgstr "コンター数を設定し，メッシュとラインを生成する"

#: ../../pyvista/doc/source/examples/01-filter/contouring.rst:157
msgid "Also make normal vectors"
msgstr "また，法線ベクトルを作ります"

#: ../../pyvista/doc/source/examples/01-filter/contouring.rst:200
msgid "**Total running time of the script:** ( 0 minutes  5.639 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  5.639 seconds)"

#: ../../pyvista/doc/source/examples/01-filter/contouring.rst:212
msgid ":download:`Download Python source code: contouring.py <contouring.py>`"
msgstr ""
":download:`Download Python source code: contouring.py <contouring.py>`"

#: ../../pyvista/doc/source/examples/01-filter/contouring.rst:216
msgid ""
":download:`Download Jupyter notebook: contouring.ipynb <contouring.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: contouring.ipynb <contouring.ipynb>`"

#: ../../pyvista/doc/source/examples/01-filter/decimate.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_decimate.py>` to "
"download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_decimate.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/01-filter/decimate.rst:24
msgid "Decimation"
msgstr "間引き"

#: ../../pyvista/doc/source/examples/01-filter/decimate.rst:26
msgid "Decimate a mesh"
msgstr "メッシュを縮小する"

#: ../../pyvista/doc/source/examples/01-filter/decimate.rst:58
msgid ""
"Now let's define a target reduction and compare the "
":func:`pyvista.PolyDataFilters.decimate` and "
":func:`pyvista.PolyDataFilters.decimate_pro` filters."
msgstr ""
"ここで，削減目標を定義し， :func:`pyvista.PolyDataFilters.decimate` フィルタと "
":func:`pyvista.PolyDataFilters.decimate_pro` フィルタを比較してみましょう．"

#: ../../pyvista/doc/source/examples/01-filter/decimate.rst:126
msgid "Side by side comparison:"
msgstr "並べて比較:"

#: ../../pyvista/doc/source/examples/01-filter/decimate.rst:165
msgid "**Total running time of the script:** ( 0 minutes  1.332 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.332 seconds)"

#: ../../pyvista/doc/source/examples/01-filter/decimate.rst:179
msgid ":download:`Download Python source code: decimate.py <decimate.py>`"
msgstr ":download:`Download Python source code: decimate.py <decimate.py>`"

#: ../../pyvista/doc/source/examples/01-filter/decimate.rst:183
msgid ":download:`Download Jupyter notebook: decimate.ipynb <decimate.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: decimate.ipynb <decimate.ipynb>`"

#: ../../pyvista/doc/source/examples/01-filter/distance-between-surfaces.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_distance-between-"
"surfaces.py>` to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_distance-between-"
"surfaces.py>` to download the full example code"

#: ../../pyvista/doc/source/examples/01-filter/distance-between-surfaces.rst:22
msgid "Distance Between Two Surfaces"
msgstr "2つのサーフェス間の距離"

#: ../../pyvista/doc/source/examples/01-filter/distance-between-surfaces.rst:24
msgid "Compute the average thickness between two surfaces."
msgstr "2つのサーフェス間の平均厚みを計算します．"

#: ../../pyvista/doc/source/examples/01-filter/distance-between-surfaces.rst:26
msgid ""
"For example, you might have two surfaces that represent the boundaries of "
"lithological layers in a subsurface geological model and you want to know "
"the average thickness of a unit between those boundaries."
msgstr "たとえば，地下地質モデルの岩石層の境界を表す2つのサーフェスがあり，それらの境界間の単位の平均厚さを知りたいとします．"

#: ../../pyvista/doc/source/examples/01-filter/distance-between-surfaces.rst:30
msgid ""
"A clarification on terminology in this example is important.  A mesh point "
"exists on the vertex of each cell on the mesh.  See :ref:`what_is_a_mesh`. "
"Each cell in this example encompasses a 2D region of space which contains an"
" infinite number of spatial points; these spatial points are not mesh "
"points. The distance between two surfaces can mean different things "
"depending on context and usage.  Each example here explores different "
"aspects of the distance from the vertex points of the bottom mesh to the top"
" mesh."
msgstr ""
"この例では，用語を明確にすることが重要です． メッシュポイントは，メッシュ上の各セルの頂点に存在します． :ref:`what_is_a_mesh` "
"を参照してください．この例の各セルは，無限の空間ポイントを含む2Dの空間領域を包含しています．これらの空間ポイントはメッシュポイントではありません．2つのサーフェス間の距離は，文脈や使用方法によって異なる意味を持ちます．"
" ここでの各例では，下のメッシュの頂点から上のメッシュまでの距離の異なる側面を探っています．"

#: ../../pyvista/doc/source/examples/01-filter/distance-between-surfaces.rst:38
msgid ""
"First, we will demo a method where we compute the normals on the vertex "
"points of the bottom surface, and then project a ray to the top surface to "
"compute the distance along the surface normals. This ray will usually "
"intersect the top surface at a spatial point inside a cell of the mesh."
msgstr ""
"まず，下面の頂点の法線を計算し，上面に光線を投影して，表面の法線に沿った距離を計算する方法をデモします．このレイは通常，メッシュのセル内の空間点で上面と交差します．"

#: ../../pyvista/doc/source/examples/01-filter/distance-between-surfaces.rst:43
msgid ""
"Second, we will use a KDTree to compute the distance from every vertex point"
" in the bottom mesh to its closest vertex point in the top mesh."
msgstr "次に，KDTreeを使って，下のメッシュの各頂点から上のメッシュの最も近い頂点までの距離を計算します．"

#: ../../pyvista/doc/source/examples/01-filter/distance-between-surfaces.rst:46
msgid ""
"Lastly, we will use a PyVista filter, "
":func:`pyvista.DataSet.find_closest_cell` to calculate the distance from "
"every vertex point in the bottom mesh to the closest spatial point inside a "
"cell of the top mesh.  This will be the shortest distance from the vertex "
"point to the top surface, unlike the first two examples."
msgstr ""
"最後に，PyVistaのフィルタである :func:`pyvista.DataSet.find_closest_cell` "
"を使って，下のメッシュのすべての頂点から，上のメッシュのセル内にある最も近い空間点までの距離を計算します． "
"これは，最初の2つの例とは異なり，頂点点から上面までの最短距離となります．"

#: ../../pyvista/doc/source/examples/01-filter/distance-between-surfaces.rst:107
msgid "Ray Tracing Distance"
msgstr "レイトレーシング距離"

#: ../../pyvista/doc/source/examples/01-filter/distance-between-surfaces.rst:109
msgid "Compute normals of lower surface at vertex points"
msgstr "頂点ポイントでの下部サーフェスの法線を計算"

#: ../../pyvista/doc/source/examples/01-filter/distance-between-surfaces.rst:126
msgid ""
"Travel along normals to the other surface and compute the thickness on each "
"vector."
msgstr "法線に沿って他のサーフェスに移動し，各ベクトルの厚みを計算します．"

#: ../../pyvista/doc/source/examples/01-filter/distance-between-surfaces.rst:187
msgid "Nearest Neighbor Distance"
msgstr "最近接距離"

#: ../../pyvista/doc/source/examples/01-filter/distance-between-surfaces.rst:189
msgid ""
"You could also use a KDTree to compare the distance between each vertex "
"point of the upper surface and the nearest neighbor vertex point of the "
"lower surface. This will be noticeably faster than a ray trace, especially "
"for large surfaces."
msgstr ""
"KDTreeを使用して，上部サーフェスの各頂点ポイントと下部サーフェスの最も近い隣接頂点ポイント間の距離を比較することもできます．これは特に大きなサーフェスでは，レイトレースよりも著しく高速になります．"

#: ../../pyvista/doc/source/examples/01-filter/distance-between-surfaces.rst:244
msgid "Using PyVista Filter"
msgstr "PyVistaフィルタの使い方"

#: ../../pyvista/doc/source/examples/01-filter/distance-between-surfaces.rst:246
msgid ""
"The :func:`pyvista.DataSet.find_closest_cell` filter returns the spatial "
"points inside the cells of the top surface that are closest to the vertex "
"points of the bottom surface.  ``closest_points`` is returned when using "
"``return_closest_point=True``."
msgstr ""
":func:`pyvista.DataSet.find_closest_cell` "
"フィルタは，上面のセルの中で，下面の頂点ポイントに最も近い空間ポイントを返します． ``return_closest_point=True`` "
"を使用すると， ``closest_points`` が返されます．"

#: ../../pyvista/doc/source/examples/01-filter/distance-between-surfaces.rst:277
msgid ""
"As expected there is only a small difference between this method and the "
"KDTree method."
msgstr "予想通り，この方法とKDTree法の間にはわずかな違いしかありません．"

#: ../../pyvista/doc/source/examples/01-filter/distance-between-surfaces.rst:304
msgid "**Total running time of the script:** (0 minutes 3.989 seconds)"
msgstr "**Total running time of the script:** (0 minutes 3.989 seconds)"

#: ../../pyvista/doc/source/examples/01-filter/distance-between-surfaces.rst:318
msgid ""
":download:`Download Python source code: distance-between-surfaces.py "
"<distance-between-surfaces.py>`"
msgstr ""
":download:`Download Python source code: distance-between-surfaces.py "
"<distance-between-surfaces.py>`"

#: ../../pyvista/doc/source/examples/01-filter/distance-between-surfaces.rst:322
msgid ""
":download:`Download Jupyter notebook: distance-between-surfaces.ipynb "
"<distance-between-surfaces.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: distance-between-surfaces.ipynb "
"<distance-between-surfaces.ipynb>`"

#: ../../pyvista/doc/source/examples/01-filter/extract-cells-inside-surface.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_extract-cells-inside-"
"surface.py>` to download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_01-filter_extract-cells-inside-"
"surface.py>` をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/01-filter/extract-cells-inside-surface.rst:22
msgid "Extract Cells Inside Surface"
msgstr "サーフェス内のセルを抽出"

#: ../../pyvista/doc/source/examples/01-filter/extract-cells-inside-surface.rst:24
msgid ""
"Extract the cells in a mesh that exist inside or outside a closed surface of"
" another mesh"
msgstr "別のメッシュの閉じたサーフェスの内側または外側に存在するメッシュ内のセルを抽出する"

#: ../../pyvista/doc/source/examples/01-filter/extract-cells-inside-surface.rst:64
msgid "Mark points inside with 1 and outside with a 0"
msgstr "内側の点を1，外側の点を0でマークします．"

#: ../../pyvista/doc/source/examples/01-filter/extract-cells-inside-surface.rst:78
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>3263</td></tr>\n"
"<tr><td>N Points</td><td>2903</td></tr>\n"
"<tr><td>X Bounds</td><td>-4.446e+00, 5.998e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>-3.637e+00, 2.760e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>-1.701e+00, 1.701e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>SelectedPoints</b></td><td>Points</td><td>uint8</td><td>1</td><td>0.000e+00</td><td>1.000e+00</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>3263</td></tr>\n"
"<tr><td>N Points</td><td>2903</td></tr>\n"
"<tr><td>X Bounds</td><td>-4.446e+00, 5.998e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>-3.637e+00, 2.760e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>-1.701e+00, 1.701e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>SelectedPoints</b></td><td>Points</td><td>uint8</td><td>1</td><td>0.000e+00</td><td>1.000e+00</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/01-filter/extract-cells-inside-surface.rst:105
msgid ""
"Extract two meshes, one completely inside and one completely outside the "
"enclosing surface."
msgstr "2つのメッシュ，1つは完全に内側，もう1つは完全に外側を抽出します．"

#: ../../pyvista/doc/source/examples/01-filter/extract-cells-inside-surface.rst:125
msgid "display the results"
msgstr "結果を表示する"

#: ../../pyvista/doc/source/examples/01-filter/extract-cells-inside-surface.rst:154
msgid "**Total running time of the script:** ( 0 minutes  1.369 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.369 seconds)"

#: ../../pyvista/doc/source/examples/01-filter/extract-cells-inside-surface.rst:169
msgid ""
":download:`Download Python source code: extract-cells-inside-surface.py "
"<extract-cells-inside-surface.py>`"
msgstr ""
":download:`Download Python source code: extract-cells-inside-surface.py "
"<extract-cells-inside-surface.py>`"

#: ../../pyvista/doc/source/examples/01-filter/extract-cells-inside-surface.rst:175
msgid ""
":download:`Download Jupyter notebook: extract-cells-inside-surface.ipynb "
"<extract-cells-inside-surface.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: extract-cells-inside-surface.ipynb "
"<extract-cells-inside-surface.ipynb>`"

#: ../../pyvista/doc/source/examples/01-filter/extract-edges.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_extract-edges.py>`"
" to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_extract-edges.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/01-filter/extract-edges.rst:24
msgid "Extract Edges"
msgstr "エッジを抽出"

#: ../../pyvista/doc/source/examples/01-filter/extract-edges.rst:26
msgid "Extract edges from a surface."
msgstr "サーフェスからエッジを抽出します．"

#: ../../pyvista/doc/source/examples/01-filter/extract-edges.rst:45
msgid "From vtk documentation, the edges of a mesh are one of the following:"
msgstr "vtkのマニュアルによると，メッシュのエッジは次のいずれかです．"

#: ../../pyvista/doc/source/examples/01-filter/extract-edges.rst:47
msgid "boundary (used by one polygon) or a line cell"
msgstr "境界(1つのポリゴンで使用)またはラインセル"

#: ../../pyvista/doc/source/examples/01-filter/extract-edges.rst:48
msgid "non-manifold (used by three or more polygons)"
msgstr "非多様体(3つ以上の多角形によって使用されます)"

#: ../../pyvista/doc/source/examples/01-filter/extract-edges.rst:49
msgid ""
"feature edges (edges used by two triangles and whose dihedral angle > "
"feature_angle)"
msgstr "フィーチャエッジ(2つの3角形で使用され，2面角がfeature_angleより大きいエッジ)"

#: ../../pyvista/doc/source/examples/01-filter/extract-edges.rst:50
msgid "manifold edges (edges used by exactly two polygons)."
msgstr "多様体のエッジ(ちょうど2つのポリゴンで使用されるエッジ)．"

#: ../../pyvista/doc/source/examples/01-filter/extract-edges.rst:52
msgid ""
"The :func:`extract_feature_edges() "
"<pyvista.DataSetFilters.extract_feature_edges>` filter will extract those "
"edges given a feature angle and return a dataset with lines that represent "
"the edges of the original mesh."
msgstr ""
":func:`extract_feature_edges() "
"<pyvista.DataSetFilters.extract_feature_edges>` "
"フィルタは，特徴的な角度が与えられたときにそれらのエッジを抽出し，元のメッシュのエッジを表す線を含むデータセットを返します．"

#: ../../pyvista/doc/source/examples/01-filter/extract-edges.rst:56
msgid ""
"To demonstrate, we will first extract the edges around a sample CAD model:"
msgstr "まず，サンプルのCADモデルの周囲のエッジを抽出してみましょう．"

#: ../../pyvista/doc/source/examples/01-filter/extract-edges.rst:89
msgid ""
"We can do this analysis for any :class:`pyvista.PolyData` object. Let's try "
"the cow mesh example:"
msgstr "この解析は :class:`pyvista.PolyData` オブジェクトに対して行うことができます．牛のメッシュの例を見てみましょう．"

#: ../../pyvista/doc/source/examples/01-filter/extract-edges.rst:121
msgid ""
"We can leverage the :any:`pyvista.PolyData.n_open_edges` property and "
":func:`pyvista.DataSetFilters.extract_feature_edges` filter to count and "
"extract the open edges on a :class:`pyvista.PolyData` mesh."
msgstr ""
":any:`pyvista.PolyData.n_open_edges` プロパティと "
":func:`pyvista.DataSetFilters.extract_feature_edges` フィルタを利用して， "
":class:`pyvista.PolyData` メッシュの開いたエッジをカウントおよび抽出できます．"

#: ../../pyvista/doc/source/examples/01-filter/extract-edges.rst:139
#: ../../pyvista/doc/source/examples/99-advanced/add-example.rst:408
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>69451</td></tr>\n"
"<tr><td>N Points</td><td>35947</td></tr>\n"
"<tr><td>N Strips</td><td>0</td></tr>\n"
"<tr><td>X Bounds</td><td>-9.469e-02, 6.101e-02</td></tr>\n"
"<tr><td>Y Bounds</td><td>3.299e-02, 1.873e-01</td></tr>\n"
"<tr><td>Z Bounds</td><td>-6.187e-02, 5.880e-02</td></tr>\n"
"<tr><td>N Arrays</td><td>0</td></tr>\n"
"</table>\n"
"\n"
"\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>69451</td></tr>\n"
"<tr><td>N Points</td><td>35947</td></tr>\n"
"<tr><td>N Strips</td><td>0</td></tr>\n"
"<tr><td>X Bounds</td><td>-9.469e-02, 6.101e-02</td></tr>\n"
"<tr><td>Y Bounds</td><td>3.299e-02, 1.873e-01</td></tr>\n"
"<tr><td>Z Bounds</td><td>-6.187e-02, 5.880e-02</td></tr>\n"
"<tr><td>N Arrays</td><td>0</td></tr>\n"
"</table>\n"
"\n"
"\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/01-filter/extract-edges.rst:161
msgid "We can get a count of the open edges with:"
msgstr "次のコマンドを使用すると，開いたエッジの数を取得できます:"

#: ../../pyvista/doc/source/examples/01-filter/extract-edges.rst:185
msgid ""
"And we can extract those edges with the ``boundary_edges`` option of "
":func:`pyvista.DataSetFilters.extract_feature_edges`:"
msgstr ""
":func:`pyvista.DataSetFilters.extract_feature_edges` の ``boundary_edges`` "
"オプションを使用すると，これらのエッジを抽出できます．"

#: ../../pyvista/doc/source/examples/01-filter/extract-edges.rst:214
msgid "**Total running time of the script:** ( 0 minutes  3.124 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  3.124 seconds)"

#: ../../pyvista/doc/source/examples/01-filter/extract-edges.rst:228
msgid ""
":download:`Download Python source code: extract-edges.py <extract-edges.py>`"
msgstr ""
":download:`Download Python source code: extract-edges.py <extract-edges.py>`"

#: ../../pyvista/doc/source/examples/01-filter/extract-edges.rst:232
msgid ""
":download:`Download Jupyter notebook: extract-edges.ipynb <extract-"
"edges.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: extract-edges.ipynb <extract-"
"edges.ipynb>`"

#: ../../pyvista/doc/source/examples/01-filter/extract-surface.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_extract-surface.py>` "
"to download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_01-filter_extract-surface.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/01-filter/extract-surface.rst:24
msgid "Extract Surface"
msgstr "表面を抽出"

#: ../../pyvista/doc/source/examples/01-filter/extract-surface.rst:26
msgid ""
"You can extract the surface of nearly any object within ``pyvista`` using "
"the ``extract_surface`` filter."
msgstr ""
"``extract_surface`` フィルタを使用して， ``pyvista`` 内のほぼすべてのオブジェクトのサーフェスを抽出できます．"

#: ../../pyvista/doc/source/examples/01-filter/extract-surface.rst:50
msgid "Create a quadratic cell and extract its surface"
msgstr "2次セルを作成し，そのサーフェスを抽出します"

#: ../../pyvista/doc/source/examples/01-filter/extract-surface.rst:51
msgid ""
"Here we create a single quadratic hexahedral cell and then extract its "
"surface to demonstrate how to extract the surface of an UnstructuredGrid."
msgstr "ここでは，1つの2次6面体セルを作成し，そのサーフェスを抽出して，UnstructuredGridのサーフェスを抽出する方法を示します．"

#: ../../pyvista/doc/source/examples/01-filter/extract-surface.rst:123
msgid "Nonlinear Surface Subdivision"
msgstr "非線形サーフェスサブディビジョン"

#: ../../pyvista/doc/source/examples/01-filter/extract-surface.rst:124
msgid ""
"Should your UnstructuredGrid contain quadratic cells, you can generate a "
"smooth surface based on the position of the \"mid-edge\" nodes.  This allows"
" the plotting of cells containing curvature.  For additional reference, "
"please see: https://prod.sandia.gov/techlib-noauth/access-"
"control.cgi/2004/041617.pdf"
msgstr ""
"UnstructuredGridに2次セルが含まれている場合， \"中間\" "
"節点の位置に基づいて滑らかなサーフェスを生成できます．これにより，曲率を含むセルをプロットできます．詳細については， "
"https://prod.sandia.gov/techlib-noauth/access-control.cgi/2004/041617.pdf "
"を参照してください．"

#: ../../pyvista/doc/source/examples/01-filter/extract-surface.rst:152
msgid "**Total running time of the script:** ( 0 minutes  0.648 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  0.648 seconds)"

#: ../../pyvista/doc/source/examples/01-filter/extract-surface.rst:164
msgid ""
":download:`Download Python source code: extract-surface.py <extract-"
"surface.py>`"
msgstr ""
":download:`Download Python source code: extract-surface.py <extract-"
"surface.py>`"

#: ../../pyvista/doc/source/examples/01-filter/extract-surface.rst:168
msgid ""
":download:`Download Jupyter notebook: extract-surface.ipynb <extract-"
"surface.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: extract-surface.ipynb <extract-"
"surface.ipynb>`"

#: ../../pyvista/doc/source/examples/01-filter/extrude-rotate.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_extrude-"
"rotate.py>` to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_extrude-"
"rotate.py>` to download the full example code"

#: ../../pyvista/doc/source/examples/01-filter/extrude-rotate.rst:22
msgid "Extrude Rotation"
msgstr "押し出し回転"

#: ../../pyvista/doc/source/examples/01-filter/extrude-rotate.rst:23
msgid ""
"Sweep polygonal data creating \"skirt\" from free edges and lines, and lines"
" from vertices."
msgstr "フリーエッジとフリーラインから \"skirt\" を作成し，頂点からラインを作成して，ポリゴンデータをスイープします．"

#: ../../pyvista/doc/source/examples/01-filter/extrude-rotate.rst:26
msgid ""
"This takes polygonal data as input and generates polygonal data on output. "
"The input dataset is swept around the z-axis to create new polygonal "
"primitives. These primitives form a \"skirt\" or swept surface. For example,"
" sweeping a line results in a cylindrical shell, and sweeping a circle "
"creates a torus."
msgstr ""
"ポリゴンデータを入力として取り，出力時にポリゴンデータを生成します．入力データセットがZ軸を中心にスイープされ，新しいポリゴンプリミティブが作成されます．これらのプリミティブは，"
" \"skirt\" "
"またはスイープサーフェスを形成します．たとえば，線分をスイープすると円柱シェルが作成され，円をスイープするとトーラスが作成されます．"

#: ../../pyvista/doc/source/examples/01-filter/extrude-rotate.rst:58
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>2</td></tr>\n"
"<tr><td>N Points</td><td>33</td></tr>\n"
"<tr><td>N Strips</td><td>2</td></tr>\n"
"<tr><td>X Bounds</td><td>-1.000e+00, 1.000e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>-9.511e-01, 9.511e-01</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 0.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>2</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td>Texture Coordinates</td><td>Points</td><td>float32</td><td>2</td><td>0.000e+00</td><td>1.000e+00</td></tr>\n"
"<tr><td><b>Distance</b></td><td>Points</td><td>float64</td><td>1</td><td>0.000e+00</td><td>1.000e+00</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>2</td></tr>\n"
"<tr><td>N Points</td><td>33</td></tr>\n"
"<tr><td>N Strips</td><td>2</td></tr>\n"
"<tr><td>X Bounds</td><td>-1.000e+00, 1.000e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>-9.511e-01, 9.511e-01</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 0.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>2</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td>Texture Coordinates</td><td>Points</td><td>float32</td><td>2</td><td>0.000e+00</td><td>1.000e+00</td></tr>\n"
"<tr><td><b>Distance</b></td><td>Points</td><td>float64</td><td>1</td><td>0.000e+00</td><td>1.000e+00</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/01-filter/extrude-rotate.rst:88
msgid "Plot the extruded line"
msgstr "押し出されたラインをプロットする"

#: ../../pyvista/doc/source/examples/01-filter/extrude-rotate.rst:132
msgid "Create a spring"
msgstr "ばねを作成する"

#: ../../pyvista/doc/source/examples/01-filter/extrude-rotate.rst:185
msgid "**Total running time of the script:** ( 0 minutes  0.654 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  0.654 seconds)"

#: ../../pyvista/doc/source/examples/01-filter/extrude-rotate.rst:199
msgid ""
":download:`Download Python source code: extrude-rotate.py <extrude-"
"rotate.py>`"
msgstr ""
":download:`Download Python source code: extrude-rotate.py <extrude-"
"rotate.py>`"

#: ../../pyvista/doc/source/examples/01-filter/extrude-rotate.rst:203
msgid ""
":download:`Download Jupyter notebook: extrude-rotate.ipynb <extrude-"
"rotate.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: extrude-rotate.ipynb <extrude-"
"rotate.ipynb>`"

#: ../../pyvista/doc/source/examples/01-filter/extrude-trim.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_extrude-trim.py>` "
"to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_extrude-trim.py>` "
"to download the full example code"

#: ../../pyvista/doc/source/examples/01-filter/extrude-trim.rst:24
msgid "Extrude Trim"
msgstr "押し出しトリム"

#: ../../pyvista/doc/source/examples/01-filter/extrude-trim.rst:25
msgid ""
"Extrude a :class:`pyvista.PolyData` with a :func:`pyvista.Plane` using "
":func:`extrude_trim() <pyvista.PolyDataFilters.extrude_trim>`."
msgstr ""
"func:`extrude_trim() <pyvista.PolyDataFilters.extrude_trim>` を使用して， "
":class:`pyvista.PolyData` を :func:`pyvista.Plane` で押しつぶします．"

#: ../../pyvista/doc/source/examples/01-filter/extrude-trim.rst:45
msgid "Generate an Extruded Surface"
msgstr "押し出し面を生成します"

#: ../../pyvista/doc/source/examples/01-filter/extrude-trim.rst:71
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"\n"
"<table style='width: 100%;'>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>39600</td></tr>\n"
"<tr><td>N Points</td><td>20000</td></tr>\n"
"<tr><td>N Strips</td><td>0</td></tr>\n"
"<tr><td>X Bounds</td><td>-1.000e+01, 1.000e+01</td></tr>\n"
"<tr><td>Y Bounds</td><td>-2.309e-14, 2.000e+01</td></tr>\n"
"<tr><td>Z Bounds</td><td>-5.000e+00, 7.725e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>0</td></tr>\n"
"</table>\n"
"\n"
"\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"\n"
"<table style='width: 100%;'>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>39600</td></tr>\n"
"<tr><td>N Points</td><td>20000</td></tr>\n"
"<tr><td>N Strips</td><td>0</td></tr>\n"
"<tr><td>X Bounds</td><td>-1.000e+01, 1.000e+01</td></tr>\n"
"<tr><td>Y Bounds</td><td>-2.309e-14, 2.000e+01</td></tr>\n"
"<tr><td>Z Bounds</td><td>-5.000e+00, 7.725e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>0</td></tr>\n"
"</table>\n"
"\n"
"\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/01-filter/extrude-trim.rst:94
msgid "Plot the Extruded Surface"
msgstr "押し出し面をプロットします"

#: ../../pyvista/doc/source/examples/01-filter/extrude-trim.rst:95
msgid "Plot the resulting :class:`pyvista.PolyData`."
msgstr "出来上がった :class:`pyvista.PolyData` をプロットします．"

#: ../../pyvista/doc/source/examples/01-filter/extrude-trim.rst:132
msgid "Extruding All Edges"
msgstr "すべてのエッジを押し出します"

#: ../../pyvista/doc/source/examples/01-filter/extrude-trim.rst:133
msgid ""
"The previous example used the default ``extrusion='boundary_edges'``, which "
"only generates faces on the boundary. When using ``extrusion='all_edges'``, "
"interior edges are also created."
msgstr ""
"前の例では，デフォルトの ``extrusion='boundary_edges'`` を使用し，境界上の面のみを生成していました． "
"``extrusion='all_edges'`` を使用すると，内側の辺も生成されます．"

#: ../../pyvista/doc/source/examples/01-filter/extrude-trim.rst:175
msgid "Plot"
msgstr "プロット"

#: ../../pyvista/doc/source/examples/01-filter/extrude-trim.rst:176
msgid ""
"Show the additional interior faces by plotting with ``style='wireframe'``."
msgstr "``style='wireframe'`` でプロットすることにより，追加の内側面を表示します．"

#: ../../pyvista/doc/source/examples/01-filter/extrude-trim.rst:212
msgid "Extrude a Line"
msgstr "線の押し出し"

#: ../../pyvista/doc/source/examples/01-filter/extrude-trim.rst:213
msgid ""
"You can also extrude lines. Observe that the output from extruded lines is "
"still a :class:`pyvista.PolyData`."
msgstr ""
"また，線を押し出すこともできます．押し出された線の出力は :class:`pyvista.PolyData` のままであることを確認してください．"

#: ../../pyvista/doc/source/examples/01-filter/extrude-trim.rst:232
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table style='width: 100%;'><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table style='width: 100%;'>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>1</td></tr>\n"
"<tr><td>N Points</td><td>4</td></tr>\n"
"<tr><td>N Strips</td><td>0</td></tr>\n"
"<tr><td>X Bounds</td><td>-5.000e-01, 5.000e-01</td></tr>\n"
"<tr><td>Y Bounds</td><td>0.000e+00, 0.000e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 1.500e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>2</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table style='width: 100%;'>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td>Texture Coordinates</td><td>Points</td><td>float32</td><td>2</td><td>0.000e+00</td><td>1.000e+00</td></tr>\n"
"<tr><td><b>Distance</b></td><td>Points</td><td>float64</td><td>1</td><td>0.000e+00</td><td>1.000e+00</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table style='width: 100%;'><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table style='width: 100%;'>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>1</td></tr>\n"
"<tr><td>N Points</td><td>4</td></tr>\n"
"<tr><td>N Strips</td><td>0</td></tr>\n"
"<tr><td>X Bounds</td><td>-5.000e-01, 5.000e-01</td></tr>\n"
"<tr><td>Y Bounds</td><td>0.000e+00, 0.000e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 1.500e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>2</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table style='width: 100%;'>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td>Texture Coordinates</td><td>Points</td><td>float32</td><td>2</td><td>0.000e+00</td><td>1.000e+00</td></tr>\n"
"<tr><td><b>Distance</b></td><td>Points</td><td>float64</td><td>1</td><td>0.000e+00</td><td>1.000e+00</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/01-filter/extrude-trim.rst:262
msgid "Plot the Extruded Line"
msgstr "押し出し線をプロットします"

#: ../../pyvista/doc/source/examples/01-filter/extrude-trim.rst:263
msgid "Note how the scalars are copied to the extruded line."
msgstr "スカラーが押し出された線にコピーされていることに注意してください．"

#: ../../pyvista/doc/source/examples/01-filter/extrude-trim.rst:290
msgid "**Total running time of the script:** (0 minutes 1.960 seconds)"
msgstr "**Total running time of the script:** (0 minutes 1.960 seconds)"

#: ../../pyvista/doc/source/examples/01-filter/extrude-trim.rst:304
msgid ""
":download:`Download Python source code: extrude-trim.py <extrude-trim.py>`"
msgstr ""
":download:`Download Python source code: extrude-trim.py <extrude-trim.py>`"

#: ../../pyvista/doc/source/examples/01-filter/extrude-trim.rst:308
msgid ""
":download:`Download Jupyter notebook: extrude-trim.ipynb <extrude-"
"trim.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: extrude-trim.ipynb <extrude-"
"trim.ipynb>`"

#: ../../pyvista/doc/source/examples/01-filter/flying_edges.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_flying_edges.py>` "
"to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_flying_edges.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/01-filter/flying_edges.rst:24
msgid "Marching Cubes"
msgstr "マーチングキューブ"

#: ../../pyvista/doc/source/examples/01-filter/flying_edges.rst:26
msgid ""
"Generate a surface from a scalar field using the flying edges and marching "
"cubes filters as provided by the :func:`contour "
"<pyvista.DataSetFilters.contour>` filter."
msgstr ""
":func:`contour <pyvista.DataSetFilters.contour>` "
"フィルタで提供されるフライングエッジとマーチングキューブのフィルタを使って，スカラーフィールドから曲面を生成します．"

#: ../../pyvista/doc/source/examples/01-filter/flying_edges.rst:30
msgid ""
"Special thanks to GitHub user `stla <https://gist.github.com/stla>`_ for "
"providing examples."
msgstr "例題を提供してくれたGitHubユーザーの `stla <https://gist.github.com/stla>`_ に感謝します．"

#: ../../pyvista/doc/source/examples/01-filter/flying_edges.rst:51
msgid "Spider Cage"
msgstr "スパイダーケイジ"

#: ../../pyvista/doc/source/examples/01-filter/flying_edges.rst:52
msgid ""
"Use the marching cubes algorithm to extract the isosurface generated from "
"the spider cage function."
msgstr "marching cubesアルゴリズムを使用して，スパイダーケージ関数から生成された等値面を抽出します．"

#: ../../pyvista/doc/source/examples/01-filter/flying_edges.rst:104
msgid "Barth Sextic"
msgstr "バースセクスィック"

#: ../../pyvista/doc/source/examples/01-filter/flying_edges.rst:105
msgid ""
"Use the flying edges algorithm to extract the isosurface generated from the "
"Barth sextic function."
msgstr "flying edgesアルゴリズムを使用して， Barth sextic 関数から生成された等値面を抽出します．"

#: ../../pyvista/doc/source/examples/01-filter/flying_edges.rst:164
msgid "Animate Barth Sextic"
msgstr "バースセクスィックのアニメーション"

#: ../../pyvista/doc/source/examples/01-filter/flying_edges.rst:165
msgid ""
"Show 20 frames of various isocurves extracted from the Barth sextic "
"function."
msgstr "バルト6芒星関数から抽出された様々なアイソカーブを20フレーム表示します．"

#: ../../pyvista/doc/source/examples/01-filter/flying_edges.rst:215
msgid "**Total running time of the script:** ( 0 minutes  9.169 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  9.169 seconds)"

#: ../../pyvista/doc/source/examples/01-filter/flying_edges.rst:229
msgid ""
":download:`Download Python source code: flying_edges.py <flying_edges.py>`"
msgstr ""
":download:`Download Python source code: flying_edges.py <flying_edges.py>`"

#: ../../pyvista/doc/source/examples/01-filter/flying_edges.rst:233
msgid ""
":download:`Download Jupyter notebook: flying_edges.ipynb "
"<flying_edges.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: flying_edges.ipynb "
"<flying_edges.ipynb>`"

#: ../../pyvista/doc/source/examples/01-filter/gaussian-smoothing.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_gaussian-"
"smoothing.py>` to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_gaussian-"
"smoothing.py>` をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/01-filter/gaussian-smoothing.rst:24
msgid "Gaussian Smoothing"
msgstr "Gaussianスムージング"

#: ../../pyvista/doc/source/examples/01-filter/gaussian-smoothing.rst:26
msgid "Perform a Gaussian convolution on a uniformly gridded data set."
msgstr "均一グリッドデータセットでGauss畳み込みを実行します．"

#: ../../pyvista/doc/source/examples/01-filter/gaussian-smoothing.rst:28
msgid ""
":class:`pyvista.ImageData` data sets (a.k.a. images) a can be smoothed by "
"convolving the image data set with a Gaussian for one- to three-dimensional "
"inputs. This is commonly referred to as Gaussian blurring and typically used"
" to reduce noise or decrease the detail of an image dataset."
msgstr ""
":class:`pyvista.ImageData` データ集合(a.k.a. イメージ) "
"aは，画像データ集合を1次元から3次元入力に対してガウス関数で畳み込むことによって平滑化することができる．これは，一般にガウスぼかしと呼ばれ，通常，ノイズを低減するか，または画像データセットの詳細を低減するために使用される．"

#: ../../pyvista/doc/source/examples/01-filter/gaussian-smoothing.rst:33
msgid "See also :func:`pyvista.ImageDataFilters.gaussian_smooth`."
msgstr ":func:`pyvista.ImageDataFilters.gaussian_smooth` も参照してください．"

#: ../../pyvista/doc/source/examples/01-filter/gaussian-smoothing.rst:57
msgid ""
"Let's apply the Gaussian smoothing with different values of standard "
"deviation."
msgstr "異なる値の標準偏差でGaussスムージングを適用します．"

#: ../../pyvista/doc/source/examples/01-filter/gaussian-smoothing.rst:105
#: ../../pyvista/doc/source/examples/02-plot/volume.rst:24
msgid "Volume Rendering"
msgstr "ボリュームレンダリング"

#: ../../pyvista/doc/source/examples/01-filter/gaussian-smoothing.rst:106
msgid "Now let's see an example on a 3D dataset with volume rendering:"
msgstr "次に，ボリュームレンダリングを使用した3Dデータセットの例を見てみましょう:"

#: ../../pyvista/doc/source/examples/01-filter/gaussian-smoothing.rst:148
msgid "**Total running time of the script:** ( 0 minutes  9.237 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  9.237 seconds)"

#: ../../pyvista/doc/source/examples/01-filter/gaussian-smoothing.rst:162
msgid ""
":download:`Download Python source code: gaussian-smoothing.py <gaussian-"
"smoothing.py>`"
msgstr ""
":download:`Download Python source code: gaussian-smoothing.py <gaussian-"
"smoothing.py>`"

#: ../../pyvista/doc/source/examples/01-filter/gaussian-smoothing.rst:166
msgid ""
":download:`Download Jupyter notebook: gaussian-smoothing.ipynb <gaussian-"
"smoothing.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: gaussian-smoothing.ipynb <gaussian-"
"smoothing.ipynb>`"

#: ../../pyvista/doc/source/examples/01-filter/geodesic.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_geodesic.py>` to "
"download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_01-filter_geodesic.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/01-filter/geodesic.rst:24
msgid "Geodesic Paths"
msgstr "測地パス"

#: ../../pyvista/doc/source/examples/01-filter/geodesic.rst:26
msgid ""
"Calculates the geodesic path between two vertices using Dijkstra's algorithm"
msgstr "Dijkstraのアルゴリズムを使用して2つの頂点間の測地パスを計算します"

#: ../../pyvista/doc/source/examples/01-filter/geodesic.rst:47
msgid "Get the geodesic path as a new :class:`pyvista.PolyData` object:"
msgstr "測地線パスを新しい :class:`pyvista.PolyData` オブジェクトとして取得します．"

#: ../../pyvista/doc/source/examples/01-filter/geodesic.rst:71
msgid "Render the path along the land surface"
msgstr "ランドサーフェスに沿ってパスをレンダリングします"

#: ../../pyvista/doc/source/examples/01-filter/geodesic.rst:104
msgid "How long is that path?"
msgstr "その道はどのくらいの長さですか．"

#: ../../pyvista/doc/source/examples/01-filter/geodesic.rst:130
msgid "**Total running time of the script:** ( 0 minutes  16.084 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  16.084 seconds)"

#: ../../pyvista/doc/source/examples/01-filter/geodesic.rst:145
msgid ":download:`Download Python source code: geodesic.py <geodesic.py>`"
msgstr ":download:`Download Python source code: geodesic.py <geodesic.py>`"

#: ../../pyvista/doc/source/examples/01-filter/geodesic.rst:151
msgid ":download:`Download Jupyter notebook: geodesic.ipynb <geodesic.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: geodesic.ipynb <geodesic.ipynb>`"

#: ../../pyvista/doc/source/examples/01-filter/glyphs.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_glyphs.py>` to "
"download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_01-filter_glyphs.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/01-filter/glyphs.rst:24
msgid "Plotting Glyphs (Vectors or PolyData)"
msgstr "字形のプロット (ベクトルかPolyData)"

#: ../../pyvista/doc/source/examples/01-filter/glyphs.rst:26
msgid "Use vectors in a dataset to plot and orient glyphs/geometric objects."
msgstr "データセット内のベクトルを使用して，記号/ジオメトリオブジェクトを印刷したり方向を設定します．"

#: ../../pyvista/doc/source/examples/01-filter/glyphs.rst:47
msgid ""
"Glyphying can be done via the :func:`pyvista.DataSetFilters.glyph` filter"
msgstr "グリフィイングは :func:`pyvista.DataSetFilters.glyph` フィルターを介して行うことができる"

#: ../../pyvista/doc/source/examples/01-filter/glyphs.rst:89
msgid ""
"Another approach is to load the vectors directly to the mesh object and then"
" access the :attr:`pyvista.DataSet.arrows` property."
msgstr ""
"もう1つの方法は，ベクトルを直接メッシュオブジェクトにロードし， :attr:`pyvista.DataSet.arrows` "
"プロパティにアクセスすることです．"

#: ../../pyvista/doc/source/examples/01-filter/glyphs.rst:129
msgid "Plot the arrows and the sphere."
msgstr "矢印と球体をプロットします．"

#: ../../pyvista/doc/source/examples/01-filter/glyphs.rst:157
msgid "Subset of Glyphs"
msgstr "字形のサブセット"

#: ../../pyvista/doc/source/examples/01-filter/glyphs.rst:159
msgid ""
"Sometimes you might not want glyphs for every node in the input dataset. In "
"this case, you can choose to build glyphs for a subset of the input dataset "
"by using a merging tolerance. Here we specify a merging tolerance of five "
"percent which equates to five percent of the bounding box's length."
msgstr ""
"入力データセットのすべてのノードにグリフが必要ない場合があります．この場合，マージ許容値を使用して，入力データセットのサブセットのグリフを作成することを選択できます．ここでは，5パーセントのマージ許容値を指定します．これは，バウンディングボックスの長さの5パーセントに相当します．"

#: ../../pyvista/doc/source/examples/01-filter/glyphs.rst:194
msgid "**Total running time of the script:** ( 0 minutes  3.501 seconds)"
msgstr "**スクリプトの合計実行時間:** ( 0 分  3.501 秒)"

#: ../../pyvista/doc/source/examples/01-filter/glyphs.rst:209
msgid ":download:`Download Python source code: glyphs.py <glyphs.py>`"
msgstr ":download:`Download Python source code: glyphs.py <glyphs.py>`"

#: ../../pyvista/doc/source/examples/01-filter/glyphs.rst:215
msgid ":download:`Download Jupyter notebook: glyphs.ipynb <glyphs.ipynb>`"
msgstr ":download:`Download Jupyter notebook: glyphs.ipynb <glyphs.ipynb>`"

#: ../../pyvista/doc/source/examples/01-filter/glyphs_table.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_glyphs_table.py>` to "
"download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_01-filter_glyphs_table.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/01-filter/glyphs_table.rst:24
msgid "Table of Glyphs"
msgstr "字形表"

#: ../../pyvista/doc/source/examples/01-filter/glyphs_table.rst:26
msgid ""
"``vtk`` supports tables of glyphs from which glyphs are looked up. This "
"example demonstrates this functionality."
msgstr "``vtk`` は，字形が検索される字形のテーブルをサポートします．この例では，この機能を示します．"

#: ../../pyvista/doc/source/examples/01-filter/glyphs_table.rst:47
msgid ""
"We can allow tables of glyphs in a backward-compatible way by allowing a "
"sequence of geometries as well as single (scalar) geometries to be passed as"
" the ``geom`` kwarg of :func:`pyvista.DataSetFilters.glyph`. An ``indices`` "
"optional keyword specifies the index of each glyph geometry in the table, "
"and it has to be the same length as ``geom`` if specified. If it is absent a"
" default value of ``range(len(geom))`` is assumed."
msgstr ""
":func:`pyvista.DataSetFilters.glyph` の ``geom`` kwargとして渡されるジオメトリのシーケンスと単一 "
"(スカラー) ジオメトリを許可することによって，下位互換性のある方法でグリフのテーブルを許可することができます． ``indices`` "
"オプションキーワードはテーブル内の各グリフジオメトリのインデックスを指定し，指定された場合は ``geom`` "
"と同じ長さである必要があります．省略した場合は， ``range(len(geom))`` のデフォルト値が想定されます．"

#: ../../pyvista/doc/source/examples/01-filter/glyphs_table.rst:113
msgid "**Total running time of the script:** ( 0 minutes  1.763 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.763 seconds)"

#: ../../pyvista/doc/source/examples/01-filter/glyphs_table.rst:128
msgid ""
":download:`Download Python source code: glyphs_table.py <glyphs_table.py>`"
msgstr ""
":download:`Download Python source code: glyphs_table.py <glyphs_table.py>`"

#: ../../pyvista/doc/source/examples/01-filter/glyphs_table.rst:134
msgid ""
":download:`Download Jupyter notebook: glyphs_table.ipynb "
"<glyphs_table.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: glyphs_table.ipynb "
"<glyphs_table.ipynb>`"

#: ../../pyvista/doc/source/examples/01-filter/gradients.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_gradients.py>` to "
"download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_gradients.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/01-filter/gradients.rst:24
msgid "Compute Gradients of a Field"
msgstr "フィールドの勾配を計算する"

#: ../../pyvista/doc/source/examples/01-filter/gradients.rst:26
msgid "Estimate the gradient of a scalar or vector field in a data set."
msgstr "Estimate the gradient of a scalar or vector field in a data set."

#: ../../pyvista/doc/source/examples/01-filter/gradients.rst:28
msgid ""
"The ordering for the output gradient tuple will be {du/dx, du/dy, du/dz, "
"dv/dx, dv/dy, dv/dz, dw/dx, dw/dy, dw/dz} for an input array {u, v, w}."
msgstr ""
"入力配列 {u, v, w} の場合，出力グラディエントタプルの順序は {du/dx, du/dy, du/dz, dv/dx, dv/dy, "
"dv/dz, dw/dx, dw/dy, dw/dz} になります．"

#: ../../pyvista/doc/source/examples/01-filter/gradients.rst:32
msgid "Showing the :func:`pyvista.DataSetFilters.compute_derivative` filter."
msgstr ":func:`pyvista.DataSetFilters.compute_derivative` フィルタを表示します．"

#: ../../pyvista/doc/source/examples/01-filter/gradients.rst:52
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table style='width: 100%;'><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table style='width: 100%;'>\n"
"<tr><th>ImageData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>158400</td></tr>\n"
"<tr><td>N Points</td><td>167580</td></tr>\n"
"<tr><td>X Bounds</td><td>1.000e+02, 1.750e+02</td></tr>\n"
"<tr><td>Y Bounds</td><td>8.000e+01, 1.280e+02</td></tr>\n"
"<tr><td>Z Bounds</td><td>1.000e+00, 4.500e+01</td></tr>\n"
"<tr><td>Dimensions</td><td>76, 49, 45</td></tr>\n"
"<tr><td>Spacing</td><td>1.000e+00, 1.000e+00, 1.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>2</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table style='width: 100%;'>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>scalars</b></td><td>Points</td><td>float32</td><td>1</td><td>0.000e+00</td><td>5.800e+02</td></tr>\n"
"<tr><td>vectors</td><td>Points</td><td>float32</td><td>3</td><td>-2.263e+01</td><td>1.662e+01</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""

#: ../../pyvista/doc/source/examples/01-filter/gradients.rst:82
msgid ""
"Now compute the gradients of the ``vectors`` vector field in the point data "
"of that mesh. This is as simple as calling "
":func:`pyvista.DataSetFilters.compute_derivative`."
msgstr ""
"ここで，そのメッシュの点データにおける ``vectors`` ベクトルフィールドの勾配を計算する．これは "
":func:`pyvista.DataSetFilters.compute_derivative` を呼び出すのと同じくらい簡単です．"

#: ../../pyvista/doc/source/examples/01-filter/gradients.rst:121
msgid ""
"You can also use :func:`pyvista.DataSetFilters.compute_derivative` for "
"computing other derivative based quantities, such as divergence, vorticity, "
"and Q-criterion. See function documentation for options."
msgstr ""
"また， :func:`pyvista.DataSetFilters.compute_derivative` "
"を使用して，発散，渦度，Q基準など，他の導関数ベースの量を計算することもできます．オプションについては，関数のマニュアルを参照してください．"

#: ../../pyvista/doc/source/examples/01-filter/gradients.rst:127
msgid ""
"``mesh_g[\"gradient\"]`` is an ``N`` by 9 NumPy array of the gradients, so "
"we could make a dictionary of NumPy arrays of the gradients like:"
msgstr ""
"``mesh_g[\"gradient\"]`` は勾配の 9 NumPy 配列による ``N`` "
"なので，勾配のNumPy配列の辞書を作ることができます:"

#: ../../pyvista/doc/source/examples/01-filter/gradients.rst:174
msgid ""
"And we can add all of those components as individual arrays back to the mesh"
" by:"
msgstr "これらのコンポーネントを個別の配列としてメッシュに追加するには，次のようにします．"

#: ../../pyvista/doc/source/examples/01-filter/gradients.rst:189
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table style='width: 100%;'><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table style='width: 100%;'>\n"
"<tr><th>ImageData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>158400</td></tr>\n"
"<tr><td>N Points</td><td>167580</td></tr>\n"
"<tr><td>X Bounds</td><td>1.000e+02, 1.750e+02</td></tr>\n"
"<tr><td>Y Bounds</td><td>8.000e+01, 1.280e+02</td></tr>\n"
"<tr><td>Z Bounds</td><td>1.000e+00, 4.500e+01</td></tr>\n"
"<tr><td>Dimensions</td><td>76, 49, 45</td></tr>\n"
"<tr><td>Spacing</td><td>1.000e+00, 1.000e+00, 1.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>12</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table style='width: 100%;'>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>scalars</b></td><td>Points</td><td>float32</td><td>1</td><td>0.000e+00</td><td>5.800e+02</td></tr>\n"
"<tr><td>vectors</td><td>Points</td><td>float32</td><td>3</td><td>-2.263e+01</td><td>1.662e+01</td></tr>\n"
"<tr><td>gradient</td><td>Points</td><td>float32</td><td>9</td><td>-1.585e+01</td><td>1.536e+01</td></tr>\n"
"<tr><td>du/dx</td><td>Points</td><td>float32</td><td>1</td><td>-8.293e+00</td><td>8.336e+00</td></tr>\n"
"<tr><td>du/dy</td><td>Points</td><td>float32</td><td>1</td><td>-1.084e+01</td><td>8.334e+00</td></tr>\n"
"<tr><td>du/dz</td><td>Points</td><td>float32</td><td>1</td><td>-8.300e+00</td><td>8.317e+00</td></tr>\n"
"<tr><td>dv/dx</td><td>Points</td><td>float32</td><td>1</td><td>-1.133e+01</td><td>1.536e+01</td></tr>\n"
"<tr><td>dv/dy</td><td>Points</td><td>float32</td><td>1</td><td>-1.585e+01</td><td>1.170e+01</td></tr>\n"
"<tr><td>dv/dz</td><td>Points</td><td>float32</td><td>1</td><td>-1.131e+01</td><td>7.459e+00</td></tr>\n"
"<tr><td>dw/dx</td><td>Points</td><td>float32</td><td>1</td><td>-8.738e+00</td><td>1.212e+01</td></tr>\n"
"<tr><td>dw/dy</td><td>Points</td><td>float32</td><td>1</td><td>-8.734e+00</td><td>8.740e+00</td></tr>\n"
"<tr><td>dw/dz</td><td>Points</td><td>float32</td><td>1</td><td>-1.124e+01</td><td>8.728e+00</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""

#: ../../pyvista/doc/source/examples/01-filter/gradients.rst:258
msgid ""
"And there you have it, the gradients for a vector field. We could also do "
"this for a scalar  field like for the ``scalars`` field in the given "
"dataset."
msgstr ""
"これがベクトル場の勾配です．また，与えられたデータセットの ``scalars`` "
"フィールドのようなスカラーフィールドに対してもこれを行うことができます．"

#: ../../pyvista/doc/source/examples/01-filter/gradients.rst:317
msgid "**Total running time of the script:** (0 minutes 5.892 seconds)"
msgstr ""

#: ../../pyvista/doc/source/examples/01-filter/gradients.rst:331
msgid ":download:`Download Python source code: gradients.py <gradients.py>`"
msgstr ":download:`Download Python source code: gradients.py <gradients.py>`"

#: ../../pyvista/doc/source/examples/01-filter/gradients.rst:335
msgid ""
":download:`Download Jupyter notebook: gradients.ipynb <gradients.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: gradients.ipynb <gradients.ipynb>`"

#: ../../pyvista/doc/source/examples/01-filter/image-fft.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_image-fft.py>` to "
"download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_image-fft.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/01-filter/image-fft.rst:24
msgid "Fast Fourier Transform"
msgstr "高速Fourier変換"

#: ../../pyvista/doc/source/examples/01-filter/image-fft-perlin-noise.rst:26
#: ../../pyvista/doc/source/examples/01-filter/image-fft.rst:26
msgid ""
"This example shows how to apply a Fast Fourier Transform (FFT) to a "
":class:`pyvista.ImageData` using :func:`pyvista.ImageDataFilters.fft` "
"filter."
msgstr ""
"この例では， :func:`pyvista.ImageData.fft` フィルターを使用して， :class:`pyvista.ImageData` "
"に高速フーリエ変換（FFT）を適用する方法を示しています．"

#: ../../pyvista/doc/source/examples/01-filter/image-fft.rst:30
msgid ""
"Here, we demonstrate FFT usage by denoising an image, effectively removing "
"any \"high frequency\" content by performing a `low pass filter "
"<https://en.wikipedia.org/wiki/Low-pass_filter>`_."
msgstr ""
"ここでは，画像のノイズ除去を行い， `low pass filter <https://en.wikipedia.org/wiki/Low-"
"pass_filter>`_ を実行することで \"高周波\" コンテンツを効果的に除去することで，FFTの使用方法を説明します．"

#: ../../pyvista/doc/source/examples/01-filter/image-fft.rst:34
msgid ""
"This example was inspired by `Image denoising by FFT <https://scipy-"
"lectures.org/intro/scipy/auto_examples/solutions/plot_fft_image_denoise.html>`_."
msgstr ""
"この例は， `Image denoising by FFT <https://scipy-"
"lectures.org/intro/scipy/auto_examples/solutions/plot_fft_image_denoise.html>`_"
" に触発されたものです．"

#: ../../pyvista/doc/source/examples/01-filter/image-fft.rst:56
msgid "Load the example Moon landing image and plot it."
msgstr "月面着陸のサンプル画像を読み込み，プロットします．"

#: ../../pyvista/doc/source/examples/01-filter/image-fft.rst:102
msgid "Apply FFT to the image"
msgstr "画像にFFTを適用する"

#: ../../pyvista/doc/source/examples/01-filter/image-fft.rst:103
msgid ""
"FFT will be applied to the active scalars, ``'PNGImage'``, the default "
"scalars name when loading a PNG image."
msgstr "FFT は，アクティブなスカラー， ``'PNGImage'`` ，PNG イメージを読み込む際のデフォルトのスカラー名に適用されます．"

#: ../../pyvista/doc/source/examples/01-filter/image-fft.rst:106
msgid ""
"The output from the filter is a complex array stored by the same name unless"
" specified using ``output_scalars_name``."
msgstr "このフィルタからの出力は， ``output_scalars_name`` で指定しない限り，同じ名前で保存された複素配列になります．"

#: ../../pyvista/doc/source/examples/01-filter/image-fft.rst:141
msgid "Plot the FFT of the image"
msgstr "画像のFFTをプロットする"

#: ../../pyvista/doc/source/examples/01-filter/image-fft.rst:142
msgid "Plot the absolute value of the FFT of the image."
msgstr "画像のFFTの絶対値をプロットする．"

#: ../../pyvista/doc/source/examples/01-filter/image-fft.rst:144
msgid ""
"Note that we are effectively viewing the \"frequency\" of the data in this "
"image, where the four corners contain the low frequency content of the "
"image, and the middle is the high frequency content of the image."
msgstr ""
"この画像では，事実上データの \"周波数\" "
"を見ていることに注意してください．4隅には画像の低周波コンテンツが，中央部には画像の高周波コンテンツが含まれています．"

#: ../../pyvista/doc/source/examples/01-filter/image-fft.rst:178
msgid "Remove the noise from the ``fft_image``"
msgstr "``fft_image`` からノイズを除去"

#: ../../pyvista/doc/source/examples/01-filter/image-fft.rst:179
msgid ""
"Effectively, we want to remove high frequency (noisy) data from our image. "
"First, let's reshape by the size of the image."
msgstr "実質的には，画像から高周波(ノイズの多い)データを除去したいのです．まず，画像の大きさを整形してみましょう．"

#: ../../pyvista/doc/source/examples/01-filter/image-fft.rst:182
msgid ""
"Next, perform a low pass filter by removing the middle 80% of the content of"
" the image. Note that the high frequency content is in the middle of the "
"array."
msgstr "次に，画像の中間の80％の内容を除去するローパスフィルタを実行します．高周波のコンテンツが配列の真ん中にあることに注意してください．"

#: ../../pyvista/doc/source/examples/01-filter/image-fft.rst:186
msgid ""
"It is easier and more efficient to use the existing "
":func:`pyvista.ImageDataFilters.low_pass` filter. This section is here for "
"demonstration purposes."
msgstr ""
"既存の :func:`pyvista.ImageDataFilters.low_pass` "
"フィルタを使用する方が簡単で効率的です．このセクションは，デモンストレーションのためにあります．"

#: ../../pyvista/doc/source/examples/01-filter/image-fft.rst:228
msgid "Convert to the spatial domain using reverse FFT"
msgstr "逆FFTによる空間領域への変換"

#: ../../pyvista/doc/source/examples/01-filter/image-fft.rst:229
msgid ""
"Finally, convert the image data back to the \"spatial\" domain and plot it."
msgstr "最後に，画像データを \"空間\" 領域に戻し，プロットします．"

#: ../../pyvista/doc/source/examples/01-filter/image-fft.rst:255
msgid "**Total running time of the script:** ( 0 minutes  4.447 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  4.447 seconds)"

#: ../../pyvista/doc/source/examples/01-filter/image-fft.rst:269
msgid ":download:`Download Python source code: image-fft.py <image-fft.py>`"
msgstr ":download:`Download Python source code: image-fft.py <image-fft.py>`"

#: ../../pyvista/doc/source/examples/01-filter/image-fft.rst:273
msgid ""
":download:`Download Jupyter notebook: image-fft.ipynb <image-fft.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: image-fft.ipynb <image-fft.ipynb>`"

#: ../../pyvista/doc/source/examples/01-filter/image-fft-perlin-noise.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_image-fft-perlin-"
"noise.py>` to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_image-fft-perlin-"
"noise.py>` をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/01-filter/image-fft-perlin-noise.rst:24
msgid "Fast Fourier Transform with Perlin Noise"
msgstr "Perlinノイズによる高速フーリエ変換"

#: ../../pyvista/doc/source/examples/01-filter/image-fft-perlin-noise.rst:30
msgid ""
"Here, we demonstrate FFT usage by first generating Perlin noise using "
":func:`pyvista.sample_function() "
"<pyvista.core.utilities.features.sample_function>` to sample "
":func:`pyvista.perlin_noise <pyvista.core.utilities.features.perlin_noise>`,"
" and then performing FFT of the sampled noise to show the frequency content "
"of that noise."
msgstr ""
"ここでは，まず :func:`pyvista.sample_function() "
"<pyvista.core.utilities.features.sample_function>` を使って Perlin ノイズを生成して "
":func:`pyvista.perlin_noise <pyvista.core.utilities.features.perlin_noise>` "
"をサンプリングし，そのノイズの周波数コンテンツを示すためにサンプルしたノイズを FFT して FFT 使用法を実演しています．"

#: ../../pyvista/doc/source/examples/01-filter/image-fft-perlin-noise.rst:55
msgid "Generate Perlin Noise"
msgstr "Perlinノイズの生成"

#: ../../pyvista/doc/source/examples/01-filter/image-fft-perlin-noise.rst:56
msgid ""
"Start by generating some `Perlin Noise "
"<https://en.wikipedia.org/wiki/Perlin_noise>`_ as in "
":ref:`perlin_noise_2d_example` example."
msgstr ""
"まず， :ref:`perlin_noise_2d_example` の例のように `Perlin Noise "
"<https://en.wikipedia.org/wiki/Perlin_noise>`_ を生成します．"

#: ../../pyvista/doc/source/examples/01-filter/image-fft-perlin-noise.rst:60
msgid ""
"Note that we are generating it in a flat plane and using a frequency of 10 "
"in the x direction and 5 in the y direction. The unit of frequency is "
"``1/pixel``."
msgstr "なお，ここでは平面で生成し，x方向に10，y方向に5の周波数を使用しています．周波数の単位は ``1/pixel`` です．"

#: ../../pyvista/doc/source/examples/01-filter/image-fft-perlin-noise.rst:64
msgid ""
"Also note that the dimensions of the image are powers of 2. This is because "
"the FFT is much more efficient for arrays sized as a power of 2."
msgstr "これは，FFTが2のべき乗の大きさの配列に対してより効率的であるためです．"

#: ../../pyvista/doc/source/examples/01-filter/image-fft-perlin-noise.rst:97
msgid "Perform FFT of Perlin Noise"
msgstr "PerlinノイズのFFTを実行する"

#: ../../pyvista/doc/source/examples/01-filter/image-fft-perlin-noise.rst:98
msgid ""
"Next, perform an FFT of the noise and plot the frequency content. For the "
"sake of simplicity, we will only plot the content in the first quadrant."
msgstr "次に，ノイズのFFTを行い，その周波数成分をプロットします．簡単のため，第1象限のみの内容をプロットします．"

#: ../../pyvista/doc/source/examples/01-filter/image-fft-perlin-noise.rst:102
msgid "Note the usage of :func:`numpy.fft.fftfreq` to get the frequencies."
msgstr "周波数を得るために :func:`numpy.fft.fftfreq` を使っていることに注意してください．"

#: ../../pyvista/doc/source/examples/01-filter/image-fft-perlin-noise.rst:127
msgid "Plot the Frequency Domain"
msgstr "周波数領域をプロットする"

#: ../../pyvista/doc/source/examples/01-filter/image-fft-perlin-noise.rst:128
msgid ""
"Now, plot the noise in the frequency domain. Note how there is more high "
"frequency content in the x direction and this matches the frequencies given "
"to :func:`pyvista.perlin_noise "
"<pyvista.core.utilities.features.perlin_noise>`."
msgstr ""
"さて，ノイズを周波数領域でプロットしてみましょう．これは :func:`pyvista.perlin_noise "
"<pyvista.core.utilities.features.perlin_noise>` で指定した周波数と一致しています．"

#: ../../pyvista/doc/source/examples/01-filter/image-fft-perlin-noise.rst:171
msgid "Low Pass Filter"
msgstr "ローパスフィルタ"

#: ../../pyvista/doc/source/examples/01-filter/image-fft-perlin-noise.rst:172
msgid ""
"Let's perform a low pass filter on the frequency content and then convert it"
" back into the space (pixel) domain by immediately applying a reverse FFT."
msgstr "周波数成分に対してローパスフィルターをかけ，すぐに逆FFTをかけて空間(ピクセル)領域に変換してみましょう．"

#: ../../pyvista/doc/source/examples/01-filter/image-fft-perlin-noise.rst:175
msgid ""
"When converting back, keep only the real content. The imaginary content has "
"no physical meaning in the physical domain. PyVista will drop the imaginary "
"content, but will warn you of it."
msgstr ""
"逆変換する場合は，実部のみを残します．虚部は，物理的な領域では何の意味も持ちません．PyVistaは虚部を削除しますが，その旨の警告を表示します．"

#: ../../pyvista/doc/source/examples/01-filter/image-fft-perlin-noise.rst:179
msgid "As expected, we only see low frequency noise."
msgstr "予想通り，低周波のノイズしか見られません．"

#: ../../pyvista/doc/source/examples/01-filter/image-fft-perlin-noise.rst:207
msgid "High Pass Filter"
msgstr "ハイパスフィルター"

#: ../../pyvista/doc/source/examples/01-filter/image-fft-perlin-noise.rst:208
msgid ""
"This time, let's perform a high pass filter on the frequency content and "
"then convert it back into the space (pixel) domain by immediately applying a"
" reverse FFT."
msgstr "今回は，周波数成分に対してハイパスフィルターをかけ，すぐに逆FFTをかけて空間(ピクセル)領域に変換してみましょう．"

#: ../../pyvista/doc/source/examples/01-filter/image-fft-perlin-noise.rst:212
msgid ""
"When converting back, keep only the real content. The imaginary content has "
"no physical meaning in the pixel domain."
msgstr "逆変換する場合は，実部のみを残します．虚部は，ピクセル領域では何の意味も持ちません．"

#: ../../pyvista/doc/source/examples/01-filter/image-fft-perlin-noise.rst:215
msgid ""
"As expected, we only see the high frequency noise content as the low "
"frequency noise has been attenuated."
msgstr "予想通り，低周波のノイズが減衰しているため，高周波のノイズ成分しか見えません．"

#: ../../pyvista/doc/source/examples/01-filter/image-fft-perlin-noise.rst:244
msgid "Sum Low and High Pass"
msgstr "ローパスとハイパスの和"

#: ../../pyvista/doc/source/examples/01-filter/image-fft-perlin-noise.rst:245
msgid ""
"Show that the sum of the low and high passes equals the original noise."
msgstr "ローパスとハイパスの和が元のノイズと等しいことを示します．"

#: ../../pyvista/doc/source/examples/01-filter/image-fft-perlin-noise.rst:289
msgid "Animate"
msgstr "アニメート"

#: ../../pyvista/doc/source/examples/01-filter/image-fft-perlin-noise.rst:290
msgid "Animate the variation of the cutoff frequency."
msgstr "カットオフ周波数の変化をアニメーションで表現します．"

#: ../../pyvista/doc/source/examples/01-filter/image-fft-perlin-noise.rst:354
msgid ""
"The left mesh in the above animation warps based on the raw values of the "
"FFT amplitude. This emphasizes how taking into account more and more "
"frequencies as the animation progresses, we recover a gradually larger "
"proportion of the full noise sample. This is why the mesh starts \"flat\" "
"and grows larger as the frequency cutoff is increased."
msgstr ""
"上のアニメーションの左側のメッシュは，FFT振幅の生の値に基づいてワープしています．これは，アニメーションが進むにつれて，より多くの周波数を考慮することで，完全なノイズサンプルの割合が徐々に大きくなっていくことを強調しています．このため，メッシュは「平坦」に始まり，周波数のカットオフが大きくなるにつれて大きくなっていきます．"

#: ../../pyvista/doc/source/examples/01-filter/image-fft-perlin-noise.rst:360
msgid ""
"In contrast, the right mesh is always warped to the same visible height, "
"irrespective of the cutoff frequency. This highlights how the typical "
"wavelength (size of the features) of the Perlin noise decreases as the "
"frequency cutoff is increased since wavelength and frequency are inversely "
"proportional."
msgstr ""
"一方，右側のメッシュは，カットオフ周波数に関係なく，常に同じ目に見える高さに反っています．これは，波長と周波数が反比例するため，カットオフ周波数を上げるとパーリンノイズの典型的な波長（特徴の大きさ）が減少することを強調しています．"

#: ../../pyvista/doc/source/examples/01-filter/image-fft-perlin-noise.rst:369
msgid "**Total running time of the script:** ( 0 minutes  46.100 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  46.100 seconds)"

#: ../../pyvista/doc/source/examples/01-filter/image-fft-perlin-noise.rst:383
msgid ""
":download:`Download Python source code: image-fft-perlin-noise.py <image-"
"fft-perlin-noise.py>`"
msgstr ""
":download:`Download Python source code: image-fft-perlin-noise.py <image-"
"fft-perlin-noise.py>`"

#: ../../pyvista/doc/source/examples/01-filter/image-fft-perlin-noise.rst:387
msgid ""
":download:`Download Jupyter notebook: image-fft-perlin-noise.ipynb <image-"
"fft-perlin-noise.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: image-fft-perlin-noise.ipynb <image-"
"fft-perlin-noise.ipynb>`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:6
#: ../../pyvista/doc/source/examples/index.rst:527
msgid "Filtering"
msgstr "フィルタリング"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:8
#: ../../pyvista/doc/source/examples/index.rst:529
msgid ""
"These examples show case various mesh analysis and filtering routines "
"present in the :ref:`filters` module. Explore these demos to perform tasks "
"such as:"
msgstr ""
"これらの例は :ref:`filters` "
"モジュールに存在する様々なメッシュ解析とフィルタリングルーチンの事例を示します．次のようなタスクを実行するには，これらのデモを参照してください．"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:11
#: ../../pyvista/doc/source/examples/index.rst:532
msgid "Slicing and cutting meshes"
msgstr "メッシュのスライスとカット"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:12
#: ../../pyvista/doc/source/examples/index.rst:533
msgid "Computing mesh properties like volume, area, and surface normals"
msgstr "ボリューム，領域，サーフェス法線などのメッシュプロパティの計算"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:13
#: ../../pyvista/doc/source/examples/index.rst:534
msgid "Mesh decimation"
msgstr "メッシュ間引き"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:14
#: ../../pyvista/doc/source/examples/index.rst:535
msgid "Extract regions of one mesh using another mesh's surface"
msgstr "別のメッシュのサーフェスを使用して1つのメッシュの領域を抽出します"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:15
#: ../../pyvista/doc/source/examples/index.rst:536
msgid "Ray tracing through surface meshes"
msgstr "サーフェスメッシュを使用したレイトレーシング"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:16
#: ../../pyvista/doc/source/examples/index.rst:537
msgid "Resampling and interpolating scalar/vector values across meshes"
msgstr "メッシュ間のスカラー/ベクトル値のリサンプリングと補間"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:17
#: ../../pyvista/doc/source/examples/index.rst:538
msgid "Integrating a vector field to generate streamlines"
msgstr "ベクトルフィールドを積分して，流線を生成します．"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:18
#: ../../pyvista/doc/source/examples/index.rst:539
msgid "Smoothing surfaces"
msgstr "サーフェスをスムージングする"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:27
#: ../../pyvista/doc/source/examples/index.rst:548
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Perform boolean operations "
"with closed (manifold) surfaces.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Perform boolean operations "
"with closed (manifold) surfaces.\">"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:36
#: ../../pyvista/doc/source/examples/index.rst:557
msgid ":ref:`sphx_glr_examples_01-filter_boolean-operations.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_boolean-operations.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:38
#: ../../pyvista/doc/source/examples/index.rst:559
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Boolean Operations</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Boolean Operations</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:44
#: ../../pyvista/doc/source/examples/index.rst:565
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Extract the coordinates of "
"the centers of all cells or faces in a mesh.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Extract the coordinates of "
"the centers of all cells or faces in a mesh.\">"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:53
#: ../../pyvista/doc/source/examples/index.rst:574
msgid ":ref:`sphx_glr_examples_01-filter_cell-centers.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_cell-centers.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:55
#: ../../pyvista/doc/source/examples/index.rst:576
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Extract Cell Centers</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Extract Cell Centers</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:61
#: ../../pyvista/doc/source/examples/index.rst:582
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Clip any PyVista dataset by"
" a pyvista.PolyData surface mesh using the pyvista.DataSetFilters.cl...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Clip any PyVista dataset by"
" a pyvista.PolyData surface mesh using the pyvista.DataSetFilters.cl...\">"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:70
#: ../../pyvista/doc/source/examples/index.rst:591
msgid ":ref:`sphx_glr_examples_01-filter_clipping-with-surface.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_clipping-with-surface.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:72
#: ../../pyvista/doc/source/examples/index.rst:593
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Clipping with a Surface</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Clipping with a Surface</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:78
#: ../../pyvista/doc/source/examples/index.rst:599
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Clip/cut any dataset using "
"planes or boxes.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Clip/cut any dataset using "
"planes or boxes.\">"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:87
#: ../../pyvista/doc/source/examples/index.rst:608
msgid ":ref:`sphx_glr_examples_01-filter_clipping.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_clipping.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:89
#: ../../pyvista/doc/source/examples/index.rst:610
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Clipping with Planes & Boxes</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Clipping with Planes & Boxes</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:95
#: ../../pyvista/doc/source/examples/index.rst:616
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example use the "
"pyvista.PolyDataFilters.collision filter to detect the faces from one "
"sphe...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example use the "
"pyvista.PolyDataFilters.collision filter to detect the faces from one "
"sphe...\">"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:104
#: ../../pyvista/doc/source/examples/index.rst:625
msgid ":ref:`sphx_glr_examples_01-filter_collisions.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_collisions.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:106
#: ../../pyvista/doc/source/examples/index.rst:627
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Collision</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Collision</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:112
#: ../../pyvista/doc/source/examples/index.rst:633
msgid "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Computing Surface Normals\">"
msgstr "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Computing Surface Normals\">"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:121
#: ../../pyvista/doc/source/examples/index.rst:642
msgid ":ref:`sphx_glr_examples_01-filter_compute-normals.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_compute-normals.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:123
#: ../../pyvista/doc/source/examples/index.rst:644
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Computing Surface Normals</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Computing Surface Normals</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:129
#: ../../pyvista/doc/source/examples/index.rst:650
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\" Calculate mass properties "
"such as the volume or area of datasets\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\" Calculate mass properties "
"such as the volume or area of datasets\">"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:138
#: ../../pyvista/doc/source/examples/index.rst:659
msgid ":ref:`sphx_glr_examples_01-filter_compute-volume.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_compute-volume.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:140
#: ../../pyvista/doc/source/examples/index.rst:661
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Volumetric Analysis</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Volumetric Analysis</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:146
#: ../../pyvista/doc/source/examples/index.rst:667
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example highlights "
"some applications of the connectivity filter.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example highlights "
"some applications of the connectivity filter.\">"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:155
#: ../../pyvista/doc/source/examples/index.rst:676
msgid ":ref:`sphx_glr_examples_01-filter_connectivity.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_connectivity.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:157
#: ../../pyvista/doc/source/examples/index.rst:678
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Connectivity</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Connectivity</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:163
#: ../../pyvista/doc/source/examples/index.rst:684
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Generate iso-lines or "
"-surfaces for the scalars of a surface or volume.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Generate iso-lines or "
"-surfaces for the scalars of a surface or volume.\">"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:172
#: ../../pyvista/doc/source/examples/index.rst:693
msgid ":ref:`sphx_glr_examples_01-filter_contouring.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_contouring.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:174
#: ../../pyvista/doc/source/examples/index.rst:695
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Contouring</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Contouring</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:180
#: ../../pyvista/doc/source/examples/index.rst:701
msgid "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Decimate a mesh\">"
msgstr "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Decimate a mesh\">"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:189
#: ../../pyvista/doc/source/examples/index.rst:710
msgid ":ref:`sphx_glr_examples_01-filter_decimate.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_decimate.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:191
#: ../../pyvista/doc/source/examples/index.rst:712
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Decimation</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Decimation</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:197
#: ../../pyvista/doc/source/examples/index.rst:718
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Compute the average "
"thickness between two surfaces.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Compute the average "
"thickness between two surfaces.\">"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:206
#: ../../pyvista/doc/source/examples/index.rst:727
msgid ":ref:`sphx_glr_examples_01-filter_distance-between-surfaces.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_distance-between-surfaces.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:208
#: ../../pyvista/doc/source/examples/index.rst:729
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Distance Between Two Surfaces</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Distance Between Two Surfaces</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:214
#: ../../pyvista/doc/source/examples/index.rst:735
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Extract the cells in a mesh"
" that exist inside or outside a closed surface of another mesh\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Extract the cells in a mesh"
" that exist inside or outside a closed surface of another mesh\">"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:223
#: ../../pyvista/doc/source/examples/index.rst:744
msgid ":ref:`sphx_glr_examples_01-filter_extract-cells-inside-surface.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_extract-cells-inside-surface.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:225
#: ../../pyvista/doc/source/examples/index.rst:746
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Extract Cells Inside Surface</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Extract Cells Inside Surface</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:231
#: ../../pyvista/doc/source/examples/index.rst:752
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Extract edges from a "
"surface.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Extract edges from a "
"surface.\">"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:240
#: ../../pyvista/doc/source/examples/index.rst:761
msgid ":ref:`sphx_glr_examples_01-filter_extract-edges.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_extract-edges.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:242
#: ../../pyvista/doc/source/examples/index.rst:763
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Extract Edges</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Extract Edges</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:248
#: ../../pyvista/doc/source/examples/index.rst:769
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"You can extract the surface"
" of nearly any object within pyvista using the extract_surface filte...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"You can extract the surface"
" of nearly any object within pyvista using the extract_surface filte...\">"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:257
#: ../../pyvista/doc/source/examples/index.rst:778
msgid ":ref:`sphx_glr_examples_01-filter_extract-surface.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_extract-surface.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:259
#: ../../pyvista/doc/source/examples/index.rst:780
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Extract Surface</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Extract Surface</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:265
#: ../../pyvista/doc/source/examples/index.rst:786
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This takes polygonal data "
"as input and generates polygonal data on output. The input dataset is...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This takes polygonal data "
"as input and generates polygonal data on output. The input dataset is...\">"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:274
#: ../../pyvista/doc/source/examples/index.rst:795
msgid ":ref:`sphx_glr_examples_01-filter_extrude-rotate.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_extrude-rotate.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:276
#: ../../pyvista/doc/source/examples/index.rst:797
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Extrude Rotation</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Extrude Rotation</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:282
#: ../../pyvista/doc/source/examples/index.rst:803
msgid "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Extrude Trim\">"
msgstr "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Extrude Trim\">"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:291
#: ../../pyvista/doc/source/examples/index.rst:812
msgid ":ref:`sphx_glr_examples_01-filter_extrude-trim.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_extrude-trim.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:293
#: ../../pyvista/doc/source/examples/index.rst:814
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Extrude Trim</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Extrude Trim</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:299
#: ../../pyvista/doc/source/examples/index.rst:820
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Generate a surface from a "
"scalar field using the flying edges and marching cubes filters as pro...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Generate a surface from a "
"scalar field using the flying edges and marching cubes filters as pro...\">"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:308
#: ../../pyvista/doc/source/examples/index.rst:829
msgid ":ref:`sphx_glr_examples_01-filter_flying_edges.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_flying_edges.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:310
#: ../../pyvista/doc/source/examples/index.rst:831
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Marching Cubes</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Marching Cubes</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:316
#: ../../pyvista/doc/source/examples/index.rst:837
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Perform a Gaussian "
"convolution on a uniformly gridded data set.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Perform a Gaussian "
"convolution on a uniformly gridded data set.\">"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:325
#: ../../pyvista/doc/source/examples/index.rst:846
msgid ":ref:`sphx_glr_examples_01-filter_gaussian-smoothing.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_gaussian-smoothing.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:327
#: ../../pyvista/doc/source/examples/index.rst:848
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Gaussian Smoothing</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Gaussian Smoothing</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:333
#: ../../pyvista/doc/source/examples/index.rst:854
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Calculates the geodesic "
"path between two vertices using Dijkstra&#x27;s algorithm\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Calculates the geodesic "
"path between two vertices using Dijkstra&#x27;s algorithm\">"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:342
#: ../../pyvista/doc/source/examples/index.rst:863
msgid ":ref:`sphx_glr_examples_01-filter_geodesic.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_geodesic.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:344
#: ../../pyvista/doc/source/examples/index.rst:865
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Geodesic Paths</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Geodesic Paths</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:350
#: ../../pyvista/doc/source/examples/index.rst:871
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Use vectors in a dataset to"
" plot and orient glyphs/geometric objects.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Use vectors in a dataset to"
" plot and orient glyphs/geometric objects.\">"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:359
#: ../../pyvista/doc/source/examples/index.rst:880
msgid ":ref:`sphx_glr_examples_01-filter_glyphs.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_glyphs.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:361
#: ../../pyvista/doc/source/examples/index.rst:882
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Plotting Glyphs (Vectors or PolyData)</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Plotting Glyphs (Vectors or PolyData)</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:367
#: ../../pyvista/doc/source/examples/index.rst:888
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"vtk supports tables of "
"glyphs from which glyphs are looked up. This example demonstrates this "
"f...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"vtk supports tables of "
"glyphs from which glyphs are looked up. This example demonstrates this "
"f...\">"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:376
#: ../../pyvista/doc/source/examples/index.rst:897
msgid ":ref:`sphx_glr_examples_01-filter_glyphs_table.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_glyphs_table.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:378
#: ../../pyvista/doc/source/examples/index.rst:899
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Table of Glyphs</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Table of Glyphs</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:384
#: ../../pyvista/doc/source/examples/index.rst:905
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Estimate the gradient of a "
"scalar or vector field in a data set.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Estimate the gradient of a "
"scalar or vector field in a data set.\">"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:393
#: ../../pyvista/doc/source/examples/index.rst:914
msgid ":ref:`sphx_glr_examples_01-filter_gradients.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_gradients.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:395
#: ../../pyvista/doc/source/examples/index.rst:916
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Compute Gradients of a Field</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Compute Gradients of a Field</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:401
#: ../../pyvista/doc/source/examples/01-filter/index.rst:418
#: ../../pyvista/doc/source/examples/index.rst:922
#: ../../pyvista/doc/source/examples/index.rst:939
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example shows how to "
"apply a Fast Fourier Transform (FFT) to a pyvista.ImageData using pyv...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example shows how to "
"apply a Fast Fourier Transform (FFT) to a pyvista.ImageData using pyv...\">"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:410
#: ../../pyvista/doc/source/examples/index.rst:931
msgid ":ref:`sphx_glr_examples_01-filter_image-fft-perlin-noise.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_image-fft-perlin-noise.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:412
#: ../../pyvista/doc/source/examples/index.rst:933
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Fast Fourier Transform with Perlin Noise</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Fast Fourier Transform with Perlin Noise</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:427
#: ../../pyvista/doc/source/examples/index.rst:948
msgid ":ref:`sphx_glr_examples_01-filter_image-fft.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_image-fft.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:429
#: ../../pyvista/doc/source/examples/index.rst:950
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Fast Fourier Transform</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Fast Fourier Transform</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:435
#: ../../pyvista/doc/source/examples/index.rst:956
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Integrate data over a "
"surface using the pyvista.DataSetFilters.integrate_data filter.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Integrate data over a "
"surface using the pyvista.DataSetFilters.integrate_data filter.\">"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:444
#: ../../pyvista/doc/source/examples/index.rst:965
msgid ":ref:`sphx_glr_examples_01-filter_integrate-data.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_integrate-data.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:446
#: ../../pyvista/doc/source/examples/index.rst:967
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Integrate Data</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Integrate Data</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:452
#: ../../pyvista/doc/source/examples/01-filter/index.rst:537
#: ../../pyvista/doc/source/examples/index.rst:973
#: ../../pyvista/doc/source/examples/index.rst:1058
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"There are two main methods "
"of interpolating or sampling data from a target mesh in PyVista. pyv...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"There are two main methods "
"of interpolating or sampling data from a target mesh in PyVista. pyv...\">"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:461
#: ../../pyvista/doc/source/examples/index.rst:982
msgid ":ref:`sphx_glr_examples_01-filter_interpolate.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_interpolate.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:463
#: ../../pyvista/doc/source/examples/index.rst:984
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Interpolating</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Interpolating</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:469
#: ../../pyvista/doc/source/examples/index.rst:990
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Leverage powerful VTK "
"algorithms for computing mesh quality.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Leverage powerful VTK "
"algorithms for computing mesh quality.\">"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:478
#: ../../pyvista/doc/source/examples/index.rst:999
msgid ":ref:`sphx_glr_examples_01-filter_mesh-quality.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_mesh-quality.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:480
#: ../../pyvista/doc/source/examples/index.rst:1001
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Computing Mesh Quality</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Computing Mesh Quality</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:486
#: ../../pyvista/doc/source/examples/99-advanced/index.rst:273
#: ../../pyvista/doc/source/examples/index.rst:1007
#: ../../pyvista/doc/source/examples/index.rst:2894
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Single line segment ray "
"tracing for PolyData objects.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Single line segment ray "
"tracing for PolyData objects.\">"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:495
#: ../../pyvista/doc/source/examples/index.rst:1016
msgid ":ref:`sphx_glr_examples_01-filter_poly-ray-trace.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_poly-ray-trace.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:497
#: ../../pyvista/doc/source/examples/99-advanced/index.rst:284
#: ../../pyvista/doc/source/examples/index.rst:1018
#: ../../pyvista/doc/source/examples/index.rst:2905
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Ray Tracing</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Ray Tracing</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:503
#: ../../pyvista/doc/source/examples/index.rst:1024
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"pyvista.PolyData surfaces "
"and pointsets can easily be projected to a plane defined by a normal ...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"pyvista.PolyData surfaces "
"and pointsets can easily be projected to a plane defined by a normal ...\">"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:512
#: ../../pyvista/doc/source/examples/index.rst:1033
msgid ":ref:`sphx_glr_examples_01-filter_project-plane.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_project-plane.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:514
#: ../../pyvista/doc/source/examples/index.rst:1035
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Project to a Plane</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Project to a Plane</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:520
#: ../../pyvista/doc/source/examples/index.rst:1041
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example reflects a "
"mesh across a plane.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example reflects a "
"mesh across a plane.\">"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:529
#: ../../pyvista/doc/source/examples/index.rst:1050
msgid ":ref:`sphx_glr_examples_01-filter_reflect.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_reflect.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:531
#: ../../pyvista/doc/source/examples/index.rst:1052
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Reflect Meshes</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Reflect Meshes</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:546
#: ../../pyvista/doc/source/examples/index.rst:1067
msgid ":ref:`sphx_glr_examples_01-filter_resample.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_resample.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:548
#: ../../pyvista/doc/source/examples/index.rst:1069
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Resampling</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Resampling</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:554
#: ../../pyvista/doc/source/examples/index.rst:1075
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Rotations of a mesh about "
"its axes. In this model, the x axis is from the left to right; the y ...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Rotations of a mesh about "
"its axes. In this model, the x axis is from the left to right; the y ...\">"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:563
#: ../../pyvista/doc/source/examples/index.rst:1084
msgid ":ref:`sphx_glr_examples_01-filter_rotate.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_rotate.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:565
#: ../../pyvista/doc/source/examples/index.rst:1086
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Rotations</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Rotations</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:571
#: ../../pyvista/doc/source/examples/index.rst:1092
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Perlin noise is atype of "
"gradient noise often used by visual effects artists to increase the ap...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Perlin noise is atype of "
"gradient noise often used by visual effects artists to increase the ap...\">"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:580
#: ../../pyvista/doc/source/examples/index.rst:1101
msgid ":ref:`sphx_glr_examples_01-filter_sampling_functions_2d.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_sampling_functions_2d.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:582
#: ../../pyvista/doc/source/examples/index.rst:1103
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Sample Function: Perlin Noise in 2D</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Sample Function: Perlin Noise in 2D</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:588
#: ../../pyvista/doc/source/examples/index.rst:1109
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Video games like Minecraft "
"use Perlin noise to create terrain.  Here, we create a voxelized mes...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Video games like Minecraft "
"use Perlin noise to create terrain.  Here, we create a voxelized mes...\">"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:597
#: ../../pyvista/doc/source/examples/index.rst:1118
msgid ":ref:`sphx_glr_examples_01-filter_sampling_functions_3d.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_sampling_functions_3d.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:599
#: ../../pyvista/doc/source/examples/index.rst:1120
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Sample Function: Perlin Noise in 3D</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Sample Function: Perlin Noise in 3D</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:605
#: ../../pyvista/doc/source/examples/index.rst:1126
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Extract thin planar slices "
"from a volume.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Extract thin planar slices "
"from a volume.\">"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:614
#: ../../pyvista/doc/source/examples/index.rst:1135
msgid ":ref:`sphx_glr_examples_01-filter_slicing.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_slicing.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:616
#: ../../pyvista/doc/source/examples/index.rst:1137
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Slicing</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Slicing</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:622
#: ../../pyvista/doc/source/examples/index.rst:1143
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Integrate a vector field to"
" generate streamlines.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Integrate a vector field to"
" generate streamlines.\">"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:631
#: ../../pyvista/doc/source/examples/index.rst:1152
msgid ":ref:`sphx_glr_examples_01-filter_streamlines.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_streamlines.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:633
#: ../../pyvista/doc/source/examples/index.rst:1154
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Streamlines</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Streamlines</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:639
#: ../../pyvista/doc/source/examples/index.rst:1160
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Integrate a vector field to"
" generate streamlines on a 2D surface.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Integrate a vector field to"
" generate streamlines on a 2D surface.\">"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:648
#: ../../pyvista/doc/source/examples/index.rst:1169
msgid ":ref:`sphx_glr_examples_01-filter_streamlines_2D.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_streamlines_2D.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:650
#: ../../pyvista/doc/source/examples/index.rst:1171
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">2D Streamlines</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">2D Streamlines</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:656
#: ../../pyvista/doc/source/examples/index.rst:1177
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Increase the number of "
"triangles in a single, connected triangular mesh.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Increase the number of "
"triangles in a single, connected triangular mesh.\">"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:665
#: ../../pyvista/doc/source/examples/index.rst:1186
msgid ":ref:`sphx_glr_examples_01-filter_subdivide.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_subdivide.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:667
#: ../../pyvista/doc/source/examples/index.rst:1188
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Subdivide Cells</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Subdivide Cells</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:673
#: ../../pyvista/doc/source/examples/index.rst:1194
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Smoothing rough edges of a "
"surface mesh\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Smoothing rough edges of a "
"surface mesh\">"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:682
#: ../../pyvista/doc/source/examples/index.rst:1203
msgid ":ref:`sphx_glr_examples_01-filter_surface-smoothing.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_surface-smoothing.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:684
#: ../../pyvista/doc/source/examples/index.rst:1205
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Surface Smoothing</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Surface Smoothing</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:690
#: ../../pyvista/doc/source/examples/index.rst:1211
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Surface reconstruction has "
"a dedicated filter in PyVista and is handled by pyvista.PolyDataFilt...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Surface reconstruction has "
"a dedicated filter in PyVista and is handled by pyvista.PolyDataFilt...\">"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:699
#: ../../pyvista/doc/source/examples/index.rst:1220
msgid ":ref:`sphx_glr_examples_01-filter_surface_reconstruction.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_surface_reconstruction.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:701
#: ../../pyvista/doc/source/examples/index.rst:1222
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Surface Reconstruction</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Surface Reconstruction</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:707
#: ../../pyvista/doc/source/examples/index.rst:1228
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Using common filters like "
"thresholding and clipping.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Using common filters like "
"thresholding and clipping.\">"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:716
#: ../../pyvista/doc/source/examples/index.rst:1237
msgid ":ref:`sphx_glr_examples_01-filter_using-filters.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_using-filters.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:718
#: ../../pyvista/doc/source/examples/index.rst:1239
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Using Common Filters</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Using Common Filters</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:724
#: ../../pyvista/doc/source/examples/index.rst:1245
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create a voxel model (like "
"legos) of a closed surface or volumetric mesh.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create a voxel model (like "
"legos) of a closed surface or volumetric mesh.\">"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:733
#: ../../pyvista/doc/source/examples/index.rst:1254
msgid ":ref:`sphx_glr_examples_01-filter_voxelize.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_voxelize.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:735
#: ../../pyvista/doc/source/examples/index.rst:1256
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Voxelize a Surface Mesh</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Voxelize a Surface Mesh</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:741
#: ../../pyvista/doc/source/examples/index.rst:1262
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example applies the "
"warp_by_vector filter to a sphere mesh that has 3D displacement vector...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example applies the "
"warp_by_vector filter to a sphere mesh that has 3D displacement vector...\">"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:750
#: ../../pyvista/doc/source/examples/index.rst:1271
msgid ":ref:`sphx_glr_examples_01-filter_warp-by-vector.py`"
msgstr ":ref:`sphx_glr_examples_01-filter_warp-by-vector.py`"

#: ../../pyvista/doc/source/examples/01-filter/index.rst:752
#: ../../pyvista/doc/source/examples/index.rst:1273
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Warping by Vectors</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Warping by Vectors</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/01-filter/integrate-data.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_integrate-data.py>` "
"to download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_integrate-data.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/01-filter/integrate-data.rst:24
msgid "Integrate Data"
msgstr "データの積分"

#: ../../pyvista/doc/source/examples/01-filter/integrate-data.rst:26
msgid ""
"Integrate data over a surface using the "
":func:`pyvista.DataSetFilters.integrate_data` filter."
msgstr ""
":func:`pyvista.DataSetFilters.integrate_data` フィルタを使用して，データを表面上で積分します．"

#: ../../pyvista/doc/source/examples/01-filter/integrate-data.rst:45
msgid ""
"This example calculates the total flow rate and average velocity inside a "
"blood vessel.  The boundary object is only used for plotting the shape of "
"the dataset geometry.  The inlet surface is generated by slicing the domain."
" Fluid flowing into the domain is in the negative z-direction, so a new "
"array, ``normal_velocity``, is created."
msgstr ""
"この例では，血管内の総流量と平均流速を計算します． 境界オブジェクトは，データセット形状のプロットにのみ使用されます． "
"流入面は，領域をスライスして生成します．領域内に流入する流体は負の z 方向に流れるので，新しい配列 ``normal_velocity`` "
"が作成されます．"

#: ../../pyvista/doc/source/examples/01-filter/integrate-data.rst:70
msgid "The velocity in the inlet is shown."
msgstr "入口の流速を示します．"

#: ../../pyvista/doc/source/examples/01-filter/integrate-data.rst:104
msgid ""
"The total flow rate is calculated using the "
":func:`pyvista.DataSetFilters.integrate_data` filter.  Note that the data is"
" a :class:`pyvista.UnstructuredGrid` object with only 1 point and 1 cell."
msgstr ""
":func:`pyvista.DataSetFilters.integrate_data` フィルターを使用して，総流量が計算されます． データは "
":class:`pyvista.UnstructuredGrid` オブジェクトで，1 つのポイントと 1 つのセルのみであることに注意してください．"

#: ../../pyvista/doc/source/examples/01-filter/integrate-data.rst:120
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>UnstructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>1</td></tr>\n"
"<tr><td>N Points</td><td>1</td></tr>\n"
"<tr><td>X Bounds</td><td>8.095e+01, 8.095e+01</td></tr>\n"
"<tr><td>Y Bounds</td><td>6.007e+01, 6.007e+01</td></tr>\n"
"<tr><td>Z Bounds</td><td>1.820e+02, 1.820e+02</td></tr>\n"
"<tr><td>N Arrays</td><td>7</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td>node_value</td><td>Points</td><td>float64</td><td>1</td><td>0.000e+00</td><td>0.000e+00</td></tr>\n"
"<tr><td>simerr_type</td><td>Points</td><td>float64</td><td>1</td><td>1.672e+02</td><td>1.672e+02</td></tr>\n"
"<tr><td>density</td><td>Cells</td><td>float64</td><td>1</td><td>1.369e+02</td><td>1.369e+02</td></tr>\n"
"<tr><td>normal_velocity</td><td>Cells</td><td>float64</td><td>1</td><td>2.580e+01</td><td>2.580e+01</td></tr>\n"
"<tr><td>shearstress</td><td>Cells</td><td>float64</td><td>1</td><td>9.470e-01</td><td>9.470e-01</td></tr>\n"
"<tr><td>velocity</td><td>Cells</td><td>float64</td><td>3</td><td>-2.580e+01</td><td>1.285e+00</td></tr>\n"
"<tr><td>Area</td><td>Cells</td><td>float64</td><td>1</td><td>2.650e+02</td><td>2.650e+02</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>UnstructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>1</td></tr>\n"
"<tr><td>N Points</td><td>1</td></tr>\n"
"<tr><td>X Bounds</td><td>8.095e+01, 8.095e+01</td></tr>\n"
"<tr><td>Y Bounds</td><td>6.007e+01, 6.007e+01</td></tr>\n"
"<tr><td>Z Bounds</td><td>1.820e+02, 1.820e+02</td></tr>\n"
"<tr><td>N Arrays</td><td>7</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td>node_value</td><td>Points</td><td>float64</td><td>1</td><td>0.000e+00</td><td>0.000e+00</td></tr>\n"
"<tr><td>simerr_type</td><td>Points</td><td>float64</td><td>1</td><td>1.672e+02</td><td>1.672e+02</td></tr>\n"
"<tr><td>density</td><td>Cells</td><td>float64</td><td>1</td><td>1.369e+02</td><td>1.369e+02</td></tr>\n"
"<tr><td>normal_velocity</td><td>Cells</td><td>float64</td><td>1</td><td>2.580e+01</td><td>2.580e+01</td></tr>\n"
"<tr><td>shearstress</td><td>Cells</td><td>float64</td><td>1</td><td>9.470e-01</td><td>9.470e-01</td></tr>\n"
"<tr><td>velocity</td><td>Cells</td><td>float64</td><td>3</td><td>-2.580e+01</td><td>1.285e+00</td></tr>\n"
"<tr><td>Area</td><td>Cells</td><td>float64</td><td>1</td><td>2.650e+02</td><td>2.650e+02</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/01-filter/integrate-data.rst:153
msgid "Each array in ``integrated_data`` stores the integrated data."
msgstr "積分データ ``integrated_data`` の各配列には，積分データが格納されます．"

#: ../../pyvista/doc/source/examples/01-filter/integrate-data.rst:178
msgid "An additional ``Area`` or ``Volume`` array is added."
msgstr "``Area`` や ``Volume`` の配列が追加されます．"

#: ../../pyvista/doc/source/examples/01-filter/integrate-data.rst:206
msgid ""
"Display the total flow rate, area of inlet surface, and average velocity."
msgstr "総流量，吸込面面積，平均流速を表示します．"

#: ../../pyvista/doc/source/examples/01-filter/integrate-data.rst:240
msgid "Volume Integration"
msgstr "体積積分"

#: ../../pyvista/doc/source/examples/01-filter/integrate-data.rst:241
msgid ""
"You can also integrate over a volume. Here, we effectively sum the cell and "
"point data across the entire volume. You can use this to compute mean values"
" by dividing by the volume of the dataset."
msgstr ""
"また，体積を積分することもできます．ここでは，セルと点のデータを体積全体で効果的に合計します．データセットの体積で割ることで，平均値を計算するのに使うことができます．"

#: ../../pyvista/doc/source/examples/01-filter/integrate-data.rst:245
msgid ""
"Note that the calculated volume is the same as "
":attr:`pyvista.DataSet.volume`."
msgstr "計算された体積は :attr:`pyvista.DataSet.volume` と同じであることに注意してください．"

#: ../../pyvista/doc/source/examples/01-filter/integrate-data.rst:247
msgid ""
"Also note that the center of the dataset is the \"point\" of the integrated "
"volume."
msgstr "また，データセットの中心は積算量の \"point\" であることに注意してください．"

#: ../../pyvista/doc/source/examples/01-filter/integrate-data.rst:286
msgid "**Total running time of the script:** ( 0 minutes  1.780 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.780 seconds)"

#: ../../pyvista/doc/source/examples/01-filter/integrate-data.rst:301
msgid ""
":download:`Download Python source code: integrate-data.py <integrate-"
"data.py>`"
msgstr ""
":download:`Download Python source code: integrate-data.py <integrate-"
"data.py>`"

#: ../../pyvista/doc/source/examples/01-filter/integrate-data.rst:307
msgid ""
":download:`Download Jupyter notebook: integrate-data.ipynb <integrate-"
"data.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: integrate-data.ipynb <integrate-"
"data.ipynb>`"

#: ../../pyvista/doc/source/examples/01-filter/interpolate.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_interpolate.py>` "
"to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_interpolate.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/01-filter/interpolate.rst:24
msgid "Interpolating"
msgstr "補間"

#: ../../pyvista/doc/source/examples/01-filter/interpolate.rst:26
#: ../../pyvista/doc/source/examples/01-filter/resample.rst:26
msgid ""
"There are two main methods of interpolating or sampling data from a target "
"mesh in PyVista. :func:`pyvista.DataSetFilters.interpolate` uses a distance "
"weighting kernel to interpolate point data from nearby points of the target "
"mesh onto the desired points. :func:`pyvista.DataSetFilters.sample` "
"interpolates data using the interpolation scheme of the enclosing cell from "
"the target mesh."
msgstr ""
"PyVistaでターゲットメッシュからデータを補間またはサンプリングするには，主に2つの方法があります． "
":func:`pyvista.DataSetFilters.interpolate` "
"は距離重み付けカーネルを使って，ターゲットメッシュの近くの点から目的の点に点データを補間します． "
":func:`pyvista.DataSetFilters.sample` "
"は，ターゲットメッシュのセルを囲むセルの補間スキームを使ってデータを補間します．"

#: ../../pyvista/doc/source/examples/01-filter/interpolate.rst:33
#: ../../pyvista/doc/source/examples/01-filter/resample.rst:33
msgid ""
"If the target mesh is a point cloud, i.e. there is no connectivity in the "
"cell structure, then :func:`pyvista.DataSetFilters.interpolate` is typically"
" preferred.  If interpolation is desired within the cells of the target "
"mesh, then :func:`pyvista.DataSetFilters.sample` is typically desired."
msgstr ""
"ターゲットメッシュが点群である場合，つまりセル構造に連結性がない場合は，一般的に "
":func:`pyvista.DataSetFilters.interpolate` "
"が推奨されます．ターゲットメッシュのセル内で補間を行いたい場合は，一般的に :func:`pyvista.DataSetFilters.sample` "
"を使用します．"

#: ../../pyvista/doc/source/examples/01-filter/interpolate.rst:39
msgid ""
"This example uses :func:`pyvista.DataSetFilters.interpolate`. For "
":func:`pyvista.DataSetFilters.sample`, see :ref:`resampling_example`."
msgstr ""
"この例では :func:`pyvista.DataSetFilters.interpolate` を使用しています． "
":func:`pyvista.DataSetFilters.sample` については， :ref:`resampling_example` "
"を参照してください．"

#: ../../pyvista/doc/source/examples/01-filter/interpolate.rst:42
msgid ""
"Interpolate one mesh's point/cell arrays onto another mesh's nodes using a "
"Gaussian Kernel."
msgstr "Gaussianカーネルを使用して，あるメッシュのポイント/セル配列を別のメッシュのノードに補間します．"

#: ../../pyvista/doc/source/examples/01-filter/interpolate.rst:62
msgid "Simple Surface Interpolation"
msgstr "単純なサーフェス補間"

#: ../../pyvista/doc/source/examples/01-filter/interpolate.rst:63
msgid "Resample the points' arrays onto a surface"
msgstr "サーフェス上にポイントの配列をリサンプルする"

#: ../../pyvista/doc/source/examples/01-filter/interpolate.rst:93
msgid "Run the interpolation"
msgstr "補間を実行します"

#: ../../pyvista/doc/source/examples/01-filter/interpolate.rst:124
msgid "Complex Interpolation"
msgstr "複合補間"

#: ../../pyvista/doc/source/examples/01-filter/interpolate.rst:125
msgid ""
"In this example, we will in interpolate sparse points in 3D space into a "
"volume. These data are from temperature probes in the subsurface and the "
"goal is to create an approximate 3D model of the temperature field in the "
"subsurface."
msgstr ""
"この例では，3 "
"D空間の疎なポイントをボリュームに補間します．これらのデータはサブサーフェイスの温度プローブから得られたもので，目標はサブサーフェイスの温度場の近似3 "
"Dモデルを作成することです．"

#: ../../pyvista/doc/source/examples/01-filter/interpolate.rst:130
msgid ""
"This approach is a great for back-of-the-hand estimations but pales in "
"comparison to kriging"
msgstr "このアプローチは簡単な見積もりには適していますが，クリギングに比べると見劣りします．"

#: ../../pyvista/doc/source/examples/01-filter/interpolate.rst:150
msgid "Create the interpolation grid around the sparse data"
msgstr "スパースデータの周囲に補間グリッドを作成する"

#: ../../pyvista/doc/source/examples/01-filter/interpolate.rst:199
msgid "Run an interpolation"
msgstr "補間を実行します"

#: ../../pyvista/doc/source/examples/01-filter/interpolate.rst:216
msgid "Visualize the results"
msgstr "結果を可視化する"

#: ../../pyvista/doc/source/examples/01-filter/interpolate.rst:247
msgid "**Total running time of the script:** ( 0 minutes  9.609 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  9.609 seconds)"

#: ../../pyvista/doc/source/examples/01-filter/interpolate.rst:261
msgid ""
":download:`Download Python source code: interpolate.py <interpolate.py>`"
msgstr ""
":download:`Download Python source code: interpolate.py <interpolate.py>`"

#: ../../pyvista/doc/source/examples/01-filter/interpolate.rst:265
msgid ""
":download:`Download Jupyter notebook: interpolate.ipynb <interpolate.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: interpolate.ipynb <interpolate.ipynb>`"

#: ../../pyvista/doc/source/examples/01-filter/mesh-quality.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_mesh-quality.py>` to "
"download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_01-filter_mesh-quality.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/01-filter/mesh-quality.rst:24
msgid "Computing Mesh Quality"
msgstr "メッシュ品質の計算"

#: ../../pyvista/doc/source/examples/01-filter/mesh-quality.rst:26
msgid "Leverage powerful VTK algorithms for computing mesh quality."
msgstr "強力なVTKアルゴリズムを利用して，メッシュ品質を計算します．"

#: ../../pyvista/doc/source/examples/01-filter/mesh-quality.rst:28
msgid ""
"Here we will use the :func:`pyvista.DataSetFilters.compute_cell_quality` "
"filter to compute the cell qualities. For a full list of the various quality"
" metrics available, please refer to the documentation for that filter."
msgstr ""
"ここでは， :func:`pyvista.DataSetFilters.compute_cell_quality` "
"フィルタを使用してセル品質を計算します．利用可能なさまざまな品質メトリックの完全なリストについては，そのフィルタのドキュメントを参照してください．"

#: ../../pyvista/doc/source/examples/01-filter/mesh-quality.rst:55
msgid ""
"Compute the cell quality. Note that there are many different quality "
"measures"
msgstr "セル品質を計算します．多くの異なる品質尺度があることに注意してください．"

#: ../../pyvista/doc/source/examples/01-filter/mesh-quality.rst:69
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>1740</td></tr>\n"
"<tr><td>N Points</td><td>871</td></tr>\n"
"<tr><td>X Bounds</td><td>-4.389e+00, 6.005e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>-3.648e+00, 2.761e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>-1.701e+00, 1.701e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>CellQuality</b></td><td>Cells</td><td>float64</td><td>1</td><td>6.197e-02</td><td>9.911e-01</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>1740</td></tr>\n"
"<tr><td>N Points</td><td>871</td></tr>\n"
"<tr><td>X Bounds</td><td>-4.389e+00, 6.005e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>-3.648e+00, 2.761e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>-1.701e+00, 1.701e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>CellQuality</b></td><td>Cells</td><td>float64</td><td>1</td><td>6.197e-02</td><td>9.911e-01</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/01-filter/mesh-quality.rst:114
msgid "**Total running time of the script:** ( 0 minutes  0.550 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  0.550 seconds)"

#: ../../pyvista/doc/source/examples/01-filter/mesh-quality.rst:129
msgid ""
":download:`Download Python source code: mesh-quality.py <mesh-quality.py>`"
msgstr ""
":download:`Download Python source code: mesh-quality.py <mesh-quality.py>`"

#: ../../pyvista/doc/source/examples/01-filter/mesh-quality.rst:135
msgid ""
":download:`Download Jupyter notebook: mesh-quality.ipynb <mesh-"
"quality.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: mesh-quality.ipynb <mesh-"
"quality.ipynb>`"

#: ../../pyvista/doc/source/examples/01-filter/poly-ray-trace.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_poly-ray-trace.py>` "
"to download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_01-filter_poly-ray-trace.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/01-filter/poly-ray-trace.rst:24
#: ../../pyvista/doc/source/examples/99-advanced/ray-trace.rst:22
msgid "Ray Tracing"
msgstr "レイトレーシング"

#: ../../pyvista/doc/source/examples/01-filter/poly-ray-trace.rst:26
#: ../../pyvista/doc/source/examples/99-advanced/ray-trace.rst:24
msgid "Single line segment ray tracing for PolyData objects."
msgstr "PolyDataオブジェクトの単一線分セグメントのレイトレーシング．"

#: ../../pyvista/doc/source/examples/01-filter/poly-ray-trace.rst:71
#: ../../pyvista/doc/source/examples/02-plot/plot-over-circular-arc.rst:109
msgid "**Total running time of the script:** ( 0 minutes  0.484 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  0.484 seconds)"

#: ../../pyvista/doc/source/examples/01-filter/poly-ray-trace.rst:86
msgid ""
":download:`Download Python source code: poly-ray-trace.py <poly-ray-"
"trace.py>`"
msgstr ""
":download:`Download Python source code: poly-ray-trace.py <poly-ray-"
"trace.py>`"

#: ../../pyvista/doc/source/examples/01-filter/poly-ray-trace.rst:92
msgid ""
":download:`Download Jupyter notebook: poly-ray-trace.ipynb <poly-ray-"
"trace.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: poly-ray-trace.ipynb <poly-ray-"
"trace.ipynb>`"

#: ../../pyvista/doc/source/examples/01-filter/project-plane.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_project-plane.py>` to"
" download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_01-filter_project-plane.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/01-filter/project-plane.rst:22
msgid "Project to a Plane"
msgstr "平面に投影"

#: ../../pyvista/doc/source/examples/01-filter/project-plane.rst:24
msgid ""
":class:`pyvista.PolyData` surfaces and pointsets can easily be projected to "
"a plane defined by a normal and origin"
msgstr ":class:`pyvista.PolyData` サーフェスとポイントセットは，法線と原点によって定義される平面に簡単に投影できます．"

#: ../../pyvista/doc/source/examples/01-filter/project-plane.rst:53
msgid "Project that surface to a plane underneath the surface"
msgstr "そのサーフェスをサーフェスの下の平面に投影します．"

#: ../../pyvista/doc/source/examples/01-filter/project-plane.rst:83
msgid "**Total running time of the script:** ( 0 minutes  1.268 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.268 seconds)"

#: ../../pyvista/doc/source/examples/01-filter/project-plane.rst:98
msgid ""
":download:`Download Python source code: project-plane.py <project-plane.py>`"
msgstr ""
":download:`Download Python source code: project-plane.py <project-plane.py>`"

#: ../../pyvista/doc/source/examples/01-filter/project-plane.rst:104
msgid ""
":download:`Download Jupyter notebook: project-plane.ipynb <project-"
"plane.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: project-plane.ipynb <project-"
"plane.ipynb>`"

#: ../../pyvista/doc/source/examples/01-filter/reflect.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_reflect.py>` to "
"download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_reflect.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/01-filter/reflect.rst:24
msgid "Reflect Meshes"
msgstr "メッシュを反射"

#: ../../pyvista/doc/source/examples/01-filter/reflect.rst:26
msgid "This example reflects a mesh across a plane."
msgstr "この例では，メッシュを平面に反射します．"

#: ../../pyvista/doc/source/examples/01-filter/reflect.rst:45
msgid "This example demonstrates how to reflect a mesh across a plane."
msgstr "この例では，メッシュをプレーンに反射させる方法を示します．"

#: ../../pyvista/doc/source/examples/01-filter/reflect.rst:47
msgid "Load an example mesh:"
msgstr "サンプルメッシュをロードする:"

#: ../../pyvista/doc/source/examples/01-filter/reflect.rst:64
msgid ""
"Reflect the mesh across a plane parallel to Z plane and coincident with (0, "
"0, -100)"
msgstr "Z平面に平行で (0, 0, -100) に一致する平面でメッシュを反射します．"

#: ../../pyvista/doc/source/examples/01-filter/reflect.rst:82
msgid "Plot the reflected mesh:"
msgstr "反射メッシュをプロットします:"

#: ../../pyvista/doc/source/examples/01-filter/reflect.rst:107
msgid "**Total running time of the script:** (0 minutes 0.353 seconds)"
msgstr "**Total running time of the script:** (0 minutes 0.353 seconds)"

#: ../../pyvista/doc/source/examples/01-filter/reflect.rst:121
msgid ":download:`Download Python source code: reflect.py <reflect.py>`"
msgstr ":download:`Download Python source code: reflect.py <reflect.py>`"

#: ../../pyvista/doc/source/examples/01-filter/reflect.rst:125
msgid ":download:`Download Jupyter notebook: reflect.ipynb <reflect.ipynb>`"
msgstr ":download:`Download Jupyter notebook: reflect.ipynb <reflect.ipynb>`"

#: ../../pyvista/doc/source/examples/01-filter/resample.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_resample.py>` to "
"download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_resample.py>` to "
"download the full example code"

#: ../../pyvista/doc/source/examples/01-filter/resample.rst:24
msgid "Resampling"
msgstr "再サンプリング"

#: ../../pyvista/doc/source/examples/01-filter/resample.rst:39
msgid ""
"This example uses :func:`pyvista.DataSetFilters.sample`. For "
":func:`pyvista.DataSetFilters.interpolate`, see :ref:`interpolate_example`."
msgstr ""
"この例では :func:`pyvista.DataSetFilters.sample` を使用しています． "
":func:`pyvista.DataSetFilters.interpolate` については， :ref:`interpolate_example`"
" を参照してください．"

#: ../../pyvista/doc/source/examples/01-filter/resample.rst:43
msgid "Resample one mesh's point/cell arrays onto another mesh's nodes."
msgstr "メッシュのポイント/セル配列を別のメッシュのノードにリサンプルします．"

#: ../../pyvista/doc/source/examples/01-filter/resample.rst:47
msgid ""
"This example will resample a volumetric mesh's scalar data onto the surface "
"of a sphere contained in that volume."
msgstr "この例では，ボリュームメッシュのスカラーデータを，そのボリュームに含まれる球体の表面にリサンプルします．"

#: ../../pyvista/doc/source/examples/01-filter/resample.rst:68
msgid "Simple Resample"
msgstr "簡易リサンプル"

#: ../../pyvista/doc/source/examples/01-filter/resample.rst:69
msgid "Query a grid's points onto a sphere"
msgstr "球上のグリッドポイントを照会する"

#: ../../pyvista/doc/source/examples/01-filter/resample.rst:87
msgid "Plot the two datasets"
msgstr "2つのデータセットをプロットする"

#: ../../pyvista/doc/source/examples/01-filter/resample.rst:112
msgid "Run the algorithm and plot the result"
msgstr "アルゴリズムを実行し，結果をプロットします．"

#: ../../pyvista/doc/source/examples/01-filter/resample.rst:139
msgid "Complex Resample"
msgstr "複雑なリサンプル"

#: ../../pyvista/doc/source/examples/01-filter/resample.rst:140
msgid ""
"Take a volume of data and create a grid of lower resolution to resample on"
msgstr "大量のデータを取得し，解像度の低いグリッドを作成してリサンプルします．"

#: ../../pyvista/doc/source/examples/01-filter/resample.rst:192
msgid "**Total running time of the script:** ( 0 minutes  8.939 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  8.939 seconds)"

#: ../../pyvista/doc/source/examples/01-filter/resample.rst:206
msgid ":download:`Download Python source code: resample.py <resample.py>`"
msgstr ":download:`Download Python source code: resample.py <resample.py>`"

#: ../../pyvista/doc/source/examples/01-filter/resample.rst:210
msgid ":download:`Download Jupyter notebook: resample.ipynb <resample.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: resample.ipynb <resample.ipynb>`"

#: ../../pyvista/doc/source/examples/01-filter/rotate.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_rotate.py>` to "
"download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_01-filter_rotate.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/01-filter/rotate.rst:24
msgid "Rotations"
msgstr "回転"

#: ../../pyvista/doc/source/examples/01-filter/rotate.rst:26
msgid ""
"Rotations of a mesh about its axes. In this model, the x axis is from the "
"left to right; the y axis is from bottom to top; and the z axis emerges from"
" the image. The camera location is the same in all four images."
msgstr ""
"軸を中心としたメッシュの回転．このモデルでは，x軸は左から右になります; "
"y軸は下から上に，z軸はイメージから出てきます．カメラの位置は4つのイメージすべてで同じです．"

#: ../../pyvista/doc/source/examples/01-filter/rotate.rst:47
msgid "Define camera and axes"
msgstr "カメラと軸を定義する"

#: ../../pyvista/doc/source/examples/01-filter/rotate.rst:49
msgid "Define camera and axes. Setting axes origin to ``(3.0, 3.0, 3.0)``."
msgstr "カメラと軸を定義します．軸原点を ``(3.0, 3.0, 3.0)`` に設定します．"

#: ../../pyvista/doc/source/examples/01-filter/rotate.rst:76
msgid "Original Mesh"
msgstr "元のメッシュ"

#: ../../pyvista/doc/source/examples/01-filter/rotate.rst:78
msgid "Plot original mesh. Add axes actor to Plotter."
msgstr "元のメッシュをプロットします．プロッタに軸アクターを追加します．"

#: ../../pyvista/doc/source/examples/01-filter/rotate.rst:109
msgid "Rotation about the x axis"
msgstr "x軸を中心の回転．"

#: ../../pyvista/doc/source/examples/01-filter/rotate.rst:111
msgid ""
"Plot the mesh rotated about the x axis every 60 degrees. Add the axes actor "
"to the Plotter and set the axes origin to the point of rotation."
msgstr "x軸を中心に60度ごとに回転したメッシュをプロットします．プロッタに軸アクターを追加し，軸の原点を回転点に設定します．"

#: ../../pyvista/doc/source/examples/01-filter/rotate.rst:146
msgid "Rotation about the y axis"
msgstr "y軸を中心の回転．"

#: ../../pyvista/doc/source/examples/01-filter/rotate.rst:148
msgid ""
"Plot the mesh rotated about the y axis every 60 degrees. Add the axes actor "
"to the Plotter and set the axes origin to the point of rotation."
msgstr "y軸を中心に60度ごとに回転したメッシュをプロットします．プロッタに軸アクターを追加し，軸の原点を回転点に設定します．"

#: ../../pyvista/doc/source/examples/01-filter/rotate.rst:183
msgid "Rotation about the z axis"
msgstr "z軸を中心の回転．"

#: ../../pyvista/doc/source/examples/01-filter/rotate.rst:185
msgid ""
"Plot the mesh rotated about the z axis every 60 degrees. Add axes actor to "
"the Plotter and set the axes origin to the point of rotation."
msgstr "z軸を中心に60度ごとに回転したメッシュをプロットします．プロッタに軸アクターを追加し，軸の原点を回転点に設定します．"

#: ../../pyvista/doc/source/examples/01-filter/rotate.rst:220
msgid "Rotation about a custom vector"
msgstr "ベクトル中心の回転．"

#: ../../pyvista/doc/source/examples/01-filter/rotate.rst:222
msgid ""
"Plot the mesh rotated about a custom vector every 60 degrees. Add the axes "
"actor to the Plotter and set axes origin to the point of rotation."
msgstr "カスタムベクトルを中心に60度ごとに回転させたメッシュをプロットします．プロッタに軸アクターを追加し，軸の原点を回転点に設定します．"

#: ../../pyvista/doc/source/examples/01-filter/rotate.rst:265
msgid "**Total running time of the script:** ( 0 minutes  2.258 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  2.258 seconds)"

#: ../../pyvista/doc/source/examples/01-filter/rotate.rst:280
msgid ":download:`Download Python source code: rotate.py <rotate.py>`"
msgstr ":download:`Download Python source code: rotate.py <rotate.py>`"

#: ../../pyvista/doc/source/examples/01-filter/rotate.rst:286
msgid ":download:`Download Jupyter notebook: rotate.ipynb <rotate.ipynb>`"
msgstr ":download:`Download Jupyter notebook: rotate.ipynb <rotate.ipynb>`"

#: ../../pyvista/doc/source/examples/01-filter/sampling_functions_2d.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_examples_01-filter_sampling_functions_2d.py>` to download"
" the full example code"
msgstr ""
":ref:`Go to the end "
"<sphx_glr_download_examples_01-filter_sampling_functions_2d.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/01-filter/sampling_functions_2d.rst:24
msgid "Sample Function: Perlin Noise in 2D"
msgstr "サンプル関数:2DでのPerlinノイズ"

#: ../../pyvista/doc/source/examples/01-filter/sampling_functions_2d.rst:25
#: ../../pyvista/doc/source/examples/01-filter/sampling_functions_3d.rst:23
msgid ""
"Here we use :func:`pyvista.core.utilities.features.sample_function` to "
"sample Perlin noise over a region to generate random terrain."
msgstr ""
"ここでは， :func:`pyvista.core.utilities.features.sample_function` "
"を使用して領域上のPerlinノイズをサンプリングし，ランダムな地表を生成します．"

#: ../../pyvista/doc/source/examples/01-filter/sampling_functions_2d.rst:28
msgid ""
"Perlin noise is atype of gradient noise often used by visual effects artists"
" to increase the appearance of realism in computer graphics. Source: `Perlin"
" Noise Wikipedia <https://en.wikipedia.org/wiki/Perlin_noise>`_"
msgstr ""
"Perlinノイズはグラデーションノイズの一種で，コンピュータグラフィックスのリアルな外観を向上させるために，ビジュアルエフェクトアーティストによってよく使用されます．ソース:"
" `Perlin Noise Wikipedia <https://en.wikipedia.org/wiki/Perlin_noise>`_"

#: ../../pyvista/doc/source/examples/01-filter/sampling_functions_2d.rst:32
msgid ""
"The development of Perlin Noise has allowed computer graphics artists to "
"better represent the complexity of natural phenomena in visual effects for "
"the motion picture industry."
msgstr ""
"Perlin "
"Noiseの開発により，コンピュータグラフィックスアーティストは，映画業界の視覚効果における自然現象の複雑さをよりよく表現できるようになりました．"

#: ../../pyvista/doc/source/examples/01-filter/sampling_functions_2d.rst:53
msgid "Generate Perlin Noise over a StructuredGrid"
msgstr "StructuredGrid上にPerlinノイズを生成する"

#: ../../pyvista/doc/source/examples/01-filter/sampling_functions_2d.rst:54
msgid ""
"Feel free to change the values of ``freq`` to change the shape of the "
"\"mountains\".  For example, lowering the frequency will make the terrain "
"seem more like hills rather than mountains."
msgstr "``freq`` の値を自由に変更して \"山\" の形を変えることができます．たとえば，周波数を下げると，地形が山ではなく丘のように見えます．"

#: ../../pyvista/doc/source/examples/01-filter/sampling_functions_2d.rst:77
msgid "Warp by scalar"
msgstr "スカラーによるワープ"

#: ../../pyvista/doc/source/examples/01-filter/sampling_functions_2d.rst:78
msgid ""
"Here we warp by scalar to give the terrain some height based on the value of"
" the Perlin noise.  This is necessary to the terrain its shape."
msgstr "ここでは，スカラーによってワープして，Perlinノイズの値に基づいて地表に高さを与えます．これは地表のシェイプに必要です．"

#: ../../pyvista/doc/source/examples/01-filter/sampling_functions_2d.rst:111
msgid "Show the terrain as a contour plot"
msgstr "等高線プロットとして地形を表示します"

#: ../../pyvista/doc/source/examples/01-filter/sampling_functions_2d.rst:149
msgid "Show the terrain with custom lighting and shadows"
msgstr "カスタムのライトとシャドウを使用して地表を表示する"

#: ../../pyvista/doc/source/examples/01-filter/sampling_functions_2d.rst:176
msgid "**Total running time of the script:** ( 0 minutes  2.414 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  2.414 seconds)"

#: ../../pyvista/doc/source/examples/01-filter/sampling_functions_2d.rst:190
msgid ""
":download:`Download Python source code: sampling_functions_2d.py "
"<sampling_functions_2d.py>`"
msgstr ":download:`Download Python source code: sampling_functions_2d.py `"

#: ../../pyvista/doc/source/examples/01-filter/sampling_functions_2d.rst:194
msgid ""
":download:`Download Jupyter notebook: sampling_functions_2d.ipynb "
"<sampling_functions_2d.ipynb>`"
msgstr ":download:`Download Jupyter notebook: sampling_functions_2d.ipynb `"

#: ../../pyvista/doc/source/examples/01-filter/sampling_functions_3d.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_examples_01-filter_sampling_functions_3d.py>` to download"
" the full example code"
msgstr ""
":ref:`Go to the end "
"<sphx_glr_download_examples_01-filter_sampling_functions_3d.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/01-filter/sampling_functions_3d.rst:22
msgid "Sample Function: Perlin Noise in 3D"
msgstr "サンプル関数:3DでのPerlinノイズ"

#: ../../pyvista/doc/source/examples/01-filter/sampling_functions_3d.rst:26
msgid ""
"Video games like Minecraft use Perlin noise to create terrain.  Here, we "
"create a voxelized mesh similar to a Minecraft \"cave\"."
msgstr ""
"Minecraftなどのビデオゲームでは，Perlinノイズを使用して地表を作成します．ここでは，Minecraftの \"洞窟\" "
"に似たボクセル化メッシュを作成します．"

#: ../../pyvista/doc/source/examples/01-filter/sampling_functions_3d.rst:46
msgid "Generate Perlin Noise over a 3D StructuredGrid"
msgstr "3D StructuredGrid上にPerlinノイズを生成する"

#: ../../pyvista/doc/source/examples/01-filter/sampling_functions_3d.rst:47
msgid ""
"Feel free to change the values of ``freq`` to change the shape of the "
"\"caves\".  For example, lowering the frequency will make the caves larger "
"and more expansive, while a higher frequency in any direction will make the "
"caves appear more \"vein-like\" and less open."
msgstr ""
"\"freq\" の値を自由に変更して， \"洞窟\" "
"の形を変えることができます．たとえば，周波数を低くすると，洞穴が大きく拡張します．一方，任意の方向の周波数を高くすると，洞穴はより \"静脈のように\""
" 見え，開きにくくなります．"

#: ../../pyvista/doc/source/examples/01-filter/sampling_functions_3d.rst:52
msgid ""
"Change the threshold to reduce or increase the percent of the terrain that "
"is open or closed"
msgstr "しきい値を変更して，開いている地形または閉じている地形の割合を増減します"

#: ../../pyvista/doc/source/examples/01-filter/sampling_functions_3d.rst:71
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>UnstructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>109863</td></tr>\n"
"<tr><td>N Points</td><td>121638</td></tr>\n"
"<tr><td>X Bounds</td><td>0.000e+00, 3.000e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>0.000e+00, 1.000e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 1.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>scalars</b></td><td>Points</td><td>float64</td><td>1</td><td>-6.143e-02</td><td>9.082e-01</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>UnstructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>109863</td></tr>\n"
"<tr><td>N Points</td><td>121638</td></tr>\n"
"<tr><td>X Bounds</td><td>0.000e+00, 3.000e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>0.000e+00, 1.000e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 1.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>scalars</b></td><td>Points</td><td>float64</td><td>1</td><td>-6.143e-02</td><td>9.082e-01</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/01-filter/sampling_functions_3d.rst:98
msgid "color limits without blue"
msgstr "青以外の色の制限"

#: ../../pyvista/doc/source/examples/01-filter/sampling_functions_3d.rst:130
msgid "**Total running time of the script:** ( 0 minutes  0.491 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  0.491 seconds)"

#: ../../pyvista/doc/source/examples/01-filter/sampling_functions_3d.rst:144
msgid ""
":download:`Download Python source code: sampling_functions_3d.py "
"<sampling_functions_3d.py>`"
msgstr ""
":download:`Download Python source code: sampling_functions_3d.py "
"<sampling_functions_3d.py>`"

#: ../../pyvista/doc/source/examples/01-filter/sampling_functions_3d.rst:148
msgid ""
":download:`Download Jupyter notebook: sampling_functions_3d.ipynb "
"<sampling_functions_3d.ipynb>`"
msgstr ":download:`Download Jupyter notebook: sampling_functions_3d.ipynb `"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:9
msgid "**00:07.453** total execution time for **examples_01-filter** files:"
msgstr ""

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:12
msgid ":ref:`sphx_glr_examples_01-filter_gradients.py` (``gradients.py``)"
msgstr ":ref:`sphx_glr_examples_01-filter_gradients.py` (``gradients.py``)"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:12
msgid "00:05.892"
msgstr "00:05.892"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:14
msgid ""
":ref:`sphx_glr_examples_01-filter_warp-by-vector.py` (``warp-by-vector.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_warp-by-vector.py` (``warp-by-vector.py``)"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:14
msgid "00:01.561"
msgstr "00:01.561"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:16
msgid ""
":ref:`sphx_glr_examples_01-filter_boolean-operations.py` (``boolean-"
"operations.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_boolean-operations.py` (``boolean-"
"operations.py``)"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:18
msgid ""
":ref:`sphx_glr_examples_01-filter_cell-centers.py` (``cell-centers.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_cell-centers.py` (``cell-centers.py``)"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:20
msgid ""
":ref:`sphx_glr_examples_01-filter_clipping-with-surface.py` (``clipping-"
"with-surface.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_clipping-with-surface.py` (``clipping-"
"with-surface.py``)"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:22
msgid ":ref:`sphx_glr_examples_01-filter_clipping.py` (``clipping.py``)"
msgstr ":ref:`sphx_glr_examples_01-filter_clipping.py` (``clipping.py``)"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:24
msgid ":ref:`sphx_glr_examples_01-filter_collisions.py` (``collisions.py``)"
msgstr ":ref:`sphx_glr_examples_01-filter_collisions.py` (``collisions.py``)"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:26
msgid ""
":ref:`sphx_glr_examples_01-filter_compute-normals.py` (``compute-"
"normals.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_compute-normals.py` (``compute-"
"normals.py``)"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:28
msgid ""
":ref:`sphx_glr_examples_01-filter_compute-volume.py` (``compute-volume.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_compute-volume.py` (``compute-volume.py``)"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:30
msgid ""
":ref:`sphx_glr_examples_01-filter_connectivity.py` (``connectivity.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_connectivity.py` (``connectivity.py``)"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:32
msgid ":ref:`sphx_glr_examples_01-filter_contouring.py` (``contouring.py``)"
msgstr ":ref:`sphx_glr_examples_01-filter_contouring.py` (``contouring.py``)"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:34
msgid ":ref:`sphx_glr_examples_01-filter_decimate.py` (``decimate.py``)"
msgstr ":ref:`sphx_glr_examples_01-filter_decimate.py` (``decimate.py``)"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:36
msgid ""
":ref:`sphx_glr_examples_01-filter_distance-between-surfaces.py` (``distance-"
"between-surfaces.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_distance-between-surfaces.py` (``distance-"
"between-surfaces.py``)"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:38
msgid ""
":ref:`sphx_glr_examples_01-filter_extract-cells-inside-surface.py` "
"(``extract-cells-inside-surface.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_extract-cells-inside-surface.py` "
"(``extract-cells-inside-surface.py``)"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:40
msgid ""
":ref:`sphx_glr_examples_01-filter_extract-edges.py` (``extract-edges.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_extract-edges.py` (``extract-edges.py``)"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:42
msgid ""
":ref:`sphx_glr_examples_01-filter_extract-surface.py` (``extract-"
"surface.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_extract-surface.py` (``extract-"
"surface.py``)"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:44
msgid ""
":ref:`sphx_glr_examples_01-filter_extrude-rotate.py` (``extrude-rotate.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_extrude-rotate.py` (``extrude-rotate.py``)"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:46
msgid ""
":ref:`sphx_glr_examples_01-filter_extrude-trim.py` (``extrude-trim.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_extrude-trim.py` (``extrude-trim.py``)"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:48
msgid ""
":ref:`sphx_glr_examples_01-filter_flying_edges.py` (``flying_edges.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_flying_edges.py` (``flying_edges.py``)"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:50
msgid ""
":ref:`sphx_glr_examples_01-filter_gaussian-smoothing.py` (``gaussian-"
"smoothing.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_gaussian-smoothing.py` (``gaussian-"
"smoothing.py``)"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:52
msgid ":ref:`sphx_glr_examples_01-filter_geodesic.py` (``geodesic.py``)"
msgstr ":ref:`sphx_glr_examples_01-filter_geodesic.py` (``geodesic.py``)"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:54
msgid ":ref:`sphx_glr_examples_01-filter_glyphs.py` (``glyphs.py``)"
msgstr ":ref:`sphx_glr_examples_01-filter_glyphs.py` (``glyphs.py``)"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:56
msgid ""
":ref:`sphx_glr_examples_01-filter_glyphs_table.py` (``glyphs_table.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_glyphs_table.py` (``glyphs_table.py``)"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:58
msgid ""
":ref:`sphx_glr_examples_01-filter_image-fft-perlin-noise.py` (``image-fft-"
"perlin-noise.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_image-fft-perlin-noise.py` (``image-fft-"
"perlin-noise.py``)"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:60
msgid ":ref:`sphx_glr_examples_01-filter_image-fft.py` (``image-fft.py``)"
msgstr ":ref:`sphx_glr_examples_01-filter_image-fft.py` (``image-fft.py``)"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:62
msgid ""
":ref:`sphx_glr_examples_01-filter_integrate-data.py` (``integrate-data.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_integrate-data.py` (``integrate-data.py``)"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:64
msgid ":ref:`sphx_glr_examples_01-filter_interpolate.py` (``interpolate.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_interpolate.py` (``interpolate.py``)"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:66
msgid ""
":ref:`sphx_glr_examples_01-filter_mesh-quality.py` (``mesh-quality.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_mesh-quality.py` (``mesh-quality.py``)"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:68
msgid ""
":ref:`sphx_glr_examples_01-filter_poly-ray-trace.py` (``poly-ray-trace.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_poly-ray-trace.py` (``poly-ray-trace.py``)"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:70
msgid ""
":ref:`sphx_glr_examples_01-filter_project-plane.py` (``project-plane.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_project-plane.py` (``project-plane.py``)"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:72
msgid ":ref:`sphx_glr_examples_01-filter_reflect.py` (``reflect.py``)"
msgstr ":ref:`sphx_glr_examples_01-filter_reflect.py` (``reflect.py``)"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:74
msgid ":ref:`sphx_glr_examples_01-filter_resample.py` (``resample.py``)"
msgstr ":ref:`sphx_glr_examples_01-filter_resample.py` (``resample.py``)"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:76
msgid ":ref:`sphx_glr_examples_01-filter_rotate.py` (``rotate.py``)"
msgstr ":ref:`sphx_glr_examples_01-filter_rotate.py` (``rotate.py``)"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:78
msgid ""
":ref:`sphx_glr_examples_01-filter_sampling_functions_2d.py` "
"(``sampling_functions_2d.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_sampling_functions_2d.py` "
"(``sampling_functions_2d.py``)"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:80
msgid ""
":ref:`sphx_glr_examples_01-filter_sampling_functions_3d.py` "
"(``sampling_functions_3d.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_sampling_functions_3d.py` "
"(``sampling_functions_3d.py``)"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:82
msgid ":ref:`sphx_glr_examples_01-filter_slicing.py` (``slicing.py``)"
msgstr ":ref:`sphx_glr_examples_01-filter_slicing.py` (``slicing.py``)"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:84
msgid ":ref:`sphx_glr_examples_01-filter_streamlines.py` (``streamlines.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_streamlines.py` (``streamlines.py``)"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:86
msgid ""
":ref:`sphx_glr_examples_01-filter_streamlines_2D.py` (``streamlines_2D.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_streamlines_2D.py` (``streamlines_2D.py``)"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:88
msgid ":ref:`sphx_glr_examples_01-filter_subdivide.py` (``subdivide.py``)"
msgstr ":ref:`sphx_glr_examples_01-filter_subdivide.py` (``subdivide.py``)"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:90
msgid ""
":ref:`sphx_glr_examples_01-filter_surface-smoothing.py` (``surface-"
"smoothing.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_surface-smoothing.py` (``surface-"
"smoothing.py``)"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:92
msgid ""
":ref:`sphx_glr_examples_01-filter_surface_reconstruction.py` "
"(``surface_reconstruction.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_surface_reconstruction.py` "
"(``surface_reconstruction.py``)"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:94
msgid ""
":ref:`sphx_glr_examples_01-filter_using-filters.py` (``using-filters.py``)"
msgstr ""
":ref:`sphx_glr_examples_01-filter_using-filters.py` (``using-filters.py``)"

#: ../../pyvista/doc/source/examples/01-filter/sg_execution_times.rst:96
msgid ":ref:`sphx_glr_examples_01-filter_voxelize.py` (``voxelize.py``)"
msgstr ":ref:`sphx_glr_examples_01-filter_voxelize.py` (``voxelize.py``)"

#: ../../pyvista/doc/source/examples/01-filter/slicing.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_slicing.py>` to "
"download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_slicing.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/01-filter/slicing.rst:24
msgid "Slicing"
msgstr "スライシング"

#: ../../pyvista/doc/source/examples/01-filter/slicing.rst:26
msgid "Extract thin planar slices from a volume."
msgstr "ボリュームから薄い平面スライスを抽出します．"

#: ../../pyvista/doc/source/examples/01-filter/slicing.rst:47
msgid ""
"PyVista meshes have several slicing filters bound directly to all datasets. "
"These filters allow you to slice through a volumetric dataset to extract and"
" view sections through the volume of data."
msgstr ""
"PyVistaメッシュには，すべてのデータセットに直接バインドされた複数のスライシングフィルタがあります．これらのフィルタを使用すると，ボリュームデータセットをスライスして，データのボリュームからセクションを抽出して表示できます．"

#: ../../pyvista/doc/source/examples/01-filter/slicing.rst:51
msgid ""
"One of the most common slicing filters used in PyVista is the "
":func:`pyvista.DataSetFilters.slice_orthogonal` filter which creates three "
"orthogonal slices through the dataset parallel to the three Cartesian "
"planes. For example, let's slice through the sample geostatistical training "
"image volume. First, load up the volume and preview it:"
msgstr ""
"PyVistaで使用される最も一般的なスライシングフィルタの1つは， 3つの直交面に平行なデータセットを通して3つの直交スライスを生成する "
":func:`pyvista.DataSetFilters.slice_orthogonal` "
"フィルタです．たとえば，サンプルの地理統計トレーニングイメージボリュームをスライスしてみましょう．まず，ボリュームをロードしてプレビューします．"

#: ../../pyvista/doc/source/examples/01-filter/slicing.rst:89
msgid ""
"Note that this dataset is a 3D volume and there might be regions within this"
" volume that we would like to inspect. We can create slices through the mesh"
" to gain further insight about the internals of the volume."
msgstr ""
"このデータセットは3 "
"Dボリュームであり，このボリューム内に検査したい領域がある場合があります．メッシュを使用してスライスを作成し，ボリュームの内部についてさらに詳しく調べることができます．"

#: ../../pyvista/doc/source/examples/01-filter/slicing.rst:117
msgid "The orthogonal slices can be easily translated throughout the volume:"
msgstr "直交スライスは，ボリューム全体で簡単に変換できます:"

#: ../../pyvista/doc/source/examples/01-filter/slicing.rst:140
msgid ""
"We can also add just a single slice of the volume by specifying the origin "
"and normal of the slicing plane with the "
":func:`pyvista.DataSetFilters.slice` filter:"
msgstr ""
":func:`pyvista.DataSetFilters.slice`  "
"フィルタでスライス平面の原点と法線を指定することで，ボリュームの単一スライスを追加することもできます．"

#: ../../pyvista/doc/source/examples/01-filter/slicing.rst:170
msgid ""
"Adding slicing planes uniformly across an axial direction can also be "
"automated with the :func:`pyvista.DataSetFilters.slice_along_axis` filter:"
msgstr ""
"軸方向に均一にスライス平面を追加することも， :func:`pyvista.DataSetFilters.slice_along_axis` "
"フィルタを使用して自動化できます．"

#: ../../pyvista/doc/source/examples/01-filter/slicing.rst:198
msgid "Slice Along Line"
msgstr "線分に沿ってスライス"

#: ../../pyvista/doc/source/examples/01-filter/slicing.rst:200
msgid ""
"We can also slice a dataset along a :func:`pyvista.Spline` or "
":func:`pyvista.Line` using the "
":func:`pyvista.DataSetFilters.slice_along_line` filter."
msgstr ""
":func:`pyvista.DataSetFilters.slice_along_line` フィルタを用いて "
":func:`pyvista.Spline` または :func:`pyvista.Line` に沿ってデータセットをスライスすることもできる．"

#: ../../pyvista/doc/source/examples/01-filter/slicing.rst:203
msgid ""
"First, define a line source through the dataset of interest. Please note "
"that this type of slicing is computationally expensive and might take a "
"while if there are a lot of points in the line - try to keep the resolution "
"of the line low."
msgstr ""
"最初に，対象のデータセットを使用して線のソースを定義します．このタイプのスライスは計算コストが高く，線に多くの点がある場合は時間がかかることに注意してください．線の解像度を低くしてください．"

#: ../../pyvista/doc/source/examples/01-filter/slicing.rst:235
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>1</td></tr>\n"
"<tr><td>N Points</td><td>15</td></tr>\n"
"<tr><td>N Strips</td><td>0</td></tr>\n"
"<tr><td>X Bounds</td><td>0.000e+00, 2.475e+02</td></tr>\n"
"<tr><td>Y Bounds</td><td>0.000e+00, 2.400e+02</td></tr>\n"
"<tr><td>Z Bounds</td><td>9.000e+00, 1.100e+01</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td>arc_length</td><td>Points</td><td>float32</td><td>1</td><td>0.000e+00</td><td>3.605e+02</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>1</td></tr>\n"
"<tr><td>N Points</td><td>15</td></tr>\n"
"<tr><td>N Strips</td><td>0</td></tr>\n"
"<tr><td>X Bounds</td><td>0.000e+00, 2.475e+02</td></tr>\n"
"<tr><td>Y Bounds</td><td>0.000e+00, 2.400e+02</td></tr>\n"
"<tr><td>Z Bounds</td><td>9.000e+00, 1.100e+01</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td>arc_length</td><td>Points</td><td>float32</td><td>1</td><td>0.000e+00</td><td>3.605e+02</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/01-filter/slicing.rst:263
msgid "Then run the filter"
msgstr "次に，フィルタを実行します．"

#: ../../pyvista/doc/source/examples/01-filter/slicing.rst:277
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>49100</td></tr>\n"
"<tr><td>N Points</td><td>49692</td></tr>\n"
"<tr><td>N Strips</td><td>0</td></tr>\n"
"<tr><td>X Bounds</td><td>0.000e+00, 2.500e+02</td></tr>\n"
"<tr><td>Y Bounds</td><td>0.000e+00, 2.415e+02</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 1.000e+02</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>facies</b></td><td>Cells</td><td>int64</td><td>1</td><td>0.000e+00</td><td>4.000e+00</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>49100</td></tr>\n"
"<tr><td>N Points</td><td>49692</td></tr>\n"
"<tr><td>N Strips</td><td>0</td></tr>\n"
"<tr><td>X Bounds</td><td>0.000e+00, 2.500e+02</td></tr>\n"
"<tr><td>Y Bounds</td><td>0.000e+00, 2.415e+02</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 1.000e+02</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>facies</b></td><td>Cells</td><td>int64</td><td>1</td><td>0.000e+00</td><td>4.000e+00</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/01-filter/slicing.rst:329
msgid "Multiple Slices in Vector Direction"
msgstr "ベクトル方向の複数のスライス"

#: ../../pyvista/doc/source/examples/01-filter/slicing.rst:331
msgid "Slice a mesh along a vector direction perpendicularly."
msgstr "ベクトル方向に沿って垂直にメッシュをスライスします．"

#: ../../pyvista/doc/source/examples/01-filter/slicing.rst:392
msgid "Slice At Different Bearings"
msgstr "異なる軸受でスライス"

#: ../../pyvista/doc/source/examples/01-filter/slicing.rst:394
msgid ""
"From `pyvista-support#23 <https://github.com/pyvista/pyvista-"
"support/issues/23>`_"
msgstr ""
"`pyvista-support#23 <https://github.com/pyvista/pyvista-support/issues/23>`_"
" から"

#: ../../pyvista/doc/source/examples/01-filter/slicing.rst:396
msgid ""
"An example of how to get many slices at different bearings all centered "
"around a user-chosen location."
msgstr "ユーザーが選択した位置を中心にして，さまざまな方位のスライスを多数作成する方法の例．"

#: ../../pyvista/doc/source/examples/01-filter/slicing.rst:399
msgid "Create a point to orient slices around"
msgstr "スライスを方向付けるポイントの作成"

#: ../../pyvista/doc/source/examples/01-filter/slicing.rst:417
msgid ""
"Now generate a few normal vectors to rotate a slice around the z-axis. Use "
"equation for circle since its about the Z-axis."
msgstr "ここで，Z軸を中心にスライスを回転させる法線ベクトルをいくつか生成します．円はZ軸を中心としているため，円の計算式を使用します．"

#: ../../pyvista/doc/source/examples/01-filter/slicing.rst:438
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Information</th><th>Blocks</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>MultiBlock</th><th>Values</th></tr>\n"
"<tr><td>N Blocks</td><td>6</td></tr>\n"
"<tr><td>X Bounds</td><td>0.000, 250.000</td></tr>\n"
"<tr><td>Y Bounds</td><td>0.000, 250.000</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000, 100.000</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Index</th><th>Name</th><th>Type</th></tr>\n"
"<tr><th>0</th><th>Bearing: 0.00</th><th>PolyData</th></tr>\n"
"<tr><th>1</th><th>Bearing: 30.00</th><th>PolyData</th></tr>\n"
"<tr><th>2</th><th>Bearing: 60.00</th><th>PolyData</th></tr>\n"
"<tr><th>3</th><th>Bearing: 90.00</th><th>PolyData</th></tr>\n"
"<tr><th>4</th><th>Bearing: 120.00</th><th>PolyData</th></tr>\n"
"<tr><th>5</th><th>Bearing: 150.00</th><th>PolyData</th></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Information</th><th>Blocks</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>MultiBlock</th><th>Values</th></tr>\n"
"<tr><td>N Blocks</td><td>6</td></tr>\n"
"<tr><td>X Bounds</td><td>0.000, 250.000</td></tr>\n"
"<tr><td>Y Bounds</td><td>0.000, 250.000</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000, 100.000</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Index</th><th>Name</th><th>Type</th></tr>\n"
"<tr><th>0</th><th>Bearing: 0.00</th><th>PolyData</th></tr>\n"
"<tr><th>1</th><th>Bearing: 30.00</th><th>PolyData</th></tr>\n"
"<tr><th>2</th><th>Bearing: 60.00</th><th>PolyData</th></tr>\n"
"<tr><th>3</th><th>Bearing: 90.00</th><th>PolyData</th></tr>\n"
"<tr><th>4</th><th>Bearing: 120.00</th><th>PolyData</th></tr>\n"
"<tr><th>5</th><th>Bearing: 150.00</th><th>PolyData</th></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/01-filter/slicing.rst:468
msgid "And now display it."
msgstr "これを表示します．"

#: ../../pyvista/doc/source/examples/01-filter/slicing.rst:493
msgid "**Total running time of the script:** ( 0 minutes  20.153 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  20.153 seconds)"

#: ../../pyvista/doc/source/examples/01-filter/slicing.rst:507
msgid ":download:`Download Python source code: slicing.py <slicing.py>`"
msgstr ":download:`Download Python source code: slicing.py <slicing.py>`"

#: ../../pyvista/doc/source/examples/01-filter/slicing.rst:511
msgid ":download:`Download Jupyter notebook: slicing.ipynb <slicing.ipynb>`"
msgstr ":download:`Download Jupyter notebook: slicing.ipynb <slicing.ipynb>`"

#: ../../pyvista/doc/source/examples/01-filter/streamlines.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_streamlines.py>` "
"to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_streamlines.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/01-filter/streamlines.rst:24
msgid "Streamlines"
msgstr "流線"

#: ../../pyvista/doc/source/examples/01-filter/streamlines.rst:26
msgid "Integrate a vector field to generate streamlines."
msgstr "ベクトルフィールドを積分して，流線を生成します．"

#: ../../pyvista/doc/source/examples/01-filter/streamlines.rst:30
msgid ""
"This example generates streamlines of blood velocity. An isosurface of speed"
" provides context. The starting positions for the streamtubes were "
"determined by experimenting with the data."
msgstr "この例では，血流速度の流線を生成します．速度の等値面がコンテキストを提供します．流管の開始位置はデータを実験して決定しました．"

#: ../../pyvista/doc/source/examples/01-filter/streamlines.rst:54
msgid "Carotid"
msgstr "頸動脈"

#: ../../pyvista/doc/source/examples/01-filter/streamlines.rst:55
msgid ""
"Download a sample dataset containing a vector field that can be integrated."
msgstr "統合可能なベクトルフィールドを含むサンプルデータセットをダウンロードします．"

#: ../../pyvista/doc/source/examples/01-filter/streamlines.rst:73
msgid ""
"Run the stream line filtering algorithm using random seed points inside a "
"sphere with radius of 2.0."
msgstr "半径2.0の球内のランダムなシード点を使用して，流線フィルタリングアルゴリズムを実行します．"

#: ../../pyvista/doc/source/examples/01-filter/streamlines.rst:100
msgid ""
"Display the results. Please note that because this dataset's velocity field "
"was measured with low resolution, many streamlines travel outside the "
"artery."
msgstr "結果を表示します．このデータセットの速度場は低分解能で測定されたため，多くの流線が動脈の外側を通過することに注意してください．"

#: ../../pyvista/doc/source/examples/01-filter/streamlines.rst:132
msgid "Blood Vessels"
msgstr "血管"

#: ../../pyvista/doc/source/examples/01-filter/streamlines.rst:133
msgid "Here is another example of blood flow:"
msgstr "血流の別の例を次に示します:"

#: ../../pyvista/doc/source/examples/01-filter/streamlines.rst:183
msgid ""
"A source mesh can also be provided using the "
":func:`pyvista.DataSetFilters.streamlines_from_source` filter, for example "
"if an inlet surface is available.  In this example, the inlet surface is "
"extracted just inside the domain for use as the seed for the streamlines."
msgstr ""
"流入口が利用可能な場合などは， :func:`pyvista.DataSetFilters.streamlines_from_source` "
"フィルタを使用してソースメッシュを提供することもできます．この例では，流入口を領域のすぐ内側に抽出し，流線の始点として使用します．"

#: ../../pyvista/doc/source/examples/01-filter/streamlines.rst:218
msgid "Plot streamlines colored by the time along the streamlines."
msgstr "時間で着色した流線に沿った流線を流線に沿ってプロットします．"

#: ../../pyvista/doc/source/examples/01-filter/streamlines.rst:255
msgid "Kitchen"
msgstr "キッチン"

#: ../../pyvista/doc/source/examples/01-filter/streamlines.rst:314
msgid "Custom 3D Vector Field"
msgstr "カスタム3 Dベクトルフィールド"

#: ../../pyvista/doc/source/examples/01-filter/streamlines.rst:379
msgid "**Total running time of the script:** ( 0 minutes  11.885 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  11.885 seconds)"

#: ../../pyvista/doc/source/examples/01-filter/streamlines.rst:393
msgid ""
":download:`Download Python source code: streamlines.py <streamlines.py>`"
msgstr ""
":download:`Download Python source code: streamlines.py <streamlines.py>`"

#: ../../pyvista/doc/source/examples/01-filter/streamlines.rst:397
msgid ""
":download:`Download Jupyter notebook: streamlines.ipynb <streamlines.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: streamlines.ipynb <streamlines.ipynb>`"

#: ../../pyvista/doc/source/examples/01-filter/streamlines_2D.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_streamlines_2D.py>` "
"to download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_01-filter_streamlines_2D.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/01-filter/streamlines_2D.rst:24
msgid "2D Streamlines"
msgstr "2D流線"

#: ../../pyvista/doc/source/examples/01-filter/streamlines_2D.rst:26
msgid "Integrate a vector field to generate streamlines on a 2D surface."
msgstr "2次元表面上のベクトルフィールドを積分して，流線を生成します．"

#: ../../pyvista/doc/source/examples/01-filter/streamlines_2D.rst:42
msgid ""
"This example generates streamlines of flow around a cylinder in cross flow."
msgstr "この例では，クロスフローにおけるシリンダー周りの流れの流線を生成します．"

#: ../../pyvista/doc/source/examples/01-filter/streamlines_2D.rst:61
msgid ""
"The data is multiblock with the fluid data as the first block. The data lies"
" in the `xy` plane, i.e. `z=0`, with no `z` velocity."
msgstr ""
"データはマルチブロックで，流体データが最初のブロックとなっています．データは `xy` 平面上，つまり `z=0` で， `z` "
"方向の速度はありません．"

#: ../../pyvista/doc/source/examples/01-filter/streamlines_2D.rst:97
msgid ""
"The default behavior of the :func:`streamlines() "
"<pyvista.DataSetFilters.streamlines>` filter is to use a 3D sphere source as"
" the seed points.  This often will not generate any seed points on the 2D "
"plane of interest.  Instead, a single streamline can be generated using the "
"``start_position`` argument. The ``surface_streamlines=True`` argument is "
"also needed if the dataset has nonzero normal velocity component.  This is "
"not the case in this dataset."
msgstr ""
":func:`streamlines() <pyvista.DataSetFilters.streamlines>` "
"フィルタのデフォルトの動作は，3Dの球体ソースを種点として使用することです．これは多くの場合，対象となる2D平面上にシードポイントを生成しません． "
"代わりに， ``start_position`` の引数を使って，単一のストリームラインを生成することができます． "
"``surface_streamlines=True`` という引数も，データセットが非ゼロの法線速度成分を持っている場合に必要です． "
"このデータセットではそのようなことはありません．"

#: ../../pyvista/doc/source/examples/01-filter/streamlines_2D.rst:140
msgid ""
"To generate multiple streamlines, a line source can be used with the "
"``pointa`` and ``pointb`` parameters."
msgstr "複数のストリームラインを生成するには，ラインソースを ``pointa`` および ``pointb`` パラメータとともに使用します．"

#: ../../pyvista/doc/source/examples/01-filter/streamlines_2D.rst:177
msgid ""
"The behavior immediately downstream of the cylinder is still not apparent "
"using streamlines at the inlet."
msgstr "シリンダーのすぐ下流の挙動は，入口の流線ではまだわかりません．"

#: ../../pyvista/doc/source/examples/01-filter/streamlines_2D.rst:180
msgid ""
"Another method is to use :func:`streamlines_evenly_spaced_2D() "
"<pyvista.DataSetFilters.streamlines_evenly_spaced_2D>`. This filter only "
"works with 2D data that lies on the xy plane. This method can quickly run of"
" memory, so particular attention must be paid to the input parameters.  The "
"defaults are in cell length units."
msgstr ""
"もう一つの方法は， :func:`streamlines_evenly_spaced_2D() "
"<pyvista.DataSetFilters.streamlines_evenly_spaced_2D>` "
"を使うことです．このフィルタは，xy平面上にある2Dデータに対してのみ動作します．このメソッドはすぐにメモリ不足になってしまうので，入力パラメータには特に注意を払う必要があります．"
" デフォルトではセルの長さ単位で表示されます．"

#: ../../pyvista/doc/source/examples/01-filter/streamlines_2D.rst:219
msgid ""
"The streamlines are only approximately evenly spaced and capture the vortex "
"pair downstream of the cylinder with appropriate choice of "
"``start_position``."
msgstr ""
"この流線はほぼ等間隔に配置されており， ``start_position`` を適切に選択することで，円柱の下流にある渦のペアを捉えることができます．"

#: ../../pyvista/doc/source/examples/01-filter/streamlines_2D.rst:226
msgid "**Total running time of the script:** ( 0 minutes  3.859 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  3.859 seconds)"

#: ../../pyvista/doc/source/examples/01-filter/streamlines_2D.rst:241
msgid ""
":download:`Download Python source code: streamlines_2D.py "
"<streamlines_2D.py>`"
msgstr ""
":download:`Download Python source code: streamlines_2D.py "
"<streamlines_2D.py>`"

#: ../../pyvista/doc/source/examples/01-filter/streamlines_2D.rst:247
msgid ""
":download:`Download Jupyter notebook: streamlines_2D.ipynb "
"<streamlines_2D.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: streamlines_2D.ipynb "
"<streamlines_2D.ipynb>`"

#: ../../pyvista/doc/source/examples/01-filter/subdivide.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_subdivide.py>` to "
"download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_01-filter_subdivide.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/01-filter/subdivide.rst:24
msgid "Subdivide Cells"
msgstr "セルの細分化"

#: ../../pyvista/doc/source/examples/01-filter/subdivide.rst:26
msgid ""
"Increase the number of triangles in a single, connected triangular mesh."
msgstr "単一の接続された3角形メッシュ内の3角形の数を増やします．"

#: ../../pyvista/doc/source/examples/01-filter/subdivide.rst:28
msgid ""
"The :func:`pyvista.PolyDataFilters.subdivide` filter utilizes three "
"different subdivision algorithms to subdivide a mesh's cells: `butterfly`, "
"`loop`, or `linear`."
msgstr ""
":func:`pyvista.PolyDataFilters.subdivide` フィルタは， `butterfly` ， `loop` ， "
"`linear` の3つの異なるサブディビジョンアルゴリズムを使用してメッシュのセルをサブディバイドします．"

#: ../../pyvista/doc/source/examples/01-filter/subdivide.rst:48
msgid ""
"First, let's load a **triangulated** mesh to subdivide. We can use the "
":func:`pyvista.DataSetFilters.triangulate` filter to ensure the mesh we are "
"using is purely triangles."
msgstr ""
"まず， **triangulated** メッシュをロードして再分割しましょう． "
":func:`pyvista.DataSetFilters.triangulate` "
"フィルタを使用して，使用しているメッシュが純粋な3角形であることを確認できます．"

#: ../../pyvista/doc/source/examples/01-filter/subdivide.rst:73
msgid ""
"Now, lets do a few subdivisions with the mesh and compare the results. Below"
" is a helper function to make a comparison plot of thee different "
"subdivisions."
msgstr "ここで，メッシュをいくつか分割して，結果を比較してみましょう．以下は，さまざまな小区分の比較プロットを作成するヘルパー関数です．"

#: ../../pyvista/doc/source/examples/01-filter/subdivide.rst:117
msgid "Run the subdivisions for 1 and 3 levels."
msgstr "1レベルと3レベルの区画を実行します．"

#: ../../pyvista/doc/source/examples/01-filter/subdivide.rst:142
msgid "**Total running time of the script:** ( 0 minutes  1.068 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.068 seconds)"

#: ../../pyvista/doc/source/examples/01-filter/subdivide.rst:157
msgid ":download:`Download Python source code: subdivide.py <subdivide.py>`"
msgstr ":download:`Download Python source code: subdivide.py <subdivide.py>`"

#: ../../pyvista/doc/source/examples/01-filter/subdivide.rst:163
msgid ""
":download:`Download Jupyter notebook: subdivide.ipynb <subdivide.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: subdivide.ipynb <subdivide.ipynb>`"

#: ../../pyvista/doc/source/examples/01-filter/surface-smoothing.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_surface-"
"smoothing.py>` to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_surface-"
"smoothing.py>` をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/01-filter/surface-smoothing.rst:24
msgid "Surface Smoothing"
msgstr "サーフェイススムージング"

#: ../../pyvista/doc/source/examples/01-filter/surface-smoothing.rst:26
msgid "Smoothing rough edges of a surface mesh"
msgstr "サーフェスメッシュの粗いエッジをスムージングする"

#: ../../pyvista/doc/source/examples/01-filter/surface-smoothing.rst:45
msgid ""
"Suppose you extract a volumetric subset of a dataset that has roughly "
"defined edges. Perhaps you'd like a smooth representation of that model "
"region. This can be achieved by extracting the bounding surface of the "
"volume and applying a :func:`pyvista.PolyDataFilters.smooth` filter."
msgstr ""
"大まかに定義されたエッジを持つデータセットのボリュームサブセットを抽出するとします．おそらく，そのモデル領域をスムーズに表現する必要があります．これは，ボリュームの境界サーフェスを抽出し，"
" :func:`pyvista.PolyDataFilters.smooth` フィルタを適用することで実現できます．"

#: ../../pyvista/doc/source/examples/01-filter/surface-smoothing.rst:50
msgid ""
"The below code snippet loads a sample roughly edged volumetric dataset:"
msgstr "次のコードスニペットは，サンプルの大まかなエッジのボリュームデータセットをロードします．"

#: ../../pyvista/doc/source/examples/01-filter/surface-smoothing.rst:80
msgid ""
"Extract the outer surface of the volume using the "
":func:`pyvista.DataSetFilters.extract_geometry` filter and then apply the "
"smoothing filter:"
msgstr ""
":func:`pyvista.DataSetFilters.extract_geometry` "
"フィルタを使用してボリュームの外側サーフェスを抽出し，次にスムージングフィルタを適用します．"

#: ../../pyvista/doc/source/examples/01-filter/surface-smoothing.rst:110
msgid ""
"Not smooth enough? Try increasing the number of iterations for the Laplacian"
" smoothing algorithm:"
msgstr "滑らかさが足りませんか?Laplacianスムージングアルゴリズムの反復回数を増やしてみます．"

#: ../../pyvista/doc/source/examples/01-filter/surface-smoothing.rst:137
msgid ""
"Still not smooth enough? Increase the number of iterations for the Laplacian"
" smoothing algorithm to a crazy high value. Note how this causes the mesh to"
" \"shrink\":"
msgstr ""
"まだ滑らかではありませんか?ラプラシアン平滑化アルゴリズムの反復回数を非常に高い値に増やします．これにより，メッシュが \"shrink\" "
"されることに注意してください．"

#: ../../pyvista/doc/source/examples/01-filter/surface-smoothing.rst:174
msgid "Taubin Smoothing"
msgstr "Taubin スムージング"

#: ../../pyvista/doc/source/examples/01-filter/surface-smoothing.rst:175
msgid ""
"You can reduce the amount of surface shrinkage by using Taubin smoothing "
"rather than the default laplacian smoothing implemented in :func:`smooth() "
"<pyvista.PolyDataFilters.smooth>`. In this example, you can see how Taubin "
"smoothing maintains the volume relative to the original mesh."
msgstr ""
":func:`smooth() <pyvista.PolyDataFilters.smooth>` "
"で実装されているデフォルトのラプラシアンスムージングではなく，タウビンスムージングを使用すると，表面の縮小の量を減らすことができます．この例では，タウビンスムージングが元のメッシュに対してどのようにボリュームを維持しているかを見ることができます．"

#: ../../pyvista/doc/source/examples/01-filter/surface-smoothing.rst:180
msgid ""
"Also, note that the number of iterations can be reduced to get the same "
"approximate amount of smoothing. This is because Taubin smoothing is more "
"efficient."
msgstr ""
"また，反復回数を減らすことで，同じ程度の平滑化量を得ることができることに注意してください．これは，タウバンスムージングがより効率的であるためです．"

#: ../../pyvista/doc/source/examples/01-filter/surface-smoothing.rst:222
msgid "**Total running time of the script:** ( 0 minutes  1.248 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.248 seconds)"

#: ../../pyvista/doc/source/examples/01-filter/surface-smoothing.rst:236
msgid ""
":download:`Download Python source code: surface-smoothing.py <surface-"
"smoothing.py>`"
msgstr ""
":download:`Download Python source code: surface-smoothing.py <surface-"
"smoothing.py>`"

#: ../../pyvista/doc/source/examples/01-filter/surface-smoothing.rst:240
msgid ""
":download:`Download Jupyter notebook: surface-smoothing.ipynb <surface-"
"smoothing.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: surface-smoothing.ipynb <surface-"
"smoothing.ipynb>`"

#: ../../pyvista/doc/source/examples/01-filter/surface_reconstruction.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_examples_01-filter_surface_reconstruction.py>` to "
"download the full example code"
msgstr ""
":ref:`Go to the end "
"<sphx_glr_download_examples_01-filter_surface_reconstruction.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/01-filter/surface_reconstruction.rst:24
msgid "Surface Reconstruction"
msgstr "サーフェスの再構築"

#: ../../pyvista/doc/source/examples/01-filter/surface_reconstruction.rst:26
msgid ""
"Surface reconstruction has a dedicated filter in PyVista and is handled by "
":func:`pyvista.PolyDataFilters.reconstruct_surface`. This tends to perform "
"much better than :func:`pyvista.DataSetFilters.delaunay_3d`."
msgstr ""
"表面再構成は，PyVistaでは専用のフィルタが用意されており， "
":func:`pyvista.PolyDataFilters.reconstruct_surface` で処理されます． これは "
":func:`pyvista.DataSetFilters.delaunay_3d` よりもはるかに良いパフォーマンスを示す傾向があります．"

#: ../../pyvista/doc/source/examples/01-filter/surface_reconstruction.rst:45
msgid ""
"Create a point cloud from a sphere and then reconstruct a surface from it."
msgstr "球体から点群を作成し，その点群からサーフェスを再構成します．"

#: ../../pyvista/doc/source/examples/01-filter/surface_reconstruction.rst:61
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>840</td></tr>\n"
"<tr><td>N Points</td><td>422</td></tr>\n"
"<tr><td>N Strips</td><td>0</td></tr>\n"
"<tr><td>X Bounds</td><td>-4.995e-01, 4.989e-01</td></tr>\n"
"<tr><td>Y Bounds</td><td>-4.986e-01, 4.986e-01</td></tr>\n"
"<tr><td>Z Bounds</td><td>-4.985e-01, 4.985e-01</td></tr>\n"
"<tr><td>N Arrays</td><td>0</td></tr>\n"
"</table>\n"
"\n"
"\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>840</td></tr>\n"
"<tr><td>N Points</td><td>422</td></tr>\n"
"<tr><td>N Strips</td><td>0</td></tr>\n"
"<tr><td>X Bounds</td><td>-4.995e-01, 4.989e-01</td></tr>\n"
"<tr><td>Y Bounds</td><td>-4.986e-01, 4.986e-01</td></tr>\n"
"<tr><td>Z Bounds</td><td>-4.985e-01, 4.985e-01</td></tr>\n"
"<tr><td>N Arrays</td><td>0</td></tr>\n"
"</table>\n"
"\n"
"\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/01-filter/surface_reconstruction.rst:83
msgid "Plot the point cloud and the reconstructed sphere."
msgstr "点群と再構成された球体をプロットします．"

#: ../../pyvista/doc/source/examples/01-filter/surface_reconstruction.rst:112
msgid "**Total running time of the script:** ( 0 minutes  0.385 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  0.385 seconds)"

#: ../../pyvista/doc/source/examples/01-filter/surface_reconstruction.rst:126
msgid ""
":download:`Download Python source code: surface_reconstruction.py "
"<surface_reconstruction.py>`"
msgstr ""
":download:`Download Python source code: surface_reconstruction.py "
"<surface_reconstruction.py>`"

#: ../../pyvista/doc/source/examples/01-filter/surface_reconstruction.rst:130
msgid ""
":download:`Download Jupyter notebook: surface_reconstruction.ipynb "
"<surface_reconstruction.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: surface_reconstruction.ipynb "
"<surface_reconstruction.ipynb>`"

#: ../../pyvista/doc/source/examples/01-filter/using-filters.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_using-filters.py>`"
" to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_using-filters.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/01-filter/using-filters.rst:24
msgid "Using Common Filters"
msgstr "共通フィルタの使用"

#: ../../pyvista/doc/source/examples/01-filter/using-filters.rst:26
msgid "Using common filters like thresholding and clipping."
msgstr "閾値設定やクリッピングなどの一般的なフィルタを使用します．"

#: ../../pyvista/doc/source/examples/01-filter/using-filters.rst:45
msgid ""
"PyVista wrapped data objects have a suite of common filters ready for "
"immediate use directly on the object. These filters include the following "
"(see :ref:`filters` for a complete list):"
msgstr ""
"PyVistaラップされたデータオブジェクトには，オブジェクト上で直接使用できるように，一連の共通フィルタが用意されています．これらのフィルタには，次のものがあります(完全なリストについては"
" :ref:`filters` を参照)．"

#: ../../pyvista/doc/source/examples/01-filter/using-filters.rst:49
msgid ""
"``slice``: creates a single slice through the input dataset on a user "
"defined plane"
msgstr "``slice``: ユーザ定義平面上の入力データセットから単一のスライスを作成します．"

#: ../../pyvista/doc/source/examples/01-filter/using-filters.rst:50
msgid ""
"``slice_orthogonal``: creates a ``MultiBlock`` dataset of three orthogonal "
"slices"
msgstr "``slice_orthogonal``: 3つの直交スライスの ``MultiBlock`` データセットを作成する"

#: ../../pyvista/doc/source/examples/01-filter/using-filters.rst:51
msgid ""
"``slice_along_axis``: creates a ``MultiBlock`` dataset of many slices along "
"a specified axis"
msgstr ""
"``slice_along_axis``: creates a ``MultiBlock`` dataset of many slices along "
"a specified axis"

#: ../../pyvista/doc/source/examples/01-filter/using-filters.rst:52
msgid ""
"``threshold``: Thresholds a dataset by a single value or range of values"
msgstr "``threshold``: 単一の値または値の範囲によるデータセットの閾値"

#: ../../pyvista/doc/source/examples/01-filter/using-filters.rst:53
msgid "``threshold_percent``: Threshold by percentages of the scalar range"
msgstr "``threshold_percent``: スカラー範囲のパーセンテージによる閾値"

#: ../../pyvista/doc/source/examples/01-filter/using-filters.rst:54
msgid "``clip``: Clips the dataset by a user defined plane"
msgstr "``clip``: ユーザ定義平面によってデータセットをクリップします"

#: ../../pyvista/doc/source/examples/01-filter/using-filters.rst:55
msgid "``outline_corners``: Outlines the corners of the data extent"
msgstr "``outline_corners``: データ範囲の隅のアウトラインを表示します．"

#: ../../pyvista/doc/source/examples/01-filter/using-filters.rst:56
msgid "``extract_geometry``: Extract surface geometry"
msgstr "``extract_geometry``: サーフェスジオメトリを抽出する"

#: ../../pyvista/doc/source/examples/01-filter/using-filters.rst:58
msgid ""
"To use these filters, call the method of your choice directly on your data "
"object:"
msgstr "これらのフィルタを使用するには，データ・オブジェクトで選択したメソッドを直接呼び出します．"

#: ../../pyvista/doc/source/examples/01-filter/using-filters.rst:83
msgid ""
"And now there is a thresholded version of the input dataset in the new "
"``threshed`` object. To learn more about what keyword arguments are "
"available to alter how filters are executed, print the docstring for any "
"filter attached to PyVista objects with either ``help(dataset.threshold)`` "
"or using ``shift+tab`` in an IPython environment."
msgstr ""
"これで，新しい ``threshed`` "
"オブジェクトに入力データセットのしきい値が設定されたバージョンがあります．フィルタの実行方法を変更するためにどのようなキーワード引数を使用できるかを調べるには，"
" ``help(dataset.threshold)`` またはIPython環境で ``shift+tab`` "
"を使用してPyVistaオブジェクトに付加されたフィルタのdocstringを出力します．"

#: ../../pyvista/doc/source/examples/01-filter/using-filters.rst:89
msgid ""
"We can now plot this filtered dataset along side an outline of the original "
"dataset"
msgstr "このフィルタ処理されたデータセットを，元のデータセットのアウトラインに沿ってプロットできるようになりました．"

#: ../../pyvista/doc/source/examples/01-filter/using-filters.rst:118
msgid ""
"What about other filters? Let's collect a few filter results and compare "
"them:"
msgstr "他のフィルターはどうですか?いくつかのフィルタ結果を収集して比較してみましょう．"

#: ../../pyvista/doc/source/examples/01-filter/using-filters.rst:175
#: ../../pyvista/doc/source/examples/99-advanced/plotting-algorithms.rst:155
msgid "Filter Pipeline"
msgstr "フィルタパイプライン"

#: ../../pyvista/doc/source/examples/01-filter/using-filters.rst:177
msgid ""
"In VTK, filters are often used in a pipeline where each algorithm passes its"
" output to the next filtering algorithm. In PyVista, we can mimic the "
"filtering pipeline through a chain; attaching each filter to the last "
"filter. In the following example, several filters are chained together:"
msgstr ""
"VTKでは，フィルタがパイプラインで使用されることが多く，各アルゴリズムはその出力を次のフィルタリング・アルゴリズムに渡します．PyVistaでは，次のようにしてフィルタリングパイプラインを模倣できます．各フィルタを最後のフィルタにアタッチします．次の例では，複数のフィルタが連結されています．"

#: ../../pyvista/doc/source/examples/01-filter/using-filters.rst:182
msgid "First, and empty ``threshold`` filter to clean out any ``NaN`` values."
msgstr "まず， ``threshold`` フィルタを空にして， ``NaN`` 値をすべて消去します．"

#: ../../pyvista/doc/source/examples/01-filter/using-filters.rst:183
msgid ""
"Use an ``elevation`` filter to generate scalar values corresponding to "
"height."
msgstr "``elevation`` フィルタを使用して，高さに対応するスカラー値を生成します．"

#: ../../pyvista/doc/source/examples/01-filter/using-filters.rst:184
msgid "Use the ``clip`` filter to cut the dataset in half."
msgstr "``clip`` フィルタを使用して，データセットを半分にカットします．"

#: ../../pyvista/doc/source/examples/01-filter/using-filters.rst:185
msgid ""
"Create three slices along each axial plane using the ``slice_orthogonal`` "
"filter."
msgstr "``slice_orthogonal`` フィルタを使用して，各軸平面に沿ってスライスを3つ作成します．"

#: ../../pyvista/doc/source/examples/01-filter/using-filters.rst:204
msgid ""
"And to view this filtered data, simply call the ``plot`` method "
"(``result.plot()``) or create a rendering scene:"
msgstr ""
"フィルタリングされたデータを表示するには， ``plot`` メソッド (``result.plot()``) "
"を呼び出すか，レンダリングシーンを作成します．"

#: ../../pyvista/doc/source/examples/01-filter/using-filters.rst:232
msgid "**Total running time of the script:** (0 minutes 9.745 seconds)"
msgstr "**Total running time of the script:** (0 minutes 9.745 seconds)"

#: ../../pyvista/doc/source/examples/01-filter/using-filters.rst:246
msgid ""
":download:`Download Python source code: using-filters.py <using-filters.py>`"
msgstr ""
":download:`Download Python source code: using-filters.py <using-filters.py>`"

#: ../../pyvista/doc/source/examples/01-filter/using-filters.rst:250
msgid ""
":download:`Download Jupyter notebook: using-filters.ipynb <using-"
"filters.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: using-filters.ipynb <using-"
"filters.ipynb>`"

#: ../../pyvista/doc/source/examples/01-filter/voxelize.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_01-filter_voxelize.py>` to "
"download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_01-filter_voxelize.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/01-filter/voxelize.rst:24
msgid "Voxelize a Surface Mesh"
msgstr "サーフェスメッシュをボクセル化する"

#: ../../pyvista/doc/source/examples/01-filter/voxelize.rst:26
msgid ""
"Create a voxel model (like legos) of a closed surface or volumetric mesh."
msgstr "閉じたサーフェスまたはボリュームメッシュのボクセルモデル(レゴのように)を作成します．"

#: ../../pyvista/doc/source/examples/01-filter/voxelize.rst:28
msgid ""
"This example also demonstrates how to compute an implicit distance from a "
"bounding :class:`pyvista.PolyData` surface."
msgstr "この例はまた，境界 :class:`pyvista.PolyData` 表面からの陰的距離を計算する方法を示す．"

#: ../../pyvista/doc/source/examples/01-filter/voxelize.rst:50
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>4204</td></tr>\n"
"<tr><td>N Points</td><td>2154</td></tr>\n"
"<tr><td>X Bounds</td><td>-5.633e+00, 5.633e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>-1.860e+00, 1.860e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>-2.125e+00, 2.126e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>0</td></tr>\n"
"</table>\n"
"\n"
"\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>4204</td></tr>\n"
"<tr><td>N Points</td><td>2154</td></tr>\n"
"<tr><td>X Bounds</td><td>-5.633e+00, 5.633e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>-1.860e+00, 1.860e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>-2.125e+00, 2.126e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>0</td></tr>\n"
"</table>\n"
"\n"
"\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/01-filter/voxelize.rst:96
msgid "Create a voxel model of the bounding surface"
msgstr "境界面のボクセルモデルを作成する"

#: ../../pyvista/doc/source/examples/01-filter/voxelize.rst:124
msgid ""
"We could even add a scalar field to that new voxel model in case we wanted "
"to create grids for modelling. In this case, let's add a scalar field for "
"bone density noting:"
msgstr ""
"モデリング用のグリッドを作成する場合に備えて，新しいボクセルモデルにスカラーフィールドを追加することもできます．ここでは，ボーン密度のスカラーフィールドを追加します．"

#: ../../pyvista/doc/source/examples/01-filter/voxelize.rst:140
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>UnstructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>93038</td></tr>\n"
"<tr><td>N Points</td><td>113188</td></tr>\n"
"<tr><td>X Bounds</td><td>-5.633e+00, 5.584e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>-1.860e+00, 1.858e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>-2.125e+00, 2.097e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>3</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td>vtkOriginalPointIds</td><td>Points</td><td>int64</td><td>1</td><td>3.685e+03</td><td>7.283e+05</td></tr>\n"
"<tr><td>vtkOriginalCellIds</td><td>Cells</td><td>int64</td><td>1</td><td>3.624e+03</td><td>7.017e+05</td></tr>\n"
"<tr><td><b>density</b></td><td>Cells</td><td>float64</td><td>1</td><td>3.650e+00</td><td>3.650e+00</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>UnstructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>93038</td></tr>\n"
"<tr><td>N Points</td><td>113188</td></tr>\n"
"<tr><td>X Bounds</td><td>-5.633e+00, 5.584e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>-1.860e+00, 1.858e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>-2.125e+00, 2.097e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>3</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td>vtkOriginalPointIds</td><td>Points</td><td>int64</td><td>1</td><td>3.685e+03</td><td>7.283e+05</td></tr>\n"
"<tr><td>vtkOriginalCellIds</td><td>Cells</td><td>int64</td><td>1</td><td>3.624e+03</td><td>7.017e+05</td></tr>\n"
"<tr><td><b>density</b></td><td>Cells</td><td>float64</td><td>1</td><td>3.650e+00</td><td>3.650e+00</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/01-filter/voxelize.rst:188
msgid ""
"A constant scalar field is kind of boring, so let's get a little fancier by "
"added a scalar field that varies by the distance from the bounding surface."
msgstr ""
"一定のスカラーフィールドは退屈なので，バウンディングサーフェスからの距離によって変化するスカラーフィールドを追加して少しおしゃれにしましょう．"

#: ../../pyvista/doc/source/examples/01-filter/voxelize.rst:203
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>UnstructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>93038</td></tr>\n"
"<tr><td>N Points</td><td>113188</td></tr>\n"
"<tr><td>X Bounds</td><td>-5.633e+00, 5.584e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>-1.860e+00, 1.858e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>-2.125e+00, 2.097e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>4</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td>vtkOriginalPointIds</td><td>Points</td><td>int64</td><td>1</td><td>3.685e+03</td><td>7.283e+05</td></tr>\n"
"<tr><td>implicit_distance</td><td>Points</td><td>float64</td><td>1</td><td>-6.951e-01</td><td>4.148e-01</td></tr>\n"
"<tr><td>vtkOriginalCellIds</td><td>Cells</td><td>int64</td><td>1</td><td>3.624e+03</td><td>7.017e+05</td></tr>\n"
"<tr><td><b>density</b></td><td>Cells</td><td>float64</td><td>1</td><td>3.650e+00</td><td>3.650e+00</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>UnstructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>93038</td></tr>\n"
"<tr><td>N Points</td><td>113188</td></tr>\n"
"<tr><td>X Bounds</td><td>-5.633e+00, 5.584e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>-1.860e+00, 1.858e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>-2.125e+00, 2.097e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>4</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td>vtkOriginalPointIds</td><td>Points</td><td>int64</td><td>1</td><td>3.685e+03</td><td>7.283e+05</td></tr>\n"
"<tr><td>implicit_distance</td><td>Points</td><td>float64</td><td>1</td><td>-6.951e-01</td><td>4.148e-01</td></tr>\n"
"<tr><td>vtkOriginalCellIds</td><td>Cells</td><td>int64</td><td>1</td><td>3.624e+03</td><td>7.017e+05</td></tr>\n"
"<tr><td><b>density</b></td><td>Cells</td><td>float64</td><td>1</td><td>3.650e+00</td><td>3.650e+00</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/01-filter/voxelize.rst:256
msgid "**Total running time of the script:** ( 0 minutes  12.498 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  12.498 seconds)"

#: ../../pyvista/doc/source/examples/01-filter/voxelize.rst:271
msgid ":download:`Download Python source code: voxelize.py <voxelize.py>`"
msgstr ":download:`Download Python source code: voxelize.py <voxelize.py>`"

#: ../../pyvista/doc/source/examples/01-filter/voxelize.rst:277
msgid ":download:`Download Jupyter notebook: voxelize.ipynb <voxelize.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: voxelize.ipynb <voxelize.ipynb>`"

#: ../../pyvista/doc/source/examples/01-filter/warp-by-vector.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_01-filter_warp-by-"
"vector.py>` to download the full example code"
msgstr ""

#: ../../pyvista/doc/source/examples/01-filter/warp-by-vector.rst:24
msgid "Warping by Vectors"
msgstr "ベクトルによるワープ"

#: ../../pyvista/doc/source/examples/01-filter/warp-by-vector.rst:26
msgid ""
"This example applies the ``warp_by_vector`` filter to a sphere mesh that has"
" 3D displacement vectors defined at each node."
msgstr ""
"この例では， ``warp_by_vector`` フィルタを，各ノードで定義された3 Dディスプレイスメントベクトルを持つ球メッシュに適用します．"

#: ../../pyvista/doc/source/examples/01-filter/warp-by-vector.rst:31
msgid "We first compare the unwarped sphere to the warped sphere."
msgstr "まず，ワープしていない球体とワープしている球体を比較します．"

#: ../../pyvista/doc/source/examples/01-filter/warp-by-vector.rst:69
msgid ""
"We then use several values for the scale factor applied to the warp "
"operation. Applying a warping factor that is too high can often lead to "
"unrealistic results."
msgstr ""
"次に，ワープ操作に適用されるスケール係数にいくつかの値を使用します．過度に高いワープ係数を適用すると，非現実的な結果になることがよくあります．"

#: ../../pyvista/doc/source/examples/01-filter/warp-by-vector.rst:101
msgid "**Total running time of the script:** (0 minutes 1.561 seconds)"
msgstr ""

#: ../../pyvista/doc/source/examples/01-filter/warp-by-vector.rst:115
msgid ""
":download:`Download Python source code: warp-by-vector.py <warp-by-"
"vector.py>`"
msgstr ""
":download:`Download Python source code: warp-by-vector.py <warp-by-"
"vector.py>`"

#: ../../pyvista/doc/source/examples/01-filter/warp-by-vector.rst:119
msgid ""
":download:`Download Jupyter notebook: warp-by-vector.ipynb <warp-by-"
"vector.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: warp-by-vector.ipynb <warp-by-"
"vector.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/anti-aliasing.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_anti-aliasing.py>` "
"to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_anti-aliasing.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/anti-aliasing.rst:24
msgid "Anti-Aliasing"
msgstr "アンチエイリアシング"

#: ../../pyvista/doc/source/examples/02-plot/anti-aliasing.rst:25
msgid "Demonstrate anti-aliasing within PyVista."
msgstr "PyVistaでアンチエイリアシングのデモを行います．"

#: ../../pyvista/doc/source/examples/02-plot/anti-aliasing.rst:27
msgid "PyVista supports three types of anti-aliasing:"
msgstr "PyVistaは，3種類のアンチエイリアスをサポートしています:"

#: ../../pyvista/doc/source/examples/02-plot/anti-aliasing.rst:29
msgid "SSAA - Super-Sample Anti-Aliasing"
msgstr "SSAA  - スーパーサンプリングアンチエイリアシング"

#: ../../pyvista/doc/source/examples/02-plot/anti-aliasing.rst:30
msgid "MSAA - Multi-Sample Anti-Aliasing"
msgstr "MSAA - マルチサンプルアンチエイリアシング"

#: ../../pyvista/doc/source/examples/02-plot/anti-aliasing.rst:31
msgid "FXAA - Fast Approximate Anti-Aliasing"
msgstr "FXAA - 高速近似アンチエイリアシング"

#: ../../pyvista/doc/source/examples/02-plot/anti-aliasing.rst:33
msgid ""
"By default, MSAA anti-aliasing is enabled using 8 samples. This is the "
"default for VTK."
msgstr "デフォルトでは，MSAAアンチエイリアスは8サンプルを使用して有効になっています．これはVTKのデフォルトです．"

#: ../../pyvista/doc/source/examples/02-plot/anti-aliasing.rst:42
msgid "You can enable additional line smoothing by enabling SSAA or FXAA"
msgstr "SSAAまたはFXAAを有効にすることで，追加のラインスムージングを有効にできます．"

#: ../../pyvista/doc/source/examples/02-plot/anti-aliasing.rst:44
msgid "**Which anti-aliasing technique should you use?**"
msgstr "**どのようなアンチエイリアシング技術を使うべきでしょうか？**"

#: ../../pyvista/doc/source/examples/02-plot/anti-aliasing.rst:46
msgid ""
"Normally, the default MSAA anti-aliasing should be sufficient as it strikes "
"a balance between efficiency and quality. If you desire additional "
"smoothing, you can either increase the number of ``multi_samples`` or use "
"SSAA. Low-end PCs should consider FXAA."
msgstr ""
"通常，デフォルトのMSAAアンチエイリアスは，効率と品質のバランスを取るため，十分であるべきです．さらにスムージングをかけたい場合は， "
"``multi_samples`` の数を増やすか，SSAAを使用します．ローエンドのPCはFXAAを検討してください．"

#: ../../pyvista/doc/source/examples/02-plot/anti-aliasing.rst:70
msgid "No Anti-Aliasing"
msgstr "アンチエイリアシングなし"

#: ../../pyvista/doc/source/examples/02-plot/anti-aliasing.rst:71
msgid "First, let's show a plot without any anti-aliasing."
msgstr "まず，アンチエイリアスを一切かけないプロットを表示してみましょう．"

#: ../../pyvista/doc/source/examples/02-plot/anti-aliasing.rst:100
msgid "Default: Multi-Sample Anti-Aliasing (MSAA)"
msgstr "デフォルト: マルチサンプルアンチエイリアシング(MSAA)"

#: ../../pyvista/doc/source/examples/02-plot/anti-aliasing.rst:101
msgid ""
"Next, let's show the default anti-aliasing configuration. By default, "
"PyVista uses 8 samples of MSAA."
msgstr "次に，デフォルトのアンチエイリアス設定を示します．デフォルトでは，PyVistaは8サンプルのMSAAを使用します．"

#: ../../pyvista/doc/source/examples/02-plot/anti-aliasing.rst:104
msgid ""
"MSAA, or Multi-Sample Anti-Aliasing is an optimization of SSAA that reduces "
"the amount of pixel shader evaluations that need to be computed by focusing "
"on overlapping regions of the scene. The result is anti-aliasing along edges"
" that is on par with SSAA and less anti-aliasing along surfaces as these "
"make up the bulk of SSAA computations. MSAA is substantially less "
"computationally expensive than SSAA and results in comparable image quality."
msgstr ""
"MSAAまたはマルチサンプルアンチエイリアスは，SSAAの最適化で，シーンの重複する領域に焦点を当てることで，計算が必要なピクセルシェーダーの評価量を削減します．その結果，エッジに沿ったアンチエイリアシングはSSAAと同等になり，サーフェスに沿ったアンチエイリアシングはSSAAの計算の大部分を占めるため，より少なくなります．MSAAはSSAAに比べ大幅に計算量が少なく，同等の画質が得られます．"

#: ../../pyvista/doc/source/examples/02-plot/anti-aliasing.rst:136
msgid "You can increase the smoothing by increasing multi_samples"
msgstr "multi_samples を増やすことで，平滑度を上げることができます．"

#: ../../pyvista/doc/source/examples/02-plot/anti-aliasing.rst:165
msgid "Fast Approximate Anti-Aliasing (FXAA)"
msgstr "高速近似アンチエイリアシング (FXAA)"

#: ../../pyvista/doc/source/examples/02-plot/anti-aliasing.rst:166
msgid ""
"FXAA is the most performant of all three anti-aliasing techniques. This is "
"because, in terms of hardware or GPU, FXAA is not that demanding. It "
"directly smooths the 2D image and this reduces the strain on the GPU, making"
" it best for low-end PCs."
msgstr ""
"FXAAは，3つのアンチエイリアシング技術の中で最もパフォーマンスが高い技術です．これは，ハードウェアやGPUの観点から，FXAAがそれほど要求されないためです．2D画像を直接平滑化するので，GPUへの負担が少なく，ローエンドのPCに最適です．"

#: ../../pyvista/doc/source/examples/02-plot/anti-aliasing.rst:171
msgid ""
"Because FXAA only operates on the rendered image, FXAA may result in "
"smoothing out parts of the visual overlay that are usually kept sharp for "
"reasons of clarity as well as smoothing out textures. In general, FXAA is "
"inferior to MSAA and SSAA."
msgstr ""
"FXAAはレンダリング画像に対してのみ動作するため，通常は鮮明さを保つためにシャープにされているビジュアルオーバーレイの一部が滑らかになったり，テクスチャが滑らかになったりすることがあります．一般的に，FXAA"
" は MSAA や SSAA よりも劣ります．"

#: ../../pyvista/doc/source/examples/02-plot/anti-aliasing.rst:176
#: ../../pyvista/doc/source/examples/02-plot/anti-aliasing.rst:213
msgid "Note how the line width has been adjusted for consistency."
msgstr "一貫性を保つために，線幅が調整されていることに注目してください．"

#: ../../pyvista/doc/source/examples/02-plot/anti-aliasing.rst:205
msgid "Super-Sample Anti-Aliasing (SSAA)"
msgstr "スーパーサンプルアンチエイリアシング(SSAA)"

#: ../../pyvista/doc/source/examples/02-plot/anti-aliasing.rst:206
msgid ""
"SSAA, or Super-Sample Anti-Aliasing is a brute force method of anti-"
"aliasing. It results in the best image quality but comes at a tremendous "
"resource cost. SSAA works by rendering the scene at a higher resolution. The"
" final image is produced by downsampling the massive source image using an "
"averaging filter. This acts as a low pass filter which removes the high "
"frequency components that would cause jaggedness."
msgstr ""
"SSAAまたはスーパーサンプルアンチエイリアシングは，アンチエイリアシングのブルートフォース当り方式です．最高の画質が得られますが，膨大なリソースコストがかかります．SSAAは，シーンをより高い解像度でレンダリングすることで機能します．最終的な画像は，平均化フィルタを使用して巨大なソース画像をダウンサンプリングすることによって生成されます．これはローパスフィルタとして機能し，ギザギザの原因となる高周波成分を除去します．"

#: ../../pyvista/doc/source/examples/02-plot/anti-aliasing.rst:242
msgid "Compare render time"
msgstr "レンダリング時間を比較する"

#: ../../pyvista/doc/source/examples/02-plot/anti-aliasing.rst:243
msgid ""
"You can compare the time to render for each one of the anti-aliasing "
"approaches with:"
msgstr "各アンチエイリアシングアプローチのレンダリングにかかる時間は，以下で比較できます:"

#: ../../pyvista/doc/source/examples/02-plot/anti-aliasing.rst:267
msgid ""
"Here are the timings from an NVIDIA Quadro P2000 and a Intel(R) Xeon(R) "
"E-2288G CPU @ 3.70GHz:"
msgstr "以下は，NVIDIA Quadro P2000とIntel(R) Xeon(R) E-2288G CPU @ 3.70GHzの計時です:"

#: ../../pyvista/doc/source/examples/02-plot/anti-aliasing.rst:282
msgid "**Total running time of the script:** ( 0 minutes  3.040 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  3.040 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/anti-aliasing.rst:296
msgid ""
":download:`Download Python source code: anti-aliasing.py <anti-aliasing.py>`"
msgstr ""
":download:`Download Python source code: anti-aliasing.py <anti-aliasing.py>`"

#: ../../pyvista/doc/source/examples/02-plot/anti-aliasing.rst:300
msgid ""
":download:`Download Jupyter notebook: anti-aliasing.ipynb <anti-"
"aliasing.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: anti-aliasing.ipynb <anti-"
"aliasing.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/backface_props.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_backface_props.py>` "
"to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_backface_props.py>` "
"to download the full example code"

#: ../../pyvista/doc/source/examples/02-plot/backface_props.rst:24
msgid "Setting Backface Properties"
msgstr "バックフェイスプロパティの設定"

#: ../../pyvista/doc/source/examples/02-plot/backface_props.rst:26
msgid ""
"By default front and backface rendering uses the same properties. In certain"
" situations it can be useful to set different properties for backfaces than "
"for frontfaces."
msgstr ""
"デフォルトでは，フロントフェイスとバックフェイスのレンダリングは同じプロパティを使用します．状況によっては，バックフェイスにフロントフェイスとは異なるプロパティを設定すると便利な場合があります．"

#: ../../pyvista/doc/source/examples/02-plot/backface_props.rst:30
msgid ""
"One straightforward example is when a closed (or close enough) surface has a"
" different color on the inside. Note that the notion of \"inside\" and "
"\"outside\" depend on the orientation of the surface normals:"
msgstr ""
"簡単な例としては，閉じた(または十分に近い)サーフェスの内側が異なる色である場合す． \"inside\" と \"outside\" "
"の概念は，サーフェスの法線の向きに依存することに注意してください．"

#: ../../pyvista/doc/source/examples/02-plot/backface_props.rst:68
msgid ""
"A more interesting use case is helping visualize the orientation of complex,"
" self-intersecting surfaces. For instance :func:`Catalan's minimal surface "
"<pyvista.ParametricCatalanMinimal>` has a complex shape, and coloring the "
"front and backfaces differently helps viewers comprehend the intricate "
"structure of the surface. This example also demonstrates use of the "
":attr:`backface_prop <pyvista.Actor.backface_prop>` property of the "
":class:`pyvista.Actor` class."
msgstr ""
"より興味深い使用例としては，複雑で自己交差する曲面の向きを視覚化するのに役立ちます．例えば :func:`Catalan's minimal "
"surface <pyvista.ParametricCatalanMinimal>` "
"は複雑な形をしていますが，前面と背面に異なる色を付けることで，サーフェスの複雑な構造を理解しやすくなります．この例では， "
":class:`pyvista.Actor` クラスの :attr:`backface_prop "
"<pyvista.Actor.backface_prop>` プロパティの使用も実演しています．"

#: ../../pyvista/doc/source/examples/02-plot/backface_props.rst:105
msgid ""
"In the case of non-orientable surfaces, adding specific backface properties "
"can make the non-orientable quality very obvious by the emergence of "
"\"seams\" where the face properties are discontinuous."
msgstr "無方向性表面の場合，特定の裏面特性を追加すると，表面特性が不連続になる \"seams\" が発生し，無方向性が非常に顕著になることがあります．"

#: ../../pyvista/doc/source/examples/02-plot/backface_props.rst:136
msgid ""
"Of course we aren't constrained to only setting distinct colors for "
"backfaces; most :class:`pyvista.Property` attributes can be overridden. "
"However, some of these have no effect, while others merely don't make any "
"sense. For instance, most objects have the same opacity no matter which "
"direction you look at them. Here is a GIF animation circling around such an "
"asymmetrically opaque Möbius strip:"
msgstr ""
"もちろん，バックフェースの色だけでなく，ほとんどの :class:`pyvista.Property` "
"属性をオーバーライドすることができます．しかし，これらの中には何の効果もないものもありますし，単に意味をなさないものもあります．例えば，ほとんどのオブジェクトは，どの方向から見ても同じ不透明度を持っています．このような非対称の不透明なメビウスの帯の周りを回るGIFアニメーションをご覧ください．"

#: ../../pyvista/doc/source/examples/02-plot/backface_props.rst:174
msgid "Apply Backface Properties to Textured Meshes"
msgstr "テクスチャ付きメッシュにバックフェイスプロパティを適用する"

#: ../../pyvista/doc/source/examples/02-plot/backface_props.rst:175
msgid ""
"Backface textures can also be applied to meshes that have textures applied "
"to them. For this example we load the globe texture with "
":func:`pyvista.examples.load_globe() "
"<pyvista.examples.examples.load_globe>`, clip it, and then apply a different"
" color to the interior surface."
msgstr ""
"バックフェイステクスチャは，テクスチャが適用されているメッシュに適用することもできます．この例では，地球儀のテクスチャを "
":func:`pyvista.examples.load_globe() <pyvista.examples.load_globe>` "
"でロードしてクリップし，内側の表面に異なる色を適用しています．"

#: ../../pyvista/doc/source/examples/02-plot/backface_props.rst:180
msgid ""
"The lighting has been disabled for this example to demonstrate how you can "
"make the interior of the surface appear occluded without any directional "
"lighting simply by providing a different color for backface."
msgstr ""
"この例ではライティングを無効にしていますが，これは，裏面に異なる色を指定するだけで，指向性ライティングなしでサーフェスの内部を閉塞して見せることができることを示すためです．"

#: ../../pyvista/doc/source/examples/02-plot/backface_props.rst:219
msgid "Backface Properties and Physically Based Rendering"
msgstr "バックフェイスプロパティと物理ベースレンダリング"

#: ../../pyvista/doc/source/examples/02-plot/backface_props.rst:220
msgid ""
"Note that backfaces are automatically culled when physically based rendering"
" is enabled, regardless of the settings of backface parameters."
msgstr ""
"物理ベースレンダリングを有効にすると，バックフェイスパラメータの設定にかかわらず，バックフェイスが自動的に選抜除去されることに注意してください．"

#: ../../pyvista/doc/source/examples/02-plot/backface_props.rst:257
msgid ""
"See also the :ref:`sphere_eversion_example` example which relies on "
"distinguishing the inside and the outside of a sphere."
msgstr "球の内側と外側を区別することに依存する :ref:`sphere_eversion_example` の例も参照してください．"

#: ../../pyvista/doc/source/examples/02-plot/backface_props.rst:263
msgid "**Total running time of the script:** ( 0 minutes  39.704 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  39.704 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/backface_props.rst:277
msgid ""
":download:`Download Python source code: backface_props.py "
"<backface_props.py>`"
msgstr ""
":download:`Download Python source code: backface_props.py "
"<backface_props.py>`"

#: ../../pyvista/doc/source/examples/02-plot/backface_props.rst:281
msgid ""
":download:`Download Jupyter notebook: backface_props.ipynb "
"<backface_props.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: backface_props.ipynb "
"<backface_props.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/background_image.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_examples_02-plot_background_image.py>` to download the "
"full example code"
msgstr ""
":ref:`Go to the end "
"<sphx_glr_download_examples_02-plot_background_image.py>`  "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/background_image.rst:24
msgid "Background Image"
msgstr "背景イメージ"

#: ../../pyvista/doc/source/examples/02-plot/background_image.rst:26
msgid ""
"Add a background image with :func:`pyvista.Plotter.add_background_image`."
msgstr ":func:`pyvista.Plotter.add_background_image` で背景画像を追加します．"

#: ../../pyvista/doc/source/examples/02-plot/background_image.rst:44
msgid "Plot an airplane with the map of the earth in the background"
msgstr "地球の地図を背景に飛行機を配置する"

#: ../../pyvista/doc/source/examples/02-plot/background_image.rst:71
msgid "Plot several earth related plots"
msgstr "複数の地球関連プロットをプロットする"

#: ../../pyvista/doc/source/examples/02-plot/background_image.rst:115
msgid "**Total running time of the script:** ( 0 minutes  12.769 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  12.769 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/background_image.rst:129
msgid ""
":download:`Download Python source code: background_image.py "
"<background_image.py>`"
msgstr ""
":download:`Download Python source code: background_image.py "
"<background_image.py>`"

#: ../../pyvista/doc/source/examples/02-plot/background_image.rst:133
msgid ""
":download:`Download Jupyter notebook: background_image.ipynb "
"<background_image.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: background_image.ipynb "
"<background_image.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/blurring.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_blurring.py>` to "
"download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_blurring.py>`  "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/blurring.rst:24
msgid "Blurring"
msgstr "ぼかし"

#: ../../pyvista/doc/source/examples/02-plot/blurring.rst:25
msgid ""
"This example shows how you can use :func:`add_blurring "
"<pyvista.Plotter.add_blurring>` to blur a plot, or use "
":func:`enable_depth_of_field <pyvista.Plotter.enable_depth_of_field>` to "
"highlight part of your plot."
msgstr ""
"この例では， :func:`add_blurring <pyvista.Plotter.add_blurring>` を使ってプロットをぼかしたり， "
":func:`enable_depth_of_field <pyvista.Plotter.enable_depth_of_field>` "
"でプロットの一部を強調する方法を示しています．"

#: ../../pyvista/doc/source/examples/02-plot/blurring.rst:47
msgid "Create several spheres"
msgstr "複数の球体を作成する"

#: ../../pyvista/doc/source/examples/02-plot/blurring.rst:71
msgid "Blur the plot"
msgstr "プロットをぼかす"

#: ../../pyvista/doc/source/examples/02-plot/blurring.rst:72
msgid "Add a few blur passes to blur the plot"
msgstr "プロットをぼかすためのblurパスを数回追加します"

#: ../../pyvista/doc/source/examples/02-plot/blurring.rst:103
msgid ""
"Note how this is different than selectively blurring part of the mesh behind"
" the focal plane"
msgstr "これは，焦点面の後ろのメッシュの一部を選択的にぼかすのとは違うことに注意してください"

#: ../../pyvista/doc/source/examples/02-plot/blurring.rst:132
msgid "**Total running time of the script:** ( 0 minutes  13.489 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  13.489 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/blurring.rst:146
msgid ":download:`Download Python source code: blurring.py <blurring.py>`"
msgstr ":download:`Download Python source code: blurring.py <blurring.py>`"

#: ../../pyvista/doc/source/examples/02-plot/blurring.rst:150
msgid ":download:`Download Jupyter notebook: blurring.ipynb <blurring.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: blurring.ipynb <blurring.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/bounds.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_bounds.py>` to download"
" the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_bounds.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/bounds.rst:24
msgid "Plotting Bounds"
msgstr "境界のプロット"

#: ../../pyvista/doc/source/examples/02-plot/bounds.rst:26
msgid ""
"This example demonstrates to show bounds within a :class:`pyvista.Plotter` "
"using :func:`show_grid() <pyvista.Plotter.show_grid>`"
msgstr ""
"この例では， :func:`show_grid() <pyvista.Plotter.show_grid>` を使用して "
":class:`pyvista.Plotter` 内の境界線を表示するデモを紹介します．"

#: ../../pyvista/doc/source/examples/02-plot/bounds.rst:47
msgid "Show All Bounds"
msgstr "すべての境界を表示する"

#: ../../pyvista/doc/source/examples/02-plot/bounds.rst:48
msgid ""
"In this plot we show the bounds for all axes by setting ``location='all'``."
msgstr "このプロットでは， ``location='all'`` を設定することにより，すべての軸の境界を表示しています．"

#: ../../pyvista/doc/source/examples/02-plot/bounds.rst:76
msgid "Override Shown Values Limits"
msgstr "表示値のオーバーライド リミット"

#: ../../pyvista/doc/source/examples/02-plot/bounds.rst:77
msgid ""
"In this example, we override the values shown along the X and Y axes with "
"our own custom values. This can be useful when you wish to display different"
" values along the axes without having to scale the dataset. Also, note how "
"we hide the Z labels by setting ``show_zlabels=False``."
msgstr ""
"この例では，X軸とY軸に表示される値を独自のカスタム値で上書きしています．これは，データセットを拡大縮小することなく，軸に沿って異なる値を表示したい場合に便利です．また，"
" ``show_zlabels=False`` を設定して Z ラベルを非表示にしていることにも注目してください．"

#: ../../pyvista/doc/source/examples/02-plot/bounds.rst:120
msgid "Show Bounds for Only One Dataset"
msgstr "1つのデータセットのみの境界を表示する"

#: ../../pyvista/doc/source/examples/02-plot/bounds.rst:121
msgid ""
"This example shows only the bounds for a single dataset. Again we use "
"``axes_ranges`` here since in this example we want to show the size of the "
"single central gear."
msgstr ""
"この例では，1つのデータセットの境界のみを表示しています．この例でも ``axes_ranges`` "
"を使用しています．この例では，単一の中心歯車の大きさを表示したいからです．"

#: ../../pyvista/doc/source/examples/02-plot/bounds.rst:166
msgid "**Total running time of the script:** ( 0 minutes  2.282 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  2.282 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/bounds.rst:181
msgid ":download:`Download Python source code: bounds.py <bounds.py>`"
msgstr ":download:`Download Python source code: bounds.py <bounds.py>`"

#: ../../pyvista/doc/source/examples/02-plot/bounds.rst:187
msgid ":download:`Download Jupyter notebook: bounds.ipynb <bounds.ipynb>`"
msgstr ":download:`Download Jupyter notebook: bounds.ipynb <bounds.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/chart_basics.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_chart_basics.py>` to "
"download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_02-plot_chart_basics.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/chart_basics.rst:24
msgid "Chart Basics"
msgstr "チャートの基本"

#: ../../pyvista/doc/source/examples/02-plot/chart_basics.rst:26
msgid ""
"This example shows how different types of charts can be added to the scene. "
"A more complex example, showing how to combine multiple charts as overlays "
"in the same renderer, is given in :ref:`chart_overlays_example`."
msgstr ""
"この例では，さまざまなタイプのチャートをシーンに追加する方法を示しています．より複雑な例として，同じレンダラーで複数のチャートをオーバーレイとして組み合わせる方法は，"
" :ref:`chart_overlays_example` にあります．"

#: ../../pyvista/doc/source/examples/02-plot/chart_basics.rst:49
msgid ""
"This example shows how to create a 2D scatter plot from 100 randomly sampled"
" datapoints. By default, the chart automatically rescales its axes such that"
" all plotted data is visible. By right clicking on the chart you can enable "
"zooming and panning of the chart."
msgstr ""
"この例では，ランダムに抽出された100個のデータポイントから2次元の散布図を作成する方法を示します．デフォルトでは，チャートは軸を自動的にリスケールし，プロットされたすべてのデータが見えるようになっています．チャートの上で右クリックすると，チャートのズームやパンが可能です．"

#: ../../pyvista/doc/source/examples/02-plot/chart_basics.rst:79
msgid ""
"To connect datapoints with lines, you can create a 2D line plot as shown in "
"the example below. You can also dynamically 'zoom in' on the plotted data by"
" specifying a custom axis range yourself."
msgstr ""
"データポイントを線で結ぶには，以下の例のように2Dのラインプロットを作成することができます．また，カスタム軸の範囲を自分で指定することで，プロットされたデータを動的に"
" 'ズームイン' することができます．"

#: ../../pyvista/doc/source/examples/02-plot/chart_basics.rst:109
msgid ""
"You can also easily combine scatter and line plots using the general "
":func:`pyvista.Chart2D.plot` function, specifying both the line and marker "
"style at once."
msgstr ""
"また，一般的な :func:`pyvista.Chart2D.plot` "
"関数を使って，ラインとマーカーの両方のスタイルを一度に指定することで，散布図とラインプロットを簡単に組み合わせることができます．"

#: ../../pyvista/doc/source/examples/02-plot/chart_basics.rst:139
msgid ""
"The following example shows how to create filled areas between two "
"polylines."
msgstr "次の例では，2本のポリラインの間に塗りつぶし領域を作成しています．"

#: ../../pyvista/doc/source/examples/02-plot/chart_basics.rst:170
msgid ""
"Bar charts are also supported. Multiple bar plots are placed next to each "
"other."
msgstr "棒チャートにも対応しています．複数の棒チャートが隣り合って配置されています．"

#: ../../pyvista/doc/source/examples/02-plot/chart_basics.rst:218
msgid ""
"In case you want to stack the bars, instead of drawing them next to each "
"other, pass a sequence of y values."
msgstr "バーを横に並べて描くのではなく，重ねて描きたい場合は，yの値を連続して渡します．"

#: ../../pyvista/doc/source/examples/02-plot/chart_basics.rst:251
msgid ""
"In a similar way, you can stack multiple area plots on top of each other."
msgstr "同様に，複数のエリアプロットを重ねることもできます．"

#: ../../pyvista/doc/source/examples/02-plot/chart_basics.rst:279
msgid ""
"Beside the flexible Chart2D used in the previous examples, there are a "
"couple other dedicated charts you can create. The example below shows how a "
"pie chart can be created."
msgstr ""
"これまでの例で使用したフレキシブルなChart2Dの他にも，いくつかの専用チャートを作成することができます．下の例では，円チャートを作成することができます．"

#: ../../pyvista/doc/source/examples/02-plot/chart_basics.rst:307
msgid "To summarize statistics of datasets, you can easily create a boxplot."
msgstr "データセットの統計情報を要約するには，箱ひげ図を簡単に作成することができます．"

#: ../../pyvista/doc/source/examples/02-plot/chart_basics.rst:333
msgid ""
"If you would like to add other types of chart that are currently not "
"supported by pyvista or VTK, you can resort to matplotlib to create your "
"custom chart and afterwards embed it into a pyvista plotting window. The "
"below example shows how you can do this."
msgstr ""
"pyvistaやVTKでサポートされていない他のタイプのチャートを追加したい場合は，matplotlibを使ってカスタムチャートを作成し，pyvistaのプロットウィンドウに埋め込むことができます．以下の例は，これをどのように行うかを示しています．"

#: ../../pyvista/doc/source/examples/02-plot/chart_basics.rst:380
msgid "**Total running time of the script:** ( 0 minutes  3.714 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  3.714 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/chart_basics.rst:395
msgid ""
":download:`Download Python source code: chart_basics.py <chart_basics.py>`"
msgstr ""
":download:`Download Python source code: chart_basics.py <chart_basics.py>`"

#: ../../pyvista/doc/source/examples/02-plot/chart_basics.rst:401
msgid ""
":download:`Download Jupyter notebook: chart_basics.ipynb "
"<chart_basics.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: chart_basics.ipynb "
"<chart_basics.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/chart_overlays.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_chart_overlays.py>` to "
"download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_02-plot_chart_overlays.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/chart_overlays.rst:24
msgid "Chart Overlays"
msgstr "チャートのオーバーレイ"

#: ../../pyvista/doc/source/examples/02-plot/chart_overlays.rst:26
msgid ""
"This example shows how you can combine multiple charts as overlays in the "
"same renderer. For an overview of the different chart types you can use, "
"please refer to :ref:`chart_basics_example`. Interaction with a chart can be"
" enabled by a double left click on top of it. Note that this will disable "
"interaction with the 3D scene. To stop interacting with the chart, perform "
"another double left click. This will either enable interaction with another "
"chart (if clicked on top of it) or re-enable interaction with the 3D scene."
msgstr ""
"この例では，複数のチャートを同じレンダラーでオーバーレイとして組み合わせる方法を示します．使用できるさまざまなチャートタイプの概要については， "
":ref:`chart_basics_example` "
"を参照してください．チャートとのインタラクションは，チャートの上でダブル左クリックすることで有効になります．この場合，3Dシーンとのインタラクションは無効になりますのでご注意ください．チャートとのインタラクションを止めるには，もう一度ダブル左クリックしてください．これにより，別のチャートとのインタラクションが可能になるか（チャートの上でクリックした場合），3Dシーンとのインタラクションが再び可能になります．"

#: ../../pyvista/doc/source/examples/02-plot/chart_overlays.rst:54
msgid "Data to display"
msgstr "表示するデータ"

#: ../../pyvista/doc/source/examples/02-plot/chart_overlays.rst:73
msgid ""
"Define a Matplotlib figure. Use a tight layout to keep axis labels visible "
"on smaller figures."
msgstr "Matplotlibの図の定義．小さい図で軸ラベルが見えるようにタイトなレイアウトを使います．"

#: ../../pyvista/doc/source/examples/02-plot/chart_overlays.rst:96
msgid ""
"Define plotter, add the created matplotlib figure as the first (left) chart "
"to the scene, and define a second (right) chart."
msgstr "プロッターを定義し，作成されたmatplotlibの図を1枚目（左）のチャートとしてシーンに追加し，2枚目（右）のチャートを定義します．"

#: ../../pyvista/doc/source/examples/02-plot/chart_overlays.rst:161
msgid "**Total running time of the script:** ( 0 minutes  3.695 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  3.695 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/chart_overlays.rst:173
msgid ""
":download:`Download Python source code: chart_overlays.py "
"<chart_overlays.py>`"
msgstr ""
":download:`Download Python source code: chart_overlays.py "
"<chart_overlays.py>`"

#: ../../pyvista/doc/source/examples/02-plot/chart_overlays.rst:177
msgid ""
":download:`Download Jupyter notebook: chart_overlays.ipynb "
"<chart_overlays.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: chart_overlays.ipynb "
"<chart_overlays.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/clear.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_clear.py>` to "
"download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_clear.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/clear.rst:22
msgid "Clearing a Mesh or the Entire Plot"
msgstr "メッシュまたはプロット全体の消去"

#: ../../pyvista/doc/source/examples/02-plot/clear.rst:24
msgid "This example demonstrates how to remove elements from a scene."
msgstr "この例では，シーンから要素を削除する方法を示します．"

#: ../../pyvista/doc/source/examples/02-plot/clear.rst:65
msgid "Clearing the entire plotting window:"
msgstr "プロットウィンドウ全体をクリアする:"

#: ../../pyvista/doc/source/examples/02-plot/clear.rst:93
msgid ""
"Or you can give any actor a ``name`` when adding it and if an actor is added"
" with that same name at a later time, it will replace the previous actor:"
msgstr "または，追加するときに任意のアクターに ``name`` を指定し，アクターが後で同じ名前で追加された場合に，前のアクターを置き換えます:"

#: ../../pyvista/doc/source/examples/02-plot/clear.rst:121
msgid "**Total running time of the script:** ( 0 minutes  0.399 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  0.399 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/clear.rst:135
msgid ":download:`Download Python source code: clear.py <clear.py>`"
msgstr ":download:`Download Python source code: clear.py <clear.py>`"

#: ../../pyvista/doc/source/examples/02-plot/clear.rst:139
msgid ":download:`Download Jupyter notebook: clear.ipynb <clear.ipynb>`"
msgstr ":download:`Download Jupyter notebook: clear.ipynb <clear.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/cmap.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_cmap.py>` to "
"download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_cmap.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/cmap.rst:24
msgid "Colormap Choices"
msgstr "カラーマップの選択肢"

#: ../../pyvista/doc/source/examples/02-plot/cmap.rst:26
msgid ""
"Use a Matplotlib, Colorcet, cmocean, or custom colormap when plotting scalar"
" values."
msgstr "スカラー値をプロットする場合は，Matplotlib，Colorcet，cmocean，またはカスタムカラーマップを使用します．"

#: ../../pyvista/doc/source/examples/02-plot/cmap.rst:50
msgid ""
"Any colormap built for ``matplotlib``, ``colorcet``, or ``cmocean`` is fully"
" compatible with PyVista. Colormaps are typically specified by passing the "
"string name of the colormap to the plotting routine via the ``cmap`` "
"argument."
msgstr ""
"``matplotlib`` ， ``colorcet`` ， ``cmocean`` "
"用に作成されたカラーマップはすべてPyVistaと完全に互換性があります．カラーマップは通常， ``cmap`` "
"引数によってカラーマップの文字列名をプロットルーチンに渡すことで指定します．"

#: ../../pyvista/doc/source/examples/02-plot/cmap.rst:55
msgid ""
"See `Matplotlib's complete list of available colormaps`_, `Colorcet's "
"complete list`_, and `cmocean's complete list`_."
msgstr ""
"`Matplotlib's complete list of available colormaps`_ ， `Colorcet's complete "
"list`_ および `cmocean's complete list`_ を参照．"

#: ../../pyvista/doc/source/examples/02-plot/cmap.rst:65
msgid "Custom Made Colormaps"
msgstr "カスタムメイドのカラーマップ"

#: ../../pyvista/doc/source/examples/02-plot/cmap.rst:67
msgid ""
"To get started using a custom colormap, download some data with scalar "
"values to plot."
msgstr "カスタムのカラーマップを使い始めるには，スカラー値を含むデータをダウンロードしてプロットします．"

#: ../../pyvista/doc/source/examples/02-plot/cmap.rst:88
msgid ""
"Build a custom colormap - here we make a colormap with 5 discrete colors and"
" we specify the ranges where those colors fall:"
msgstr "独自のカラーマップを作成します．ここでは，5つの個別の色を持つカラーマップを作成し，それらの色の範囲を指定します:"

#: ../../pyvista/doc/source/examples/02-plot/cmap.rst:123
msgid "Simply pass the colormap to the plotting routine."
msgstr "単にカラーマップを描画ルーチンに渡すだけです．"

#: ../../pyvista/doc/source/examples/02-plot/cmap.rst:145
msgid ""
"Or you could make a simple colormap... any Matplotlib colormap can be passed"
" to PyVista."
msgstr "あるいは，簡単なカラーマップを作ることもできます...どんなMatplotlibカラーマップでもPyVistaに渡すことができます．"

#: ../../pyvista/doc/source/examples/02-plot/cmap.rst:176
msgid ""
"You can also pass a list of color strings to the color map.  This approach "
"divides up the colormap into 5 equal parts."
msgstr "カラー文字列のリストをカラーマップに渡すこともできます．この方法では，カラーマップは5等分されます．"

#: ../../pyvista/doc/source/examples/02-plot/cmap.rst:199
msgid ""
"If you still wish to have control of the separation of values, you can do "
"this by creating a scalar array and passing that to the plotter along with "
"the colormap"
msgstr "値の分離を制御したい場合は，スカラー配列を作成し，それをカラーマップとともにプロッタに渡すことで制御できます．"

#: ../../pyvista/doc/source/examples/02-plot/cmap.rst:231
msgid "Matplotlib vs. Colorcet"
msgstr "Matplotlib対Colorcet"

#: ../../pyvista/doc/source/examples/02-plot/cmap.rst:233
msgid ""
"Let's compare Colorcet's perceptually uniform \"fire\" colormap to "
"Matplotlib's \"hot\" colormap much like the example on the `first page of "
"Colorcet's docs`_."
msgstr ""
"Colorcetの知覚的に一様な \"fire\" カラーマップとMatplotlibの \"hot\" カラーマップを `first page of "
"Colorcet's docs`_ の例のように比較してみましょう．"

#: ../../pyvista/doc/source/examples/02-plot/cmap.rst:238
msgid ""
"The \"hot\" version washes out detail at the high end, as if the image is "
"overexposed, while \"fire\" makes detail visible throughout the data range."
msgstr ""
"\"hot\" バージョンは，画像が露出オーバーであるかのようにハイエンドのディテールを洗い流しますが， \"fire\" "
"バージョンは，データ範囲を通してディテールを可視化します．"

#: ../../pyvista/doc/source/examples/02-plot/cmap.rst:241
msgid ""
"Please note that in order to use Colorcet's colormaps including \"fire\", "
"you must have Colorcet installed in your Python environment: ``pip install "
"colorcet``"
msgstr ""
"\"fire\" "
"を含むColorcetのカラーマップを使用するには，Python環境にColorcetをインストールしておく必要があることに注意してください: "
"``pip install colorcet``"

#: ../../pyvista/doc/source/examples/02-plot/cmap.rst:303
msgid "**Total running time of the script:** ( 0 minutes  3.340 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  3.340 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/cmap.rst:317
msgid ":download:`Download Python source code: cmap.py <cmap.py>`"
msgstr ":download:`Download Python source code: cmap.py <cmap.py>`"

#: ../../pyvista/doc/source/examples/02-plot/cmap.rst:321
msgid ":download:`Download Jupyter notebook: cmap.ipynb <cmap.ipynb>`"
msgstr ":download:`Download Jupyter notebook: cmap.ipynb <cmap.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/color_cycler.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_color_cycler.py>` to"
" download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_color_cycler.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/color_cycler.rst:24
msgid "Color Cycling"
msgstr "カラーサイクリング"

#: ../../pyvista/doc/source/examples/02-plot/color_cycler.rst:26
msgid "Cycle through colors when sequentially adding meshes to a plotter."
msgstr "プロッターにメッシュを順次追加する際に，色を循環させるようにしました．"

#: ../../pyvista/doc/source/examples/02-plot/color_cycler.rst:30
msgid ""
"Many plotting libraries like Matplotlib cycle through a predefined list of "
"colors to colorize the data being added to the graphic. PyVista supports "
"this in much the same way as Matplotlib."
msgstr ""
"Matplotlibのような多くのプロットライブラリは，あらかじめ定義された色のリストを循環して，グラフィックに追加されるデータを色付けします．PyVistaは，Matplotlibとほぼ同じ方法でこれをサポートしています．"

#: ../../pyvista/doc/source/examples/02-plot/color_cycler.rst:50
msgid ""
"Turn on color cycling in PyVista's theme and set it to use the default "
"cycler."
msgstr "PyVistaのテーマでカラーサイクリングをオンにして，デフォルトのサイクラーを使用するように設定します．"

#: ../../pyvista/doc/source/examples/02-plot/color_cycler.rst:68
msgid "List the available colors in the cycler"
msgstr "サイクラーで使用できる色の一覧"

#: ../../pyvista/doc/source/examples/02-plot/color_cycler.rst:81
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><th>'color'</th><tr><td>'#1f77b4'</td></tr><tr><td>'#ff7f0e'</td></tr><tr><td>'#2ca02c'</td></tr><tr><td>'#d62728'</td></tr><tr><td>'#9467bd'</td></tr><tr><td>'#8c564b'</td></tr><tr><td>'#e377c2'</td></tr><tr><td>'#7f7f7f'</td></tr><tr><td>'#bcbd22'</td></tr><tr><td>'#17becf'</td></tr></table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><th>'color'</th><tr><td>'#1f77b4'</td></tr><tr><td>'#ff7f0e'</td></tr><tr><td>'#2ca02c'</td></tr><tr><td>'#d62728'</td></tr><tr><td>'#9467bd'</td></tr><tr><td>'#8c564b'</td></tr><tr><td>'#e377c2'</td></tr><tr><td>'#7f7f7f'</td></tr><tr><td>'#bcbd22'</td></tr><tr><td>'#17becf'</td></tr></table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/02-plot/color_cycler.rst:91
msgid ""
"Create a plotter and add data to the scene. You'll notice that each "
"``add_mesh`` call iterates over the colors in "
"``pv.global_theme.color_cycler``"
msgstr ""
"プロッタを作成し，シーンにデータを追加します．各 ``add_mesh`` の呼び出しは， "
"``pv.global_theme.color_cycler`` の色に対して反復処理されることが分かります．"

#: ../../pyvista/doc/source/examples/02-plot/color_cycler.rst:119
msgid ""
"Reset the theme to not use a cycler and instead set on individual plotters."
msgstr "サイクラーを使用せず，個々のプロッターに設定するようにテーマを再設定します．"

#: ../../pyvista/doc/source/examples/02-plot/color_cycler.rst:136
msgid ""
"If you do not want to set a global color cycler but instead just want to use"
" a cycler for a single plotter, you can set this on with "
":func:`set_color_cycler() <pyvista.Plotter.set_color_cycler>`."
msgstr ""
"もし，グローバルなカラーサイクラーを設定せず，単一のプロッタのサイクラーを使用したい場合は， :func:`set_color_cycler() "
"<pyvista.Plotter.set_color_cycler>` でこれを設定することができます．"

#: ../../pyvista/doc/source/examples/02-plot/color_cycler.rst:169
msgid ""
"Further, you can control this on a per-renderer basis by calling "
":func:`set_color_cycler() <pyvista.Renderer.set_color_cycler>` on the active"
" ``renderer``."
msgstr ""
"さらに，アクティブな ``renderer`` で :func:`set_color_cycler() "
"<pyvista.Renderer.set_color_cycler>` を呼び出すと，レンダラーごとにこれをコントロールすることができます．"

#: ../../pyvista/doc/source/examples/02-plot/color_cycler.rst:212
msgid ""
"You can also change the colors of actors after they are added to the scene."
msgstr "また，アクターをシーンに追加した後でも，色を変更することができます．"

#: ../../pyvista/doc/source/examples/02-plot/color_cycler.rst:214
msgid ""
"ProTip: you could place the for-loop below in an event callback for a key "
"event to cycle through the colors on-demand. Or better yet, have your cycler"
" randomly select colors."
msgstr ""
"プロによるアドバイス：以下のfor-"
"loopをキーイベントのイベントコールバックに配置すると，オンデマンドで色を循環させることができます．あるいは，サイクラーにランダムに色を選択させるのもよいでしょう．"

#: ../../pyvista/doc/source/examples/02-plot/color_cycler.rst:252
msgid "**Total running time of the script:** ( 0 minutes  1.094 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.094 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/color_cycler.rst:266
msgid ""
":download:`Download Python source code: color_cycler.py <color_cycler.py>`"
msgstr ""
":download:`Download Python source code: color_cycler.py <color_cycler.py>`"

#: ../../pyvista/doc/source/examples/02-plot/color_cycler.rst:270
msgid ""
":download:`Download Jupyter notebook: color_cycler.ipynb "
"<color_cycler.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: color_cycler.ipynb "
"<color_cycler.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/composite-picking.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_composite-picking.py>` "
"to download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_composite-picking.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/composite-picking.rst:24
msgid "Composite Picking"
msgstr "Compositeピッキング"

#: ../../pyvista/doc/source/examples/02-plot/composite-picking.rst:26
msgid ""
"Demonstrate how to pick individual blocks of a :class:`pyvista.MultiBlock` "
"using :func:`pyvista.Plotter.enable_block_picking`."
msgstr ""
":func:`pyvista.Plotter.enable_block_picking` を使用して， "
":class:`pyvista.MultiBlock` の個々のブロックをピックする方法を示します．"

#: ../../pyvista/doc/source/examples/02-plot/composite-picking.rst:47
msgid "Create a MultiBlock Dataset"
msgstr "MultiBlockデータセットの作成"

#: ../../pyvista/doc/source/examples/02-plot/composite-picking.rst:48
msgid ""
"Create 100 superellipsoids using :func:`pyvista.ParametricSuperEllipsoid`"
msgstr ":func:`pyvista.ParametricSuperEllipsoid` を使って100個のスーパーエリプソイドを作成する．"

#: ../../pyvista/doc/source/examples/02-plot/composite-picking.rst:87
msgid "Enable Block Picking"
msgstr "ブロックピッキングを有効にする"

#: ../../pyvista/doc/source/examples/02-plot/composite-picking.rst:88
msgid ""
"Add ``blocks`` to a :class:`pyvista.Plotter` and enable block picking.  For "
"fun, let's also enable physically based rendering and set the callback to "
"set the block color to red when the block is clicked and unset the color if "
"the color has already been set for the block."
msgstr ""
":class:`pyvista.Plotter` に ``blocks`` を追加し，ブロックのピッキングを有効にします． "
"また，物理ベースのレンダリングを有効にして，ブロックがクリックされたときにブロックの色を赤に設定し，ブロックに既に色が設定されている場合は色を解除するようにコールバックを設定します．"

#: ../../pyvista/doc/source/examples/02-plot/composite-picking.rst:128
msgid "**Total running time of the script:** ( 0 minutes  2.737 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  2.737 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/composite-picking.rst:140
msgid ""
":download:`Download Python source code: composite-picking.py <composite-"
"picking.py>`"
msgstr ""
":download:`Download Python source code: composite-picking.py <composite-"
"picking.py>`"

#: ../../pyvista/doc/source/examples/02-plot/composite-picking.rst:144
msgid ""
":download:`Download Jupyter notebook: composite-picking.ipynb <composite-"
"picking.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: composite-picking.ipynb <composite-"
"picking.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/depth-peeling.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_depth-peeling.py>` "
"to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_depth-peeling.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/depth-peeling.rst:24
msgid "Depth Peeling"
msgstr "Depth Peeling"

#: ../../pyvista/doc/source/examples/02-plot/depth-peeling.rst:25
msgid ""
"Depth peeling is a technique to correctly render translucent geometry.  This"
" is not enabled by default in :attr:`pyvista.global_theme "
"<pyvista.plotting.themes.Theme>` as some operating systems and versions of "
"VTK have issues with this routine."
msgstr ""
"深さのピーリングは，半透明のジオメトリを正しくレンダーするテクニックです．いくつかのオペレーティングシステムとVTKのバージョンはこのルーチンで問題があるので，"
"  :attr:`pyvista.global_theme <pyvista.plotting.themes.Theme>`  "
"ではデフォルトで有効になっていません．"

#: ../../pyvista/doc/source/examples/02-plot/depth-peeling.rst:30
msgid ""
"For this example, we will showcase the difference that depth peeling "
"provides."
msgstr "この例では，深度ピーリングによって得られる違いを示します．"

#: ../../pyvista/doc/source/examples/02-plot/depth-peeling.rst:99
msgid ""
"The following room surfaces example mesh, provided courtesy of `Sam Potter "
"<https://github.com/sampotter>`_ has coincident topology and depth rendering"
" helps correctly render those geometries when a global opacity value is "
"used."
msgstr ""
"次の部屋のサーフェスの例では， `Sam Potter <https://github.com/sampotter>`_ "
"によって提供されたメッシュは，トポロジが一致しており，グローバル不透明度値が使用されている場合に，深度レンダリングがこれらのジオメトリを正しくレンダリングするのに役立ちます．"

#: ../../pyvista/doc/source/examples/02-plot/depth-peeling.rst:141
msgid ""
"And here is another example wheen rendering many translucent contour "
"surfaces."
msgstr "次に，多くの半透明のコンタサーフェスをレンダリングする別の例を示します．"

#: ../../pyvista/doc/source/examples/02-plot/depth-peeling.rst:180
msgid "**Total running time of the script:** ( 1 minutes  23.405 seconds)"
msgstr "**Total running time of the script:** ( 1 minutes  23.405 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/depth-peeling.rst:194
msgid ""
":download:`Download Python source code: depth-peeling.py <depth-peeling.py>`"
msgstr ""
":download:`Download Python source code: depth-peeling.py <depth-peeling.py>`"

#: ../../pyvista/doc/source/examples/02-plot/depth-peeling.rst:198
msgid ""
":download:`Download Jupyter notebook: depth-peeling.ipynb <depth-"
"peeling.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: depth-peeling.ipynb <depth-"
"peeling.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/depth_of_field.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_depth_of_field.py>` "
"to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_depth_of_field.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/depth_of_field.rst:24
msgid "Depth of Field Plotting"
msgstr "被写界深度のプロット"

#: ../../pyvista/doc/source/examples/02-plot/depth_of_field.rst:26
msgid ""
"This example shows how you can use :func:`enable_depth_of_field "
"<pyvista.Plotter.enable_depth_of_field>` to highlight part of your plot."
msgstr ""
"この例では， :func:`enable_depth_of_field <pyvista.Plotter.enable_depth_of_field>`"
" でプロットの一部を強調する方法を示しています．"

#: ../../pyvista/doc/source/examples/02-plot/depth_of_field.rst:49
msgid "Generate a bunch of bunnies"
msgstr "うさぎたちを大量に生成する"

#: ../../pyvista/doc/source/examples/02-plot/depth_of_field.rst:50
msgid ""
"Create many bunnies using the :func:`glyph <pyvista.DataSetFilters.glyph>` "
"filter."
msgstr ""
":func:`glyph <pyvista.DataSetFilters.glyph>` フィルターを使用して，たくさんのうさぎを作成します．"

#: ../../pyvista/doc/source/examples/02-plot/depth_of_field.rst:75
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>2500236</td></tr>\n"
"<tr><td>N Points</td><td>1294092</td></tr>\n"
"<tr><td>N Strips</td><td>0</td></tr>\n"
"<tr><td>X Bounds</td><td>-2.475e-01, 9.235e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>-3.788e-01, 2.244e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>1.319e-01, 2.749e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>0</td></tr>\n"
"</table>\n"
"\n"
"\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>2500236</td></tr>\n"
"<tr><td>N Points</td><td>1294092</td></tr>\n"
"<tr><td>N Strips</td><td>0</td></tr>\n"
"<tr><td>X Bounds</td><td>-2.475e-01, 9.235e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>-3.788e-01, 2.244e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>1.319e-01, 2.749e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>0</td></tr>\n"
"</table>\n"
"\n"
"\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/02-plot/depth_of_field.rst:98
msgid "Show the plot without enabling depth of field"
msgstr "被写界深度を有効にせずにプロットを表示する"

#: ../../pyvista/doc/source/examples/02-plot/depth_of_field.rst:142
msgid "Show the plot while enabling depth of field"
msgstr "被写界深度を有効にした状態でプロットを表示する"

#: ../../pyvista/doc/source/examples/02-plot/depth_of_field.rst:172
msgid "**Total running time of the script:** ( 1 minutes  35.915 seconds)"
msgstr "**Total running time of the script:** ( 1 minutes  35.915 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/depth_of_field.rst:186
msgid ""
":download:`Download Python source code: depth_of_field.py "
"<depth_of_field.py>`"
msgstr ""
":download:`Download Python source code: depth_of_field.py "
"<depth_of_field.py>`"

#: ../../pyvista/doc/source/examples/02-plot/depth_of_field.rst:190
msgid ""
":download:`Download Jupyter notebook: depth_of_field.ipynb "
"<depth_of_field.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: depth_of_field.ipynb "
"<depth_of_field.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/distance-along-spline.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_distance-along-"
"spline.py>` to download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_distance-along-"
"spline.py>` をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/distance-along-spline.rst:24
msgid "Label based on Distance on Line"
msgstr "線上の距離に応じたラベル"

#: ../../pyvista/doc/source/examples/02-plot/distance-along-spline.rst:26
msgid ""
"Create a spline and generate labels along the spline based on distance along"
" a spline."
msgstr "スプラインを作成し，スプラインに沿った距離に基づいてラベルを生成します．"

#: ../../pyvista/doc/source/examples/02-plot/distance-along-spline.rst:29
msgid "This is an extension of the :ref:`create_spline_example`."
msgstr "これは :ref:`create_spline_example` を拡張したものです．"

#: ../../pyvista/doc/source/examples/02-plot/distance-along-spline.rst:50
msgid "Create a spline"
msgstr "スプラインの作成"

#: ../../pyvista/doc/source/examples/02-plot/distance-along-spline.rst:51
msgid "Create a spline using :func:`pyvista.Spline`."
msgstr ":func:`pyvista.Spline` を使用して，スプラインを作成します．"

#: ../../pyvista/doc/source/examples/02-plot/distance-along-spline.rst:97
msgid "Determine the coordinates matching distance along a spline"
msgstr "スプラインに沿った座標の一致距離を求める"

#: ../../pyvista/doc/source/examples/02-plot/distance-along-spline.rst:98
msgid ""
"Here we write a simple function that gets the closest point matching a "
"distance along a spline and then generate labels for those points."
msgstr "ここでは，スプラインに沿った距離に最も近い点を取得し，それらの点のラベルを生成する簡単な関数を記述します．"

#: ../../pyvista/doc/source/examples/02-plot/distance-along-spline.rst:143
msgid "Plot with Labels"
msgstr "ラベルを使ったプロット"

#: ../../pyvista/doc/source/examples/02-plot/distance-along-spline.rst:144
msgid "Plot the spline with labeled points"
msgstr "ラベル付き点数でスプラインをプロットする"

#: ../../pyvista/doc/source/examples/02-plot/distance-along-spline.rst:175
msgid "**Total running time of the script:** ( 0 minutes  0.595 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  0.595 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/distance-along-spline.rst:190
msgid ""
":download:`Download Python source code: distance-along-spline.py <distance-"
"along-spline.py>`"
msgstr ""
":download:`Download Python source code: distance-along-spline.py <distance-"
"along-spline.py>`"

#: ../../pyvista/doc/source/examples/02-plot/distance-along-spline.rst:196
msgid ""
":download:`Download Jupyter notebook: distance-along-spline.ipynb <distance-"
"along-spline.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: distance-along-spline.ipynb <distance-"
"along-spline.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/distance_measurement.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_examples_02-plot_distance_measurement.py>` to download "
"the full example code"
msgstr ""
":ref:`Go to the end "
"<sphx_glr_download_examples_02-plot_distance_measurement.py>` to download "
"the full example code"

#: ../../pyvista/doc/source/examples/02-plot/distance_measurement.rst:24
msgid "Measuring distance"
msgstr "距離を測る"

#: ../../pyvista/doc/source/examples/02-plot/distance_measurement.rst:25
msgid ""
"This example demonstrates how to measure distance between two points. "
":func:`add_measurement_widget() <pyvista.Plotter.add_measurement_widget>`."
msgstr ""
"この例では、2点間の距離を測定する方法を示しています． :func:`add_measurement_widget() "
"<pyvista.Plotter.add_measurement_widget>`."

#: ../../pyvista/doc/source/examples/02-plot/distance_measurement.rst:63
msgid "**Total running time of the script:** ( 0 minutes  0.509 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  0.509 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/distance_measurement.rst:77
msgid ""
":download:`Download Python source code: distance_measurement.py "
"<distance_measurement.py>`"
msgstr ""
":download:`Download Python source code: distance_measurement.py "
"<distance_measurement.py>`"

#: ../../pyvista/doc/source/examples/02-plot/distance_measurement.rst:81
msgid ""
":download:`Download Jupyter notebook: distance_measurement.ipynb "
"<distance_measurement.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: distance_measurement.ipynb "
"<distance_measurement.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/edges.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_edges.py>` to download "
"the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_02-plot_edges.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/edges.rst:24
msgid "Show Edges"
msgstr "エッジを表示"

#: ../../pyvista/doc/source/examples/02-plot/edges.rst:26
msgid "Show the edges of all geometries within a mesh"
msgstr "メッシュ内のすべてのジオメトリのエッジを表示"

#: ../../pyvista/doc/source/examples/02-plot/edges.rst:30
msgid ""
"Sometimes it can be useful to show all of the edges of a mesh when rendering"
" to communicate aspects of the dataset like resolution."
msgstr "レンダリング時にメッシュのすべてのエッジを表示して，解像度などのデータセットの側面を伝えると便利な場合があります．"

#: ../../pyvista/doc/source/examples/02-plot/edges.rst:33
msgid ""
"Showing the edges for any rendered dataset is as simple as specifying the "
"the ``show_edges`` keyword argument to ``True`` when plotting a dataset."
msgstr ""
"レンダリングされたデータセットのエッジを表示するには，データセットをプロットするときに ``True`` に ``show_edges`` "
"キーワード引数を指定するだけです．"

#: ../../pyvista/doc/source/examples/02-plot/edges.rst:70
msgid "**Total running time of the script:** ( 0 minutes  5.314 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  5.314 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/edges.rst:85
msgid ":download:`Download Python source code: edges.py <edges.py>`"
msgstr ":download:`Download Python source code: edges.py <edges.py>`"

#: ../../pyvista/doc/source/examples/02-plot/edges.rst:91
msgid ":download:`Download Jupyter notebook: edges.ipynb <edges.ipynb>`"
msgstr ":download:`Download Jupyter notebook: edges.ipynb <edges.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/edl.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_edl.py>` to download"
" the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_edl.py>` to download"
" the full example code"

#: ../../pyvista/doc/source/examples/02-plot/edl.rst:24
msgid "Eye Dome Lighting"
msgstr "Eye Dome Lighting"

#: ../../pyvista/doc/source/examples/02-plot/edl.rst:26
msgid ""
"Eye-Dome Lighting (EDL) is a non-photorealistic, image-based shading "
"technique designed to improve depth perception in scientific visualization "
"images. To learn more, please see `this blog post`_."
msgstr ""
"Eye‐Dome Lighting (EDL) "
"は，科学的可視化画像における奥行き知覚を改善するために設計された非フォトリアリスティック，画像ベースシェーディングテクニックです．詳しくは `this "
"blog post`_ をご覧ください．"

#: ../../pyvista/doc/source/examples/02-plot/edl.rst:50
msgid "Statue"
msgstr "像"

#: ../../pyvista/doc/source/examples/02-plot/edl.rst:52
msgid ""
"Eye-Dome Lighting can dramatically improve depth perception when plotting "
"incredibly sophisticated meshes like the creative commons Queen Nefertiti "
"statue:"
msgstr ""
"Eye-Dome "
"Lightingは，クリエイティブ・コモンズのNefertiti女王像のような非常に洗練されたメッシュを描画するときに，奥行きの知覚を劇的に向上させることができます．"

#: ../../pyvista/doc/source/examples/02-plot/edl.rst:78
msgid "Here we will compare a EDL shading side by side with normal shading"
msgstr "ここでは，EDLシェーディングと通常のシェーディングを並べて比較します．"

#: ../../pyvista/doc/source/examples/02-plot/edl.rst:117
msgid "Point Cloud"
msgstr "点群"

#: ../../pyvista/doc/source/examples/02-plot/edl.rst:119
msgid ""
"When plotting a simple point cloud, it can be difficult to perceive depth. "
"Take this Lidar point cloud for example:"
msgstr "単純な点群を印刷する場合，深さを認識するのが難しいことがあります．このライダーポイントクラウドを例にとってみましょう．"

#: ../../pyvista/doc/source/examples/02-plot/edl.rst:139
msgid "And now plot this point cloud as-is:"
msgstr "次に，この点群をそのままプロットします:"

#: ../../pyvista/doc/source/examples/02-plot/edl.rst:166
msgid ""
"We can improve the depth mapping by enabling eye dome lighting on the "
"renderer with :func:`pyvista.Renderer.enable_eye_dome_lighting`."
msgstr ""
":func:`pyvista.Renderer.enable_eye_dome_lighting` "
"を使用してレンダラーで目のドーム照明を有効にすることで，深度マッピングを改善できます．"

#: ../../pyvista/doc/source/examples/02-plot/edl.rst:195
msgid "The eye dome lighting mode can also handle plotting scalar arrays:"
msgstr "Eye Dome Lightingモードでは，スカラー配列のプロットも処理できます．"

#: ../../pyvista/doc/source/examples/02-plot/edl.rst:222
msgid "**Total running time of the script:** (1 minutes 20.508 seconds)"
msgstr "**Total running time of the script:** (1 minutes 20.508 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/edl.rst:236
msgid ":download:`Download Python source code: edl.py <edl.py>`"
msgstr ":download:`Download Python source code: edl.py <edl.py>`"

#: ../../pyvista/doc/source/examples/02-plot/edl.rst:240
msgid ":download:`Download Jupyter notebook: edl.ipynb <edl.ipynb>`"
msgstr ":download:`Download Jupyter notebook: edl.ipynb <edl.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/element-picking.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_element-picking.py>`"
" to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_element-picking.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/element-picking.rst:24
msgid "Picking elements of a mesh"
msgstr "メッシュの要素をピックする"

#: ../../pyvista/doc/source/examples/02-plot/element-picking.rst:25
msgid ""
"This example demonstrates how to pick different elements on meshes using "
":func:`enable_element_picking() <pyvista.Plotter.enable_element_picking>`."
msgstr ""
"この例では， :func:`enable_element_picking() "
"<pyvista.Plotter.enable_element_picking>` を使って，メッシュ上の異なる要素をピックする方法を示します．"

#: ../../pyvista/doc/source/examples/02-plot/element-picking.rst:28
msgid "The different elements of a mesh are:"
msgstr "メッシュのさまざまな要素は次のとおりです:"

#: ../../pyvista/doc/source/examples/02-plot/element-picking.rst:30
msgid ""
"Mesh: pick the entire mesh (equivalent to :func:`enable_mesh_picking() "
"<pyvista.Plotter.enable_mesh_picking>`.)"
msgstr ""
"Mesh: メッシュ全体をピックします( :func:`enable_mesh_picking() "
"<pyvista.Plotter.enable_mesh_picking>` と同じ．)"

#: ../../pyvista/doc/source/examples/02-plot/element-picking.rst:31
msgid ""
"Cell: pick a cell of the mesh (equivalent to :func:`enable_cell_picking() "
"<pyvista.Plotter.enable_cell_picking>`.)"
msgstr ""
"Cell: メッシュのセルをピックします( :func:`enable_cell_picking() "
"<pyvista.Plotter.enable_cell_picking>` と同じ．)"

#: ../../pyvista/doc/source/examples/02-plot/element-picking.rst:32
msgid "Face: pick a single face of a cell on the mesh"
msgstr "Face: メッシュのセルの1つの面をピックします"

#: ../../pyvista/doc/source/examples/02-plot/element-picking.rst:33
msgid "Edge: pick a single edge of a cell on the mesh"
msgstr "Edge: メッシュのセルの1つの端をピックします"

#: ../../pyvista/doc/source/examples/02-plot/element-picking.rst:34
msgid "Point: pick a single point on the mesh"
msgstr "Point: メッシュの1点をピックします"

#: ../../pyvista/doc/source/examples/02-plot/element-picking.rst:36
msgid ""
"These types are captured in the :class:`pyvista.plotting.opts.ElementType` "
"enum class."
msgstr "これらの型は :class:`pyvista.plotting.opts.ElementType` に含まれています．"

#: ../../pyvista/doc/source/examples/02-plot/element-picking.rst:56
msgid "Pick Face on Voxel Cell"
msgstr "ボクセルセルの面をピックする"

#: ../../pyvista/doc/source/examples/02-plot/element-picking.rst:101
msgid "Pick an Edge of a Cell"
msgstr "セルの端を選ぶ"

#: ../../pyvista/doc/source/examples/02-plot/element-picking.rst:145
msgid "**Total running time of the script:** ( 0 minutes  1.244 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.244 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/element-picking.rst:159
msgid ""
":download:`Download Python source code: element-picking.py <element-"
"picking.py>`"
msgstr ""
":download:`Download Python source code: element-picking.py <element-"
"picking.py>`"

#: ../../pyvista/doc/source/examples/02-plot/element-picking.rst:163
msgid ""
":download:`Download Jupyter notebook: element-picking.ipynb <element-"
"picking.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: element-picking.ipynb <element-"
"picking.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/floors.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_floors.py>` to download"
" the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_02-plot_floors.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/floors.rst:24
msgid "Plot with Floors"
msgstr "床を使用してプロットする"

#: ../../pyvista/doc/source/examples/02-plot/floors.rst:26
msgid "Add a floor/wall at the boundary of the rendering scene."
msgstr "レンダリングシーンの境界に床/壁を追加します．"

#: ../../pyvista/doc/source/examples/02-plot/floors.rst:58
msgid "**Total running time of the script:** ( 0 minutes  4.119 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  4.119 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/floors.rst:73
msgid ":download:`Download Python source code: floors.py <floors.py>`"
msgstr ":download:`Download Python source code: floors.py <floors.py>`"

#: ../../pyvista/doc/source/examples/02-plot/floors.rst:79
msgid ":download:`Download Jupyter notebook: floors.ipynb <floors.ipynb>`"
msgstr ":download:`Download Jupyter notebook: floors.ipynb <floors.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/ghost-cells.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_ghost-cells.py>` to "
"download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_02-plot_ghost-cells.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/ghost-cells.rst:22
msgid "Hide Cells with Ghosting"
msgstr "ゴーストを使用してセルを非表示にする"

#: ../../pyvista/doc/source/examples/02-plot/ghost-cells.rst:24
msgid "Specify specific cells to hide when plotting."
msgstr "印刷時に非表示にする特定のセルを指定します．"

#: ../../pyvista/doc/source/examples/02-plot/ghost-cells.rst:26
msgid ""
"This is a lightweight alternative to thresholding to quickly hide cells in a"
" mesh without creating a new mesh."
msgstr "これは，新しいメッシュを作成せずにメッシュ内のセルをすばやく非表示にするための，しきい値の代わりとなる軽量のオプションです．"

#: ../../pyvista/doc/source/examples/02-plot/ghost-cells.rst:29
msgid ""
"Notably, the mesh must be cast to an :class:`pyvista.UnstructuredGrid` type "
"for this to work (use the ``cast_to_unstructured_grid`` filter)."
msgstr ""
"特に，これが機能するためにはメッシュを :class:`pyvista.UnstructuredGrid` 型にキャストする必要があります( "
"``cast_to_unstructured_grid`` フィルターを使用する)．"

#: ../../pyvista/doc/source/examples/02-plot/ghost-cells.rst:52
msgid ""
"Decide which cells are ghosted with a criteria (feel free to adjust this or "
"manually create this array to hide specific cells)."
msgstr "基準を使用してゴースト化するセルを決定します(この配列を自由に調整するか，手動で作成して特定のセルを非表示にします)．"

#: ../../pyvista/doc/source/examples/02-plot/ghost-cells.rst:69
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>UnstructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>1065589</td></tr>\n"
"<tr><td>N Points</td><td>1336015</td></tr>\n"
"<tr><td>X Bounds</td><td>0.000e+00, 2.500e+02</td></tr>\n"
"<tr><td>Y Bounds</td><td>0.000e+00, 2.500e+02</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 1.000e+02</td></tr>\n"
"<tr><td>N Arrays</td><td>2</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td>facies</td><td>Cells</td><td>int64</td><td>1</td><td>1.000e+00</td><td>4.000e+00</td></tr>\n"
"<tr><td><b>vtkGhostType</b></td><td>Cells</td><td>uint8</td><td>1</td><td>0.000e+00</td><td>0.000e+00</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>UnstructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>1065589</td></tr>\n"
"<tr><td>N Points</td><td>1336015</td></tr>\n"
"<tr><td>X Bounds</td><td>0.000e+00, 2.500e+02</td></tr>\n"
"<tr><td>Y Bounds</td><td>0.000e+00, 2.500e+02</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 1.000e+02</td></tr>\n"
"<tr><td>N Arrays</td><td>2</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td>facies</td><td>Cells</td><td>int64</td><td>1</td><td>1.000e+00</td><td>4.000e+00</td></tr>\n"
"<tr><td><b>vtkGhostType</b></td><td>Cells</td><td>uint8</td><td>1</td><td>0.000e+00</td><td>0.000e+00</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/02-plot/ghost-cells.rst:97
msgid "Now we can plot the mesh and those cells will be hidden"
msgstr "メッシュをプロットすると，これらのセルは非表示になります．"

#: ../../pyvista/doc/source/examples/02-plot/ghost-cells.rst:119
msgid "**Total running time of the script:** ( 0 minutes  6.624 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  6.624 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/ghost-cells.rst:134
msgid ""
":download:`Download Python source code: ghost-cells.py <ghost-cells.py>`"
msgstr ""
":download:`Download Python source code: ghost-cells.py <ghost-cells.py>`"

#: ../../pyvista/doc/source/examples/02-plot/ghost-cells.rst:140
msgid ""
":download:`Download Jupyter notebook: ghost-cells.ipynb <ghost-cells.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: ghost-cells.ipynb <ghost-cells.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/gif.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_gif.py>` to download"
" the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_gif.py>` to download"
" the full example code"

#: ../../pyvista/doc/source/examples/02-plot/gif.rst:24
msgid "Create a GIF Movie"
msgstr "GIFムービーの作成"

#: ../../pyvista/doc/source/examples/02-plot/gif.rst:25
msgid "Generate a moving gif from an active plotter."
msgstr "アクティブなプロッタから動くgifを生成します．"

#: ../../pyvista/doc/source/examples/02-plot/gif.rst:28
msgid ""
"Use ``lighting=False`` to reduce the size of the color space to avoid "
"\"jittery\" GIFs, especially for the scalar bar."
msgstr ""
"特にスカラーバーでは，\"jittery\" な GIF を避けるために，``lighting=False`` "
"を使って色空間のサイズを小さくしてください．"

#: ../../pyvista/doc/source/examples/02-plot/gif.rst:50
#: ../../pyvista/doc/source/examples/02-plot/spherical.rst:106
msgid "Create a structured grid"
msgstr "構造化グリッドの作成"

#: ../../pyvista/doc/source/examples/02-plot/gif.rst:51
msgid ""
"Create a structured grid and make a \"wave\" my shifting the Z position "
"based on the cartesian distance from the origin."
msgstr "構造化されたグリッドを作成し，原点からのデカルト距離に基づいてZ位置をシフトする \"波\" を作ります．"

#: ../../pyvista/doc/source/examples/02-plot/gif.rst:85
msgid "Generate a GIF"
msgstr "GIFを生成する "

#: ../../pyvista/doc/source/examples/02-plot/gif.rst:86
msgid "Generate a GIF using ``off_screen=True`` parameter."
msgstr "``off_screen=True`` パラメータを使用してGIFを生成します．"

#: ../../pyvista/doc/source/examples/02-plot/gif.rst:137
msgid "**Total running time of the script:** ( 0 minutes  3.269 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  3.269 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/gif.rst:151
msgid ":download:`Download Python source code: gif.py <gif.py>`"
msgstr ":download:`Download Python source code: gif.py <gif.py>`"

#: ../../pyvista/doc/source/examples/02-plot/gif.rst:155
msgid ":download:`Download Jupyter notebook: gif.ipynb <gif.ipynb>`"
msgstr ":download:`Download Jupyter notebook: gif.ipynb <gif.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/image_depth.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_image_depth.py>` to "
"download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_02-plot_image_depth.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/image_depth.rst:22
msgid "Render a depth image"
msgstr "デプスイメージをレンダーする"

#: ../../pyvista/doc/source/examples/02-plot/image_depth.rst:24
msgid ""
"Plot a depth image as viewed from a camera overlooking the \"hills\" example"
" mesh."
msgstr "\"丘\"メッシュの例を見ながら，カメラから見た深度イメージをプロットします．"

#: ../../pyvista/doc/source/examples/02-plot/image_depth.rst:58
msgid "Record depth image without and with a custom fill value"
msgstr "カスタム塗り潰し値を使用した場合と使用しない場合の画像深度の記録"

#: ../../pyvista/doc/source/examples/02-plot/image_depth.rst:76
msgid "Visualize depth images"
msgstr "画像深度の可視化"

#: ../../pyvista/doc/source/examples/02-plot/image_depth.rst:128
msgid "**Total running time of the script:** ( 0 minutes  0.573 seconds)"
msgstr "**スクリプトの合計実行時間:** ( 0 分  0.573 秒)"

#: ../../pyvista/doc/source/examples/02-plot/image_depth.rst:140
msgid ""
":download:`Download Python source code: image_depth.py <image_depth.py>`"
msgstr ""
":download:`Download Python source code: image_depth.py <image_depth.py>`"

#: ../../pyvista/doc/source/examples/02-plot/image_depth.rst:144
msgid ""
":download:`Download Jupyter notebook: image_depth.ipynb <image_depth.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: image_depth.ipynb <image_depth.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:6
#: ../../pyvista/doc/source/examples/index.rst:1284
msgid "Plotting"
msgstr "プロット"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:8
#: ../../pyvista/doc/source/examples/index.rst:1286
msgid ""
"These examples show case many of the possibilities for altering how you "
"display spatial data. Explore these examples to learn how to leverage our "
"powerful 3D plotting routines to perform tasks like:"
msgstr ""
"これらの例は，空間データの表示方法を変更する可能性の多くを示しています．次のようなタスクを実行するために，強力な3 "
"Dプロットルーチンを活用する方法については，これらの例を参照してください．"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:12
#: ../../pyvista/doc/source/examples/index.rst:1290
msgid "Color mapping scalar values with ``matplotlib`` colormaps"
msgstr "``matplotlib`` カラーマップを持つカラーマッピングスカラー値"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:13
#: ../../pyvista/doc/source/examples/index.rst:1291
msgid "Creating animations as GIFs or movie files"
msgstr "GIFまたはムービーファイルとしてアニメーションを作成します"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:14
#: ../../pyvista/doc/source/examples/index.rst:1292
msgid "Showing the edges and nodes of different mesh types"
msgstr "異なるメッシュタイプのエッジとノードを表示する"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:15
#: ../../pyvista/doc/source/examples/index.rst:1293
msgid ""
"Use sophisticated lighting techniques like smooth shading or Eye Dome "
"Lighting"
msgstr "スムースシェーディングやアイドームライティングなどの洗練されたライティングテクニックを使用する"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:16
#: ../../pyvista/doc/source/examples/index.rst:1294
msgid ""
"Glyph a vector or scalar field on a mesh (place/orient a mesh on another "
"mesh's nodes and scale/orient based on data values)"
msgstr ""
"メッシュ上のベクトルフィールドまたはスカラーフィールドをグリフします(別のメッシュのノードにメッシュを配置/方向設定し，データ値に基づいてスケール/方向設定します．)"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:17
#: ../../pyvista/doc/source/examples/index.rst:1295
msgid "Label points in 3D space along side your meshes"
msgstr "メッシュの側面に沿って3 D空間でポイントにラベルを付けます"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:18
#: ../../pyvista/doc/source/examples/index.rst:1296
msgid "Creating side-by-side comparisons"
msgstr "並列比較の作成"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:19
#: ../../pyvista/doc/source/examples/index.rst:1297
msgid "Making a dataset transparent or using a scalar value to map opacity"
msgstr "データセットを透明にする，またはスカラー値を使用して不透明度をマップします"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:20
#: ../../pyvista/doc/source/examples/index.rst:1298
msgid "Adding textures/images draped over a mesh (texture mapping)"
msgstr "メッシュ上にまとったテクスチャ/イメージを追加する(テクスチャマッピング)"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:21
#: ../../pyvista/doc/source/examples/index.rst:1299
msgid "Rendering a depth image"
msgstr "デプスイメージをレンダーする"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:30
#: ../../pyvista/doc/source/examples/index.rst:1308
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"PyVista supports three "
"types of anti-aliasing:\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"PyVista supports three "
"types of anti-aliasing:\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:39
#: ../../pyvista/doc/source/examples/index.rst:1317
msgid ":ref:`sphx_glr_examples_02-plot_anti-aliasing.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_anti-aliasing.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:41
#: ../../pyvista/doc/source/examples/index.rst:1319
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Anti-Aliasing</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Anti-Aliasing</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:47
#: ../../pyvista/doc/source/examples/index.rst:1325
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"By default front and "
"backface rendering uses the same properties. In certain situations it can "
"...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"By default front and "
"backface rendering uses the same properties. In certain situations it can "
"...\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:56
#: ../../pyvista/doc/source/examples/index.rst:1334
msgid ":ref:`sphx_glr_examples_02-plot_backface_props.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_backface_props.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:58
#: ../../pyvista/doc/source/examples/index.rst:1336
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Setting Backface Properties</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Setting Backface Properties</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:64
#: ../../pyvista/doc/source/examples/index.rst:1342
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Add a background image with"
" pyvista.Plotter.add_background_image.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Add a background image with"
" pyvista.Plotter.add_background_image.\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:73
#: ../../pyvista/doc/source/examples/index.rst:1351
msgid ":ref:`sphx_glr_examples_02-plot_background_image.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_background_image.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:75
#: ../../pyvista/doc/source/examples/index.rst:1353
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Background Image</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Background Image</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:81
#: ../../pyvista/doc/source/examples/index.rst:1359
msgid "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Blurring\">"
msgstr "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Blurring\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:90
#: ../../pyvista/doc/source/examples/index.rst:1368
msgid ":ref:`sphx_glr_examples_02-plot_blurring.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_blurring.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:92
#: ../../pyvista/doc/source/examples/index.rst:1370
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Blurring</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Blurring</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:98
#: ../../pyvista/doc/source/examples/index.rst:1376
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example demonstrates "
"to show bounds within a pyvista.Plotter using pyvista.Plotter.show_gr...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example demonstrates "
"to show bounds within a pyvista.Plotter using pyvista.Plotter.show_gr...\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:107
#: ../../pyvista/doc/source/examples/index.rst:1385
msgid ":ref:`sphx_glr_examples_02-plot_bounds.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_bounds.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:109
#: ../../pyvista/doc/source/examples/index.rst:1387
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Plotting Bounds</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Plotting Bounds</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:115
#: ../../pyvista/doc/source/examples/index.rst:1393
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example shows how "
"different types of charts can be added to the scene. A more complex "
"exam...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example shows how "
"different types of charts can be added to the scene. A more complex "
"exam...\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:124
#: ../../pyvista/doc/source/examples/index.rst:1402
msgid ":ref:`sphx_glr_examples_02-plot_chart_basics.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_chart_basics.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:126
#: ../../pyvista/doc/source/examples/index.rst:1404
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Chart Basics</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Chart Basics</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:132
#: ../../pyvista/doc/source/examples/index.rst:1410
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example shows how you "
"can combine multiple charts as overlays in the same renderer. For an...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example shows how you "
"can combine multiple charts as overlays in the same renderer. For an...\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:141
#: ../../pyvista/doc/source/examples/index.rst:1419
msgid ":ref:`sphx_glr_examples_02-plot_chart_overlays.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_chart_overlays.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:143
#: ../../pyvista/doc/source/examples/index.rst:1421
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Chart Overlays</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Chart Overlays</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:149
#: ../../pyvista/doc/source/examples/index.rst:1427
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example demonstrates "
"how to remove elements from a scene.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example demonstrates "
"how to remove elements from a scene.\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:158
#: ../../pyvista/doc/source/examples/index.rst:1436
msgid ":ref:`sphx_glr_examples_02-plot_clear.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_clear.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:160
#: ../../pyvista/doc/source/examples/index.rst:1438
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Clearing a Mesh or the Entire Plot</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Clearing a Mesh or the Entire Plot</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:166
#: ../../pyvista/doc/source/examples/index.rst:1444
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Use a Matplotlib, Colorcet,"
" cmocean, or custom colormap when plotting scalar values.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Use a Matplotlib, Colorcet,"
" cmocean, or custom colormap when plotting scalar values.\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:175
#: ../../pyvista/doc/source/examples/index.rst:1453
msgid ":ref:`sphx_glr_examples_02-plot_cmap.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_cmap.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:177
#: ../../pyvista/doc/source/examples/index.rst:1455
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Colormap Choices</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Colormap Choices</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:183
#: ../../pyvista/doc/source/examples/index.rst:1461
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Cycle through colors when "
"sequentially adding meshes to a plotter.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Cycle through colors when "
"sequentially adding meshes to a plotter.\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:192
#: ../../pyvista/doc/source/examples/index.rst:1470
msgid ":ref:`sphx_glr_examples_02-plot_color_cycler.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_color_cycler.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:194
#: ../../pyvista/doc/source/examples/index.rst:1472
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Color Cycling</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Color Cycling</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:200
#: ../../pyvista/doc/source/examples/index.rst:1478
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Demonstrate how to pick "
"individual blocks of a pyvista.MultiBlock using "
"pyvista.Plotter.enable_...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Demonstrate how to pick "
"individual blocks of a pyvista.MultiBlock using "
"pyvista.Plotter.enable_...\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:209
#: ../../pyvista/doc/source/examples/index.rst:1487
msgid ":ref:`sphx_glr_examples_02-plot_composite-picking.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_composite-picking.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:211
#: ../../pyvista/doc/source/examples/index.rst:1489
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Composite Picking</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Composite Picking</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:217
#: ../../pyvista/doc/source/examples/index.rst:1495
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"For this example, we will "
"showcase the difference that depth peeling provides.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"For this example, we will "
"showcase the difference that depth peeling provides.\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:226
#: ../../pyvista/doc/source/examples/index.rst:1504
msgid ":ref:`sphx_glr_examples_02-plot_depth-peeling.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_depth-peeling.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:228
#: ../../pyvista/doc/source/examples/index.rst:1506
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Depth Peeling</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Depth Peeling</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:234
#: ../../pyvista/doc/source/examples/index.rst:1512
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example shows how you "
"can use pyvista.Plotter.enable_depth_of_field to highlight part of y...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example shows how you "
"can use pyvista.Plotter.enable_depth_of_field to highlight part of y...\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:243
#: ../../pyvista/doc/source/examples/index.rst:1521
msgid ":ref:`sphx_glr_examples_02-plot_depth_of_field.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_depth_of_field.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:245
#: ../../pyvista/doc/source/examples/index.rst:1523
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Depth of Field Plotting</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Depth of Field Plotting</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:251
#: ../../pyvista/doc/source/examples/index.rst:1529
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create a spline and "
"generate labels along the spline based on distance along a spline.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create a spline and "
"generate labels along the spline based on distance along a spline.\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:260
#: ../../pyvista/doc/source/examples/index.rst:1538
msgid ":ref:`sphx_glr_examples_02-plot_distance-along-spline.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_distance-along-spline.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:262
#: ../../pyvista/doc/source/examples/index.rst:1540
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Label based on Distance on Line</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Label based on Distance on Line</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:268
#: ../../pyvista/doc/source/examples/index.rst:1546
msgid "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Measuring distance\">"
msgstr "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Measuring distance\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:277
#: ../../pyvista/doc/source/examples/index.rst:1555
msgid ":ref:`sphx_glr_examples_02-plot_distance_measurement.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_distance_measurement.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:279
#: ../../pyvista/doc/source/examples/index.rst:1557
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Measuring distance</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Measuring distance</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:285
#: ../../pyvista/doc/source/examples/index.rst:1563
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Show the edges of all "
"geometries within a mesh\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Show the edges of all "
"geometries within a mesh\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:294
#: ../../pyvista/doc/source/examples/index.rst:1572
msgid ":ref:`sphx_glr_examples_02-plot_edges.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_edges.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:296
#: ../../pyvista/doc/source/examples/index.rst:1574
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Show Edges</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Show Edges</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:302
#: ../../pyvista/doc/source/examples/index.rst:1580
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Eye-Dome Lighting (EDL) is "
"a non-photorealistic, image-based shading technique designed to impr...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Eye-Dome Lighting (EDL) is "
"a non-photorealistic, image-based shading technique designed to impr...\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:311
#: ../../pyvista/doc/source/examples/index.rst:1589
msgid ":ref:`sphx_glr_examples_02-plot_edl.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_edl.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:313
#: ../../pyvista/doc/source/examples/index.rst:1591
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Eye Dome Lighting</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Eye Dome Lighting</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:319
#: ../../pyvista/doc/source/examples/index.rst:1597
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The different elements of a"
" mesh are:\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The different elements of a"
" mesh are:\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:328
#: ../../pyvista/doc/source/examples/index.rst:1606
msgid ":ref:`sphx_glr_examples_02-plot_element-picking.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_element-picking.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:330
#: ../../pyvista/doc/source/examples/index.rst:1608
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Picking elements of a mesh</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Picking elements of a mesh</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:336
#: ../../pyvista/doc/source/examples/index.rst:1614
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Add a floor/wall at the "
"boundary of the rendering scene.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Add a floor/wall at the "
"boundary of the rendering scene.\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:345
#: ../../pyvista/doc/source/examples/index.rst:1623
msgid ":ref:`sphx_glr_examples_02-plot_floors.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_floors.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:347
#: ../../pyvista/doc/source/examples/index.rst:1625
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Plot with Floors</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Plot with Floors</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:353
#: ../../pyvista/doc/source/examples/index.rst:1631
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Specify specific cells to "
"hide when plotting.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Specify specific cells to "
"hide when plotting.\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:362
#: ../../pyvista/doc/source/examples/index.rst:1640
msgid ":ref:`sphx_glr_examples_02-plot_ghost-cells.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_ghost-cells.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:364
#: ../../pyvista/doc/source/examples/index.rst:1642
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Hide Cells with Ghosting</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Hide Cells with Ghosting</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:370
#: ../../pyvista/doc/source/examples/index.rst:1648
msgid "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create a GIF Movie\">"
msgstr "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create a GIF Movie\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:379
#: ../../pyvista/doc/source/examples/index.rst:1657
msgid ":ref:`sphx_glr_examples_02-plot_gif.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_gif.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:381
#: ../../pyvista/doc/source/examples/index.rst:1659
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Create a GIF Movie</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Create a GIF Movie</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:387
#: ../../pyvista/doc/source/examples/index.rst:1665
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Plot a depth image as "
"viewed from a camera overlooking the &quot;hills&quot; example mesh.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Plot a depth image as "
"viewed from a camera overlooking the &quot;hills&quot; example mesh.\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:396
#: ../../pyvista/doc/source/examples/index.rst:1674
msgid ":ref:`sphx_glr_examples_02-plot_image_depth.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_image_depth.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:398
#: ../../pyvista/doc/source/examples/index.rst:1676
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Render a depth image</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Render a depth image</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:404
#: ../../pyvista/doc/source/examples/index.rst:1682
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The "
"pyvista.Plotter.add_mesh method has an interpolate_before_map argument that "
"affects the way...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The "
"pyvista.Plotter.add_mesh method has an interpolate_before_map argument that "
"affects the way...\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:413
#: ../../pyvista/doc/source/examples/index.rst:1691
msgid ":ref:`sphx_glr_examples_02-plot_interpolate-before-map.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_interpolate-before-map.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:415
#: ../../pyvista/doc/source/examples/index.rst:1693
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Interpolate Before Mapping</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Interpolate Before Mapping</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:421
#: ../../pyvista/doc/source/examples/index.rst:1699
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Make an animation of an "
"isovalue through a volumetric dataset\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Make an animation of an "
"isovalue through a volumetric dataset\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:430
#: ../../pyvista/doc/source/examples/index.rst:1708
msgid ":ref:`sphx_glr_examples_02-plot_isovalue.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_isovalue.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:432
#: ../../pyvista/doc/source/examples/index.rst:1710
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Moving Isovalue</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Moving Isovalue</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:438
#: ../../pyvista/doc/source/examples/index.rst:1716
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Use string arrays in a "
"point set to label points\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Use string arrays in a "
"point set to label points\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:447
#: ../../pyvista/doc/source/examples/index.rst:1725
msgid ":ref:`sphx_glr_examples_02-plot_labels.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_labels.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:449
#: ../../pyvista/doc/source/examples/index.rst:1727
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Label Points</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Label Points</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:455
#: ../../pyvista/doc/source/examples/index.rst:1733
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Control aspects of the "
"rendered mesh&#x27;s lighting such as Ambient, Diffuse, and Specular. These "
"o...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Control aspects of the "
"rendered mesh&#x27;s lighting such as Ambient, Diffuse, and Specular. These "
"o...\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:464
#: ../../pyvista/doc/source/examples/index.rst:1742
msgid ":ref:`sphx_glr_examples_02-plot_lighting_mesh.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_lighting_mesh.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:466
#: ../../pyvista/doc/source/examples/index.rst:1744
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Lighting Properties</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Lighting Properties</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:472
#: ../../pyvista/doc/source/examples/index.rst:1750
msgid "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Linked Views in Subplots\">"
msgstr "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Linked Views in Subplots\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:481
#: ../../pyvista/doc/source/examples/index.rst:1759
msgid ":ref:`sphx_glr_examples_02-plot_linked.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_linked.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:483
#: ../../pyvista/doc/source/examples/index.rst:1761
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Linked Views in Subplots</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Linked Views in Subplots</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:489
#: ../../pyvista/doc/source/examples/index.rst:1767
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The pyvista.LookupTable can"
" be used to have fine-tuned control over the mapping between a pyvis...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The pyvista.LookupTable can"
" be used to have fine-tuned control over the mapping between a pyvis...\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:498
#: ../../pyvista/doc/source/examples/index.rst:1776
msgid ":ref:`sphx_glr_examples_02-plot_lookup-table.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_lookup-table.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:500
#: ../../pyvista/doc/source/examples/index.rst:1778
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Lookup Tables</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Lookup Tables</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:506
#: ../../pyvista/doc/source/examples/index.rst:1784
msgid "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Picking Meshes\">"
msgstr "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Picking Meshes\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:515
#: ../../pyvista/doc/source/examples/index.rst:1793
msgid ":ref:`sphx_glr_examples_02-plot_mesh-picking.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_mesh-picking.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:517
#: ../../pyvista/doc/source/examples/index.rst:1795
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Picking Meshes</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Picking Meshes</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:523
#: ../../pyvista/doc/source/examples/index.rst:1801
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create an animated MP4 "
"movie of a rendering scene.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create an animated MP4 "
"movie of a rendering scene.\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:532
#: ../../pyvista/doc/source/examples/index.rst:1810
msgid ":ref:`sphx_glr_examples_02-plot_movie.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_movie.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:534
#: ../../pyvista/doc/source/examples/index.rst:1812
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Create a MP4 Movie</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Create a MP4 Movie</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:540
#: ../../pyvista/doc/source/examples/index.rst:1818
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create an animated GIF by "
"generating glyphs using pyvista.DataSetFilters.glyph using pyvista.Sp...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create an animated GIF by "
"generating glyphs using pyvista.DataSetFilters.glyph using pyvista.Sp...\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:549
#: ../../pyvista/doc/source/examples/index.rst:1827
msgid ":ref:`sphx_glr_examples_02-plot_movie_glyphs.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_movie_glyphs.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:551
#: ../../pyvista/doc/source/examples/index.rst:1829
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Save a Movie Using Glyphs</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Save a Movie Using Glyphs</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:557
#: ../../pyvista/doc/source/examples/index.rst:1835
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create a GIF Movie of a "
"Static Object with a Moving Colormap\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Create a GIF Movie of a "
"Static Object with a Moving Colormap\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:566
#: ../../pyvista/doc/source/examples/index.rst:1844
msgid ":ref:`sphx_glr_examples_02-plot_moving_cmap.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_moving_cmap.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:568
#: ../../pyvista/doc/source/examples/index.rst:1846
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Create a GIF Movie of a Static Object with a Moving Colormap</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Create a GIF Movie of a Static Object with a Moving Colormap</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:574
#: ../../pyvista/doc/source/examples/index.rst:1852
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\" Subplotting: having "
"multiple scenes in a single window\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\" Subplotting: having "
"multiple scenes in a single window\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:583
#: ../../pyvista/doc/source/examples/index.rst:1861
msgid ":ref:`sphx_glr_examples_02-plot_multi-window.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_multi-window.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:585
#: ../../pyvista/doc/source/examples/index.rst:1863
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Multi-Window Plot</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Multi-Window Plot</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:591
#: ../../pyvista/doc/source/examples/index.rst:1869
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Plot a mesh&#x27;s scalar "
"array with an opacity transfer function or opacity mapping based on a "
"scal...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Plot a mesh&#x27;s scalar "
"array with an opacity transfer function or opacity mapping based on a "
"scal...\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:600
#: ../../pyvista/doc/source/examples/index.rst:1878
msgid ":ref:`sphx_glr_examples_02-plot_opacity.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_opacity.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:602
#: ../../pyvista/doc/source/examples/index.rst:1880
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Plot with Opacity</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Plot with Opacity</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:608
#: ../../pyvista/doc/source/examples/index.rst:1886
msgid "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Orbit around a scene.\">"
msgstr "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Orbit around a scene.\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:617
#: ../../pyvista/doc/source/examples/index.rst:1895
msgid ":ref:`sphx_glr_examples_02-plot_orbit.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_orbit.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:619
#: ../../pyvista/doc/source/examples/index.rst:1897
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Orbiting</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Orbiting</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:625
#: ../../pyvista/doc/source/examples/index.rst:1903
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"View three orthogonal "
"slices from a mesh.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"View three orthogonal "
"slices from a mesh.\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:634
#: ../../pyvista/doc/source/examples/index.rst:1912
msgid ":ref:`sphx_glr_examples_02-plot_ortho-slices.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_ortho-slices.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:636
#: ../../pyvista/doc/source/examples/index.rst:1914
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Orthogonal Slices</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Orthogonal Slices</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:642
#: ../../pyvista/doc/source/examples/index.rst:1920
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"VTK 9 introduced Physically"
" Based Rendering (PBR) and we have exposed that functionality in PyV...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"VTK 9 introduced Physically"
" Based Rendering (PBR) and we have exposed that functionality in PyV...\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:651
#: ../../pyvista/doc/source/examples/index.rst:1929
msgid ":ref:`sphx_glr_examples_02-plot_pbr.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_pbr.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:653
#: ../../pyvista/doc/source/examples/index.rst:1931
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Physically Based Rendering</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Physically Based Rendering</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:659
#: ../../pyvista/doc/source/examples/index.rst:1937
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Interpolate the scalars of "
"a dataset over a circular arc.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Interpolate the scalars of "
"a dataset over a circular arc.\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:668
#: ../../pyvista/doc/source/examples/index.rst:1946
msgid ":ref:`sphx_glr_examples_02-plot_plot-over-circular-arc.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_plot-over-circular-arc.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:670
#: ../../pyvista/doc/source/examples/index.rst:1948
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Plot Scalars Over a Circular Arc</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Plot Scalars Over a Circular Arc</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:676
#: ../../pyvista/doc/source/examples/index.rst:1954
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Plot the values of a "
"dataset over a line through that dataset\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Plot the values of a "
"dataset over a line through that dataset\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:685
#: ../../pyvista/doc/source/examples/index.rst:1963
msgid ":ref:`sphx_glr_examples_02-plot_plot-over-line.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_plot-over-line.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:687
#: ../../pyvista/doc/source/examples/index.rst:1965
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Plot Over Line</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Plot Over Line</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:693
#: ../../pyvista/doc/source/examples/index.rst:1971
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example demonstrates "
"how to add point scalars for each individual cell to a dataset.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example demonstrates "
"how to add point scalars for each individual cell to a dataset.\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:702
#: ../../pyvista/doc/source/examples/index.rst:1980
msgid ":ref:`sphx_glr_examples_02-plot_point-cell-scalars.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_point-cell-scalars.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:704
#: ../../pyvista/doc/source/examples/index.rst:1982
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Point Cell Scalars</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Point Cell Scalars</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:710
#: ../../pyvista/doc/source/examples/index.rst:1988
msgid "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Plotting Point Clouds\">"
msgstr "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Plotting Point Clouds\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:719
#: ../../pyvista/doc/source/examples/index.rst:1997
msgid ":ref:`sphx_glr_examples_02-plot_point-clouds.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_point-clouds.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:721
#: ../../pyvista/doc/source/examples/index.rst:1999
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Plotting Point Clouds</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Plotting Point Clouds</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:727
#: ../../pyvista/doc/source/examples/index.rst:2005
msgid "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Picking points on a mesh\">"
msgstr "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Picking points on a mesh\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:736
#: ../../pyvista/doc/source/examples/index.rst:2014
msgid ":ref:`sphx_glr_examples_02-plot_point-picking.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_point-picking.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:738
#: ../../pyvista/doc/source/examples/index.rst:2016
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Picking points on a mesh</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Picking points on a mesh</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:744
#: ../../pyvista/doc/source/examples/index.rst:2022
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Walk through of all the "
"different capabilities of scalar bars and how a user can customize "
"scal...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Walk through of all the "
"different capabilities of scalar bars and how a user can customize "
"scal...\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:753
#: ../../pyvista/doc/source/examples/index.rst:2031
msgid ":ref:`sphx_glr_examples_02-plot_scalar-bars.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_scalar-bars.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:755
#: ../../pyvista/doc/source/examples/index.rst:2033
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Customize Scalar Bars</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Customize Scalar Bars</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:761
#: ../../pyvista/doc/source/examples/index.rst:2039
msgid "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Saving Screenshots\">"
msgstr "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Saving Screenshots\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:770
#: ../../pyvista/doc/source/examples/index.rst:2048
msgid ":ref:`sphx_glr_examples_02-plot_screenshot.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_screenshot.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:772
#: ../../pyvista/doc/source/examples/index.rst:2050
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Saving Screenshots</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Saving Screenshots</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:778
#: ../../pyvista/doc/source/examples/index.rst:2056
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Comparison of default, flat"
" shading vs. smooth shading.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Comparison of default, flat"
" shading vs. smooth shading.\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:787
#: ../../pyvista/doc/source/examples/index.rst:2065
msgid ":ref:`sphx_glr_examples_02-plot_shading.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_shading.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:789
#: ../../pyvista/doc/source/examples/index.rst:2067
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Types of Shading</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Types of Shading</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:795
#: ../../pyvista/doc/source/examples/index.rst:2073
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Extract a subset of the "
"edges of a polygonal mesh to generate an outline (silhouette) of a "
"mesh...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Extract a subset of the "
"edges of a polygonal mesh to generate an outline (silhouette) of a "
"mesh...\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:804
#: ../../pyvista/doc/source/examples/index.rst:2082
msgid ":ref:`sphx_glr_examples_02-plot_silhouette.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_silhouette.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:806
#: ../../pyvista/doc/source/examples/index.rst:2084
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Silhouette Highlight</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Silhouette Highlight</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:812
#: ../../pyvista/doc/source/examples/index.rst:2090
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Generate and visualize "
"meshes from data in longitude-latitude coordinates.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Generate and visualize "
"meshes from data in longitude-latitude coordinates.\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:821
#: ../../pyvista/doc/source/examples/index.rst:2099
msgid ":ref:`sphx_glr_examples_02-plot_spherical.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_spherical.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:823
#: ../../pyvista/doc/source/examples/index.rst:2101
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Plot data in spherical coordinates</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Plot data in spherical coordinates</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:829
#: ../../pyvista/doc/source/examples/index.rst:2107
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Demonstrate the usage of "
"surface space ambient occlusion.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Demonstrate the usage of "
"surface space ambient occlusion.\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:838
#: ../../pyvista/doc/source/examples/index.rst:2116
msgid ":ref:`sphx_glr_examples_02-plot_ssao.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_ssao.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:840
#: ../../pyvista/doc/source/examples/index.rst:2118
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Surface Space Ambient Occlusion</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Surface Space Ambient Occlusion</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:846
#: ../../pyvista/doc/source/examples/index.rst:2124
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This allows you to pick "
"points on the surface of a mesh.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This allows you to pick "
"points on the surface of a mesh.\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:855
#: ../../pyvista/doc/source/examples/index.rst:2133
msgid ":ref:`sphx_glr_examples_02-plot_surface-picking.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_surface-picking.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:857
#: ../../pyvista/doc/source/examples/index.rst:2135
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Picking a Point on the Surface of a Mesh</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Picking a Point on the Surface of a Mesh</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:863
#: ../../pyvista/doc/source/examples/index.rst:2141
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Plot a mesh with an image "
"projected onto it as a texture.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Plot a mesh with an image "
"projected onto it as a texture.\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:872
#: ../../pyvista/doc/source/examples/index.rst:2150
msgid ":ref:`sphx_glr_examples_02-plot_texture.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_texture.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:874
#: ../../pyvista/doc/source/examples/index.rst:2152
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Applying Textures</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Applying Textures</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:880
#: ../../pyvista/doc/source/examples/index.rst:2158
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"PyVista allows you to set "
"global and local plotting themes to easily set default plotting param...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"PyVista allows you to set "
"global and local plotting themes to easily set default plotting param...\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:889
#: ../../pyvista/doc/source/examples/index.rst:2167
msgid ":ref:`sphx_glr_examples_02-plot_themes.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_themes.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:891
#: ../../pyvista/doc/source/examples/index.rst:2169
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Control Global and Local Plotting Themes</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Control Global and Local Plotting Themes</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:897
#: ../../pyvista/doc/source/examples/index.rst:2175
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This is very similar to the"
" texture_example example except it is focused on plotting aerial ima...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This is very similar to the"
" texture_example example except it is focused on plotting aerial ima...\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:906
#: ../../pyvista/doc/source/examples/index.rst:2184
msgid ":ref:`sphx_glr_examples_02-plot_topo-map.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_topo-map.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:908
#: ../../pyvista/doc/source/examples/index.rst:2186
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Topographic Map</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Topographic Map</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:914
#: ../../pyvista/doc/source/examples/index.rst:2192
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Plot a single component of "
"a vector as a scalar array.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Plot a single component of "
"a vector as a scalar array.\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:923
#: ../../pyvista/doc/source/examples/index.rst:2201
msgid ":ref:`sphx_glr_examples_02-plot_vector-component.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_vector-component.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:925
#: ../../pyvista/doc/source/examples/index.rst:2203
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Plot Vector Component</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Plot Vector Component</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:931
#: ../../pyvista/doc/source/examples/index.rst:2209
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Display vertices on a mesh "
"in the same fashion as edge visibility.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Display vertices on a mesh "
"in the same fashion as edge visibility.\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:940
#: ../../pyvista/doc/source/examples/index.rst:2218
msgid ":ref:`sphx_glr_examples_02-plot_vertices.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_vertices.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:942
#: ../../pyvista/doc/source/examples/index.rst:2220
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Visible Vertices</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Visible Vertices</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:948
#: ../../pyvista/doc/source/examples/index.rst:2226
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Volume render uniform mesh "
"types like pyvista.ImageData or 3D NumPy arrays.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Volume render uniform mesh "
"types like pyvista.ImageData or 3D NumPy arrays.\">"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:957
#: ../../pyvista/doc/source/examples/index.rst:2235
msgid ":ref:`sphx_glr_examples_02-plot_volume.py`"
msgstr ":ref:`sphx_glr_examples_02-plot_volume.py`"

#: ../../pyvista/doc/source/examples/02-plot/index.rst:959
#: ../../pyvista/doc/source/examples/index.rst:2237
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Volume Rendering</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Volume Rendering</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/02-plot/interpolate-before-map.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_interpolate-before-"
"map.py>` to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_interpolate-before-"
"map.py>` をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/interpolate-before-map.rst:24
msgid "Interpolate Before Mapping"
msgstr "マッピング前に補間"

#: ../../pyvista/doc/source/examples/02-plot/interpolate-before-map.rst:26
msgid ""
"The :func:`add_mesh <pyvista.Plotter.add_mesh>` method has an "
"``interpolate_before_map`` argument that affects the way scalar data is "
"visualized with colors.  The effect of this can vary depending on the "
"dataset's topology and the chosen colormap."
msgstr ""
":func:`add_mesh <pyvista.Plotter.add_mesh>` メソッドには "
"``interpolate_before_map`` 引数があり，スカラーデータを色で可視化する方法を変更することができます． "
"この効果は，データセットのトポロジーと選択されたカラーマップによって異なります．"

#: ../../pyvista/doc/source/examples/02-plot/interpolate-before-map.rst:31
msgid ""
"This example serves to demo the difference and why we've chosen to enable "
"this by default."
msgstr "この例では，この違いと，この機能をデフォルトで有効にした理由を説明します．"

#: ../../pyvista/doc/source/examples/02-plot/interpolate-before-map.rst:34
msgid ""
"For more details, please see `What is InterpolateScalarsBeforeMapping in "
"VTK? <https://www.kitware.com/what-is-interpolatescalarsbeforemapping-in-"
"vtk/>`_"
msgstr ""
"詳しくは `What is InterpolateScalarsBeforeMapping in VTK? "
"<https://www.kitware.com/what-is-interpolatescalarsbeforemapping-in-vtk/>`_ "
"をご覧ください．"

#: ../../pyvista/doc/source/examples/02-plot/interpolate-before-map.rst:52
msgid ""
"Meshes are colored by the data on their nodes or cells - when coloring a "
"mesh by data on its nodes, the values must be interpolated across the faces "
"of cells. The process by which those scalars are interpolated is critical. "
"If the ``interpolate_before_map`` is left off, the color mapping occurs at "
"polygon points and  colors are interpolated, which is generally less "
"accurate whereas if the ``interpolate_before_map`` is on, then the scalars "
"will be interpolated across the topology of the dataset which is more "
"accurate."
msgstr ""
"メッシュは，ノードまたはセルのデータによって色付けされます．ノードのデータによってメッシュを色付けする場合は，値をセルの面全体に補間する必要があります．これらのスカラーを補間するプロセスは重要です．"
" ``interpolate_before_map`` "
"を省略すると，カラーマッピングはポリゴンポイントで行われ，カラーは補間されますが，一般的には精度が低くなります．一方， "
"``interpolate_before_map`` がオンの場合は，スカラーはデータセットのトポロジ全体にわたって補間され，より精度が高くなります．"

#: ../../pyvista/doc/source/examples/02-plot/interpolate-before-map.rst:60
msgid ""
"To summarize, when ``interpolate_before_map`` is off, the colors are "
"interpolated after rendering and when ``interpolate_before_map`` is on, the "
"scalars are interpolated across the mesh and those values are mapped to "
"colors."
msgstr ""
"要約すると， ``interpolate_before_map`` がオフの場合，色はレンダリング後に補間され， "
"``interpolate_before_map`` がオンの場合，スカラーはメッシュ全体で補間され，それらの値が色にマッピングされます．"

#: ../../pyvista/doc/source/examples/02-plot/interpolate-before-map.rst:65
msgid "So lets take a look at the difference:"
msgstr "違いを見てみましょう"

#: ../../pyvista/doc/source/examples/02-plot/interpolate-before-map.rst:107
msgid ""
"Shown in the figure above, when not interpolating the scalars before "
"mapping, the colors (RGB values, not scalars) are interpolated between the "
"vertices by the underlying graphics library (OpenGL), and the colors shown "
"are not accurate."
msgstr ""
"上の図に示すように，マッピング前にスカラーを補間しない場合，基本のグラフィックライブラリ (OpenGL) "
"によって頂点間でカラー(スカラーではなくRGB値)が補間され，表示されるカラーは正確ではありません．"

#: ../../pyvista/doc/source/examples/02-plot/interpolate-before-map.rst:112
msgid "The same interpolation effect occurs for wireframe visualization too:"
msgstr "ワイヤフレームの表示でも，同じ補間効果が得られます．"

#: ../../pyvista/doc/source/examples/02-plot/interpolate-before-map.rst:151
msgid ""
"The cylinder mesh above is a great example dataset for this as it has a wide"
" spread between the vertices (points are only at the top and bottom of the "
"cylinder) which means high surface are of the mesh has to be interpolated."
msgstr ""
"上のcyliderメッシュは，頂点間に広いスプレッドがあり(点は円柱の上部と下部のみにあります)，メッシュの高いサーフェスを補間する必要があるため，これに関する優れたサンプルデータセットです．"

#: ../../pyvista/doc/source/examples/02-plot/interpolate-before-map.rst:155
msgid ""
"However, most meshes don't have such a wide spread and the effects of color "
"interpolating are harder to notice. Let's take a look at a wavelet example "
"and try to figure out how the ``interpolate_before_map`` option affects its "
"rendering."
msgstr ""
"ただし，ほとんどのメッシュではそのような広がりはなく，カラー補間の効果を確認するのは困難です．waveletの例を見て， "
"``interpolate_before_map`` オプションがレンダリングにどのように影響するかを調べてみましょう．"

#: ../../pyvista/doc/source/examples/02-plot/interpolate-before-map.rst:201
msgid ""
"This time is pretty difficult to notice the differences - they are there, "
"subtle, but present. The differences become more apparent when we decrease "
"the number of colors in colormap. Let's take a look at the differences when "
"using eight discrete colors via the ``n_colors`` argument:"
msgstr ""
"今回は違いに気付くのがかなり難しいです-違いはそこにあり，微妙ですが，存在しています．カラーマップ内の色の数を減らすと，違いがより顕著になります． "
"``n_colors`` 引数によって8つの個別の色を使用する場合の違いを見てみましょう．"

#: ../../pyvista/doc/source/examples/02-plot/interpolate-before-map.rst:246
msgid ""
"Left, ``interpolate_before_map`` OFF.  Right, ``interpolate_before_map`` ON."
msgstr "左 ``interpolate_before_map`` OFF．右, ``interpolate_before_map``  ON．"

#: ../../pyvista/doc/source/examples/02-plot/interpolate-before-map.rst:248
msgid ""
"Now that is much more compelling. On the right, the contours of the scalar "
"field are visible, but on the left, the contours are obscured due to the "
"color interpolation by OpenGL. In both cases, the colors at the vertices are"
" the same, the difference is how color is assigned between the vertices."
msgstr ""
"これで，さらに説得力が増しました．右側ではスカラーフィールドの輪郭が表示されていますが，左側ではOpenGLによるカラー補間のために輪郭が不明瞭になっています．どちらの場合も頂点のカラーは同じで，頂点間のカラーの割り当て方法が異なります．"

#: ../../pyvista/doc/source/examples/02-plot/interpolate-before-map.rst:253
msgid ""
"In our opinion, color interpolation is not a preferred default for "
"scientific visualization and is why we have chosen to set the "
"``interpolate_before_map`` flag to ``True``."
msgstr ""
"私たちの意見では，色補間は科学的可視化のための好ましいデフォルトではなく， ``interpolate_before_map`` フラグを "
"``True`` に設定することを選んだ理由です．"

#: ../../pyvista/doc/source/examples/02-plot/interpolate-before-map.rst:260
msgid "**Total running time of the script:** ( 0 minutes  1.841 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.841 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/interpolate-before-map.rst:274
msgid ""
":download:`Download Python source code: interpolate-before-map.py "
"<interpolate-before-map.py>`"
msgstr ""
":download:`Download Python source code: interpolate-before-map.py "
"<interpolate-before-map.py>`"

#: ../../pyvista/doc/source/examples/02-plot/interpolate-before-map.rst:278
msgid ""
":download:`Download Jupyter notebook: interpolate-before-map.ipynb "
"<interpolate-before-map.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: interpolate-before-map.ipynb "
"<interpolate-before-map.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/isovalue.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_isovalue.py>` to "
"download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_02-plot_isovalue.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/isovalue.rst:24
msgid "Moving Isovalue"
msgstr "等値移動"

#: ../../pyvista/doc/source/examples/02-plot/isovalue.rst:26
msgid "Make an animation of an isovalue through a volumetric dataset"
msgstr "ボリュームデータセットを使用して等値のアニメーションを作成する"

#: ../../pyvista/doc/source/examples/02-plot/isovalue.rst:45
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>UniformGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>6998400</td></tr>\n"
"<tr><td>N Points</td><td>7109137</td></tr>\n"
"<tr><td>X Bounds</td><td>0.000e+00, 1.800e+02</td></tr>\n"
"<tr><td>Y Bounds</td><td>0.000e+00, 2.160e+02</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 1.800e+02</td></tr>\n"
"<tr><td>Dimensions</td><td>181, 217, 181</td></tr>\n"
"<tr><td>Spacing</td><td>1.000e+00, 1.000e+00, 1.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>image_data</b></td><td>Points</td><td>uint8</td><td>1</td><td>0.000e+00</td><td>2.550e+02</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>UniformGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>6998400</td></tr>\n"
"<tr><td>N Points</td><td>7109137</td></tr>\n"
"<tr><td>X Bounds</td><td>0.000e+00, 1.800e+02</td></tr>\n"
"<tr><td>Y Bounds</td><td>0.000e+00, 2.160e+02</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 1.800e+02</td></tr>\n"
"<tr><td>Dimensions</td><td>181, 217, 181</td></tr>\n"
"<tr><td>Spacing</td><td>1.000e+00, 1.000e+00, 1.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>image_data</b></td><td>Points</td><td>uint8</td><td>1</td><td>0.000e+00</td><td>2.550e+02</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/02-plot/isovalue.rst:74
msgid ""
"Now lets make an array of all of the isovalues for which we want to show."
msgstr "次に，表示するすべての等値の配列を作成します．"

#: ../../pyvista/doc/source/examples/02-plot/isovalue.rst:91
msgid "Now let's create an initial isosurface that we can plot and move"
msgstr "次に，プロットして移動できる最初の等値面を作成します．"

#: ../../pyvista/doc/source/examples/02-plot/isovalue.rst:108
msgid "Precompute the surfaces"
msgstr "サーフェスを事前計算します"

#: ../../pyvista/doc/source/examples/02-plot/isovalue.rst:125
msgid "Set a single surface as the one being plotted that can be overwritten"
msgstr "1つのサーフェスを上書き可能な印刷対象として設定する"

#: ../../pyvista/doc/source/examples/02-plot/isovalue.rst:203
msgid "**Total running time of the script:** ( 0 minutes  50.291 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  50.291 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/isovalue.rst:215
msgid ":download:`Download Python source code: isovalue.py <isovalue.py>`"
msgstr ":download:`Download Python source code: isovalue.py <isovalue.py>`"

#: ../../pyvista/doc/source/examples/02-plot/isovalue.rst:219
msgid ":download:`Download Jupyter notebook: isovalue.ipynb <isovalue.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: isovalue.ipynb <isovalue.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/labels.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_labels.py>` to "
"download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_labels.py>` to "
"download the full example code"

#: ../../pyvista/doc/source/examples/02-plot/labels.rst:22
msgid "Label Points"
msgstr "ラベルポイント"

#: ../../pyvista/doc/source/examples/02-plot/labels.rst:24
msgid "Use string arrays in a point set to label points"
msgstr "ポイントセットで文字列配列を使用してポイントにラベルを付ける"

#: ../../pyvista/doc/source/examples/02-plot/labels.rst:46
msgid "Label String Array"
msgstr "ラベル文字列配列"

#: ../../pyvista/doc/source/examples/02-plot/labels.rst:48
msgid ""
"This example will label the nodes of a mesh with a given array of string "
"labels for each of the nodes."
msgstr "この例では，各ノードの文字列ラベルの配列を使用して，メッシュのノードにラベルを付けます．"

#: ../../pyvista/doc/source/examples/02-plot/labels.rst:68
msgid ""
"Add string labels to the point data - this associates a label with every "
"node:"
msgstr "文字列ラベルをポイントデータに追加します．これにより，各ノードにラベルが関連付けられます．"

#: ../../pyvista/doc/source/examples/02-plot/labels.rst:84
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>10</td></tr>\n"
"<tr><td>N Points</td><td>10</td></tr>\n"
"<tr><td>N Strips</td><td>0</td></tr>\n"
"<tr><td>X Bounds</td><td>1.402e-01, 9.986e-01</td></tr>\n"
"<tr><td>Y Bounds</td><td>1.223e-01, 9.129e-01</td></tr>\n"
"<tr><td>Z Bounds</td><td>6.901e-02, 8.318e-01</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td>My Labels</td><td>Points</td><td><U7</td><td>1</td><td>nan</td><td>nan</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>10</td></tr>\n"
"<tr><td>N Points</td><td>10</td></tr>\n"
"<tr><td>N Strips</td><td>0</td></tr>\n"
"<tr><td>X Bounds</td><td>1.402e-01, 9.986e-01</td></tr>\n"
"<tr><td>Y Bounds</td><td>1.223e-01, 9.129e-01</td></tr>\n"
"<tr><td>Z Bounds</td><td>6.901e-02, 8.318e-01</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td>My Labels</td><td>Points</td><td><U7</td><td>1</td><td>nan</td><td>nan</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/02-plot/labels.rst:112
msgid "Now plot the points with labels:"
msgstr "次に，点をラベル付きでプロットします:"

#: ../../pyvista/doc/source/examples/02-plot/labels.rst:139
msgid "Label Node Locations"
msgstr "ラベルノードの位置"

#: ../../pyvista/doc/source/examples/02-plot/labels.rst:141
msgid ""
"This example will label the nodes of a mesh with their coordinate locations"
msgstr "この例では，メッシュの節点に座標位置のラベルを付けます．"

#: ../../pyvista/doc/source/examples/02-plot/labels.rst:161
msgid "Create plotting class and add the unstructured grid"
msgstr "プロッティングクラスを作成し，非構造化グリッドを追加します"

#: ../../pyvista/doc/source/examples/02-plot/labels.rst:195
msgid "Label Scalar Values"
msgstr "ラベルスカラー値"

#: ../../pyvista/doc/source/examples/02-plot/labels.rst:197
msgid "This example will label each point with their scalar values"
msgstr "この例では，各ポイントにスカラー値のラベルを付けます．"

#: ../../pyvista/doc/source/examples/02-plot/labels.rst:243
msgid "**Total running time of the script:** ( 0 minutes  1.026 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.026 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/labels.rst:257
msgid ":download:`Download Python source code: labels.py <labels.py>`"
msgstr ":download:`Download Python source code: labels.py <labels.py>`"

#: ../../pyvista/doc/source/examples/02-plot/labels.rst:261
msgid ":download:`Download Jupyter notebook: labels.ipynb <labels.ipynb>`"
msgstr ":download:`Download Jupyter notebook: labels.ipynb <labels.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/lighting_mesh.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_lighting_mesh.py>` "
"to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_lighting_mesh.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/lighting_mesh.rst:24
msgid "Lighting Properties"
msgstr "照明プロパティ"

#: ../../pyvista/doc/source/examples/02-plot/lighting_mesh.rst:26
msgid ""
"Control aspects of the rendered mesh's lighting such as Ambient, Diffuse, "
"and Specular. These options only work if the ``lighting`` argument to "
"``add_mesh`` is ``True`` (it's ``True`` by default)."
msgstr ""
"周囲光 ，拡散反射光 ， 鏡面反射光など，レンダリングされたメッシュのライティングを制御します．これらのオプションは， ``add_mesh`` への "
"``lighting`` 引数が ``True``  (デフォルトでは ``True`` です．)の場合にのみ動作します．"

#: ../../pyvista/doc/source/examples/02-plot/lighting_mesh.rst:30
msgid ""
"You can turn off all lighting for the given mesh by passing "
"``lighting=False`` to ``add_mesh``."
msgstr "``lighting=False`` を ``add_mesh`` に渡すと，指定したメッシュのすべてのライティングをオフにできます．"

#: ../../pyvista/doc/source/examples/02-plot/lighting_mesh.rst:53
msgid "First, lets take a look at the mesh with default lighting conditions"
msgstr "まず，デフォルトのライティング条件を持つメッシュを見てみましょう．"

#: ../../pyvista/doc/source/examples/02-plot/lighting_mesh.rst:75
msgid "What about with no lighting"
msgstr "照明なしではどうですか"

#: ../../pyvista/doc/source/examples/02-plot/lighting_mesh.rst:97
msgid "Demonstration of the specular property"
msgstr "鏡面特性の実証"

#: ../../pyvista/doc/source/examples/02-plot/lighting_mesh.rst:132
msgid "Just specular"
msgstr "鏡面反射のみ"

#: ../../pyvista/doc/source/examples/02-plot/lighting_mesh.rst:154
msgid "Specular power"
msgstr "スペキュラパワー"

#: ../../pyvista/doc/source/examples/02-plot/lighting_mesh.rst:176
msgid "Demonstration of all three in use"
msgstr "3機種の使用実績"

#: ../../pyvista/doc/source/examples/02-plot/lighting_mesh.rst:198
msgid ""
"For detailed control over lighting conditions in general see the "
":ref:`light_examples` examples."
msgstr "一般的なライティング条件の詳細については， :ref:`light_examples` の例を参照してください．"

#: ../../pyvista/doc/source/examples/02-plot/lighting_mesh.rst:204
msgid "**Total running time of the script:** (0 minutes 14.968 seconds)"
msgstr "**Total running time of the script:** (0 minutes 14.968 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/lighting_mesh.rst:218
msgid ""
":download:`Download Python source code: lighting_mesh.py <lighting_mesh.py>`"
msgstr ""
":download:`Download Python source code: lighting_mesh.py <lighting_mesh.py>`"

#: ../../pyvista/doc/source/examples/02-plot/lighting_mesh.rst:222
msgid ""
":download:`Download Jupyter notebook: lighting_mesh.ipynb "
"<lighting_mesh.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: lighting_mesh.ipynb "
"<lighting_mesh.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/linked.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_linked.py>` to download"
" the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_02-plot_linked.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/linked.rst:24
msgid "Linked Views in Subplots"
msgstr "サブプロットのリンクビュー"

#: ../../pyvista/doc/source/examples/02-plot/linked.rst:83
msgid "**Total running time of the script:** ( 0 minutes  3.236 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  3.236 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/linked.rst:98
msgid ":download:`Download Python source code: linked.py <linked.py>`"
msgstr ":download:`Download Python source code: linked.py <linked.py>`"

#: ../../pyvista/doc/source/examples/02-plot/linked.rst:104
msgid ":download:`Download Jupyter notebook: linked.ipynb <linked.ipynb>`"
msgstr ":download:`Download Jupyter notebook: linked.ipynb <linked.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/lookup-table.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_lookup-table.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_lookup-table.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/lookup-table.rst:24
msgid "Lookup Tables"
msgstr "ルックアップテーブル"

#: ../../pyvista/doc/source/examples/02-plot/lookup-table.rst:25
msgid "Demonstrate the usage of a lookup table within PyVista"
msgstr "PyVistaでのルックアップテーブルの使い方を説明します．"

#: ../../pyvista/doc/source/examples/02-plot/lookup-table.rst:27
msgid ""
"The :class:`pyvista.LookupTable` can be used to have fine-tuned control over"
" the mapping between a :class:`pyvista.DataSet`'s scalars and RGBA colors."
msgstr ""
":class:`pyvista.LookupTable` を使用すると， :class:`pyvista.DataSet`' のスカラーと RGBA "
"カラー間のマッピングを細かく制御することができます．"

#: ../../pyvista/doc/source/examples/02-plot/lookup-table.rst:48
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>UnstructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>56786</td></tr>\n"
"<tr><td>N Points</td><td>102578</td></tr>\n"
"<tr><td>X Bounds</td><td>-2.000e+00, 2.000e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>-2.000e+00, 2.000e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 3.250e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>Equivalent (von-Mises) Stress (psi)</b></td><td>Points</td><td>float32</td><td>1</td><td>1.437e-02</td><td>2.327e+01</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>UnstructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>56786</td></tr>\n"
"<tr><td>N Points</td><td>102578</td></tr>\n"
"<tr><td>X Bounds</td><td>-2.000e+00, 2.000e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>-2.000e+00, 2.000e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 3.250e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>Equivalent (von-Mises) Stress (psi)</b></td><td>Points</td><td>float32</td><td>1</td><td>1.437e-02</td><td>2.327e+01</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/02-plot/lookup-table.rst:76
msgid "Default Color Map - Lookup Table"
msgstr "デフォルトのカラーマップ - ルックアップテーブル"

#: ../../pyvista/doc/source/examples/02-plot/lookup-table.rst:77
msgid ""
"First, let's plot using the default color map, \"viridis\". Internally, "
"PyVista will automatically create a lookup table to map the scalars (stored "
"here within `point_data`) to RGBA colors. This is shown here as a nested "
"attribute to the :class:`pyvista.DataSetMapper` and it has a helpful "
"``repr`` method:"
msgstr ""
"まず，デフォルトのカラーマップ， \"viridis\" "
"を使ってプロットしてみましょう．内部的には，PyVistaは自動的にルックアップテーブルを作成して，スカラー(ここでは `point_data` "
"に格納されています)をRGBAカラーにマップします．これは :class:`pyvista.DataSetMapper` "
"のネストされた属性として表示され，便利な ``repr`` メソッドを持っています．"

#: ../../pyvista/doc/source/examples/02-plot/lookup-table.rst:120
msgid "Plot the Lookup Table"
msgstr "ルックアップテーブルをプロットする"

#: ../../pyvista/doc/source/examples/02-plot/lookup-table.rst:121
msgid ""
"You can also plot lookup table to see the mapping between the scalar values "
"(here, between 0 and 23.3) and RGBA colors."
msgstr "また，ルックアップテーブルをプロットして，スカラー値(ここでは0〜23.3)とRGBAカラーの対応関係を確認することもできます．"

#: ../../pyvista/doc/source/examples/02-plot/lookup-table.rst:161
msgid "Plot the DataSet"
msgstr "データセットのプロット"

#: ../../pyvista/doc/source/examples/02-plot/lookup-table.rst:162
msgid "Let's plot the dataset using the automatically generated lookup table."
msgstr "自動生成されたルックアップテーブルを使って，データセットをプロットしてみましょう．"

#: ../../pyvista/doc/source/examples/02-plot/lookup-table.rst:189
msgid "Create a Custom Lookup Table using a Matplotlib Color Map"
msgstr "Matplotlibのカラーマップを使ってカスタムのルックアップテーブルを作成する"

#: ../../pyvista/doc/source/examples/02-plot/lookup-table.rst:190
msgid ""
"Here we create a lookup table with a narrow table range (same as ``clim``) "
"and color values above and below the range."
msgstr "ここでは，狭いテーブル範囲 (``clim`` と同じ) と，その上下のカラー値を持つルックアップテーブルを作成します．"

#: ../../pyvista/doc/source/examples/02-plot/lookup-table.rst:220
#: ../../pyvista/doc/source/examples/02-plot/lookup-table.rst:283
msgid "Plot the bracket with the custom colormap"
msgstr "カスタムカラーマップでブラケットをプロットする"

#: ../../pyvista/doc/source/examples/02-plot/lookup-table.rst:221
msgid ""
"You can set assign the lookup table when using ``add_mesh`` with ``cmap=``."
msgstr "ルックアップテーブルは， ``add_mesh`` で ``cmap=`` を指定して使用する際に設定することができます．"

#: ../../pyvista/doc/source/examples/02-plot/lookup-table.rst:249
msgid "Create a Custom Lookup Table using VTK's Methods"
msgstr "VTKのメソッドを使ってカスタムのルックアップテーブルを作成する"

#: ../../pyvista/doc/source/examples/02-plot/lookup-table.rst:250
msgid ""
"If you want to create a completely unique color map, you can use attributes "
"like :attr:`pyvista.LookupTable.hue_range` and "
":attr:`pyvista.LookupTable.value_range` to create your own lookup table."
msgstr ""
"完全に独自のカラーマップを作成したい場合は， :attr:`pyvista.LookupTable.hue_range` や "
":attr:`pyvista.LookupTable.value_range` "
"といった属性を使用して，独自のルックアップテーブルを作成することができます．"

#: ../../pyvista/doc/source/examples/02-plot/lookup-table.rst:284
msgid ""
"Assign this custom color map to the plotter and disable lighting to improve "
"the plot."
msgstr "このカスタムカラーマップをプロッターに割り当て，ライティングを無効にすることで，プロットを改善します．"

#: ../../pyvista/doc/source/examples/02-plot/lookup-table.rst:312
msgid "Custom colormap with widgets"
msgstr "ウィジェットを使ったカスタムカラーマップ"

#: ../../pyvista/doc/source/examples/02-plot/lookup-table.rst:313
msgid ""
"Here we plot the scalars and dynamically change the lookup table through "
"widgets. We create several overlapping single slider widgets to simulate a "
"double ended slider widget."
msgstr ""
"ここでは，スカラーをプロットし，ウィジェットによってルックアップテーブルを動的に変化させる．ダブルエンドのスライダーウィジェットをシミュレートするために，いくつかのオーバーラップするシングルスライダーウィジェットを作成する．"

#: ../../pyvista/doc/source/examples/02-plot/lookup-table.rst:317
msgid "This example just controls the alpha channel."
msgstr "この例では，アルファチャンネルを制御するだけです．"

#: ../../pyvista/doc/source/examples/02-plot/lookup-table.rst:380
msgid "Control Several Lookup Table Attributes"
msgstr "複数のルックアップテーブルの属性を制御する"

#: ../../pyvista/doc/source/examples/02-plot/lookup-table.rst:381
msgid ""
"Demonstrate the use of several slider bar widgets with lookup table "
"callbacks."
msgstr "ルックアップテーブルコールバックを持ついくつかのスライダーバーウィジェットの使用をデモンストレートします．"

#: ../../pyvista/doc/source/examples/02-plot/lookup-table.rst:477
msgid "**Total running time of the script:** ( 0 minutes  4.392 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  4.392 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/lookup-table.rst:489
msgid ""
":download:`Download Python source code: lookup-table.py <lookup-table.py>`"
msgstr ""
":download:`Download Python source code: lookup-table.py <lookup-table.py>`"

#: ../../pyvista/doc/source/examples/02-plot/lookup-table.rst:493
msgid ""
":download:`Download Jupyter notebook: lookup-table.ipynb <lookup-"
"table.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: lookup-table.ipynb <lookup-"
"table.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/mesh-picking.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_mesh-picking.py>` to"
" download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_mesh-picking.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/mesh-picking.rst:24
msgid "Picking Meshes"
msgstr "メッシュのピッキング"

#: ../../pyvista/doc/source/examples/02-plot/mesh-picking.rst:25
msgid ""
"This example demonstrates how to pick meshes using "
":func:`enable_mesh_picking() <pyvista.Plotter.enable_mesh_picking>`."
msgstr ""
"この例では， :func:`enable_mesh_picking() <pyvista.Plotter.enable_mesh_picking>` "
"を使って，メッシュ上をピックする方法を示します．"

#: ../../pyvista/doc/source/examples/02-plot/mesh-picking.rst:45
msgid "Pick either a cube or a sphere using \"p\""
msgstr "\"p\" で立方体か球体のどちらかを選びます"

#: ../../pyvista/doc/source/examples/02-plot/mesh-picking.rst:78
msgid "Deform the mesh after picking"
msgstr "ピッキング後にメッシュを変形させる "

#: ../../pyvista/doc/source/examples/02-plot/mesh-picking.rst:79
msgid ""
"Pick to trigger a callback that \"shrinks\" the mesh each time it's "
"selected."
msgstr "選択されるたびにメッシュを「縮小」するコールバックをトリガーします．"

#: ../../pyvista/doc/source/examples/02-plot/mesh-picking.rst:115
msgid "Pick based on Actors"
msgstr "アクターで選ぶ"

#: ../../pyvista/doc/source/examples/02-plot/mesh-picking.rst:116
msgid "Return the picked actor to the callback"
msgstr "ピックしたアクターをコールバックに返します"

#: ../../pyvista/doc/source/examples/02-plot/mesh-picking.rst:160
msgid "**Total running time of the script:** ( 0 minutes  0.757 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  0.757 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/mesh-picking.rst:174
msgid ""
":download:`Download Python source code: mesh-picking.py <mesh-picking.py>`"
msgstr ""
":download:`Download Python source code: mesh-picking.py <mesh-picking.py>`"

#: ../../pyvista/doc/source/examples/02-plot/mesh-picking.rst:178
msgid ""
":download:`Download Jupyter notebook: mesh-picking.ipynb <mesh-"
"picking.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: mesh-picking.ipynb <mesh-"
"picking.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/movie.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_movie.py>` to download "
"the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_02-plot_movie.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/movie.rst:24
msgid "Create a MP4 Movie"
msgstr "MP 4ムービーを作成する"

#: ../../pyvista/doc/source/examples/02-plot/movie.rst:26
msgid "Create an animated MP4 movie of a rendering scene."
msgstr "レンダリングシーンのアニメーションMP 4ムービーを作成する．"

#: ../../pyvista/doc/source/examples/02-plot/movie.rst:29
msgid ""
"This movie will appear static since MP4 movies will not be rendered on a "
"sphinx gallery example."
msgstr "MP4ムービーはsphinxギャラリーの例ではレンダリングされないため，このムービーは静的に表示されます．"

#: ../../pyvista/doc/source/examples/02-plot/movie.rst:87
msgid "**Total running time of the script:** ( 0 minutes  16.761 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  16.761 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/movie.rst:102
msgid ":download:`Download Python source code: movie.py <movie.py>`"
msgstr ":download:`Download Python source code: movie.py <movie.py>`"

#: ../../pyvista/doc/source/examples/02-plot/movie.rst:108
msgid ":download:`Download Jupyter notebook: movie.ipynb <movie.ipynb>`"
msgstr ":download:`Download Jupyter notebook: movie.ipynb <movie.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/movie_glyphs.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_movie_glyphs.py>` to"
" download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_movie_glyphs.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/movie_glyphs.rst:24
msgid "Save a Movie Using Glyphs"
msgstr "グリフを使ったムービーの保存"

#: ../../pyvista/doc/source/examples/02-plot/movie_glyphs.rst:26
msgid ""
"Create an animated GIF by generating glyphs using :func:`glyph() "
"<pyvista.DataSetFilters.glyph>` using :func:`pyvista.Sphere`."
msgstr ""
":func:`glyph() <pyvista.DataSetFilters.glyph>` と :func:`pyvista.Sphere` "
"を使用してグリフを生成し，アニメーションGIFを作成します．"

#: ../../pyvista/doc/source/examples/02-plot/movie_glyphs.rst:48
msgid "Create sphere glyphs"
msgstr "球体グリフの作成"

#: ../../pyvista/doc/source/examples/02-plot/movie_glyphs.rst:86
msgid "Create the movie"
msgstr "ムービーを作成する"

#: ../../pyvista/doc/source/examples/02-plot/movie_glyphs.rst:138
msgid "**Total running time of the script:** ( 0 minutes  9.340 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  9.340 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/movie_glyphs.rst:152
msgid ""
":download:`Download Python source code: movie_glyphs.py <movie_glyphs.py>`"
msgstr ""
":download:`Download Python source code: movie_glyphs.py <movie_glyphs.py>`"

#: ../../pyvista/doc/source/examples/02-plot/movie_glyphs.rst:156
msgid ""
":download:`Download Jupyter notebook: movie_glyphs.ipynb "
"<movie_glyphs.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: movie_glyphs.ipynb "
"<movie_glyphs.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/moving_cmap.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_moving_cmap.py>` to "
"download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_moving_cmap.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/moving_cmap.rst:24
msgid "Create a GIF Movie of a Static Object with a Moving Colormap"
msgstr "カラーマップが移動する静止物体のGIFムービーを作成します"

#: ../../pyvista/doc/source/examples/02-plot/moving_cmap.rst:25
msgid ""
"Generate a gif movie of a Hopf torus with a moving colormap, by updating the"
" scalars."
msgstr "カラーマップを移動させながら，スカラーを更新して，Hopfトーラスのgifムービーを生成します．"

#: ../../pyvista/doc/source/examples/02-plot/moving_cmap.rst:113
msgid "**Total running time of the script:** ( 0 minutes  9.912 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  9.912 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/moving_cmap.rst:127
msgid ""
":download:`Download Python source code: moving_cmap.py <moving_cmap.py>`"
msgstr ""
":download:`Download Python source code: moving_cmap.py <moving_cmap.py>`"

#: ../../pyvista/doc/source/examples/02-plot/moving_cmap.rst:131
msgid ""
":download:`Download Jupyter notebook: moving_cmap.ipynb <moving_cmap.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: moving_cmap.ipynb <moving_cmap.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/multi-window.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_multi-window.py>` to"
" download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_multi-window.py>`  "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/multi-window.rst:22
msgid "Multi-Window Plot"
msgstr "マルチウィンドウプロット"

#: ../../pyvista/doc/source/examples/02-plot/multi-window.rst:25
msgid "Subplotting: having multiple scenes in a single window"
msgstr "サブプロット:1つのウィンドウに複数のシーンを表示"

#: ../../pyvista/doc/source/examples/02-plot/multi-window.rst:44
msgid ""
"This example shows how to create a multi-window plotter by specifying the "
"``shape`` parameter.  The window generated is a two by two window by setting"
" ``shape=(2, 2)``. Use the :func:`pyvista.Plotter.subplot` method to select "
"the subplot you wish to be the active subplot."
msgstr ""
"この例では， ``shape`` パラメータを指定してマルチウィンドウプロッタを作成する方法を示します． ``shape=(2, 2)`` "
"を設定すると，生成されるウィンドウは2×2ウィンドウになります．アクティブなサブプロットにするサブプロットを選択するには， "
":func:`pyvista.Plotter.subplot` メソッドを使用します．"

#: ../../pyvista/doc/source/examples/02-plot/multi-window.rst:129
msgid ""
"Split the rendering window in half and subdivide it in a nr. of vertical or "
"horizontal subplots."
msgstr "レンダリングウィンドウを半分に分割し，垂直サブプロットまたは水平サブプロットに分割します．"

#: ../../pyvista/doc/source/examples/02-plot/multi-window.rst:180
msgid ""
"To get full flexibility over the layout grid, you can define the relative "
"weighting of rows and columns and register groups that can span over "
"multiple rows and columns. A group is defined through a tuple "
"``(rows,cols)`` of row and column indices or slices. The group always spans "
"from the smallest to the largest (row or column) id that is passed through "
"the list or slice."
msgstr ""
"レイアウトグリッド上で完全な柔軟性を得るには，行と列の相対的な重み付けを定義し，複数の行と列にまたがるレジスタグループを定義します．グループは，行と列のインデックスかスライスの組"
" ``(行,列)`` を通して定義されます．グループは常に，リストまたはスライスを通過する最小のIDから最大のID (行または列)までの範囲になります．"

#: ../../pyvista/doc/source/examples/02-plot/multi-window.rst:270
msgid "**Total running time of the script:** ( 0 minutes  2.335 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  2.335 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/multi-window.rst:284
msgid ""
":download:`Download Python source code: multi-window.py <multi-window.py>`"
msgstr ""
":download:`Download Python source code: multi-window.py <multi-window.py>`"

#: ../../pyvista/doc/source/examples/02-plot/multi-window.rst:288
msgid ""
":download:`Download Jupyter notebook: multi-window.ipynb <multi-"
"window.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: multi-window.ipynb <multi-"
"window.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/opacity.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_opacity.py>` to "
"download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_02-plot_opacity.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/opacity.rst:24
msgid "Plot with Opacity"
msgstr "不透明度を指定してプロット"

#: ../../pyvista/doc/source/examples/02-plot/opacity.rst:26
msgid ""
"Plot a mesh's scalar array with an opacity transfer function or opacity "
"mapping based on a scalar array."
msgstr "不透明度伝達関数またはスカラー配列に基づく不透明度マッピングを使用して，メッシュのスカラー配列をプロットします．"

#: ../../pyvista/doc/source/examples/02-plot/opacity.rst:51
msgid "Global Value"
msgstr "グローバル値"

#: ../../pyvista/doc/source/examples/02-plot/opacity.rst:53
msgid ""
"You can also apply a global opacity value to the mesh by passing a single "
"float between 0 and 1 which would enable you to see objects behind the mesh:"
msgstr ""
"また，0から1の範囲で1つのfloat値を渡すことにより，グローバル不透明度値をメッシュに適用し，メッシュの背後にあるオブジェクトを表示することもできます．"

#: ../../pyvista/doc/source/examples/02-plot/opacity.rst:83
msgid ""
"Note that you can specify ``use_transparency=True`` to convert opacities to "
"transparencies in any of the following examples."
msgstr "次の例では， ``use_transparency=True`` を指定して不透明度を透明度に変換できます．"

#: ../../pyvista/doc/source/examples/02-plot/opacity.rst:89
msgid "Transfer Functions"
msgstr "転送機能"

#: ../../pyvista/doc/source/examples/02-plot/opacity.rst:91
msgid ""
"It's possible to apply an opacity mapping to any scalar array plotted. You "
"can specify either a single static value to make the mesh transparent on all"
" cells, or use a transfer function where the scalar array plotted is mapped "
"to the opacity. We have several predefined transfer functions."
msgstr ""
"プロットされた任意のスカラー配列に不透明度マッピングを適用することができます．単一の静的な値を指定してすべてのセルでメッシュを透明にするか，またはプロットされたスカラー配列が不透明度にマップされる伝達関数を使用できます．いくつかの伝達関数があらかじめ定義されています．"

#: ../../pyvista/doc/source/examples/02-plot/opacity.rst:96
msgid "Opacity transfer functions are:"
msgstr "不透明度転送関数は次のとおりです．"

#: ../../pyvista/doc/source/examples/02-plot/opacity.rst:98
msgid ""
"``'linear'``: linearly vary (increase) opacity across the plotted scalar "
"range from low to high"
msgstr "``'linear'``: プロットされたスカラー範囲の不透明度を低い値から高い値まで直線的に変化 (増加) させます"

#: ../../pyvista/doc/source/examples/02-plot/opacity.rst:99
msgid ""
"``'linear_r'``: linearly vary (increase) opacity across the plotted scalar "
"range from high to low"
msgstr "``'linear_r'``: プロットされたスカラー範囲全体の不透明度を高い値から低い値まで直線的に変化 (増加) させる"

#: ../../pyvista/doc/source/examples/02-plot/opacity.rst:100
msgid ""
"``'geom'``: on a log scale, vary (increase) opacity across the plotted "
"scalar range from low to high"
msgstr "``'geom'``: 対数スケールで，プロットされたスカラー範囲全体の不透明度を低から高まで変化 (増加) させます"

#: ../../pyvista/doc/source/examples/02-plot/opacity.rst:101
msgid ""
"``'geom_r'``: on a log scale, vary (increase) opacity across the plotted "
"scalar range from high to low"
msgstr "``'geom_r'``: 対数スケールで，プロットされたスカラー範囲全体の不透明度を高から低まで変化 (増加) させます"

#: ../../pyvista/doc/source/examples/02-plot/opacity.rst:102
msgid ""
"``'sigmoid'``: vary (increase) opacity on a sigmoidal s-curve across the "
"plotted scalar range from low to high"
msgstr "``'sigmoid'``: S字曲線上の不透明度を低い値から高い値までプロットされたスカラー範囲にわたって変化させる (増加させる)"

#: ../../pyvista/doc/source/examples/02-plot/opacity.rst:103
msgid ""
"``'sigmoid_r'``: vary (increase) opacity on a sigmoidal s-curve across the "
"plotted scalar range from high to low"
msgstr "``'sigmoid_r'``: S字曲線上の不透明度を，プロットされたスカラー範囲の高低で変化 (増加) させる"

#: ../../pyvista/doc/source/examples/02-plot/opacity.rst:147
msgid ""
"It's also possible to use your own transfer function that will be linearly "
"mapped to the scalar array plotted. For example, we can create an opacity "
"mapping as:"
msgstr ""
"また，プロットされたスカラー配列に線形にマップされる独自の伝達関数を使用することもできます．たとえば，次のように不透明度マッピングを作成できます．"

#: ../../pyvista/doc/source/examples/02-plot/opacity.rst:166
msgid ""
"When given a minimized opacity mapping like that above, PyVista interpolates"
" it across a range of how many colors are shown when mapping the scalars. If"
" ``scipy`` is available, then a quadratic interpolation is used - otherwise,"
" a simple linear interpolation is used. Curious what that opacity transfer "
"function looks like? You can fetch it:"
msgstr ""
"上記のように最小化された不透明度マッピングが与えられると，PyVistaはスカラーをマッピングするときに表示される色の数の範囲にわたって不透明度マッピングを補間します．"
" ``scipy`` が利用可能なら，2次補間が使用されます-"
"そうでなければ，単純な線形補間が使用されます．不透明度伝達関数がどのようなものか知りたいですか?次のようにして取得できます．"

#: ../../pyvista/doc/source/examples/02-plot/opacity.rst:202
msgid ""
"That opacity mapping will have an opacity of 0.0 at the minimum scalar "
"range, a value or 0.9 at the middle of the scalar range, and a value of 0.3 "
"at the maximum of the scalar range:"
msgstr "不透明度マッピングの不透明度は，最小スカラー範囲で0.0，値はスカラー範囲の中央で0.9，値はスカラー範囲の最大で0.3になります．"

#: ../../pyvista/doc/source/examples/02-plot/opacity.rst:227
msgid ""
"Opacity mapping is often useful when plotting DICOM images. For example, "
"download the sample knee DICOM image:"
msgstr ""
"不透明度マッピングは， DICOM画像をプロットするときにしばしば有用である．たとえば，サンプルのknee DICOMイメージをダウンロードします．"

#: ../../pyvista/doc/source/examples/02-plot/opacity.rst:245
msgid ""
"And here we inspect the DICOM image with a few different opacity mappings:"
msgstr "ここでは，いくつかの異なる不透明度マッピングを使用してDICOM画像を検査します．"

#: ../../pyvista/doc/source/examples/02-plot/opacity.rst:285
msgid "Opacity by Array"
msgstr "配列による不透明度"

#: ../../pyvista/doc/source/examples/02-plot/opacity.rst:287
msgid ""
"You can also use a scalar array associated with the mesh to give each cell "
"its own opacity/transparency value derived from a scalar field. For example,"
" an uncertainty array from a modelling result could be used to hide regions "
"of a mesh that are uncertain and highlight regions that are well resolved."
msgstr ""
"メッシュに関連付けられたスカラー配列を使用して，スカラーフィールドから得られた独自の不透明度/透明度値を各セルに与えることもできます．たとえば，モデリング結果の不確実性配列を使用して，不確実性のあるメッシュ領域を非表示にし，適切に解決された領域をハイライト表示することができます．"

#: ../../pyvista/doc/source/examples/02-plot/opacity.rst:292
msgid ""
"The following is a demonstration of plotting a mesh with colored values and "
"using a second array to control the transparency of the mesh"
msgstr "次に，カラー値を使用してメッシュをプロットし，2番目の配列を使用してメッシュの透明度を制御する例を示します．"

#: ../../pyvista/doc/source/examples/02-plot/opacity.rst:321
msgid ""
"Make sure to flag ``use_transparency=True`` since we want areas of high "
"variance to have high transparency."
msgstr "分散の大きい領域に高い透明度を持たせたいので，必ず ``use_transparency=True`` にフラグを立ててください．"

#: ../../pyvista/doc/source/examples/02-plot/opacity.rst:324
msgid ""
"Also, since the opacity array must be between 0 and 1, we normalize the "
"temperature variance array by the maximum value.  That way high variance "
"will be completely transparent."
msgstr ""
"Also, since the opacity array must be between 0 and 1, we normalize the "
"temperature variance array by the maximum value.  That way high variance "
"will be completely transparent."

#: ../../pyvista/doc/source/examples/02-plot/opacity.rst:366
msgid "**Total running time of the script:** ( 0 minutes  9.563 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  9.563 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/opacity.rst:381
msgid ":download:`Download Python source code: opacity.py <opacity.py>`"
msgstr ":download:`Download Python source code: opacity.py <opacity.py>`"

#: ../../pyvista/doc/source/examples/02-plot/opacity.rst:387
msgid ":download:`Download Jupyter notebook: opacity.ipynb <opacity.ipynb>`"
msgstr ":download:`Download Jupyter notebook: opacity.ipynb <opacity.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/orbit.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_orbit.py>` to download "
"the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_02-plot_orbit.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/orbit.rst:24
msgid "Orbiting"
msgstr "オービット"

#: ../../pyvista/doc/source/examples/02-plot/orbit.rst:26
msgid "Orbit around a scene."
msgstr "シーンを周回します．"

#: ../../pyvista/doc/source/examples/02-plot/orbit.rst:29
msgid ""
"The quality of the movie will be better when using "
"``p.open_movie('orbit.mp4')`` instead of ``p.open_gif('orbit.gif')``"
msgstr ""
"``p.open_gif('orbit.gif')`` ではなく， ``p.open_movie('orbit.mp4')`` "
"を使うと，ムービーの品質が向上します．"

#: ../../pyvista/doc/source/examples/02-plot/orbit.rst:33
msgid ""
"For orbiting to work you first have to show the scene and leave the plotter "
"open with ``.show(auto_close=False)``.  You may also have to set "
"``pv.Plotter(off_screen=True)``"
msgstr ""
"軌道を描くには，まずシーンを表示し，プロッターを ``.show(auto_close=False)`` で開いたままにしておく必要があります． また，"
" ``pv.Plotter(off_screen=True)`` を設定する必要があるかもしれません．"

#: ../../pyvista/doc/source/examples/02-plot/orbit.rst:38
msgid ""
"Use ``lighting=False`` to reduce the size of the color space to avoid "
"\"jittery\" GIFs when showing the scalar bar."
msgstr ""
"スカラーバーを表示する際に \"カクカク \"したGIFにならないように， ``lighting=False`` "
"を使って色空間のサイズを小さくしてください．"

#: ../../pyvista/doc/source/examples/02-plot/orbit.rst:60
msgid "Orbit around the Mt. St Helens dataset."
msgstr "St Helens山のデータセット周辺のオービット．"

#: ../../pyvista/doc/source/examples/02-plot/orbit.rst:158
msgid "**Total running time of the script:** ( 1 minutes  3.942 seconds)"
msgstr "**Total running time of the script:** ( 1 minutes  3.942 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/orbit.rst:173
msgid ":download:`Download Python source code: orbit.py <orbit.py>`"
msgstr ":download:`Download Python source code: orbit.py <orbit.py>`"

#: ../../pyvista/doc/source/examples/02-plot/orbit.rst:179
msgid ":download:`Download Jupyter notebook: orbit.ipynb <orbit.ipynb>`"
msgstr ":download:`Download Jupyter notebook: orbit.ipynb <orbit.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/ortho-slices.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_ortho-slices.py>` to "
"download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_02-plot_ortho-slices.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/ortho-slices.rst:24
msgid "Orthogonal Slices"
msgstr "直交スライス"

#: ../../pyvista/doc/source/examples/02-plot/ortho-slices.rst:26
msgid "View three orthogonal slices from a mesh."
msgstr "メッシュから3つの直交スライスを表示します．"

#: ../../pyvista/doc/source/examples/02-plot/ortho-slices.rst:28
msgid ""
"Use the :func:`pyvista.DataSetFilters.slice_orthogonal` filter to create "
"these slices simultaneously."
msgstr ""
"これらのスライスを同時に作成するには， :func:`pyvista.DataSetFilters.slice_orthogonal` "
"フィルタを使用します．"

#: ../../pyvista/doc/source/examples/02-plot/ortho-slices.rst:58
msgid ""
"Create three slices. Easily control their locations with the ``x``, ``y``, "
"and ``z`` arguments."
msgstr "3つのスライスを作成します． ``x`` ， ``y`` ，および ``z`` の引数を使用して，簡単に位置を制御できます．"

#: ../../pyvista/doc/source/examples/02-plot/ortho-slices.rst:149
msgid "**Total running time of the script:** ( 0 minutes  5.094 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  5.094 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/ortho-slices.rst:164
msgid ""
":download:`Download Python source code: ortho-slices.py <ortho-slices.py>`"
msgstr ""
":download:`Download Python source code: ortho-slices.py <ortho-slices.py>`"

#: ../../pyvista/doc/source/examples/02-plot/ortho-slices.rst:170
msgid ""
":download:`Download Jupyter notebook: ortho-slices.ipynb <ortho-"
"slices.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: ortho-slices.ipynb <ortho-"
"slices.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/pbr.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_pbr.py>` to download"
" the full example code"
msgstr ""

#: ../../pyvista/doc/source/examples/02-plot/pbr.rst:24
msgid "Physically Based Rendering"
msgstr "物理ベースのレンダリング"

#: ../../pyvista/doc/source/examples/02-plot/pbr.rst:26
msgid ""
"VTK 9 introduced Physically Based Rendering (PBR) and we have exposed that "
"functionality in PyVista. Read the `blog about PBR "
"<https://blog.kitware.com/vtk-pbr/>`_ for more details."
msgstr ""
"VTK9は物理ベースレンダリング(PBR)を導入しており，その機能をPyVistaで公開しています．詳細については `blog about PBR "
"<https://blog.kitware.com/vtk-pbr/>`_ をお読みください．"

#: ../../pyvista/doc/source/examples/02-plot/pbr.rst:30
msgid ""
"PBR is only supported for :class:`pyvista.PolyData` and can be triggered via"
" the ``pbr`` keyword argument of ``add_mesh``. Also use the ``metallic`` and"
" ``roughness`` arguments for further control."
msgstr ""
"PBRは :class:`pyvista.PolyData` に対してのみサポートされており， ``add_mesh`` の ``pbr`` "
"キーワード引数を介して起動できます．また， ``metallic`` および ``roughness`` 引数を使用してさらに制御できます．"

#: ../../pyvista/doc/source/examples/02-plot/pbr.rst:34
msgid ""
"Let's show off this functionality by rendering a high quality mesh of a "
"statue as though it were metallic."
msgstr "この機能を，彫像の高品質メッシュを金属のようにレンダリングすることで示しましょう．"

#: ../../pyvista/doc/source/examples/02-plot/pbr.rst:64
msgid ""
"Let's render the mesh with a base color of \"linen\" to give it a metal "
"looking finish."
msgstr "ベースカラーが \"linen\" のメッシュをレンダリングして，メタルのような仕上がりにしてみましょう．"

#: ../../pyvista/doc/source/examples/02-plot/pbr.rst:96
msgid "Show the variation of the metallic and roughness parameters."
msgstr "メタリックパラメータと粗さパラメータの変化を表示します．"

#: ../../pyvista/doc/source/examples/02-plot/pbr.rst:98
msgid ""
"Plot with metallic increasing from left to right and roughness increasing "
"from bottom to top."
msgstr "左から右にメタリックが増加し，下から上に粗さが増加するようにプロットします．"

#: ../../pyvista/doc/source/examples/02-plot/pbr.rst:133
msgid "Combine custom lighting and physically based rendering."
msgstr "カスタム照明と物理ベースレンダリングを組み合わせます．"

#: ../../pyvista/doc/source/examples/02-plot/pbr.rst:179
msgid "**Total running time of the script:** (1 minutes 47.940 seconds)"
msgstr ""

#: ../../pyvista/doc/source/examples/02-plot/pbr.rst:193
msgid ":download:`Download Python source code: pbr.py <pbr.py>`"
msgstr ":download:`Download Python source code: pbr.py <pbr.py>`"

#: ../../pyvista/doc/source/examples/02-plot/pbr.rst:197
msgid ":download:`Download Jupyter notebook: pbr.ipynb <pbr.ipynb>`"
msgstr ":download:`Download Jupyter notebook: pbr.ipynb <pbr.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/plot-over-circular-arc.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_plot-over-circular-"
"arc.py>` to download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_02-plot_plot-over-circular-arc.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/plot-over-circular-arc.rst:22
msgid "Plot Scalars Over a Circular Arc"
msgstr "円形円弧上にスカラーをプロットします"

#: ../../pyvista/doc/source/examples/02-plot/plot-over-circular-arc.rst:24
msgid "Interpolate the scalars of a dataset over a circular arc."
msgstr "データセットのスカラーを円弧上で補間します．"

#: ../../pyvista/doc/source/examples/02-plot/plot-over-circular-arc.rst:44
#: ../../pyvista/doc/source/examples/02-plot/plot-over-line.rst:46
msgid "Volumetric Mesh"
msgstr "ボリュームメッシュ"

#: ../../pyvista/doc/source/examples/02-plot/plot-over-circular-arc.rst:46
msgid "Add the height scalars to a uniform 3D mesh."
msgstr "高さスカラーを均一な3 Dメッシュに追加します．"

#: ../../pyvista/doc/source/examples/02-plot/plot-over-circular-arc.rst:87
msgid "Run the filter and produce a line plot."
msgstr "フィルタを実行し，ラインプロットを作成します．"

#: ../../pyvista/doc/source/examples/02-plot/plot-over-circular-arc.rst:124
msgid ""
":download:`Download Python source code: plot-over-circular-arc.py <plot-"
"over-circular-arc.py>`"
msgstr ""
":download:`Download Python source code: plot-over-circular-arc.py <plot-"
"over-circular-arc.py>`"

#: ../../pyvista/doc/source/examples/02-plot/plot-over-circular-arc.rst:130
msgid ""
":download:`Download Jupyter notebook: plot-over-circular-arc.ipynb <plot-"
"over-circular-arc.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plot-over-circular-arc.ipynb <plot-"
"over-circular-arc.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/plot-over-line.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_plot-over-line.py>` to "
"download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_02-plot_plot-over-line.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/plot-over-line.rst:24
msgid "Plot Over Line"
msgstr "線上のプロット"

#: ../../pyvista/doc/source/examples/02-plot/plot-over-line.rst:26
msgid "Plot the values of a dataset over a line through that dataset"
msgstr "データセットの値をそのデータセットの行にプロットする"

#: ../../pyvista/doc/source/examples/02-plot/plot-over-line.rst:48
msgid "First a 3D mesh example to demonstrate"
msgstr "最初に説明する3 Dメッシュの例"

#: ../../pyvista/doc/source/examples/02-plot/plot-over-line.rst:82
#: ../../pyvista/doc/source/examples/02-plot/plot-over-line.rst:143
msgid "Run the filter and produce a line plot"
msgstr "フィルタを実行し，ラインプロットを作成する"

#: ../../pyvista/doc/source/examples/02-plot/plot-over-line.rst:106
msgid "Flat Surface"
msgstr "フラットサーフェス"

#: ../../pyvista/doc/source/examples/02-plot/plot-over-line.rst:108
msgid "We could also plot the values of a mesh that lies on a flat surface"
msgstr "平面上にあるメッシュの値をプロットすることもできます．"

#: ../../pyvista/doc/source/examples/02-plot/plot-over-line.rst:172
msgid "**Total running time of the script:** ( 0 minutes  1.659 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.659 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/plot-over-line.rst:187
msgid ""
":download:`Download Python source code: plot-over-line.py <plot-over-"
"line.py>`"
msgstr ""
":download:`Download Python source code: plot-over-line.py <plot-over-"
"line.py>`"

#: ../../pyvista/doc/source/examples/02-plot/plot-over-line.rst:193
msgid ""
":download:`Download Jupyter notebook: plot-over-line.ipynb <plot-over-"
"line.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plot-over-line.ipynb <plot-over-"
"line.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/point-cell-scalars.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_point-cell-"
"scalars.py>` to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_point-cell-"
"scalars.py>` をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/point-cell-scalars.rst:24
msgid "Point Cell Scalars"
msgstr "ポイントセルスカラー"

#: ../../pyvista/doc/source/examples/02-plot/point-cell-scalars.rst:26
msgid ""
"This example demonstrates how to add point scalars for each individual cell "
"to a dataset."
msgstr "この例では，データセットに個々のセルの点スカラーを追加する方法を説明します．"

#: ../../pyvista/doc/source/examples/02-plot/point-cell-scalars.rst:46
msgid ""
"load the first 4 cells from the example UnstructuredGrid. Note how the "
"number of points is less than 32 since all the points are joined in the "
"center."
msgstr ""
"は，サンプルの UnstructuredGrid から最初の 4 "
"つのセルをロードします．すべての点が中心で結合されているため，点の数が32より少ないことに注意してください．"

#: ../../pyvista/doc/source/examples/02-plot/point-cell-scalars.rst:62
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>UnstructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>4</td></tr>\n"
"<tr><td>N Points</td><td>18</td></tr>\n"
"<tr><td>X Bounds</td><td>0.000e+00, 1.000e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>0.000e+00, 1.000e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 5.000e-01</td></tr>\n"
"<tr><td>N Arrays</td><td>5</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td>sample_point_scalars</td><td>Points</td><td>int64</td><td>1</td><td>1.000e+00</td><td>2.860e+02</td></tr>\n"
"<tr><td>VTKorigID</td><td>Points</td><td>int64</td><td>1</td><td>0.000e+00</td><td>9.000e+01</td></tr>\n"
"<tr><td>vtkOriginalPointIds</td><td>Points</td><td>int64</td><td>1</td><td>0.000e+00</td><td>9.000e+01</td></tr>\n"
"<tr><td><b>sample_cell_scalars</b></td><td>Cells</td><td>int32</td><td>1</td><td>1.000e+00</td><td>4.000e+00</td></tr>\n"
"<tr><td>vtkOriginalCellIds</td><td>Cells</td><td>int64</td><td>1</td><td>0.000e+00</td><td>3.000e+00</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>UnstructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>4</td></tr>\n"
"<tr><td>N Points</td><td>18</td></tr>\n"
"<tr><td>X Bounds</td><td>0.000e+00, 1.000e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>0.000e+00, 1.000e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 5.000e-01</td></tr>\n"
"<tr><td>N Arrays</td><td>5</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td>sample_point_scalars</td><td>Points</td><td>int64</td><td>1</td><td>1.000e+00</td><td>2.860e+02</td></tr>\n"
"<tr><td>VTKorigID</td><td>Points</td><td>int64</td><td>1</td><td>0.000e+00</td><td>9.000e+01</td></tr>\n"
"<tr><td>vtkOriginalPointIds</td><td>Points</td><td>int64</td><td>1</td><td>0.000e+00</td><td>9.000e+01</td></tr>\n"
"<tr><td><b>sample_cell_scalars</b></td><td>Cells</td><td>int32</td><td>1</td><td>1.000e+00</td><td>4.000e+00</td></tr>\n"
"<tr><td>vtkOriginalCellIds</td><td>Cells</td><td>int64</td><td>1</td><td>0.000e+00</td><td>3.000e+00</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/02-plot/point-cell-scalars.rst:94
msgid "Plot Point Scalars"
msgstr "プロットポイントスカラー"

#: ../../pyvista/doc/source/examples/02-plot/point-cell-scalars.rst:95
msgid ""
"At this point it's possible to assign only point or cell scalars to this "
"dataset. First, let's just plot some simple point scalars."
msgstr "この時点では，このデータセットに点またはセルのスカラーだけを割り当てることができます．まず，簡単な点スカラーをプロットしてみよう．"

#: ../../pyvista/doc/source/examples/02-plot/point-cell-scalars.rst:122
msgid "Plot Cell Scalars"
msgstr "プロットセルスカラー"

#: ../../pyvista/doc/source/examples/02-plot/point-cell-scalars.rst:123
msgid ""
"Next, let's plot cell scalars. We're simply assigning based on the cell "
"index."
msgstr "次に，セルのスカラーをプロットしてみます．単純にセルインデックスを元に代入しています．"

#: ../../pyvista/doc/source/examples/02-plot/point-cell-scalars.rst:149
msgid "Splitting the Cells"
msgstr "セルを分割する"

#: ../../pyvista/doc/source/examples/02-plot/point-cell-scalars.rst:150
msgid ""
"If you wanted to assign data to each point of each cell and plot that, it's "
"simply not possible since these hexahedral cells all share the same points. "
"To split up individual cells, separate them using "
":func:`pyvista.DataSetFilters.separate_cells`."
msgstr ""
"もし，各セルの各ポイントにデータを割り当てて，それをプロットしたかったら，これらの6面体のセルはすべて同じポイントを共有しているので，単純に不可能です．個々のセルを分割するには，"
" :func:`pyvista.DataSetFilters.separate_cells` を使用してセルを分割します．"

#: ../../pyvista/doc/source/examples/02-plot/point-cell-scalars.rst:155
msgid ""
"With this filter the resulting :class:`pyvista.UnstructuredGrid` now "
"contains 32 points, or 8 for each cell. They are now fully separated with no"
" shared points."
msgstr ""
"このフィルタを適用すると， :class:`pyvista.UnstructuredGrid` "
"は32個のポイントを含むようになり，各セルに8個のポイントが含まれるようになりました．これは，各セルに8個ずつ，合計32個のポイントが含まれるようになります．"

#: ../../pyvista/doc/source/examples/02-plot/point-cell-scalars.rst:173
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>UnstructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>4</td></tr>\n"
"<tr><td>N Points</td><td>32</td></tr>\n"
"<tr><td>X Bounds</td><td>0.000e+00, 1.000e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>0.000e+00, 1.000e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 5.000e-01</td></tr>\n"
"<tr><td>N Arrays</td><td>7</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td>sample_point_scalars</td><td>Points</td><td>int64</td><td>1</td><td>1.000e+00</td><td>2.860e+02</td></tr>\n"
"<tr><td>VTKorigID</td><td>Points</td><td>int64</td><td>1</td><td>0.000e+00</td><td>9.000e+01</td></tr>\n"
"<tr><td>vtkOriginalPointIds</td><td>Points</td><td>int64</td><td>1</td><td>0.000e+00</td><td>9.000e+01</td></tr>\n"
"<tr><td>Point Data</td><td>Points</td><td>int64</td><td>1</td><td>0.000e+00</td><td>1.700e+01</td></tr>\n"
"<tr><td>sample_cell_scalars</td><td>Cells</td><td>int32</td><td>1</td><td>1.000e+00</td><td>4.000e+00</td></tr>\n"
"<tr><td>vtkOriginalCellIds</td><td>Cells</td><td>int64</td><td>1</td><td>0.000e+00</td><td>3.000e+00</td></tr>\n"
"<tr><td><b>Cell Data</b></td><td>Cells</td><td>int64</td><td>1</td><td>0.000e+00</td><td>3.000e+00</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>UnstructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>4</td></tr>\n"
"<tr><td>N Points</td><td>32</td></tr>\n"
"<tr><td>X Bounds</td><td>0.000e+00, 1.000e+00</td></tr>\n"
"<tr><td>Y Bounds</td><td>0.000e+00, 1.000e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 5.000e-01</td></tr>\n"
"<tr><td>N Arrays</td><td>7</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td>sample_point_scalars</td><td>Points</td><td>int64</td><td>1</td><td>1.000e+00</td><td>2.860e+02</td></tr>\n"
"<tr><td>VTKorigID</td><td>Points</td><td>int64</td><td>1</td><td>0.000e+00</td><td>9.000e+01</td></tr>\n"
"<tr><td>vtkOriginalPointIds</td><td>Points</td><td>int64</td><td>1</td><td>0.000e+00</td><td>9.000e+01</td></tr>\n"
"<tr><td>Point Data</td><td>Points</td><td>int64</td><td>1</td><td>0.000e+00</td><td>1.700e+01</td></tr>\n"
"<tr><td>sample_cell_scalars</td><td>Cells</td><td>int32</td><td>1</td><td>1.000e+00</td><td>4.000e+00</td></tr>\n"
"<tr><td>vtkOriginalCellIds</td><td>Cells</td><td>int64</td><td>1</td><td>0.000e+00</td><td>3.000e+00</td></tr>\n"
"<tr><td><b>Cell Data</b></td><td>Cells</td><td>int64</td><td>1</td><td>0.000e+00</td><td>3.000e+00</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/02-plot/point-cell-scalars.rst:207
msgid "Plot Point Cell Data"
msgstr "プロットポイント セルデータ"

#: ../../pyvista/doc/source/examples/02-plot/point-cell-scalars.rst:208
msgid ""
"Now we can plot values for each point for each cell. This will still be "
"assigned to the point data."
msgstr "これで，各セルに対して各ポイントの値をプロットできるようになりました．これもやはり点データに割り当てることになる．"

#: ../../pyvista/doc/source/examples/02-plot/point-cell-scalars.rst:211
msgid ""
"Here we use :func:`numpy.hstack` for clarity, but as long as the length of "
"the data matches the number of points, you'll be able to use this approach."
msgstr ""
"ここではわかりやすくするために :func:`numpy.hstack` "
"を使っていますが，データの長さと点の数が一致していれば，この方法を使うことができるでしょう．"

#: ../../pyvista/doc/source/examples/02-plot/point-cell-scalars.rst:214
msgid ""
"See how the plotted values appear continuous within a cell and discontinuous"
" between cells. This matches how stresses and strains are calculated from "
"finite element solutions."
msgstr ""
"プロットされた値が，セル内では連続的に見え，セル間では不連続に見える様子をご覧ください．これは，有限要素法の解から応力と歪みがどのように計算されるかに一致します．"

#: ../../pyvista/doc/source/examples/02-plot/point-cell-scalars.rst:247
msgid "**Total running time of the script:** ( 0 minutes  0.875 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  0.875 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/point-cell-scalars.rst:261
msgid ""
":download:`Download Python source code: point-cell-scalars.py <point-cell-"
"scalars.py>`"
msgstr ""
":download:`Download Python source code: point-cell-scalars.py <point-cell-"
"scalars.py>`"

#: ../../pyvista/doc/source/examples/02-plot/point-cell-scalars.rst:265
msgid ""
":download:`Download Jupyter notebook: point-cell-scalars.ipynb <point-cell-"
"scalars.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: point-cell-scalars.ipynb <point-cell-"
"scalars.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/point-clouds.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_point-clouds.py>` to"
" download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_point-clouds.py>` to"
" download the full example code"

#: ../../pyvista/doc/source/examples/02-plot/point-clouds.rst:24
msgid "Plotting Point Clouds"
msgstr "点群のプロット"

#: ../../pyvista/doc/source/examples/02-plot/point-clouds.rst:25
msgid ""
"This example shows you how to plot point clouds using PyVista using both the"
" ``'points'`` and ``'points_gaussian'`` styles."
msgstr ""
"この例では，PyVistaを使って ``'points'`` と ``'points_gaussian'`` "
"の両方のスタイルを使い，点群のプロットを行う方法を紹介します．"

#: ../../pyvista/doc/source/examples/02-plot/point-clouds.rst:48
msgid "Compare the Plotting methods"
msgstr "プロット方法の比較"

#: ../../pyvista/doc/source/examples/02-plot/point-clouds.rst:49
msgid ""
"First, let's create a sample point cloud using :func:`numpy.random.random`."
msgstr "まず，サンプル点群を :func:`numpy.random.random` を使って作ってみましょう．"

#: ../../pyvista/doc/source/examples/02-plot/point-clouds.rst:83
msgid "Basic Plot"
msgstr "基本プロット"

#: ../../pyvista/doc/source/examples/02-plot/point-clouds.rst:84
msgid ""
"We can simply plot this point cloud using the convenience "
":func:`pyvista.plot` function."
msgstr "この点群は，便利な :func:`pyvista.plot` 関数を使って簡単にプロットすることができます．"

#: ../../pyvista/doc/source/examples/02-plot/point-clouds.rst:110
msgid "Plot with Scalars"
msgstr "スカラーを使ったプロット"

#: ../../pyvista/doc/source/examples/02-plot/point-clouds.rst:111
msgid ""
"That's quite boring, so let's spice things up by adding color. We can either"
" use a single scalar to plot the points. For example, the z coordinates."
msgstr "それではつまらないので，色をつけてみましょう．点をプロットするには，単一のスカラーを使うこともできます．例えば，z座標．"

#: ../../pyvista/doc/source/examples/02-plot/point-clouds.rst:114
msgid "For fun, let's also render the points as spheres."
msgstr "また，楽しみに，点を球体でレンダリングしてみましょう．"

#: ../../pyvista/doc/source/examples/02-plot/point-clouds.rst:144
msgid "Plot with RGBA"
msgstr "RGBAを使ったプロット"

#: ../../pyvista/doc/source/examples/02-plot/point-clouds.rst:145
msgid ""
"Alternatively, we can color the point cloud using an RGBA array. This has "
"been normalized from (0, 1), but we could have also used a ``numpy.uint8`` "
"array from 0-255."
msgstr ""
"また，RGBA配列を使用して点群に色を付けることもできます．これは (0, 1) で正規化されていますが，0-255 の ``numpy.uint8``"
" 配列を使用することも可能です．"

#: ../../pyvista/doc/source/examples/02-plot/point-clouds.rst:172
msgid "Point Cloud Plot Styles"
msgstr "点群プロットスタイル"

#: ../../pyvista/doc/source/examples/02-plot/point-clouds.rst:173
msgid ""
"PyVista supports the ``'points_gaussian'`` style, which renders points as "
"individual soft sprites. You have the option of displaying these as tight "
"\"spheres\" using ``render_points_as_spheres=True`` (default), or disabling "
"it to create softer points at the expense of render performance."
msgstr ""
"PyVista は ``'points_gaussian'`` スタイルをサポートしており，点を個々のソフトスプライトとしてレンダリングします．また， "
"``render_points_as_spheres=True`` (デフォルト) "
"を使用すると，レンダリングパフォーマンスを犠牲にして，よりソフトな点を作成することが可能になります．"

#: ../../pyvista/doc/source/examples/02-plot/point-clouds.rst:178
msgid ""
"Here's the basic plot again, but with the style as ``'points_gaussian'``:"
msgstr "再び基本的なプロットを示しますが，スタイルは ``'points_gaussian'`` にしてあります．"

#: ../../pyvista/doc/source/examples/02-plot/point-clouds.rst:201
msgid ""
"Here's a plotter with four combinations of the options side-by-side so you "
"can see for yourself the different options available when plotting these "
"points. PyVista tries to achieve sensible defaults, but should you find "
"these insufficient for your needs, feel free to play around with the various"
" options and find something that works for you."
msgstr ""
"ここに，4つのオプションの組み合わせを並べたプロッタを示しますので，これらの点をプロットするときに利用できるさまざまなオプションを自分で確認することができます．PyVista"
" "
"は賢明なデフォルトを実現しようとしていますが，もしこれがあなたのニーズにとって不十分だと感じたら，遠慮なくいろいろなオプションで遊んで，あなたに合うものを見つけてください．"

#: ../../pyvista/doc/source/examples/02-plot/point-clouds.rst:288
msgid "Orbit a Point Cloud"
msgstr "点群の軌道"

#: ../../pyvista/doc/source/examples/02-plot/point-clouds.rst:289
msgid ""
"Generate a plot orbiting around a point cloud. Color based on the distance "
"from the center of the cloud."
msgstr "点群の周囲を周回するプロットを生成します．点群の中心からの距離に応じて色付けします．"

#: ../../pyvista/doc/source/examples/02-plot/point-clouds.rst:331
msgid "**Total running time of the script:** ( 0 minutes  15.033 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  15.033 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/point-clouds.rst:345
msgid ""
":download:`Download Python source code: point-clouds.py <point-clouds.py>`"
msgstr ""
":download:`Download Python source code: point-clouds.py <point-clouds.py>`"

#: ../../pyvista/doc/source/examples/02-plot/point-clouds.rst:349
msgid ""
":download:`Download Jupyter notebook: point-clouds.ipynb <point-"
"clouds.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: point-clouds.ipynb <point-"
"clouds.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/point-picking.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_point-picking.py>` "
"to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_point-picking.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/point-picking.rst:24
msgid "Picking points on a mesh"
msgstr "メッシュ上の点の選択"

#: ../../pyvista/doc/source/examples/02-plot/point-picking.rst:25
msgid ""
"This example demonstrates how to pick points on meshes using "
":func:`enable_point_picking() <pyvista.Plotter.enable_point_picking>`."
msgstr ""
"この例では， :func:`enable_point_picking() <pyvista.Plotter.enable_point_picking>`"
" を使って，メッシュ上のポイントをピックする方法を示します．"

#: ../../pyvista/doc/source/examples/02-plot/point-picking.rst:45
msgid "Pick points on a sphere"
msgstr "球面上の点を選択"

#: ../../pyvista/doc/source/examples/02-plot/point-picking.rst:74
msgid "Ignore the 3D window"
msgstr "3Dウィンドウを無視"

#: ../../pyvista/doc/source/examples/02-plot/point-picking.rst:76
msgid ""
"In the above example, both points on the mesh and points in the 3d window "
"can be selected. It is possible instead pick only points on the mesh."
msgstr "上の例では，メッシュ上の点と3dウィンドウ内の点の両方を選択することができます．メッシュ上の点だけを選択することも可能です．"

#: ../../pyvista/doc/source/examples/02-plot/point-picking.rst:105
msgid "Modify which actors are pickable"
msgstr "ピックアップ可能なアクターの変更"

#: ../../pyvista/doc/source/examples/02-plot/point-picking.rst:107
msgid "After enabling point picking, we can modify which actors are pickable."
msgstr "ポイントピッキングを有効にした後，どのアクターがピッキング可能かを変更することができます．"

#: ../../pyvista/doc/source/examples/02-plot/point-picking.rst:140
msgid "Pick using the left-mouse button"
msgstr "マウスの左ボタンでピックします"

#: ../../pyvista/doc/source/examples/02-plot/point-picking.rst:168
msgid "**Total running time of the script:** ( 0 minutes  1.028 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.028 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/point-picking.rst:182
msgid ""
":download:`Download Python source code: point-picking.py <point-picking.py>`"
msgstr ""
":download:`Download Python source code: point-picking.py <point-picking.py>`"

#: ../../pyvista/doc/source/examples/02-plot/point-picking.rst:186
msgid ""
":download:`Download Jupyter notebook: point-picking.ipynb <point-"
"picking.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: point-picking.ipynb <point-"
"picking.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/scalar-bars.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_scalar-bars.py>` to "
"download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_scalar-bars.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/scalar-bars.rst:24
msgid "Customize Scalar Bars"
msgstr "スカラーバーをカスタマイズ"

#: ../../pyvista/doc/source/examples/02-plot/scalar-bars.rst:26
msgid ""
"Walk through of all the different capabilities of scalar bars and how a user"
" can customize scalar bars."
msgstr "スカラーバーのさまざまな機能と，ユーザーによるスカラーバーのカスタマイズ方法について説明します．"

#: ../../pyvista/doc/source/examples/02-plot/scalar-bars.rst:46
msgid ""
"By default, when plotting a dataset with a scalar array, a scalar bar for "
"that array is added. To turn off this behavior, a user could specify "
"``show_scalar_bar=False`` when calling ``.add_mesh()``. Let's start with a "
"sample dataset provide via PyVista to demonstrate the default behavior of "
"scalar bar plotting:"
msgstr ""
"デフォルトでは，スカラー配列を使用してデータセットをプロットすると，その配列のスカラーバーが追加されます．この動作を無効にするには，ユーザが "
"``.add_mesh()`` を呼び出すときに ``show_scalar_bar=False`` "
"を指定します．PyVistaで提供されるサンプルデータセットから始めて，スカラーバープロットのデフォルトの動作を説明しましょう．"

#: ../../pyvista/doc/source/examples/02-plot/scalar-bars.rst:81
msgid ""
"We could also plot the scene with an interactive scalar bar to move around "
"and place where we like by specifying passing keyword arguments to control "
"the scalar bar via the ``scalar_bar_args`` parameter in "
":func:`pyvista.Plotter.add_mesh`. The keyword arguments to control the "
"scalar bar are defined in :func:`pyvista.Plotter.add_scalar_bar`."
msgstr ""
":func:`pyvista.Plotter.add_mesh` の ``scalar_bar_args`` "
"パラメータを介してスカラーバーを制御するキーワード引数を渡すことにより，インタラクティブなスカラーバーでシーンをプロットして好きな場所に移動することもできます．スカラーバーを制御するキーワード引数は"
" :func:`pyvista.Plotter.add_scalar_bar` で定義されます．"

#: ../../pyvista/doc/source/examples/02-plot/scalar-bars.rst:113
msgid "Or manually define the scalar bar's location:"
msgstr "または，スカラーバーの位置を手動で定義します:"

#: ../../pyvista/doc/source/examples/02-plot/scalar-bars.rst:141
msgid "The text properties of the scalar bar can also be controlled:"
msgstr "スカラーバーのテキストプロパティも制御できます:"

#: ../../pyvista/doc/source/examples/02-plot/scalar-bars.rst:178
msgid "Labelling values outside of the scalar range"
msgstr "スカラー範囲外の値のラベル付け"

#: ../../pyvista/doc/source/examples/02-plot/scalar-bars.rst:203
msgid ""
"Annotate values of interest using a dictionary. The key of the dictionary "
"must be the value to annotate, and the value must be the string label."
msgstr "辞書を使用して目的の値に注釈を付けます．ディクショナリのキーは注釈を付ける値で，値は文字列ラベルである必要があります．"

#: ../../pyvista/doc/source/examples/02-plot/scalar-bars.rst:235
msgid "**Total running time of the script:** ( 0 minutes  2.830 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  2.830 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/scalar-bars.rst:249
msgid ""
":download:`Download Python source code: scalar-bars.py <scalar-bars.py>`"
msgstr ""
":download:`Download Python source code: scalar-bars.py <scalar-bars.py>`"

#: ../../pyvista/doc/source/examples/02-plot/scalar-bars.rst:253
msgid ""
":download:`Download Jupyter notebook: scalar-bars.ipynb <scalar-bars.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: scalar-bars.ipynb <scalar-bars.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/screenshot.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_screenshot.py>` to "
"download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_02-plot_screenshot.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/screenshot.rst:22
msgid "Saving Screenshots"
msgstr "スクリーンショットを保存する"

#: ../../pyvista/doc/source/examples/02-plot/screenshot.rst:48
msgid ""
"You can also take a screenshot without creating an interactive plot window "
"using the :class:`pyvista.Plotter`:"
msgstr ""
":class:`pyvista.Plotter` を使用して，インタラクティブなプロットウィンドウを作成せずにスクリーンショットを撮ることもできます．"

#: ../../pyvista/doc/source/examples/02-plot/screenshot.rst:74
msgid ""
"The ``img`` array can be used to plot the screenshot in ``matplotlib``:"
msgstr "``img`` 配列を使用して，スクリーンショットを ``matplotlib`` にプロットすることができます．"

#: ../../pyvista/doc/source/examples/02-plot/screenshot.rst:98
msgid "**Total running time of the script:** ( 0 minutes  0.569 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  0.569 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/screenshot.rst:113
msgid ":download:`Download Python source code: screenshot.py <screenshot.py>`"
msgstr ""
":download:`Download Python source code: screenshot.py <screenshot.py>`"

#: ../../pyvista/doc/source/examples/02-plot/screenshot.rst:119
msgid ""
":download:`Download Jupyter notebook: screenshot.ipynb <screenshot.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: screenshot.ipynb <screenshot.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:9
msgid "**01:47.940** total execution time for **examples_02-plot** files:"
msgstr ""

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:12
msgid ":ref:`sphx_glr_examples_02-plot_pbr.py` (``pbr.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_pbr.py` (``pbr.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:12
msgid "01:47.940"
msgstr ""

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:14
msgid ""
":ref:`sphx_glr_examples_02-plot_anti-aliasing.py` (``anti-aliasing.py``)"
msgstr ""
":ref:`sphx_glr_examples_02-plot_anti-aliasing.py` (``anti-aliasing.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:16
msgid ""
":ref:`sphx_glr_examples_02-plot_backface_props.py` (``backface_props.py``)"
msgstr ""
":ref:`sphx_glr_examples_02-plot_backface_props.py` (``backface_props.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:18
msgid ""
":ref:`sphx_glr_examples_02-plot_background_image.py` "
"(``background_image.py``)"
msgstr ""
":ref:`sphx_glr_examples_02-plot_background_image.py` "
"(``background_image.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:20
msgid ":ref:`sphx_glr_examples_02-plot_blurring.py` (``blurring.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_blurring.py` (``blurring.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:22
msgid ":ref:`sphx_glr_examples_02-plot_bounds.py` (``bounds.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_bounds.py` (``bounds.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:24
msgid ":ref:`sphx_glr_examples_02-plot_chart_basics.py` (``chart_basics.py``)"
msgstr ""
":ref:`sphx_glr_examples_02-plot_chart_basics.py` (``chart_basics.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:26
msgid ""
":ref:`sphx_glr_examples_02-plot_chart_overlays.py` (``chart_overlays.py``)"
msgstr ""
":ref:`sphx_glr_examples_02-plot_chart_overlays.py` (``chart_overlays.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:28
msgid ":ref:`sphx_glr_examples_02-plot_clear.py` (``clear.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_clear.py` (``clear.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:30
msgid ":ref:`sphx_glr_examples_02-plot_cmap.py` (``cmap.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_cmap.py` (``cmap.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:32
msgid ":ref:`sphx_glr_examples_02-plot_color_cycler.py` (``color_cycler.py``)"
msgstr ""
":ref:`sphx_glr_examples_02-plot_color_cycler.py` (``color_cycler.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:34
msgid ""
":ref:`sphx_glr_examples_02-plot_composite-picking.py` (``composite-"
"picking.py``)"
msgstr ""
":ref:`sphx_glr_examples_02-plot_composite-picking.py` (``composite-"
"picking.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:36
msgid ""
":ref:`sphx_glr_examples_02-plot_depth-peeling.py` (``depth-peeling.py``)"
msgstr ""
":ref:`sphx_glr_examples_02-plot_depth-peeling.py` (``depth-peeling.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:38
msgid ""
":ref:`sphx_glr_examples_02-plot_depth_of_field.py` (``depth_of_field.py``)"
msgstr ""
":ref:`sphx_glr_examples_02-plot_depth_of_field.py` (``depth_of_field.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:40
msgid ""
":ref:`sphx_glr_examples_02-plot_distance-along-spline.py` (``distance-along-"
"spline.py``)"
msgstr ""
":ref:`sphx_glr_examples_02-plot_distance-along-spline.py` (``distance-along-"
"spline.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:42
msgid ""
":ref:`sphx_glr_examples_02-plot_distance_measurement.py` "
"(``distance_measurement.py``)"
msgstr ""
":ref:`sphx_glr_examples_02-plot_distance_measurement.py` "
"(``distance_measurement.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:44
msgid ":ref:`sphx_glr_examples_02-plot_edges.py` (``edges.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_edges.py` (``edges.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:46
msgid ":ref:`sphx_glr_examples_02-plot_edl.py` (``edl.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_edl.py` (``edl.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:48
msgid ""
":ref:`sphx_glr_examples_02-plot_element-picking.py` (``element-picking.py``)"
msgstr ""
":ref:`sphx_glr_examples_02-plot_element-picking.py` (``element-picking.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:50
msgid ":ref:`sphx_glr_examples_02-plot_floors.py` (``floors.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_floors.py` (``floors.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:52
msgid ":ref:`sphx_glr_examples_02-plot_ghost-cells.py` (``ghost-cells.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_ghost-cells.py` (``ghost-cells.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:54
msgid ":ref:`sphx_glr_examples_02-plot_gif.py` (``gif.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_gif.py` (``gif.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:56
msgid ":ref:`sphx_glr_examples_02-plot_image_depth.py` (``image_depth.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_image_depth.py` (``image_depth.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:58
msgid ""
":ref:`sphx_glr_examples_02-plot_interpolate-before-map.py` (``interpolate-"
"before-map.py``)"
msgstr ""
":ref:`sphx_glr_examples_02-plot_interpolate-before-map.py` (``interpolate-"
"before-map.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:60
msgid ":ref:`sphx_glr_examples_02-plot_isovalue.py` (``isovalue.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_isovalue.py` (``isovalue.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:62
msgid ":ref:`sphx_glr_examples_02-plot_labels.py` (``labels.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_labels.py` (``labels.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:64
msgid ""
":ref:`sphx_glr_examples_02-plot_lighting_mesh.py` (``lighting_mesh.py``)"
msgstr ""
":ref:`sphx_glr_examples_02-plot_lighting_mesh.py` (``lighting_mesh.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:66
msgid ":ref:`sphx_glr_examples_02-plot_linked.py` (``linked.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_linked.py` (``linked.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:68
msgid ":ref:`sphx_glr_examples_02-plot_lookup-table.py` (``lookup-table.py``)"
msgstr ""
":ref:`sphx_glr_examples_02-plot_lookup-table.py` (``lookup-table.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:70
msgid ":ref:`sphx_glr_examples_02-plot_mesh-picking.py` (``mesh-picking.py``)"
msgstr ""
":ref:`sphx_glr_examples_02-plot_mesh-picking.py` (``mesh-picking.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:72
msgid ":ref:`sphx_glr_examples_02-plot_movie.py` (``movie.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_movie.py` (``movie.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:74
msgid ":ref:`sphx_glr_examples_02-plot_movie_glyphs.py` (``movie_glyphs.py``)"
msgstr ""
":ref:`sphx_glr_examples_02-plot_movie_glyphs.py` (``movie_glyphs.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:76
msgid ":ref:`sphx_glr_examples_02-plot_moving_cmap.py` (``moving_cmap.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_moving_cmap.py` (``moving_cmap.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:78
msgid ":ref:`sphx_glr_examples_02-plot_multi-window.py` (``multi-window.py``)"
msgstr ""
":ref:`sphx_glr_examples_02-plot_multi-window.py` (``multi-window.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:80
msgid ":ref:`sphx_glr_examples_02-plot_opacity.py` (``opacity.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_opacity.py` (``opacity.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:82
msgid ":ref:`sphx_glr_examples_02-plot_orbit.py` (``orbit.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_orbit.py` (``orbit.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:84
msgid ":ref:`sphx_glr_examples_02-plot_ortho-slices.py` (``ortho-slices.py``)"
msgstr ""
":ref:`sphx_glr_examples_02-plot_ortho-slices.py` (``ortho-slices.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:86
msgid ""
":ref:`sphx_glr_examples_02-plot_plot-over-circular-arc.py` (``plot-over-"
"circular-arc.py``)"
msgstr ""
":ref:`sphx_glr_examples_02-plot_plot-over-circular-arc.py` (``plot-over-"
"circular-arc.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:88
msgid ""
":ref:`sphx_glr_examples_02-plot_plot-over-line.py` (``plot-over-line.py``)"
msgstr ""
":ref:`sphx_glr_examples_02-plot_plot-over-line.py` (``plot-over-line.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:90
msgid ""
":ref:`sphx_glr_examples_02-plot_point-cell-scalars.py` (``point-cell-"
"scalars.py``)"
msgstr ""
":ref:`sphx_glr_examples_02-plot_point-cell-scalars.py` (``point-cell-"
"scalars.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:92
msgid ":ref:`sphx_glr_examples_02-plot_point-clouds.py` (``point-clouds.py``)"
msgstr ""
":ref:`sphx_glr_examples_02-plot_point-clouds.py` (``point-clouds.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:94
msgid ""
":ref:`sphx_glr_examples_02-plot_point-picking.py` (``point-picking.py``)"
msgstr ""
":ref:`sphx_glr_examples_02-plot_point-picking.py` (``point-picking.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:96
msgid ":ref:`sphx_glr_examples_02-plot_scalar-bars.py` (``scalar-bars.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_scalar-bars.py` (``scalar-bars.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:98
msgid ":ref:`sphx_glr_examples_02-plot_screenshot.py` (``screenshot.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_screenshot.py` (``screenshot.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:100
msgid ":ref:`sphx_glr_examples_02-plot_shading.py` (``shading.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_shading.py` (``shading.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:102
msgid ":ref:`sphx_glr_examples_02-plot_silhouette.py` (``silhouette.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_silhouette.py` (``silhouette.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:104
msgid ":ref:`sphx_glr_examples_02-plot_spherical.py` (``spherical.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_spherical.py` (``spherical.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:106
msgid ":ref:`sphx_glr_examples_02-plot_ssao.py` (``ssao.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_ssao.py` (``ssao.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:108
msgid ""
":ref:`sphx_glr_examples_02-plot_surface-picking.py` (``surface-picking.py``)"
msgstr ""
":ref:`sphx_glr_examples_02-plot_surface-picking.py` (``surface-picking.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:110
msgid ":ref:`sphx_glr_examples_02-plot_texture.py` (``texture.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_texture.py` (``texture.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:112
msgid ":ref:`sphx_glr_examples_02-plot_themes.py` (``themes.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_themes.py` (``themes.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:114
msgid ":ref:`sphx_glr_examples_02-plot_topo-map.py` (``topo-map.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_topo-map.py` (``topo-map.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:116
msgid ""
":ref:`sphx_glr_examples_02-plot_vector-component.py` (``vector-"
"component.py``)"
msgstr ""
":ref:`sphx_glr_examples_02-plot_vector-component.py` (``vector-"
"component.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:118
msgid ":ref:`sphx_glr_examples_02-plot_vertices.py` (``vertices.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_vertices.py` (``vertices.py``)"

#: ../../pyvista/doc/source/examples/02-plot/sg_execution_times.rst:120
msgid ":ref:`sphx_glr_examples_02-plot_volume.py` (``volume.py``)"
msgstr ":ref:`sphx_glr_examples_02-plot_volume.py` (``volume.py``)"

#: ../../pyvista/doc/source/examples/02-plot/shading.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_shading.py>` to "
"download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_shading.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/shading.rst:24
msgid "Types of Shading"
msgstr "シェーディングのタイプ"

#: ../../pyvista/doc/source/examples/02-plot/shading.rst:26
msgid "Comparison of default, flat shading vs. smooth shading."
msgstr "デフォルトのフラットシェーディングとスムーズシェーディングの比較．"

#: ../../pyvista/doc/source/examples/02-plot/shading.rst:44
msgid ""
"PyVista supports two types of shading: flat and smooth shading that uses "
"VTK's Phong shading algorithm."
msgstr ""
"PyVistaでは，VTKのPhongシェーディングアルゴリズムを使用したフラットシェーディングとスムーズシェーディングの2種類のシェーディングがサポートされています．"

#: ../../pyvista/doc/source/examples/02-plot/shading.rst:47
msgid "This is a plot with the default flat shading."
msgstr "これは，デフォルトのフラットシェーディングを使用したプロットです．"

#: ../../pyvista/doc/source/examples/02-plot/shading.rst:71
msgid "Here's the same sphere with smooth shading."
msgstr "次に，スムーズシェーディングを適用した同じ球を示します．"

#: ../../pyvista/doc/source/examples/02-plot/shading.rst:94
msgid ""
"Note how smooth shading makes edges that should be sharp look odd, it's "
"because the points of these normals are averaged between two faces that have"
" a sharp angle between them.  You can avoid this by enabling "
"``split_sharp_edges``."
msgstr ""
"スムーズシェーディングによって，シャープであるべきエッジが奇妙に見えることに注意してください．これは，これらの法線のポイントが，鋭い角度を持つ2つの面の間で平均化されるためです．"
" これを避けるには ``split_sharp_edges`` を有効にします．"

#: ../../pyvista/doc/source/examples/02-plot/shading.rst:100
msgid ""
"You can configure the splitting angle with the optional ``feature_angle`` "
"keyword argument."
msgstr "オプションの ``feature_angle`` キーワード引数で分割角度を構成することができます．"

#: ../../pyvista/doc/source/examples/02-plot/shading.rst:124
msgid ""
"We can even plot the edges that will be split using "
":func:`extract_feature_edges "
"<pyvista.DataSetFilters.extract_feature_edges>`."
msgstr ""
":func:`extract_feature_edges <pyvista.DataSetFilters.extract_feature_edges>`"
" を使って，分割されるエッジをプロットすることもできます．"

#: ../../pyvista/doc/source/examples/02-plot/shading.rst:159
msgid ""
"The ``split_sharp_edges`` keyword argument is compatible with physically "
"based rendering as well."
msgstr "キーワード引数の ``split_sharp_edges`` は，物理ベースのレンダリングにも対応しています．"

#: ../../pyvista/doc/source/examples/02-plot/shading.rst:187
msgid "**Total running time of the script:** ( 0 minutes  1.394 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.394 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/shading.rst:201
msgid ":download:`Download Python source code: shading.py <shading.py>`"
msgstr ":download:`Download Python source code: shading.py <shading.py>`"

#: ../../pyvista/doc/source/examples/02-plot/shading.rst:205
msgid ":download:`Download Jupyter notebook: shading.ipynb <shading.ipynb>`"
msgstr ":download:`Download Jupyter notebook: shading.ipynb <shading.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/silhouette.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_silhouette.py>` to "
"download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_silhouette.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/silhouette.rst:24
msgid "Silhouette Highlight"
msgstr "シルエットハイライト"

#: ../../pyvista/doc/source/examples/02-plot/silhouette.rst:26
msgid ""
"Extract a subset of the edges of a polygonal mesh to generate an outline "
"(silhouette) of a mesh."
msgstr "ポリゴンメッシュのエッジのサブセットを抽出し，メッシュのアウトライン (シルエット) を生成します．"

#: ../../pyvista/doc/source/examples/02-plot/silhouette.rst:46
msgid "Prepare a triangulated ``PolyData``"
msgstr "3角 ``PolyData`` を作成する"

#: ../../pyvista/doc/source/examples/02-plot/silhouette.rst:63
msgid "Now we can display the silhouette of the mesh and compare the result:"
msgstr "メッシュのシルエットを表示し，結果を比較できます:"

#: ../../pyvista/doc/source/examples/02-plot/silhouette.rst:95
msgid ""
"Maybe the default parameters are not enough to really notice the silhouette."
" But by using a ``dict``, it is possible to modify the properties of the "
"outline. For example, color and width could be specified like so:"
msgstr ""
"デフォルトのパラメータでは，シルエットを認識するのに十分でない可能性があります．しかし， ``dict`` "
"を使用することで，アウトラインのプロパティを変更することができます．たとえば，色と幅は次のように指定できます:"

#: ../../pyvista/doc/source/examples/02-plot/silhouette.rst:127
msgid ""
"By default, PyVista uses a pretty aggressive decimation level but we might "
"want to disable it. It is also possible to display sharp edges:"
msgstr ""
"デフォルトでは，PyVistaはかなりアグレッシブなデシメーションレベルを使用しますが，無効にしたい場合もあります．シャープエッジを表示することもできます:"

#: ../../pyvista/doc/source/examples/02-plot/silhouette.rst:178
msgid "Here is another example:"
msgstr "次に別の例を示します:"

#: ../../pyvista/doc/source/examples/02-plot/silhouette.rst:222
msgid "**Total running time of the script:** ( 0 minutes  11.826 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  11.826 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/silhouette.rst:236
msgid ":download:`Download Python source code: silhouette.py <silhouette.py>`"
msgstr ""
":download:`Download Python source code: silhouette.py <silhouette.py>`"

#: ../../pyvista/doc/source/examples/02-plot/silhouette.rst:240
msgid ""
":download:`Download Jupyter notebook: silhouette.ipynb <silhouette.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: silhouette.ipynb <silhouette.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/spherical.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_spherical.py>` to "
"download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_02-plot_spherical.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/spherical.rst:22
msgid "Plot data in spherical coordinates"
msgstr "球座標でデータをプロットする"

#: ../../pyvista/doc/source/examples/02-plot/spherical.rst:24
msgid ""
"Generate and visualize meshes from data in longitude-latitude coordinates."
msgstr "緯度-経度座標のデータからメッシュを生成および表示します．"

#: ../../pyvista/doc/source/examples/02-plot/spherical.rst:138
msgid "Visualize vectors in spherical coordinates Vertical wind"
msgstr "球座標でのベクトルの可視化垂直風"

#: ../../pyvista/doc/source/examples/02-plot/spherical.rst:200
msgid "Isurfaces of 3D data in spherical coordinates"
msgstr "球座標の3 Dデータのサーフェス"

#: ../../pyvista/doc/source/examples/02-plot/spherical.rst:251
msgid "**Total running time of the script:** ( 0 minutes  1.435 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.435 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/spherical.rst:266
msgid ":download:`Download Python source code: spherical.py <spherical.py>`"
msgstr ":download:`Download Python source code: spherical.py <spherical.py>`"

#: ../../pyvista/doc/source/examples/02-plot/spherical.rst:272
msgid ""
":download:`Download Jupyter notebook: spherical.ipynb <spherical.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: spherical.ipynb <spherical.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/ssao.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_ssao.py>` to "
"download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_ssao.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/ssao.rst:24
msgid "Surface Space Ambient Occlusion"
msgstr "Surface Space Ambient Occlusion"

#: ../../pyvista/doc/source/examples/02-plot/ssao.rst:26
msgid "Demonstrate the usage of surface space ambient occlusion."
msgstr "Surface Space Ambient Occlusionの使用方法を説明します．"

#: ../../pyvista/doc/source/examples/02-plot/ssao.rst:28
msgid ""
"Surface space ambient occlusion (SSAO) can approximate shadows more "
"efficiently than ray-tracing and produce similar results. Use this when you "
"wish to plot the occlusion effect that nearby meshes have on each other by "
"blocking nearby light sources."
msgstr ""
"Surface Space Ambient Occlusion (SSAO) "
"は，レイトレーシングよりも効率的に影を近似でき，同様の結果を得ることができます．近くのメッシュが近くの光源を遮ることで互いに及ぼすオクルージョン効果をプロットしたい場合に使用します．"

#: ../../pyvista/doc/source/examples/02-plot/ssao.rst:33
msgid ""
"See `Kitware: Screen-Space Ambient Occlusion "
"<https://www.kitware.com/ssao/>`_ for more details"
msgstr ""
"詳しくは `Kitware: Screen-Space Ambient Occlusion "
"<https://www.kitware.com/ssao/>`_ をご覧ください"

#: ../../pyvista/doc/source/examples/02-plot/ssao.rst:58
msgid "Plot with defaults"
msgstr "デフォルトでプロットする"

#: ../../pyvista/doc/source/examples/02-plot/ssao.rst:59
msgid ""
"Let's plot this without SSAO. Note how the lighting is identical for each "
"cube."
msgstr "これを SSAO なしでプロットしてみましょう．各キューブで照明が同じであることに注意してください．"

#: ../../pyvista/doc/source/examples/02-plot/ssao.rst:87
#: ../../pyvista/doc/source/examples/02-plot/ssao.rst:185
msgid "Plot with SSAO"
msgstr "SSAOを使ったプロット"

#: ../../pyvista/doc/source/examples/02-plot/ssao.rst:88
msgid ""
"Now plot this with SSAO. Note how adjacent cubes affect the lighting of each"
" other to make it look less artificial."
msgstr "今度はこれをSSAOでプロットしてみましょう．隣接するキューブが互いの照明に影響を与え，人工的でないように見えることに注意してください．"

#: ../../pyvista/doc/source/examples/02-plot/ssao.rst:91
msgid ""
"With a low ``kernel_size``, the image will be rendered quickly at the "
"expense of quality."
msgstr "低い ``kernel_size`` では，画質を犠牲にして，画像のレンダリングが速くなります．"

#: ../../pyvista/doc/source/examples/02-plot/ssao.rst:120
msgid "Improve the SSAO rendering"
msgstr "SSAOレンダリングの改善"

#: ../../pyvista/doc/source/examples/02-plot/ssao.rst:121
msgid ""
"Here we've increased the ``kernel_size`` to improve the quality of the SSAO "
"and also enabled SSAA anti-aliasing to smooth out any of the artifacts "
"created from SSAO."
msgstr ""
"ここでは，SSAO の品質を向上させるために ``kernel_size`` を大きくし，SSAO から生じるアーティファクトを滑らかにするために "
"SSAA アンチエイリアシングも有効にしています．"

#: ../../pyvista/doc/source/examples/02-plot/ssao.rst:152
msgid "Plot a CAD model without SSAO"
msgstr "SSAOを使用しないCADモデルの作図"

#: ../../pyvista/doc/source/examples/02-plot/ssao.rst:153
msgid ""
"Here's another example without SSAO. This is a CAD model of a Raspberry PI "
"case."
msgstr "こちらもSSAOを使わない例です．これはRaspberry PIの筐体のCADモデルです．"

#: ../../pyvista/doc/source/examples/02-plot/ssao.rst:186
msgid ""
"Here's the same CAD model with SSAO. Note how we had to increase both "
"``radius`` and ``bias`` due to the relative scene size."
msgstr ""
"同じCADモデルをSSAOで表示したところです．シーンの大きさが相対的に大きくなったため， ``radius`` と ``bias`` "
"の両方を大きくする必要があったことに注意してください．"

#: ../../pyvista/doc/source/examples/02-plot/ssao.rst:189
msgid ""
"Note that the occlusion still seems quite small. In the next example we will"
" increase the ``radius`` to increase the effect of the occlusion."
msgstr ""
"オクルージョンはまだかなり小さいようですが，注意してください．次の例では， ``radius`` "
"を大きくして，オクルージョンの効果を大きくしてみましょう．"

#: ../../pyvista/doc/source/examples/02-plot/ssao.rst:220
msgid "Increase the Radius"
msgstr "半径を大きくする"

#: ../../pyvista/doc/source/examples/02-plot/ssao.rst:221
msgid ""
"Here we've increased the ``radius`` to the point where the case occlusion "
"now seems realistic without it becoming overwhelming."
msgstr "ここでは，ケースオクルージョンが過剰にならずにリアルに見える程度に ``radius`` を大きくしています．"

#: ../../pyvista/doc/source/examples/02-plot/ssao.rst:250
msgid "**Total running time of the script:** ( 0 minutes  43.957 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  43.957 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/ssao.rst:264
msgid ":download:`Download Python source code: ssao.py <ssao.py>`"
msgstr ":download:`Download Python source code: ssao.py <ssao.py>`"

#: ../../pyvista/doc/source/examples/02-plot/ssao.rst:268
msgid ":download:`Download Jupyter notebook: ssao.ipynb <ssao.ipynb>`"
msgstr ":download:`Download Jupyter notebook: ssao.ipynb <ssao.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/surface-picking.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_surface-picking.py>`"
" to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_surface-picking.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/surface-picking.rst:24
msgid "Picking a Point on the Surface of a Mesh"
msgstr "メッシュの表面上の点をピックします"

#: ../../pyvista/doc/source/examples/02-plot/surface-picking.rst:25
msgid ""
"This example demonstrates how to pick meshes using "
":func:`enable_surface_point_picking() "
"<pyvista.Plotter.enable_surface_point_picking>`."
msgstr ""
"この例では， :func:`enable_surface_point_picking() "
"<pyvista.Plotter.enable_surface_point_picking>` を使用してメッシュをピックする方法を示します．"

#: ../../pyvista/doc/source/examples/02-plot/surface-picking.rst:28
msgid "This allows you to pick points on the surface of a mesh."
msgstr "これにより，メッシュの表面上のポイントをピックすることができます．"

#: ../../pyvista/doc/source/examples/02-plot/surface-picking.rst:46
msgid "Create a mesh and enable picking using the default settings."
msgstr "メッシュを作成し，デフォルトの設定でピッキングを有効にします．"

#: ../../pyvista/doc/source/examples/02-plot/surface-picking.rst:75
msgid ""
"Enable a callback that creates a cube at the right-clicked point and add a "
"label at the point as well it."
msgstr "右クリックしたポイントにキューブを作成するコールバックを有効にし，そのポイントにラベルも追加します．"

#: ../../pyvista/doc/source/examples/02-plot/surface-picking.rst:110
msgid "**Total running time of the script:** ( 0 minutes  0.574 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  0.574 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/surface-picking.rst:124
msgid ""
":download:`Download Python source code: surface-picking.py <surface-"
"picking.py>`"
msgstr ""
":download:`Download Python source code: surface-picking.py <surface-"
"picking.py>`"

#: ../../pyvista/doc/source/examples/02-plot/surface-picking.rst:128
msgid ""
":download:`Download Jupyter notebook: surface-picking.ipynb <surface-"
"picking.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: surface-picking.ipynb <surface-"
"picking.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/texture.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_texture.py>` to "
"download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_texture.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/texture.rst:24
msgid "Applying Textures"
msgstr "テクスチャを適用する"

#: ../../pyvista/doc/source/examples/02-plot/texture.rst:26
msgid "Plot a mesh with an image projected onto it as a texture."
msgstr "イメージをテクスチャとして投影したメッシュをプロットします．"

#: ../../pyvista/doc/source/examples/02-plot/texture.rst:48
msgid ""
"Texture mapping is easily implemented using PyVista. Many of the geometric "
"objects come preloaded with texture coordinates, so quickly creating a "
"surface and displaying an image is simply:"
msgstr ""
"テクスチャマッピングは，PyVistaを使用して簡単に実装できます．多くのジオメトリックオブジェクトには，テクスチャ座標があらかじめロードされているため，サーフェスをすばやく作成してイメージを表示するのは，次のように簡単です:"

#: ../../pyvista/doc/source/examples/02-plot/texture.rst:80
msgid ""
"But what if your dataset doesn't have texture coordinates? Then you can "
"harness the :func:`pyvista.DataSetFilters.texture_map_to_plane` filter to "
"properly map an image to a dataset's surface. For example, let's map that "
"same image of bricks to a curvey surface:"
msgstr ""
"しかし，データセットにテクスチャ座標がない場合はどうでしょうか．その後， "
":func:`pyvista.DataSetFilters.texture_map_to_plane` "
"フィルタを利用して，イメージをデータセットのサーフェスに適切にマッピングできます．たとえば，同じレンガのイメージをカーブサーフェスにマップします．"

#: ../../pyvista/doc/source/examples/02-plot/texture.rst:117
msgid ""
"Display scalar data along with a texture by ensuring the "
"``interpolate_before_map`` setting is ``False`` and specifying both the "
"``texture`` and ``scalars`` arguments."
msgstr ""
" ``interpolate_before_map`` 設定が ``False`` であることを確認し， ``texture`` 引数と "
"``scalars`` 引数の両方を指定することによって，テクスチャとともにスカラーデータを表示します．"

#: ../../pyvista/doc/source/examples/02-plot/texture.rst:145
msgid "Note that this process can be completed with any image texture."
msgstr "このプロセスは任意のイメージテクスチャで完了できることに注意してください．"

#: ../../pyvista/doc/source/examples/02-plot/texture.rst:172
msgid "Textures from Files"
msgstr "ファイルからのテクスチャ"

#: ../../pyvista/doc/source/examples/02-plot/texture.rst:174
msgid ""
"What about loading your own texture from an image? This is often most easily"
" done using the :func:`pyvista.read_texture` function - simply pass an image"
" file's path, and this function with handle making a ``vtkTexture`` for you "
"to use."
msgstr ""
"イメージから独自のテクスチャをロードするのはどうでしょうか．これは多くの場合， :func:`pyvista.read_texture` "
"関数を使用して最も簡単に行うことができます-単に画像ファイルのパスを渡すだけで，この関数はあなたが使用するために ``vtkTexture`` "
"を作るハンドルを持っています．"

#: ../../pyvista/doc/source/examples/02-plot/texture.rst:204
msgid "NumPy Arrays as Textures"
msgstr "テクスチャとしてのNumPy配列"

#: ../../pyvista/doc/source/examples/02-plot/texture.rst:206
msgid ""
"Want to use a programmatically built image? :class:`pyvista.ImageData` "
"objects can be converted to textures using :func:`pyvista.image_to_texture` "
"and 3D NumPy (X by Y by RGB) arrays can be converted to textures using "
":func:`pyvista.numpy_to_texture`."
msgstr ""
"プログラムで作成されたイメージを使用したい場合? :class:`pyvista.ImageData` オブジェクトは "
":func:`pyvista.image_to_texture` を使用してテクスチャに変換でき，3 D NumPy (X x Y，RGB)配列は "
":func:`pyvista.numpy_to_texture`  を使用してテクスチャに変換できます．"

#: ../../pyvista/doc/source/examples/02-plot/texture.rst:256
msgid "Create a GIF Movie with updating textures"
msgstr "テクスチャを更新しながらGIFムービーを作成"

#: ../../pyvista/doc/source/examples/02-plot/texture.rst:257
msgid "Generate a moving gif from an active plotter with updating textures."
msgstr "テクスチャを更新しながら，アクティブなプロッタから動くgifを生成します．"

#: ../../pyvista/doc/source/examples/02-plot/texture.rst:314
msgid "Textures with Transparency"
msgstr "透明度のあるテクスチャ"

#: ../../pyvista/doc/source/examples/02-plot/texture.rst:316
msgid ""
"Textures can also specify per-pixel opacity values. The image must contain a"
" 4th channel specifying the opacity value from 0 [transparent] to 255 [fully"
" visible]. To enable this feature just pass the opacity array as the 4th "
"channel of the image as a 3 dimensional matrix with shape [nrows, ncols, 4] "
":func:`pyvista.numpy_to_texture`."
msgstr ""
"テクスチャでは，ピクセル単位の不透明度値も指定できます．画像は0 [透明]から255 "
"[不透明]までの不透明度値を指定する第4チャンネルを含まなければなりません．この機能を有効にするためには，画像の第4チャンネルとして不透明度配列を形[行,例,"
" 4]   :func:`pyvista.numpy_to_texture` の3次元マトリックスとして渡すだけです．"

#: ../../pyvista/doc/source/examples/02-plot/texture.rst:322
msgid "Here we can download an image that has an alpha channel:"
msgstr "ここでは，アルファチャンネルを含むイメージをダウンロードできます:"

#: ../../pyvista/doc/source/examples/02-plot/texture.rst:368
msgid "Repeating Textures"
msgstr "テクスチャを繰り返す"

#: ../../pyvista/doc/source/examples/02-plot/texture.rst:370
msgid ""
"What if you have a single texture that you'd like to repeat across a mesh? "
"Simply define the texture coordinates for all nodes explicitly."
msgstr "単一のテクスチャをメッシュ全体で繰り返したい場合はどうすればよいですか．すべてのノードのテクスチャ座標を明示的に定義するだけです．"

#: ../../pyvista/doc/source/examples/02-plot/texture.rst:373
msgid ""
"Here we create the texture coordinates to fill up the grid with several "
"mappings of a single texture. In order to do this we must define texture "
"coordinates outside of the typical ``(0, 1)`` range:"
msgstr ""
"ここでは，テクスチャ座標を作成して，1つのテクスチャの複数のマッピングでグリッドを埋めます．これを行うには，一般的な ``(0, 1)`` "
"範囲外のテクスチャ座標を定義する必要があります．"

#: ../../pyvista/doc/source/examples/02-plot/texture.rst:398
msgid ""
"By defining texture coordinates that range ``(0, 4)`` on each axis, we will "
"produce 4 repetitions of the same texture on this mesh."
msgstr "各軸で ``(0, 4)`` の範囲のテクスチャ座標を定義することにより，このメッシュ上に同じテクスチャの4つの反復を生成します．"

#: ../../pyvista/doc/source/examples/02-plot/texture.rst:401
msgid ""
"Then we must associate those texture coordinates with the mesh through the "
":attr:`pyvista.DataSet.active_texture_coordinates` property."
msgstr ""
"次に， :attr:`pyvista.DataSet.active_texture_coordinates` "
"プロパティを使用して，これらのテクスチャ座標をメッシュに関連付ける必要があります．"

#: ../../pyvista/doc/source/examples/02-plot/texture.rst:420
msgid "Now display all the puppies."
msgstr "今子犬を全部展示しています．"

#: ../../pyvista/doc/source/examples/02-plot/texture.rst:447
msgid "Spherical Texture Coordinates"
msgstr "球状テクスチャ座標"

#: ../../pyvista/doc/source/examples/02-plot/texture.rst:448
msgid ""
"We have a built in convienance method for mapping textures to spherical "
"coordinate systems much like the planar mapping demoed above."
msgstr "上でデモした平面マッピングのように，テクスチャを球座標系にマッピングするための組み込みの方法があります．"

#: ../../pyvista/doc/source/examples/02-plot/texture.rst:476
msgid ""
"The helper method above does not always produce the desired texture "
"coordinates, so sometimes it must be done manually. Here is a great, user "
"contributed example from `this support issue "
"<https://github.com/pyvista/pyvista-support/issues/257>`_"
msgstr ""
"上記のヘルパーメソッドは，必ずしも目的のテクスチャ座標を生成するわけではないため，手動で行う必要がある場合があります．これは `このサポートイシュー "
"<https://github.com/pyvista/pyvista-support/issues/257>`_ からの素晴らしいユーザ投稿の例です．"

#: ../../pyvista/doc/source/examples/02-plot/texture.rst:480
msgid ""
"Manually create the texture coordinates for a globe map. First, we create "
"the mesh that will be used as the globe. Note the `start_theta` for a slight"
" overlappig"
msgstr ""
"地球マップのテクスチャ座標を手動で作成します．まず，地球として使用するメッシュを作成します． `start_theta` "
"に若干の重複があることに注意してください．"

#: ../../pyvista/doc/source/examples/02-plot/texture.rst:520
msgid "**Total running time of the script:** (0 minutes 12.616 seconds)"
msgstr "**Total running time of the script:** (0 minutes 12.616 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/texture.rst:534
msgid ":download:`Download Python source code: texture.py <texture.py>`"
msgstr ":download:`Download Python source code: texture.py <texture.py>`"

#: ../../pyvista/doc/source/examples/02-plot/texture.rst:538
msgid ":download:`Download Jupyter notebook: texture.ipynb <texture.ipynb>`"
msgstr ":download:`Download Jupyter notebook: texture.ipynb <texture.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/themes.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_themes.py>` to "
"download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_themes.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/themes.rst:24
msgid "Control Global and Local Plotting Themes"
msgstr "グローバルおよびローカルプロットテーマの制御"

#: ../../pyvista/doc/source/examples/02-plot/themes.rst:26
msgid ""
"PyVista allows you to set global and local plotting themes to easily set "
"default plotting parameters."
msgstr "PyVistaでは，グローバルなプロットテーマとローカルなプロットテーマを設定して，デフォルトのプロットパラメータを簡単に設定できます．"

#: ../../pyvista/doc/source/examples/02-plot/themes.rst:45
msgid "Define a simple plotting routine for comparing the themes."
msgstr "主題を比較するための単純なプロットルーチンを定義する．"

#: ../../pyvista/doc/source/examples/02-plot/themes.rst:71
msgid ""
"PyVista's default color theme is chosen to be generally easy on your eyes "
"and is best used when working long hours on your visualization project.  The"
" grey background and warm colormaps are chosen to make sure 3D renderings do"
" not drastically change the brightness of your screen when working in dark "
"environments."
msgstr ""
"PyVistaのデフォルトのカラーテーマは，一般的に見やすいように選択されており，可視化プロジェクトで長時間作業する場合に最適です．グレーの背景と暖色のカラーマップは，暗い環境で作業しているときに3"
" Dレンダリングによって画面の明るさが大幅に変化しないように選択されています．"

#: ../../pyvista/doc/source/examples/02-plot/themes.rst:77
msgid ""
"Here's an example of our default plotting theme - this is what you would see"
" by default after running any of our examples locally."
msgstr "デフォルトのプロットテーマの例を次に示します． - これは，ローカルでサンプルを実行した後にデフォルトで表示されるテーマです．"

#: ../../pyvista/doc/source/examples/02-plot/themes.rst:102
msgid "PyVista also ships with a few plotting themes:"
msgstr "PyVistaにはいくつかのプロットテーマも付属しています．"

#: ../../pyvista/doc/source/examples/02-plot/themes.rst:104
msgid ""
"``'ParaView'``: this is designed to mimic ParaView's default plotting theme."
msgstr "``'ParaView'``: これは，ParaViewの既定のプロットテーマを模倣するように設計されています．"

#: ../../pyvista/doc/source/examples/02-plot/themes.rst:105
msgid ""
"``'dark'``: this is designed to be night-mode friendly with dark backgrounds"
" and color schemes."
msgstr "``'dark'``: 暗い背景とカラースキームを使用して，夜間モードに適した設計になっています．"

#: ../../pyvista/doc/source/examples/02-plot/themes.rst:106
msgid ""
"``'document'``: this is built for use in document style plotting and making "
"publication quality figures."
msgstr "``'document'``: これは，文書スタイルのプロットおよび文書品質図の作成に使用するために作成されています．"

#: ../../pyvista/doc/source/examples/02-plot/themes.rst:110
msgid "Demo the ``'ParaView'`` theme."
msgstr "``'ParaView'`` テーマのデモ．"

#: ../../pyvista/doc/source/examples/02-plot/themes.rst:136
msgid "Demo the ``'dark'`` theme."
msgstr "``'dark'`` テーマのデモ．"

#: ../../pyvista/doc/source/examples/02-plot/themes.rst:161
msgid ""
"Demo the ``'document'`` theme.  This theme is used on our online examples."
msgstr "``'document'`` テーマのデモを行います．このテーマは，オンラインの例で使用されています．"

#: ../../pyvista/doc/source/examples/02-plot/themes.rst:186
msgid ""
"Note that you can also use color gradients for the background of the "
"plotting window."
msgstr "プロットウィンドウの背景には，カラーグラデーションを使用することもできます．"

#: ../../pyvista/doc/source/examples/02-plot/themes.rst:216
msgid "Modifying the Global Theme"
msgstr "グローバル・テーマの変更"

#: ../../pyvista/doc/source/examples/02-plot/themes.rst:217
msgid ""
"You can control how meshes are displayed by setting individual parameters "
"when plotting like ``mesh.plot(show_edges=True)``, or by setting a global "
"theme.  You can also control individual parameters how all meshes are "
"displayed by default via ``pyvista.global_theme``."
msgstr ""
"``mesh.plot(show_edges=True)`` "
"などのプロット時に個々のパラメータを設定するか，グローバルテーマを設定することで，メッシュの表示方法を制御できます． "
"``pyvista.global_theme`` を使用して，既定ですべてのメッシュを表示する方法を個々のパラメータでコントロールすることもできます．"

#: ../../pyvista/doc/source/examples/02-plot/themes.rst:222
msgid ""
"Here, we print out the current global defaults for all ``pyvista`` meshes.  "
"These values have been changed by the previous \"Document\" theme."
msgstr ""
"ここでは，すべての ``pyvista`` メッシュの現在のグローバルデフォルトを出力します．これらの値は，以前の \"Document\" "
"テーマによって変更されています．"

#: ../../pyvista/doc/source/examples/02-plot/themes.rst:334
msgid ""
"By default, edges are not shown on meshes unless explicitly specified when "
"plotting a mesh via ``show_edges=True``.  You can change this default "
"behavior globally by changing the default parameter."
msgstr ""
"デフォルトでは， ``show_edges=True`` "
"を介してメッシュをプロットする際に明示的に指定しない限り，エッジはメッシュ上に表示されません．デフォルトのパラメータを変更することで，このデフォルトの動作をグローバルに変更できます．"

#: ../../pyvista/doc/source/examples/02-plot/themes.rst:362
msgid ""
"You can reset pyvista to default behavior with ``restore_defaults``. Note "
"that the figure's color was reset to the default \"white\" color rather than"
" the 'lightblue' color default with the document theme.  Under the hood, "
"each theme applied changes the global plot defaults stored within "
"``pyvista.global_theme.``"
msgstr ""
"pyvistaをデフォルトの動作にリセットするには， ``restore_defaults`` "
"を使用します．図形の色は，ドキュメントテーマのデフォルトの色 'lightblue' ではなく，デフォルトの色 \"白\" "
"にリセットされたことに注意してください．内部的には，適用された各テーマは， ``pyvista.global_theme`` "
"内に格納されたグローバルデフォルトプロットを変更します．"

#: ../../pyvista/doc/source/examples/02-plot/themes.rst:392
msgid "Creating a Custom Theme and Applying it Globally"
msgstr "カスタム・テーマの作成とグローバルな適用"

#: ../../pyvista/doc/source/examples/02-plot/themes.rst:393
msgid ""
"You can create a custom theme by modifying one of the existing themes and "
"then loading it into the global plotting defaults."
msgstr "既存のテーマの1つを修正し，それをグローバルプロットのデフォルトにロードすることで，カスタムテーマを作成できます．"

#: ../../pyvista/doc/source/examples/02-plot/themes.rst:396
msgid ""
"Here, we create a dark theme that plots meshes red by default while showing "
"edges."
msgstr "ここでは，エッジを表示しながら既定でメッシュを赤でプロットする暗いテーマを作成します．"

#: ../../pyvista/doc/source/examples/02-plot/themes.rst:431
msgid "Creating a Custom Theme and Applying it to a Single Plotter"
msgstr "カスタムテーマを作成して単一のプロッタに適用する"

#: ../../pyvista/doc/source/examples/02-plot/themes.rst:432
msgid ""
"In this example, we create a custom theme from the base \"default\" theme "
"and then apply it to a single plotter.  Note that this does not change the "
"behavior of the global \"defaults\", which are still set to the modified "
"``DarkTheme``."
msgstr ""
"この例では，ベースの \"default\" テーマからカスタムテーマを作成し，それを単一のプロッタに適用します．  これは変更された "
"``DarkTheme`` に設定されたままのグローバル \"default\" の動作を変えないことに注意してください．"

#: ../../pyvista/doc/source/examples/02-plot/themes.rst:437
msgid ""
"This approach carries the advantage that you can maintain several themes and"
" apply them to one or more plotters."
msgstr "この方法には，複数のテーマを管理し，1つまたは複数のプロッタに適用できるという利点があります．"

#: ../../pyvista/doc/source/examples/02-plot/themes.rst:471
msgid "Alternatively, set the theme of an instance of ``Plotter``."
msgstr "または， ``Plotter`` のインスタンスのテーマを設定します．"

#: ../../pyvista/doc/source/examples/02-plot/themes.rst:498
msgid "Reset to use the document theme"
msgstr "ドキュメントのテーマを使用するにはリセット"

#: ../../pyvista/doc/source/examples/02-plot/themes.rst:515
msgid "**Total running time of the script:** ( 0 minutes  4.597 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  4.597 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/themes.rst:529
msgid ":download:`Download Python source code: themes.py <themes.py>`"
msgstr ":download:`Download Python source code: themes.py <themes.py>`"

#: ../../pyvista/doc/source/examples/02-plot/themes.rst:533
msgid ":download:`Download Jupyter notebook: themes.ipynb <themes.ipynb>`"
msgstr ":download:`Download Jupyter notebook: themes.ipynb <themes.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/topo-map.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_topo-map.py>` to "
"download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_topo-map.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/topo-map.rst:24
msgid "Topographic Map"
msgstr "地形図"

#: ../../pyvista/doc/source/examples/02-plot/topo-map.rst:26
msgid ""
"This is very similar to the :ref:`texture_example` example except it is "
"focused on plotting aerial imagery from a GeoTIFF on top of some topography "
"mesh."
msgstr ""
"これは :ref:`texture_example` "
"の例と非常に似ていますが，地形メッシュの上にGeoTIFFからの航空画像をプロットすることに焦点を当てています．"

#: ../../pyvista/doc/source/examples/02-plot/topo-map.rst:50
msgid "Start by loading the elevation data and a topographic map."
msgstr "まずは標高データと地形図を読み込むことから始めましょう．"

#: ../../pyvista/doc/source/examples/02-plot/topo-map.rst:70
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table style='width: 100%;'><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table style='width: 100%;'>\n"
"<tr><th>StructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>1677401</td></tr>\n"
"<tr><td>N Points</td><td>1680000</td></tr>\n"
"<tr><td>X Bounds</td><td>1.810e+06, 1.831e+06</td></tr>\n"
"<tr><td>Y Bounds</td><td>5.640e+06, 5.658e+06</td></tr>\n"
"<tr><td>Z Bounds</td><td>7.339e+02, 2.787e+03</td></tr>\n"
"<tr><td>Dimensions</td><td>1400, 1200, 1</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table style='width: 100%;'>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>scalar1of1</b></td><td>Points</td><td>float64</td><td>1</td><td>7.339e+02</td><td>2.787e+03</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table style='width: 100%;'><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table style='width: 100%;'>\n"
"<tr><th>StructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>1677401</td></tr>\n"
"<tr><td>N Points</td><td>1680000</td></tr>\n"
"<tr><td>X Bounds</td><td>1.810e+06, 1.831e+06</td></tr>\n"
"<tr><td>Y Bounds</td><td>5.640e+06, 5.658e+06</td></tr>\n"
"<tr><td>Z Bounds</td><td>7.339e+02, 2.787e+03</td></tr>\n"
"<tr><td>Dimensions</td><td>1400, 1200, 1</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table style='width: 100%;'>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>scalar1of1</b></td><td>Points</td><td>float64</td><td>1</td><td>7.339e+02</td><td>2.787e+03</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/02-plot/topo-map.rst:98
msgid "Let's inspect the imagery that we just loaded."
msgstr "先ほど読み込んだイメージを点検してみましょう．"

#: ../../pyvista/doc/source/examples/02-plot/topo-map.rst:129
msgid ""
"Once you have a topography mesh loaded as a surface mesh (we use a "
":class:`pyvista.StructuredGrid` here) and an image loaded as a "
":class:`pyvista.Texture` using :func:`pyvista.read_texture`, then you can "
"map that imagery to the surface mesh as follows:"
msgstr ""
"サーフェスメッシュ(ここでは :class:`pyvista.StructuredGrid` を使います)として地形メッシュをロードし， "
":func:`pyvista.read_texture` を使用して:class:`pyvista.Texture` "
"としてイメージをロードしたら，次のようにイメージをサーフェスメッシュにマッピングできます．"

#: ../../pyvista/doc/source/examples/02-plot/topo-map.rst:151
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table style='width: 100%;'><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table style='width: 100%;'>\n"
"<tr><th>UnstructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>436733</td></tr>\n"
"<tr><td>N Points</td><td>222110</td></tr>\n"
"<tr><td>X Bounds</td><td>1.818e+06, 1.825e+06</td></tr>\n"
"<tr><td>Y Bounds</td><td>5.645e+06, 5.653e+06</td></tr>\n"
"<tr><td>Z Bounds</td><td>1.381e+03, 2.787e+03</td></tr>\n"
"<tr><td>N Arrays</td><td>2</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table style='width: 100%;'>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>scalar1of1</b></td><td>Points</td><td>float64</td><td>1</td><td>1.381e+03</td><td>2.787e+03</td></tr>\n"
"<tr><td>Texture Coordinates</td><td>Points</td><td>float32</td><td>2</td><td>0.000e+00</td><td>1.000e+00</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table style='width: 100%;'><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table style='width: 100%;'>\n"
"<tr><th>UnstructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>436733</td></tr>\n"
"<tr><td>N Points</td><td>222110</td></tr>\n"
"<tr><td>X Bounds</td><td>1.818e+06, 1.825e+06</td></tr>\n"
"<tr><td>Y Bounds</td><td>5.645e+06, 5.653e+06</td></tr>\n"
"<tr><td>Z Bounds</td><td>1.381e+03, 2.787e+03</td></tr>\n"
"<tr><td>N Arrays</td><td>2</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table style='width: 100%;'>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>scalar1of1</b></td><td>Points</td><td>float64</td><td>1</td><td>1.381e+03</td><td>2.787e+03</td></tr>\n"
"<tr><td>Texture Coordinates</td><td>Points</td><td>float32</td><td>2</td><td>0.000e+00</td><td>1.000e+00</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/02-plot/topo-map.rst:179
msgid "Now display it. Note that the imagery is aligned as we expect."
msgstr "表示します．イメージが予想どおりに調整されていることに注意してください．"

#: ../../pyvista/doc/source/examples/02-plot/topo-map.rst:201
msgid "And here is a 3D perspective."
msgstr "これが3 D遠近法です．"

#: ../../pyvista/doc/source/examples/02-plot/topo-map.rst:223
msgid ""
"We could also display the entire region by extracting the surrounding region"
" and plotting the texture mapped local topography and the outside area"
msgstr "また，周辺領域を抽出し，テクスチャマッピングされた局所的な地形と外部領域をプロットすることによって，領域全体を表示することもできます．"

#: ../../pyvista/doc/source/examples/02-plot/topo-map.rst:260
msgid "**Total running time of the script:** (0 minutes 40.288 seconds)"
msgstr "**Total running time of the script:** (0 minutes 40.288 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/topo-map.rst:274
msgid ":download:`Download Python source code: topo-map.py <topo-map.py>`"
msgstr ":download:`Download Python source code: topo-map.py <topo-map.py>`"

#: ../../pyvista/doc/source/examples/02-plot/topo-map.rst:278
msgid ":download:`Download Jupyter notebook: topo-map.ipynb <topo-map.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: topo-map.ipynb <topo-map.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/vector-component.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_vector-component.py>` "
"to download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_02-plot_vector-component.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/vector-component.rst:22
msgid "Plot Vector Component"
msgstr "プロットベクトルコンポーネント"

#: ../../pyvista/doc/source/examples/02-plot/vector-component.rst:24
msgid "Plot a single component of a vector as a scalar array."
msgstr "ベクトルの単一コンポーネントをスカラー配列としてプロットします．"

#: ../../pyvista/doc/source/examples/02-plot/vector-component.rst:26
msgid ""
"We can plot individual components of multi-component arrays with the "
"``component`` argument  of the ``add_mesh`` method."
msgstr "``add_mesh`` メソッドの ``component`` 引数を用いて多成分アレイの個々の成分をプロットすることができる．"

#: ../../pyvista/doc/source/examples/02-plot/vector-component.rst:46
msgid "Download an example notched beam stress"
msgstr "ノッチ付きはり応力の例をダウンロードします"

#: ../../pyvista/doc/source/examples/02-plot/vector-component.rst:64
msgid ""
"The default behavior with no component specified is to use the vector "
"magnitude. We can access each component by specifying the component "
"argument."
msgstr ""
"コンポーネントが指定されていない場合の既定の動作では，ベクトルの大きさが使用されます．各コンポーネントにアクセスするには，component引数を指定します．"

#: ../../pyvista/doc/source/examples/02-plot/vector-component.rst:111
msgid "**Total running time of the script:** ( 0 minutes  1.290 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.290 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/vector-component.rst:126
msgid ""
":download:`Download Python source code: vector-component.py <vector-"
"component.py>`"
msgstr ""
":download:`Download Python source code: vector-component.py <vector-"
"component.py>`"

#: ../../pyvista/doc/source/examples/02-plot/vector-component.rst:132
msgid ""
":download:`Download Jupyter notebook: vector-component.ipynb <vector-"
"component.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: vector-component.ipynb <vector-"
"component.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/vertices.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_vertices.py>` to "
"download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_02-plot_vertices.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/vertices.rst:22
msgid "Visible Vertices"
msgstr "可視頂点"

#: ../../pyvista/doc/source/examples/02-plot/vertices.rst:24
msgid "Display vertices on a mesh in the same fashion as edge visibility."
msgstr "メッシュ上の頂点をエッジの見え方と同じように表示します．"

#: ../../pyvista/doc/source/examples/02-plot/vertices.rst:46
msgid ""
"We can easily display all vertices of a mesh with a ``points`` style "
"representation when plotting:"
msgstr "プロット時にメッシュのすべての頂点を ``points`` スタイルの表現で簡単に表示することができます．"

#: ../../pyvista/doc/source/examples/02-plot/vertices.rst:72
msgid ""
"However, we often want to see the vertices of a mesh rendered atop the "
"surface geometry. Much like how we can render the edges of a mesh:"
msgstr ""
"しかし，メッシュの頂点がサーフェスジオメトリの上にレンダリングされるのを見たいこともよくあります．メッシュのエッジをレンダリングするのと同じようなものです:"

#: ../../pyvista/doc/source/examples/02-plot/vertices.rst:98
msgid ""
"In order to display the vertices atop a mesh's surface geometry, simply pass"
" ``show_vertices=True`` to render them along side the original geometry."
msgstr ""
"メッシュのサーフェスジオメトリの上に頂点を表示するには，単に ``show_vertices=True`` "
"を渡すと，オリジナルのジオメトリと一緒に頂点がレンダリングされます．"

#: ../../pyvista/doc/source/examples/02-plot/vertices.rst:102
msgid ""
"Vertex styling can be changed using ``vertex_color``, ``vertex_opacity``, "
"and ``vertex_style``."
msgstr ""
"頂点のスタイルは ``vertex_color``, ``vertex_opacity``, ``vertex_style`` "
"を使って変更することができます．"

#: ../../pyvista/doc/source/examples/02-plot/vertices.rst:135
msgid ""
"If you wish to have further control over the way surface points are plotted "
"alongside the surface geometry, extract the surface points and plot them "
"separately."
msgstr ""
"サーフェスポイントをサーフェスジオメトリと一緒にプロットする方法をさらに制御したい場合は，サーフェスポイントを抽出して別々にプロットしてください．"

#: ../../pyvista/doc/source/examples/02-plot/vertices.rst:139
msgid ""
"The first step is to extract the outer surface geometry of the mesh then "
"grab all the points of that extraction."
msgstr "まず，メッシュの外表面形状を抽出し，その抽出された点をすべて取り込みます．"

#: ../../pyvista/doc/source/examples/02-plot/vertices.rst:158
msgid ""
"Now that we have the vertices extracted, we can use :func:`add_points() "
"<pyvista.Plotter.add_points>` to render them along side the original "
"geometry."
msgstr ""
"頂点を抽出できたので， :func:`add_points() <pyvista.Plotter.add_points>` "
"を使って，元のジオメトリの横に並べてレンダリングすることができます．"

#: ../../pyvista/doc/source/examples/02-plot/vertices.rst:162
msgid "Color the points by their Y position."
msgstr "点のY位置で色分けをします．"

#: ../../pyvista/doc/source/examples/02-plot/vertices.rst:196
msgid "**Total running time of the script:** ( 0 minutes  1.425 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.425 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/vertices.rst:208
msgid ":download:`Download Python source code: vertices.py <vertices.py>`"
msgstr ":download:`Download Python source code: vertices.py <vertices.py>`"

#: ../../pyvista/doc/source/examples/02-plot/vertices.rst:212
msgid ":download:`Download Jupyter notebook: vertices.ipynb <vertices.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: vertices.ipynb <vertices.ipynb>`"

#: ../../pyvista/doc/source/examples/02-plot/volume.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_volume.py>` to "
"download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_02-plot_volume.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/02-plot/volume.rst:26
msgid ""
"Volume render uniform mesh types like :class:`pyvista.ImageData` or 3D NumPy"
" arrays."
msgstr ":class:`pyvista.ImageData` または3 D NumPy配列のようなボリュームレンダリングの均一メッシュタイプ．"

#: ../../pyvista/doc/source/examples/02-plot/volume.rst:29
msgid ""
"This also explores how to extract a volume of interest (VOI) from a "
":class:`pyvista.ImageData` using the "
":func:`pyvista.ImageDataFilters.extract_subset` filter."
msgstr ""
"これはまた :func:`pyvista.ImageData.extract_subset` フィルタを使用して "
":class:`pyvista.ImageData` から関心領域 (VOI) を抽出する方法を探求します．"

#: ../../pyvista/doc/source/examples/02-plot/volume.rst:50
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>ImageData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>10225800</td></tr>\n"
"<tr><td>N Points</td><td>10368384</td></tr>\n"
"<tr><td>X Bounds</td><td>0.000e+00, 1.497e+02</td></tr>\n"
"<tr><td>Y Bounds</td><td>0.000e+00, 1.786e+02</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 2.000e+02</td></tr>\n"
"<tr><td>Dimensions</td><td>208, 248, 201</td></tr>\n"
"<tr><td>Spacing</td><td>7.230e-01, 7.230e-01, 1.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>SLCImage</b></td><td>Points</td><td>uint8</td><td>1</td><td>0.000e+00</td><td>1.740e+02</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>ImageData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>10225800</td></tr>\n"
"<tr><td>N Points</td><td>10368384</td></tr>\n"
"<tr><td>X Bounds</td><td>0.000e+00, 1.497e+02</td></tr>\n"
"<tr><td>Y Bounds</td><td>0.000e+00, 1.786e+02</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 2.000e+02</td></tr>\n"
"<tr><td>Dimensions</td><td>208, 248, 201</td></tr>\n"
"<tr><td>Spacing</td><td>7.230e-01, 7.230e-01, 1.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>SLCImage</b></td><td>Points</td><td>uint8</td><td>1</td><td>0.000e+00</td><td>1.740e+02</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/02-plot/volume.rst:80
msgid "Simple Volume Render"
msgstr "シンプルボリュームレンダー"

#: ../../pyvista/doc/source/examples/02-plot/volume.rst:109
msgid "Opacity Mappings"
msgstr "不透明度マッピング"

#: ../../pyvista/doc/source/examples/02-plot/volume.rst:111
msgid ""
"Or use the :func:`pyvista.Plotter.add_volume` method like below. Note that "
"here we use a non-default opacity mapping to a sigmoid:"
msgstr ""
"または，以下のように :func:`pyvista.Plotter.add_volume` "
"メソッドを使用します．ここでは，シグモイドへのデフォルト以外の不透明度マッピングを使用することに注意してください．"

#: ../../pyvista/doc/source/examples/02-plot/volume.rst:138
msgid "You can also use a custom opacity mapping"
msgstr "カスタム不透明度マッピングを使用することもできます．"

#: ../../pyvista/doc/source/examples/02-plot/volume.rst:165
msgid ""
"We can also use a shading technique when volume rendering with the ``shade``"
" option"
msgstr "``shade`` オプションを使用してボリュームレンダリングを行う場合は，シェーディングテクニックを使用することもできます．"

#: ../../pyvista/doc/source/examples/02-plot/volume.rst:197
msgid "Cool Volume Examples"
msgstr "かっこいいボリュームの例"

#: ../../pyvista/doc/source/examples/02-plot/volume.rst:199
msgid "Here are a few more cool volume rendering examples."
msgstr "ここでは，クールなボリュームレンダリングの例をいくつか紹介します．"

#: ../../pyvista/doc/source/examples/02-plot/volume.rst:204
msgid "Head Dataset"
msgstr "ヘッドデータセット"

#: ../../pyvista/doc/source/examples/02-plot/volume.rst:235
msgid "Bolt-Nut MultiBlock Dataset"
msgstr "ボルト・ナット式マルチブロックデータセット"

#: ../../pyvista/doc/source/examples/02-plot/volume.rst:237
msgid ""
"See how we set interpolation to ``'linear'`` here to smooth out scalars of "
"each individual cell to make a more appealing plot. Two actor are returned "
"by ``add_volume`` because ``bolt_nut`` is a :class:`pyvista.MultiBlock` "
"dataset."
msgstr ""
"ここでは，より魅力的なプロットを作成するために，個々のセルのスカラーを滑らかにするために，補間を ``'linear'`` "
"に設定したことを確認してください． ``bolt_nut`` は :class:`pyvista.MultiBlock` というデータセットなので， "
"``add_volume`` が返すアクターは 2 つになります．"

#: ../../pyvista/doc/source/examples/02-plot/volume.rst:272
msgid "Frog Dataset"
msgstr "カエルデータセット"

#: ../../pyvista/doc/source/examples/02-plot/volume.rst:303
msgid "Extracting a VOI"
msgstr "VOIの抽出"

#: ../../pyvista/doc/source/examples/02-plot/volume.rst:305
msgid ""
"Use the :func:`pyvista.ImageDataFilters.extract_subset` filter to extract a "
"volume of interest/subset volume to volume render. This is ideal when "
"dealing with particularly large volumes and you want to volume render only a"
" specific region."
msgstr ""
":func:`pyvista.ImageDataFilters.extract_subset` "
"フィルタを使用して，ボリュームレンダリングの対象となるボリューム/サブセットボリュームを抽出します．これは，特に大きなボリュームを処理し，特定の領域のみをボリュームレンダーする場合に理想的です．"

#: ../../pyvista/doc/source/examples/02-plot/volume.rst:324
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>ImageData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>11003760</td></tr>\n"
"<tr><td>N Points</td><td>11156040</td></tr>\n"
"<tr><td>X Bounds</td><td>4.130e+05, 6.920e+05</td></tr>\n"
"<tr><td>Y Bounds</td><td>3.864e+06, 4.096e+06</td></tr>\n"
"<tr><td>Z Bounds</td><td>-5.479e+04, 5.302e+03</td></tr>\n"
"<tr><td>Dimensions</td><td>280, 233, 171</td></tr>\n"
"<tr><td>Spacing</td><td>1.000e+03, 1.000e+03, 3.535e+02</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>data</b></td><td>Points</td><td>float32</td><td>1</td><td>9.782e-15</td><td>1.000e+02</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>ImageData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>11003760</td></tr>\n"
"<tr><td>N Points</td><td>11156040</td></tr>\n"
"<tr><td>X Bounds</td><td>4.130e+05, 6.920e+05</td></tr>\n"
"<tr><td>Y Bounds</td><td>3.864e+06, 4.096e+06</td></tr>\n"
"<tr><td>Z Bounds</td><td>-5.479e+04, 5.302e+03</td></tr>\n"
"<tr><td>Dimensions</td><td>280, 233, 171</td></tr>\n"
"<tr><td>Spacing</td><td>1.000e+03, 1.000e+03, 3.535e+02</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>data</b></td><td>Points</td><td>float32</td><td>1</td><td>9.782e-15</td><td>1.000e+02</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/02-plot/volume.rst:383
msgid ""
"Woah, that's a big volume. We probably don't want to volume render the whole"
" thing. So let's extract a region of interest under the volcano."
msgstr "わあ，すごいボリュームだ．全体をボリュームレンダリングしたくはないでしょう．火山の下の興味深い地域を抽出してみましょう．"

#: ../../pyvista/doc/source/examples/02-plot/volume.rst:386
msgid ""
"The region we will extract will be between nodes 175 and 200 on the x-axis, "
"between nodes 105 and 132 on the y-axis, and between nodes 98 and 170 on the"
" z-axis."
msgstr "抽出する領域は，x軸上の節点175と200の間，y軸上の節点105と132の間，およびz軸上の節点98と170の間になります．"

#: ../../pyvista/doc/source/examples/02-plot/volume.rst:416
msgid "Ah, much better. Let's now volume render that region of interest."
msgstr "ああ，だいぶよくなりました．次に，その対象領域をボリュームレンダリングします．"

#: ../../pyvista/doc/source/examples/02-plot/volume.rst:446
msgid "**Total running time of the script:** ( 0 minutes  59.832 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  59.832 seconds)"

#: ../../pyvista/doc/source/examples/02-plot/volume.rst:460
msgid ":download:`Download Python source code: volume.py <volume.py>`"
msgstr ":download:`Download Python source code: volume.py <volume.py>`"

#: ../../pyvista/doc/source/examples/02-plot/volume.rst:464
msgid ":download:`Download Jupyter notebook: volume.ipynb <volume.ipynb>`"
msgstr ":download:`Download Jupyter notebook: volume.ipynb <volume.ipynb>`"

#: ../../pyvista/doc/source/examples/03-widgets/animation.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_03-widgets_animation.py>` to"
" download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_03-widgets_animation.py>` to"
" download the full example code"

#: ../../pyvista/doc/source/examples/03-widgets/animation.rst:24
msgid "Animation"
msgstr "アニメーション"

#: ../../pyvista/doc/source/examples/03-widgets/animation.rst:26
msgid ""
"This example demonstrates how to create a simple animation. A timer is used "
"to move a sphere across a scene."
msgstr "この例では，簡単なアニメーションを作成する方法を示します．タイマーを使って，球体をシーン全体に動かします．"

#: ../../pyvista/doc/source/examples/03-widgets/animation.rst:29
msgid ""
"Inspired by `VTK Animation Examples "
"<https://examples.vtk.org/site/Python/Utilities/Animation/>`_."
msgstr ""
"`VTK Animation Examples "
"<https://examples.vtk.org/site/Python/Utilities/Animation/>`_ に触発されました．"

#: ../../pyvista/doc/source/examples/03-widgets/animation.rst:67
msgid "**Total running time of the script:** (0 minutes 0.789 seconds)"
msgstr "**Total running time of the script:** (0 minutes 0.789 seconds)"

#: ../../pyvista/doc/source/examples/03-widgets/animation.rst:81
msgid ":download:`Download Python source code: animation.py <animation.py>`"
msgstr ":download:`Download Python source code: animation.py <animation.py>`"

#: ../../pyvista/doc/source/examples/03-widgets/animation.rst:85
msgid ""
":download:`Download Jupyter notebook: animation.ipynb <animation.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: animation.ipynb <animation.ipynb>`"

#: ../../pyvista/doc/source/examples/03-widgets/box-widget.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_03-widgets_box-widget.py>` to "
"download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_03-widgets_box-widget.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/03-widgets/box-widget.rst:24
msgid "Box Widget"
msgstr "ボックスウィジェット"

#: ../../pyvista/doc/source/examples/03-widgets/box-widget.rst:26
msgid ""
"The box widget can be enabled and disabled by the "
":func:`pyvista.Plotter.add_box_widget` and "
":func:`pyvista.Plotter.clear_box_widgets` methods respectively. When "
"enabling the box widget, you must provide a custom callback function "
"otherwise the box would appear and do nothing - the callback functions are "
"what allow us to leverage the widget to perform a task like "
"clipping/cropping."
msgstr ""
"ボックスウィジェットは， :func:`pyvista.Plotter.add_box_widget` および "
":func:`pyvista.Plotter.clear_box_widgets` "
"メソッドによって，それぞれ有効および無効にすることができます．ボックスウィジェットを有効にする場合は，カスタムコールバック関数を提供する必要があります．そうしないとボックスが表示されて何も実行されません．コールバック関数を使用すると，クリップやクロッピングなどのタスクをウィジェットで実行できます．"

#: ../../pyvista/doc/source/examples/03-widgets/box-widget.rst:33
msgid ""
"Considering that using a box to clip/crop a mesh is one of the most common "
"use cases, we have included a helper method that will allow you to add a "
"mesh to a scene with a box widget that controls its extent, the "
":func:`pyvista.Plotter.add_mesh_clip_box` method."
msgstr ""
"メッシュをクリップ/クロップするためにボックスを使用することが最も一般的な使用例の1つであることを考慮して，メッシュの範囲を制御するボックスウィジェットを使用してシーンにメッシュを追加できるヘルパーメソッド，"
" :func:`pyvista.Plotter.add_mesh_clip_box` メソッドを含めました．"

#: ../../pyvista/doc/source/examples/03-widgets/box-widget.rst:81
#: ../../pyvista/doc/source/examples/03-widgets/plane-widget.rst:62
msgid "After interacting with the scene, the clipped mesh is available as:"
msgstr "シーンを操作すると，クリップされたメッシュは次のように使用できます．"

#: ../../pyvista/doc/source/examples/03-widgets/box-widget.rst:113
msgid "**Total running time of the script:** ( 0 minutes  8.533 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  8.533 seconds)"

#: ../../pyvista/doc/source/examples/03-widgets/box-widget.rst:128
msgid ":download:`Download Python source code: box-widget.py <box-widget.py>`"
msgstr ""
":download:`Download Python source code: box-widget.py <box-widget.py>`"

#: ../../pyvista/doc/source/examples/03-widgets/box-widget.rst:134
msgid ""
":download:`Download Jupyter notebook: box-widget.ipynb <box-widget.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: box-widget.ipynb <box-widget.ipynb>`"

#: ../../pyvista/doc/source/examples/03-widgets/checkbox-widget.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_03-widgets_checkbox-widget.py>`"
" to download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_03-widgets_checkbox-widget.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/03-widgets/checkbox-widget.rst:24
msgid "Checkbox Widget"
msgstr "チェックボックスウィジェット"

#: ../../pyvista/doc/source/examples/03-widgets/checkbox-widget.rst:26
msgid "Use a checkbox to turn on/off the visibility of meshes in a scene."
msgstr "チェックボックスを使用して，シーン内のメッシュの表示/非表示を切り替えます．"

#: ../../pyvista/doc/source/examples/03-widgets/checkbox-widget.rst:28
msgid ""
"See :func:`pyvista.Plotter.add_checkbox_button_widget` for more details."
msgstr ""
"詳細については， :func:`pyvista.Plotter.add_checkbox_button_widget` を参照してください．"

#: ../../pyvista/doc/source/examples/03-widgets/checkbox-widget.rst:46
msgid "Single Checkbox"
msgstr "単一チェックボックス"

#: ../../pyvista/doc/source/examples/03-widgets/checkbox-widget.rst:81
msgid "Multiple Checkboxes"
msgstr "複数のチェックボックス"

#: ../../pyvista/doc/source/examples/03-widgets/checkbox-widget.rst:83
msgid ""
"In this example, we will add many meshes to a scene with unique colors and "
"create corresponding checkboxes for those meshes of the same color to toggle"
" their visibility in the scene."
msgstr ""
"この例では，一意のカラーを持つ多数のメッシュをシーンに追加し，同じカラーのメッシュに対応するチェックボックスを作成してシーン内での可視を切り替えます．"

#: ../../pyvista/doc/source/examples/03-widgets/checkbox-widget.rst:162
msgid "**Total running time of the script:** ( 0 minutes  0.787 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  0.787 seconds)"

#: ../../pyvista/doc/source/examples/03-widgets/checkbox-widget.rst:177
msgid ""
":download:`Download Python source code: checkbox-widget.py <checkbox-"
"widget.py>`"
msgstr ""
":download:`Download Python source code: checkbox-widget.py <checkbox-"
"widget.py>`"

#: ../../pyvista/doc/source/examples/03-widgets/checkbox-widget.rst:183
msgid ""
":download:`Download Jupyter notebook: checkbox-widget.ipynb <checkbox-"
"widget.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: checkbox-widget.ipynb <checkbox-"
"widget.ipynb>`"

#: ../../pyvista/doc/source/examples/03-widgets/clip-volume.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_03-widgets_clip-volume.py>` "
"to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_03-widgets_clip-volume.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/03-widgets/clip-volume.rst:24
msgid "Clip Volume Widget"
msgstr "クリップボリュームウィジェット"

#: ../../pyvista/doc/source/examples/03-widgets/clip-volume.rst:25
msgid ""
"If you have a structured dataset like a :class:`pyvista.ImageData` or "
":class:`pyvista.RectilinearGrid`, you can clip it using the "
":func:`pyvista.Plotter.add_volume_clip_plane` widget to better see the "
"internal structure of the dataset."
msgstr ""
":class:`pyvista.ImageData` や :class:`pyvista.RectilinearGrid` "
"のような構造化されたデータセットでは， :func:`pyvista.Plotter.add_volume_clip_plane` "
"ウィジェットを使ってデータセットを切り取って，内部構造をより良く確認できるようにすることができます．"

#: ../../pyvista/doc/source/examples/03-widgets/clip-volume.rst:35
msgid "Create the Dataset"
msgstr "データセットの作成"

#: ../../pyvista/doc/source/examples/03-widgets/clip-volume.rst:36
msgid ""
"Create a dense :class:`pyvista.ImageData` with dimensions ``(200, 200, "
"200)`` and set the active scalars to distance from the :attr:`center "
"<pyvista.DataSet.center>` of the grid."
msgstr ""
"寸法 ``(200, 200, 200)`` の密な :class:`pyvista.ImageData` を作成し，アクティブスカラーをグリッドの "
":attr:`center <pyvista.DataSet.center>` からの距離として設定します．"

#: ../../pyvista/doc/source/examples/03-widgets/clip-volume.rst:59
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>ImageData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>7880599</td></tr>\n"
"<tr><td>N Points</td><td>8000000</td></tr>\n"
"<tr><td>X Bounds</td><td>0.000e+00, 1.990e+02</td></tr>\n"
"<tr><td>Y Bounds</td><td>0.000e+00, 1.990e+02</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 1.990e+02</td></tr>\n"
"<tr><td>Dimensions</td><td>200, 200, 200</td></tr>\n"
"<tr><td>Spacing</td><td>1.000e+00, 1.000e+00, 1.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>scalars</b></td><td>Points</td><td>float64</td><td>1</td><td>8.660e-01</td><td>1.723e+02</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>ImageData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>7880599</td></tr>\n"
"<tr><td>N Points</td><td>8000000</td></tr>\n"
"<tr><td>X Bounds</td><td>0.000e+00, 1.990e+02</td></tr>\n"
"<tr><td>Y Bounds</td><td>0.000e+00, 1.990e+02</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 1.990e+02</td></tr>\n"
"<tr><td>Dimensions</td><td>200, 200, 200</td></tr>\n"
"<tr><td>Spacing</td><td>1.000e+00, 1.000e+00, 1.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>scalars</b></td><td>Points</td><td>float64</td><td>1</td><td>8.660e-01</td><td>1.723e+02</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/03-widgets/clip-volume.rst:89
msgid "Generate the Opacity Array"
msgstr "不透明度配列の生成"

#: ../../pyvista/doc/source/examples/03-widgets/clip-volume.rst:90
msgid ""
"Create a banded opacity array such that our dataset shows \"rings\" at "
"certain values. Have this increase such that higher values (values farther "
"away from the center) are more opaque."
msgstr "データセットがある値で \"輪\" を示すような，帯状の不透明度配列を作成します．高い値（中心から遠い値）がより不透明になるように増加させます．"

#: ../../pyvista/doc/source/examples/03-widgets/clip-volume.rst:113
msgid "Plot a Single Clip Plane Dataset"
msgstr "単一クリッププレーンデータセットのプロット"

#: ../../pyvista/doc/source/examples/03-widgets/clip-volume.rst:114
msgid "Plot the volume with a single clip plane."
msgstr "単一のクリッププレーンでボリュームをプロットします．"

#: ../../pyvista/doc/source/examples/03-widgets/clip-volume.rst:116
msgid ""
"Reverse the opacity array such that portions closer to the center are more "
"opaque."
msgstr "不透明度の配列を反転させ，中心に近い部分がより不透明になるようにします．"

#: ../../pyvista/doc/source/examples/03-widgets/clip-volume.rst:144
msgid "Plot Multiple Clip Planes"
msgstr "複数のクリッププレーンをプロットする"

#: ../../pyvista/doc/source/examples/03-widgets/clip-volume.rst:145
msgid ""
"Plot the dataset using the :func:`pyvista.Plotter.add_volume_clip_plane` "
"with the output from :func:`pyvista.Plotter.add_volume` Enable constant "
"interaction by setting the ``interaction_event`` to ``'always'``."
msgstr ""
":func:`pyvista.Plotter.add_volume_clip_plane` による出力で，データセットをプロットします． "
"``interaction_event`` を ``'always'`` に設定して，一定のインタラクションを有効にします．"

#: ../../pyvista/doc/source/examples/03-widgets/clip-volume.rst:149
msgid ""
"Disable the arrows to make the plot a bit clearer and flip the opacity "
"array."
msgstr "プロットをもう少しわかりやすくするために矢印を無効にし，不透明度の配列を反転させます．"

#: ../../pyvista/doc/source/examples/03-widgets/clip-volume.rst:187
msgid "**Total running time of the script:** ( 0 minutes  5.647 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  5.647 seconds)"

#: ../../pyvista/doc/source/examples/03-widgets/clip-volume.rst:201
msgid ""
":download:`Download Python source code: clip-volume.py <clip-volume.py>`"
msgstr ""
":download:`Download Python source code: clip-volume.py <clip-volume.py>`"

#: ../../pyvista/doc/source/examples/03-widgets/clip-volume.rst:205
msgid ""
":download:`Download Jupyter notebook: clip-volume.ipynb <clip-volume.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: clip-volume.ipynb <clip-volume.ipynb>`"

#: ../../pyvista/doc/source/examples/03-widgets/index.rst:8
#: ../../pyvista/doc/source/examples/index.rst:2249
msgid "Widgets"
msgstr "ウィジェット"

#: ../../pyvista/doc/source/examples/03-widgets/index.rst:10
#: ../../pyvista/doc/source/examples/index.rst:2251
msgid ""
"PyVista has several widgets that can be added to the rendering scene to "
"control filters like clipping, slicing, and thresholding - specifically "
"there are widgets to control the positions of boxes, planes, and lines or "
"slider bars which can all be highly customized through the use of custom "
"callback functions."
msgstr ""
"PyVistaには，クリッピング，スライス，および閾値などのフィルタを制御するためにレンダリングシーンに追加できるいくつかのウィジェットがあります．具体的には，ボックス，プレーン，およびラインまたはスライダバーの位置を制御するウィジェットがあり，これらはすべてカスタムコールバック関数を使用して高度にカスタマイズできます．"

#: ../../pyvista/doc/source/examples/03-widgets/index.rst:16
#: ../../pyvista/doc/source/examples/index.rst:2257
msgid ""
"Here we'll take a look at the various widgets, some helper methods that "
"leverage those widgets to do common tasks, and demonstrate how to leverage "
"the widgets for user defined tasks and processing routines."
msgstr ""
"ここでは，さまざまなウィジェット，これらのウィジェットを利用して一般的なタスクを実行するヘルパー・メソッド，およびユーザー定義タスクと処理ルーチン用のウィジェットを利用する方法について説明します．"

#: ../../pyvista/doc/source/examples/03-widgets/index.rst:27
#: ../../pyvista/doc/source/examples/index.rst:2268
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example demonstrates "
"how to create a simple animation. A timer is used to move a sphere ac...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example demonstrates "
"how to create a simple animation. A timer is used to move a sphere ac...\">"

#: ../../pyvista/doc/source/examples/03-widgets/index.rst:36
#: ../../pyvista/doc/source/examples/index.rst:2277
msgid ":ref:`sphx_glr_examples_03-widgets_animation.py`"
msgstr ":ref:`sphx_glr_examples_03-widgets_animation.py`"

#: ../../pyvista/doc/source/examples/03-widgets/index.rst:38
#: ../../pyvista/doc/source/examples/index.rst:2279
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Animation</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Animation</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/03-widgets/index.rst:44
#: ../../pyvista/doc/source/examples/index.rst:2285
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The box widget can be "
"enabled and disabled by the pyvista.Plotter.add_box_widget and "
"pyvista.Pl...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The box widget can be "
"enabled and disabled by the pyvista.Plotter.add_box_widget and "
"pyvista.Pl...\">"

#: ../../pyvista/doc/source/examples/03-widgets/index.rst:53
#: ../../pyvista/doc/source/examples/index.rst:2294
msgid ":ref:`sphx_glr_examples_03-widgets_box-widget.py`"
msgstr ":ref:`sphx_glr_examples_03-widgets_box-widget.py`"

#: ../../pyvista/doc/source/examples/03-widgets/index.rst:55
#: ../../pyvista/doc/source/examples/index.rst:2296
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Box Widget</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Box Widget</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/03-widgets/index.rst:61
#: ../../pyvista/doc/source/examples/index.rst:2302
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Use a checkbox to turn "
"on/off the visibility of meshes in a scene.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Use a checkbox to turn "
"on/off the visibility of meshes in a scene.\">"

#: ../../pyvista/doc/source/examples/03-widgets/index.rst:70
#: ../../pyvista/doc/source/examples/index.rst:2311
msgid ":ref:`sphx_glr_examples_03-widgets_checkbox-widget.py`"
msgstr ":ref:`sphx_glr_examples_03-widgets_checkbox-widget.py`"

#: ../../pyvista/doc/source/examples/03-widgets/index.rst:72
#: ../../pyvista/doc/source/examples/index.rst:2313
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Checkbox Widget</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Checkbox Widget</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/03-widgets/index.rst:78
#: ../../pyvista/doc/source/examples/index.rst:2319
msgid "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Clip Volume Widget\">"
msgstr "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Clip Volume Widget\">"

#: ../../pyvista/doc/source/examples/03-widgets/index.rst:87
#: ../../pyvista/doc/source/examples/index.rst:2328
msgid ":ref:`sphx_glr_examples_03-widgets_clip-volume.py`"
msgstr ":ref:`sphx_glr_examples_03-widgets_clip-volume.py`"

#: ../../pyvista/doc/source/examples/03-widgets/index.rst:89
#: ../../pyvista/doc/source/examples/index.rst:2330
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Clip Volume Widget</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Clip Volume Widget</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/03-widgets/index.rst:95
#: ../../pyvista/doc/source/examples/index.rst:2336
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The line widget can be "
"enabled and disabled by the pyvista.Plotter.add_line_widget and "
"pyvista....\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The line widget can be "
"enabled and disabled by the pyvista.Plotter.add_line_widget and "
"pyvista....\">"

#: ../../pyvista/doc/source/examples/03-widgets/index.rst:104
#: ../../pyvista/doc/source/examples/index.rst:2345
msgid ":ref:`sphx_glr_examples_03-widgets_line-widget.py`"
msgstr ":ref:`sphx_glr_examples_03-widgets_line-widget.py`"

#: ../../pyvista/doc/source/examples/03-widgets/index.rst:106
#: ../../pyvista/doc/source/examples/index.rst:2347
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Line Widget</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Line Widget</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/03-widgets/index.rst:112
#: ../../pyvista/doc/source/examples/index.rst:2353
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Use a class based callback "
"to track multiple slider widgets for updating a single mesh.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Use a class based callback "
"to track multiple slider widgets for updating a single mesh.\">"

#: ../../pyvista/doc/source/examples/03-widgets/index.rst:121
#: ../../pyvista/doc/source/examples/index.rst:2362
msgid ":ref:`sphx_glr_examples_03-widgets_multi-slider-widget.py`"
msgstr ":ref:`sphx_glr_examples_03-widgets_multi-slider-widget.py`"

#: ../../pyvista/doc/source/examples/03-widgets/index.rst:123
#: ../../pyvista/doc/source/examples/index.rst:2364
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Multiple Slider Widgets</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Multiple Slider Widgets</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/03-widgets/index.rst:129
#: ../../pyvista/doc/source/examples/index.rst:2370
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The plane widget can be "
"enabled and disabled by the pyvista.Plotter.add_plane_widget and "
"pyvist...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The plane widget can be "
"enabled and disabled by the pyvista.Plotter.add_plane_widget and "
"pyvist...\">"

#: ../../pyvista/doc/source/examples/03-widgets/index.rst:138
#: ../../pyvista/doc/source/examples/index.rst:2379
msgid ":ref:`sphx_glr_examples_03-widgets_plane-widget.py`"
msgstr ":ref:`sphx_glr_examples_03-widgets_plane-widget.py`"

#: ../../pyvista/doc/source/examples/03-widgets/index.rst:140
#: ../../pyvista/doc/source/examples/index.rst:2381
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Plane Widget</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Plane Widget</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/03-widgets/index.rst:146
#: ../../pyvista/doc/source/examples/index.rst:2387
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The slider widget can be "
"enabled and disabled by the pyvista.Plotter.add_slider_widget and pyvi...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The slider widget can be "
"enabled and disabled by the pyvista.Plotter.add_slider_widget and pyvi...\">"

#: ../../pyvista/doc/source/examples/03-widgets/index.rst:155
#: ../../pyvista/doc/source/examples/index.rst:2396
msgid ":ref:`sphx_glr_examples_03-widgets_slider-bar-widget.py`"
msgstr ":ref:`sphx_glr_examples_03-widgets_slider-bar-widget.py`"

#: ../../pyvista/doc/source/examples/03-widgets/index.rst:157
#: ../../pyvista/doc/source/examples/index.rst:2398
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Slider Bar Widget</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Slider Bar Widget</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/03-widgets/index.rst:163
#: ../../pyvista/doc/source/examples/index.rst:2404
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The sphere widget can be "
"enabled and disabled by the pyvista.Plotter.add_sphere_widget and pyvi...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The sphere widget can be "
"enabled and disabled by the pyvista.Plotter.add_sphere_widget and pyvi...\">"

#: ../../pyvista/doc/source/examples/03-widgets/index.rst:172
#: ../../pyvista/doc/source/examples/index.rst:2413
msgid ":ref:`sphx_glr_examples_03-widgets_sphere-widget.py`"
msgstr ":ref:`sphx_glr_examples_03-widgets_sphere-widget.py`"

#: ../../pyvista/doc/source/examples/03-widgets/index.rst:174
#: ../../pyvista/doc/source/examples/index.rst:2415
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Sphere Widget</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Sphere Widget</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/03-widgets/index.rst:180
#: ../../pyvista/doc/source/examples/index.rst:2421
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\" A spline widget can be "
"enabled and disabled by the pyvista.Plotter.add_spline_widget and "
"pyvis...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\" A spline widget can be "
"enabled and disabled by the pyvista.Plotter.add_spline_widget and "
"pyvis...\">"

#: ../../pyvista/doc/source/examples/03-widgets/index.rst:189
#: ../../pyvista/doc/source/examples/index.rst:2430
msgid ":ref:`sphx_glr_examples_03-widgets_spline-widget.py`"
msgstr ":ref:`sphx_glr_examples_03-widgets_spline-widget.py`"

#: ../../pyvista/doc/source/examples/03-widgets/index.rst:191
#: ../../pyvista/doc/source/examples/index.rst:2432
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Spline Widget</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Spline Widget</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/03-widgets/line-widget.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_03-widgets_line-widget.py>` to "
"download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_03-widgets_line-widget.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/03-widgets/line-widget.rst:24
msgid "Line Widget"
msgstr "線ウィジェット"

#: ../../pyvista/doc/source/examples/03-widgets/line-widget.rst:26
msgid ""
"The line widget can be enabled and disabled by the "
":func:`pyvista.Plotter.add_line_widget` and "
":func:`pyvista.Plotter.clear_line_widgets` methods respectively. "
"Unfortunately, PyVista does not have any helper methods to utilize this "
"widget, so it is necessary to pass a custom callback method."
msgstr ""
"行ウィジェットは， :func:`pyvista.WidgetHelper.add_line_widget` および "
":func:`pyvista.WidgetHelper.clear_line_widgets` "
"メソッドによって，それぞれ有効および無効にすることができます．残念ながら，PyVistaにはこのウィジェットを利用するヘルパー・メソッドがないため，カスタムのコールバック・メソッドを渡す必要があります．"

#: ../../pyvista/doc/source/examples/03-widgets/line-widget.rst:32
msgid ""
"One particularly fun example is to use the line widget to create a source "
"for the :func:`pyvista.DataSetFilters.streamlines` filter. Again note the "
"use of the ``name`` argument in ``add_mesh``."
msgstr ""
"特に面白い例は，行ウィジェットを使って :func:`pyvista.DataSetFilters.streamlines` "
"フィルタのソースを作成することです． ``add_mesh`` で ``name`` 引数を使用していることに再度注意してください．"

#: ../../pyvista/doc/source/examples/03-widgets/line-widget.rst:96
#: ../../pyvista/doc/source/examples/03-widgets/plane-widget.rst:92
#: ../../pyvista/doc/source/examples/03-widgets/plane-widget.rst:153
#: ../../pyvista/doc/source/examples/03-widgets/plane-widget.rst:203
#: ../../pyvista/doc/source/examples/03-widgets/slider-bar-widget.rst:110
#: ../../pyvista/doc/source/examples/03-widgets/slider-bar-widget.rst:155
#: ../../pyvista/doc/source/examples/03-widgets/sphere-widget.rst:102
#: ../../pyvista/doc/source/examples/03-widgets/sphere-widget.rst:161
#: ../../pyvista/doc/source/examples/03-widgets/sphere-widget.rst:265
msgid "And here is a screen capture of a user interacting with this"
msgstr "以下はユーザ対話型のスクリーンショットです"

#: ../../pyvista/doc/source/examples/03-widgets/line-widget.rst:103
msgid "**Total running time of the script:** ( 0 minutes  1.797 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.797 seconds)"

#: ../../pyvista/doc/source/examples/03-widgets/line-widget.rst:118
msgid ""
":download:`Download Python source code: line-widget.py <line-widget.py>`"
msgstr ""
":download:`Download Python source code: line-widget.py <line-widget.py>`"

#: ../../pyvista/doc/source/examples/03-widgets/line-widget.rst:124
msgid ""
":download:`Download Jupyter notebook: line-widget.ipynb <line-widget.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: line-widget.ipynb <line-widget.ipynb>`"

#: ../../pyvista/doc/source/examples/03-widgets/multi-slider-widget.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_03-widgets_multi-slider-"
"widget.py>` to download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_03-widgets_multi-slider-widget.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/03-widgets/multi-slider-widget.rst:22
msgid "Multiple Slider Widgets"
msgstr "複数のスライダウィジェット"

#: ../../pyvista/doc/source/examples/03-widgets/multi-slider-widget.rst:24
msgid ""
"Use a class based callback to track multiple slider widgets for updating a "
"single mesh."
msgstr "クラスベースのコールバックを使用して，1つのメッシュを更新するために複数のスライダウィジェットを追跡します．"

#: ../../pyvista/doc/source/examples/03-widgets/multi-slider-widget.rst:27
msgid ""
"In this example we simply change a few parameters for the "
":func:`pyvista.Sphere` method, but this could easily be applied to any mesh-"
"generating/altering code."
msgstr ""
"この例では， :func:`pyvista.Sphere` "
"メソッドのパラメータをいくつか変更するだけですが，これはどのようなメッシュ生成/変更コードにも簡単に適用できます．"

#: ../../pyvista/doc/source/examples/03-widgets/multi-slider-widget.rst:131
msgid "**Total running time of the script:** ( 0 minutes  0.416 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  0.416 seconds)"

#: ../../pyvista/doc/source/examples/03-widgets/multi-slider-widget.rst:143
msgid ""
":download:`Download Python source code: multi-slider-widget.py <multi-"
"slider-widget.py>`"
msgstr ""
":download:`Download Python source code: multi-slider-widget.py <multi-"
"slider-widget.py>`"

#: ../../pyvista/doc/source/examples/03-widgets/multi-slider-widget.rst:147
msgid ""
":download:`Download Jupyter notebook: multi-slider-widget.ipynb <multi-"
"slider-widget.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: multi-slider-widget.ipynb <multi-"
"slider-widget.ipynb>`"

#: ../../pyvista/doc/source/examples/03-widgets/plane-widget.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_03-widgets_plane-widget.py>`"
" to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_03-widgets_plane-widget.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/03-widgets/plane-widget.rst:24
msgid "Plane Widget"
msgstr "平面ウィジェット"

#: ../../pyvista/doc/source/examples/03-widgets/plane-widget.rst:26
msgid ""
"The plane widget can be enabled and disabled by the "
":func:`pyvista.Plotter.add_plane_widget` and "
":func:`pyvista.Plotter.clear_plane_widgets` methods respectively. As with "
"all widgets, you must provide a custom callback method to utilize that "
"plane. Considering that planes are most commonly used for clipping and "
"slicing meshes, we have included two helper methods for doing those tasks."
msgstr ""
"プレーンウィジェットは，それぞれ :func:`pyvista.Plotter.add_plane_widget` と "
":func:`pyvista.Plotter.clear_plane_widgets` "
"メソッドによって有効と無効にすることができます．すべてのウィジェットと同様に，このプレーンを利用するにはカスタム・コールバック・メソッドを提供する必要があります．メッシュのクリッピングとスライスに平面が最も一般的に使用されることを考慮して，これらのタスクを実行する2つのヘルパーメソッドを用意しました．"

#: ../../pyvista/doc/source/examples/03-widgets/plane-widget.rst:33
msgid "Let's use a plane to clip a mesh:"
msgstr "平面を使用してメッシュをクリップしましょう:"

#: ../../pyvista/doc/source/examples/03-widgets/plane-widget.rst:98
msgid "Or you could slice a mesh using the plane widget:"
msgstr "または，平面ウィジェットを使用してメッシュをスライスすることもできます．"

#: ../../pyvista/doc/source/examples/03-widgets/plane-widget.rst:122
msgid "After interacting with the scene, the slice is available as:"
msgstr "シーンを操作すると，スライスは次のように表示されます．"

#: ../../pyvista/doc/source/examples/03-widgets/plane-widget.rst:159
msgid ""
"Or you could leverage the plane widget for some custom task like glyphing a "
"vector field along that plane. Note that we have to pass a ``name`` when "
"calling ``add_mesh`` to ensure that there is only one set of glyphs plotted "
"at a time."
msgstr ""
"あるいは，平面ウィジェットを利用して，その平面に沿ってベクトルフィールドをグリフするなどのカスタムタスクを実行することもできます． "
"``add_mesh`` を呼び出す際には，一度に出力されるグリフのセットが1つだけであることを保証するために ``name`` "
"を渡す必要があることに注意してください．"

#: ../../pyvista/doc/source/examples/03-widgets/plane-widget.rst:209
msgid ""
"Further, a user can disable the arrow vector by setting the "
"``normal_rotation`` argument to ``False``. For example, here we "
"programmatically set the normal vector on which we want to translate the "
"plane and we disable the arrow to prevent its rotation."
msgstr ""
"さらに， ``normal_rotation`` 引数を ``False`` "
"に設定することで，矢印ベクトルを無効にすることができます．たとえば，ここでは平面を移動する法線ベクトルをプログラムで設定し，矢印を無効にして回転を防止します．"

#: ../../pyvista/doc/source/examples/03-widgets/plane-widget.rst:237
msgid ""
"The vector is also forcibly disabled anytime the ``assign_to_axis`` argument"
" is set."
msgstr "このベクトルは， ``assign_to_axis`` 引数が設定されている場合は常に強制的に無効にされます．"

#: ../../pyvista/doc/source/examples/03-widgets/plane-widget.rst:263
msgid ""
"Additionally, users can modify the interaction event that triggers the "
"callback functions handled by the different plane widget helpers through the"
" ``interaction_event`` keyword argument when available. For example, we can "
"have continuous slicing by using the ``InteractionEvent`` observer."
msgstr ""
"さらに，ユーザは ``interaction_event`` "
"キーワード引数を通して，利用可能な場合，異なるプレーンウィジェットヘルパーが処理するコールバック関数をトリガーするインタラクションイベントを変更することができます．例えば，"
" ``InteractionEvent`` オブザーバを使用することで，連続的なスライスを行うことができます．"

#: ../../pyvista/doc/source/examples/03-widgets/plane-widget.rst:292
msgid ""
"And here is a screen capture of a user interacting with this continuously "
"via the ``InteractionEvent`` observer:"
msgstr ""
"そして，これは ``InteractionEvent`` オブザーバを介して，ユーザーが継続的にこのイベントを操作している画面のキャプチャです．"

#: ../../pyvista/doc/source/examples/03-widgets/plane-widget.rst:300
msgid "**Total running time of the script:** ( 0 minutes  7.580 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  7.580 seconds)"

#: ../../pyvista/doc/source/examples/03-widgets/plane-widget.rst:314
msgid ""
":download:`Download Python source code: plane-widget.py <plane-widget.py>`"
msgstr ""
":download:`Download Python source code: plane-widget.py <plane-widget.py>`"

#: ../../pyvista/doc/source/examples/03-widgets/plane-widget.rst:318
msgid ""
":download:`Download Jupyter notebook: plane-widget.ipynb <plane-"
"widget.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plane-widget.ipynb <plane-"
"widget.ipynb>`"

#: ../../pyvista/doc/source/examples/03-widgets/sg_execution_times.rst:9
msgid "**00:00.789** total execution time for **examples_03-widgets** files:"
msgstr "**00:00.789** total execution time for **examples_03-widgets** files:"

#: ../../pyvista/doc/source/examples/03-widgets/sg_execution_times.rst:12
msgid ":ref:`sphx_glr_examples_03-widgets_animation.py` (``animation.py``)"
msgstr ":ref:`sphx_glr_examples_03-widgets_animation.py` (``animation.py``)"

#: ../../pyvista/doc/source/examples/03-widgets/sg_execution_times.rst:12
msgid "00:00.789"
msgstr "00:00.789"

#: ../../pyvista/doc/source/examples/03-widgets/sg_execution_times.rst:14
msgid ":ref:`sphx_glr_examples_03-widgets_box-widget.py` (``box-widget.py``)"
msgstr ":ref:`sphx_glr_examples_03-widgets_box-widget.py` (``box-widget.py``)"

#: ../../pyvista/doc/source/examples/03-widgets/sg_execution_times.rst:16
msgid ""
":ref:`sphx_glr_examples_03-widgets_checkbox-widget.py` (``checkbox-"
"widget.py``)"
msgstr ""
":ref:`sphx_glr_examples_03-widgets_checkbox-widget.py` (``checkbox-"
"widget.py``)"

#: ../../pyvista/doc/source/examples/03-widgets/sg_execution_times.rst:18
msgid ""
":ref:`sphx_glr_examples_03-widgets_clip-volume.py` (``clip-volume.py``)"
msgstr ""
":ref:`sphx_glr_examples_03-widgets_clip-volume.py` (``clip-volume.py``)"

#: ../../pyvista/doc/source/examples/03-widgets/sg_execution_times.rst:20
msgid ""
":ref:`sphx_glr_examples_03-widgets_line-widget.py` (``line-widget.py``)"
msgstr ""
":ref:`sphx_glr_examples_03-widgets_line-widget.py` (``line-widget.py``)"

#: ../../pyvista/doc/source/examples/03-widgets/sg_execution_times.rst:22
msgid ""
":ref:`sphx_glr_examples_03-widgets_multi-slider-widget.py` (``multi-slider-"
"widget.py``)"
msgstr ""
":ref:`sphx_glr_examples_03-widgets_multi-slider-widget.py` (``multi-slider-"
"widget.py``)"

#: ../../pyvista/doc/source/examples/03-widgets/sg_execution_times.rst:24
msgid ""
":ref:`sphx_glr_examples_03-widgets_plane-widget.py` (``plane-widget.py``)"
msgstr ""
":ref:`sphx_glr_examples_03-widgets_plane-widget.py` (``plane-widget.py``)"

#: ../../pyvista/doc/source/examples/03-widgets/sg_execution_times.rst:26
msgid ""
":ref:`sphx_glr_examples_03-widgets_slider-bar-widget.py` (``slider-bar-"
"widget.py``)"
msgstr ""
":ref:`sphx_glr_examples_03-widgets_slider-bar-widget.py` (``slider-bar-"
"widget.py``)"

#: ../../pyvista/doc/source/examples/03-widgets/sg_execution_times.rst:28
msgid ""
":ref:`sphx_glr_examples_03-widgets_sphere-widget.py` (``sphere-widget.py``)"
msgstr ""
":ref:`sphx_glr_examples_03-widgets_sphere-widget.py` (``sphere-widget.py``)"

#: ../../pyvista/doc/source/examples/03-widgets/sg_execution_times.rst:30
msgid ""
":ref:`sphx_glr_examples_03-widgets_spline-widget.py` (``spline-widget.py``)"
msgstr ""
":ref:`sphx_glr_examples_03-widgets_spline-widget.py` (``spline-widget.py``)"

#: ../../pyvista/doc/source/examples/03-widgets/slider-bar-widget.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_03-widgets_slider-bar-"
"widget.py>` to download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_03-widgets_slider-bar-widget.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/03-widgets/slider-bar-widget.rst:24
msgid "Slider Bar Widget"
msgstr "スライダバーウィジェット"

#: ../../pyvista/doc/source/examples/03-widgets/slider-bar-widget.rst:26
msgid ""
"The slider widget can be enabled and disabled by the "
":func:`pyvista.Plotter.add_slider_widget` and "
":func:`pyvista.Plotter.clear_slider_widgets` methods respectively. This is "
"one of the most versatile widgets as it can control a value that can be used"
" for just about anything."
msgstr ""
"スライダウィジェットは， :func:`pyvista.Plotter.add_slider_widget` メソッドおよび "
":func:`pyvista.Plotter.clear_slider_widgets` "
"メソッドによって，それぞれ有効および無効にすることができます．これは，ほぼすべてのものに使用できる値を制御できるため，最も用途の広いウィジェットの1つです．"

#: ../../pyvista/doc/source/examples/03-widgets/slider-bar-widget.rst:46
msgid ""
"One helper method we've added is the "
":func:`pyvista.Plotter.add_mesh_threshold` method which leverages the slider"
" widget to control a thresholding value."
msgstr ""
"追加したヘルパーメソッドの1つに :func:`pyvista.Plotter.add_mesh_threshold` "
"メソッドがあります．これは，スライダウィジェットを利用して閾値を制御します．"

#: ../../pyvista/doc/source/examples/03-widgets/slider-bar-widget.rst:78
msgid "After interacting with the scene, the threshold mesh is available as:"
msgstr "シーンを操作すると，しきい値メッシュは次のように使用できます．"

#: ../../pyvista/doc/source/examples/03-widgets/slider-bar-widget.rst:117
msgid "Custom Callback"
msgstr "カスタムコールバック"

#: ../../pyvista/doc/source/examples/03-widgets/slider-bar-widget.rst:119
msgid ""
"Or you could leverage a custom callback function that takes a single value "
"from the slider as its argument to do something like control the resolution "
"of a mesh. Again note the use of the ``name`` argument in ``add_mesh``:"
msgstr ""
"あるいは，スライダから1つの値を引数として取るカスタムコールバック関数を利用して，メッシュの解像度を制御するなどのことができます．ここでも "
"``add_mesh`` における ``name`` 引数の使用に注意してください．"

#: ../../pyvista/doc/source/examples/03-widgets/slider-bar-widget.rst:162
msgid "**Total running time of the script:** ( 0 minutes  3.400 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  3.400 seconds)"

#: ../../pyvista/doc/source/examples/03-widgets/slider-bar-widget.rst:177
msgid ""
":download:`Download Python source code: slider-bar-widget.py <slider-bar-"
"widget.py>`"
msgstr ""
":download:`Download Python source code: slider-bar-widget.py <slider-bar-"
"widget.py>`"

#: ../../pyvista/doc/source/examples/03-widgets/slider-bar-widget.rst:183
msgid ""
":download:`Download Jupyter notebook: slider-bar-widget.ipynb <slider-bar-"
"widget.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: slider-bar-widget.ipynb <slider-bar-"
"widget.ipynb>`"

#: ../../pyvista/doc/source/examples/03-widgets/sphere-widget.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_03-widgets_sphere-"
"widget.py>` to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_03-widgets_sphere-"
"widget.py>` をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/03-widgets/sphere-widget.rst:22
msgid "Sphere Widget"
msgstr "球体ウィジェット"

#: ../../pyvista/doc/source/examples/03-widgets/sphere-widget.rst:24
msgid ""
"The sphere widget can be enabled and disabled by the "
":func:`pyvista.Plotter.add_sphere_widget` and "
":func:`pyvista.Plotter.clear_sphere_widgets` methods respectively. This is a"
" very versatile widget as it can control vertex location that can be used to"
" control or update the location of just about anything."
msgstr ""
"球ウィジェットは， :func:`pyvista.Plotter.add_sphere_widget` メソッドおよび "
":func:`pyvista.Plotter.clear_sphere_widgets` "
"メソッドによって，それぞれ有効および無効にすることができます．このウィジェットは，頂点の位置を制御できるため，非常に用途が広く，ほとんどすべてのオブジェクトの位置を制御または更新できます．"

#: ../../pyvista/doc/source/examples/03-widgets/sphere-widget.rst:30
msgid ""
"We don't have any convenient helper methods that utilize this widget out of "
"the box, but we have added a lot of ways to use this widget so that you can "
"easily add several widgets to a scene."
msgstr ""
"このウィジェットをそのまま使用する便利なヘルパーメソッドはありませんが，このウィジェットを使用する方法が多数追加されているため，シーンに複数のウィジェットを簡単に追加できます．"

#: ../../pyvista/doc/source/examples/03-widgets/sphere-widget.rst:34
msgid "Let's look at a few use cases that all update a surface mesh."
msgstr "サーフェスメッシュをすべて更新するいくつかの使用例を見てみましょう．"

#: ../../pyvista/doc/source/examples/03-widgets/sphere-widget.rst:51
msgid "Example A"
msgstr "例A"

#: ../../pyvista/doc/source/examples/03-widgets/sphere-widget.rst:53
msgid "Use a single sphere widget"
msgstr "単一の球ウィジェットを使用します"

#: ../../pyvista/doc/source/examples/03-widgets/sphere-widget.rst:109
msgid "Example B"
msgstr "例B"

#: ../../pyvista/doc/source/examples/03-widgets/sphere-widget.rst:111
msgid "Use several sphere widgets at once"
msgstr "一度に複数の球体ウィジェットを使用します"

#: ../../pyvista/doc/source/examples/03-widgets/sphere-widget.rst:168
msgid "Example C"
msgstr "例C"

#: ../../pyvista/doc/source/examples/03-widgets/sphere-widget.rst:170
msgid ""
"This one is the coolest - use four sphere widgets to update perturbations on"
" a surface and interpolate between them with some boundary conditions"
msgstr "これは，4つの球体ウィジェットを使用してサーフェス上の摂動を更新し，いくつかの境界条件でそれらの間を補間する最もクールな方法です．"

#: ../../pyvista/doc/source/examples/03-widgets/sphere-widget.rst:272
msgid "**Total running time of the script:** ( 0 minutes  1.039 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.039 seconds)"

#: ../../pyvista/doc/source/examples/03-widgets/sphere-widget.rst:286
msgid ""
":download:`Download Python source code: sphere-widget.py <sphere-widget.py>`"
msgstr ""
":download:`Download Python source code: sphere-widget.py <sphere-widget.py>`"

#: ../../pyvista/doc/source/examples/03-widgets/sphere-widget.rst:290
msgid ""
":download:`Download Jupyter notebook: sphere-widget.ipynb <sphere-"
"widget.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: sphere-widget.ipynb <sphere-"
"widget.ipynb>`"

#: ../../pyvista/doc/source/examples/03-widgets/spline-widget.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_03-widgets_spline-widget.py>` "
"to download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_03-widgets_spline-widget.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/03-widgets/spline-widget.rst:22
msgid "Spline Widget"
msgstr "スプラインウィジェット"

#: ../../pyvista/doc/source/examples/03-widgets/spline-widget.rst:25
msgid ""
"A spline widget can be enabled and disabled by the "
":func:`pyvista.Plotter.add_spline_widget` and "
":func:`pyvista.Plotter.clear_spline_widgets` methods respectively. This "
"widget allows users to interactively create a poly line (spline) through a "
"scene and use that spline."
msgstr ""
"スプラインウィジェットは， :func:`pyvista.Plotter.add_spline_widget` メソッドと "
":func:`pyvista.Plotter.clear_spline_widgets` "
"メソッドでそれぞれ有効または無効にできます．このウィジェットを使用すると，ユーザはシーンを通してポリゴンライン (スプライン) "
"をインタラクティブに作成し，そのスプラインを使用できます．"

#: ../../pyvista/doc/source/examples/03-widgets/spline-widget.rst:31
msgid ""
"A common task with splines is to slice a volumetric dataset using an "
"irregular path. To do this, we have added a convenient helper method which "
"leverages the :func:`pyvista.DataSetFilters.slice_along_line` filter named "
":func:`pyvista.Plotter.add_mesh_slice_spline`."
msgstr ""
"スプラインを使用する一般的なタスクは，不規則なパスを使用してボリュームデータセットをスライスすることです．これを行うために，我々は "
":func:`pyvista.WidgetHelper.add_mesh_slice_spline` という名前の "
":func:`pyvista.Plotter.slice_along_line` フィルタを活用する便利なヘルパーメソッドを追加しました．"

#: ../../pyvista/doc/source/examples/03-widgets/spline-widget.rst:89
msgid "**Total running time of the script:** ( 0 minutes  0.476 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  0.476 seconds)"

#: ../../pyvista/doc/source/examples/03-widgets/spline-widget.rst:104
msgid ""
":download:`Download Python source code: spline-widget.py <spline-widget.py>`"
msgstr ""
":download:`Download Python source code: spline-widget.py <spline-widget.py>`"

#: ../../pyvista/doc/source/examples/03-widgets/spline-widget.rst:110
msgid ""
":download:`Download Jupyter notebook: spline-widget.ipynb <spline-"
"widget.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: spline-widget.ipynb <spline-"
"widget.ipynb>`"

#: ../../pyvista/doc/source/examples/04-lights/actors.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_04-lights_actors.py>` to "
"download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_04-lights_actors.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/04-lights/actors.rst:24
msgid "Light Actors"
msgstr "Lightアクター"

#: ../../pyvista/doc/source/examples/04-lights/actors.rst:26
msgid ""
"Positional lights in PyVista have customizable beam shapes, see the "
":ref:`light_beam_shape_example` example. Spotlights are special in the sense"
" that they are unidirectional lights with a finite position, so they can be "
"visualized using a cone."
msgstr ""
"PyVistaのポジションライトにはカスタマイズ可能なビームシェイプがあります． :ref:`light_beam_shape_example` "
"の例を参照してください．スポットライトは，限の位置を持つ単一指向性ライトであるという点で特殊であり，円錐を使用して可視化できます．"

#: ../../pyvista/doc/source/examples/04-lights/actors.rst:31
msgid ""
"This is exactly the purpose of a ``vtk.vtkLightActor``, the functionality of"
" which can be enabled for spotlights:"
msgstr "これはまさに ``vtk.vtkLightActor`` の目的であり，スポットライトに対してその機能を有効にすることができます:"

#: ../../pyvista/doc/source/examples/04-lights/actors.rst:79
msgid ""
"Light actors can be very useful when designing complex scenes where "
"spotlights are involved in lighting."
msgstr "ライトアクターは，ポットライトが照明に関係する複雑なシーンを設計する場合に非常に便利です．"

#: ../../pyvista/doc/source/examples/04-lights/actors.rst:122
msgid ""
"One thing to watch out for is that the light actors are represented such "
"that their cone has a fixed height. This implies that for very large cone "
"angles we typically end up with enormous light actors, in which case setting"
" a manual camera position before rendering is usually a good idea. "
"Increasing the first example's cone angle and omitting the manual camera "
"positioning exemplifies the problem:"
msgstr ""
"1つ注意すべき点は，ライトアクターは円錐の高さが固定されるように表現されることです．これは，円錐角度が非常に大きい場合，通常は膨大なライトアクターになることを意味します．この場合，レンダリング前に手動でカメラ位置を設定することをお勧めします．最初の例の円錐角度を大きくし，手動でのカメラの配置を省略すると，問題が発生します．"

#: ../../pyvista/doc/source/examples/04-lights/actors.rst:163
msgid "**Total running time of the script:** (0 minutes 1.801 seconds)"
msgstr "**Total running time of the script:** (0 minutes 1.801 seconds)"

#: ../../pyvista/doc/source/examples/04-lights/actors.rst:177
msgid ":download:`Download Python source code: actors.py <actors.py>`"
msgstr ":download:`Download Python source code: actors.py <actors.py>`"

#: ../../pyvista/doc/source/examples/04-lights/actors.rst:181
msgid ":download:`Download Jupyter notebook: actors.ipynb <actors.ipynb>`"
msgstr ":download:`Download Jupyter notebook: actors.ipynb <actors.ipynb>`"

#: ../../pyvista/doc/source/examples/04-lights/attenuation.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_04-lights_attenuation.py>` "
"to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_04-lights_attenuation.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/04-lights/attenuation.rst:24
msgid "Attenuation"
msgstr "減衰"

#: ../../pyvista/doc/source/examples/04-lights/attenuation.rst:26
msgid ""
"Attenuation is the phenomenon of light's intensity being gradually dampened "
"as it propagates through a medium. In PyVista positional lights can show "
"attenuation. The quadratic attenuation model uses three parameters to "
"describe attenuation: a constant, a linear and a quadratic parameter. These "
"parameters describe the decrease of the beam intensity as a function of the "
"distance, `I(r)`. In a broad sense the constant, linear and quadratic "
"components correspond to `I(r) = 1`, `I(r) = 1/r` and `I(r) = 1/r^2` decay "
"of the intensity with distance from the point source. In all cases a larger "
"attenuation value (of a given kind) means stronger dampening (weaker light "
"at a given distance)."
msgstr ""
"減衰とは，光が媒質を通過するときに，光の強度が徐々に減衰する現象です．PyVistaでは，ポジションライトは減衰を示します．2次減衰モデルでは，減衰を記述するために，定数，線形，2次の3つのパラメータを使用します．これらのパラメータは，距離"
" `I(r)` の関数としてビーム強度の減少を記述し，広い意味で，1次，2次成分は点源からの距離による強度の `I(r) = 1` ， `I(r) = "
"1/r` ，  `I(r) = 1/r^2` "
"減衰に対応します．いずれの場合も，(ある種の)減衰値が大きいほど，(一定の距離の弱い光の)減衰が強くなります．"

#: ../../pyvista/doc/source/examples/04-lights/attenuation.rst:36
msgid ""
"So the constant attenuation parameter corresponds roughly to a constant "
"intensity component. The linear and the quadratic attenuation parameters "
"correspond to intensity components that decay with distance from the source."
" For the same parameter value the quadratic attenuation produces a beam that"
" is shorter in range than that produced by linear attenuation."
msgstr ""
"したがって，一定減衰パラメータは，ほぼ一定強度成分に対応します．線形及び2次減衰パラメータは，光源からの距離と共に減衰する強度成分に対応します．同じパラメータ値に対して，2次減衰は，線形減衰によって生成されるものよりも短い範囲のビームを生成します．"

#: ../../pyvista/doc/source/examples/04-lights/attenuation.rst:42
msgid "Three spotlights with three different attenuation profiles each:"
msgstr "3つの異なる減衰プロファイルを持つ3つのスポットライト:"

#: ../../pyvista/doc/source/examples/04-lights/attenuation.rst:82
msgid ""
"It's not too obvious but it's visible that the rightmost light with "
"quadratic attenuation has a shorter range than the middle one with linear "
"attenuation. Although it seems that even the leftmost light with constant "
"attenuation loses its brightness gradually, this partly has to do with the "
"fact that we sliced the light beams very close to their respective axes, "
"meaning that light hits the surface in a very small angle. Altering the "
"scene such that the lights are further away from the plane changes this:"
msgstr ""
"一目瞭然ではありませんが，2次減衰された右端のライトの範囲は，線形減衰された中央のライトの範囲よりも短いことがわかります．減衰が一定の一番左のライトでも徐々に輝度が失われているように見えますが，これはライトビームをそれぞれの軸に非常に近いところでスライスしたこと，つまりライトが非常に小さい角度でサーフェスに当たったことに関係しています．ライトが平面から離れるようにシーンを変更すると，次のように変更されます．"

#: ../../pyvista/doc/source/examples/04-lights/attenuation.rst:126
msgid "Now the relationship of the three kinds of attenuation seems clearer."
msgstr "3種類の減衰の関係がより明確になりました．"

#: ../../pyvista/doc/source/examples/04-lights/attenuation.rst:128
msgid ""
"For a more practical comparison, let's look at planes that are perpendicular"
" to the axis of each light (making use of the fact that shadowing between "
"objects is not handled by default):"
msgstr ""
"より実用的な比較のために，各ライトの軸に垂直な平面を見てみましょう(オブジェクト間のシャドウがデフォルトでは処理されないという事実を利用する):"

#: ../../pyvista/doc/source/examples/04-lights/attenuation.rst:173
msgid "**Total running time of the script:** (0 minutes 0.939 seconds)"
msgstr "**Total running time of the script:** (0 minutes 0.939 seconds)"

#: ../../pyvista/doc/source/examples/04-lights/attenuation.rst:187
msgid ""
":download:`Download Python source code: attenuation.py <attenuation.py>`"
msgstr ""
":download:`Download Python source code: attenuation.py <attenuation.py>`"

#: ../../pyvista/doc/source/examples/04-lights/attenuation.rst:191
msgid ""
":download:`Download Jupyter notebook: attenuation.ipynb <attenuation.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: attenuation.ipynb <attenuation.ipynb>`"

#: ../../pyvista/doc/source/examples/04-lights/beam_shape.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_04-lights_beam_shape.py>` to"
" download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_04-lights_beam_shape.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/04-lights/beam_shape.rst:24
msgid "Beam Shape"
msgstr "ビーム形状"

#: ../../pyvista/doc/source/examples/04-lights/beam_shape.rst:26
msgid ""
"The default directional lights are infinitely distant point sources, for "
"which the only geometric customization option is the choice of beam "
"direction defined by the light's position and focal point. Positional "
"lights, however, have more options for beam customization."
msgstr ""
"既定のディレクショナルライトは非常に離れたポイントソースで，ジオメトリのカスタマイズオプションはライトの位置と焦点によって定義されるビーム方向の選択だけです．ただし，ポジションライトには，より多くのビームカスタマイズオプションがあります．"

#: ../../pyvista/doc/source/examples/04-lights/beam_shape.rst:31
msgid "Consider two hemispheres:"
msgstr "2つの半球を考えてみましょう:"

#: ../../pyvista/doc/source/examples/04-lights/beam_shape.rst:65
msgid ""
"We can see that the default lighting does a very good job of articulating "
"the shape of the hemispheres."
msgstr "デフォルトのライティングでは，半球の形をはっきりと表現できます．"

#: ../../pyvista/doc/source/examples/04-lights/beam_shape.rst:68
msgid ""
"Let's shine a directional light on them, positioned between the hemispheres "
"and oriented along their centers:"
msgstr "半球の間に配置され，半球の中心に沿って方向付けられたディレクショナルライトを照らします．"

#: ../../pyvista/doc/source/examples/04-lights/beam_shape.rst:105
msgid ""
"Both hemispheres have their surface lit on the side that faces the light. "
"This is consistent with the point source positioned at infinity, directed "
"from the light's nominal position toward the focal point."
msgstr "両半球のサーフェスは，ライトに面した側で照らされます．これは，光の公称位置から焦点に向かう無限遠に位置する点光源と一致します．"

#: ../../pyvista/doc/source/examples/04-lights/beam_shape.rst:109
msgid ""
"Now let's change the light to a positional light (but not a spotlight):"
msgstr "ここで，ライトをポジショナルライトに変更します(スポットライトではありません):"

#: ../../pyvista/doc/source/examples/04-lights/beam_shape.rst:147
msgid ""
"Now the inner surface of both hemispheres is lit. A positional light with a "
"cone angle of 90 degrees (or more) acts as a point source located at the "
"light's nominal position. It could still display attenuation, see the "
":ref:`attenuation_example` example."
msgstr ""
"これで両半球の内側のサーフェスが照らされました．コーンアングルが90度(以上)の位置ライトは，ライトの公称位置にあるポイントソースとして機能します．減衰も表示できます．"
" :ref:`attenuation_example` の例を参照してください．"

#: ../../pyvista/doc/source/examples/04-lights/beam_shape.rst:152
msgid ""
"Switching to a spotlight (i.e. a positional light with a cone angle less "
"than 90 degrees) will enable beam shaping using the "
":py:attr:`pyvista.Light.exponent` property. Let's put our hemispheres side "
"by side for this, and put a light in the center of each: one spotlight, one "
"merely positional."
msgstr ""
"スポットライト(コーンアングルが90度未満のポジショナルライト)に切り替えると， :py:attr:`pyvista.Light.exponent` "
"プロパティを使用したビーム成形が有効になります．このために半球を並べて，それぞれの中心にライトを配置しましょう．1つのスポットライトで，1つは単に位置を示すライトです．"

#: ../../pyvista/doc/source/examples/04-lights/beam_shape.rst:204
msgid ""
"Even though the two lights only differ by a fraction of a degree in cone "
"angle, the beam shaping effect enabled for spotlights causes a marked "
"difference in the result."
msgstr ""
"2つのライトのコーンアングルの違いはほんのわずかですが，スポットライトで有効にしたビーム成形エフェクトによって，結果に著しい違いが生じます．"

#: ../../pyvista/doc/source/examples/04-lights/beam_shape.rst:208
msgid ""
"Once we have a spotlight we can change its :py:attr:`pyvista.Light.exponent`"
" to make the beam shape sharper or broader. Three spotlights with varying "
"sharpness:"
msgstr ""
"スポットライトができたら，その :py:attr:`pyvista.Light.exponent` "
"を変更して，ビームシェイプをよりシャープにしたり，より広くしたりすることができます．シャープさが異なる3つのスポットライト:"

#: ../../pyvista/doc/source/examples/04-lights/beam_shape.rst:255
msgid ""
"The spotlight with exponent 0.3 is practically uniform, and the one with "
"exponent 5 is visibly focused along the axis of the light."
msgstr "指数0.3のスポットライトは実質的に均一で，指数5のスポットライトはライトの軸に沿って目に見えるようにフォーカスされています．"

#: ../../pyvista/doc/source/examples/04-lights/beam_shape.rst:261
msgid "**Total running time of the script:** (0 minutes 1.768 seconds)"
msgstr "**Total running time of the script:** (0 minutes 1.768 seconds)"

#: ../../pyvista/doc/source/examples/04-lights/beam_shape.rst:275
msgid ":download:`Download Python source code: beam_shape.py <beam_shape.py>`"
msgstr ""
":download:`Download Python source code: beam_shape.py <beam_shape.py>`"

#: ../../pyvista/doc/source/examples/04-lights/beam_shape.rst:279
msgid ""
":download:`Download Jupyter notebook: beam_shape.ipynb <beam_shape.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: beam_shape.ipynb <beam_shape.ipynb>`"

#: ../../pyvista/doc/source/examples/04-lights/index.rst:8
#: ../../pyvista/doc/source/examples/index.rst:2444
msgid "Lighting"
msgstr "照明"

#: ../../pyvista/doc/source/examples/04-lights/index.rst:10
#: ../../pyvista/doc/source/examples/index.rst:2446
msgid ""
"These examples demonstrate how to take fine-tuned control over lighting "
"conditions in a scene. Explore them to learn how to go beyond the default "
"lighting setup to truly bring out the best of your visualization:"
msgstr ""
"これらの例は，シーン内の照明条件を微調整してコントロールする方法を示しています．既定の照明設定を超えて視覚効果を最大限に引き出す方法を学習するには，次のようにします:"

#: ../../pyvista/doc/source/examples/04-lights/index.rst:14
#: ../../pyvista/doc/source/examples/index.rst:2450
msgid "Choose between preset lighting systems for plotters"
msgstr "プロッタのプリセット照明システムを選択"

#: ../../pyvista/doc/source/examples/04-lights/index.rst:15
#: ../../pyvista/doc/source/examples/index.rst:2451
msgid "Disable lighting on the mesh level"
msgstr "メッシュレベルでライティングを無効にする"

#: ../../pyvista/doc/source/examples/04-lights/index.rst:16
#: ../../pyvista/doc/source/examples/index.rst:2452
msgid "Learn about the different light types"
msgstr "さまざまなライトタイプについて学習する"

#: ../../pyvista/doc/source/examples/04-lights/index.rst:17
#: ../../pyvista/doc/source/examples/index.rst:2453
msgid "Customize the shape of positional lights"
msgstr "ポジションライトの形をカスタマイズする"

#: ../../pyvista/doc/source/examples/04-lights/index.rst:18
#: ../../pyvista/doc/source/examples/index.rst:2454
msgid "Use actors to visualize the beams of spotlights"
msgstr "アクターを使用してスポットライトのビームを可視化する"

#: ../../pyvista/doc/source/examples/04-lights/index.rst:27
#: ../../pyvista/doc/source/examples/index.rst:2463
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Positional lights in "
"PyVista have customizable beam shapes, see the light_beam_shape_example "
"ex...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Positional lights in "
"PyVista have customizable beam shapes, see the light_beam_shape_example "
"ex...\">"

#: ../../pyvista/doc/source/examples/04-lights/index.rst:36
#: ../../pyvista/doc/source/examples/index.rst:2472
msgid ":ref:`sphx_glr_examples_04-lights_actors.py`"
msgstr ":ref:`sphx_glr_examples_04-lights_actors.py`"

#: ../../pyvista/doc/source/examples/04-lights/index.rst:38
#: ../../pyvista/doc/source/examples/index.rst:2474
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Light Actors</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Light Actors</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/04-lights/index.rst:44
#: ../../pyvista/doc/source/examples/index.rst:2480
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Attenuation is the "
"phenomenon of light&#x27;s intensity being gradually dampened as it "
"propagates th...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Attenuation is the "
"phenomenon of light&#x27;s intensity being gradually dampened as it "
"propagates th...\">"

#: ../../pyvista/doc/source/examples/04-lights/index.rst:53
#: ../../pyvista/doc/source/examples/index.rst:2489
msgid ":ref:`sphx_glr_examples_04-lights_attenuation.py`"
msgstr ":ref:`sphx_glr_examples_04-lights_attenuation.py`"

#: ../../pyvista/doc/source/examples/04-lights/index.rst:55
#: ../../pyvista/doc/source/examples/index.rst:2491
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Attenuation</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Attenuation</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/04-lights/index.rst:61
#: ../../pyvista/doc/source/examples/index.rst:2497
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The default directional "
"lights are infinitely distant point sources, for which the only "
"geometr...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The default directional "
"lights are infinitely distant point sources, for which the only "
"geometr...\">"

#: ../../pyvista/doc/source/examples/04-lights/index.rst:70
#: ../../pyvista/doc/source/examples/index.rst:2506
msgid ":ref:`sphx_glr_examples_04-lights_beam_shape.py`"
msgstr ":ref:`sphx_glr_examples_04-lights_beam_shape.py`"

#: ../../pyvista/doc/source/examples/04-lights/index.rst:72
#: ../../pyvista/doc/source/examples/index.rst:2508
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Beam Shape</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Beam Shape</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/04-lights/index.rst:78
#: ../../pyvista/doc/source/examples/index.rst:2514
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Lights come in three "
"types:\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Lights come in three "
"types:\">"

#: ../../pyvista/doc/source/examples/04-lights/index.rst:87
#: ../../pyvista/doc/source/examples/index.rst:2523
msgid ":ref:`sphx_glr_examples_04-lights_light_types.py`"
msgstr ":ref:`sphx_glr_examples_04-lights_light_types.py`"

#: ../../pyvista/doc/source/examples/04-lights/index.rst:89
#: ../../pyvista/doc/source/examples/index.rst:2525
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Light Types</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Light Types</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/04-lights/index.rst:95
#: ../../pyvista/doc/source/examples/index.rst:2531
msgid "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Disable mesh lighting.\">"
msgstr "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Disable mesh lighting.\">"

#: ../../pyvista/doc/source/examples/04-lights/index.rst:104
#: ../../pyvista/doc/source/examples/index.rst:2540
msgid ":ref:`sphx_glr_examples_04-lights_mesh_lighting.py`"
msgstr ":ref:`sphx_glr_examples_04-lights_mesh_lighting.py`"

#: ../../pyvista/doc/source/examples/04-lights/index.rst:106
#: ../../pyvista/doc/source/examples/index.rst:2542
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Disabling Mesh Lighting</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Disabling Mesh Lighting</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/04-lights/index.rst:112
#: ../../pyvista/doc/source/examples/index.rst:2548
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The pyvista.Plotter class "
"comes with three options for the default lighting system:\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The pyvista.Plotter class "
"comes with three options for the default lighting system:\">"

#: ../../pyvista/doc/source/examples/04-lights/index.rst:121
#: ../../pyvista/doc/source/examples/index.rst:2557
msgid ":ref:`sphx_glr_examples_04-lights_plotter_builtins.py`"
msgstr ":ref:`sphx_glr_examples_04-lights_plotter_builtins.py`"

#: ../../pyvista/doc/source/examples/04-lights/index.rst:123
#: ../../pyvista/doc/source/examples/index.rst:2559
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Plotter Lighting Systems</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Plotter Lighting Systems</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/04-lights/index.rst:129
#: ../../pyvista/doc/source/examples/index.rst:2565
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Demonstrate the usage of "
"lights and shadows in PyVista.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Demonstrate the usage of "
"lights and shadows in PyVista.\">"

#: ../../pyvista/doc/source/examples/04-lights/index.rst:138
#: ../../pyvista/doc/source/examples/index.rst:2574
msgid ":ref:`sphx_glr_examples_04-lights_shadows.py`"
msgstr ":ref:`sphx_glr_examples_04-lights_shadows.py`"

#: ../../pyvista/doc/source/examples/04-lights/index.rst:140
#: ../../pyvista/doc/source/examples/index.rst:2576
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Shadows</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Shadows</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/04-lights/light_types.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_04-lights_light_types.py>` "
"to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_04-lights_light_types.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/04-lights/light_types.rst:24
msgid "Light Types"
msgstr "光源タイプ"

#: ../../pyvista/doc/source/examples/04-lights/light_types.rst:26
msgid "Lights come in three types:"
msgstr "ライトには次の3つのタイプがあります:"

#: ../../pyvista/doc/source/examples/04-lights/light_types.rst:28
msgid ""
"headlights, the axis of which always coincides with the view of the camera,"
msgstr "その軸が常にカメラのビューと一致するヘッドライト，"

#: ../../pyvista/doc/source/examples/04-lights/light_types.rst:29
msgid ""
"camera lights, which move together with the camera, but which can occupy any"
" fixed relative position with respect to the camera,"
msgstr "カメラライトはカメラとともに移動しますが，カメラに対して固定された相対位置を占めることができます．"

#: ../../pyvista/doc/source/examples/04-lights/light_types.rst:31
msgid ""
"scene lights, the position of which is fixed to the scene, and which is thus"
" unaffected by moving the camera. This is the default type."
msgstr "シーンライト．その位置はシーンに固定されているため，カメラを移動しても影響を受けません．これがデフォルトのタイプです．"

#: ../../pyvista/doc/source/examples/04-lights/light_types.rst:35
msgid "Headlight"
msgstr "ヘッドライト"

#: ../../pyvista/doc/source/examples/04-lights/light_types.rst:37
msgid ""
"For headlights the :py:attr:`pyvista.Camera.position` and "
":py:attr:`pyvista.Camera.focal_point` properties are meaningless. No matter "
"where you move the camera, the light always emanates from the view point:"
msgstr ""
"ヘッドライトの場合， :py:attr:`pyvista.Camera.position` および "
":py:attr:`pyvista.Camera.focal_point` "
"プロパティは意味がありません．カメラをどこに移動しても，ライトは常に視点から放射されます．"

#: ../../pyvista/doc/source/examples/04-lights/light_types.rst:77
msgid "Camera light"
msgstr "カメラライト"

#: ../../pyvista/doc/source/examples/04-lights/light_types.rst:79
msgid ""
"Camera lights define their :py:attr:`pyvista.Camera.position` and "
":py:attr:`pyvista.Camera.focal_point` properties in a coordinate system that"
" is local to the camera. The coordinates in the scene's coordinate system "
"can be accessed through the :py:attr:`pyvista.Light.world_position` and "
":py:attr:`pyvista.Light.world_focal_point` read-only properties, "
"respectively. For specifics of the local coordinate system used for the "
"coordinates please see the documentation of "
":func:`pyvista.Light.set_camera_light`."
msgstr ""
"カメラライトは，カメラに対してローカルな座標系で :py:attr:`pyvista.Camera.position` と "
":py:attr:`pyvista.Camera.focal_point` "
"プロパティを定義します．シーンの座標系の座標には，それぞれ読み込み専用プロパティ:py:attr:`pyvista.Light.world_position`"
" および :py:attr:`pyvista.Light.world_focal_point` "
"を使用してアクセスできます．座標に使用されるローカル座標系の詳細については， "
":func:`pyvista.Light.set_camera_light` のドキュメントを参照してください．"

#: ../../pyvista/doc/source/examples/04-lights/light_types.rst:116
msgid "Scene light"
msgstr "シーンライト"

#: ../../pyvista/doc/source/examples/04-lights/light_types.rst:118
msgid ""
"Scene lights are attached to the scene, their position and focal point are "
"interpreted as global coordinates:"
msgstr "シーンライトはシーンにアタッチされ，その位置と焦点はグローバル座標として解釈されます．"

#: ../../pyvista/doc/source/examples/04-lights/light_types.rst:147
msgid "**Total running time of the script:** ( 0 minutes  1.156 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  1.156 seconds)"

#: ../../pyvista/doc/source/examples/04-lights/light_types.rst:161
msgid ""
":download:`Download Python source code: light_types.py <light_types.py>`"
msgstr ""
":download:`Download Python source code: light_types.py <light_types.py>`"

#: ../../pyvista/doc/source/examples/04-lights/light_types.rst:165
msgid ""
":download:`Download Jupyter notebook: light_types.ipynb <light_types.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: light_types.ipynb <light_types.ipynb>`"

#: ../../pyvista/doc/source/examples/04-lights/mesh_lighting.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_04-lights_mesh_lighting.py>`"
" to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_04-lights_mesh_lighting.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/04-lights/mesh_lighting.rst:24
msgid "Disabling Mesh Lighting"
msgstr "メッシュライティングの無効化"

#: ../../pyvista/doc/source/examples/04-lights/mesh_lighting.rst:26
msgid "Disable mesh lighting."
msgstr "メッシュ照明を無効にします．"

#: ../../pyvista/doc/source/examples/04-lights/mesh_lighting.rst:28
msgid ""
"While plotters have a default set of lights and there are many options for "
"customizing lighting conditions in general, meshes have the option to opt "
"out of lighting altogether. Pass ``lighting=False`` to "
":func:`pyvista.Plotter.add_mesh` to disable lighting for the given mesh:"
msgstr ""
"プロッタには既定の照明セットがあり，一般的に照明条件をカスタマイズするためのオプションが多数ありますが，メッシュには照明を完全にオフにするオプションがあります．"
" ``lighting=False`` を :func:`pyvista.Plotter.add_mesh` "
"に渡すと，指定されたメッシュのライティングが無効になります．"

#: ../../pyvista/doc/source/examples/04-lights/mesh_lighting.rst:66
msgid ""
"Due to the obvious lack of depth detail this mostly makes sense for meshes "
"with non-trivial colors or textures. If it weren't for the edges being "
"drawn, the second mesh would be practically impossible to understand even "
"with the option to interactively explore the surface:"
msgstr ""
"深さの詳細が明らかに不足しているため，通常のカラーやテクスチャを使用するメッシュではほとんど問題ありません．エッジが描画されていない場合，2番目のメッシュは，サーフェスをインタラクティブに調査するオプションを使用しても実際には理解できません．"

#: ../../pyvista/doc/source/examples/04-lights/mesh_lighting.rst:92
msgid ""
"For further examples about fine-tuning mesh properties that affect light "
"rendering, see the :ref:`lighting_properties_example` example."
msgstr ""
"ライトレンダリングに影響するメッシュプロパティの微調整の詳細な例については， :ref:`lighting_properties_example` "
"の例を参照してください．"

#: ../../pyvista/doc/source/examples/04-lights/mesh_lighting.rst:98
msgid "**Total running time of the script:** (0 minutes 1.489 seconds)"
msgstr "**Total running time of the script:** (0 minutes 1.489 seconds)"

#: ../../pyvista/doc/source/examples/04-lights/mesh_lighting.rst:112
msgid ""
":download:`Download Python source code: mesh_lighting.py <mesh_lighting.py>`"
msgstr ""
":download:`Download Python source code: mesh_lighting.py <mesh_lighting.py>`"

#: ../../pyvista/doc/source/examples/04-lights/mesh_lighting.rst:116
msgid ""
":download:`Download Jupyter notebook: mesh_lighting.ipynb "
"<mesh_lighting.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: mesh_lighting.ipynb "
"<mesh_lighting.ipynb>`"

#: ../../pyvista/doc/source/examples/04-lights/plotter_builtins.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_examples_04-lights_plotter_builtins.py>` to download the "
"full example code"
msgstr ""
":ref:`Go to the end "
"<sphx_glr_download_examples_04-lights_plotter_builtins.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/04-lights/plotter_builtins.rst:24
msgid "Plotter Lighting Systems"
msgstr "プロッタ照明システム"

#: ../../pyvista/doc/source/examples/04-lights/plotter_builtins.rst:26
msgid ""
"The :class:`pyvista.Plotter` class comes with three options for the default "
"lighting system:"
msgstr ":class:`pyvista.Plotter` クラスには，既定の照明システム用に次の3つのオプションがあります．"

#: ../../pyvista/doc/source/examples/04-lights/plotter_builtins.rst:29
msgid "a light kit consisting of a headlight and four camera lights,"
msgstr "ヘッドライトと4つのカメラライトで構成されたライトキット"

#: ../../pyvista/doc/source/examples/04-lights/plotter_builtins.rst:30
msgid ""
"an illumination system containing three lights arranged around the camera,"
msgstr "カメラの周囲に配置された3つのライトを含む照明システム，"

#: ../../pyvista/doc/source/examples/04-lights/plotter_builtins.rst:31
msgid "no lighting."
msgstr "照明なし．"

#: ../../pyvista/doc/source/examples/04-lights/plotter_builtins.rst:33
msgid ""
"With meshes that don't have depth information encoded in their color the "
"importance of an appropriate lighting setup becomes paramount for accurate "
"visualization."
msgstr "メッシュのカラーにエンコードされた深度情報がない場合，正確に表示するには適切なライティング設定が最も重要になります．"

#: ../../pyvista/doc/source/examples/04-lights/plotter_builtins.rst:38
msgid "Light kit"
msgstr "ライトキット"

#: ../../pyvista/doc/source/examples/04-lights/plotter_builtins.rst:40
msgid ""
"The default ``lighting='light kit'`` option recreates a lighting setup that "
"corresponds to a ``vtk.vtkLightKit``. We can check what type of lights this "
"lighting comprises:"
msgstr ""
"デフォルトの ``lighting='light kit'`` オプションは， ``vtk.vtkLightKit`` "
"に対応するライティング設定を再作成します．このライティングがどのタイプのライトで構成されているかを確認できます．"

#: ../../pyvista/doc/source/examples/04-lights/plotter_builtins.rst:76
msgid "Add a white terrain to the scene:"
msgstr "シーンに白い地形を追加する:"

#: ../../pyvista/doc/source/examples/04-lights/plotter_builtins.rst:104
msgid "Three-lights illumination"
msgstr "3ライトイルミネーション"

#: ../../pyvista/doc/source/examples/04-lights/plotter_builtins.rst:106
msgid ""
"Switching to three-lights illumination gives a different character to the "
"figure, in this case showing less contrast when viewing the mountain from "
"the top, but having more contrast with views closer to the side. This "
"becomes especially clear when exploring the figures interactively."
msgstr ""
"3つのライトのイルミネーションに切り替えると，フィギュアに異なるキャラクタが追加されます．この場合は，上から山を見たときのコントラストは小さくなりますが，横から見たときのコントラストは大きくなります．これは，図形を対話的に探索する場合に特に明らかになります．"

#: ../../pyvista/doc/source/examples/04-lights/plotter_builtins.rst:134
msgid "Again we can check what kind of lights this setting uses:"
msgstr "ここでも，この設定で使用されるライトの種類を確認できます．"

#: ../../pyvista/doc/source/examples/04-lights/plotter_builtins.rst:166
msgid "Custom lighting"
msgstr "カスタム照明"

#: ../../pyvista/doc/source/examples/04-lights/plotter_builtins.rst:168
msgid ""
"We can introduce our own lighting from scratch by disabling any lighting on "
"plotter initialization. Adding a single scene light to a scene will often "
"result in ominous visuals due to objects having larger regions in shadow."
msgstr ""
"プロッタの初期化時に照明を無効にすることで，独自の照明をゼロから導入できます．単一のシーンライトをシーンに追加すると，オブジェクトのシャドウの領域が大きくなるため，不気味な外観になることがよくあります．"

#: ../../pyvista/doc/source/examples/04-lights/plotter_builtins.rst:201
msgid "Custom lighting with shadows"
msgstr "影付きのカスタムライティング"

#: ../../pyvista/doc/source/examples/04-lights/plotter_builtins.rst:203
msgid ""
"Here, we ``enable_shadows`` to enhance the effect that the lighting angle "
"has.  It has a subtle, but realistic effect.  Notice the sharp shadows due "
"to the mountaintop."
msgstr ""
"ここでは， ``enable_shadows`` "
"を使用して照明角度の効果を強化しています．微妙ですが，リアルな効果が得られます．山頂に起因する鋭い影に注目してください．"

#: ../../pyvista/doc/source/examples/04-lights/plotter_builtins.rst:234
msgid "**Total running time of the script:** ( 0 minutes  2.413 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  2.413 seconds)"

#: ../../pyvista/doc/source/examples/04-lights/plotter_builtins.rst:248
msgid ""
":download:`Download Python source code: plotter_builtins.py "
"<plotter_builtins.py>`"
msgstr ""
":download:`Download Python source code: plotter_builtins.py "
"<plotter_builtins.py>`"

#: ../../pyvista/doc/source/examples/04-lights/plotter_builtins.rst:252
msgid ""
":download:`Download Jupyter notebook: plotter_builtins.ipynb "
"<plotter_builtins.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plotter_builtins.ipynb "
"<plotter_builtins.ipynb>`"

#: ../../pyvista/doc/source/examples/04-lights/sg_execution_times.rst:9
msgid "**00:05.998** total execution time for **examples_04-lights** files:"
msgstr "**00:05.998** total execution time for **examples_04-lights** files:"

#: ../../pyvista/doc/source/examples/04-lights/sg_execution_times.rst:12
msgid ":ref:`sphx_glr_examples_04-lights_actors.py` (``actors.py``)"
msgstr ":ref:`sphx_glr_examples_04-lights_actors.py` (``actors.py``)"

#: ../../pyvista/doc/source/examples/04-lights/sg_execution_times.rst:12
msgid "00:01.801"
msgstr "00:01.801"

#: ../../pyvista/doc/source/examples/04-lights/sg_execution_times.rst:14
msgid ":ref:`sphx_glr_examples_04-lights_beam_shape.py` (``beam_shape.py``)"
msgstr ":ref:`sphx_glr_examples_04-lights_beam_shape.py` (``beam_shape.py``)"

#: ../../pyvista/doc/source/examples/04-lights/sg_execution_times.rst:14
msgid "00:01.768"
msgstr "00:01.768"

#: ../../pyvista/doc/source/examples/04-lights/sg_execution_times.rst:16
msgid ""
":ref:`sphx_glr_examples_04-lights_mesh_lighting.py` (``mesh_lighting.py``)"
msgstr ""
":ref:`sphx_glr_examples_04-lights_mesh_lighting.py` (``mesh_lighting.py``)"

#: ../../pyvista/doc/source/examples/04-lights/sg_execution_times.rst:16
msgid "00:01.489"
msgstr "00:01.489"

#: ../../pyvista/doc/source/examples/04-lights/sg_execution_times.rst:18
msgid ":ref:`sphx_glr_examples_04-lights_attenuation.py` (``attenuation.py``)"
msgstr ""
":ref:`sphx_glr_examples_04-lights_attenuation.py` (``attenuation.py``)"

#: ../../pyvista/doc/source/examples/04-lights/sg_execution_times.rst:18
msgid "00:00.939"
msgstr "00:00.939"

#: ../../pyvista/doc/source/examples/04-lights/sg_execution_times.rst:20
msgid ":ref:`sphx_glr_examples_04-lights_light_types.py` (``light_types.py``)"
msgstr ""
":ref:`sphx_glr_examples_04-lights_light_types.py` (``light_types.py``)"

#: ../../pyvista/doc/source/examples/04-lights/sg_execution_times.rst:22
msgid ""
":ref:`sphx_glr_examples_04-lights_plotter_builtins.py` "
"(``plotter_builtins.py``)"
msgstr ""
":ref:`sphx_glr_examples_04-lights_plotter_builtins.py` "
"(``plotter_builtins.py``)"

#: ../../pyvista/doc/source/examples/04-lights/sg_execution_times.rst:24
msgid ":ref:`sphx_glr_examples_04-lights_shadows.py` (``shadows.py``)"
msgstr ":ref:`sphx_glr_examples_04-lights_shadows.py` (``shadows.py``)"

#: ../../pyvista/doc/source/examples/04-lights/shadows.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_04-lights_shadows.py>` to "
"download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_04-lights_shadows.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/04-lights/shadows.rst:24
msgid "Shadows"
msgstr "シャドウ"

#: ../../pyvista/doc/source/examples/04-lights/shadows.rst:26
msgid "Demonstrate the usage of lights and shadows in PyVista."
msgstr "PyVistaでのライトとシャドウの使用方法をデモンストレーションします．"

#: ../../pyvista/doc/source/examples/04-lights/shadows.rst:48
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>871414</td></tr>\n"
"<tr><td>N Points</td><td>437645</td></tr>\n"
"<tr><td>X Bounds</td><td>-6.182e-02, 6.692e-02</td></tr>\n"
"<tr><td>Y Bounds</td><td>-9.431e-02, 7.927e-02</td></tr>\n"
"<tr><td>Z Bounds</td><td>5.273e-02, 1.972e-01</td></tr>\n"
"<tr><td>N Arrays</td><td>0</td></tr>\n"
"</table>\n"
"\n"
"\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>871414</td></tr>\n"
"<tr><td>N Points</td><td>437645</td></tr>\n"
"<tr><td>X Bounds</td><td>-6.182e-02, 6.692e-02</td></tr>\n"
"<tr><td>Y Bounds</td><td>-9.431e-02, 7.927e-02</td></tr>\n"
"<tr><td>Z Bounds</td><td>5.273e-02, 1.972e-01</td></tr>\n"
"<tr><td>N Arrays</td><td>0</td></tr>\n"
"</table>\n"
"\n"
"\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/04-lights/shadows.rst:69
msgid "Using two lights, plot the Stanford Dragon with shadows."
msgstr "2つのライトを使用して，影をつけたStanford Dragonをプロットします．"

#: ../../pyvista/doc/source/examples/04-lights/shadows.rst:146
msgid ""
"Show light penetrating several planes.  Adjust the light intensity and the "
"``shadow_attenuation`` to change how many planes the light can go through."
msgstr ""
"複数の平面を貫通するライトを表示します．ライトの強度と ``shadow_attenuation`` "
"を調整して，ライトが通過できる平面の数を変更します．"

#: ../../pyvista/doc/source/examples/04-lights/shadows.rst:193
msgid ""
"Here, we use a lower shadow_attenuation value to demonstrate how the light "
"can travel through more planes."
msgstr "ここでは，より低い shadow_attenuation 値を使用して，ライトがより多くの面を通過する方法を示します．"

#: ../../pyvista/doc/source/examples/04-lights/shadows.rst:239
msgid "**Total running time of the script:** ( 0 minutes  5.249 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  5.249 seconds)"

#: ../../pyvista/doc/source/examples/04-lights/shadows.rst:254
msgid ":download:`Download Python source code: shadows.py <shadows.py>`"
msgstr ":download:`Download Python source code: shadows.py <shadows.py>`"

#: ../../pyvista/doc/source/examples/04-lights/shadows.rst:260
msgid ":download:`Download Jupyter notebook: shadows.ipynb <shadows.ipynb>`"
msgstr ":download:`Download Jupyter notebook: shadows.ipynb <shadows.ipynb>`"

#: ../../pyvista/doc/source/examples/98-common/index.rst:6
#: ../../pyvista/doc/source/examples/index.rst:2587
msgid "Common"
msgstr "共通"

#: ../../pyvista/doc/source/examples/98-common/index.rst:8
#: ../../pyvista/doc/source/examples/index.rst:2589
msgid ""
"The following are a collection of examples addressing common tasks and "
"frequently asked questions when working with PyVista. These examples, while "
"possibly complex, focus on single-purpose solutions to help users understand"
" specific functionality."
msgstr ""
"以下は，PyVistaを使用する際によくあるタスクやよくある質問に対応した例のコレクションです．これらの例は，複雑な場合もありますが，ユーザーが特定の機能を理解するのに役立つように，単一の目的のソリューションに焦点を当てています．"

#: ../../pyvista/doc/source/examples/98-common/index.rst:13
#: ../../pyvista/doc/source/examples/index.rst:2594
msgid ""
"Feel free to contribute examples or explore the FAQ-like structure, and "
"check out our `GitHub Discussions "
"<https://github.com/pyvista/pyvista/discussions>`_ for more context."
msgstr ""
"また， `GitHub Discussions <https://github.com/pyvista/pyvista/discussions>`_ "
"も参照してください．"

#: ../../pyvista/doc/source/examples/98-common/index.rst:24
#: ../../pyvista/doc/source/examples/index.rst:2605
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Using pyvista and numpy, "
"generate a 3D point cloud, project it to a plane, and tessellate it.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Using pyvista and numpy, "
"generate a 3D point cloud, project it to a plane, and tessellate it.\">"

#: ../../pyvista/doc/source/examples/98-common/index.rst:33
#: ../../pyvista/doc/source/examples/index.rst:2614
msgid ":ref:`sphx_glr_examples_98-common_project-points-tessellate.py`"
msgstr ":ref:`sphx_glr_examples_98-common_project-points-tessellate.py`"

#: ../../pyvista/doc/source/examples/98-common/index.rst:35
#: ../../pyvista/doc/source/examples/index.rst:2616
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Project points to a plane and Tessellate</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Project points to a plane and Tessellate</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/98-common/project-points-tessellate.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_98-common_project-points-"
"tessellate.py>` to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_98-common_project-points-"
"tessellate.py>` をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/98-common/project-points-tessellate.rst:22
msgid "Project points to a plane and Tessellate"
msgstr "ポイントを平面に投影して平面充填します．"

#: ../../pyvista/doc/source/examples/98-common/project-points-tessellate.rst:24
msgid ""
"Using pyvista and numpy, generate a 3D point cloud, project it to a plane, "
"and tessellate it."
msgstr "pyvistaとnumpyを使って，3Dの点群を生成し，それを平面に投影し，平面充填します．"

#: ../../pyvista/doc/source/examples/98-common/project-points-tessellate.rst:27
msgid ""
"This demonstrates how to use "
":class:`pyvista.UnstructuredGridFilters.delaunay_2d` and a simple numpy "
"function that projects points to a plane."
msgstr ""
"これは :class:`pyvista.UnstructuredGridFilters.delaunay_2d` "
"と，点を平面に投影する簡単なnumpy関数の使い方を示しています．"

#: ../../pyvista/doc/source/examples/98-common/project-points-tessellate.rst:49
msgid "Project Points"
msgstr "プロジェクトポイント ．"

#: ../../pyvista/doc/source/examples/98-common/project-points-tessellate.rst:50
msgid "Create a point cloud and project it to a plane."
msgstr "点群を作成し，平面に投影します．"

#: ../../pyvista/doc/source/examples/98-common/project-points-tessellate.rst:92
msgid "Visualize the Result"
msgstr "結果を可視化する"

#: ../../pyvista/doc/source/examples/98-common/project-points-tessellate.rst:132
msgid "**Total running time of the script:** ( 0 minutes  0.855 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  0.855 seconds)"

#: ../../pyvista/doc/source/examples/98-common/project-points-tessellate.rst:146
msgid ""
":download:`Download Python source code: project-points-tessellate.py "
"<project-points-tessellate.py>`"
msgstr ""
":download:`Download Python source code: project-points-tessellate.py "
"<project-points-tessellate.py>`"

#: ../../pyvista/doc/source/examples/98-common/project-points-tessellate.rst:150
msgid ""
":download:`Download Jupyter notebook: project-points-tessellate.ipynb "
"<project-points-tessellate.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: project-points-tessellate.ipynb "
"<project-points-tessellate.ipynb>`"

#: ../../pyvista/doc/source/examples/98-common/sg_execution_times.rst:9
msgid "**00:00.855** total execution time for **examples_98-common** files:"
msgstr "**00:00.855** total execution time for **examples_98-common** files:"

#: ../../pyvista/doc/source/examples/98-common/sg_execution_times.rst:12
msgid ""
":ref:`sphx_glr_examples_98-common_project-points-tessellate.py` (``project-"
"points-tessellate.py``)"
msgstr ""
":ref:`sphx_glr_examples_98-common_project-points-tessellate.py` (``project-"
"points-tessellate.py``)"

#: ../../pyvista/doc/source/examples/98-common/sg_execution_times.rst:12
msgid "00:00.855"
msgstr "00:00.855"

#: ../../pyvista/doc/source/examples/99-advanced/add-example.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_99-advanced_add-example.py>` to"
" download the full example code"
msgstr ""
"Click :ref:`here <sphx_glr_download_examples_99-advanced_add-example.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/99-advanced/add-example.rst:24
msgid "Adding a New Gallery Example"
msgstr "新しいギャラリーを追加する例"

#: ../../pyvista/doc/source/examples/99-advanced/add-example.rst:25
msgid ""
"This example demonstrates how to add a new PyVista `Sphinx Gallery "
"<https://sphinx-gallery.github.io/>`_ example as well as being a template "
"that can be used in their creation."
msgstr ""
"このサンプルは，新しいPyVistaの `Sphinx Gallery <https://sphinx-gallery.github.io/>`_ "
"のサンプルを追加する方法を示していると同時に，それらの作成に使用することができるテンプレートでもあります．"

#: ../../pyvista/doc/source/examples/99-advanced/add-example.rst:29
msgid "Each example should have a reference tag/key in the form:"
msgstr "各例は，フォームに参照タグ/キーを持つ必要があります:"

#: ../../pyvista/doc/source/examples/99-advanced/add-example.rst:31
msgid "``.. _<example-name>_example:``"
msgstr "``.. _<example-name>_example:``"

#: ../../pyvista/doc/source/examples/99-advanced/add-example.rst:33
msgid ""
"The ``.. _`` is necessary. Everything that follows is your reference tag, "
"which can potentially be used within a docstring. As convention, we keep all"
" references all in ``snake_case``."
msgstr ""
"``.. _`` は必要です．この後に続くものはすべて参照タグで，docstringの中で使用できる可能性があります．慣習として，すべての参照タグは "
"``snake_case`` で統一しています．"

#: ../../pyvista/doc/source/examples/99-advanced/add-example.rst:37
msgid ""
"This section should give a brief overview of what the example is about "
"and/or demonstrates.  The title should be changed to reflect the topic your "
"example covers."
msgstr ""
"このセクションでは，その事例が何について，および/または，何を示しているのかについて，簡単な概要を説明します． "
"タイトルは，あなたの例がカバーするトピックを反映するように変更する必要があります．"

#: ../../pyvista/doc/source/examples/99-advanced/add-example.rst:41
msgid "New examples should be added as python scripts to:"
msgstr "新しい例は，pythonスクリプトとして以下に追加する必要があります:"

#: ../../pyvista/doc/source/examples/99-advanced/add-example.rst:43
msgid "``examples/<index>-<directory-name>/<some-example>.py``"
msgstr "``examples/<index>-<directory-name>/<some-example>.py``"

#: ../../pyvista/doc/source/examples/99-advanced/add-example.rst:46
msgid ""
"Avoid creating new directories unless absolutely necessary.If you *must* "
"create a new folder, make sure to add a ``README.txt`` containing a "
"reference, a title and a single sentence description of the folder. "
"Otherwise the new folder will be ignored by Sphinx."
msgstr ""
"絶対に必要でない限り，新しいディレクトリを作らないようにしましょう．もし，新しいフォルダを作らなければならない場合は， ``README.txt`` "
"を必ず追加して，参照先，タイトル，フォルダの説明を一文で記述してください．そうしないと，新しいフォルダはSphinxによって無視されます．"

#: ../../pyvista/doc/source/examples/99-advanced/add-example.rst:51
msgid "Example file names should be hyphen separated snake case:"
msgstr "ファイル名の例では，ハイフンで区切られたスネークケースを使用すること:"

#: ../../pyvista/doc/source/examples/99-advanced/add-example.rst:53
msgid "``some-example.py``"
msgstr "``some-example.py``"

#: ../../pyvista/doc/source/examples/99-advanced/add-example.rst:55
msgid ""
"After this preamble is complete, the first code block begins. This is where "
"you typically set up your imports."
msgstr "このプリアンブルが完了すると，最初のコードブロックが始まります．ここは一般的にインポートを設定する場所です．"

#: ../../pyvista/doc/source/examples/99-advanced/add-example.rst:76
msgid "Section Title"
msgstr "セクションタイトル"

#: ../../pyvista/doc/source/examples/99-advanced/add-example.rst:77
msgid ""
"Code blocks can be broken up with text \"sections\" which are interpreted as"
" restructured text."
msgstr "コードブロックは，テキスト \"sections\" で分割することができ，これは再構築されたテキストとして解釈されます．"

#: ../../pyvista/doc/source/examples/99-advanced/add-example.rst:80
msgid ""
"This will also be translated into a markdown cell in the generated jupyter "
"notebook or the HTML page."
msgstr "これは，生成されたjupyterノートブックやHTMLページでもマークダウンのセルに変換されます．"

#: ../../pyvista/doc/source/examples/99-advanced/add-example.rst:83
msgid ""
"Sections can contain any information you may have regarding the example such"
" as step-by-step comments or notes regarding motivations etc."
msgstr "セクションには，ステップバイステップのコメントやモチベーションに関するメモなど，例題に関するあらゆる情報を含めることができます．"

#: ../../pyvista/doc/source/examples/99-advanced/add-example.rst:86
msgid ""
"As in Jupyter notebooks, if a statement is unassigned at the end of a code "
"block, output will be generated and printed to the screen according to its "
"``__repr__`` method.  Otherwise, you can use ``print()`` to output text."
msgstr ""
"Jupyterノートブックと同様に，コードブロックの最後にステートメントが未アサインである場合，その ``__repr__`` "
"メソッドに従って出力が生成され，画面に表示されます． それ以外の場合は， ``print()`` を使用してテキストを出力することができます．"

#: ../../pyvista/doc/source/examples/99-advanced/add-example.rst:105
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>1680</td></tr>\n"
"<tr><td>N Points</td><td>842</td></tr>\n"
"<tr><td>N Strips</td><td>0</td></tr>\n"
"<tr><td>X Bounds</td><td>-4.993e-01, 4.993e-01</td></tr>\n"
"<tr><td>Y Bounds</td><td>-4.965e-01, 4.965e-01</td></tr>\n"
"<tr><td>Z Bounds</td><td>-5.000e-01, 5.000e-01</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td>Normals</td><td>Points</td><td>float32</td><td>3</td><td>-1.000e+00</td><td>1.000e+00</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>1680</td></tr>\n"
"<tr><td>N Points</td><td>842</td></tr>\n"
"<tr><td>N Strips</td><td>0</td></tr>\n"
"<tr><td>X Bounds</td><td>-4.993e-01, 4.993e-01</td></tr>\n"
"<tr><td>Y Bounds</td><td>-4.965e-01, 4.965e-01</td></tr>\n"
"<tr><td>Z Bounds</td><td>-5.000e-01, 5.000e-01</td></tr>\n"
"<tr><td>N Arrays</td><td>1</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td>Normals</td><td>Points</td><td>float32</td><td>3</td><td>-1.000e+00</td><td>1.000e+00</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/99-advanced/add-example.rst:134
msgid "Plots and images"
msgstr "プロットと画像"

#: ../../pyvista/doc/source/examples/99-advanced/add-example.rst:135
msgid ""
"If you use anything that outputs an image (for example, "
":func:`pyvista.Plotter.show`) the resulting image will be rendered within "
"the output HTML."
msgstr ""
"画像を出力するもの(例えば :func:`pyvista.Plotter.show` ) "
"を使用すると，結果の画像は出力のHTML内にレンダリングされることになります．"

#: ../../pyvista/doc/source/examples/99-advanced/add-example.rst:140
msgid ""
"Unless ``sphinx_gallery_thumbnail_number = <int>`` is included at the top of"
" the example script, first figure (this one) will be used for the gallery "
"thumbnail image."
msgstr ""
"サンプルスクリプトの先頭に ``sphinx_gallery_thumbnail_number = <int>`` "
"が含まれていない限り，ギャラリーのサムネイル画像には最初の図（この図）が使用されます．"

#: ../../pyvista/doc/source/examples/99-advanced/add-example.rst:144
msgid "Also note that this image number uses one based indexing."
msgstr "また，この画像番号は1ベースインデックスを使用していることに注意してください．"

#: ../../pyvista/doc/source/examples/99-advanced/add-example.rst:169
msgid "Caveat - Plotter must be within One Cell"
msgstr "注意事項 - プロッターは1セル内にあること．"

#: ../../pyvista/doc/source/examples/99-advanced/add-example.rst:170
msgid ""
"It's not possible for a single :class:`pyvista.Plotter` object across "
"multiple cells because these are closed out automatically at the end of a "
"cell."
msgstr ""
"複数のセルにまたがる単一の :class:`pyvista.Plotter` "
"オブジェクトを使用することはできません．なぜなら，これらのオブジェクトはセルの終了時に自動的にクローズアウトされるからです．"

#: ../../pyvista/doc/source/examples/99-advanced/add-example.rst:174
msgid ""
"Here we just exercise the :class:`pyvista.Actor` ``repr`` for demonstrating "
"why you might want to instantiate a plotter without showing it in the same "
"cell."
msgstr ""
"ここでは，同じセルにプロッタを表示せずにインスタンス化する理由を示すために， :class:`pyvista.Actor` ``repr`` "
"を演習しています．"

#: ../../pyvista/doc/source/examples/99-advanced/add-example.rst:261
msgid "This Cell Cannot Run the Plotter"
msgstr "このセルではプロッタを動作させることができない"

#: ../../pyvista/doc/source/examples/99-advanced/add-example.rst:262
msgid "The plotter will already be closed by ``sphinx_gallery``."
msgstr "プロッターは ``sphinx_gallery`` によってすでに閉じられています．"

#: ../../pyvista/doc/source/examples/99-advanced/add-example.rst:287
msgid "Animations"
msgstr "アニメーション"

#: ../../pyvista/doc/source/examples/99-advanced/add-example.rst:288
msgid ""
"You can even create animations, and while there is a full example in "
":ref:`movie_example`, this cell explains how you can create an animation "
"within a single cell."
msgstr ""
"アニメーションを作成することもできます．完全な例は :ref:`movie_example` "
"にありますが，このセルは一つのセルの中でアニメーションを作成する方法を説明しています．"

#: ../../pyvista/doc/source/examples/99-advanced/add-example.rst:292
msgid "Here, we explode a simple sphere."
msgstr "ここでは，単純な球体を爆発させます．"

#: ../../pyvista/doc/source/examples/99-advanced/add-example.rst:337
msgid "Adding Example Files"
msgstr "サンプルファイルの追加"

#: ../../pyvista/doc/source/examples/99-advanced/add-example.rst:338
msgid ""
"PyVista has a variety of example files all stored at `pyvista/vtk_data "
"<https://github.com/pyvista/vtk-data>`_, and you can add the file by "
"following the directions there."
msgstr ""
"PyVistaには様々なサンプルファイルがあり，すべて `pyvista/vtk_data "
"<https://github.com/pyvista/vtk-data>`_ "
"に格納されているので，そこの指示に従ってファイルを追加することができます．"

#: ../../pyvista/doc/source/examples/99-advanced/add-example.rst:342
msgid ""
"Under the hood, PyVista uses `pooch <https://github.com/fatiando/pooch>`_, "
"and you can easily access any files added with "
":func:`pyvista.examples.downloads.download_file`."
msgstr ""
"PyVistaの内部では， `pooch <https://github.com/fatiando/pooch>`_ を使用しており， "
":func:`pyvista.examples.downloads.download_file` で追加したファイルに簡単にアクセスすることができます．"

#: ../../pyvista/doc/source/examples/99-advanced/add-example.rst:371
msgid "Adding a Wrapped Example"
msgstr "ラッピング例の追加"

#: ../../pyvista/doc/source/examples/99-advanced/add-example.rst:372
msgid ""
"While it's possible to simply download a file and then read it in, it's "
"better for you to write a wrapped ``download_<example-dataset>()`` within "
"``/pyvista/examples/downloads.py``. For example :func:`download_bunny() "
"<pyvista.examples.downloads.download_bunny>` downloads and reads with "
":func:`pyvista.read`."
msgstr ""
"単純にファイルをダウンロードして読み込むことも可能ですが， ``/pyvista/examples/downloads.py`` 内で "
"``download_<example-dataset>()`` をラップして記述した方が良いでしょう．例えば "
":func:`download_bunny() <pyvista.examples.downloads.download_bunny>` "
"はダウンロードを行い， :func:`pyvista.read` で読み込みを行うことができます．"

#: ../../pyvista/doc/source/examples/99-advanced/add-example.rst:378
msgid ""
"If you intend on adding an example file, you should add a new function in "
"``downloads.py`` to make it easy for users to add example files."
msgstr ""
"もし，サンプルファイルを追加するつもりなら， ``downloads.py`` "
"に新しい関数を追加して，ユーザーが簡単にサンプルファイルを追加できるようにする必要があります．"

#: ../../pyvista/doc/source/examples/99-advanced/add-example.rst:431
msgid "**Total running time of the script:** ( 0 minutes  3.784 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  3.784 seconds)"

#: ../../pyvista/doc/source/examples/99-advanced/add-example.rst:443
msgid ""
":download:`Download Python source code: add-example.py <add-example.py>`"
msgstr ""
":download:`Download Python source code: add-example.py <add-example.py>`"

#: ../../pyvista/doc/source/examples/99-advanced/add-example.rst:447
msgid ""
":download:`Download Jupyter notebook: add-example.ipynb <add-example.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: add-example.ipynb <add-example.ipynb>`"

#: ../../pyvista/doc/source/examples/99-advanced/antarctica-compare.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_99-advanced_antarctica-"
"compare.py>` to download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_99-advanced_antarctica-compare.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/99-advanced/antarctica-compare.rst:24
msgid "Compare Field Across Mesh Regions"
msgstr "メッシュ領域間でフィールドを比較"

#: ../../pyvista/doc/source/examples/99-advanced/antarctica-compare.rst:26
msgid ""
"Here is some velocity data from a glacier modelling simulation that is "
"compared across nodes in the simulation. We have simplified the mesh to have"
" the simulation node value already on the mesh."
msgstr ""
"氷河モデリングシミュレーションの速度データをシミュレーションのノード間で比較したものです．メッシュを簡略化して，シミュレーションノードの値がすでにメッシュ上にあるようにしました．"

#: ../../pyvista/doc/source/examples/99-advanced/antarctica-compare.rst:30
msgid ""
"This was originally posted to `pyvista/pyvista-support#83 "
"<https://github.com/pyvista/pyvista-support/issues/83>`_."
msgstr ""
"これは元々 `pyvista/pyvista-support#83 <https://github.com/pyvista/pyvista-"
"support/issues/83>`_ に投稿されました．"

#: ../../pyvista/doc/source/examples/99-advanced/antarctica-compare.rst:32
msgid ""
"The modeling results are courtesy of `Urruty Benoit "
"<https://github.com/BenoitURRUTY>`_ and  are from the `Elmer/Ice "
"<http://elmerice.elmerfem.org>`_ simulation software."
msgstr ""
"モデリング結果は`Urruty Benoit <https://github.com/BenoitURRUTY>`_ の好意により `Elmer/Ice"
" <http://elmerice.elmerfem.org>`_ シミュレーションソフトウェアから得たものである．"

#: ../../pyvista/doc/source/examples/99-advanced/antarctica-compare.rst:56
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>1106948</td></tr>\n"
"<tr><td>N Points</td><td>557470</td></tr>\n"
"<tr><td>X Bounds</td><td>-2.506e+06, 2.743e+06</td></tr>\n"
"<tr><td>Y Bounds</td><td>-2.143e+06, 2.240e+06</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 0.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>3</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td>ssavelocity</td><td>Points</td><td>float64</td><td>3</td><td>-4.341e+03</td><td>9.677e+03</td></tr>\n"
"<tr><td>node_value</td><td>Points</td><td>int64</td><td>1</td><td>0.000e+00</td><td>2.300e+01</td></tr>\n"
"<tr><td><b>magnitude</b></td><td>Points</td><td>float64</td><td>1</td><td>6.649e-03</td><td>1.013e+04</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>1106948</td></tr>\n"
"<tr><td>N Points</td><td>557470</td></tr>\n"
"<tr><td>X Bounds</td><td>-2.506e+06, 2.743e+06</td></tr>\n"
"<tr><td>Y Bounds</td><td>-2.143e+06, 2.240e+06</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 0.000e+00</td></tr>\n"
"<tr><td>N Arrays</td><td>3</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td>ssavelocity</td><td>Points</td><td>float64</td><td>3</td><td>-4.341e+03</td><td>9.677e+03</td></tr>\n"
"<tr><td>node_value</td><td>Points</td><td>int64</td><td>1</td><td>0.000e+00</td><td>2.300e+01</td></tr>\n"
"<tr><td><b>magnitude</b></td><td>Points</td><td>float64</td><td>1</td><td>6.649e-03</td><td>1.013e+04</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/99-advanced/antarctica-compare.rst:85
msgid ""
"Here is a helper to extract regions of the mesh based on the simulation "
"node."
msgstr "ここには，シミュレーションノードに基づいてメッシュの領域を抽出するヘルパーがあります．"

#: ../../pyvista/doc/source/examples/99-advanced/antarctica-compare.rst:190
msgid "plot vectors without mesh"
msgstr "メッシュなしでベクトルをプロット"

#: ../../pyvista/doc/source/examples/99-advanced/antarctica-compare.rst:222
msgid ""
"Compare directions. Normalize them so we can get a reasonable direction "
"comparison."
msgstr "方向を比較します．適切な方向比較ができるように正規化します．"

#: ../../pyvista/doc/source/examples/99-advanced/antarctica-compare.rst:263
msgid "flow_a that agrees with the mean flow path of flow_b"
msgstr "flow_b の平均流路と一致する flow_a"

#: ../../pyvista/doc/source/examples/99-advanced/antarctica-compare.rst:313
msgid "**Total running time of the script:** ( 0 minutes  11.662 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  11.662 seconds)"

#: ../../pyvista/doc/source/examples/99-advanced/antarctica-compare.rst:328
msgid ""
":download:`Download Python source code: antarctica-compare.py <antarctica-"
"compare.py>`"
msgstr ""
":download:`Download Python source code: antarctica-compare.py <antarctica-"
"compare.py>`"

#: ../../pyvista/doc/source/examples/99-advanced/antarctica-compare.rst:334
msgid ""
":download:`Download Jupyter notebook: antarctica-compare.ipynb <antarctica-"
"compare.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: antarctica-compare.ipynb <antarctica-"
"compare.ipynb>`"

#: ../../pyvista/doc/source/examples/99-advanced/atomic-orbitals.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_99-advanced_atomic-"
"orbitals.py>` to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_99-advanced_atomic-"
"orbitals.py>` をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/99-advanced/atomic-orbitals.rst:24
msgid "Plot Atomic Orbitals"
msgstr "原子軌道のプロット"

#: ../../pyvista/doc/source/examples/99-advanced/atomic-orbitals.rst:25
msgid "Visualize the wave functions (orbitals) of the hydrogen atom."
msgstr "水素原子の波動関数(軌道)を可視化します．"

#: ../../pyvista/doc/source/examples/99-advanced/atomic-orbitals.rst:30
msgid "Import"
msgstr "インポート"

#: ../../pyvista/doc/source/examples/99-advanced/atomic-orbitals.rst:31
msgid "Import the applicable libraries."
msgstr "該当するライブラリをインポートします．"

#: ../../pyvista/doc/source/examples/99-advanced/atomic-orbitals.rst:34
msgid ""
"This example is modeled off of `Matplotlib: Hydrogen Wave Function "
"<http://staff.ustc.edu.cn/~zqj/posts/Hydrogen-Wavefunction/>`_."
msgstr ""
"この例は， `Matplotlib: 水素波動関数 <http://staff.ustc.edu.cn/~zqj/posts/Hydrogen-"
"Wavefunction/>`_ をモデルにしています．"

#: ../../pyvista/doc/source/examples/99-advanced/atomic-orbitals.rst:37
msgid ""
"This example requires `sympy <https://www.sympy.org/>`_. Install it with:"
msgstr "この例では， `sympy <https://www.sympy.org/>`_ が必要です．以下でインストールしてください:"

#: ../../pyvista/doc/source/examples/99-advanced/atomic-orbitals.rst:63
msgid "Generate the Dataset"
msgstr "データセットの生成"

#: ../../pyvista/doc/source/examples/99-advanced/atomic-orbitals.rst:64
msgid ""
"Generate the dataset by evaluating the analytic hydrogen wave function from "
"``sympy``."
msgstr "``sympy`` から解析的水素波動関数を評価し，データセットを生成する．"

#: ../../pyvista/doc/source/examples/99-advanced/atomic-orbitals.rst:67
msgid ""
"\\begin{equation}\n"
"    \\psi_{n\\ell m}(r,\\theta,\\phi)\n"
"    =\n"
"    \\sqrt{\n"
"        \\left(\\frac{2}{na_0}\\right)^3\\, \\frac{(n-\\ell-1)!}{2n[(n+\\ell)!]}\n"
"    }\n"
"    e^{-r / na_0}\n"
"    \\left(\\frac{2r}{na_0}\\right)^\\ell\n"
"    L_{n-\\ell-1}^{2\\ell+1} \\cdot Y_\\ell^m(\\theta, \\phi)\n"
"\\end{equation}\n"
"\n"
msgstr ""
"\\begin{equation}\n"
"    \\psi_{n\\ell m}(r,\\theta,\\phi)\n"
"    =\n"
"    \\sqrt{\n"
"        \\left(\\frac{2}{na_0}\\right)^3\\, \\frac{(n-\\ell-1)!}{2n[(n+\\ell)!]}\n"
"    }\n"
"    e^{-r / na_0}\n"
"    \\left(\\frac{2r}{na_0}\\right)^\\ell\n"
"    L_{n-\\ell-1}^{2\\ell+1} \\cdot Y_\\ell^m(\\theta, \\phi)\n"
"\\end{equation}\n"
"\n"

#: ../../pyvista/doc/source/examples/99-advanced/atomic-orbitals.rst:79
msgid ""
"See `Hydrogen atom <https://en.wikipedia.org/wiki/Hydrogen_atom>`_ for more "
"details."
msgstr ""
"詳しくは `Hydrogen atom <https://en.wikipedia.org/wiki/Hydrogen_atom>`_ をご覧ください．"

#: ../../pyvista/doc/source/examples/99-advanced/atomic-orbitals.rst:82
msgid ""
"This dataset evaluates this function for the hydrogen orbital "
":math:`3d_{xy}`, with the following quantum numbers:"
msgstr "このデータセットでは，この関数を水素軌道 :math:`3d_{xy}` に対して，以下の量子数で評価します．"

#: ../../pyvista/doc/source/examples/99-advanced/atomic-orbitals.rst:85
msgid "Principal quantum number: ``n=3``"
msgstr "主量子数: ``n=3``"

#: ../../pyvista/doc/source/examples/99-advanced/atomic-orbitals.rst:86
msgid "Azimuthal quantum number: ``l=2``"
msgstr "方位角量子数: ``l=2``"

#: ../../pyvista/doc/source/examples/99-advanced/atomic-orbitals.rst:87
msgid "Magnetic quantum number: ``m=-2``"
msgstr "磁気量子数: ``m=-2``"

#: ../../pyvista/doc/source/examples/99-advanced/atomic-orbitals.rst:103
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>ImageData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>970299</td></tr>\n"
"<tr><td>N Points</td><td>1000000</td></tr>\n"
"<tr><td>X Bounds</td><td>-2.350e+01, 2.350e+01</td></tr>\n"
"<tr><td>Y Bounds</td><td>-2.350e+01, 2.350e+01</td></tr>\n"
"<tr><td>Z Bounds</td><td>-2.350e+01, 2.350e+01</td></tr>\n"
"<tr><td>Dimensions</td><td>100, 100, 100</td></tr>\n"
"<tr><td>Spacing</td><td>4.747e-01, 4.747e-01, 4.747e-01</td></tr>\n"
"<tr><td>N Arrays</td><td>2</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>real_wf</b></td><td>Points</td><td>float64</td><td>1</td><td>-1.689e-02</td><td>1.689e-02</td></tr>\n"
"<tr><td>wf</td><td>Points</td><td>complex128</td><td>1</td><td>-1.689e-02+1.353e-03j</td><td>1.689e-02+1.353e-03j</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>ImageData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>970299</td></tr>\n"
"<tr><td>N Points</td><td>1000000</td></tr>\n"
"<tr><td>X Bounds</td><td>-2.350e+01, 2.350e+01</td></tr>\n"
"<tr><td>Y Bounds</td><td>-2.350e+01, 2.350e+01</td></tr>\n"
"<tr><td>Z Bounds</td><td>-2.350e+01, 2.350e+01</td></tr>\n"
"<tr><td>Dimensions</td><td>100, 100, 100</td></tr>\n"
"<tr><td>Spacing</td><td>4.747e-01, 4.747e-01, 4.747e-01</td></tr>\n"
"<tr><td>N Arrays</td><td>2</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>real_wf</b></td><td>Points</td><td>float64</td><td>1</td><td>-1.689e-02</td><td>1.689e-02</td></tr>\n"
"<tr><td>wf</td><td>Points</td><td>complex128</td><td>1</td><td>-1.689e-02+1.353e-03j</td><td>1.689e-02+1.353e-03j</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/99-advanced/atomic-orbitals.rst:134
msgid "Plot the Orbital"
msgstr "軌道をプロットする"

#: ../../pyvista/doc/source/examples/99-advanced/atomic-orbitals.rst:135
msgid ""
"Plot the orbital using :func:`add_volume() <pyvista.Plotter.add_volume>` and"
" using the default scalars contained in ``grid``, ``real_wf``. This way we "
"can plot more than just the probability of the electron, but also the phase "
"of the electron wave function."
msgstr ""
":func:`add_volume() <pyvista.Plotter.add_volume>` を使用して， ``grid`` ， "
"``real_wf`` "
"に含まれるデフォルトのスカラーを使用して軌道をプロットしてください．この方法では，電子の確率だけでなく，電子の波動関数の位相もプロットすることができます．"

#: ../../pyvista/doc/source/examples/99-advanced/atomic-orbitals.rst:141
msgid ""
"Since the real value of evaluated wave function for this orbital varies "
"between ``[-<value>, <value>]``, we cannot use the default opacity "
"``opacity='linear'``. Instead, we use ``[1, 0, 1]`` since we would like the "
"opacity to be proportional to the absolute value of the scalars."
msgstr ""
"この軌道の評価波動関数の実数値は ``[-<value>, <value>]`` の間で変化するため，デフォルトの不透明度 "
"``opacity='linear'`` を使用することはできません．代わりに，スカラーの絶対値に比例するように不透明度を設定したいので， ``[1, "
"0, 1]`` を使用します．"

#: ../../pyvista/doc/source/examples/99-advanced/atomic-orbitals.rst:174
msgid "Plot the Orbital Contours as an Isosurface"
msgstr "軌道の輪郭を等値面としてプロットする"

#: ../../pyvista/doc/source/examples/99-advanced/atomic-orbitals.rst:175
msgid ""
"Generate the contour plot for the orbital by determining when the orbital "
"equals 10% the maximum value of the orbital. This effectively captures the "
"most likely locations of the electron for this orbital."
msgstr ""
"軌道の最大値の10％に等しいときを決定することによって，軌道の輪郭プロットを生成します．これは，この軌道の電子の最も可能性の高い位置を効果的に捉えます．"

#: ../../pyvista/doc/source/examples/99-advanced/atomic-orbitals.rst:179
msgid ""
"Note how we use the absolute value of the scalars when evaluating "
":func:`contour() <pyvista.DataSetFilters.contour>` to capture where the "
"positive and negative phases cross ``eval_at``."
msgstr ""
":func:`contour() <pyvista.DataSetFilters.contour>` "
"を評価する際に，スカラーの絶対値を使用して，正相と負相が ``eval_at`` を交差する場所を捕捉していることに注目してください．"

#: ../../pyvista/doc/source/examples/99-advanced/atomic-orbitals.rst:216
msgid "Volumetric Plot: Plot the Orbitals using RGBA"
msgstr "体積プロット: RGBAを使った軌道のプロット"

#: ../../pyvista/doc/source/examples/99-advanced/atomic-orbitals.rst:217
msgid ""
"Let's now combine some of the best parts of the two above plots. The "
"volumetric plot is great for showing the probability of the \"electron "
"cloud\" orbitals, but the colormap doesn't quite match reality as well as "
"the isosurface plot."
msgstr ""
"ここで，上の2つのプロットの良いところをいくつか組み合わせてみましょう．体積プロットは \"電子雲\" "
"軌道の確率を示すのに最適ですが，カラーマップは等値面プロットほどには現実にマッチしていないようです．"

#: ../../pyvista/doc/source/examples/99-advanced/atomic-orbitals.rst:222
msgid ""
"For this example we're going to use an RGBA colormap to tightly control the "
"way the orbitals are plotted. For this, the opacity will be mapped to the "
"probability of the electron being at a location in the grid, which we can do"
" by taking the absolute value squared of the orbital's wave function. We can"
" set the color of the orbital based on the phase, which we can get simply "
"with ``orbital['real_wf'] < 0``."
msgstr ""
"この例では，軌道がプロットされる方法を厳密に制御するために，RGBAカラーマップを使用するつもりです．このために，不透明度は電子がグリッド内のある場所に存在する確率にマッピングされます．これは軌道の波動関数の絶対値の二乗を取ることで実現できます．軌道の色は位相に基づいて設定することができ，単純に"
" ``orbital['real_wf'] < 0`` で得ることができます．"

#: ../../pyvista/doc/source/examples/99-advanced/atomic-orbitals.rst:229
msgid "Let's start with a simple one, the :math:`3p_z` orbital."
msgstr "まずは簡単なものから， :math:`3p_z` 軌道を考えてみましょう．"

#: ../../pyvista/doc/source/examples/99-advanced/atomic-orbitals.rst:288
msgid "Volumetric Plot: :math:`4d_{z^2}` orbital"
msgstr "体積プロット: :math:`4d_{z^2}` 軌道"

#: ../../pyvista/doc/source/examples/99-advanced/atomic-orbitals.rst:313
msgid "Volumetric Plot: :math:`4d_{xz}` orbital"
msgstr "体積プロット: :math:`4d_{xz}` 軌道"

#: ../../pyvista/doc/source/examples/99-advanced/atomic-orbitals.rst:338
msgid "Plot an Orbital Using a Density Plot"
msgstr "密度プロットによる軌道のプロット"

#: ../../pyvista/doc/source/examples/99-advanced/atomic-orbitals.rst:339
msgid ""
"We can also plot atomic orbitals using a 3D density plot. For this, we will "
"use :func:`numpy.random.choice` to sample all the points of our "
":class:`pyvista.ImageData` based on the probability of the electron being at"
" that coordinate."
msgstr ""
"また，3次元密度プロットを用いて原子軌道をプロットすることもできます．そのためには， :func:`numpy.random.choice` "
"を使って，電子がその座標にある確率に基づいて :class:`pyvista.ImageData` のすべての点をサンプリングします．"

#: ../../pyvista/doc/source/examples/99-advanced/atomic-orbitals.rst:403
msgid "Density Plot - Gaussian Points Representation"
msgstr "密度プロット - ガウスポイント表現"

#: ../../pyvista/doc/source/examples/99-advanced/atomic-orbitals.rst:404
msgid ""
"Finally, let's plot the same data using the \"Gaussian points\" "
"representation."
msgstr "最後に，同じデータを \"ガウスポイント\" 表現でプロットしてみましょう．"

#: ../../pyvista/doc/source/examples/99-advanced/atomic-orbitals.rst:436
msgid "**Total running time of the script:** ( 0 minutes  18.895 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  18.895 seconds)"

#: ../../pyvista/doc/source/examples/99-advanced/atomic-orbitals.rst:450
msgid ""
":download:`Download Python source code: atomic-orbitals.py <atomic-"
"orbitals.py>`"
msgstr ""
":download:`Download Python source code: atomic-orbitals.py <atomic-"
"orbitals.py>`"

#: ../../pyvista/doc/source/examples/99-advanced/atomic-orbitals.rst:454
msgid ""
":download:`Download Jupyter notebook: atomic-orbitals.ipynb <atomic-"
"orbitals.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: atomic-orbitals.ipynb <atomic-"
"orbitals.ipynb>`"

#: ../../pyvista/doc/source/examples/99-advanced/customization-trame-toolbar.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_99-advanced_customization-"
"trame-toolbar.py>` to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_99-advanced_customization-"
"trame-toolbar.py>` をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/99-advanced/customization-trame-toolbar.rst:24
msgid "Customize Trame toolbar"
msgstr "Trameツールバーのカスタマイズ"

#: ../../pyvista/doc/source/examples/99-advanced/customization-trame-toolbar.rst:26
msgid "Bring more of the power of trame to the jupyter view."
msgstr "jupyterのビューにtrameのパワーをもっともたらします．"

#: ../../pyvista/doc/source/examples/99-advanced/customization-trame-toolbar.rst:46
msgid ""
"Let's first create the menu items we want to add to the trame's toolbar. "
"Here we want a \"play\" button that will be later connected to a slider "
"through the ``button_play`` function. The slider itself will represent the "
"\"resolution\" of the model we will render, a text field where the value of "
"the \"resolution\" will be displayed. We will also add a dropdown menu to "
"toggle the visibility of the model. The dividers are the same as already "
"used to divide and organize the toolbar."
msgstr ""
"まず，trameのツールバーに追加したいメニュー項目を作成しましょう．ここでは， ``button_play`` 関数を通してsliderに接続される "
"\"play\" ボタンを作成します．sliderはレンダリングするモデルの \"resolution\" を表し， \"resolution\" "
"の値が表示されるテキストフィールドになります．また，モデルの表示を切り替えるドロップダウンメニューも追加します．dividerは，ツールバーを分割して整理するために既に使用したものと同じです．"

#: ../../pyvista/doc/source/examples/99-advanced/customization-trame-toolbar.rst:109
msgid ""
"The button callback function ``button_play`` needs to be created before "
"starting the server. This function will toggle the boolean state variable "
"``play`` and flush the server, i.e. \"force\" the server to see the change. "
"We will see more on the state variables in a bit, but we need to create the "
"function here otherwise the server will complain ``button_play`` does not "
"exist."
msgstr ""
"ボタンコールバック関数 ``button_play`` はサーバーを起動する前に作成する必要があります．この関数はブール値の状態変数 ``play`` "
"をトグルし，サーバーをフラッシュします．ステート変数についてはもう少し詳しく説明しますが，ここで関数を作成する必要があります．"

#: ../../pyvista/doc/source/examples/99-advanced/customization-trame-toolbar.rst:135
msgid ""
"We will do a simple rendering of a Cone using the vtk `vtkConeSouce` "
"algorithm."
msgstr "vtk `vtkConeSouce` アルゴリズムを使用して，コーンの簡単なレンダリングを行います．"

#: ../../pyvista/doc/source/examples/99-advanced/customization-trame-toolbar.rst:138
msgid ""
"When using the ``pl.show`` method. The function we created ``custom_tools`` "
"should be passed as a ``jupyter_kwargs`` argument under the key "
"``add_menu_items``."
msgstr ""
"``pl.show`` メソッドを使用する場合．作成した ``custom_tools`` 関数を ``jupyter_kwargs`` 引数として "
"``add_menu_items`` キーで渡す必要があります．"

#: ../../pyvista/doc/source/examples/99-advanced/customization-trame-toolbar.rst:167
msgid "To interact with ``trame``'s server we need to get the server's state."
msgstr "``trame`` のサーバーと対話するためには，サーバーの状態を取得する必要があります．"

#: ../../pyvista/doc/source/examples/99-advanced/customization-trame-toolbar.rst:169
msgid ""
"We initialize the ``play`` variable in the shared state and this will be "
"controlled by the play button we created. Note that when creating the "
"``slider``, the ``text_field`` and the ``select`` tools, we passed something"
" like ``model=(\"variable\", value). This will automatically create the "
"variable \"variable\" with value ``value`` in the server's shared state, so "
"we do not need to create ``state.resolution`` or ``state.visibility``."
msgstr ""
"共有ステートで ``play`` 変数を初期化し，作成した再生ボタンでコントロールできるようにします．なお， ``slider`` ， "
"``text_field`` ， ``select`` ツールを作成する際に， ``model=(\"variable\", value)`` "
"のようなものを渡しています．これにより，サーバーの共有ステートに値 ``value`` を持つ変数 \"variable\" が自動的に作成されるため，"
" ``state.resolution`` や ``state.visibility`` を作成する必要はありません．"

#: ../../pyvista/doc/source/examples/99-advanced/customization-trame-toolbar.rst:194
msgid "Now we can create the callback functions for our menu items."
msgstr "これで，メニュー項目のコールバック関数を作成できるようになりました．"

#: ../../pyvista/doc/source/examples/99-advanced/customization-trame-toolbar.rst:196
msgid ""
"The functions are decorated with a ``state.change(\"variable\")``. This "
"means they will be called when this specific variable has its value changed "
"in the server's shared state. When ``resolution`` changes, we want to update"
" the resolution of our cone algorithm. When ``visibility`` changes, we want "
"to toggle the visibility of our cone."
msgstr ""
"関数は ``state.change(\"variable\")`` "
"でデコレートされています．これは，この特定の変数の値がサーバーの共有ステートで変更されたときに呼び出されることを意味します． "
"``resolution`` が変更されると，コーンアルゴリズムの解像度を更新します． ``visibility`` "
"が変更されると，コーンの可視性を切り替えます．"

#: ../../pyvista/doc/source/examples/99-advanced/customization-trame-toolbar.rst:202
msgid ""
"The ``play`` variable is a little bit trickier. We want to start something "
"like a timer so that an animation can be set to play. To do that with "
"``trame`` we need to have an asynchronous function so we can continue to do "
"stuff while the \"timer\" function is running. The ``_play`` function will "
"be called when the ``play`` variable is changed (when we click the play "
"button, through the ``button_play`` callback). While ``state.play`` is "
"``True`` we want to play the animation. We change the ``state.resolution`` "
"value, but to really call the ``update_resolution`` function we need to "
"``flush`` the server and force it to see the change in the shared variables."
" When ``state.play`` changes to ``False``, the animation stops."
msgstr ""
"変数 ``play`` は少しトリッキーです．アニメーションを再生するためにタイマーのようなものをスタートさせたいです．これを ``trame`` "
"で行うには，非同期関数が必要です．関数 ``_play`` は，変数 ``play`` が変更された時に (再生ボタンをクリックした時、コールバック "
"``button_play`` を通して) 呼び出されます． ``state.play`` が ``True`` の間，アニメーションを再生したいです．"
" ``state.resolution`` の値を変更しますが，実際に ``update_resolution`` 関数を呼び出すには，サーバーを "
"``flush`` して，共有変数の変更を確認させる必要があります． ``state.play`` が ``False`` "
"に変更されると，アニメーションは停止します．"

#: ../../pyvista/doc/source/examples/99-advanced/customization-trame-toolbar.rst:212
msgid ""
"Note that using ``while play: ...`` would not work here because it is not "
"the actual state variable, but only an argument value passed to the callback"
" function."
msgstr ""
"実際のステート変数ではなく，コールバック関数に渡される引数値でしかないため， ``while play: ...`` "
"を使用してもここでは機能しないことに注意してください．"

#: ../../pyvista/doc/source/examples/99-advanced/customization-trame-toolbar.rst:262
msgid "**Total running time of the script:** (0 minutes 0.292 seconds)"
msgstr "**Total running time of the script:** (0 minutes 0.292 seconds)"

#: ../../pyvista/doc/source/examples/99-advanced/customization-trame-toolbar.rst:276
msgid ""
":download:`Download Python source code: customization-trame-toolbar.py "
"<customization-trame-toolbar.py>`"
msgstr ""
":download:`Download Python source code: customization-trame-toolbar.py "
"<customization-trame-toolbar.py>`"

#: ../../pyvista/doc/source/examples/99-advanced/customization-trame-toolbar.rst:280
msgid ""
":download:`Download Jupyter notebook: customization-trame-toolbar.ipynb "
"<customization-trame-toolbar.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: customization-trame-toolbar.ipynb "
"<customization-trame-toolbar.ipynb>`"

#: ../../pyvista/doc/source/examples/99-advanced/extending-pyvista.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_99-advanced_extending-"
"pyvista.py>` to download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_99-advanced_extending-pyvista.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/99-advanced/extending-pyvista.rst:24
msgid "Extending PyVista"
msgstr "PyVistaの拡張"

#: ../../pyvista/doc/source/examples/99-advanced/extending-pyvista.rst:26
msgid ""
"A :class:`pyvista.DataSet`, such as :class:`pyvista.PolyData`, can be "
"extended by users.  For example, if the user wants to keep track of the "
"location of the maximum point in the (1, 0, 1) direction on the mesh."
msgstr ""
":class:`pyvista.PolyData` のような :class:`pyvista.DataSet` は，ユーザが拡張することができます． "
"例えば，ユーザーがメッシュ上の(1, 0, 1)方向の最大点の位置を記録したいとします．"

#: ../../pyvista/doc/source/examples/99-advanced/extending-pyvista.rst:30
msgid ""
"There are two methods by which users can handle subclassing.  One is "
"directly managing the types objects.  This may require checking types during"
" filter operations."
msgstr ""
"ユーザーがサブクラス化を処理する方法は2つあります． 1つは，タイプ・オブジェクトを直接管理する方法です． "
"この場合，フィルター操作時に型のチェックが必要になることがあります．"

#: ../../pyvista/doc/source/examples/99-advanced/extending-pyvista.rst:34
msgid ""
"The second is automatic managing of types.  Users can control whether user "
"defined classes are nearly always used for particular types of DataSets."
msgstr ""
"2つ目は，タイプの自動管理です． "
"ユーザーは，特定のタイプのDataSetsに対して，ユーザー定義のクラスをほぼ常に使用するかどうかを制御することができます．"

#: ../../pyvista/doc/source/examples/99-advanced/extending-pyvista.rst:38
msgid ""
"This is for advanced usage only.  Automatic managing of types will not work "
"in all situations, in particular when a builtin dataset is directly "
"instantiated.  See examples below."
msgstr ""
"これは上級者向けの機能です． "
"型の自動管理は，すべての状況で機能するわけではありません．特に，組み込みデータセットが直接インスタンス化されている場合はそうです． "
"以下の例をご覧ください．"

#: ../../pyvista/doc/source/examples/99-advanced/extending-pyvista.rst:63
msgid ""
"A user defined subclass of :class:`pyvista.PolyData`, ``FooData`` is "
"defined. It includes a property to keep track of the point on the mesh that "
"is furthest along in the (1, 0, 1) direction."
msgstr ""
":class:`pyvista.PolyData` のユーザー定義サブクラスである ``FooData`` "
"が定義されています．これには，メッシュ上で(1, 0, 1)方向に最も離れた点を追跡するプロパティが含まれています．"

#: ../../pyvista/doc/source/examples/99-advanced/extending-pyvista.rst:90
msgid "Directly Managing Types"
msgstr "タイプを直接管理する"

#: ../../pyvista/doc/source/examples/99-advanced/extending-pyvista.rst:92
msgid ""
"Now a ``foo_sphere`` object is created of type ``FooData``. The index of the"
" point and location of the point of interest can be obtained directly. The "
"sphere has a radius of 0.5, so the maximum extent in the direction (1, 0, 1)"
" is :math:`0.5\\sqrt{0.5}\\approx0.354`"
msgstr ""
"これで ``FooData`` 型の ``foo_sphere`` "
"オブジェクトが作成されました．ポイントのインデックスと位置を直接取得することができます．球体の半径は0.5なので，(1, 0, "
"1)の方向への最大の広がりは :math:`0.5\\sqrt{0.5}\\approx0.354` となります．"

#: ../../pyvista/doc/source/examples/99-advanced/extending-pyvista.rst:129
msgid ""
"Using an inplace operation like :func:`pyvista.DataSet.rotate_y` does not "
"affect the type of the object."
msgstr ":func:`pyvista.DataSet.rotate_y` のようなインプレース操作を使っても，オブジェクトの型には影響しません．"

#: ../../pyvista/doc/source/examples/99-advanced/extending-pyvista.rst:164
msgid ""
"However, filter operations can return different ``DataSet`` types including "
"ones that differ from the original type.  In this case, the :func:`decimate "
"<pyvista.PolyDataFilters.decimate>` method returns a "
":class:`pyvista.PolyData` object."
msgstr ""
"しかし，フィルター操作によって，元の型とは異なるものを含む，異なる ``DataSet`` 型が返されることがあります． このような場合， "
":func:`decimate <pyvista.PolyDataFilters.decimate>` メソッドは "
":class:`pyvista.PolyData` オブジェクトを取得します．"

#: ../../pyvista/doc/source/examples/99-advanced/extending-pyvista.rst:197
msgid "It is now required to explicitly wrap the object into ``FooData``."
msgstr "オブジェクトを明示的に ``FooData`` にラップすることが必要になりました．"

#: ../../pyvista/doc/source/examples/99-advanced/extending-pyvista.rst:229
msgid "Automatically Managing Types"
msgstr "タイプを自動的に管理する"

#: ../../pyvista/doc/source/examples/99-advanced/extending-pyvista.rst:231
msgid ""
"The default :class:`pyvista.DataSet` type can be set using "
"``pyvista._wrappers``. In general, it is best to use this method when it is "
"expected to primarily use the user defined class."
msgstr ""
"デフォルトの :class:`pyvista.DataSet` タイプは， ``pyvista._wrappers`` "
"を使って設定することができます．一般的には，ユーザー定義のクラスを主に使用することが予想される場合に，このメソッドを使用するのがベストです．"

#: ../../pyvista/doc/source/examples/99-advanced/extending-pyvista.rst:235
msgid ""
"In this example, all objects that would have been created as "
":class:`pyvista.PolyData` would now be created as a ``FooData`` object. "
"Note, that the key is the underlying vtk object."
msgstr ""
"この例では，これまで :class:`pyvista.PolyData` として作成されていたすべてのオブジェクトが， ``FooData`` "
"オブジェクトとして作成されます．キーとなるのは，基礎となるvtkオブジェクトであることに注意してください．"

#: ../../pyvista/doc/source/examples/99-advanced/extending-pyvista.rst:255
msgid ""
"It is no longer necessary to specifically wrap :class:`pyvista.PolyData` "
"objects to obtain a ``FooData`` object."
msgstr ""
"``FooData`` オブジェクトを取得するために， :class:`pyvista.PolyData` "
"オブジェクトを特別にラップする必要がなくなりました．"

#: ../../pyvista/doc/source/examples/99-advanced/extending-pyvista.rst:289
msgid ""
"Using an inplace operation like :func:`rotate_y <pyvista.DataSet.rotate_y>` "
"does not affect the type of the object."
msgstr ""
":func:`rotate_y <pyvista.DataSet.rotate_y>` "
"のようなインプレース操作を使っても，オブジェクトの型には影響しません．"

#: ../../pyvista/doc/source/examples/99-advanced/extending-pyvista.rst:324
msgid ""
"Filter operations that return :class:`pyvista.PolyData` now return "
"``FooData``"
msgstr ":class:`pyvista.PolyData` を返していたフィルター操作が ``FooData`` を返すようになりました．"

#: ../../pyvista/doc/source/examples/99-advanced/extending-pyvista.rst:359
msgid ""
"Users can still create a native :class:`pyvista.PolyData` object, but using "
"this method may incur unintended consequences.  In this case, it is "
"recommended to use the directly managing types method."
msgstr ""
"ユーザーは，ネイティブの :class:`pyvista.PolyData` "
"オブジェクトを作成することができますが，この方法を使用すると，意図しない結果になる可能性があります． "
"このような場合は，型を直接管理する方法を使用することをお勧めします．"

#: ../../pyvista/doc/source/examples/99-advanced/extending-pyvista.rst:394
msgid ""
"Usage of ``pyvista._wrappers`` may require resetting the default value to "
"avoid leaking the setting into cases where it is unused."
msgstr ""
"``pyvista._wrappers`` "
"を使用する際には，使用されないケースに設定が漏れないように，デフォルト値をリセットする必要があるかもしれません．"

#: ../../pyvista/doc/source/examples/99-advanced/extending-pyvista.rst:413
msgid ""
"For instances where a localized usage is preferred, a tear-down method is "
"recommended.  One example is a ``try...finally`` block."
msgstr "局所的な使い方が望ましい場合には，ティアダウン方式を推奨します． 例えば， ``try...finally`` ブロックです．"

#: ../../pyvista/doc/source/examples/99-advanced/extending-pyvista.rst:436
msgid "**Total running time of the script:** ( 0 minutes  0.186 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  0.186 seconds)"

#: ../../pyvista/doc/source/examples/99-advanced/extending-pyvista.rst:451
msgid ""
":download:`Download Python source code: extending-pyvista.py <extending-"
"pyvista.py>`"
msgstr ""
":download:`Download Python source code: extending-pyvista.py <extending-"
"pyvista.py>`"

#: ../../pyvista/doc/source/examples/99-advanced/extending-pyvista.rst:457
msgid ""
":download:`Download Jupyter notebook: extending-pyvista.ipynb <extending-"
"pyvista.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: extending-pyvista.ipynb <extending-"
"pyvista.ipynb>`"

#: ../../pyvista/doc/source/examples/99-advanced/fea-hertzian-contact-pressure.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_99-advanced_fea-hertzian-"
"contact-pressure.py>` to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_99-advanced_fea-hertzian-"
"contact-pressure.py>` をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/99-advanced/fea-hertzian-contact-pressure.rst:24
msgid "Visualize Hertzian Contact Stress"
msgstr "Hertの接触応力を可視化する"

#: ../../pyvista/doc/source/examples/99-advanced/fea-hertzian-contact-pressure.rst:25
msgid ""
"The following example demonstrates how to use PyVista to visualize Hertzian "
"contact stress between a cylinder and a flat plate."
msgstr "次の例は，PyVistaを使って円柱と平板のHertzの接触応力を可視化する方法を示したものである．"

#: ../../pyvista/doc/source/examples/99-advanced/fea-hertzian-contact-pressure.rst:28
msgid ""
"This example loads a dataset, constructs a line to represent the point of "
"contact between the cylinder and the block, and samples the stress along "
"that line. Finally, it plots the dataset and the stress distribution."
msgstr ""
"この例では，データセットをロードし，円筒とブロックの接触点を表す線を作成し，その線に沿って応力をサンプリングしています．最後に，データセットと応力分布をプロットしています．"

#: ../../pyvista/doc/source/examples/99-advanced/fea-hertzian-contact-pressure.rst:32
msgid ""
"**Background** Hertzian contact stress refers to the stress that occurs "
"between two curved surfaces that are in contact with each other. It is named"
" after Heinrich Rudolf Hertz, a German physicist who first described the "
"phenomenon in the late 1800s. Hertzian contact stress is an important "
"concept in materials science, engineering, and other fields where the "
"behavior of materials under stress is a critical consideration."
msgstr ""
"**背景** "
"Hertzの接触応力とは，接触している2つの曲面の間に発生する応力を指します．1800年代後半にこの現象を初めて記述したドイツの物理学者，Heinrich"
" Rudolf Hertzにちなんで命名されました．Hertzの接触応力は，材料科学や工学など，応力下での材料の挙動が重要視される分野で重要な概念です．"

#: ../../pyvista/doc/source/examples/99-advanced/fea-hertzian-contact-pressure.rst:61
#: ../../pyvista/doc/source/examples/99-advanced/pump-bracket.rst:59
msgid "Load the dataset"
msgstr "データセットを読み込む"

#: ../../pyvista/doc/source/examples/99-advanced/fea-hertzian-contact-pressure.rst:62
msgid ""
"Start by loading the dataset using :mod:`pyvista.examples` module. This "
"module provides access to a range of datasets, including FEA (finite element"
" analysis) datasets that are useful for stress analysis."
msgstr ""
"まず， :mod:`pyvista.examples` "
"モジュールを使ってデータセットを読み込みます．このモジュールでは，応力解析に有用なFEA（有限要素解析）データセットを含む様々なデータセットにアクセスすることができます．"

#: ../../pyvista/doc/source/examples/99-advanced/fea-hertzian-contact-pressure.rst:80
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>UnstructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>132258</td></tr>\n"
"<tr><td>N Points</td><td>34185</td></tr>\n"
"<tr><td>X Bounds</td><td>-0.000e+00, 2.000e-01</td></tr>\n"
"<tr><td>Y Bounds</td><td>0.000e+00, 2.500e-02</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 3.000e-01</td></tr>\n"
"<tr><td>N Arrays</td><td>16</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td>Displacement</td><td>Points</td><td>float64</td><td>3</td><td>-5.000e-04</td><td>2.945e-05</td></tr>\n"
"<tr><td>vonMises</td><td>Points</td><td>float64</td><td>1</td><td>1.316e+02</td><td>1.707e+09</td></tr>\n"
"<tr><td>Stress</td><td>Points</td><td>float64</td><td>6</td><td>-3.055e+09</td><td>5.274e+08</td></tr>\n"
"<tr><td>Strain</td><td>Points</td><td>float64</td><td>6</td><td>-1.937e-02</td><td>1.894e-02</td></tr>\n"
"<tr><td>PrincipalStress 1</td><td>Points</td><td>float64</td><td>1</td><td>-1.787e+09</td><td>2.586e+08</td></tr>\n"
"<tr><td>PrincipalStress 2</td><td>Points</td><td>float64</td><td>1</td><td>-2.594e+09</td><td>3.531e+07</td></tr>\n"
"<tr><td>PrincipalStress 3</td><td>Points</td><td>float64</td><td>1</td><td>-3.078e+09</td><td>1.995e+06</td></tr>\n"
"<tr><td>PrincipalStrain 1</td><td>Points</td><td>float64</td><td>1</td><td>-6.976e-04</td><td>1.448e-02</td></tr>\n"
"<tr><td>PrincipalStrain 2</td><td>Points</td><td>float64</td><td>1</td><td>-1.145e-02</td><td>8.690e-04</td></tr>\n"
"<tr><td>PrincipalStrain 3</td><td>Points</td><td>float64</td><td>1</td><td>-2.787e-02</td><td>-8.375e-10</td></tr>\n"
"<tr><td>StrainEnergyDensity</td><td>Points</td><td>float64</td><td>1</td><td>1.172e-07</td><td>2.307e+07</td></tr>\n"
"<tr><td>PlasticStrain</td><td>Points</td><td>float64</td><td>6</td><td>0.000e+00</td><td>0.000e+00</td></tr>\n"
"<tr><td>EquivalentPlasticStrain</td><td>Points</td><td>float64</td><td>1</td><td>0.000e+00</td><td>0.000e+00</td></tr>\n"
"<tr><td>Rank</td><td>Cells</td><td>float64</td><td>1</td><td>0.000e+00</td><td>1.500e+01</td></tr>\n"
"<tr><td>Material</td><td>Cells</td><td>float64</td><td>1</td><td>0.000e+00</td><td>1.000e+00</td></tr>\n"
"<tr><td>PartID</td><td>Cells</td><td>int32</td><td>1</td><td>1.000e+00</td><td>2.000e+00</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>UnstructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>132258</td></tr>\n"
"<tr><td>N Points</td><td>34185</td></tr>\n"
"<tr><td>X Bounds</td><td>-0.000e+00, 2.000e-01</td></tr>\n"
"<tr><td>Y Bounds</td><td>0.000e+00, 2.500e-02</td></tr>\n"
"<tr><td>Z Bounds</td><td>0.000e+00, 3.000e-01</td></tr>\n"
"<tr><td>N Arrays</td><td>16</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td>Displacement</td><td>Points</td><td>float64</td><td>3</td><td>-5.000e-04</td><td>2.945e-05</td></tr>\n"
"<tr><td>vonMises</td><td>Points</td><td>float64</td><td>1</td><td>1.316e+02</td><td>1.707e+09</td></tr>\n"
"<tr><td>Stress</td><td>Points</td><td>float64</td><td>6</td><td>-3.055e+09</td><td>5.274e+08</td></tr>\n"
"<tr><td>Strain</td><td>Points</td><td>float64</td><td>6</td><td>-1.937e-02</td><td>1.894e-02</td></tr>\n"
"<tr><td>PrincipalStress 1</td><td>Points</td><td>float64</td><td>1</td><td>-1.787e+09</td><td>2.586e+08</td></tr>\n"
"<tr><td>PrincipalStress 2</td><td>Points</td><td>float64</td><td>1</td><td>-2.594e+09</td><td>3.531e+07</td></tr>\n"
"<tr><td>PrincipalStress 3</td><td>Points</td><td>float64</td><td>1</td><td>-3.078e+09</td><td>1.995e+06</td></tr>\n"
"<tr><td>PrincipalStrain 1</td><td>Points</td><td>float64</td><td>1</td><td>-6.976e-04</td><td>1.448e-02</td></tr>\n"
"<tr><td>PrincipalStrain 2</td><td>Points</td><td>float64</td><td>1</td><td>-1.145e-02</td><td>8.690e-04</td></tr>\n"
"<tr><td>PrincipalStrain 3</td><td>Points</td><td>float64</td><td>1</td><td>-2.787e-02</td><td>-8.375e-10</td></tr>\n"
"<tr><td>StrainEnergyDensity</td><td>Points</td><td>float64</td><td>1</td><td>1.172e-07</td><td>2.307e+07</td></tr>\n"
"<tr><td>PlasticStrain</td><td>Points</td><td>float64</td><td>6</td><td>0.000e+00</td><td>0.000e+00</td></tr>\n"
"<tr><td>EquivalentPlasticStrain</td><td>Points</td><td>float64</td><td>1</td><td>0.000e+00</td><td>0.000e+00</td></tr>\n"
"<tr><td>Rank</td><td>Cells</td><td>float64</td><td>1</td><td>0.000e+00</td><td>1.500e+01</td></tr>\n"
"<tr><td>Material</td><td>Cells</td><td>float64</td><td>1</td><td>0.000e+00</td><td>1.000e+00</td></tr>\n"
"<tr><td>PartID</td><td>Cells</td><td>int32</td><td>1</td><td>1.000e+00</td><td>2.000e+00</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/99-advanced/fea-hertzian-contact-pressure.rst:123
#: ../../pyvista/doc/source/examples/99-advanced/pump-bracket.rst:118
msgid "Plot the Dataset"
msgstr "データセットのプロット"

#: ../../pyvista/doc/source/examples/99-advanced/fea-hertzian-contact-pressure.rst:124
msgid "Plot the dataset by part ID."
msgstr "データセットを部分IDごとにプロットする．"

#: ../../pyvista/doc/source/examples/99-advanced/fea-hertzian-contact-pressure.rst:149
msgid "Creating a Line to Denote the Point of Contact"
msgstr "接触点を表す線を作る"

#: ../../pyvista/doc/source/examples/99-advanced/fea-hertzian-contact-pressure.rst:150
msgid ""
"Construct a line to represent the point of contact between the cylinder and "
"the plate."
msgstr "円柱とプレートの接触点を表す線を作ります．"

#: ../../pyvista/doc/source/examples/99-advanced/fea-hertzian-contact-pressure.rst:170
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>1</td></tr>\n"
"<tr><td>N Points</td><td>101</td></tr>\n"
"<tr><td>N Strips</td><td>0</td></tr>\n"
"<tr><td>X Bounds</td><td>9.500e-02, 1.000e-01</td></tr>\n"
"<tr><td>Y Bounds</td><td>2.400e-02, 2.400e-02</td></tr>\n"
"<tr><td>Z Bounds</td><td>1.999e-01, 1.999e-01</td></tr>\n"
"<tr><td>N Arrays</td><td>0</td></tr>\n"
"</table>\n"
"\n"
"\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"\n"
"<table>\n"
"<tr><th>PolyData</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>1</td></tr>\n"
"<tr><td>N Points</td><td>101</td></tr>\n"
"<tr><td>N Strips</td><td>0</td></tr>\n"
"<tr><td>X Bounds</td><td>9.500e-02, 1.000e-01</td></tr>\n"
"<tr><td>Y Bounds</td><td>2.400e-02, 2.400e-02</td></tr>\n"
"<tr><td>Z Bounds</td><td>1.999e-01, 1.999e-01</td></tr>\n"
"<tr><td>N Arrays</td><td>0</td></tr>\n"
"</table>\n"
"\n"
"\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/99-advanced/fea-hertzian-contact-pressure.rst:193
msgid "Sampling the Stress along the Line"
msgstr "線に沿った応力のサンプリング"

#: ../../pyvista/doc/source/examples/99-advanced/fea-hertzian-contact-pressure.rst:194
msgid ""
"We can sample the Z component stress along the contact edge and compare it "
"with expected pressure."
msgstr "接触端に沿ったZ成分の応力をサンプリングし，予想される圧力と比較することができます．"

#: ../../pyvista/doc/source/examples/99-advanced/fea-hertzian-contact-pressure.rst:197
msgid ""
"The expected values array is the Hertzian contact pressure and is the "
"analytical solution to the non-adhesive contact problem. Computation of "
"these values is an exercise left up to the reader (the radius of the "
"cylinder is 0.05). See `Contact Mechanics "
"<https://en.wikipedia.org/wiki/Contact_mechanics>`_"
msgstr ""
"期待値の配列はHertzの接触圧であり，非粘着性接触問題の解析的解である．これらの値の計算は読者に任された練習です（円柱の半径は0.05です）． "
"`Contact Mechanics <https://en.wikipedia.org/wiki/Contact_mechanics>`_ "
"を参照してください．"

#: ../../pyvista/doc/source/examples/99-advanced/fea-hertzian-contact-pressure.rst:257
msgid "Visualizing the Z Stress Distribution"
msgstr "Z応力分布の可視化"

#: ../../pyvista/doc/source/examples/99-advanced/fea-hertzian-contact-pressure.rst:258
msgid ""
"You can now visualize the Z stress distribution. Use "
":class:`pyvista.Plotter` to create a plot window and add the dataset to it."
msgstr ""
"これで，Z応力分布を可視化することができます． :class:`pyvista.Plotter` "
"を使用してプロットウィンドウを作成し，データセットをそこに追加します．"

#: ../../pyvista/doc/source/examples/99-advanced/fea-hertzian-contact-pressure.rst:297
msgid "**Total running time of the script:** ( 0 minutes  2.542 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  2.542 seconds)"

#: ../../pyvista/doc/source/examples/99-advanced/fea-hertzian-contact-pressure.rst:311
msgid ""
":download:`Download Python source code: fea-hertzian-contact-pressure.py "
"<fea-hertzian-contact-pressure.py>`"
msgstr ""
":download:`Download Python source code: fea-hertzian-contact-pressure.py "
"<fea-hertzian-contact-pressure.py>`"

#: ../../pyvista/doc/source/examples/99-advanced/fea-hertzian-contact-pressure.rst:315
msgid ""
":download:`Download Jupyter notebook: fea-hertzian-contact-pressure.ipynb "
"<fea-hertzian-contact-pressure.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: fea-hertzian-contact-pressure.ipynb "
"<fea-hertzian-contact-pressure.ipynb>`"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:6
#: ../../pyvista/doc/source/examples/index.rst:2627
msgid "Advanced"
msgstr "詳細設定"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:8
#: ../../pyvista/doc/source/examples/index.rst:2629
msgid ""
"Include here are few longer, more advanced examples from our users and "
"developers."
msgstr "ここでは，ユーザと開発者による，より長く，より高度な例をいくつか紹介します．"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:18
#: ../../pyvista/doc/source/examples/index.rst:2639
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Each example should have a "
"reference tag/key in the form:\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Each example should have a "
"reference tag/key in the form:\">"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:27
#: ../../pyvista/doc/source/examples/index.rst:2648
msgid ":ref:`sphx_glr_examples_99-advanced_add-example.py`"
msgstr ":ref:`sphx_glr_examples_99-advanced_add-example.py`"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:29
#: ../../pyvista/doc/source/examples/index.rst:2650
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Adding a New Gallery Example</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Adding a New Gallery Example</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:35
#: ../../pyvista/doc/source/examples/index.rst:2656
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Here is some velocity data "
"from a glacier modelling simulation that is compared across nodes in...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Here is some velocity data "
"from a glacier modelling simulation that is compared across nodes in...\">"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:44
#: ../../pyvista/doc/source/examples/index.rst:2665
msgid ":ref:`sphx_glr_examples_99-advanced_antarctica-compare.py`"
msgstr ":ref:`sphx_glr_examples_99-advanced_antarctica-compare.py`"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:46
#: ../../pyvista/doc/source/examples/index.rst:2667
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Compare Field Across Mesh Regions</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Compare Field Across Mesh Regions</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:52
#: ../../pyvista/doc/source/examples/index.rst:2673
msgid "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Plot Atomic Orbitals\">"
msgstr "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Plot Atomic Orbitals\">"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:61
#: ../../pyvista/doc/source/examples/index.rst:2682
msgid ":ref:`sphx_glr_examples_99-advanced_atomic-orbitals.py`"
msgstr ":ref:`sphx_glr_examples_99-advanced_atomic-orbitals.py`"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:63
#: ../../pyvista/doc/source/examples/index.rst:2684
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Plot Atomic Orbitals</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Plot Atomic Orbitals</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:69
#: ../../pyvista/doc/source/examples/index.rst:2690
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Bring more of the power of "
"trame to the jupyter view.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Bring more of the power of "
"trame to the jupyter view.\">"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:78
#: ../../pyvista/doc/source/examples/index.rst:2699
msgid ":ref:`sphx_glr_examples_99-advanced_customization-trame-toolbar.py`"
msgstr ":ref:`sphx_glr_examples_99-advanced_customization-trame-toolbar.py`"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:80
#: ../../pyvista/doc/source/examples/index.rst:2701
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Customize Trame toolbar</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Customize Trame toolbar</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:86
#: ../../pyvista/doc/source/examples/index.rst:2707
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"A pyvista.DataSet, such as "
"pyvista.PolyData, can be extended by users.  For example, if the use...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"A pyvista.DataSet, such as "
"pyvista.PolyData, can be extended by users.  For example, if the use...\">"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:95
#: ../../pyvista/doc/source/examples/index.rst:2716
msgid ":ref:`sphx_glr_examples_99-advanced_extending-pyvista.py`"
msgstr ":ref:`sphx_glr_examples_99-advanced_extending-pyvista.py`"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:97
#: ../../pyvista/doc/source/examples/index.rst:2718
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Extending PyVista</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Extending PyVista</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:103
#: ../../pyvista/doc/source/examples/index.rst:2724
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example loads a "
"dataset, constructs a line to represent the point of contact between the "
"c...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example loads a "
"dataset, constructs a line to represent the point of contact between the "
"c...\">"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:112
#: ../../pyvista/doc/source/examples/index.rst:2733
msgid ":ref:`sphx_glr_examples_99-advanced_fea-hertzian-contact-pressure.py`"
msgstr ":ref:`sphx_glr_examples_99-advanced_fea-hertzian-contact-pressure.py`"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:114
#: ../../pyvista/doc/source/examples/index.rst:2735
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Visualize Hertzian Contact Stress</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Visualize Hertzian Contact Stress</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:120
#: ../../pyvista/doc/source/examples/index.rst:2741
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The following example "
"demonstrates how PyVista can be used to plot a magnetic field.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"The following example "
"demonstrates how PyVista can be used to plot a magnetic field.\">"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:129
#: ../../pyvista/doc/source/examples/index.rst:2750
msgid ":ref:`sphx_glr_examples_99-advanced_magnetic-fields.py`"
msgstr ":ref:`sphx_glr_examples_99-advanced_magnetic-fields.py`"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:131
#: ../../pyvista/doc/source/examples/index.rst:2752
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Plot a Magnetic Field</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Plot a Magnetic Field</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:137
#: ../../pyvista/doc/source/examples/index.rst:2758
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example dataset was "
"read using the pyvista.POpenFOAMReader and post processed according to...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example dataset was "
"read using the pyvista.POpenFOAMReader and post processed according to...\">"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:146
#: ../../pyvista/doc/source/examples/index.rst:2767
msgid ":ref:`sphx_glr_examples_99-advanced_openfoam-cooling.py`"
msgstr ":ref:`sphx_glr_examples_99-advanced_openfoam-cooling.py`"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:148
#: ../../pyvista/doc/source/examples/index.rst:2769
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Electronics Cooling CFD</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Electronics Cooling CFD</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:154
#: ../../pyvista/doc/source/examples/index.rst:2775
msgid "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Plot OpenFOAM data\">"
msgstr "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Plot OpenFOAM data\">"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:163
#: ../../pyvista/doc/source/examples/index.rst:2784
msgid ":ref:`sphx_glr_examples_99-advanced_openfoam-example.py`"
msgstr ":ref:`sphx_glr_examples_99-advanced_openfoam-example.py`"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:165
#: ../../pyvista/doc/source/examples/index.rst:2786
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Plot OpenFOAM data</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Plot OpenFOAM data</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:171
#: ../../pyvista/doc/source/examples/index.rst:2792
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example dataset was "
"read using the pyvista.POpenFOAMReader. See openfoam_example for a ful...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example dataset was "
"read using the pyvista.POpenFOAMReader. See openfoam_example for a ful...\">"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:180
#: ../../pyvista/doc/source/examples/index.rst:2801
msgid ":ref:`sphx_glr_examples_99-advanced_openfoam-tubes.py`"
msgstr ":ref:`sphx_glr_examples_99-advanced_openfoam-tubes.py`"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:182
#: ../../pyvista/doc/source/examples/index.rst:2803
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Plot CFD Data</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Plot CFD Data</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:188
#: ../../pyvista/doc/source/examples/index.rst:2809
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This was originally posted "
"to pyvista/pyvista-support#486.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This was originally posted "
"to pyvista/pyvista-support#486.\">"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:197
#: ../../pyvista/doc/source/examples/index.rst:2818
msgid ":ref:`sphx_glr_examples_99-advanced_osmnx-example.py`"
msgstr ":ref:`sphx_glr_examples_99-advanced_osmnx-example.py`"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:199
#: ../../pyvista/doc/source/examples/index.rst:2820
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Plot Open Street Map Data</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Plot Open Street Map Data</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:205
#: ../../pyvista/doc/source/examples/index.rst:2826
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Plot the solar system in "
"PyVista.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Plot the solar system in "
"PyVista.\">"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:214
#: ../../pyvista/doc/source/examples/index.rst:2835
msgid ":ref:`sphx_glr_examples_99-advanced_planets.py`"
msgstr ":ref:`sphx_glr_examples_99-advanced_planets.py`"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:216
#: ../../pyvista/doc/source/examples/index.rst:2837
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">3D Earth and Celestial Bodies</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">3D Earth and Celestial Bodies</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:222
#: ../../pyvista/doc/source/examples/index.rst:2843
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Pass a vtkAlgorithm to the "
"Plotter for dynamic visualizations.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Pass a vtkAlgorithm to the "
"Plotter for dynamic visualizations.\">"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:231
#: ../../pyvista/doc/source/examples/index.rst:2852
msgid ":ref:`sphx_glr_examples_99-advanced_plotting-algorithms.py`"
msgstr ":ref:`sphx_glr_examples_99-advanced_plotting-algorithms.py`"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:233
#: ../../pyvista/doc/source/examples/index.rst:2854
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Plotting with VTK Algorithms</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Plotting with VTK Algorithms</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:239
#: ../../pyvista/doc/source/examples/index.rst:2860
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Background Modal analysis "
"is the study of the dynamic properties of mechanical structures in th...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Background Modal analysis "
"is the study of the dynamic properties of mechanical structures in th...\">"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:248
#: ../../pyvista/doc/source/examples/index.rst:2869
msgid ":ref:`sphx_glr_examples_99-advanced_pump-bracket.py`"
msgstr ":ref:`sphx_glr_examples_99-advanced_pump-bracket.py`"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:250
#: ../../pyvista/doc/source/examples/index.rst:2871
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Visualize Modal Analysis of a Pump Bracket</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Visualize Modal Analysis of a Pump Bracket</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:256
#: ../../pyvista/doc/source/examples/index.rst:2877
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example demonstrates "
"the Moeller–Trumbore intersection algorithm using pyvista.\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example demonstrates "
"the Moeller–Trumbore intersection algorithm using pyvista.\">"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:265
#: ../../pyvista/doc/source/examples/index.rst:2886
msgid ":ref:`sphx_glr_examples_99-advanced_ray-trace-moeller.py`"
msgstr ":ref:`sphx_glr_examples_99-advanced_ray-trace-moeller.py`"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:267
#: ../../pyvista/doc/source/examples/index.rst:2888
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Visualize the Moeller–Trumbore Algorithm</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Visualize the Moeller–Trumbore Algorithm</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:282
#: ../../pyvista/doc/source/examples/index.rst:2903
msgid ":ref:`sphx_glr_examples_99-advanced_ray-trace.py`"
msgstr ":ref:`sphx_glr_examples_99-advanced_ray-trace.py`"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:290
#: ../../pyvista/doc/source/examples/index.rst:2911
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"There are several videos "
"online talking about how a sphere can be turned inside out in a contin...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"There are several videos "
"online talking about how a sphere can be turned inside out in a contin...\">"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:299
#: ../../pyvista/doc/source/examples/index.rst:2920
msgid ":ref:`sphx_glr_examples_99-advanced_sphere_eversion.py`"
msgstr ":ref:`sphx_glr_examples_99-advanced_sphere_eversion.py`"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:301
#: ../../pyvista/doc/source/examples/index.rst:2922
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Turning the sphere inside out</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Turning the sphere inside out</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:307
#: ../../pyvista/doc/source/examples/index.rst:2928
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example applies the "
"pyvista.DataSetFilters.warp_by_vector filter to a cube whose eigenmode...\">"
msgstr ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"This example applies the "
"pyvista.DataSetFilters.warp_by_vector filter to a cube whose eigenmode...\">"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:316
#: ../../pyvista/doc/source/examples/index.rst:2937
msgid ":ref:`sphx_glr_examples_99-advanced_warp-by-vector-eigenmodes.py`"
msgstr ":ref:`sphx_glr_examples_99-advanced_warp-by-vector-eigenmodes.py`"

#: ../../pyvista/doc/source/examples/99-advanced/index.rst:318
#: ../../pyvista/doc/source/examples/index.rst:2939
msgid ""
"  <div class=\"sphx-glr-thumbnail-title\">Display Eigenmodes of Vibration</div>\n"
"</div>"
msgstr ""
"  <div class=\"sphx-glr-thumbnail-title\">Display Eigenmodes of Vibration</div>\n"
"</div>"

#: ../../pyvista/doc/source/examples/99-advanced/magnetic-fields.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_99-advanced_magnetic-"
"fields.py>` to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_99-advanced_magnetic-"
"fields.py>` をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/99-advanced/magnetic-fields.rst:24
msgid "Plot a Magnetic Field"
msgstr "磁場をプロットする"

#: ../../pyvista/doc/source/examples/99-advanced/magnetic-fields.rst:26
msgid ""
"The following example demonstrates how PyVista can be used to plot a "
"magnetic field."
msgstr "次の例は，PyVistaを使用して磁場をプロットする方法を示しています．"

#: ../../pyvista/doc/source/examples/99-advanced/magnetic-fields.rst:29
msgid ""
"This example relies on :func:`streamlines_from_source() "
"<pyvista.PolyDataFilters.streamlines_from_source>` to generate streamlines "
"and :func:`add_volume() <pyvista.Plotter.add_volume>` to plot the strength "
"of the magnetic field."
msgstr ""
"この例では，流線の生成に :func:`streamlines_from_source() "
"<pyvista.PolyDataFilters.streamlines_from_source>` ，磁場の強さをプロットする "
":func:`add_volume() <pyvista.Plotter.add_volume>` に依存します．"

#: ../../pyvista/doc/source/examples/99-advanced/magnetic-fields.rst:34
msgid ""
"This dataset was created from the `Coil Field Lines "
"<https://magpylib.readthedocs.io/en/latest/examples/examples_30_coil_field_lines.html>`_"
" example from the awesome `magpylib <https://github.com/magpylib/magpylib>`_"
" library."
msgstr ""
"このデータセットは，素晴らしいライブラリ `magpylib <https://github.com/magpylib/magpylib>`_ の "
"`Coil Field Lines "
"<https://magpylib.readthedocs.io/en/latest/examples/examples_30_coil_field_lines.html>`_"
" の例から作成しました．"

#: ../../pyvista/doc/source/examples/99-advanced/magnetic-fields.rst:59
msgid "Download the DataSet"
msgstr "データセットのダウンロード"

#: ../../pyvista/doc/source/examples/99-advanced/magnetic-fields.rst:60
msgid ""
"Let's first download the example dataset and show that it's a "
":class:`pyvista.ImageData` with the magnetic field stored as the ``'B'`` "
"array in ``point_data``."
msgstr ""
"まず，例のデータセットをダウンロードし，それが :class:`pyvista.ImageData` で，磁場は ``point_data`` の "
"``'B'`` 配列として格納されていることを示します．"

#: ../../pyvista/doc/source/examples/99-advanced/magnetic-fields.rst:96
msgid "Create Coils"
msgstr "コイルを作る"

#: ../../pyvista/doc/source/examples/99-advanced/magnetic-fields.rst:97
msgid ""
"Create several hoops to represent the coil. This matches the geometry in the"
" original example."
msgstr "コイルを表現するためにいくつかのフープを作成します．これは，元の例のジオメトリと一致します．"

#: ../../pyvista/doc/source/examples/99-advanced/magnetic-fields.rst:127
msgid "Compute and Plot Field Lines"
msgstr "フィールドラインの計算とプロット"

#: ../../pyvista/doc/source/examples/99-advanced/magnetic-fields.rst:128
msgid ""
"Next, let's compute streamlines from the center of the coil to represent the"
" direction of the magnetic force. For this, we can create a simple "
":func:`pyvista.Disc` and use that as the source of the streamlines."
msgstr ""
"次に，磁力の方向を表すために，コイルの中心からの流線を計算しましょう．これには，単純な :func:`pyvista.Disc` "
"を作成し，それを流線のソースとして使用することができます．"

#: ../../pyvista/doc/source/examples/99-advanced/magnetic-fields.rst:172
msgid "Plot the Magnet Field Strength"
msgstr "磁石の磁場強度をプロットする"

#: ../../pyvista/doc/source/examples/99-advanced/magnetic-fields.rst:173
msgid ""
"Finally, let's bring this all together by plotting the magnetic field "
"strength while also plotting the streamlines and the coil."
msgstr "最後に，磁場の強さをプロットしながら，流線とコイルをプロットして，全体をまとめましょう．"

#: ../../pyvista/doc/source/examples/99-advanced/magnetic-fields.rst:220
msgid "**Total running time of the script:** ( 0 minutes  16.749 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  16.749 seconds)"

#: ../../pyvista/doc/source/examples/99-advanced/magnetic-fields.rst:234
msgid ""
":download:`Download Python source code: magnetic-fields.py <magnetic-"
"fields.py>`"
msgstr ""
":download:`Download Python source code: magnetic-fields.py <magnetic-"
"fields.py>`"

#: ../../pyvista/doc/source/examples/99-advanced/magnetic-fields.rst:238
msgid ""
":download:`Download Jupyter notebook: magnetic-fields.ipynb <magnetic-"
"fields.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: magnetic-fields.ipynb <magnetic-"
"fields.ipynb>`"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-cooling.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_99-advanced_openfoam-"
"cooling.py>` to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_99-advanced_openfoam-"
"cooling.py>` をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-cooling.rst:23
msgid "Electronics Cooling CFD"
msgstr "電子機器の冷却CFD"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-cooling.rst:24
msgid ""
"Plot an electronics cooling CFD example from OpenFoam hosted on the public "
"SimScale examples at `SimScale Project Library "
"<https://www.simscale.com/projects/>`_ and generated from the `Thermal "
"Management Tutorial: CHT Analysis of an Electronics Box "
"<https://www.simscale.com/docs/tutorials/thermal-management-cht-analysis-"
"electronics-box/>`_."
msgstr ""
"`SimScale Project Library <https://www.simscale.com/projects/>`_ "
"にあるSimScaleの公開サンプルでホストされているOpenFoamの電子機器冷却CFD例をプロットし， `Thermal Management "
"Tutorial: CHT Analysis of an Electronics Box "
"<https://www.simscale.com/docs/tutorials/thermal-management-cht-analysis-"
"electronics-box/>`_ から生成します．"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-cooling.rst:30
msgid ""
"This example dataset was read using the :class:`pyvista.POpenFOAMReader` and"
" post processed according to this `README.md "
"<https://github.com/pyvista/vtk-"
"data/blob/master/Data/fvm/cooling_electronics/README.md>`_."
msgstr ""
"このサンプルデータセットは :class:`pyvista.POpenFOAMReader` を使って読み込まれ，この `README.md "
"<https://github.com/pyvista/vtk-"
"data/blob/master/Data/fvm/cooling_electronics/README.md>`_ に従ってポスト処理されました．"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-cooling.rst:54
msgid "Load the Datasets"
msgstr "データセットを読み込む"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-cooling.rst:55
msgid "Download and load the datasets."
msgstr "データセットをダウンロードし，ロードします．"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-cooling.rst:57
msgid ""
"The ``structure`` dataset consists of a box with several components, being "
"cooled down by a fan, while the ``air`` dataset is the air, containing "
"several scalar arrays including the velocity and temperature of the air."
msgstr ""
"``structure`` データセットは，ファンによって冷却される複数の部品を持つ箱からなり， ``air`` "
"データセットは，空気の速度と温度を含むいくつかのスカラー配列を含む空気です．"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-cooling.rst:99
msgid "Plot the Electronics"
msgstr "電子機器をプロットする"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-cooling.rst:100
msgid ""
"Here we plot the temperature of the electronics using the ``\"reds\"`` "
"colormap and improve the look of the plot using surface space ambient "
"occlusion with :func:`enable_ssao() <pyvista.Plotter.enable_ssao>`."
msgstr ""
"ここでは， ``\"赤\"`` のカラーマップを使って電子機器の温度をプロットし， :func:`enable_ssao() "
"<pyvista.Plotter.enable_ssao>` で表面空間の環境オクルージョンを使ってプロットの見た目を改善しました．"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-cooling.rst:133
msgid "Plot Air Velocity"
msgstr "風速のプロット"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-cooling.rst:134
msgid "Let's plot the velocity of the air."
msgstr "空気の速度をプロットしてみましょう．"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-cooling.rst:136
msgid ""
"Start by clipping the air dataset with :func:`clip() "
"<pyvista.DataSetFilters.clip>` and plotting it alongside the electronics."
msgstr ""
":func:`clip() <pyvista.DataSetFilters.clip>` "
"で空気データセットを切り抜き，電子機器と並べてプロットするところから始めます．"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-cooling.rst:139
msgid ""
"As you can see, the air enters from the front of the case (left) and is "
"being pushed out of the \"back\" of the case via a fan."
msgstr "ご覧のように，空気はケースの前面(左)から入り，ファンを介してケースの \"背面\" から押し出されているのです．"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-cooling.rst:176
msgid "Plot Air Temperature"
msgstr "気温のプロット"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-cooling.rst:177
msgid ""
"Let's also plot the temperature of the air. This time, let's also plot the "
"temperature of the components."
msgstr "空気の温度もプロットしてみましょう．今回は，部品の温度もプロットしてみましょう．"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-cooling.rst:219
#: ../../pyvista/doc/source/examples/99-advanced/openfoam-tubes.rst:128
msgid "Plot Streamlines - Flow Velocity"
msgstr "流線のプロット - 流体速度"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-cooling.rst:220
msgid ""
"Now, let's plot the streamlines of this dataset so we can see how the air is"
" flowing through the case."
msgstr "では，このデータセットの流線をプロットして，空気がケース内をどのように流れているのかを見てみましょう．"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-cooling.rst:223
#: ../../pyvista/doc/source/examples/99-advanced/openfoam-tubes.rst:129
msgid ""
"Generate streamlines using :func:`streamlines_from_source() "
"<pyvista.DataSetFilters.streamlines_from_source>`."
msgstr ""
":func:`streamlines_from_source() "
"<pyvista.DataSetFilters.streamlines_from_source>` を使って流線を生成します．"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-cooling.rst:271
msgid "Volumetric Plot - Visualize High Temperatures"
msgstr "ボリューメトリックプロット - 高温を可視化する"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-cooling.rst:272
msgid "Show a 3D plot of areas of temperature."
msgstr "温度の面積の3Dプロットを表示します．"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-cooling.rst:274
#: ../../pyvista/doc/source/examples/99-advanced/openfoam-tubes.rst:216
msgid ""
"For this example, we will first sample the results from the "
":class:`pyvista.UnstructuredGrid` onto a :class:`pyvista.ImageData` using "
":func:`sample() <pyvista.DataSetFilters.sample>`. This is so we can "
"visualize it using :func:`add_volume() <pyvista.Plotter.add_volume>`"
msgstr ""
"この例では，まず :class:`pyvista.UnstructuredGrid` から :class:`pyvista.ImageData` に "
":func:`sample() <pyvista.DataSetFilters.sample>` で結果を抽出してみます．これは "
":func:`add_volume() <pyvista.Plotter.add_volume>` を使って可視化できるようにするためです．"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-cooling.rst:327
msgid "**Total running time of the script:** ( 0 minutes  27.844 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  27.844 seconds)"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-cooling.rst:341
msgid ""
":download:`Download Python source code: openfoam-cooling.py <openfoam-"
"cooling.py>`"
msgstr ""
":download:`Download Python source code: openfoam-cooling.py <openfoam-"
"cooling.py>`"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-cooling.rst:345
msgid ""
":download:`Download Jupyter notebook: openfoam-cooling.ipynb <openfoam-"
"cooling.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: openfoam-cooling.ipynb <openfoam-"
"cooling.ipynb>`"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-example.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_99-advanced_openfoam-"
"example.py>` to download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_99-advanced_openfoam-example.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-example.rst:24
msgid "Plot OpenFOAM data"
msgstr "OpenFOAMデータのプロット"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-example.rst:43
msgid ""
"This example uses data from a lid-driven cavity flow.  It is recommended to "
"use :class:`pyvista.POpenFOAMReader` for reading OpenFOAM files for more "
"control over reading data."
msgstr ""
"この例では，天井駆動のcavity流れのデータを使用しています． OpenFOAMファイルの読み込みには，データの読み込みをよりコントロールするために，"
" :class:`pyvista.POpenFOAMReader` を使用することをお勧めします．"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-example.rst:47
msgid ""
"This example will only run correctly in versions of vtk>=9.1.0.  The names "
"of the patch arrays and resulting keys in the read mesh will be different in"
" prior versions."
msgstr ""
"この例は，vtk>=9.1.0のバージョンでのみ正しく動作します．それ以前のバージョンでは，パッチ配列の名前と，読み込んだメッシュのキーの結果が異なります．"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-example.rst:68
msgid ""
"OpenFOAM datasets include multiple sub-datasets including the internal mesh "
"and patches, typically boundaries.  This can be inspected before reading the"
" data."
msgstr ""
"OpenFOAMのデータセットには，内部メッシュやパッチ，通常は境界を含む複数のサブデータセットが含まれています．これは，データを読み込む前に検査することができます．"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-example.rst:97
msgid ""
"This data is represented as a :class:`pyvista.MultiBlock` object. The "
"internal mesh will be located in the top-level MultiBlock mesh."
msgstr ""
"このデータは :class:`pyvista.MultiBlock` "
"オブジェクトとして表現されます．内部のメッシュは，トップレベルのMultiBlockメッシュに配置されます．"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-example.rst:126
msgid "In this case the internal mesh is a :class:`pyvista.UnstructuredGrid`."
msgstr "この場合，内部メッシュは :class:`pyvista.UnstructuredGrid` となります．"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-example.rst:159
msgid ""
"Additional Patch meshes are nested inside another MultiBlock mesh.  The name"
" of the sub-level MultiBlock mesh depends on the vtk version."
msgstr ""
"追加のPatchメッシュは，別のMultiBlockメッシュの中に入れ子になっています．サブレベルのMultiBlockメッシュの名前は，vtkのバージョンによって異なります．"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-example.rst:203
msgid ""
"The default in OpenFOAMReader is to translate the existing cell data to "
"point data.  Therefore, the cell data arrays are duplicated in point data."
msgstr ""
"OpenFOAMReaderのデフォルトでは，既存のセルデータをポイントデータに変換します．そのため，セルデータの配列はポイントデータに複製されます．"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-example.rst:253
msgid "This behavior can be turned off if only cell data is required."
msgstr "セルデータのみが必要な場合は，この動作をオフにすることができます．"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-example.rst:302
msgid "Now we will read in all the data at the last time point."
msgstr "ここで，最後の時刻でのすべてのデータを読み込んでみます．"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-example.rst:333
msgid ""
"This OpenFOAM simulation is in 3D with only 1 cell in the z-direction.  "
"First, the solution is sliced in the center of the z-direction. "
":func:`pyvista.DataSetFilters.streamlines_evenly_spaced_2D` requires the "
"data to lie in the z=0 plane.  So, after the domain sliced, it is translated"
" to ``z=0``."
msgstr ""
"このOpenFOAMシミュレーションは，z方向に1つのセルしかない3Dである． "
":func:`pyvista.DataSetFilters.streamlines_evenly_spaced_2D` "
"では，データがz=0の平面上にあることが必要です．そのため，領域をスライスした後， ``z=0`` に変換します．"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-example.rst:367
msgid "Streamlines are generated using the point data \"U\"."
msgstr "流線はポイントデータ \"U\" を使って生成されます．"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-example.rst:390
msgid ""
"Plot streamlines colored by velocity magnitude.  Additionally, the moving "
"and fixed wall boundaries are plotted."
msgstr "速度の大きさで色分けされた流線をプロットします．さらに，移動壁と固定壁の境界線をプロットしています．"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-example.rst:420
msgid "**Total running time of the script:** ( 0 minutes  0.984 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  0.984 seconds)"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-example.rst:435
msgid ""
":download:`Download Python source code: openfoam-example.py <openfoam-"
"example.py>`"
msgstr ""
":download:`Download Python source code: openfoam-example.py <openfoam-"
"example.py>`"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-example.rst:441
msgid ""
":download:`Download Jupyter notebook: openfoam-example.ipynb <openfoam-"
"example.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: openfoam-example.ipynb <openfoam-"
"example.ipynb>`"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-tubes.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_99-advanced_openfoam-"
"tubes.py>` to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_99-advanced_openfoam-"
"tubes.py>` をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-tubes.rst:23
msgid "Plot CFD Data"
msgstr "CFDデータをプロットする"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-tubes.rst:24
msgid ""
"Plot a CFD example from OpenFoam hosted on the public SimScale examples at "
"`SimScale Project Library <https://www.simscale.com/projects/>`_."
msgstr ""
"`SimScale Project Library <https://www.simscale.com/projects/>`_ "
"にあるSimScaleの公開サンプルにホストされているOpenFoamのCFD例をプロットします．"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-tubes.rst:27
msgid ""
"This example dataset was read using the :class:`pyvista.POpenFOAMReader`. "
"See :ref:`openfoam_example` for a full example using this reader."
msgstr ""
"このサンプルデータセットは :class:`pyvista.POpenFOAMReader` "
"を使って読み込まれました．このリーダーを使用した完全な例については :ref:`openfoam_example` を参照してください．"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-tubes.rst:49
msgid "Download and load the example dataset."
msgstr "サンプルデータセットをダウンロードし，ロードします．"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-tubes.rst:65
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Information</th><th>Blocks</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>MultiBlock</th><th>Values</th></tr>\n"
"<tr><td>N Blocks</td><td>2</td></tr>\n"
"<tr><td>X Bounds</td><td>-0.128, 0.128</td></tr>\n"
"<tr><td>Y Bounds</td><td>-0.028, 0.028</td></tr>\n"
"<tr><td>Z Bounds</td><td>-0.014, 0.249</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Index</th><th>Name</th><th>Type</th></tr>\n"
"<tr><th>0</th><th>internalMesh</th><th>UnstructuredGrid</th></tr>\n"
"<tr><th>1</th><th>boundary</th><th>MultiBlock</th></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Information</th><th>Blocks</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>MultiBlock</th><th>Values</th></tr>\n"
"<tr><td>N Blocks</td><td>2</td></tr>\n"
"<tr><td>X Bounds</td><td>-0.128, 0.128</td></tr>\n"
"<tr><td>Y Bounds</td><td>-0.028, 0.028</td></tr>\n"
"<tr><td>Z Bounds</td><td>-0.014, 0.249</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Index</th><th>Name</th><th>Type</th></tr>\n"
"<tr><th>0</th><th>internalMesh</th><th>UnstructuredGrid</th></tr>\n"
"<tr><th>1</th><th>boundary</th><th>MultiBlock</th></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-tubes.rst:92
msgid "Plot Cross Section"
msgstr "断面図のプロット"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-tubes.rst:93
msgid ""
"Plot the outline of the dataset along with a cross section of the flow "
"velocity."
msgstr "データセットの外形を流速の断面図とともにプロットします．"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-tubes.rst:161
msgid ""
"Now, actually generate the streamlines. Since the original inlet contains "
"1000 points, let's reduce this to around 200 points by using every 5th "
"point."
msgstr "では，実際に流線を生成してみましょう．元のインレットは1000点あるので，これを5点おきに使って200点程度に減らしてみましょう．"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-tubes.rst:165
msgid ""
"If we wanted a uniform subsampling of the inlet, we could use "
"`pyvista/pyacvd <https://github.com/pyvista/pyacvd>`_"
msgstr ""
"もし，インレットの均一なサブサンプリングが必要なら， `pyvista/pyacvd "
"<https://github.com/pyvista/pyacvd>`_ を使うことができます．"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-tubes.rst:211
msgid "Volumetric Plot - Visualize Turbulent Kinematic Viscosity"
msgstr "ボリューメトリックプロット - 渦粘性係数の可視化"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-tubes.rst:212
msgid ""
"The turbulent kinematic viscosity of a fluid is a derived quantity used in "
"turbulence modeling to describe the effect of turbulent motion on the "
"momentum transport within the fluid."
msgstr "流体の渦粘性係数は，乱流モデリングにおいて，乱流運動が流体内の運動量輸送に及ぼす影響を記述するために用いられる派生量です．"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-tubes.rst:263
msgid "**Total running time of the script:** ( 0 minutes  10.730 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  10.730 seconds)"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-tubes.rst:277
msgid ""
":download:`Download Python source code: openfoam-tubes.py <openfoam-"
"tubes.py>`"
msgstr ""
":download:`Download Python source code: openfoam-tubes.py <openfoam-"
"tubes.py>`"

#: ../../pyvista/doc/source/examples/99-advanced/openfoam-tubes.rst:281
msgid ""
":download:`Download Jupyter notebook: openfoam-tubes.ipynb <openfoam-"
"tubes.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: openfoam-tubes.ipynb <openfoam-"
"tubes.ipynb>`"

#: ../../pyvista/doc/source/examples/99-advanced/osmnx-example.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_99-advanced_osmnx-example.py>` "
"to download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_99-advanced_osmnx-example.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/99-advanced/osmnx-example.rst:24
msgid "Plot Open Street Map Data"
msgstr "オープンストリートマップデータのプロット"

#: ../../pyvista/doc/source/examples/99-advanced/osmnx-example.rst:26
msgid ""
"This was originally posted to `pyvista/pyvista-support#486 "
"<https://github.com/pyvista/pyvista-support/issues/486>`_."
msgstr ""
"これは元々 `pyvista/pyvista-support#486 <https://github.com/pyvista/pyvista-"
"support/issues/486>`_ に投稿されました．"

#: ../../pyvista/doc/source/examples/99-advanced/osmnx-example.rst:28
msgid "Be sure to check out `osmnx <https://github.com/gboeing/osmnx>`_"
msgstr "`osmnx <https://github.com/gboeing/osmnx>`_ をチェックアウトしてください．"

#: ../../pyvista/doc/source/examples/99-advanced/osmnx-example.rst:30
msgid "Start by generating a graph from an address."
msgstr "まず，アドレスからグラフを生成します．"

#: ../../pyvista/doc/source/examples/99-advanced/osmnx-example.rst:54
msgid "Read in the graph directly from the Open Street Map server."
msgstr "Open Street Mapサーバーから直接グラフを読み込んでください．"

#: ../../pyvista/doc/source/examples/99-advanced/osmnx-example.rst:77
msgid ""
"Next, convert the edges into pyvista lines using "
":func:`pyvista.lines_from_points`."
msgstr "次に， :func:`pyvista.lines_from_points` を使って，エッジを pyvista の線に変換します．"

#: ../../pyvista/doc/source/examples/99-advanced/osmnx-example.rst:107
msgid "Finally, merge the lines and plot"
msgstr "最後に，ラインをマージしてプロットします"

#: ../../pyvista/doc/source/examples/99-advanced/osmnx-example.rst:131
msgid "**Total running time of the script:** ( 0 minutes  0.846 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  0.846 seconds)"

#: ../../pyvista/doc/source/examples/99-advanced/osmnx-example.rst:146
msgid ""
":download:`Download Python source code: osmnx-example.py <osmnx-example.py>`"
msgstr ""
":download:`Download Python source code: osmnx-example.py <osmnx-example.py>`"

#: ../../pyvista/doc/source/examples/99-advanced/osmnx-example.rst:152
msgid ""
":download:`Download Jupyter notebook: osmnx-example.ipynb <osmnx-"
"example.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: osmnx-example.ipynb <osmnx-"
"example.ipynb>`"

#: ../../pyvista/doc/source/examples/99-advanced/planets.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_99-advanced_planets.py>` to "
"download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_99-advanced_planets.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/99-advanced/planets.rst:24
msgid "3D Earth and Celestial Bodies"
msgstr "3D地球と天体"

#: ../../pyvista/doc/source/examples/99-advanced/planets.rst:26
msgid "Plot the solar system in PyVista."
msgstr "PyVistaで太陽系をプロットする．"

#: ../../pyvista/doc/source/examples/99-advanced/planets.rst:28
msgid ""
"This example is inspired by `planet3D-MATLAB "
"<https://github.com/tamaskis/planet3D-MATLAB>`_."
msgstr ""
"この例は `planet3D-MATLAB <https://github.com/tamaskis/planet3D-MATLAB>`_ "
"に触発されたものです．"

#: ../../pyvista/doc/source/examples/99-advanced/planets.rst:32
msgid ""
"The purpose of this example is to demonstrate plotting celestial bodies and "
"may lack astronomical precision. There may be inaccuracies in the "
"representation, so please take care when reusing or repurposing this "
"example."
msgstr ""
"この例は，天体のプロットには天文的な正確さが欠けている可能性があることを示すためのものです．そのため，この例を再利用する場合はご注意ください．"

#: ../../pyvista/doc/source/examples/99-advanced/planets.rst:37
msgid ""
"Please take a look at libraries like `astropy <https://www.astropy.org/>`_ "
"if you wish to use Python for astronomical calculations."
msgstr ""
"天文計算にPythonを使いたい場合は， `astropy <https://www.astropy.org/>`_ "
"のようなライブラリを見てみてください．"

#: ../../pyvista/doc/source/examples/99-advanced/planets.rst:57
msgid "Plot the Solar System with Stars in the Background"
msgstr "星を背景に太陽系をプロットする"

#: ../../pyvista/doc/source/examples/99-advanced/planets.rst:58
msgid ""
"This section relies on calculations in `Visualizing Celestial Bodies in 3D "
"<https://tamaskis.github.io/files/Visualizing_Celestial_Bodies_in_3D.pdf>`_."
msgstr ""
"ここでは， `Visualizing Celestial Bodies in 3D "
"<https://tamaskis.github.io/files/Visualizing_Celestial_Bodies_in_3D.pdf>`_ "
"の計算を参考にしています．"

#: ../../pyvista/doc/source/examples/99-advanced/planets.rst:142
msgid "Plot the Planets and their Textures"
msgstr "惑星とそのテクスチャをプロットする"

#: ../../pyvista/doc/source/examples/99-advanced/planets.rst:143
msgid ""
"Each planet here is in a different subplot. The planet's textures are from "
"`Solar Textures <https://www.solarsystemscope.com/textures/>`_."
msgstr ""
"ここでは，それぞれの惑星が異なるサブプロットにあります．惑星のテクスチャは `Solar Textures "
"<https://www.solarsystemscope.com/textures/>`_ のものを使用しています．"

#: ../../pyvista/doc/source/examples/99-advanced/planets.rst:185
msgid "Plot the Atmosphere and Surface of Venus"
msgstr "金星の大気と地表をプロットする"

#: ../../pyvista/doc/source/examples/99-advanced/planets.rst:186
msgid "Here we plot Venus with and without its atmosphere."
msgstr "ここでは，大気のある金星と大気のない金星をプロットしています．"

#: ../../pyvista/doc/source/examples/99-advanced/planets.rst:221
msgid "**Total running time of the script:** ( 3 minutes  39.245 seconds)"
msgstr "**Total running time of the script:** ( 3 minutes  39.245 seconds)"

#: ../../pyvista/doc/source/examples/99-advanced/planets.rst:235
msgid ":download:`Download Python source code: planets.py <planets.py>`"
msgstr ":download:`Download Python source code: planets.py <planets.py>`"

#: ../../pyvista/doc/source/examples/99-advanced/planets.rst:239
msgid ":download:`Download Jupyter notebook: planets.ipynb <planets.ipynb>`"
msgstr ":download:`Download Jupyter notebook: planets.ipynb <planets.ipynb>`"

#: ../../pyvista/doc/source/examples/99-advanced/plotting-algorithms.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_99-advanced_plotting-"
"algorithms.py>` to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_99-advanced_plotting-"
"algorithms.py>` to download the full example code"

#: ../../pyvista/doc/source/examples/99-advanced/plotting-algorithms.rst:22
msgid "Plotting with VTK Algorithms"
msgstr "VTKアルゴリズムでプロットする"

#: ../../pyvista/doc/source/examples/99-advanced/plotting-algorithms.rst:24
msgid "Pass a ``vtkAlgorithm`` to the ``Plotter`` for dynamic visualizations."
msgstr "動的なビジュアライゼーションのために， ``vtkAlgorithm`` を ``Plotter`` に渡します．"

#: ../../pyvista/doc/source/examples/99-advanced/plotting-algorithms.rst:27
msgid ""
"By \"dynamic visualization\" we mean that as the input data/source changes, "
"so will the visualization in real time."
msgstr "\"動的な可視化\" とは，入力データ/ソースが変化すると，リアルタイムに可視化されることを意味します．"

#: ../../pyvista/doc/source/examples/99-advanced/plotting-algorithms.rst:30
msgid ""
"A ``vtkAlgorithm`` is the superclass for all sources, filters, and sinks in "
"VTK. It defines a generalized interface for executing data processing "
"algorithms. Pipeline connections are associated with input and output ports "
"that are independent of the type of data passing through the connections."
msgstr ""
"``vtkAlgorithm`` は，VTK "
"のすべてのソース，フィルタ，シンクのスーパークラスです．これは，データ処理アルゴリズムを実行するための一般的なインターフェイスを定義しています．パイプライン接続は，接続を通過するデータの種類に依存しない入力ポートと出力ポートに関連付けられます．"

#: ../../pyvista/doc/source/examples/99-advanced/plotting-algorithms.rst:36
msgid ""
"We can connect the output port of a ``vtkAlgorithm`` to PyVista's rendering "
"pipeline when adding data to the scene through methods like "
":func:`add_mesh() <pyvista.Plotter.add_mesh>`."
msgstr ""
":func:`add_mesh() <pyvista.Plotter.add_mesh>` などのメソッドを用いて，シーンにデータを追加する際に "
"``vtkAlgorithm`` の出力ポートを PyVista の描画パイプラインに接続することが可能です．"

#: ../../pyvista/doc/source/examples/99-advanced/plotting-algorithms.rst:40
msgid ""
"This example will walk through using a few ``vtkAlgorithm`` filters directly"
" and passing them to PyVista for dynamic visualization."
msgstr ""
"この例では，いくつかの ``vtkAlgorithm`` フィルタを直接使用し，それを PyVista に渡して動的な視覚化を行う方法を説明します．"

#: ../../pyvista/doc/source/examples/99-advanced/plotting-algorithms.rst:61
msgid ""
"Use ``vtkConeSource`` as a source algorithm. This source will dynamically "
"create a cone object depending on the instances's parameters. In this "
"example, we will connect a callback to set the cone source algorithm's "
"resolution via ``vtkConeSource.SetResolution()``."
msgstr ""
"ソースアルゴリズムとして ``vtkConeSource`` "
"を使用します．このソースは，インスタンスのパラメータに応じて動的にコーンオブジェクトを作成します．この例では， "
"``vtkConeSource.SetResolution()`` を介して，コーンソースアルゴリズムの解像度を設定するコールバックを接続します．"

#: ../../pyvista/doc/source/examples/99-advanced/plotting-algorithms.rst:88
msgid ""
"Pass the ``vtkConeSource`` (a ``vtkAlgorithm`` subclass) directly to the "
"plotter and connect a slider widget to our callback that adjusts the "
"resolution."
msgstr ""
"``vtkConeSource`` (``vtkAlgorithm`` のサブクラス) "
"を直接プロッタに渡し，スライダウィジェットを解像度を調整するコールバックに接続します．"

#: ../../pyvista/doc/source/examples/99-advanced/plotting-algorithms.rst:115
msgid "Here is another example using ``vtkRegularPolygonSource``."
msgstr "ここでは， ``vtkRegularPolygonSource`` を使用した別の例を示します．"

#: ../../pyvista/doc/source/examples/99-advanced/plotting-algorithms.rst:156
msgid ""
"We can do this with any ``vtkAlgorithm`` subclass for dynamically generating"
" or filtering data. Here is an example of executing a pipeline of VTK "
"filters together."
msgstr ""
"これは，任意の ``vtkAlgorithm`` "
"サブクラスを使用して，動的にデータの生成やフィルタリングを行うことができます．以下は，VTKフィルタのパイプラインを一緒に実行する例です．"

#: ../../pyvista/doc/source/examples/99-advanced/plotting-algorithms.rst:210
msgid "**Total running time of the script:** (0 minutes 8.643 seconds)"
msgstr "**Total running time of the script:** (0 minutes 8.643 seconds)"

#: ../../pyvista/doc/source/examples/99-advanced/plotting-algorithms.rst:224
msgid ""
":download:`Download Python source code: plotting-algorithms.py <plotting-"
"algorithms.py>`"
msgstr ""
":download:`Download Python source code: plotting-algorithms.py <plotting-"
"algorithms.py>`"

#: ../../pyvista/doc/source/examples/99-advanced/plotting-algorithms.rst:228
msgid ""
":download:`Download Jupyter notebook: plotting-algorithms.ipynb <plotting-"
"algorithms.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plotting-algorithms.ipynb <plotting-"
"algorithms.ipynb>`"

#: ../../pyvista/doc/source/examples/99-advanced/pump-bracket.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_99-advanced_pump-"
"bracket.py>` to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_99-advanced_pump-"
"bracket.py>` をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/99-advanced/pump-bracket.rst:23
msgid "Visualize Modal Analysis of a Pump Bracket"
msgstr "ポンプブラケットのモーダル解析の可視化"

#: ../../pyvista/doc/source/examples/99-advanced/pump-bracket.rst:24
msgid ""
"The following example demonstrates how to use PyVista to visualize the modal"
" analysis of a pump bracket based on point arrays representing mode shapes "
"for different modes of vibration."
msgstr ""
"次の例は，PyVistaを使用して，異なる振動モードのモード形状を表す点配列に基づいて，ポンプブラケットのモード解析を可視化する方法を示しています．"

#: ../../pyvista/doc/source/examples/99-advanced/pump-bracket.rst:28
msgid ""
"**Background** Modal analysis is the study of the dynamic properties of "
"mechanical structures in the frequency domain. It is a common technique in "
"structural dynamics, particularly for automotive, aerospace, and civil "
"engineering applications."
msgstr ""
"**背景** モーダル解析は，機械構造物の動的特性を周波数領域で研究するものです．特に自動車，航空宇宙，土木工学などの構造力学において一般的な手法です．"

#: ../../pyvista/doc/source/examples/99-advanced/pump-bracket.rst:33
msgid ""
"A mode shape is the deformation pattern that occurs at a specific natural "
"frequency, or mode, of a structure. When a structure is excited by an "
"external force, it responds at all its natural frequencies with each mode "
"shape being independent of the others. In this example, we will visualize "
"the mode shapes to get an understanding of how the pump bracket responds to "
"different modes of vibration."
msgstr ""
"モード形状とは，構造物の特定の固有振動数かモードで発生する変形パターンです．構造物が外力によって励起されると，構造物はすべての固有振動数で応答し，各モード形状は他から独立しています．この例では，モード形状を可視化することで，ポンプブラケットが異なる振動モードに対してどのように応答するかを理解することができます．"

#: ../../pyvista/doc/source/examples/99-advanced/pump-bracket.rst:60
msgid ""
"Start by loading the dataset using :func:`download_pump_bracket() "
"<pyvista.examples.downloads.download_pump_bracket>`."
msgstr ""
":func:`download_pump_bracket() "
"<pyvista.examples.downloads.download_pump_bracket>` "
"を使って，データセットをロードすることから始めます．"

#: ../../pyvista/doc/source/examples/99-advanced/pump-bracket.rst:63
msgid ""
"This example demonstrates the visualization of the pump bracket's mode "
"shape, the representation of its magnitude, and an animation of its "
"displacement. The dataset used in this example contains 10 mode shapes "
"(disp_0 to disp_9)."
msgstr ""
"この例では，ポンプブラケットのモード形状の可視化，その大きさの表現，および変位のアニメーションを示しています．この例で使用したデータセットには，10個のモード形状(disp_0～disp_9)が含まれています．"

#: ../../pyvista/doc/source/examples/99-advanced/pump-bracket.rst:81
msgid ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>UnstructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>124806</td></tr>\n"
"<tr><td>N Points</td><td>250487</td></tr>\n"
"<tr><td>X Bounds</td><td>-5.000e-01, 5.000e-01</td></tr>\n"
"<tr><td>Y Bounds</td><td>-4.000e-01, 0.000e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>-2.500e-02, 2.500e-02</td></tr>\n"
"<tr><td>N Arrays</td><td>10</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>disp_0</b></td><td>Points</td><td>float32</td><td>3</td><td>-5.702e-02</td><td>1.000e+00</td></tr>\n"
"<tr><td>disp_1</td><td>Points</td><td>float32</td><td>3</td><td>-9.769e-01</td><td>1.000e+00</td></tr>\n"
"<tr><td>disp_2</td><td>Points</td><td>float32</td><td>3</td><td>-9.165e-01</td><td>1.000e+00</td></tr>\n"
"<tr><td>disp_3</td><td>Points</td><td>float32</td><td>3</td><td>-9.808e-01</td><td>1.000e+00</td></tr>\n"
"<tr><td>disp_4</td><td>Points</td><td>float32</td><td>3</td><td>-9.494e-01</td><td>1.000e+00</td></tr>\n"
"<tr><td>disp_5</td><td>Points</td><td>float32</td><td>3</td><td>-9.759e-01</td><td>1.000e+00</td></tr>\n"
"<tr><td>disp_6</td><td>Points</td><td>float32</td><td>3</td><td>-7.134e-01</td><td>1.000e+00</td></tr>\n"
"<tr><td>disp_7</td><td>Points</td><td>float32</td><td>3</td><td>-8.740e-01</td><td>1.000e+00</td></tr>\n"
"<tr><td>disp_8</td><td>Points</td><td>float32</td><td>3</td><td>-6.784e-01</td><td>1.000e+00</td></tr>\n"
"<tr><td>disp_9</td><td>Points</td><td>float32</td><td>3</td><td>-8.212e-01</td><td>1.000e+00</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"
msgstr ""
"<div class=\"output_subarea output_html rendered_html output_result\">\n"
"<table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>\n"
"<table>\n"
"<tr><th>UnstructuredGrid</th><th>Information</th></tr>\n"
"<tr><td>N Cells</td><td>124806</td></tr>\n"
"<tr><td>N Points</td><td>250487</td></tr>\n"
"<tr><td>X Bounds</td><td>-5.000e-01, 5.000e-01</td></tr>\n"
"<tr><td>Y Bounds</td><td>-4.000e-01, 0.000e+00</td></tr>\n"
"<tr><td>Z Bounds</td><td>-2.500e-02, 2.500e-02</td></tr>\n"
"<tr><td>N Arrays</td><td>10</td></tr>\n"
"</table>\n"
"\n"
"</td><td>\n"
"<table>\n"
"<tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>\n"
"<tr><td><b>disp_0</b></td><td>Points</td><td>float32</td><td>3</td><td>-5.702e-02</td><td>1.000e+00</td></tr>\n"
"<tr><td>disp_1</td><td>Points</td><td>float32</td><td>3</td><td>-9.769e-01</td><td>1.000e+00</td></tr>\n"
"<tr><td>disp_2</td><td>Points</td><td>float32</td><td>3</td><td>-9.165e-01</td><td>1.000e+00</td></tr>\n"
"<tr><td>disp_3</td><td>Points</td><td>float32</td><td>3</td><td>-9.808e-01</td><td>1.000e+00</td></tr>\n"
"<tr><td>disp_4</td><td>Points</td><td>float32</td><td>3</td><td>-9.494e-01</td><td>1.000e+00</td></tr>\n"
"<tr><td>disp_5</td><td>Points</td><td>float32</td><td>3</td><td>-9.759e-01</td><td>1.000e+00</td></tr>\n"
"<tr><td>disp_6</td><td>Points</td><td>float32</td><td>3</td><td>-7.134e-01</td><td>1.000e+00</td></tr>\n"
"<tr><td>disp_7</td><td>Points</td><td>float32</td><td>3</td><td>-8.740e-01</td><td>1.000e+00</td></tr>\n"
"<tr><td>disp_8</td><td>Points</td><td>float32</td><td>3</td><td>-6.784e-01</td><td>1.000e+00</td></tr>\n"
"<tr><td>disp_9</td><td>Points</td><td>float32</td><td>3</td><td>-8.212e-01</td><td>1.000e+00</td></tr>\n"
"</table>\n"
"\n"
"</td></tr> </table>\n"
"</div>\n"
"<br />\n"
"<br />"

#: ../../pyvista/doc/source/examples/99-advanced/pump-bracket.rst:119
msgid ""
"Choose a mode shape from the available arrays in the dataset. Each "
"\"disp_N\" array represents an eigen solution or a single mode shape for a "
"given mode of vibration."
msgstr ""
"データセットにある利用可能な配列からモードシェイプを選択します．各 \"disp_N\" "
"配列は，与えられた振動モードに対する固有解または単一モード形状を表します．"

#: ../../pyvista/doc/source/examples/99-advanced/pump-bracket.rst:123
msgid ""
"Plot the 4th mode of the dataset. This is the first torsional mode for the "
"bracket."
msgstr "データセットの4番目のモードをプロットします．これはブラケットの最初のねじりモードです．"

#: ../../pyvista/doc/source/examples/99-advanced/pump-bracket.rst:161
msgid "Visualize Displaced Mode Shape"
msgstr "変位モード形状の可視化"

#: ../../pyvista/doc/source/examples/99-advanced/pump-bracket.rst:162
msgid ""
"We will now visualize the mode shapes of the pump bracket by displacing the "
"original dataset using :func:`warp_by_vector "
"<pyvista.DataSetFilters.warp_by_vector>`."
msgstr ""
"ここでは， :func:`warp_by_vector <pyvista.DataSetFilters.warp_by_vector>` "
"を使って元のデータセットを変位させ，ポンプブラケットのモード形状を可視化します．"

#: ../../pyvista/doc/source/examples/99-advanced/pump-bracket.rst:200
msgid "Animate the Mode Shape Displacement"
msgstr "モード形状の変位をアニメーション化します"

#: ../../pyvista/doc/source/examples/99-advanced/pump-bracket.rst:201
msgid ""
"Animate the mode shape's displacement by updating the vertex positions at "
"each time step. For a more realistic animation, we use a sinusoidal function"
" to vary the displacement."
msgstr ""
"各時間ステップで頂点位置を更新することで，モードシェイプの変位をアニメーション化します．よりリアルなアニメーションを実現するために，正弦波関数を使用して変位を変化させます．"

#: ../../pyvista/doc/source/examples/99-advanced/pump-bracket.rst:244
msgid "**Total running time of the script:** ( 0 minutes  14.319 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  14.319 seconds)"

#: ../../pyvista/doc/source/examples/99-advanced/pump-bracket.rst:258
msgid ""
":download:`Download Python source code: pump-bracket.py <pump-bracket.py>`"
msgstr ""
":download:`Download Python source code: pump-bracket.py <pump-bracket.py>`"

#: ../../pyvista/doc/source/examples/99-advanced/pump-bracket.rst:262
msgid ""
":download:`Download Jupyter notebook: pump-bracket.ipynb <pump-"
"bracket.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: pump-bracket.ipynb <pump-"
"bracket.ipynb>`"

#: ../../pyvista/doc/source/examples/99-advanced/ray-trace.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_99-advanced_ray-trace.py>` to "
"download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_99-advanced_ray-trace.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/99-advanced/ray-trace.rst:69
msgid "**Total running time of the script:** ( 0 minutes  0.432 seconds)"
msgstr "**スクリプトの合計実行時間:** ( 0 分  0.432 秒)"

#: ../../pyvista/doc/source/examples/99-advanced/ray-trace.rst:84
msgid ":download:`Download Python source code: ray-trace.py <ray-trace.py>`"
msgstr ":download:`Download Python source code: ray-trace.py <ray-trace.py>`"

#: ../../pyvista/doc/source/examples/99-advanced/ray-trace.rst:90
msgid ""
":download:`Download Jupyter notebook: ray-trace.ipynb <ray-trace.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: ray-trace.ipynb <ray-trace.ipynb>`"

#: ../../pyvista/doc/source/examples/99-advanced/ray-trace-moeller.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_examples_99-advanced_ray-trace-"
"moeller.py>` to download the full example code"
msgstr ""
":ref:`ここ <sphx_glr_download_examples_99-advanced_ray-trace-moeller.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/99-advanced/ray-trace-moeller.rst:24
msgid "Visualize the Moeller–Trumbore Algorithm"
msgstr "Moeller-Trumboreアルゴリズムの可視化"

#: ../../pyvista/doc/source/examples/99-advanced/ray-trace-moeller.rst:26
msgid ""
"This example demonstrates the Moeller–Trumbore intersection algorithm using "
"pyvista."
msgstr "この例では，pyvistaを使ってMoeller-Trumbore intersectionアルゴリズムを実演しています．"

#: ../../pyvista/doc/source/examples/99-advanced/ray-trace-moeller.rst:29
msgid "For additional details, please reference the following:"
msgstr "詳細については，以下を参照してください:"

#: ../../pyvista/doc/source/examples/99-advanced/ray-trace-moeller.rst:31
msgid ""
"`Möller–Trumbore intersection algorithm "
"<https://en.wikipedia.org/wiki/M%C3%B6ller%E2%80%93Trumbore_intersection_algorithm>`_"
msgstr ""
"`Möller–Trumbore intersection algorithm "
"<https://en.wikipedia.org/wiki/M%C3%B6ller%E2%80%93Trumbore_intersection_algorithm>`_"

#: ../../pyvista/doc/source/examples/99-advanced/ray-trace-moeller.rst:32
msgid ""
"`Fast Minimum Storage Ray Triangle Intersectio "
"<https://cadxfem.org/inf/Fast%20MinimumStorage%20RayTriangle%20Intersection.pdf>`_"
msgstr ""
"`Fast Minimum Storage Ray Triangle Intersectio "
"<https://cadxfem.org/inf/Fast%20MinimumStorage%20RayTriangle%20Intersection.pdf>`_"

#: ../../pyvista/doc/source/examples/99-advanced/ray-trace-moeller.rst:34
msgid "First, define the ray triangle intersection method."
msgstr "まず，光線3角交差法を定義します．"

#: ../../pyvista/doc/source/examples/99-advanced/ray-trace-moeller.rst:158
msgid "Plot the problem setup and the intersection"
msgstr "問題の設定と交点のプロット"

#: ../../pyvista/doc/source/examples/99-advanced/ray-trace-moeller.rst:218
msgid "**Total running time of the script:** ( 0 minutes  0.678 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  0.678 seconds)"

#: ../../pyvista/doc/source/examples/99-advanced/ray-trace-moeller.rst:230
msgid ""
":download:`Download Python source code: ray-trace-moeller.py <ray-trace-"
"moeller.py>`"
msgstr ""
":download:`Download Python source code: ray-trace-moeller.py <ray-trace-"
"moeller.py>`"

#: ../../pyvista/doc/source/examples/99-advanced/ray-trace-moeller.rst:234
msgid ""
":download:`Download Jupyter notebook: ray-trace-moeller.ipynb <ray-trace-"
"moeller.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: ray-trace-moeller.ipynb <ray-trace-"
"moeller.ipynb>`"

#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:9
msgid "**00:13.838** total execution time for **examples_99-advanced** files:"
msgstr ""

#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:12
msgid ""
":ref:`sphx_glr_examples_99-advanced_warp-by-vector-eigenmodes.py` (``warp-"
"by-vector-eigenmodes.py``)"
msgstr ""
":ref:`sphx_glr_examples_99-advanced_warp-by-vector-eigenmodes.py` (``warp-"
"by-vector-eigenmodes.py``)"

#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:12
msgid "00:13.838"
msgstr "00:13.838"

#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:14
msgid ""
":ref:`sphx_glr_examples_99-advanced_add-example.py` (``add-example.py``)"
msgstr ""
":ref:`sphx_glr_examples_99-advanced_add-example.py` (``add-example.py``)"

#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:16
msgid ""
":ref:`sphx_glr_examples_99-advanced_antarctica-compare.py` (``antarctica-"
"compare.py``)"
msgstr ""
":ref:`sphx_glr_examples_99-advanced_antarctica-compare.py` (``antarctica-"
"compare.py``)"

#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:18
msgid ""
":ref:`sphx_glr_examples_99-advanced_atomic-orbitals.py` (``atomic-"
"orbitals.py``)"
msgstr ""
":ref:`sphx_glr_examples_99-advanced_atomic-orbitals.py` (``atomic-"
"orbitals.py``)"

#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:20
msgid ""
":ref:`sphx_glr_examples_99-advanced_customization-trame-toolbar.py` "
"(``customization-trame-toolbar.py``)"
msgstr ""
":ref:`sphx_glr_examples_99-advanced_customization-trame-toolbar.py` "
"(``customization-trame-toolbar.py``)"

#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:22
msgid ""
":ref:`sphx_glr_examples_99-advanced_extending-pyvista.py` (``extending-"
"pyvista.py``)"
msgstr ""
":ref:`sphx_glr_examples_99-advanced_extending-pyvista.py` (``extending-"
"pyvista.py``)"

#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:24
msgid ""
":ref:`sphx_glr_examples_99-advanced_fea-hertzian-contact-pressure.py` "
"(``fea-hertzian-contact-pressure.py``)"
msgstr ""
":ref:`sphx_glr_examples_99-advanced_fea-hertzian-contact-pressure.py` "
"(``fea-hertzian-contact-pressure.py``)"

#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:26
msgid ""
":ref:`sphx_glr_examples_99-advanced_magnetic-fields.py` (``magnetic-"
"fields.py``)"
msgstr ""
":ref:`sphx_glr_examples_99-advanced_magnetic-fields.py` (``magnetic-"
"fields.py``)"

#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:28
msgid ""
":ref:`sphx_glr_examples_99-advanced_openfoam-cooling.py` (``openfoam-"
"cooling.py``)"
msgstr ""
":ref:`sphx_glr_examples_99-advanced_openfoam-cooling.py` (``openfoam-"
"cooling.py``)"

#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:30
msgid ""
":ref:`sphx_glr_examples_99-advanced_openfoam-example.py` (``openfoam-"
"example.py``)"
msgstr ""
":ref:`sphx_glr_examples_99-advanced_openfoam-example.py` (``openfoam-"
"example.py``)"

#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:32
msgid ""
":ref:`sphx_glr_examples_99-advanced_openfoam-tubes.py` (``openfoam-"
"tubes.py``)"
msgstr ""
":ref:`sphx_glr_examples_99-advanced_openfoam-tubes.py` (``openfoam-"
"tubes.py``)"

#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:34
msgid ""
":ref:`sphx_glr_examples_99-advanced_osmnx-example.py` (``osmnx-example.py``)"
msgstr ""
":ref:`sphx_glr_examples_99-advanced_osmnx-example.py` (``osmnx-example.py``)"

#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:36
msgid ":ref:`sphx_glr_examples_99-advanced_planets.py` (``planets.py``)"
msgstr ":ref:`sphx_glr_examples_99-advanced_planets.py` (``planets.py``)"

#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:38
msgid ""
":ref:`sphx_glr_examples_99-advanced_plotting-algorithms.py` (``plotting-"
"algorithms.py``)"
msgstr ""
":ref:`sphx_glr_examples_99-advanced_plotting-algorithms.py` (``plotting-"
"algorithms.py``)"

#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:40
msgid ""
":ref:`sphx_glr_examples_99-advanced_pump-bracket.py` (``pump-bracket.py``)"
msgstr ""
":ref:`sphx_glr_examples_99-advanced_pump-bracket.py` (``pump-bracket.py``)"

#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:42
msgid ""
":ref:`sphx_glr_examples_99-advanced_ray-trace-moeller.py` (``ray-trace-"
"moeller.py``)"
msgstr ""
":ref:`sphx_glr_examples_99-advanced_ray-trace-moeller.py` (``ray-trace-"
"moeller.py``)"

#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:44
msgid ":ref:`sphx_glr_examples_99-advanced_ray-trace.py` (``ray-trace.py``)"
msgstr ":ref:`sphx_glr_examples_99-advanced_ray-trace.py` (``ray-trace.py``)"

#: ../../pyvista/doc/source/examples/99-advanced/sg_execution_times.rst:46
msgid ""
":ref:`sphx_glr_examples_99-advanced_sphere_eversion.py` "
"(``sphere_eversion.py``)"
msgstr ""
":ref:`sphx_glr_examples_99-advanced_sphere_eversion.py` "
"(``sphere_eversion.py``)"

#: ../../pyvista/doc/source/examples/99-advanced/sphere_eversion.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_examples_99-advanced_sphere_eversion.py>` to download the"
" full example code"
msgstr ""
":ref:`Go to the end "
"<sphx_glr_download_examples_99-advanced_sphere_eversion.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/99-advanced/sphere_eversion.rst:24
msgid "Turning the sphere inside out"
msgstr "球体を裏返す"

#: ../../pyvista/doc/source/examples/99-advanced/sphere_eversion.rst:26
msgid ""
"There are several videos online talking about how a sphere can be turned "
"inside out in a continuous fashion, for instance in `this YouTube video "
"<https://www.youtube.com/watch?v=OI-To1eUtuU>`_.  Thanks to `an excellent "
"paper by Adam Bednorz and Witold Bednorz, Differential and its Applications "
"64, 59 (2019) <https://doi.org/10.1016/j.difgeo.2019.02.004>`_ (also "
"available `on arXiv <https://arxiv.org/abs/1711.10466>`_), we can plot this "
"so-called eversion of a sphere (turning it inside out without pinching or "
"tearing the surface, in other words by preserving its topology)."
msgstr ""
"例えば， `このYouTubeのビデオ <https://www.youtube.com/watch?v=OI-To1eUtuU>`_ "
"のように，球体を連続的に裏返す方法について話しているビデオがいくつかネット上にあります．Adam BednorzとWitold Bednorzによる "
"`素晴らしい論文, Differential and its Applications 64, 59 (2019) "
"<https://doi.org/10.1016/j.difgeo.2019.02.004>`_ ( `arXiv "
"<https://arxiv.org/abs/1711.10466>`_ "
"にも掲載)のおかげで，このいわゆる球の反転(表面をつまんだり破ったりせずに，言い換えればトポロジーを保ったまま球を裏返すこと)をプロットすることができます．"

#: ../../pyvista/doc/source/examples/99-advanced/sphere_eversion.rst:35
msgid ""
"The mathematics involved can seem a bit, well, involved. What matters is the"
" overall process visible in the animation: first the sphere is corrugated "
"and stretched out a bit to allow some legroom for the smooth transformation,"
" then the lobes are twisted around through each other, and the process is "
"reversed in order to unfold the sphere. It's not obvious that the "
"transformation is truly smooth; this was proved in the paper by Bednorz and "
"Bednorz."
msgstr ""
"数学が絡むとちょっと，いや，絡んでいるように見えるかもしれませんね．重要なのは，このアニメーションで見られる全体的なプロセスです．まず，球体を波型にして少し引き伸ばし，滑らかな変換のためのスペースを確保してから，ローブ同士をねじり，球体を展開するためにこのプロセスを逆にします．この変換が本当に滑らかであることは明らかではありませんが，これはBednorzとBednorzによる論文で証明されています．"

#: ../../pyvista/doc/source/examples/99-advanced/sphere_eversion.rst:69
msgid ""
"Let's define the chain of mappings we'll need for implementing the eversion:"
msgstr "外転の実装に必要なマッピングの連鎖を定義してみましょう:"

#: ../../pyvista/doc/source/examples/99-advanced/sphere_eversion.rst:188
msgid ""
"Now chain the functions by performing the process in Table 1 of the paper. "
"Start from the bottom for ``t = -1/Q``, keep stepping up, linearly changing "
"parameters that change from row to row, then at the top go from ``t = -1/Q``"
" to ``t = 1/Q``, then go back from top to bottom. Save each frame to a GIF."
msgstr ""
"ここで，論文の表1のプロセスを実行することによって，関数を連鎖させます．下から順に ``t = -1/Q`` "
"とし，行ごとに変化するパラメータを線形に変化させながらステップアップを続け，一番上で ``t = -1/Q`` から ``t = 1/Q`` "
"へ，そして上から下へと戻っていきます．各フレームを GIF に保存します．"

#: ../../pyvista/doc/source/examples/99-advanced/sphere_eversion.rst:193
msgid ""
"We make good use of the ``backface_params`` keyword parameter of "
":func:`pyvista.Plotter.add_mesh`, allowing us to plot the inside and the "
"outside with different colors."
msgstr ""
":func:`pyvista.Plotter.add_mesh` のキーワードパラメータ ``backface_params`` "
"をうまく利用して，内側と外側で異なる色でプロットできるようにしました．"

#: ../../pyvista/doc/source/examples/99-advanced/sphere_eversion.rst:300
msgid ""
"Looking at the still image of the middle state with ``t = 0``, we see a nice"
" symmetric configuration where two \"inside\" and two \"outside\" lobes of "
"the sphere are visible."
msgstr "``t = 0`` の中間状態の静止画を見ると，球の内側と外側の2つのローブが見える，見事な対称配置になっていることがわかります．"

#: ../../pyvista/doc/source/examples/99-advanced/sphere_eversion.rst:334
msgid "**Total running time of the script:** ( 0 minutes  29.800 seconds)"
msgstr "**Total running time of the script:** ( 0 minutes  29.800 seconds)"

#: ../../pyvista/doc/source/examples/99-advanced/sphere_eversion.rst:348
msgid ""
":download:`Download Python source code: sphere_eversion.py "
"<sphere_eversion.py>`"
msgstr ""
":download:`Download Python source code: sphere_eversion.py "
"<sphere_eversion.py>`"

#: ../../pyvista/doc/source/examples/99-advanced/sphere_eversion.rst:352
msgid ""
":download:`Download Jupyter notebook: sphere_eversion.ipynb "
"<sphere_eversion.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: sphere_eversion.ipynb "
"<sphere_eversion.ipynb>`"

#: ../../pyvista/doc/source/examples/99-advanced/warp-by-vector-eigenmodes.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_examples_99-advanced_warp-by-vector-"
"eigenmodes.py>` to download the full example code"
msgstr ""
":ref:`Go to the end <sphx_glr_download_examples_99-advanced_warp-by-vector-"
"eigenmodes.py>` をクリックすると完全なサンプルコードをダウンロードできます．"

#: ../../pyvista/doc/source/examples/99-advanced/warp-by-vector-eigenmodes.rst:23
msgid "Display Eigenmodes of Vibration"
msgstr "振動の固有振動モードを表示します"

#: ../../pyvista/doc/source/examples/99-advanced/warp-by-vector-eigenmodes.rst:25
msgid ""
"This example applies the :func:`warp_by_vector "
"<pyvista.DataSetFilters.warp_by_vector>` filter to a cube whose eigenmodes "
"have been computed using the Ritz method, as outlined in Visscher, William "
"M., Albert Migliori, Thomas M. Bell, et Robert A. Reinert. \"On the normal "
"modes of free vibration of inhomogeneous and anisotropic elastic objects\". "
"The Journal of the Acoustical Society of America 90, n.4 (October 1991): "
"2154-62. https://asa.scitation.org/doi/10.1121/1.401643"
msgstr ""
"この例は，Visscher, William M., Albert Migliori, Thomas M.Bell, et Robert "
"A.Reinertで概説されているように，固有モードがRitz法を使用して計算された立方体に :func:`warp_by_vector "
"<pyvista.DataSetFilters.warp_by_vector>` フィルタを適用します. \"On the normal modes "
"of free vibration of inhomogeneous and anisotropic elastic objects\". The "
"Journal of the Acoustical Society of America 90, n.4 (October 1991): "
"2154-62. https://asa.scitation.org/doi/10.1121/1.401643"

#: ../../pyvista/doc/source/examples/99-advanced/warp-by-vector-eigenmodes.rst:35
msgid ""
"First, let's solve the eigenvalue problem for a vibrating cube. We use a "
"crude approximation (by choosing a low max polynomial order) to get a fast "
"computation."
msgstr "まず，振動する立方体の固有値問題を解く．高速計算を得るために(低い最大多項式次数を選択した)粗近似を用いました．"

#: ../../pyvista/doc/source/examples/99-advanced/warp-by-vector-eigenmodes.rst:234
msgid "Now, let's display a mode on a mesh of the cube."
msgstr "次に，立方体のメッシュにモードを表示します．"

#: ../../pyvista/doc/source/examples/99-advanced/warp-by-vector-eigenmodes.rst:294
msgid "Finally, let's make a gallery of the first 8 unique eigenmodes."
msgstr "最後に，最初の8つの固有モードのギャラリーを作成します．"

#: ../../pyvista/doc/source/examples/99-advanced/warp-by-vector-eigenmodes.rst:328
msgid "**Total running time of the script:** (0 minutes 13.838 seconds)"
msgstr ""

#: ../../pyvista/doc/source/examples/99-advanced/warp-by-vector-eigenmodes.rst:342
msgid ""
":download:`Download Python source code: warp-by-vector-eigenmodes.py <warp-"
"by-vector-eigenmodes.py>`"
msgstr ""
":download:`Download Python source code: warp-by-vector-eigenmodes.py <warp-"
"by-vector-eigenmodes.py>`"

#: ../../pyvista/doc/source/examples/99-advanced/warp-by-vector-eigenmodes.rst:346
msgid ""
":download:`Download Jupyter notebook: warp-by-vector-eigenmodes.ipynb <warp-"
"by-vector-eigenmodes.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: warp-by-vector-eigenmodes.ipynb <warp-"
"by-vector-eigenmodes.ipynb>`"

#: ../../pyvista/doc/source/examples/index.rst:6
msgid "Examples"
msgstr "例"

#: ../../pyvista/doc/source/examples/index.rst:8
msgid ""
"Here is a gallery of several examples demonstrating what PyVista can do."
msgstr "ここにPyVistaができることを示すいくつかの例のギャラリーがあります．"

#: ../../pyvista/doc/source/examples/index.rst:11
msgid "All of these examples are live and available on MyBinder."
msgstr "これらの例はすべて，MyBinderでライブで入手できます．"

#: ../../pyvista/doc/source/examples/index.rst-1
msgid "Launch on Binder"
msgstr "Launch on Binder"

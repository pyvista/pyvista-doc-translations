# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017-2023, The PyVista Developers
# This file is distributed under the same license as the PyVista package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyVista 0.39.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-02 01:20+0000\n"
"PO-Revision-Date: 2020-08-05 16:06+0000\n"
"Language-Team: Persian (https://www.transifex.com/tkoyama010/teams/112279/fa/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fa\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../pyvista/doc/getting-started/authors.rst:2
msgid "Authors & Citation"
msgstr ""

#: ../../pyvista/doc/getting-started/authors.rst:4
msgid ""
"PyVista is an open-source project with a community of contributors. While "
"many of PyVista's contributors are listed in the :ref:`authors_ref` section,"
" please be sure to head over to the `Contributors Graph`_."
msgstr ""

#: ../../pyvista/doc/getting-started/authors.rst:13
msgid ""
"PyVista stands on the shoulders of giants, namely the Visualization Toolkit "
"(VTK) and NumPy. We owe so many thanks to the companies and communities that"
" have worked diligently to build the software stack that makes PyVista "
"possible."
msgstr ""

#: ../../pyvista/CITATION.rst:4
#: ../../pyvista/doc/getting-started/index.rst:175
msgid "Citing PyVista"
msgstr ""

#: ../../pyvista/CITATION.rst:6
#: ../../pyvista/doc/getting-started/index.rst:177
msgid ""
"There is a `paper about PyVista <https://doi.org/10.21105/joss.01450>`_!"
msgstr ""

#: ../../pyvista/CITATION.rst:8
msgid ""
"If you are using PyVista in your scientific research, please help our "
"scientific visibility by citing our work!"
msgstr ""

#: ../../pyvista/CITATION.rst:12
msgid ""
"Sullivan and Kaszynski, (2019). PyVista: 3D plotting and mesh analysis "
"through a streamlined interface for the Visualization Toolkit (VTK). Journal"
" of Open Source Software, 4(37), 1450, https://doi.org/10.21105/joss.01450"
msgstr ""

#: ../../pyvista/CITATION.rst:15
msgid "BibTex:"
msgstr ""

#: ../../pyvista/AUTHORS.rst:4
msgid "Authors"
msgstr ""

#: ../../pyvista/AUTHORS.rst:10
msgid ""
"The following is a list of authors who have made substantial contributions "
"to the conception or design of this software; or the creation of new code "
"used in this software; or have drafted the work or substantively revised it "
"and are considered \"The PyVista Developers\":"
msgstr ""

#: ../../pyvista/AUTHORS.rst:15
msgid "Alex Kaszynski, (`@akaszynski <https://github.com/akaszynski/>`_)"
msgstr ""

#: ../../pyvista/AUTHORS.rst:16
msgid "Bane Sullivan, (`@banesullivan <https://github.com/banesullivan/>`_)"
msgstr ""

#: ../../pyvista/AUTHORS.rst:17
msgid "Henrik Åhl, (`@supersubscript <https://github.com/supersubscript/>`_)"
msgstr ""

#: ../../pyvista/AUTHORS.rst:18
msgid ""
"Guillaume Favelier, (`@GuillaumeFavelier "
"<https://github.com/GuillaumeFavelier/>`_)"
msgstr ""

#: ../../pyvista/AUTHORS.rst:19
msgid "Jevin Jones, (`@JevinJ <https://github.com/JevinJ/>`_)"
msgstr ""

#: ../../pyvista/AUTHORS.rst:20
msgid "András Deák, (`@adeak <https://github.com/adeak>`_)"
msgstr ""

#: ../../pyvista/AUTHORS.rst:21
msgid "Tetsuo Koyama, (`@tkoyama010 <https://github.com/tkoyama010>`_)"
msgstr ""

#: ../../pyvista/AUTHORS.rst:22
msgid ""
"Rodrigo Mologni, (`@rodrigomologni <https://github.com/rodrigomologni>`_)"
msgstr ""

#: ../../pyvista/AUTHORS.rst:23
msgid "Phil Chiu, (`@whophil <https://github.com/whophil>`_)"
msgstr ""

#: ../../pyvista/AUTHORS.rst:24
msgid "Thomas G., (`@thomgrand <https://github.com/thomgrand>`_)"
msgstr ""

#: ../../pyvista/AUTHORS.rst:25
msgid "Eric Larson, (`@larsoner <https://github.com/larsoner>`_)"
msgstr ""

#: ../../pyvista/AUTHORS.rst:26
msgid "Matthew Flamm, (`@MatthewFlamm <https://github.com/MatthewFlamm>`_)"
msgstr ""

#: ../../pyvista/AUTHORS.rst:27
msgid "Darik Gamble, (`@darikg <https://github.com/darikg>`_)"
msgstr ""

#: ../../pyvista/AUTHORS.rst:28
msgid "Bram De Cooman, (`@dcbr <https://github.com/dcbr>`_)"
msgstr ""

#: ../../pyvista/doc/getting-started/authors.rst:27
msgid "License"
msgstr ""

#: ../../pyvista/LICENSE:1
msgid "The MIT License"
msgstr ""

#: ../../pyvista/LICENSE:3
msgid "Copyright (c) 2017-2023 The PyVista Developers"
msgstr ""

#: ../../pyvista/LICENSE:5
msgid ""
"Permission is hereby granted, free of charge, to any person obtaining a copy"
" of this software and associated documentation files (the \"Software\"), to "
"deal in the Software without restriction, including without limitation the "
"rights to use, copy, modify, merge, publish, distribute, sublicense, and/or "
"sell copies of the Software, and to permit persons to whom the Software is "
"furnished to do so, subject to the following conditions:"
msgstr ""

#: ../../pyvista/LICENSE:12
msgid ""
"The above copyright notice and this permission notice shall be included in "
"all copies or substantial portions of the Software."
msgstr ""

#: ../../pyvista/LICENSE:15
msgid ""
"THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"
" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, "
"FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE "
"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER "
"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING "
"FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS"
" IN THE SOFTWARE."
msgstr ""

#: ../../pyvista/doc/getting-started/connections.rst:2
msgid "Connections"
msgstr ""

#: ../../pyvista/doc/getting-started/connections.rst:4
msgid ""
"PyVista is a powerful tool that researchers can harness to create "
"compelling, integrated visualizations of large datasets in an intuitive, "
"Pythonic manner."
msgstr ""

#: ../../pyvista/doc/getting-started/connections.rst:7
msgid ""
"PyVista is used across science and engineering disciplines by a diverse "
"community to visualize data/models in 3D, generate publication-quality "
"illustrations, automate analysis workflows, and build custom applications "
"leveraging PyVista's 3D capabilities."
msgstr ""

#: ../../pyvista/doc/getting-started/connections.rst:12
msgid "Here are a few open-source projects that leverage PyVista:"
msgstr ""

#: ../../pyvista/doc/getting-started/connections.rst:16
msgid "Engineering"
msgstr ""

#: ../../pyvista/doc/getting-started/connections.rst:18
msgid ""
"pyleecan_: Electrical engineering open-source software providing a user-"
"friendly, unified, flexible simulation framework for the multiphysic design "
"and optimization of electrical machines and drives."
msgstr ""

#: ../../pyvista/doc/getting-started/connections.rst:19
msgid "pymapdl_: Pythonic interface to Ansys MAPDL."
msgstr ""

#: ../../pyvista/doc/getting-started/connections.rst:20
#: ../../pyvista/doc/getting-started/connections.rst:51
msgid ""
"pyprocar_: A Python library for electronic structure pre/post-processing."
msgstr ""

#: ../../pyvista/doc/getting-started/connections.rst:21
msgid ""
"AeroSandbox_: Plug-and-play analysis tools for aerodynamics, propulsion, "
"structures, trajectory design, and much more."
msgstr ""

#: ../../pyvista/doc/getting-started/connections.rst:22
msgid "Ptera_: Software for analyzing flapping-wing flight."
msgstr ""

#: ../../pyvista/doc/getting-started/connections.rst:23
msgid ""
"PyViewFactor_: A tool for the numerical computation of radiation view "
"factors, with applications in building physics, thermal comfort and heat "
"transfer."
msgstr ""

#: ../../pyvista/doc/getting-started/connections.rst:27
msgid "Geosciences"
msgstr ""

#: ../../pyvista/doc/getting-started/connections.rst:29
msgid ""
"GemPy_: 3D structural geological modeling software using PyVista for 3D "
"visualization and interaction."
msgstr ""

#: ../../pyvista/doc/getting-started/connections.rst:30
msgid "gemgis_: Spatial data processing for geomodeling."
msgstr ""

#: ../../pyvista/doc/getting-started/connections.rst:31
msgid "gimli_: Geophysical inversion and modeling library."
msgstr ""

#: ../../pyvista/doc/getting-started/connections.rst:32
msgid ""
"discretize_: Discretization tools for finite volume and inverse problems."
msgstr ""

#: ../../pyvista/doc/getting-started/connections.rst:33
msgid "SEGY-SAK_: SEGY Swiss Army Knife for Seismic Data."
msgstr ""

#: ../../pyvista/doc/getting-started/connections.rst:34
msgid ""
"subsurface_: Core data exchange library for subsurface science and "
"engineering."
msgstr ""

#: ../../pyvista/doc/getting-started/connections.rst:35
msgid "Flownet_: Data-Driven Reservoir Predictions."
msgstr ""

#: ../../pyvista/doc/getting-started/connections.rst:36
msgid ""
"PVGeo_: Python package of VTK-based algorithms to analyze geoscientific data"
" and models. PyVista is used to make the inputs and outputs of PVGeo's "
"algorithms more accessible."
msgstr ""

#: ../../pyvista/doc/getting-started/connections.rst:37
msgid ""
"omfvista_: 3D visualization for the Open Mining Format (omf). PyVista "
"provides the foundation for this library's visualization."
msgstr ""

#: ../../pyvista/doc/getting-started/connections.rst:41
msgid "Many More"
msgstr ""

#: ../../pyvista/doc/getting-started/connections.rst:43
msgid ""
"VesselVio_: Analysis and visualization of segmented vasculature datasets."
msgstr ""

#: ../../pyvista/doc/getting-started/connections.rst:44
msgid ""
"pymeshfix_: Python/Cython wrapper of Marco Attene's wonderful, award-winning"
" MeshFix_ software."
msgstr ""

#: ../../pyvista/doc/getting-started/connections.rst:45
msgid "tetgen_: Python Interface to Hang Si's C++ TetGen Library."
msgstr ""

#: ../../pyvista/doc/getting-started/connections.rst:46
msgid ""
"itkwidgets_: Interactive Jupyter widgets to visualize images, point sets, "
"and meshes in 2D and 3D. Supports all PyVista mesh types."
msgstr ""

#: ../../pyvista/doc/getting-started/connections.rst:47
msgid ""
"mne-python_: MNE: Magnetoencephalography (MEG) and Electroencephalography "
"(EEG) in Python."
msgstr ""

#: ../../pyvista/doc/getting-started/connections.rst:48
msgid "pyntcloud_: Python library for working with 3D point clouds."
msgstr ""

#: ../../pyvista/doc/getting-started/connections.rst:49
msgid "DiSECt_: Differentiable Cutting Simulator."
msgstr ""

#: ../../pyvista/doc/getting-started/connections.rst:50
msgid ""
"torch-points3d_: Pytorch framework for doing deep learning on point clouds."
msgstr ""

#: ../../pyvista/doc/getting-started/connections.rst:52
msgid "FEniCSx_: FEniCS Problem Solving Environment in Python and C++."
msgstr ""

#: ../../pyvista/doc/getting-started/external_examples.rst:4
msgid "External Examples"
msgstr ""

#: ../../pyvista/doc/getting-started/external_examples.rst:6
msgid ""
"Here are a list of longer, more technical examples of what PyVista can do!"
msgstr ""

#: ../../pyvista/doc/getting-started/external_examples.rst:10
msgid ""
"Please note that these examples link to external websites.  If any of these "
"links are broken, please raise an `issue "
"<https://github.com/pyvista/pyvista/issues>`_."
msgstr ""

#: ../../pyvista/doc/getting-started/external_examples.rst:15
msgid ""
"Do you have a technical processing workflow or visualization routine you "
"would like to share?  If so, please consider sharing your work here "
"submitting a PR at `pyvista/pyvista <https://github.com/pyvista/pyvista/>`_ "
"and we would be glad to add it!"
msgstr ""

#: ../../pyvista/doc/getting-started/external_examples.rst:201
msgid "<div class=\"sphx-glr-clear\"></div>"
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:2
msgid "Getting Started"
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:4
msgid ""
"This guide is here to help you start creating interactive 3D plots with "
"PyVista with the help of our examples and tutorials."
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:0
msgid "JupyterLab"
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:12
msgid ""
"Here's a quick demo of PyVista running within `JupyterLab "
"<https://jupyter.org/>`_."
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:15
msgid ""
"<video width=\"100%\" height=\"auto\" controls autoplay muted> <source\n"
"  src=\"https://tutorial.pyvista.org/_static/pyvista_jupyterlab_demo.mp4\"\n"
"  type=\"video/mp4\" style=\"margin-left: -220px; margin-right: -10.5%\">\n"
"  Your browser does not support the video tag.  </video>"
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:0
msgid "IPython"
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:24
msgid ""
"Here's a quick demo of PyVista running within a terminal using `IPython "
"<https://ipython.org/>`_."
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:27
msgid ""
"<video width=\"100%\" height=\"auto\" controls autoplay muted> <source\n"
"  src=\"https://tutorial.pyvista.org/_static/pyvista_ipython_demo.mp4\"\n"
"  type=\"video/mp4\"> Your browser does not support the video tag.\n"
"  </video>"
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:46
#: ../../pyvista/doc/getting-started/installation.rst:4
msgid "Installation"
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:47
msgid ""
"The only prerequisite for installing PyVista is Python itself. If you don’t "
"have Python yet and want the simplest way to get started, we recommend you "
"use the `Anaconda Distribution <https://www.anaconda.com/>`_."
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:56
msgid ""
"PyVista is available on `conda-forge <https://anaconda.org/conda-"
"forge/pyvista>`_."
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:68
msgid ""
"PyVista can be installed via pip from `PyPI "
"<https://pypi.org/project/pyvista>`__."
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:83
msgid ""
"Installing a specific version? Installing from source? Check the "
":ref:`install_ref` page."
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:88
msgid "First Steps"
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:89
msgid ""
"We've provided a variety of resources for you to get used to PyVista's API "
"through a range of examples and tutorials."
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:99
msgid ""
"Probably the best way for you to get used to PyVista is to visit our "
"dedicated `tutorial <https://tutorial.pyvista.org/tutorial.html>`_."
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:121
msgid ""
"Learn more about why we created PyVista as an interface to the Visualization"
" Toolkit (VTK)."
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:144
msgid ""
"Using PyVista in your research? Please consider citing or acknowledging us."
"  We have a `JOSS Publication`_!"
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:157
msgid "Take a look at third party projects using PyVista."
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:161
msgid "Support"
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:163
msgid ""
"For general questions about the project, its applications, or about software"
" usage, please create a discussion in `pyvista/discussions`_ where the "
"community can collectively address your questions. You are also welcome to "
"join us on Slack_ or send one of the developers an email. The project "
"support team can be reached at `info@pyvista.org`_."
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:179
msgid ""
"If you are using PyVista in your scientific research, please help our "
"scientific visibility by citing our work! Head over to :ref:`citation_ref` "
"to learn more about citing PyVista."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:6
msgid ""
"PyVista is supported on Python versions 3.7+. Previous versions of Python "
"are no longer supported as outlined in `this issue`_."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:11
msgid ""
"For the best experience, please considering using Anaconda as a virtual "
"environment and package manager for Python and following the instructions to"
" install PyVista with Anaconda."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:17
msgid "Dependencies"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:19
msgid ""
"PyVista is built on top of the Visualization Toolkit (VTK) and NumPy - as "
"such, the following projects are required dependencies of PyVista:"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:22
msgid ""
"`vtk <https://pypi.org/project/vtk/>`_ - PyVista directly inherits types "
"from the VTK library."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:23
msgid ""
"`NumPy <https://pypi.org/project/numpy/>`_ - NumPy arrays provide a core "
"foundation for PyVista's data array access."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:24
msgid ""
"`pillow <https://pypi.org/project/Pillow/>`_ - PIL fork used for saving "
"screenshots."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:25
msgid ""
"`imageio <https://pypi.org/project/imageio/>`_ - This library is used for "
"reading images and writing animations."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:26
msgid ""
"`pooch <https://pypi.org/project/pooch/>`_ - Data management for our example"
" datasets so users can download tutorials on the fly."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:27
msgid ""
"`scooby <https://github.com/banesullivan/scooby>`_ - Reporting and debugging"
" tools."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:28
msgid ""
"`typing-extensions <https://pypi.org/project/typing-extensions/>`_ - only "
"required on Python 3.7."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:32
#: ../../pyvista/doc/getting-started/installation.rst:97
msgid "Optional Dependencies"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:33
msgid ""
"PyVista includes several optional dependencies for visualization and reading"
" a variety of additional file formats, including:"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:35
msgid ""
"`cmocean <https://pypi.org/project/cmocean/>`_ - Colormaps for Oceanography."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:36
msgid ""
"`colorcet <https://colorcet.holoviz.org/>`_ - Perceptually accurate "
"256-color colormaps for use with Python."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:37
msgid ""
"`trame <https://github.com/Kitware/trame>`_ - Used for client and server-"
"side rendering in Jupyter."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:38
msgid ""
"`matplotlib <https://pypi.org/project/matplotlib/>`_ - Used for colormaps "
"and 2D plotting with :class:`pyvista.ChartMPL`."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:39
msgid ""
"`meshio <https://pypi.org/project/meshio/>`_ - Input/Output for many mesh "
"formats."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:40
msgid ""
"`pythreejs <https://pythreejs.readthedocs.io/en/stable/>`_ - Jupyter widgets"
" based notebook extension that allows Jupyter to leverage the WebGL "
"capabilities of modern browsers."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:44
msgid "PyPI"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:49
msgid ""
"PyVista can be installed from `PyPI <https://pypi.org/project/pyvista/>`_ "
"using ``pip``::"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:54
msgid ""
"To install all the additional packages that extend PyVista, install using "
"``pip`` with::"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:62
msgid "Anaconda"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:67
msgid "To install this package with ``conda`` run::"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:75
msgid "Installing the Current Development Branch from GitHub"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:76
msgid ""
"There may be features or bug-fixes that have been implemented in PyVista but"
" have not made their way into a release.  To install ``pyvista`` from the "
"latest up-to-date development branch from github, use one of the following"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:84
msgid ""
"Alternatively, you can clone the repository with git and install it with "
"pip."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:92
msgid ""
"Note the development flag ``-e``.  This allows you to change pyvista in-"
"place without having to reinstall it for each change."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:99
msgid "The following are a list of optional dependencies and their purpose:"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:102
msgid "Package"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:102
msgid "Purpose"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:104
msgid "``matplotlib``"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:104
msgid "Using Colormaps"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:106
msgid "``trame``"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:106
msgid "Interactive notebook rendering"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:108
msgid "``sphinx_gallery``"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:108
msgid "Capturing PyVista output for docs"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:110
msgid "``colorcet``"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:110
msgid "Perceptually uniform colormaps"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:112
msgid "``cmocean``"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:112
msgid "Oceanographic colormaps"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:114
msgid "``imageio-ffmpeg``"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:114
msgid "Saving movie files"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:116
msgid "``tqdm``"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:116
msgid "Status bars for monitoring filters"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:118
msgid "``trimesh`` ``rtree`` ``pyembree``"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:119
msgid "Vectorised ray tracing"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:125
msgid "Source / Developers"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:127
msgid ""
"Alternatively, you can install the latest version from GitHub by visiting "
"`PyVista <https://github.com/pyvista/pyvista>`_, and downloading the source "
"(cloning) by running::"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:136
msgid ""
"The latest documentation for the ``main`` branch of PyVista can be found at "
"`dev.pyvista.org <https://dev.pyvista.org>`_."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:141
msgid "Test Installation"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:143
msgid "You can test your installation by running an example:"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:150
msgid "See other examples and demos:"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:166
msgid ""
"A more comprehensive testing suite is available after cloning the source "
"repository. For details on how to clone and test the PyVista source, please "
"see our `Contributing Guide`_ and specifically, the `Testing`_ section."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:175
msgid "Running on CI Services"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:176
msgid ""
"Please head over to `pyvista/setup-headless-display-action`_ for details on "
"setting up a headless display in GitHub Actions Workflows using PyVista."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:179
msgid ""
"In the past, we have also supported `pyvista/gl-ci-helpers`_ for setting up "
"CI services like Travis and Azure Pipelines to run PyVista."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:187
msgid "Running on MyBinder"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:188
msgid ""
"This section is for advanced users that would like to install and use "
"PyVista with headless displays on notebook hosting services like MyBinder_."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:191
msgid ""
"Please see `this project`_ for a convenient Cookiecutter_ to get started "
"using PyVista on the notebook hosting service MyBinder_."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:198
msgid ""
"To get started, the Docker container will need to have ``libgl1-mesa-dev`` "
"and ``xvfb`` installed through ``apt-get``. For MyBinder, include the "
"following in a file called ``apt.txt``::"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:205
msgid ""
"Then, you need to configure the headless display, for MyBinder, create a "
"file called ``start`` and include the following set up script that will run "
"every time your Docker container is launched:"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:222
msgid ""
"And that's it! Include PyVista in your Python requirements and get to "
"visualizing your data! If you need more help than this on setting up PyVista"
" for these types of services, hop on Slack and chat with the developers or "
"take a look at `this repository`_ that is currently using PyVista on "
"MyBinder."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:230
msgid "Running on Remote Servers"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:231
msgid ""
"Using PyVista on remote servers requires similar setup steps as in the above"
" Docker case. As an example, here are the complete steps to use PyVista on "
"AWS EC2 Ubuntu 18.04 LTS (``ami-0a313d6098716f372`` in ``us-east-1``). Other"
" servers would work similarly."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:236
msgid ""
"After logging into the remote server, install Miniconda and related "
"packages:"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:253
msgid "Then, configure the headless display:"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:263
msgid "Reconnect to the server with port-forwarding, and start Jupyter:"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:271
#: ../../pyvista/doc/getting-started/installation.rst:319
#: ../../pyvista/doc/getting-started/installation.rst:347
msgid "Visit ``localhost:8888`` in the web browser."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:274
msgid "Running on WSL"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:275
msgid ""
"Similar to the example of the remote server above, the windows subsystem for"
" Linux does not provide an x-server for visualization. Instead, the fastest "
"way to get up and running on WSL is through `JupyterLab "
"<https://jupyter.org/>`_."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:279
msgid ""
"First, make sure you have installed the correct environment through "
"Miniconda and related packages:"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:298
msgid "VTK Link to Jupyter"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:299
msgid ""
"There are two ways to get vtk rendering 3D objects in JupyterLab. First you "
"can follow the example above for remote servers, skipping over the ``ssh`` "
"instructions."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:303
msgid "Configure the headless display:"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:313
msgid "Start Jupyter:"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:321
msgid ""
"Finally add this example code and your interactive visualizations should be "
"displayed in JupyterLab."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:334
#: ../../pyvista/doc/getting-started/installation.rst:362
msgid ""
"Your visualizations should now be showing directly in the Jupyter frontend."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:337
msgid "PyThreeJS Rendering in Jupyter"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:338
msgid ""
"The second option is to change the ``PyVista`` backend to use ``pythreejs``."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:341
msgid "To do this, first launch the Jupyter server:"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:349
msgid ""
"Finally change the PyVista backend to a web visualization library: "
"``pythreejs``."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:365
msgid "Running with Sphinx-Gallery"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:366
msgid "In your ``conf.py``, add the following:"
msgstr ""

#: ../../pyvista/doc/getting-started/why.rst:4
msgid "Why PyVista?"
msgstr ""

#: ../../pyvista/doc/getting-started/why.rst:22
msgid ""
"VTK is an excellent visualization toolkit, and with Python bindings it "
"should be able to combine the speed of C++ with the rapid prototyping of "
"Python.  However, despite this VTK code programmed in Python generally looks"
" the same as its C++ counterpart.  This module seeks to simplify mesh "
"creation and plotting without losing functionality."
msgstr ""

#: ../../pyvista/doc/getting-started/why.rst:28
msgid ""
"Compare two approaches for loading and plotting a surface mesh from a file:"
msgstr ""

#: ../../pyvista/doc/getting-started/why.rst:33
msgid "Plotting a Mesh using Python's VTK"
msgstr ""

#: ../../pyvista/doc/getting-started/why.rst:34
msgid ""
"Using this `example <https://kitware.github.io/vtk-"
"examples/site/Python/IO/ReadSTL/>`_ as a baseline, loading and plotting an "
"STL file requires a lot of code when using only the `vtk`_ library.  PyVista"
" on the other hand only requires a few lines of code."
msgstr ""

#: ../../pyvista/doc/getting-started/why.rst:49
msgid "Read and plot STL file using `vtk`_"
msgstr ""

#: ../../pyvista/doc/getting-started/why.rst:49
msgid "Read an STL file using PyVista"
msgstr ""

#: ../../pyvista/doc/getting-started/why.rst:74
msgid ""
"The PyVista data model and API allows you to rapidly load meshes and handles"
" much of the \"grunt work\" of setting up plots, connecting classes and "
"pipelines, and cleaning up plotting windows.  It does this by exposing a "
"simplified, but functional, interface to VTK's classes."
msgstr ""

#: ../../pyvista/doc/getting-started/why.rst:79
msgid ""
"In :func:`pyvista.read`, PyVista automatically determines the correct file "
"reader based on the file extension and returns a DataSet object. This "
"dataset object contains all the methods that are available to a "
":class:`pyvista.PolyData` class, including the :func:`plot <pyvista.plot>` "
"method, allowing you to instantly generate a plot of the mesh.  Garbage "
"collection is taken care of automatically and the renderer is cleaned up "
"after the user closes the plotting window."
msgstr ""

#: ../../pyvista/doc/getting-started/why.rst:87
msgid ""
"For more details comparing the two APIs, please see "
":ref:`pyvista_data_model` and :ref:`vtk_to_pyvista_docs`."
msgstr ""

#: ../../pyvista/doc/getting-started/why.rst:92
msgid "PyVista API"
msgstr ""

#: ../../pyvista/doc/getting-started/why.rst:93
msgid ""
"For example, triangular surface meshes in VTK can be subdivided but every "
"other object in VTK cannot.  It then makes sense that a :func:`subdivide` "
"method be added to the existing triangular surface mesh.  That way, "
"subdivision can be performed with:"
msgstr ""

#: ../../pyvista/doc/getting-started/why.rst:105
msgid ""
"Additionally, the docstrings for all methods in PyVista are intended to be "
"used within interactive coding sessions. This allows users to use "
"sophisticated processing routines on the fly with immediate access to a "
"description of how to use those methods:"
msgstr ""

#: ../../pyvista/doc/getting-started/why.rst:114
msgid "Interfacing With Other Libraries"
msgstr ""

#: ../../pyvista/doc/getting-started/why.rst:115
msgid ""
"PyVista is heavily dependent on `numpy <https://numpy.org/>`_ and uses it to"
" represent point, cell, field, and other data from the VTK meshes.  This "
"data can be easily accessed from the dataset attributes like "
":attr:`pyvista.DataSet.points`.  For example the first 10 points of a circle"
" from pyvista can be accessed with:"
msgstr ""

#: ../../pyvista/doc/getting-started/why.rst:126
msgid ""
"And these points can be operated on as if it was a NumPy array, all without "
"losing connection to the underlying VTK data array."
msgstr ""

#: ../../pyvista/doc/getting-started/why.rst:129
msgid ""
"At the same time, a variety of PyVista objects can be generated directly "
"from numpy arrays.  For example, below we generate a vector field of arrows "
"using :func:`numpy.meshgrid`:"
msgstr ""

#: ../../pyvista/doc/getting-started/why.rst:156
msgid ""
"PyVista has connections to several other libraries, such as `meshio "
"<https://github.com/nschloe/meshio>`_ and `matplotlib "
"<https://matplotlib.org/>`_, allowing PyVista to extend VTK with "
"functionality from the Python ecosystem."
msgstr ""

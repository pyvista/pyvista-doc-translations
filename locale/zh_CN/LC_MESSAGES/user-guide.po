# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017-2021, The PyVista Developers
# This file is distributed under the same license as the PyVista package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyVista 0.31.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-23 05:31+0000\n"
"PO-Revision-Date: 2021-05-06 09:39+0000\n"
"Language-Team: Chinese (China) (https://www.transifex.com/getfem-doc/teams/112279/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../pyvista/doc/user-guide/index.rst:2
msgid "User Guide"
msgstr ""

#: ../../pyvista/doc/user-guide/index.rst:3
msgid ""
"This section details the general usage of PyVista for users who may or may "
"not have used VTK in the past, but are looking to leverage it in a Pythonic "
"manner for 3D plotting.  See the table of contents below or the in the side "
"panel for the individual sections demonstrating the key concepts of PyVista."
msgstr ""

#: ../../pyvista/doc/user-guide/index.rst:11
msgid "Simple Interactive Example"
msgstr ""

#: ../../pyvista/doc/user-guide/index.rst:12
msgid "This basic example demonstrates three key features of PyVista:"
msgstr ""

#: ../../pyvista/doc/user-guide/index.rst:14
msgid "Simple ``numpy`` and ``matplotlib`` like interface"
msgstr ""

#: ../../pyvista/doc/user-guide/index.rst:15
msgid "Variety of built-in examples"
msgstr ""

#: ../../pyvista/doc/user-guide/index.rst:16
msgid "Intuitive plotting with keyword arguments."
msgstr ""

#: ../../pyvista/doc/user-guide/index.rst:27
msgid ""
"Here, we download the `Stanford dragon mesh "
"<http://graphics.stanford.edu/data/3Dscanrep/>`_, color it according to "
"height, and plot it using a web-viewer.  This same example will run "
"identically locally."
msgstr ""

#: ../../pyvista/doc/user-guide/index.rst:40
msgid ""
"With just a few lines of code we downloaded a sample mesh from the web, "
"added scalars to it based on the points of the mesh, and plotted it while "
"controlling the orientation, color, and data presented in the visualization."
msgstr ""

#: ../../pyvista/doc/user-guide/index.rst:45
msgid ""
"The following sections explain the details of the how and why of PyVista's "
"interface."
msgstr ""

#: ../../pyvista/doc/user-guide/index.rst:49
msgid "User Guide Contents"
msgstr ""

#: ../../pyvista/doc/user-guide/index.rst:61
msgid "Videos"
msgstr ""

#: ../../pyvista/doc/user-guide/index.rst:62
msgid "Here are some videos that you can watch to learn PyVista:"
msgstr ""

#: ../../pyvista/doc/user-guide/index.rst:64
msgid ""
"PyConJP2020 talk \"How to plot unstructured mesh file on Jupyter Notebook\" "
"(15 minutes):"
msgstr ""

#: ../../pyvista/doc/user-guide/index.rst:67
msgid "`Video <https://youtu.be/X3Z54Kw4I6Y>`_"
msgstr ""

#: ../../pyvista/doc/user-guide/index.rst:68
msgid ""
"`Material "
"<https://docs.google.com/presentation/d/1M_cnS66ja81u_mHACjaUsDj1wSeeEtnEevk_IMZ8-dg/edit?usp=sharing>`_"
msgstr ""

#: ../../pyvista/doc/user-guide/index.rst:70
msgid ""
"If there is any material that we can add, please `report "
"<https://github.com/pyvista/pyvista/issues>`_ ."
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/index.rst:4
msgid "Jupyter Notebook Plotting"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/index.rst:5
msgid ""
"Plot with ``pyvista`` interactively within a `Juptyer "
"<https://jupyter.org/>`_ notebook!"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/index.rst:10
msgid "Demo Using ``panel``"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/index.rst:19
msgid "Demo Using ``ipygany``"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/index.rst:39
msgid "Supported Modules"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/index.rst:40
msgid ""
"The PyVista module supports a variety of backends when plotting within a "
"jupyter notebook:"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/index.rst:43
msgid ""
"Server-side rendering with PyVista streaming to the notebook through "
"`ipyvtklink <https://github.com/Kitware/ipyvtklink/>`_"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/index.rst:45
msgid ""
"Client-side rendering with `ipygany "
"<https://github.com/QuantStack/ipygany>`_ using ``threejs``."
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/index.rst:46
msgid ""
"Client-side rendering using `panel <https://github.com/holoviz/panel>`_ "
"using ``vtk.js``."
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/index.rst:47
msgid ""
"Client-side rendering with `itkwidgets "
"<https://github.com/InsightSoftwareConsortium/itkwidgets>`_ using ``itk.js``"
" and ``vtk.js``."
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/index.rst:48
msgid "Static images."
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/index.rst:53
msgid "Details for Each Backend"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/index.rst:54
msgid ""
"See the individual package pages on each backend for additional details on "
"how to use these plotting backends."
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/index.rst:67
msgid "State of 3D Interactive Jupyterlab Plotting"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/index.rst:71
msgid ""
"3D plotting within Jupyter notebooks is an emerging technology, partially "
"because Jupyter is still relatively new, but also because the web technology"
" used here is also new and rapidly developing as more and more users and "
"developers shift to the cloud or cloud-based visualization.  Things here are"
" likely to break and rapidly change"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/index.rst:77
msgid ""
"This was written in March 2021, and may already be out of date.  Be sure to "
"check the developer websites for any changes."
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/index.rst:80
msgid ""
"When plotting using Jupyterlab you have the option of using one of many "
"modules, each of which has its advantages, disadvantages, and quirks.  While"
" ``pyvista`` attempts to remove some of the differences in the API when "
"using the ``Plotting`` class, the plots will still look and feel differently"
" depending on the backend.  Additionally, different backends have different "
"requirements and may not support your deployment environment."
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/index.rst:88
msgid ""
"This table details various capabilities and technologies used by the jupyter"
" notebook plotting modules:"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/index.rst:92
msgid "Jupyter Notebook 3D Modules"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/index.rst:94
msgid "Jupyterlab 3"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/index.rst:94
msgid "Rendering Location"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/index.rst:94
msgid "Backend"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/index.rst:94
msgid "Requires Framebuffer"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/index.rst:96
msgid "panel"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/index.rst:96
#: ../../pyvista/doc/user-guide/jupyter/index.rst:96
#: ../../pyvista/doc/user-guide/jupyter/index.rst:98
#: ../../pyvista/doc/user-guide/jupyter/index.rst:100
#: ../../pyvista/doc/user-guide/jupyter/index.rst:100
#: ../../pyvista/doc/user-guide/jupyter/index.rst:102
msgid "Yes"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/index.rst:96
#: ../../pyvista/doc/user-guide/jupyter/index.rst:98
#: ../../pyvista/doc/user-guide/jupyter/index.rst:102
msgid "Client"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/index.rst:96
#: ../../pyvista/doc/user-guide/jupyter/index.rst:102
msgid "vtk.js"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/index.rst:98
msgid "ipygany"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/index.rst:98
msgid "threejs"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/index.rst:98
#: ../../pyvista/doc/user-guide/jupyter/index.rst:102
msgid "No"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/index.rst:100
msgid "ipyvtklink"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/index.rst:100
msgid "Server"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/index.rst:100
msgid "vtk"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/index.rst:102
msgid "itkwidgets"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/index.rst:105
msgid ""
"At the moment, ``itkwidgets`` and ``ipyvtklink`` are incompatible with "
"Jupyterlab 3, and will result in a \"Error displaying widget: model not "
"found\" message from juptyer.  Additionally, all the modules other than "
"``ipygany`` require a framebuffer, which can be setup on a headless "
"environment with ``pyvista.start_xvfb()``.  However, on Google Colab, where "
"it's not possible to install system packages, you should stick with a module"
" like ``threejs``, which does not require any server side rendering or "
"framebuffer."
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/index.rst:114
msgid ""
"See :ref:`install_ref` for more details installing on a headless environment"
" for the backends requiring a framebuffer.  When installing the individual "
"packages, the Jupyterlab 3 compatible packages can be installed with a "
"simple ``pip install <package>``.  See the installation instructions for the"
" other packages for more details."
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/index.rst:122
msgid "Usage with PyVista"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/index.rst:123
msgid ""
"There are two ways to set the jupyter plotting backend.  First, it can be "
"done on a plot by plot basis by setting the ``jupyter_backend`` in either "
"``mesh.plot()`` or ``plotter.show()``.  You can also set it globally with "
"the ``pyvista.set_jupyter_backend`` function.  For further details:"
msgstr ""

#: ../../pyvista/pyvista/jupyter/__init__.pydocstring of
#: pyvista.jupyter.set_jupyter_backend:1
msgid "Set the plotting backend for a jupyter notebook."
msgstr ""

#: ../../pyvista/pyvista/jupyter/__init__.pydocstring of
#: pyvista.jupyter.set_jupyter_backend:0
#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.add_mesh:0
#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.add_points:0
#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.show:0
#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.set_plot_theme:0
msgid "Parameters"
msgstr ""

#: ../../pyvista/pyvista/jupyter/__init__.pydocstring of
#: pyvista.jupyter.set_jupyter_backend:3
msgid ""
"Jupyter backend to use when plotting.  Must be one of the following:  * "
"``'ipyvtklink'`` : Render remotely and stream the   resulting VTK images "
"back to the client.  Supports all VTK   methods, but suffers from lag due to"
" remote rendering.   Requires that a virtual framebuffer be setup when "
"displaying   on a headless server.  Must have ``ipyvtklink`` installed.  * "
"``'panel'`` : Convert the VTK render window to a vtkjs   object and then "
"visualize that within jupyterlab. Supports   most VTK objects.  Requires "
"that a virtual framebuffer be   setup when displaying on a headless server."
"  Must have   ``panel`` installed.  * ``'ipygany'`` : Convert all the meshes"
" into ``ipygany``   meshes and streams those to be rendered on the client "
"side.   Supports VTK meshes, but few others.  Aside from ``none``,   this is"
" the only method that does not require a virtual   framebuffer.  Must have "
"``ipygany`` installed.  * ``'static'`` : Display a single static image "
"within the   Jupyterlab environment.  Still requires that a virtual   "
"framebuffer be setup when displaying on a headless server,   but does not "
"require any additional modules to be installed.  * ``'none'`` : Do not "
"display any plots within jupyterlab,   instead display using dedicated VTK "
"render windows.  This   will generate nothing on headless servers even with "
"a   virtual framebuffer."
msgstr ""

#: ../../pyvista/pyvista/jupyter/__init__.pydocstring of
#: pyvista.jupyter.set_jupyter_backend:3
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.jupyter_backend:3
msgid "Jupyter backend to use when plotting.  Must be one of the following:"
msgstr ""

#: ../../pyvista/pyvista/jupyter/__init__.pydocstring of
#: pyvista.jupyter.set_jupyter_backend:5
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.jupyter_backend:6
msgid ""
"``'ipyvtklink'`` : Render remotely and stream the resulting VTK images back "
"to the client.  Supports all VTK methods, but suffers from lag due to remote"
" rendering. Requires that a virtual framebuffer be setup when displaying on "
"a headless server.  Must have ``ipyvtklink`` installed."
msgstr ""

#: ../../pyvista/pyvista/jupyter/__init__.pydocstring of
#: pyvista.jupyter.set_jupyter_backend:11
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.jupyter_backend:12
msgid ""
"``'panel'`` : Convert the VTK render window to a vtkjs object and then "
"visualize that within jupyterlab. Supports most VTK objects.  Requires that "
"a virtual framebuffer be setup when displaying on a headless server.  Must "
"have ``panel`` installed."
msgstr ""

#: ../../pyvista/pyvista/jupyter/__init__.pydocstring of
#: pyvista.jupyter.set_jupyter_backend:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.jupyter_backend:18
msgid ""
"``'ipygany'`` : Convert all the meshes into ``ipygany`` meshes and streams "
"those to be rendered on the client side. Supports VTK meshes, but few "
"others.  Aside from ``none``, this is the only method that does not require "
"a virtual framebuffer.  Must have ``ipygany`` installed."
msgstr ""

#: ../../pyvista/pyvista/jupyter/__init__.pydocstring of
#: pyvista.jupyter.set_jupyter_backend:23
msgid ""
"``'static'`` : Display a single static image within the Jupyterlab "
"environment.  Still requires that a virtual framebuffer be setup when "
"displaying on a headless server, but does not require any additional modules"
" to be installed."
msgstr ""

#: ../../pyvista/pyvista/jupyter/__init__.pydocstring of
#: pyvista.jupyter.set_jupyter_backend:28
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.jupyter_backend:29
msgid ""
"``'none'`` : Do not display any plots within jupyterlab, instead display "
"using dedicated VTK render windows.  This will generate nothing on headless "
"servers even with a virtual framebuffer."
msgstr ""

#: ../../pyvista/pyvista/jupyter/__init__.pydocstring of
#: pyvista.jupyter.set_jupyter_backend:35
#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK:9
#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.add_points:17
#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes:4
#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.DarkTheme:6
#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.DefaultTheme:4
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.auto_close:7
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.axes:4 ../../pyvista/pyvista/themes.pydocstring
#: of pyvista.themes.DefaultTheme.background:4
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.camera:4
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.cmap:13
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.color:14
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.colorbar_horizontal:4
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.colorbar_orientation:6
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.colorbar_vertical:4
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.depth_peeling:4
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.edge_color:4
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.floor_color:4
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.font:4 ../../pyvista/pyvista/themes.pydocstring
#: of pyvista.themes.DefaultTheme.full_screen:4
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.interactive:4
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.jupyter_backend:35
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.lighting:4
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.load_theme:4
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.multi_rendering_splitting_position:4
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.multi_samples:6
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.nan_color:6
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.notebook:8
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.outline_color:4
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.render_points_as_spheres:4
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.restore_defaults:4
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.save:4 ../../pyvista/pyvista/themes.pydocstring
#: of pyvista.themes.DefaultTheme.show_edges:4
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.show_scalar_bar:4
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.silhouette:4
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.smooth_shading:4
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.title:6
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.transparent_background:4
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.volume_mapper:12
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.window_size:4
#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.DocumentTheme:8
#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.ParaViewTheme:4
#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.load_theme:4
#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.set_plot_theme:8
msgid "Examples"
msgstr ""

#: ../../pyvista/pyvista/jupyter/__init__.pydocstring of
#: pyvista.jupyter.set_jupyter_backend:36
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.jupyter_backend:36
msgid "Enable the ipygany backend."
msgstr ""

#: ../../pyvista/pyvista/jupyter/__init__.pydocstring of
#: pyvista.jupyter.set_jupyter_backend:41
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.jupyter_backend:41
msgid "Enable the panel backend."
msgstr ""

#: ../../pyvista/pyvista/jupyter/__init__.pydocstring of
#: pyvista.jupyter.set_jupyter_backend:45
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.jupyter_backend:45
msgid "Enable the ipyvtklink backend."
msgstr ""

#: ../../pyvista/pyvista/jupyter/__init__.pydocstring of
#: pyvista.jupyter.set_jupyter_backend:49
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.jupyter_backend:49
msgid "Just show static images."
msgstr ""

#: ../../pyvista/pyvista/jupyter/__init__.pydocstring of
#: pyvista.jupyter.set_jupyter_backend:53
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.jupyter_backend:53
msgid ""
"Disable all plotting within JupyterLab and display using a standard desktop "
"VTK render window."
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/ipygany.rst:4
msgid "Using ``ipygany`` with PyVista"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/ipygany.rst:5
msgid ""
"The `ipygany <https://github.com/QuantStack/ipygany>`_ jupyterlab plotting "
"backend is a powerful module that enables pure plotting that leverages "
"`threejs <https://threejs.org/>`_ through the `pythreejs widget "
"<https://github.com/jupyter-widgets/pythreejs>`_.  It allows for embedded "
"html documentation (as shown here), rapid plotting (as compared to the other"
" client jupyterlab plotting modules like ``panel`` or ``itkwidgets``)."
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/ipygany.rst:13
msgid ""
"There is an excellent block post at `ipygany: Jupyter into the third "
"dimension <https://blog.jupyter.org/ipygany-jupyter-into-the-third-"
"dimension-29a97597fc33>`_ and without repeating too much here, ``ipygany`` "
"includes the following features:"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/ipygany.rst:17
msgid "IsoColor: apply color-mapping to your mesh."
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/ipygany.rst:18
msgid ""
"Warp: deform your mesh given a 3-D input data (e.g. displacement data on a "
"beam)"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/ipygany.rst:20
msgid ""
"WarpByScalar: deform your mesh given a 1-D input data (e.g. terrain "
"elevation)"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/ipygany.rst:22
msgid ""
"Threshold: only visualize mesh parts inside a range of data (e.g. 222 K≤ "
"temperature ≤ 240 K)"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/ipygany.rst:24
msgid ""
"IsoSurface: only visualize the surface where the mesh respects a data value "
"(e.g. pressure == 3 bar)"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/ipygany.rst:26
msgid "Glyph effects like PointCloud"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/ipygany.rst:27
msgid "Water visualization"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/ipygany.rst:31
msgid "PyVista Wrapping"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/ipygany.rst:32
msgid ""
"There are two approaches for plotting using ipygany with ``pyvista``. First,"
" you can convert between pyvista meshes ``ipygany`` PolyMesh objects using "
"the ``from_pyvista`` method from ``ipygany`` to enable a variety of advanced"
" ``ipygany`` methods and follow their examples outlined in the `ipygany "
"Documentation <https://ipygany.readthedocs.io/en/latest/>`_, or you can "
"simply use an existing ``Plotter`` class and set "
"``jupyter_backend='ipygany'``."
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/ipygany.rst:40
msgid ""
"Perhaps best of all, the resulting widgets can be embedded within sphinx "
"documentation:"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/ipygany.rst:56
msgid ""
"Note how the mesh color, background color, and camera position are all "
"mapped over to the ``ipygany`` scene, meaning that you can reuse existing "
"code and change the backend depending on the type of plotting backend you "
"wish to use."
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/ipygany.rst:61
msgid ""
"Note that there are many missing features, including all vtk widgets, but "
"many of these can be replaced with jupyterlab widgets.  If you wish to "
"assemble your own scene, change the jupyter_backend while returning the "
"\"viewer\" with:"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/ipygany.rst:76
msgid ""
"This scene can then be added to any number of jupyterlab widgets and then "
"shown as a complete widget.  For example, you could even display two side by"
" side using ``ipywidgets.AppLayout``."
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/ipygany.rst:82
msgid "Examples: Large Models"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/ipygany.rst:83
msgid ""
"This example shows a large mesh and demonstrates how even fairly large "
"meshes, like the carburetor example which contains 500,000 faces and 250,000"
" points, can be quickly loaded.  This is, of course, bandwidth dependent, as"
" this mesh is around 6 MB."
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/ipygany.rst:104
msgid "Returning Scenes"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/ipygany.rst:105
msgid ""
"Show several widgets simultaneously using ``ipywidgets.TwoByTwoLayout``.  "
"This is similar to the :ref:`ref_parametric_example`, except with "
"interactive widgets."
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/ipygany.rst:139
msgid "Scalar Bars"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/ipygany.rst:140
msgid ""
"Scalar bars are automatically shown when a plot has active scalars. For "
"example, the St. Helens ``mesh`` from ``active_scalar_name`` is "
"``'Elevation'``.  Scalar bars, scalar bar title, and the colormap dropdown "
"menu are automatically added to the scene."
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/ipyvtk_plotting.rst:4
msgid "Using ``ipyvtklink`` with PyVista"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/ipyvtk_plotting.rst:7
msgid ""
"As of version ``0.1.4``, ``ipyvtklink`` does not support Jupyterlab 3.  "
"Attempting to run the following will return a ``Model not found`` error "
"within jupyterlab."
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/ipyvtk_plotting.rst:11
msgid ""
"``pyvista`` has the ability to display fully featured plots within a "
"JupyterLab environment using ``ipyvtklink``.  This feature works by "
"streaming the current render window to a canvas within JupyterLab and then "
"passing any user actions from the canvas back to the VTK render window."
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/ipyvtk_plotting.rst:17
msgid ""
"While this isn't an exciting feature when JupyterLab is being run locally, "
"this has huge implications when plotting remotely as you can display any "
"plot (except for those with multiple render windows) from JupyterLab."
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/ipyvtk_plotting.rst:22
msgid ""
"For example, both sections of code will display an interactive canvas within"
" JupyterLab:"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/ipyvtk_plotting.rst:38
msgid "For convenience, you can enable ``ipyvtklink`` by default with:"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/ipyvtk_plotting.rst:47
#: ../../pyvista/doc/user-guide/jupyter/itk_plotting.rst:27
msgid "Installation"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/ipyvtk_plotting.rst:48
msgid ""
"If you're using an Anaconda environment, installation is the quite "
"straightforward:"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/ipyvtk_plotting.rst:56
msgid "Where environment.yml is:"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/ipyvtk_plotting.rst:69
msgid "On Linux, you can setup your jupyterlab environment with:"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/ipyvtk_plotting.rst:80
msgid "Other Considerations"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/ipyvtk_plotting.rst:81
msgid "It may be worth using GPU acceleration, see :ref:`gpu_off_screen`."
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/ipyvtk_plotting.rst:83
msgid ""
"If you do not have GPU acceleration, be sure to start up a virtual "
"framebuffer using ``Xvfb``.  You can either start it using bash with:"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/ipyvtk_plotting.rst:98
msgid ""
"Or alternatively, start it using the built in ``pyvista.start_xvfb()``.  "
"Please be sure to install ``xvfb`` and ``libgl1-mesa-glx`` with:"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/itk_plotting.rst:4
msgid "Using ``itkwidgets`` with PyVista"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/itk_plotting.rst:8
msgid ""
"As of version ``0.32.0``, ``itkwidgets`` does not support Jupyterlab 3.  "
"Attempting to run the following will return a ``Model not found`` error "
"within jupyterlab."
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/itk_plotting.rst:12
msgid ""
"Track the progress of this in `Issue 405 "
"<https://github.com/InsightSoftwareConsortium/itkwidgets/issues/405>`_."
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/itk_plotting.rst:14
msgid ""
"PyVista has an interface for visualizing plots in Jupyter.  The "
"``pyvista.PlotterITK`` class allows you interactively visualize a mesh "
"within a jupyter notebook.  For those who prefer plotting within jupyter, "
"this is an great way of visualizing using ``VTK`` and ``pyvista``."
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/itk_plotting.rst:20
msgid "Special thanks to `@thewtex`_ for the `itkwidgets`_ library."
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/itk_plotting.rst:28
msgid ""
"To use `PlotterITK` you'll need to install ``itkwidgets>=0.25.2``. Follow "
"the installation steps `here "
"<https://github.com/InsightSoftwareConsortium/itkwidgets#installation>`_."
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/itk_plotting.rst:31
msgid ""
"You can install everything with `pip` if you prefer not using conda, but be "
"sure your juptyerlab is up-to-date.  If you encounter problems, uninstall "
"and reinstall jupyterlab using pip."
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/itk_plotting.rst:37
msgid "Example Plotting with ITKwidgets"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/itk_plotting.rst:38
msgid ""
"The following example shows how to create a simple plot that shows a simple "
"sphere."
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/itk_plotting.rst:58
msgid "ITKwidgets with pyvista"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/itk_plotting.rst:61
msgid ""
"For convenience, figures can also be plotted using the ``plot_itk`` "
"function:"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/itk_plotting.rst:76
msgid "Attributes"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/itk_plotting.rst:79:<autosummary>:1
msgid ":obj:`background_color <pyvista.PlotterITK.background_color>`\\"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/itk_plotting.rst:79:<autosummary>:1
#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.PlotterITK.background_color:1
msgid "Return the background color of the plotter."
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/itk_plotting.rst:79:<autosummary>:1
msgid ":obj:`camera_position <pyvista.PlotterITK.camera_position>`\\"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/itk_plotting.rst:79:<autosummary>:1
#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.PlotterITK.camera_position:1
msgid "Return camera position of the plotter as a list."
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/itk_plotting.rst:81
msgid "Methods"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/itk_plotting.rst:84:<autosummary>:1
msgid ""
":obj:`add_mesh <pyvista.PlotterITK.add_mesh>`\\ \\(mesh\\[\\, color\\, "
"scalars\\, opacity\\, ...\\]\\)"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/itk_plotting.rst:84:<autosummary>:1
#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.add_mesh:1
msgid "Add a PyVista/VTK mesh or dataset."
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/itk_plotting.rst:84:<autosummary>:1
msgid ""
":obj:`add_points <pyvista.PlotterITK.add_points>`\\ \\(points\\[\\, color\\,"
" point\\_size\\]\\)"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/itk_plotting.rst:84:<autosummary>:1
#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.add_points:1
msgid "Add points to plotter."
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/itk_plotting.rst:84:<autosummary>:1
msgid ""
":obj:`show <pyvista.PlotterITK.show>`\\ \\(\\[ui\\_collapsed\\, rotate\\, "
"show\\_bounds\\]\\)"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/itk_plotting.rst:84:<autosummary>:1
#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.show:1
msgid "Show itkwidgets plotter in cell output."
msgstr ""

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK:1
msgid "Bases: :class:`object`"
msgstr ""

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK:1
msgid "ITKwidgets plotter."
msgstr ""

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK:3
msgid ""
"Used for plotting interactively within a jupyter notebook. Requires "
"``itkwidgets>=0.25.2``.  For installation see:"
msgstr ""

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK:6
msgid "https://github.com/InsightSoftwareConsortium/itkwidgets#installation"
msgstr ""

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.add_mesh:3
msgid "Adds any PyVista/VTK mesh that itkwidgets can wrap to the scene."
msgstr ""

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.add_mesh:6
msgid ""
"Any PyVista or VTK mesh is supported. Also, any dataset that "
":func:`pyvista.wrap` can handle including NumPy arrays of XYZ points."
msgstr ""

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.add_mesh:10
msgid ""
"Use to make the entire mesh have a single solid color. Either a string, RGB "
"list, or hex color string.  For example: ``color='white'``, ``color='w'``, "
"``color=[1, 1, 1]``, or ``color='#FFFFFF'``. Color will be overridden if "
"scalars are specified."
msgstr ""

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.add_mesh:16
msgid ""
"Scalars used to \"color\" the mesh.  Accepts a string name of an array that "
"is present on the mesh or an array equal to the number of cells or the "
"number of points in the mesh.  Array should be sized as a single vector. If "
"both ``color`` and ``scalars`` are ``None``, then the active scalars are "
"used."
msgstr ""

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.add_mesh:23
msgid ""
"Opacity of the mesh. If a single float value is given, it will be the global"
" opacity of the mesh and uniformly applied everywhere - should be between 0 "
"and 1.  Default 1.0"
msgstr ""

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.add_mesh:27
msgid ""
"Smooth mesh surface mesh by taking into account surface normals.  Surface "
"will appear smoother while sharp edges will still look sharp.  Default "
"False."
msgstr ""

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.add_points:3
msgid "n x 3 numpy array of points or pyvista dataset with points."
msgstr ""

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.add_points:5
msgid ""
"Either a string, rgb list, or hex color string.  For example:  "
"``color='white'`` ``color='w'`` ``color=[1, 1, 1]`` ``color='#FFFFFF'``"
msgstr ""

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.add_points:5
msgid "Either a string, rgb list, or hex color string.  For example:"
msgstr ""

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.add_points:7
msgid ""
"``color='white'`` ``color='w'`` ``color=[1, 1, 1]`` ``color='#FFFFFF'``"
msgstr ""

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.add_points:12
msgid ""
"Point size of any nodes in the dataset plotted. Also applicable when "
"style='points'. Default ``3.0``"
msgstr ""

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.add_points:18
msgid "Add 10 random points to the plotter"
msgstr ""

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.show:3
msgid ""
"Plot with the user interface collapsed.  UI can be enabled when plotting.  "
"Default ``False``."
msgstr ""

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.show:6
msgid ""
"Rotate the camera around the scene.  Default ``False``. Appears to be "
"computationally intensive."
msgstr ""

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.show:9
msgid "Show the bounding box.  Default False"
msgstr ""

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.show:11
msgid "Size of the points displayed in the"
msgstr ""

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.show:0
msgid "Returns"
msgstr ""

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.show:14
msgid "**viewer** -- ``ITKwidgets`` viewer."
msgstr ""

#: ../../pyvista/pyvista/jupyter/itkplotter.pydocstring of
#: pyvista.jupyter.itkplotter.PlotterITK.show:0
msgid "Return type"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/panel.rst:4
msgid "Using ``Panel`` with PyVista"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/panel.rst:5
msgid ""
"PyVista supports the usage of the `panel "
"<https://github.com/holoviz/panel>`_ module as a ``vtk.js`` jupyterlab "
"plotting backend that can be utialized as either a standalone VTK viewer, or"
" as a tightly integrated ``pyvista`` plotting backend.  For example, within "
"a Jupyter notebook environment, you can pass ``jupyter_backend='panel'`` to "
"``plot``, or ``Plotter.show`` to automatically enable plotting with Juptyer "
"and ``panel``."
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/panel.rst:13
msgid "For example, here's the ``PyVista`` logo:"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/panel.rst:20
msgid ""
"Note that this isn't a perfect replica since there are some details lost in "
"the conversion to ``vtk.js``, but for the vast majority of cases, this can "
"be used to accurately render ``pyvista`` plots within Jupyterlab."
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/panel.rst:27
msgid "Examples and Usage"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/panel.rst:28
msgid ""
"There are two ways to use ``panel`` within Jupyter notebooks.  It can be "
"done on a plot by plot basis by setting the ``jupyter_backend`` in "
"``mesh.plot()``:"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/panel.rst:48
msgid "Alternatively, you can set the backend globally:"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/panel.rst:82
msgid "Configuration Considerations"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/panel.rst:83
msgid ""
"If running on a headless environment (e.g. Google Colab, your own VM), be "
"sure to start up a virtual framebuffer using ``Xvfb``.  You can either start"
" it using bash with:"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/panel.rst:99
msgid ""
"Or alternatively, start it using the built in ``pyvista.start_xvfb()``.  Be "
"sure to install ``xvfb`` and ``libgl1-mesa-glx`` with:"
msgstr ""

#: ../../pyvista/doc/user-guide/jupyter/panel.rst:107
msgid "Or using the package manager used by your environment."
msgstr ""

#: ../../pyvista/doc/user-guide/optional_features.rst:2
msgid "Optional Features"
msgstr ""

#: ../../pyvista/doc/user-guide/optional_features.rst:3
msgid ""
"Due to its usage of `numpy`, the `pyvista` module plays well with other "
"modules, including `matplotlib`, `trimesh`, `rtree`, and `pyembree`.  The "
"following examples show some optional features included within `pyvista` "
"that use or combine several modules to perform advanced analyses not "
"normally included within `VTK`."
msgstr ""

#: ../../pyvista/doc/user-guide/optional_features.rst:10
msgid "Vectorised Ray Tracing"
msgstr ""

#: ../../pyvista/doc/user-guide/optional_features.rst:11
msgid ""
"Perform many ray traces simultaneously with a PolyData Object (requires "
"optional dependencies trimesh, rtree and pyembree)"
msgstr ""

#: ../../pyvista/doc/user-guide/simple.rst:2
msgid "Basic API Usage"
msgstr ""

#: ../../pyvista/doc/user-guide/simple.rst:4
msgid ""
"PyVista provides tools to get started with just about any VTK dataset and "
"wrap that object into an easily accessible data object. Whether you are new "
"to the VTK library or a power user, the best place to get started is with "
"PyVista's :func:`pyvista.wrap` and :func:`pyvista.read` functions to either "
"wrap a VTK data object in memory or read a VTK or VTK-friendly file format."
msgstr ""

#: ../../pyvista/doc/user-guide/simple.rst:12
msgid "Wrapping a VTK Data Object"
msgstr ""

#: ../../pyvista/doc/user-guide/simple.rst:14
msgid ""
"The wrapping function is under the :mod:`pyvista.utilities` module which is "
"usable from the top level of PyVista. This allows users to quickly wrap any "
"VTK dataset they have as a PyVista object:"
msgstr ""

#: ../../pyvista/doc/user-guide/simple.rst:28
msgid "Reading a VTK File"
msgstr ""

#: ../../pyvista/doc/user-guide/simple.rst:30
msgid ""
"PyVista provides a convenience function to read VTK file formats into their "
"respective PyVista data objects. Simply call the :func:`pyvista.read` "
"function passing the filename:"
msgstr ""

#: ../../pyvista/doc/user-guide/simple.rst:41
msgid "Accessing the Wrapped Data Object"
msgstr ""

#: ../../pyvista/doc/user-guide/simple.rst:43
msgid ""
"Now that you have a wrapped VTK data object, you can start accessing and "
"modifying the dataset! Some of the most common properties to access include "
"the points and point/cell data (the data attributes assigned to the nodes or"
" cells of the mesh respectively)."
msgstr ""

#: ../../pyvista/doc/user-guide/simple.rst:48
msgid "First, check out some common meta-properties:"
msgstr ""

#: ../../pyvista/doc/user-guide/simple.rst:77
msgid ""
"Access the points by fetching the ``.points`` attribute on any PyVista mesh "
"as a NumPy array:"
msgstr ""

#: ../../pyvista/doc/user-guide/simple.rst:93
msgid ""
"Accessing the different data attributes on the nodes and cells of the mesh "
"is interfaced via dictionaries with callbacks to the VTK object. These "
"dictionaries of the different point and cell arrays can be directly accessed"
" and modified as NumPy arrays. In the example below, we load a dataset, "
"access an array on that dataset, then add some more data:"
msgstr ""

#: ../../pyvista/doc/user-guide/simple.rst:115
msgid "Plotting"
msgstr ""

#: ../../pyvista/doc/user-guide/simple.rst:117
msgid ""
"PyVista includes numerous plotting routines that are intended to be "
"intuitive and highly controllable with ``matplotlib`` similar syntax and "
"keyword arguments. To get started, try out the :func:`pyvista.plot` "
"convenience method that is binded to each PyVista data object:"
msgstr ""

#: ../../pyvista/doc/user-guide/simple.rst:141
msgid ""
"You can also create the plotter to highly control the scene. First, "
"instantiate a plotter such as :class:`pyvista.Plotter` or "
":class:`pyvistaqt.BackgroundPlotter`:"
msgstr ""

#: ../../pyvista/doc/user-guide/simple.rst:144
msgid ""
"The :class:`pyvista.Plotter` will create a rendering window that will pause "
"the execution of the code after calling ``show``."
msgstr ""

#: ../../pyvista/doc/user-guide/simple.rst:156
msgid ""
"Note that the ``show`` method will return the last used camera position of "
"the rendering window in case you want to chose a camera position and use it "
"again later."
msgstr ""

#: ../../pyvista/doc/user-guide/simple.rst:160
msgid ""
"You can then use this cached camera for additional plotting without having "
"to manually interact with the plotting window:"
msgstr ""

#: ../../pyvista/doc/user-guide/simple.rst:171
msgid "Be sure to check out all the available plotters for your use case:"
msgstr ""

#: ../../pyvista/doc/user-guide/simple.rst:173
msgid ""
":class:`pyvista.Plotter`: The standard plotter that pauses the code until "
"closed"
msgstr ""

#: ../../pyvista/doc/user-guide/simple.rst:174
msgid ""
":class:`pyvistaqt.BackgroundPlotter`: Creates a rendering window that is "
"interactive and does not pause the code execution (for more information see "
"the `pyvistaqt`_ package)"
msgstr ""

#: ../../pyvista/doc/user-guide/simple.rst:181
msgid "Exporting"
msgstr ""

#: ../../pyvista/doc/user-guide/simple.rst:183
msgid ""
"Any PyVista mesh object can be saved to a VTK file format using the "
"``.save()`` method bound directly on those objects. For example, the mesh "
"used above could be saved like:"
msgstr ""

#: ../../pyvista/doc/user-guide/simple.rst:191
msgid ""
"Or since that mesh is :class:`pyvista.PolyData`, we could use the ``.vtp``, "
"``.stl``, or ``.ply`` formats as well. For more details on which formats are"
" supported in the ``.save()`` method, please refer to the docs for that "
"method on each mesh type."
msgstr ""

#: ../../pyvista/doc/user-guide/simple.rst:196
msgid ""
"Also note that we can export any PyVista mesh to any file format supported "
"by `meshio <https://github.com/nschloe/meshio>`_. Meshio supports many "
"formats including: Abaqus, ANSYS msh, AVS-UCD, CGNS, DOLFIN XML, Exodus, "
"FLAC3D, H5M, Kratos/MDPA, Medit, MED/Salome, Gmsh (versions 2 and 4), OBJ, "
"OFF, PERMAS, PLY, STL, TetGen .node/.ele, SVG (2D only, output only), UGRID,"
" WKT (TIN), XDMF, and more!"
msgstr ""

#: ../../pyvista/doc/user-guide/simple.rst:203
msgid ""
"To save a PyVista mesh using ``meshio``, use :func:`pyvista.save_meshio`:"
msgstr ""

#: ../../pyvista/doc/user-guide/themes.rst:4
msgid "Plotting Themes"
msgstr ""

#: ../../pyvista/doc/user-guide/themes.rst:6
msgid ""
"PyVista plotting parameters can be controlled on a plot by plot basis or "
"through a global theme, making it possible to control mesh colors and styles"
" through one global configuration."
msgstr ""

#: ../../pyvista/doc/user-guide/themes.rst:17
msgid ""
"The default theme parameters in PyVista can be accessed and displayed with:"
msgstr ""

#: ../../pyvista/doc/user-guide/themes.rst:24
msgid ""
"Default plotting parameters can be accessed individually by their attribute "
"names:"
msgstr ""

#: ../../pyvista/doc/user-guide/themes.rst:31
msgid ""
"Here's an example plot of the Stanford Dragon using default plotting "
"parameters:"
msgstr ""

#: ../../pyvista/doc/user-guide/themes.rst:40
msgid "These parameters can then be modified globally with:"
msgstr ""

#: ../../pyvista/doc/user-guide/themes.rst:48
msgid "Now, the mesh will be plotted with the new global parameters:"
msgstr ""

#: ../../pyvista/doc/user-guide/themes.rst:54
msgid "This is identical to plotting the mesh with the following parameters:"
msgstr ""

#: ../../pyvista/doc/user-guide/themes.rst:62
msgid "Creating A Custom Theme"
msgstr ""

#: ../../pyvista/doc/user-guide/themes.rst:63
msgid ""
"You can customize a theme based on one of the built-in themes and then apply"
" it globally with:"
msgstr ""

#: ../../pyvista/doc/user-guide/themes.rst:76
msgid "Alternatively, you can save the theme to disk to be used later with:"
msgstr ""

#: ../../pyvista/doc/user-guide/themes.rst:82
msgid "And then subsequently loaded in a new session of pyvista with:"
msgstr ""

#: ../../pyvista/doc/user-guide/themes.rst:90
msgid "Theme API"
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes:1
msgid "API description for managing plotting theme parameters in pyvista."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes:5
msgid "Apply a built-in theme"
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes:13
msgid "Load a theme into pyvista"
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes:19
msgid "Create a custom theme from the default theme and load it into pyvista."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.DarkTheme:1
msgid "Dark mode theme."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.DarkTheme:3
msgid "Black background, \"viridis\" colormap, tan meshes, white (hidden) edges."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.DarkTheme:7
msgid "Make the dark theme the global default."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.DarkTheme:13
#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.DocumentTheme:15
#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.ParaViewTheme:11
msgid "Alternatively, set via a string."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.DefaultTheme:1
msgid "PyVista default theme."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.DefaultTheme:5
msgid "Change the global default background color to white."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.DefaultTheme:10
msgid "Show edges by default."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.DefaultTheme:14
msgid "Create a new theme from the default theme and apply it globally."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.auto_close:1
msgid "Automatically close the figures when finished plotting."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.auto_close:4
msgid "Set to ``False`` with extreme caution."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.axes:1
msgid "Return or set the default ``axes`` configuration."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.axes:5
msgid "Set the x axis color to black."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.axes:10
msgid "Show axes by default."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.axes:14
msgid "Use the ``vtk.vtkCubeAxesActor``."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.background:1
msgid "Return or set the default background color of pyvista plots."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.background:5
msgid "Set the default global background of all plots to white."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.camera:1
msgid "Return or set the default camera position."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.camera:5
msgid "Set both the position and view of the camera."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.camera:11
msgid "Set the default position of the camera."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.camera:15
msgid "Set the default view of the camera."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.cmap:1
msgid "Return or set the default colormap of pyvista."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.cmap:3
msgid ""
"See available Matplotlib colormaps.  Only applicable for when displaying "
"``scalars``. Requires Matplotlib to be installed. If ``colorcet`` or "
"``cmocean`` are installed, their colormaps can be specified by name."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.cmap:8
msgid ""
"You can also specify a list of colors to override an existing colormap with "
"a custom one.  For example, to create a three color colormap you might "
"specify ``['green', 'red', 'blue']``"
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.cmap:14
msgid "Set the default global colormap to 'jet'."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.color:1
msgid "Return or set the default color of meshes in pyvista."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.color:3
msgid "Used for meshes without ``scalars``."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.color:5
msgid ""
"When setting, the value must be either a string, rgb list, or hex color "
"string.  For example:"
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.color:8
msgid "``color='white'``"
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.color:9
msgid "``color='w'``"
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.color:10
msgid "``color=[1, 1, 1]``"
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.color:11
msgid "``color='#FFFFFF'``"
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.color:15
msgid "Set the default mesh color to 'red'."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.colorbar_horizontal:1
msgid "Return or set the default parameters of a horizontal colorbar."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.colorbar_horizontal:5
msgid "Set the default horizontal colorbar width to 0.6."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.colorbar_horizontal:10
msgid "Set the default horizontal colorbar height to 0.2."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.colorbar_orientation:1
msgid "Return or set the default colorbar orientation."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.colorbar_orientation:3
msgid "Must be either ``'vertical'`` or ``'horizontal'``."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.colorbar_vertical:1
msgid "Return or set the default parameters of a vertical colorbar."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.colorbar_vertical:5
msgid "Set the default colorbar width to 0.45."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.colorbar_vertical:10
msgid "Set the default colorbar height to 0.8."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.depth_peeling:1
msgid "Return or set the default depth peeling parameters."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.depth_peeling:5
msgid ""
"Set the global depth_peeling parameter default to be enabled with 8 peels."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.edge_color:1
msgid "Return or set the default edge color."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.edge_color:5
msgid "Set the global edge color to 'blue'."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.floor_color:1
msgid "Return or set the default floor color."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.font:1
msgid "Return or set the default font size, family, and/or color."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.font:5
msgid ""
"Set the default font family to 'arial'.  Must be either 'arial', 'courier', "
"or 'times'."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.font:11
msgid "Set the default font size to 20."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.font:15
msgid "Set the default title size to 40."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.font:19
msgid "Set the default label size to 10."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.font:23
msgid "Set the default text color to 'grey'."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.font:27
msgid "String formatter used to format numerical data to '%.6e'."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.full_screen:1
msgid "Return if figures are shown in full screen."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.full_screen:5
msgid "Set windows to be full screen by default."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.interactive:1
msgid "Return or set the default ``interactive`` parameter."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.interactive:5
msgid "Make all plots non-interactive globally."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.jupyter_backend:1
msgid "Return or set the jupyter notebook plotting backend."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.jupyter_backend:24
msgid ""
"``'static'`` : Display a single static image within the JupyterLab "
"environment.  Still requires that a virtual framebuffer be setup when "
"displaying on a headless server, but does not require any additional modules"
" to be installed."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.lighting:1
msgid "Return or set the default ``lighting``."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.lighting:5
msgid "Disable lighting globally."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.load_theme:1
msgid "Overwrite the current theme with a theme."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.load_theme:5
msgid ""
"Create a custom theme from the default theme and load it into the global "
"theme of pyvista."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.load_theme:19
msgid "Create a custom theme from the dark theme and load it into pyvista."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.multi_rendering_splitting_position:1
msgid ""
"Return or set the default ``multi_rendering_splitting_position`` parameter."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.multi_rendering_splitting_position:5
msgid ""
"Set multi_rendering_splitting_position globally to 0.5 (the middle of the "
"window)."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.multi_samples:1
msgid "Return or set the default ``multi_samples`` parameter."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.multi_samples:3
msgid "Set the number of multisamples to enable hardware antialiasing."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.multi_samples:7
msgid "Set the default number of multisamples to 2."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.name:1
msgid "Return or set the name of the theme."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.nan_color:1
msgid "Return or set the default NaN color."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.nan_color:3
msgid "This color is used to plot all NaN values."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.notebook:1
msgid "Return or set the state of notebook plotting."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.notebook:3
msgid ""
"Setting this to ``True`` always enables notebook plotting, while setting it "
"to ``False`` disables plotting even when plotting within a jupyter notebook "
"and plots externally."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.notebook:9
msgid "Disable all jupyter notebook plotting."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.outline_color:1
msgid "Return or set the default outline color."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.render_points_as_spheres:1
msgid "Return or set the default ``render_points_as_spheres`` parameter."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.render_points_as_spheres:5
msgid "Render points as spheres by default globally."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.restore_defaults:1
msgid "Restore the theme defaults."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.save:1
msgid "Serialize this theme to a json file."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.save:5
msgid "Export and then load back in a theme."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.show_edges:1
msgid "Return or set the default edge visibility."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.show_edges:5
msgid "Show edges globally by default."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.show_scalar_bar:1
msgid "Return or set the default color bar visibility."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.show_scalar_bar:5
msgid "Show the scalar bar by default when scalars are available."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.silhouette:1
msgid "Return or set the default ``silhouette`` configuration."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.silhouette:5
msgid "Set parameters of the silhouette."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.slider_styles:1
msgid "Return the default slider style configurations."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.smooth_shading:1
msgid "Return or set the default ``smooth_shading`` parameter."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.smooth_shading:5
msgid "Set the global smooth_shading parameter default to ``True``."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.title:1
msgid "Return or set the default ``title`` parameter."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.title:3
msgid "This is the VTK render window title."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.title:7
msgid "Set title globally to 'plot'."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.transparent_background:1
msgid "Return or set the default ``transparent_background`` parameter."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.transparent_background:5
msgid "Set transparent_background globally to ``True``."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.use_ipyvtk:1
msgid "Set or return the usage of \"ipyvtk\" as a jupyter backend."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.use_ipyvtk:3
msgid "Deprecated in favor of ``jupyter_backend``."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.volume_mapper:1
msgid "Return or set the default ``volume_mapper`` parameter."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.volume_mapper:3
msgid ""
"Must be one of the following strings, which are mapped to the following VTK "
"volume mappers."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.volume_mapper:6
msgid "``'fixed_point'`` : ``vtk.vtkFixedPointVolumeRayCastMapper``"
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.volume_mapper:7
msgid "``'gpu'`` : ``vtk.vtkGPUVolumeRayCastMapper``"
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.volume_mapper:8
msgid "``'open_gl'`` : ``vtk.vtkOpenGLGPUVolumeRayCastMapper``"
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.volume_mapper:9
msgid "``'smart'`` : ``vtk.vtkSmartVolumeMapper``"
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.volume_mapper:13
msgid "Set default volume mapper globally to 'gpu'."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.window_size:1
msgid "Return or set the default render window size."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.window_size:5
msgid "Set window size to ``[400, 400]``."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.DocumentTheme:1
msgid "A document theme well suited for papers and presentations."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.DocumentTheme:3
msgid ""
"This theme uses a white background, black fonts, the \"viridis\" colormap, "
"and it disables edges.  Best used for presentations, papers, etc."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.DocumentTheme:9
msgid "Make the document theme the global default."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.ParaViewTheme:1
msgid "A paraview-like theme."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.ParaViewTheme:5
msgid "Make the paraview-like theme the global default."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.load_theme:1
msgid "Load a theme from a file."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.set_plot_theme:1
msgid "Set the plotting parameters to a predefined theme using a string."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.set_plot_theme:3
msgid ""
"Theme name.  Either ``'default'``, ``'document'``, ``'dark'``, or "
"``'paraview'``."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.set_plot_theme:9
msgid "Set to the default theme."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.set_plot_theme:14
msgid "Set to the document theme."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.set_plot_theme:18
msgid "Set to the dark theme."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.set_plot_theme:22
msgid "Set to the ParaView theme."
msgstr ""

#: ../../pyvista/doc/user-guide/what-is-a-mesh.rst:4
msgid "What is a Mesh?"
msgstr ""

#: ../../pyvista/doc/user-guide/what-is-a-mesh.rst:6
msgid ""
"In PyVista, a mesh is any spatially referenced information and usually "
"consists of geometrical representations of a surface or volume in 3D space. "
"We commonly refer to any spatially referenced dataset as a mesh, so often "
"the distinction between a mesh, a grid, and a volume can get fuzzy - but "
"that does not matter in PyVista. If you have a dataset that is a surface "
"mesh with 2D geometries like triangles, we call it a mesh and if you have a "
"dataset with 3D geometries like voxels, tetrahedrals, hexahedrons, etc., "
"then we also call that a mesh! Why? Because it is simple that way."
msgstr ""

#: ../../pyvista/doc/user-guide/what-is-a-mesh.rst:15
msgid ""
"In all spatially referenced datasets, there lies an underlying mesh "
"structure - the connectivity or geometry between nodes to define cells. "
"Whether those cells are 2D or 3D is not always of importance and we've "
"worked hard to make PyVista work for datasets of either or mixed geometries "
"so that you as a user do not have to get bogged down in the nuances."
msgstr ""

#: ../../pyvista/doc/user-guide/what-is-a-mesh.rst:22
msgid "What is a Node?"
msgstr ""

#: ../../pyvista/doc/user-guide/what-is-a-mesh.rst:24
msgid ""
"Nodes are the vertices of the mesh - the XYZ coordinates of the underlying "
"structure. All PyVista datasets (meshes!) have nodes and sometimes, you can "
"have a mesh that only has nodes - like a point cloud."
msgstr ""

#: ../../pyvista/doc/user-guide/what-is-a-mesh.rst:28
msgid ""
"For example, you can create a point cloud mesh using the "
":class:`pyvista.PolyData` class which is built for meshes that have 1D and "
"2D cell types (we'll get into what a cell is briefly)."
msgstr ""

#: ../../pyvista/doc/user-guide/what-is-a-mesh.rst:32
msgid ""
"Let's start with a point cloud - this is a mesh type that only has vertices."
" You can create one by defining a 2D array XYZ coordinates like so:"
msgstr ""

#: ../../pyvista/doc/user-guide/what-is-a-mesh.rst:53
msgid ""
"But it's import to note that most meshes have some sort of connectivity "
"between nodes such as this gridded mesh:"
msgstr ""

#: ../../pyvista/doc/user-guide/what-is-a-mesh.rst:72
msgid "Or this triangulated surface:"
msgstr ""

#: ../../pyvista/doc/user-guide/what-is-a-mesh.rst:90
msgid "What is a Cell?"
msgstr ""

#: ../../pyvista/doc/user-guide/what-is-a-mesh.rst:92
msgid ""
"A cell is the geometry between nodes that defines the connectivity or "
"topology of a mesh. In the examples above, cells are defined by the lines "
"(edges colored in black) connecting nodes (colored in red).  For example, a "
"cell in the beam example is a a voxel defined by region between eight nodes "
"in that mesh:"
msgstr ""

#: ../../pyvista/doc/user-guide/what-is-a-mesh.rst:117
msgid ""
"Cells aren't limited to voxels, they could be a triangle between three "
"nodes, a line between two nodes, or even a single node could be its own cell"
" (but that's a special case)."
msgstr ""

#: ../../pyvista/doc/user-guide/what-is-a-mesh.rst:123
msgid "What are attributes?"
msgstr ""

#: ../../pyvista/doc/user-guide/what-is-a-mesh.rst:125
msgid ""
"Attributes are data values that live on either the nodes or cells of a mesh."
" In PyVista, we work with both point data and cell data and allow easy "
"access to data dictionaries to hold arrays for attributes that live either "
"on all nodes or on all cells of a mesh. These attributes can be accessed by "
"dictionaries attached to any PyVista mesh called ``.point_arrays`` or "
"``.cell_arrays``."
msgstr ""

#: ../../pyvista/doc/user-guide/what-is-a-mesh.rst:133
msgid ""
"Point data refers to arrays of values (scalars, vectors, etc.) that live on "
"each node of the mesh.  The order of this array is crucial! Each element in "
"an attribute array must correspond to a node or cell in the mesh.  Let's "
"create some point data for the beam mesh.  When plotting the values between "
"nodes are interpolated across the cells."
msgstr ""

#: ../../pyvista/doc/user-guide/what-is-a-mesh.rst:147
msgid ""
"Cell data refers to arrays of values (scalars, vectors, etc.) that live "
"throughout each cell of the mesh. That is the entire cell (2D face or 3D "
"volume) is assigned the value of that attribute."
msgstr ""

#: ../../pyvista/doc/user-guide/what-is-a-mesh.rst:159
msgid ""
"Here's a comparison of point data vs. cell data and how point data is "
"interpolated across cells when mapping colors. This is unlike cell data "
"which has a single value across the cell's domain:"
msgstr ""

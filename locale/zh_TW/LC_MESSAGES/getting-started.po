# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017-2021, The PyVista Developers
# This file is distributed under the same license as the PyVista package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyVista 0.32.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-02 00:46+0000\n"
"PO-Revision-Date: 2020-08-05 16:06+0000\n"
"Language-Team: Chinese (Taiwan) (https://www.transifex.com/getfem-doc/teams/112279/zh_TW/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_TW\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../pyvista/doc/getting-started/authors.rst:2
#: ../../pyvista/doc/getting-started/index.rst:29
msgid "Authors & Citation"
msgstr ""

#: ../../pyvista/doc/getting-started/authors.rst:4
msgid ""
"PyVista is an open-source project with a community of contributors. While "
"most of PyVista's contributors are listed in the :ref:`authors_ref` section,"
" please be sure to head over to the `Contributors Graph`_."
msgstr ""

#: ../../pyvista/CITATION.rst:4
#: ../../pyvista/doc/getting-started/index.rst:151
msgid "Citing PyVista"
msgstr ""

#: ../../pyvista/CITATION.rst:6
#: ../../pyvista/doc/getting-started/index.rst:153
msgid ""
"There is a `paper about PyVista <https://doi.org/10.21105/joss.01450>`_!"
msgstr ""

#: ../../pyvista/CITATION.rst:8
msgid ""
"If you are using PyVista in your scientific research, please help our "
"scientific visibility by citing our work!"
msgstr ""

#: ../../pyvista/CITATION.rst:12
msgid ""
"Sullivan and Kaszynski, (2019). PyVista: 3D plotting and mesh analysis "
"through a streamlined interface for the Visualization Toolkit (VTK). Journal"
" of Open Source Software, 4(37), 1450, https://doi.org/10.21105/joss.01450"
msgstr ""

#: ../../pyvista/CITATION.rst:15
msgid "BibTex:"
msgstr ""

#: ../../pyvista/AUTHORS.rst:4
msgid "Authors"
msgstr ""

#: ../../pyvista/AUTHORS.rst:10
msgid ""
"The following is a list of authors who have made substantial contributions "
"to the conception or design of this software; or the creation of new code "
"used in this software; or have drafted the work or substantively revised it "
"and are considered \"The PyVista Developers\":"
msgstr ""

#: ../../pyvista/AUTHORS.rst:15
msgid "Alex Kaszynski, (`@akaszynski <https://github.com/akaszynski/>`_)"
msgstr ""

#: ../../pyvista/AUTHORS.rst:16
msgid "Bane Sullivan, (`@banesullivan <https://github.com/banesullivan/>`_)"
msgstr ""

#: ../../pyvista/AUTHORS.rst:17
msgid "Henrik Åhl, (`@supersubscript <https://github.com/supersubscript/>`_)"
msgstr ""

#: ../../pyvista/AUTHORS.rst:18
msgid ""
"Guillaume Favelier, (`@GuillaumeFavelier "
"<https://github.com/GuillaumeFavelier/>`_)"
msgstr ""

#: ../../pyvista/AUTHORS.rst:19
msgid "Jevin Jones, (`@JevinJ <https://github.com/JevinJ/>`_)"
msgstr ""

#: ../../pyvista/AUTHORS.rst:20
msgid "András Deák, (`@adeak <https://github.com/adeak>`_)"
msgstr ""

#: ../../pyvista/AUTHORS.rst:21
msgid "Tetsuo Koyama, (`@tkoyama010 <https://github.com/tkoyama010>`_)"
msgstr ""

#: ../../pyvista/AUTHORS.rst:22
msgid ""
"Rodrigo Mologni, (`@rodrigomologni <https://github.com/rodrigomologni>`_)"
msgstr ""

#: ../../pyvista/AUTHORS.rst:23
msgid "Phil Chiu, (`@whophil <https://github.com/whophil>`_)"
msgstr ""

#: ../../pyvista/AUTHORS.rst:24
msgid "Thomas G., (`@thomgrand <https://github.com/thomgrand>`_)"
msgstr ""

#: ../../pyvista/AUTHORS.rst:25
msgid "Eric Larson, (`@larsoner <https://github.com/larsoner>`_)"
msgstr ""

#: ../../pyvista/AUTHORS.rst:26
msgid "Matthew Flamm, (`@MatthewFlamm <https://github.com/MatthewFlamm>`_)"
msgstr ""

#: ../../pyvista/AUTHORS.rst:27
msgid "Darik Gamble, (`@darikg <https://github.com/darikg>`_)"
msgstr ""

#: ../../pyvista/doc/getting-started/authors.rst:19
msgid "License"
msgstr ""

#: ../../pyvista/LICENSE:1
msgid "The MIT License"
msgstr ""

#: ../../pyvista/LICENSE:3
msgid "Copyright (c) 2017-2021 The PyVista Developers"
msgstr ""

#: ../../pyvista/LICENSE:5
msgid ""
"Permission is hereby granted, free of charge, to any person obtaining a copy"
" of this software and associated documentation files (the \"Software\"), to "
"deal in the Software without restriction, including without limitation the "
"rights to use, copy, modify, merge, publish, distribute, sublicense, and/or "
"sell copies of the Software, and to permit persons to whom the Software is "
"furnished to do so, subject to the following conditions:"
msgstr ""

#: ../../pyvista/LICENSE:12
msgid ""
"The above copyright notice and this permission notice shall be included in "
"all copies or substantial portions of the Software."
msgstr ""

#: ../../pyvista/LICENSE:15
msgid ""
"THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"
" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, "
"FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE "
"AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER "
"LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING "
"FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS"
" IN THE SOFTWARE."
msgstr ""

#: ../../pyvista/doc/getting-started/external_examples.rst:41
#: ../../pyvista/doc/getting-started/external_examples.rst:31
msgid "VesselVio"
msgstr ""

#: ../../pyvista/doc/getting-started/external_examples.rst:69
#: ../../pyvista/doc/getting-started/external_examples.rst:59
msgid "Atmospheric Convection"
msgstr ""

#: ../../pyvista/doc/getting-started/external_examples.rst:97
#: ../../pyvista/doc/getting-started/external_examples.rst:87
msgid "Damavand Volcano"
msgstr ""

#: ../../pyvista/doc/getting-started/external_examples.rst:125
#: ../../pyvista/doc/getting-started/external_examples.rst:115
msgid "Anvil Cirrus Plumes"
msgstr ""

#: ../../pyvista/doc/getting-started/external_examples.rst:153
#: ../../pyvista/doc/getting-started/external_examples.rst:143
msgid "Optimization visualization with PyVista"
msgstr ""

#: ../../pyvista/doc/getting-started/external_examples.rst:181
#: ../../pyvista/doc/getting-started/external_examples.rst:171
msgid "FLEM: A diffusive landscape evolution model"
msgstr ""

#: ../../pyvista/doc/getting-started/external_examples.rst:209
#: ../../pyvista/doc/getting-started/external_examples.rst:199
msgid "Orvisu Demo Application"
msgstr ""

#: ../../pyvista/doc/getting-started/external_examples.rst:237
#: ../../pyvista/doc/getting-started/external_examples.rst:227
msgid "PyMeshFix's example gallery"
msgstr ""

#: ../../pyvista/doc/getting-started/external_examples.rst:265
#: ../../pyvista/doc/getting-started/external_examples.rst:255
msgid "TetGen's example gallery"
msgstr ""

#: ../../pyvista/doc/getting-started/external_examples.rst:293
#: ../../pyvista/doc/getting-started/external_examples.rst:283
msgid "PVGeo's example gallery"
msgstr ""

#: ../../pyvista/doc/getting-started/external_examples.rst:321
#: ../../pyvista/doc/getting-started/external_examples.rst:311
msgid "FORGE Geothermal Project"
msgstr ""

#: ../../pyvista/doc/getting-started/external_examples.rst:349
#: ../../pyvista/doc/getting-started/external_examples.rst:339
msgid "AeroSandbox"
msgstr ""

#: ../../pyvista/doc/getting-started/external_examples.rst:377
#: ../../pyvista/doc/getting-started/external_examples.rst:367
msgid "OpenFOAM Rendering"
msgstr ""

#: ../../pyvista/doc/getting-started/external_examples.rst:405
#: ../../pyvista/doc/getting-started/external_examples.rst:395
msgid "3D Rendering with Discretize"
msgstr ""

#: ../../pyvista/doc/getting-started/external_examples.rst:433
#: ../../pyvista/doc/getting-started/external_examples.rst:423
msgid "3D visualization for the Open Mining Format (omf)"
msgstr ""

#: ../../pyvista/doc/getting-started/external_examples.rst:3
msgid "External Examples"
msgstr ""

#: ../../pyvista/doc/getting-started/external_examples.rst:5
msgid ""
"Here are a list of longer, more technical examples of what PyVista can do!"
msgstr ""

#: ../../pyvista/doc/getting-started/external_examples.rst:9
msgid ""
"Please note that these examples link to external websites. If any of these "
"links are broken, please raise an issue on the repository."
msgstr ""

#: ../../pyvista/doc/getting-started/external_examples.rst:13
msgid ""
"Do you have a technical processing workflow or visualization routine you "
"would like to share? If so, please consider sharing your work here "
"submitting a PR at https://github.com/pyvista and we would be glad to add "
"it!"
msgstr ""

#: ../../pyvista/doc/getting-started/external_examples.rst:22
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"An open-source application "
"for vasculature dataset analysis and visualization\">"
msgstr ""

#: ../../pyvista/doc/getting-started/external_examples.rst:36
#: ../../pyvista/doc/getting-started/external_examples.rst:64
#: ../../pyvista/doc/getting-started/external_examples.rst:92
#: ../../pyvista/doc/getting-started/external_examples.rst:120
#: ../../pyvista/doc/getting-started/external_examples.rst:148
#: ../../pyvista/doc/getting-started/external_examples.rst:176
#: ../../pyvista/doc/getting-started/external_examples.rst:204
#: ../../pyvista/doc/getting-started/external_examples.rst:232
#: ../../pyvista/doc/getting-started/external_examples.rst:260
#: ../../pyvista/doc/getting-started/external_examples.rst:288
#: ../../pyvista/doc/getting-started/external_examples.rst:316
#: ../../pyvista/doc/getting-started/external_examples.rst:344
#: ../../pyvista/doc/getting-started/external_examples.rst:372
#: ../../pyvista/doc/getting-started/external_examples.rst:400
#: ../../pyvista/doc/getting-started/external_examples.rst:428
msgid "</div>"
msgstr ""

#: ../../pyvista/doc/getting-started/external_examples.rst:50
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Atmospheric convection "
"plays a key role in the climate of tidally-locked terrestrial exoplanets: "
"insights from high-resolution simulations\">"
msgstr ""

#: ../../pyvista/doc/getting-started/external_examples.rst:78
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Visualize 3D models of "
"Damavand Volcano, Alborz, Iran.\">"
msgstr ""

#: ../../pyvista/doc/getting-started/external_examples.rst:106
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Dr. Morgan O'Neill at "
"Stanford University is researching Above Anvil Cirrus Plumes and its "
"dynamics as a hydraulic jump.\">"
msgstr ""

#: ../../pyvista/doc/getting-started/external_examples.rst:134
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Optimization visualization "
"with PyVista\">"
msgstr ""

#: ../../pyvista/doc/getting-started/external_examples.rst:162
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"FLEM: A diffusive landscape"
" evolution model\">"
msgstr ""

#: ../../pyvista/doc/getting-started/external_examples.rst:190
msgid "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"Orvisu Demo Application\">"
msgstr ""

#: ../../pyvista/doc/getting-started/external_examples.rst:218
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"PyMeshFix's example "
"gallery\">"
msgstr ""

#: ../../pyvista/doc/getting-started/external_examples.rst:246
msgid "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"TetGen's example gallery\">"
msgstr ""

#: ../../pyvista/doc/getting-started/external_examples.rst:274
msgid "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"PVGeo's example gallery\">"
msgstr ""

#: ../../pyvista/doc/getting-started/external_examples.rst:302
msgid "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"FORGE Geothermal Project\">"
msgstr ""

#: ../../pyvista/doc/getting-started/external_examples.rst:330
msgid "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"AeroSandbox\">"
msgstr ""

#: ../../pyvista/doc/getting-started/external_examples.rst:358
msgid "<div class=\"sphx-glr-thumbcontainer\" tooltip=\"OpenFOAM Rendering\">"
msgstr ""

#: ../../pyvista/doc/getting-started/external_examples.rst:386
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"3D Rendering with "
"Discretize\">"
msgstr ""

#: ../../pyvista/doc/getting-started/external_examples.rst:414
msgid ""
"<div class=\"sphx-glr-thumbcontainer\" tooltip=\"3D visualization for the "
"Open Mining Format (omf)\">"
msgstr ""

#: ../../pyvista/doc/getting-started/external_examples.rst:442
msgid "<div class=\"sphx-glr-clear\"></div>"
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:2
msgid "Getting Started"
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:16
#: ../../pyvista/doc/getting-started/why.rst:2
msgid "Why PyVista?"
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:19
msgid ""
"Learn more about why we created PyVista as an interface to the Visualization"
" Toolkit (VTK)."
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:32
msgid ""
"Using PyVista in your research? Please consider citing or acknowledging us."
"  We have a publication!"
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:43
msgid "See PyVista in External Efforts"
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:46
msgid "Take a look at third party projects using PyVista"
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:55
#: ../../pyvista/doc/getting-started/installation.rst:4
msgid "Installation"
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:61
msgid "Working with conda?"
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:64
msgid ""
"PyVista is available on `conda-forge <https://anaconda.org/conda-"
"forge/pyvista>`_"
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:74
msgid "Prefer pip?"
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:77
msgid ""
"PyVista can be installed via pip from `PyPI "
"<https://pypi.org/project/pyvista>`__."
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:88
msgid "In-depth instructions?"
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:91
msgid ""
"Installing a specific version? Installing from source? Check the advanced "
"installation page."
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:101
msgid "Support"
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:103
msgid ""
"For general questions about the project, its applications, or about software"
" usage, please create a discussion in `pyvista/discussions`_ where the "
"community can collectively address your questions. You are also welcome to "
"join us on Slack_ or send one of the developers an email. The project "
"support team can be reached at `info@pyvista.org`_."
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:115
msgid "Connections"
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:117
msgid ""
"PyVista is a powerful tool that researchers can harness to create "
"compelling, integrated visualizations of large datasets in an intuitive, "
"Pythonic manner. Here are a few open-source projects that leverage PyVista:"
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:121
msgid ""
"PVGeo_: Python package of VTK-based algorithms to analyze geoscientific data"
" and models. PyVista is used to make the inputs and outputs of PVGeo's "
"algorithms more accessible."
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:122
msgid ""
"discretize_: Discretization tools for finite volume and inverse problems. "
"``discretize`` provides ``toVTK`` methods that return PyVista versions of "
"their data types for `creating compelling visualizations`_."
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:123
msgid "gemgis_: Spatial data processing for geomodeling."
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:124
msgid "gimly_: Geophysical inversion and modeling library."
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:125
msgid ""
"itkwidgets_: Interactive Jupyter widgets to visualize images, point sets, "
"and meshes in 2D and 3D. Supports all PyVista mesh types."
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:126
msgid ""
"mne-python_: MNE: Magnetoencephalography (MEG) and Electroencephalography "
"(EEG) in Python."
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:127
msgid ""
"omfvista_: 3D visualization for the Open Mining Format (omf). PyVista "
"provides the foundation for this library's visualization."
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:128
msgid ""
"pyleecan_: Electrical engineering open-source software providing a user-"
"friendly, unified, flexible simulation framework for the multiphysic design "
"and optimization of electrical machines and drives"
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:129
msgid "pymapdl_: Pythonic interface to Ansys MAPDL."
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:130
msgid ""
"pymeshfix_: Python/Cython wrapper of Marco Attene's wonderful, award-winning"
" MeshFix_ software."
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:131
msgid ""
"pyprocar_: A Python library for electronic structure pre/post-processing."
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:132
msgid "tetgen_: Python Interface to Hang Si's C++ TetGen Library"
msgstr ""

#: ../../pyvista/doc/getting-started/index.rst:155
msgid ""
"If you are using PyVista in your scientific research, please help our "
"scientific visibility by citing our work! Head over to :ref:`citation_ref` "
"to learn more about citing PyVista."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:6
msgid ""
"PyVista is supported on Python versions 3.6+. Previous versions of Python "
"are no longer supported as outlined in `this issue`_."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:11
msgid ""
"For the best experience, please considering using Anaconda as a virtual "
"environment and package manager for Python and following the instructions to"
" install PyVista with Anaconda."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:16
msgid "Dependencies"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:18
msgid ""
"PyVista is built on top of the Visualization Toolkit (VTK) and NumPy - as "
"such, the following projects are required dependencies of PyVista:"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:21
msgid ""
"`vtk <https://pypi.org/project/vtk/>`_ - PyVista directly inherits types "
"from the VTK library."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:22
msgid ""
"`NumPy <https://pypi.org/project/numpy/>`_ - NumPy arrays provide a core "
"foundation for PyVista's data array access."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:23
msgid ""
"`imageio <https://pypi.org/project/imageio/>`_ - This library is used for "
"saving screenshots."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:24
msgid ""
"`appdirs <https://pypi.org/project/appdirs/>`_ - Data management for our "
"example datasets so users can download tutorials on the fly."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:25
msgid ""
"`meshio <https://pypi.org/project/meshio/>`_ - Input/Output for many mesh "
"formats."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:26
msgid "`scooby <https://github.com/banesullivan/scooby>`_ - Debugging tools"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:29
msgid "PyPI"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:34
msgid ""
"PyVista can be installed from `PyPI <https://pypi.org/project/pyvista/>`_ "
"using ``pip``::"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:41
msgid "Anaconda"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:46
msgid "To install this package with ``conda`` run::"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:51
msgid "Installing the Current Development Branch from GitHub"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:52
msgid ""
"There may be features or bug-fixes that have been implemented in PyVista but"
" have not made their way into a release.  To install ``pyvista`` from the "
"latest up-to-date development branch from github, use one of the following"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:60
msgid ""
"Alternatively, you can clone the repository with git and install it with "
"pip."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:68
msgid ""
"Note the development flag ``-e``.  This allows you to change pyvista in-"
"place without having to reinstall it for each change."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:73
msgid "Optional Dependencies"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:75
msgid "The following are a list of optional dependencies and their purpose:"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:78
msgid "Package"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:78
msgid "Purpose"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:80
msgid "``matplotlib``"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:80
msgid "Using Colormaps"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:82
msgid "``itkwidgets``"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:82
#: ../../pyvista/doc/getting-started/installation.rst:84
msgid "Interactive notebook rendering"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:84
msgid "``ipyvtklink``"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:86
msgid "``sphinx_gallery``"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:86
msgid "Capturing PyVista output for docs"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:88
msgid "``colorcet``"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:88
msgid "Perceptually uniform colormaps"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:90
msgid "``cmocean``"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:90
msgid "Oceanographic colormaps"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:92
msgid "``imageio-ffmpeg``"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:92
msgid "Saving movie files"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:94
msgid "``tqdm``"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:94
msgid "Status bars for monitoring filters"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:96
msgid "``trimesh`` ``rtree`` ``pyembree``"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:97
msgid "Vectorised ray tracing"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:103
msgid "Source / Developers"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:105
msgid ""
"Alternatively, you can install the latest version from GitHub by visiting "
"`PyVista <https://github.com/pyvista/pyvista>`_, and downloading the source "
"(cloning) by running::"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:114
msgid ""
"The latest documentation for the ``main`` branch of PyVista can be found at "
"`dev.pyvista.org <https://dev.pyvista.org>`_."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:119
msgid "Test Installation"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:121
msgid "You can test your installation by running an example:"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:128
msgid "See other examples and demos:"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:144
msgid ""
"A more comprehensive testing suite is available after cloning the source "
"repository. For details on how to clone and test the PyVista source, please "
"see our `Contributing Guide`_ and specifically, the `Testing`_ section."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:153
msgid "Running on CI Services"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:154
msgid ""
"Please head over to `pyvista/gl-ci-hepers`_ for details on setting up CI "
"services like Travis and Azure Pipelines to run PyVista."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:161
msgid "Running on MyBinder"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:162
msgid ""
"This section is for advanced users that would like to install and use "
"PyVista with headless displays on notebook hosting services like MyBinder_."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:165
msgid ""
"Please see `this project`_ for a convenient Cookiecutter_ to get started "
"using PyVista on the notebook hosting service MyBinder_."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:172
msgid ""
"To get started, the Docker container will need to have ``libgl1-mesa-dev`` "
"and ``xvfb`` installed through ``apt-get``. For MyBinder, include the "
"following in a file called ``apt.txt``::"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:179
msgid ""
"Then, you need to configure the headless display, for MyBinder, create a "
"file called ``start`` and include the following set up script that will run "
"every time your Docker container is launched:"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:197
msgid ""
"And that's it! Include PyVista in your Python requirements and get to "
"visualizing your data! If you need more help than this on setting up PyVista"
" for these types of services, hop on Slack and chat with the developers or "
"take a look at `this repository`_ that is currently using PyVista on "
"MyBinder."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:206
msgid "Running on Remote Servers"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:207
msgid ""
"Using PyVista on remote servers requires similar setup steps as in the above"
" Docker case. As an example, here are the complete steps to use PyVista on "
"AWS EC2 Ubuntu 18.04 LTS (``ami-0a313d6098716f372`` in ``us-east-1``). Other"
" servers would work similarly."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:212
msgid ""
"After logging into the remote server, install Miniconda and related "
"packages:"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:229
msgid "Then, configure the headless display:"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:240
msgid "Reconnect to the server with port-forwarding, and start Jupyter:"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:248
msgid "Visit ``localhost:8888`` in the web browser."
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:252
msgid "Running with Sphinx-Gallery"
msgstr ""

#: ../../pyvista/doc/getting-started/installation.rst:253
msgid "In your ``conf.py``, add the following:"
msgstr ""

#: ../../pyvista/doc/getting-started/why.rst:20
msgid ""
"VTK is an excellent visualization toolkit, and with Python bindings it "
"should be able to combine the speed of C++ with the rapid prototyping of "
"Python.  However, despite this VTK code programmed in Python generally looks"
" the same as its C++ counterpart.  This module seeks to simplify mesh "
"creation and plotting without losing functionality."
msgstr ""

#: ../../pyvista/doc/getting-started/why.rst:26
msgid ""
"Compare two approaches for loading and plotting a surface mesh from a file:"
msgstr ""

#: ../../pyvista/doc/getting-started/why.rst:31
msgid "Plotting a Mesh using Python's VTK"
msgstr ""

#: ../../pyvista/doc/getting-started/why.rst:32
msgid ""
"Using this `example <https://kitware.github.io/vtk-"
"examples/site/Python/IO/ReadSTL/>`_ as a baseline, loading and plotting an "
"STL file requires a lot of code when using only the `vtk`_ library.  PyVista"
" on the other hand only requires a few lines of code."
msgstr ""

#: ../../pyvista/doc/getting-started/why.rst:47
msgid "Read and plot STL file using `vtk`_"
msgstr ""

#: ../../pyvista/doc/getting-started/why.rst:47
msgid "Read an STL file using PyVista"
msgstr ""

#: ../../pyvista/doc/getting-started/why.rst:71
msgid ""
"The PyVista data model and API allows you to rapidly load meshes and handles"
" much of the \"grunt work\" of setting up plots, connecting classes and "
"pipelines, and cleaning up plotting windows.  It does this by exposing a "
"simplified, but functional, interface to VTK's classes."
msgstr ""

#: ../../pyvista/doc/getting-started/why.rst:76
msgid ""
"In :func:`pyvista.read`, PyVista automatically determines the correct file "
"reader based on the file extension and returns a DataSet object. This "
"dataset object contains all the methods that are available to a "
":class:`pyvista.PolyData` class, including the :func:`plot <pyvista.plot>` "
"method, allowing you to instantly generate a plot of the mesh.  Garbage "
"collection is taken care of automatically and the renderer is cleaned up "
"after the user closes the plotting window."
msgstr ""

#: ../../pyvista/doc/getting-started/why.rst:84
msgid ""
"For more details comparing the two APIs, please see "
":ref:`pyvista_data_model` and :ref:`vtk_to_pyvista_docs`."
msgstr ""

#: ../../pyvista/doc/getting-started/why.rst:89
msgid "PyVista API"
msgstr ""

#: ../../pyvista/doc/getting-started/why.rst:90
msgid ""
"For example, triangular surface meshes in VTK can be subdivided but every "
"other object in VTK cannot.  It then makes sense that a :func:`subdivide` "
"method be added to the existing triangular surface mesh.  That way, "
"subdivision can be performed with:"
msgstr ""

#: ../../pyvista/doc/getting-started/why.rst:102
msgid ""
"Additionally, the docstrings for all methods in PyVista are intended to be "
"used within interactive coding sessions. This allows users to use "
"sophisticated processing routines on the fly with immediate access to a "
"description of how to use those methods:"
msgstr ""

#: ../../pyvista/doc/getting-started/why.rst:111
msgid "Interfacing With Other Libraries"
msgstr ""

#: ../../pyvista/doc/getting-started/why.rst:112
msgid ""
"PyVista is heavily dependent on `numpy <https://numpy.org/>`_ and uses it to"
" represent point, cell, field, and other data from the VTK meshes.  This "
"data can be easily accessed from the dataset attributes like "
":attr:`pyvista.DataSet.points`.  For example the first 10 points of a circle"
" from pyvista can be accessed with:"
msgstr ""

#: ../../pyvista/doc/getting-started/why.rst:123
msgid ""
"And these points can be operated on as if it was a NumPy array, all without "
"losing connection to the underlying VTK data array."
msgstr ""

#: ../../pyvista/doc/getting-started/why.rst:126
msgid ""
"At the same time, a variety of PyVista objects can be generated directly "
"from numpy arrays.  For example, below we generate a vector field of arrows "
"using :func:`numpy.meshgrid`:"
msgstr ""

#: ../../pyvista/doc/getting-started/why.rst:153
msgid ""
"PyVista has connections to several other libraries, such as `meshio "
"<https://github.com/nschloe/meshio>`_ and `matplotlib "
"<https://matplotlib.org/>`_, allowing PyVista to extend VTK with "
"functionality from the Python ecosystem."
msgstr ""

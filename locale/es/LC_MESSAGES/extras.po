# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017-2025, The PyVista Developers
# This file is distributed under the same license as the PyVista package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyVista 0.46.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-06-06 02:40+0000\n"
"PO-Revision-Date: 2021-01-06 02:34+0000\n"
"Language-Team: Spanish (https://app.transifex.com/tkoyama010/teams/112279/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;\n"

#: ../../pyvista/doc/source/extras/building_vtk.rst:4
msgid "Building VTK"
msgstr ""

#: ../../pyvista/doc/source/extras/building_vtk.rst:5
msgid ""
"Kitware provides Python wheels for VTK at `PyPI VTK "
"<https://pypi.org/project/vtk/>`_, but there are situations where you may "
"need to build VTK from source (for example, a new release of Python, EGL "
"rendering, additional features, etc). As ``pyvista`` does not provide "
"``vtk``, you will have to either build it manually or install the default "
"wheel from PyPI."
msgstr ""

#: ../../pyvista/doc/source/extras/building_vtk.rst:13
msgid ""
"Should you need a prebuilt wheel, a variety of prebuilt wheels can be found "
"at `pyvista-wheels <https://github.com/pyvista/pyvista-wheels>`_, but you "
"may be better off building your own. These are not \"official\" wheels and "
"will soon be removed in favor of more \"official\" wheel variants from VTK "
"directly."
msgstr ""

#: ../../pyvista/doc/source/extras/building_vtk.rst:18
msgid ""
"Reference the official directions for `Building VTK "
"<https://gitlab.kitware.com/vtk/vtk/-/blob/master/Documentation/dev/build.md>`_."
" The following directions assume you want to build a Python wheel non-"
"standard situations like EGL."
msgstr ""

#: ../../pyvista/doc/source/extras/building_vtk.rst:25
msgid "Building Wheels"
msgstr ""

#: ../../pyvista/doc/source/extras/building_vtk.rst:26
msgid ""
"Building VTK from source is fairly straightforward. Using the default build "
"settings, build a Python wheel of VTK using ``ninja`` using the following "
"script. This script uses system python3, but you can use any modern Python "
"version. For some additional useful options, see the `conda-forge recipe "
"<https://github.com/conda-forge/vtk-feedstock/blob/main/recipe/build-"
"base.sh>`__. Most of the ones below are designed to reduce the build time "
"and resulting wheel size."
msgstr ""

#: ../../pyvista/doc/source/extras/building_vtk.rst:35
msgid ""
"We have also published some convenient CMake configurations files that you "
"can adopt from `banesullivan/vtk-cmake <https://github.com/banesullivan/vtk-"
"cmake>`_. These configurations cover the build variants described here and "
"make the process of reproducibly building VTK wheel variants more "
"straightforward."
msgstr ""

#: ../../pyvista/doc/source/extras/building_vtk.rst:89
msgid "Off-Screen Plotting GPU Support"
msgstr ""

#: ../../pyvista/doc/source/extras/building_vtk.rst:90
msgid ""
"VTK supports rendering with EGL, enabling rapid off-screen rendering using "
"GPU hardware acceleration without installing a virtual framebuffer. The "
"default VTK wheels are not built with this feature, but you can build VTK "
"for off-screen plotting using GPU support by modifying the above ``cmake`` "
"command with:"
msgstr ""

#: ../../pyvista/doc/source/extras/building_vtk.rst:134
msgid ""
"This disables any plotting using the X server, so be prepared to use this "
"module only on a headless display where you either intend to save static "
"images or stream the render window to another computer with a display (e.g "
"using ``pyvista.set_jupyter_backend('server')`` and jupyterlab). In other "
"words, this wheel will make VTK unusable outside of an off-screen "
"environment, so only plan on installing it on a headless system without an X"
" server."
msgstr ""

#: ../../pyvista/doc/source/extras/building_vtk.rst:144
msgid "Building OSMesa"
msgstr ""

#: ../../pyvista/doc/source/extras/building_vtk.rst:145
msgid ""
"OSMesa provides higher visualization performance on CPU based hosts. Use "
"this instead of ``xvfb``:"
msgstr ""

#: ../../pyvista/doc/source/extras/building_vtk.rst:181
msgid "Wheels will be generated in the ``dist`` directory."
msgstr ""

#: ../../pyvista/doc/source/extras/building_vtk.rst:185
msgid "Building ManyLinux Wheels"
msgstr ""

#: ../../pyvista/doc/source/extras/building_vtk.rst:186
msgid ""
"The above directions are great for building a local build of VTK, but these "
"wheels are difficult to share outside your local install given issues with "
"ABI compatibility due to the version of Linux they were built on. You can "
"work around this by building your wheels using a `manylinux "
"<https://github.com/pypa/manylinux>`_ docker image."
msgstr ""

#: ../../pyvista/doc/source/extras/building_vtk.rst:192
msgid ""
"To do this, create a ``build_wheels.sh`` with the following contents in the "
"``git clone`` d ``vtk`` directory, and give it executable permissions "
"(``chmod +x build_wheels.sh``):"
msgstr ""

#: ../../pyvista/doc/source/extras/building_vtk.rst:249
msgid "This script can then be called with:"
msgstr ""

#: ../../pyvista/doc/source/extras/building_vtk.rst:258
msgid "You should end up with a ``build/wheelhouse/vtk-*.whl``."
msgstr ""

#: ../../pyvista/doc/source/extras/building_vtk.rst:261
msgid ""
"To build the EGL version of the wheel, follow the directions in the previous"
" section. Add ``mesa-libEGL-devel`` to the installation dependencies."
msgstr ""

#: ../../pyvista/doc/source/extras/building_vtk.rst:267
msgid "Building Python VTK Wheel on Raspberry Pi (64-bit)"
msgstr ""

#: ../../pyvista/doc/source/extras/building_vtk.rst:268
msgid ""
"While it's possible to build on 32-bit Raspberry Pi (ARMv7), there are "
"several issues that crop up when building wheels for the 32-bit version (see"
" `manylinux issue 84 <https://github.com/pypa/manylinux/issues/84>`_). "
"Should you attempt to build on 32-bit, try building the wheel using "
"`dockcross <https://github.com/dockcross/dockcross>`_ as you may run into "
"memory limitations otherwise (especially with only 1 GB RAM)."
msgstr ""

#: ../../pyvista/doc/source/extras/building_vtk.rst:276
msgid ""
"Building the ``aarch64`` manylinux wheel can be done via docker with the "
"``quay.io/pypa/manylinux2014_aarch64`` image. Run the following:"
msgstr ""

#: ../../pyvista/doc/source/extras/building_vtk.rst:287
msgid "Where ``build_wheels.sh`` is:"
msgstr ""

#: ../../pyvista/doc/source/extras/building_vtk.rst:344
msgid ""
"Be sure to either enable or disable ``DVTK_OPENGL_HAS_EGL`` depending on if "
"you want ``EGL`` enabled for your wheel."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:2
msgid "Contributing"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:11
msgid "|Contributor Covenant| |codetriage|"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:4
msgid "Contributor Covenant"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:7
msgid "Code Triage"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:14
msgid ""
"We absolutely welcome contributions and we hope that this guide will "
"facilitate an understanding of the PyVista code repository. It is important "
"to note that the PyVista software package is maintained on a volunteer basis"
" and thus we need to foster a community that can support user questions and "
"develop new features to make this software a useful tool for all users."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:21
msgid ""
"This page is dedicated to outline where you should start with your question,"
" concern, feature request, or desire to contribute."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:25
msgid "Being Respectful"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:27
msgid ""
"Please demonstrate empathy and kindness toward other people, other software,"
" and the communities who have worked diligently to build (un)related tools."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:30
msgid ""
"Please do not talk down in Pull Requests, Issues, or otherwise in a way that"
" portrays other people or their works in a negative light."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:34
msgid "Cloning the Source Repository"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:36
msgid ""
"You can clone the source repository from "
"`<https://github.com/pyvista/pyvista>`_ and install the latest version by "
"running:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:48
msgid ""
"Use ``python -m pip install -e . --group dev`` to also install all of the "
"packages required for development."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:52
msgid "Quick Start Development with Codespaces"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:58
msgid "|Open in GitHub Codespaces|"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:54
msgid "Open in GitHub Codespaces"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:60
msgid ""
"A dev container is provided to quickly get started. The default container "
"comes with the repository code checked out on a branch of your choice and "
"all pyvista dependencies including test dependencies pre-installed. In "
"addition, it uses the `desktop-lite feature "
"<https://github.com/devcontainers/features/tree/main/src/desktop-lite>`_ to "
"provide live interaction windows.  Follow directions `Connecting to the "
"desktop <https://github.com/devcontainers/features/tree/main/src/desktop-"
"lite#connecting-to-the-desktop>`_ to use the live interaction."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:69
msgid ""
"Alternatively, an offscreen version using OSMesa libraries and ``vtk-"
"osmesa`` is available."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:72
msgid "Questions"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:74
msgid ""
"For general questions about the project, its applications, or about software"
" usage, please create a discussion in the `Discussions "
"<https://github.com/pyvista/pyvista/discussions>`_ repository where the "
"community can collectively address your questions."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:79
msgid ""
"You are also welcome to join us on `Slack "
"<https://communityinviter.com/apps/pyvista/pyvista>`_, but Slack should be "
"reserved for ad hoc conversations and community engagement rather than "
"technical discussions."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:83
msgid ""
"For critical, high-level project support and engagement, please email "
"info@pyvista.org - but please do not use this email for technical support."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:86
msgid ""
"For all technical conversations, you are welcome to create an issue on the "
"`Discussions page <https://github.com/pyvista/pyvista/discussions>`_ which "
"we will address promptly. Through posting on the Discussions page, your "
"question can be addressed by community members with the needed expertise and"
" the information gained will remain available for other users to find."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:94
msgid "Reporting Bugs"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:96
msgid ""
"If you stumble across any bugs, crashes, or concerning quirks while using "
"code distributed here, please report it on the `issues page "
"<https://github.com/pyvista/pyvista/issues>`_ with an appropriate label so "
"we can promptly address it. When reporting an issue, please be overly "
"descriptive so that we may reproduce it. Whenever possible, please provide "
"tracebacks, screenshots, and sample files to help us address the issue."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:105
msgid "Feature Requests"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:107
msgid ""
"We encourage users to submit ideas for improvements to PyVista code base. "
"Please create an issue on the `issues page "
"<https://github.com/pyvista/pyvista/issues>`_ with a *Feature Request* label"
" to suggest an improvement. Please use a descriptive title and provide ample"
" background information to help the community implement that functionality. "
"For example, if you would like a reader for a specific file format, please "
"provide a link to documentation of that file format and possibly provide "
"some sample files with screenshots to work with. We will use the issue "
"thread as a place to discuss and provide feedback."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:119
msgid "Contributing New Code"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:121
msgid ""
"If you have an idea for how to improve PyVista, please first create an issue"
" as a feature request which we can use as a discussion thread to work "
"through how to implement the contribution."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:125
msgid ""
"Once you are ready to start coding and develop for PyVista, please see the "
"`Development Practices <#development-practices>`_ section for more details."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:130
msgid "Licensing"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:132
msgid ""
"All contributed code will be licensed under The MIT License found in the "
"repository. If you did not write the code yourself, it is your "
"responsibility to ensure that the existing license is compatible and "
"included in the contributed files or you can obtain permission from the "
"original author to relicense the code."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:141
msgid "Development Practices"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:143
msgid ""
"This section provides a guide to how we conduct development in the PyVista "
"repository. Please follow the practices outlined here when contributing "
"directly to this repository."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:148
msgid "Guidelines"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:150
msgid ""
"Through direct access to the Visualization Toolkit (VTK) via direct array "
"access and intuitive Python properties, we hope to make the entire VTK "
"library easily accessible to researchers of all disciplines. To further "
"PyVista towards being a valuable Python interface to VTK, we need your help "
"to make it even better."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:156
msgid ""
"If you want to add one or two interesting analysis algorithms as filters, "
"implement a new plotting routine, or just fix 1-2 typos - your efforts are "
"welcome."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:160
msgid "There are three general coding paradigms that we believe in:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:162
msgid ""
"**Make it intuitive**. PyVista’s goal is to create an intuitive and easy to "
"use interface back to the VTK library. Any new features should have "
"intuitive naming conventions and explicit keyword arguments for users to "
"make the bulk of the library accessible to novice users."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:168
msgid ""
"**Document everything**. At the least, include a docstring for any method or"
" class added. Do not describe what you are doing but why you are doing it "
"and provide a simple example for the new features."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:172
msgid ""
"**Keep it tested**. We aim for a high test coverage. See testing for more "
"details."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:175
msgid "There are two important copyright guidelines:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:177
msgid ""
"Please do not include any data sets for which a license is not available or "
"commercial use is prohibited. Those can undermine the license of the whole "
"projects."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:181
msgid ""
"Do not use code snippets for which a license is not available (for example "
"from Stack Overflow) or commercial use is prohibited. Those can undermine "
"the license of the whole projects."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:185
msgid ""
"Please also take a look at our `Code of Conduct "
"<https://github.com/pyvista/pyvista/blob/main/CODE_OF_CONDUCT.md>`_."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:189
msgid "Contributing to PyVista through GitHub"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:191
msgid ""
"To submit new code to pyvista, first fork the `pyvista GitHub Repository "
"<https://github.com/pyvista/pyvista>`_ and then clone the forked repository "
"to your computer. Then, create a new branch based on the `Branch Naming "
"Conventions Section <#branch-naming-conventions>`_ in your local repository."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:197
msgid ""
"Next, add your new feature and commit it locally. Be sure to commit "
"frequently as it is often helpful to revert to past commits, especially if "
"your change is complex. Also, be sure to test often. See the `Testing "
"Section <#testing>`_ below for automating testing."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:202
msgid ""
"When you are ready to submit your code, create a pull request by following "
"the steps in the `Creating a New Pull Request section <#creating-a-new-pull-"
"request>`_."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:207
msgid "Coding Style"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:209
msgid ""
"We adhere to `PEP 8 <https://www.python.org/dev/peps/pep-0008/>`_ wherever "
"possible, except that line widths are permitted to go beyond 79 characters "
"to a max of 99 characters for code. This should tend to be the exception "
"rather than the norm. A uniform code style is enforced by `ruff format "
"<https://docs.astral.sh/ruff/formatter/#the-ruff-formatter>`_ to prevent "
"energy wasted on style disagreements."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:216
msgid ""
"As for docstrings, PyVista follows the ``numpydoc`` style for its "
"docstrings. Please also take a look at `Docstrings <#docstrings>`_."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:219
msgid ""
"Outside of PEP 8, when coding please consider `PEP 20 - The Zen of Python "
"<https://www.python.org/dev/peps/pep-0020/>`_. When in doubt:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:226
msgid ""
"PyVista uses `pre-commit`_ to enforce PEP8 and other styles automatically. "
"Please see the `Style Checking section <#style-checking>`_ for further "
"details."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:231
msgid "Documentation Style"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:233
msgid ""
"PyVista follows the `Google Developer Documentation Style "
"<https://developers.google.com/style>`_ with the following exceptions:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:236
msgid ""
"Allow first person pronouns. These pronouns (for example, \"We\") refer to "
"\"PyVista Developers\", which can be anyone who contributes to PyVista."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:238
msgid "Future tense is permitted."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:240
msgid ""
"These rules are enforced for all text files (for example, ``*.md``, "
"``*.rst``) and partially enforced for Python source files."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:243
msgid ""
"These rules are enforced through the use of `Vale <https://vale.sh/>`_ via "
"our GitHub Actions, and you can run Vale locally with:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:251
msgid "If you are on Linux or macOS, you can run:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:259
msgid "Docstrings"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:261
msgid ""
"PyVista uses Python docstrings to create reference documentation for our "
"Python APIs. Docstrings are read by developers, interactive Python users, "
"and readers of our online documentation. This section describes how to write"
" these docstrings for PyVista."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:266
msgid ""
"PyVista follows the ``numpydoc`` style for its docstrings. Please follow the"
" `numpydoc Style Guide`_ in all ways except for the following:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:269
msgid ""
"Be sure to describe all ``Parameters`` and ``Returns`` for all public "
"methods."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:271
msgid ""
"We strongly encourage you to add an example section. PyVista is a visual "
"library, so adding examples that show a plot will really help users figure "
"out what individual methods do."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:274
msgid ""
"With optional parameters, use ``default: <value>`` instead of ``optional`` "
"when the parameter has a default value instead of ``None``."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:277
msgid "Sample docstring follows:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:314
msgid "Note the following:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:316
msgid ""
"The parameter definition of ``generate_triangles`` uses ``default: False``, "
"and does not include the default in the docstring's \"description\" section."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:318
msgid ""
"There is a newline between each parameter. This is different than "
"``numpydoc``'s documentation where there are no empty lines between "
"parameter docstrings."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:321
msgid ""
"This docstring also contains a returns section and an examples section."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:322
msgid ""
"The returns section does not include the parameter name if the function has "
"a single return value. Multiple return values (not shown) should have "
"descriptive parameter names for each returned value, in the same format as "
"the input parameters."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:326
msgid ""
"The examples section references the \"full example\" in the gallery if it "
"exists."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:329
msgid ""
"In addition, docstring examples which make use of randomly-generated data "
"should be reproducible. See `Generating Random Data`_ for details."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:332
msgid ""
"These standards will be enforced using ``pre-commit`` using ``numpydoc-"
"validate``, with errors being reported as:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:348
msgid ""
"If for whatever reason you feel that your function should have an exception "
"to any of the rules, add an exception to the function either in the "
"``[tool.numpydoc_validation]`` section in ``pyproject.toml`` or add an "
"inline comment to exclude a certain check. For example, we can omit the "
"``Return`` section from docstrings and skip the RT01 check for magic methods"
" like ``__init__``."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:361
msgid ""
"See the available validation checks in `numpydoc Validation "
"<https://numpydoc.readthedocs.io/en/latest/validation.html>`_."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:366
msgid "Deprecating Features or other Backwards-Breaking Changes"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:367
msgid ""
"When implementing backwards-breaking changes within PyVista, care must be "
"taken to give users the chance to adjust to any new changes. Any non-"
"backwards compatible modifications should proceed through the following "
"steps:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:371
msgid ""
"Retain the old behavior and issue a ``PyVistaDeprecationWarning`` indicating"
" the new interface you should use."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:373
msgid ""
"Retain the old behavior but raise a ``pyvista.core.errors.DeprecationError``"
" indicating the new interface you must use."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:375
msgid "Remove the old behavior."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:377
msgid ""
"Whenever possible, PyVista developers should seek to have at least three "
"minor versions of backwards compatibility to give users the ability to "
"update their software and scripts."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:381
msgid ""
"Here's an example of a soft deprecation of a function. Note the usage of "
"both the ``PyVistaDeprecationWarning`` warning and the ``.. deprecated`` "
"Sphinx directive."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:424
msgid ""
"In the above code example, note how a comment is made to convert to an error"
" in three minor releases and completely remove in the following minor "
"release. For significant changes, this can be made longer, and for trivial "
"ones this can be kept short."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:429
msgid ""
"Here's an example of adding error test codes that raise deprecation warning "
"messages."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:440
msgid ""
"In the above code example, the old test code raises an error in v0.40 and "
"v0.41. This will prevent us from forgetting to remove deprecations on "
"version upgrades."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:445
msgid ""
"When releasing a new version, we need to update the version number to the "
"next development version. For example, if we are releasing version 0.37.0, "
"the next development version should be 0.38.0.dev0 which is greater than "
"0.37.0. This is why we need to check if the version is greater than 0.40.0 "
"and 0.41.0 in the test code."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:451
msgid ""
"When adding an additional parameter to an existing method or function, you "
"are encouraged to use the ``.. versionadded`` sphinx directive. For example:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:469
msgid "Branch Naming Conventions"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:471
msgid ""
"To streamline development, we have the following requirements for naming "
"branches. These requirements help the core developers know what kind of "
"changes any given branch is introducing before looking at the code."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:475
msgid ""
"``fix/``, ``patch/`` and ``bug/``: any bug fixes, patches, or experimental "
"changes that are minor"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:477
msgid ""
"``feat/``: any changes that introduce a new feature or significant addition"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:479
msgid ""
"``junk/``: for any experimental changes that can be deleted if gone stale"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:481
msgid ""
"``maint/`` and ``ci/``: for general maintenance of the repository or CI "
"routines"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:482
msgid "``doc/``: for any changes only pertaining to documentation"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:483
msgid ""
"``no-ci/``: for low impact activity that should NOT trigger the CI routines"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:485
msgid "``testing/``: improvements or changes to testing"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:486
msgid "``release/``: releases (see below)"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:487
msgid "``breaking-change/``: Changes that break backward compatibility"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:490
msgid "Testing"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:492
msgid ""
"After making changes, please test changes locally before creating a pull "
"request. The following tests will be executed after any commit or pull "
"request, so we ask that you perform the following sequence locally to track "
"down any new issues from your changes."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:497
msgid ""
"To run our comprehensive suite of unit tests, install PyVista with all test "
"dependencies:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:504
msgid ""
"Then, if you have everything installed, you can run the various test suites."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:508
msgid "Unit Testing"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:509
msgid "Run the primary test suite and generate coverage report:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:515
msgid ""
"Unit testing can take some time, if you wish to speed it up, set the number "
"of processors with the ``-n`` flag. This uses ``pytest-xdist`` to leverage "
"multiple processes. Example usage:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:523
msgid ""
"When submitting a PR, it is highly recommended that all modifications are "
"thoroughly tested. This is further enforced in the CI by the `codecov GitHub"
" action <https://app.codecov.io/gh/pyvista/pyvista>`_ which has a 90% "
"target, ie. it ensures that 90% of the code modified in the PR is tested. It"
" should be mentioned that branch coverage is measured on the CI, meaning for"
" examples that both values of an ``if`` clause must be tested to ensure full"
" coverage. For more details on branch coverage, please refer to the "
"`coverage documentation "
"<https://coverage.readthedocs.io/en/latest/branch.html>`_."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:530
msgid ""
"If needed, code coverage can be deactivated for specific lines by adding the"
" ``# pragma: no cover`` or ``# pragma: no branch`` comments. See the "
"documentation `excluding code "
"<https://coverage.readthedocs.io/en/latest/branch.html#excluding-code>`__ "
"for more details. However, code coverage exclusion should rarely be used and"
" has to be carefully justified in the PR thread if no simple alternative "
"solution has been found."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:536
msgid ""
"The CI is configured to test multiple vtk versions to ensure sufficient "
"compatibility with vtk. If needed, the minimum and/or maximum vtk version "
"needed by a specific test can be controlled with a custom pytest marker "
"``needs_vtk_version``, enabling the following usage (note the inclusive and "
"exclusive signs):"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:573
msgid "VTK Dev Wheel Testing"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:574
msgid ""
"Most unit testing is run with stable VTK releases. However, it is sometimes "
"useful to run tests with the latest VTK dev wheels. To install these "
"locally, run"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:581
msgid ""
"For CI on GitHub, the ``vtk-dev-testing`` label can be used to enable unit "
"testing with the VTK dev wheels. The tests only run when the label is "
"applied."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:586
msgid ""
"The PR either needs a new commit, e.g. updating the branch from ``main``, or"
" to be closed/re-opened to rerun the CI with the label applied."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:590
msgid "Docstring Testing"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:591
msgid "Run all code examples in the docstrings with:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:599
msgid ""
"Additional testing is also performed on any images generated by the "
"docstring. See `Documentation Image Regression Testing`_."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:604
msgid "Style Checking"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:605
msgid ""
"PyVista follows PEP8 standard as outlined in the `Coding Style section "
"<#coding-style>`_ and implements style checking using `pre-commit`_."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:608
msgid "To ensure your code meets minimum code styling standards, run::"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:613
msgid ""
"If you have issues related to ``setuptools`` when installing ``pre-commit``,"
" see `pre-commit Issue #2178 comment <https://github.com/pre-commit/pre-"
"commit/issues/2178#issuecomment-1002163763>`_ for a potential resolution."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:617
msgid "You can also install this as a pre-commit hook by running::"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:621
msgid ""
"This way, it's not possible for you to push code that fails the style "
"checks. For example, each commit automatically checks that you meet the "
"style requirements::"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:630
msgid ""
"The actual installation of the environment happens before the first commit "
"following ``pre-commit install``. This will take a bit longer, but "
"subsequent commits will only trigger the actual style checks."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:634
msgid ""
"Even if you are not in a situation where you are not performing or able to "
"perform the above tasks, you can comment ``pre-commit.ci autofix`` on a pull"
" request to manually trigger auto-fixing."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:639
msgid "Notes Regarding Image Regression Testing"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:641
msgid ""
"Since PyVista is primarily a plotting module, it’s imperative we actually "
"check the images that we generate in some sort of regression testing. In "
"practice, this ends up being quite a bit of work because:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:645
msgid ""
"OpenGL software vs. hardware rending causes slightly different images to be "
"rendered."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:647
msgid ""
"We want our CI (which uses a virtual frame buffer) to match our desktop "
"images (uses hardware acceleration)."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:649
msgid "Different OSes render different images."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:651
msgid ""
"As each platform and environment renders different slightly images relative "
"to Linux (which these images were built from), so running these tests across"
" all OSes isn’t optimal. We need to know if something fundamental changed "
"with our plotting without actually looking at the plots (like the docs at "
"dev.pyvista.com)"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:657
msgid ""
"Based on these points, image regression testing only occurs on Linux CI, and"
" multi-sampling is disabled as that seems to be one of the biggest "
"difference between software and hardware based rendering."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:661
msgid "Image cache is stored here as ``./tests/plotting/image_cache``."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:663
msgid ""
"Image resolution is kept low at 400x400 as we don’t want to pollute git with"
" large images. Small variations between versions and environments are to be "
"expected, so error < ``IMAGE_REGRESSION_ERROR`` is allowable (and will be "
"logged as a warning) while values over that amount will trigger an error."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:669
msgid ""
"There are two mechanisms within ``pytest`` to control image regression "
"testing, ``--reset_image_cache`` and ``--ignore_image_cache``. For example:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:677
msgid ""
"Running ``--reset_image_cache`` creates a new image for each test in "
"``tests/plotting/test_plotting.py`` and is not recommended except for "
"testing or for potentially a major or minor release. You can use "
"``--ignore_image_cache`` if you’re running on Linux and want to temporarily "
"ignore regression testing. Realize that regression testing will still occur "
"on our CI testing."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:684
msgid ""
"Images are currently only cached from tests in "
"``tests/plotting/test_plotting.py``. By default, any test that uses "
"``Plotter.show`` will cache images automatically. To skip image caching, the"
" ``verify_image_cache`` fixture can be utilized:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:700
msgid ""
"This ensures that immediately before the plotter is closed, the current "
"render window will be verified against the image in CI. If no image exists, "
"be sure to add the resulting image with"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:708
msgid ""
"During unit testing, if you get image regression failures and would like to "
"compare the images generated locally to the regression test suite, allow "
"`pytest-pyvista`_ to write all new generated images to a local directory "
"using the ``--generated_image_dir`` flag."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:715
msgid ""
"For example, the following writes all images generated by ``pytest`` to "
"``debug_images/`` for any tests in ``tests/plotting`` whose function name "
"has ``volume`` in it."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:723
msgid "See `pytest-pyvista`_ for more details."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:727
msgid ""
"Additional regression testing is also performed on the documentation images."
" See `Documentation Image Regression Testing`_."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:731
msgid "Notes Regarding Input Validation Testing"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:732
msgid ""
"The ``pyvista.core.validation`` package has two distinct test suites which "
"are executed with ``pytest``:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:735
msgid "Regular unit tests in ``tests/core/test_validation.py``"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:736
msgid "Customized unit tests in ``tests/core/typing`` for testing type hints"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:738
msgid ""
"The custom unit tests check that the type hints for the validation package "
"are correct both statically and dynamically. This is mainly used to check "
"complex and overloaded function signatures, such as the type hints for "
"``validate_array`` or related functions."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:743
msgid ""
"Individual test cases are written as a single line of Python code with the "
"format:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:749
msgid ""
"where ``arg`` is any argument you want mypy to analyze, and ``\"<T>\"`` is "
"the expected revealed type returned by ``Mypy``."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:752
msgid ""
"For example, the ``validate_array`` function, by default, returns a list of "
"floats when a list of floats is provided at the input. The type hint should "
"reflect this. To test this, we can write a test case for the function call "
"``validate_array([1.0])`` as follows:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:761
msgid ""
"The actual revealed type returned by ``Mypy`` for this test can be generated"
" with the following command. Note that ``grep`` is needed to only return the"
" output from the input string. Otherwise, all ``Mypy`` errors for the "
"``pyvista`` package are reported."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:770
msgid "For this test case, the revealed type by ``Mypy`` is:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:776
msgid ""
"Notice that the revealed type is fully qualified, i.e. includes "
"``builtins``. For brevity, the custom test suite omits this and requires "
"that only ``list`` be included in the expected type. Therefore, for this "
"test case, the ``EXPECTED_TYPE`` type is ``\"list[float]\"``, not "
"``\"builtins.list[builtins.float]\"``. (Similarly, the package name "
"``numpy`` should also be omitted for tests where a ``numpy.ndarray`` is "
"expected.)"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:783
msgid ""
"Any number of related test cases (one test case per line) may be written and"
" included in a single ``.py`` file. The test cases are all stored in "
"``tests/core/typing/validation_cases``."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:787
msgid "The tests can be executed with:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:793
msgid ""
"When executed, a single instance of ``Mypy`` will statically analyze all the"
" test cases. The actual revealed types by ``Mypy`` are compared against the "
"``EXPECTED_TYPE`` is defined by each test case."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:797
msgid ""
"In addition, the ``pyanalyze`` package tests the actual returned type at "
"runtime to match the statically-revealed type. The "
"`pyanalyze.runtime.get_compatibility_error "
"<https://pyanalyze.readthedocs.io/en/latest/reference/runtime.html#pyanalyze.runtime.get_compatibility_error>`_"
" method is used for this. If new typing test cases are added for a new "
"validation function, the new function must be added to the list of imports "
"in ``tests/core/typing/test_validation_typing.py`` so that the runtime test "
"can call the function."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:806
msgid "Building the Documentation"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:807
msgid "Install documentation dependencies with:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:813
msgid "Build the documentation on Linux or Mac OS with:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:819
msgid "Build the documentation on Windows with:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:827
msgid ""
"The generated documentation can be found in the ``doc/_build/html`` "
"directory."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:830
msgid ""
"The first time you build the documentation locally will take a while as all "
"the examples need to be built. After the first build, the documentation "
"should take a fraction of the time."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:834
msgid ""
"To test this locally you need to run a http server in the html directory "
"with:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:841
msgid "Clearing the Local Build"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:843
msgid "If you need to clear the locally built documentation, run:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:849
msgid ""
"This will clear out everything, including the examples gallery. If you only "
"want to clear everything except the gallery examples, run:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:856
msgid ""
"This will clear out the cache without forcing you to rebuild all the "
"examples."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:860
msgid "Parallel Documentation Build"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:861
msgid ""
"You can improve your documentation build time on Linux and Mac OS with:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:867
msgid ""
"This effectively invokes ``SPHINXOPTS=-j`` and can be especially useful for "
"multi-core computers."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:871
msgid "Documentation Image Regression Testing"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:873
msgid ""
"Image regression testing is performed on all published documentation images."
" When the documentation is built, all generated images are automatically "
"saved to"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:877
msgid "Build Image Directory: ``./doc/_build/html/_images``"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:879
msgid ""
"The regression testing compares these generated images to those stored in"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:881
msgid "Doc Image Cache: ``./tests/doc/doc_image_cache``"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:883
msgid "To test all the images, run ``pytest`` with:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:889
msgid ""
"The tests must be executed explicitly with this command. The name of the "
"test file is prefixed with ``tst``, and not ``test`` specifically to avoid "
"being automatically executed by ``pytest`` (``pytest`` collects all tests "
"prefixed with ``test`` by default.) This is done since the tests require "
"building the documentation, and are not a primary form of testing."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:895
msgid ""
"When executed, the test will first pre-process the build images. The images "
"are:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:897
msgid "Collected from the ``Build Image Directory``."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:899
msgid "Resized to a maximum of 400x400 pixels."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:901
msgid "Saved to a flat directory as JPEG images in ``./_doc_debug_images``."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:903
msgid ""
"Next, the pre-processed images in ``./_doc_debug_images`` are compared to "
"the cached images in the ``Doc Image Cache`` using "
":func:`pyvista.compare_images`."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:906
msgid ""
"The tests can fail in three ways. To make it easy to review images for "
"failed tests, copies of the images are made as follows:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:909
msgid "If the comparison between the two images fails:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:911
msgid ""
"The cache image is copied to "
"``./_doc_debug_images_failed/errors/from_cache``"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:912
msgid ""
"The build image is copied to "
"``./_doc_debug_images_failed/errors/from_build``"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:914
msgid "If an image is in the cache but missing from the build:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:916
msgid ""
"The cache image is copied to  "
"``./_doc_debug_images_failed/errors/from_cache``"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:918
msgid "If an image is in the build but missing from the cache:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:920
msgid ""
"The build image is copied to  "
"``./_doc_debug_images_failed/errors/from_build``"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:922
msgid ""
"If a warning is generated instead of an error, images are saved to the "
"``warnings`` sub-directory instead of ``errors``."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:925
msgid ""
"To resolve failed tests, any images in ``from_build`` or ``from_cache`` may "
"be copied to or removed from the ``Doc Image Cache``. For example, if adding"
" new docstring examples or plots, the test will initially fail, and the "
"images in ``from_build`` may be added to the ``Doc Image Cache``. Similarly,"
" if removing examples, the images in ``from_cache`` may be removed from the "
"``Doc Image Cache``."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:932
msgid ""
"If a test is flaky, e.g. the build sometimes generates different images for "
"the same plot, the multiple versions of the image may be saved to the flaky "
"test directory ``./tests/doc/flaky_tests``. A folder with the same name as "
"the test image should be created, and all versions of the image should be "
"stored in this directory. The test will first compare the build image to the"
" cached image in ``Doc Image Cache`` as normal. If that comparison fails, "
"the build image is then compared to all images in the flaky test directory. "
"The test is successful if one of the comparisons is successful, but a "
"warning will still be issued. If a warning is emitted by a flaky test, "
"images are saved to the ``flaky`` sub-directory instead of ``warnings``."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:946
msgid ""
"It is not necessary to build the documentation images locally in order to "
"add to or update the doc image cache. The documentation is automatically "
"built as part of CI testing, and an artifact is generated for (1) all pre-"
"processed build images and (2) failed test cases. These artifacts may simply"
" be downloaded from GitHub for review."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:952
msgid ""
"The debug images saved with the artifact can also be used to \"simulate\" "
"building the documentation images locally. If the images are copied to the "
"local ``Build Image Directory``, the tests can then be executed locally for "
"debugging as though the documentation has already been built."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:959
msgid ""
"These tests are intended to provide *additional* test coverage to ensure the"
" plots generated by ``pyvista`` are correct, and should not be used as the "
"primary source of testing. See `Docstring Testing`_ and `Notes Regarding "
"Image Regression Testing`_ for testing methods which should be considered "
"first."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:966
msgid "Interactive Plot Testing"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:968
msgid ""
"PyVista's documentation uses a custom ``pyvista-plot`` directive to generate"
" static images as well as interactive plot files. The interactive files have"
" a ``.vtksz`` extension and can be relatively large when plotting high-"
"resolution datasets."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:973
msgid ""
"To ensure that the interactive plots do not unnecessarily inflate the size "
"of the documentation build, a limit is placed on the size of ``.vtksz`` "
"files. To test that interactive plots do not exceed this limit, run:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:981
msgid ""
"If any of these tests fail, the example(s) which generated the plot should "
"be modified, e.g.:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:984
msgid ""
"Simplify any dataset(s) used, e.g. crop, clip, down-sample, decimate, or "
"otherwise reduce the complexity of the plot."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:987
msgid ""
"Force the plot to be static only. In docstrings, use the plot directive with"
" the ``force_static`` option, e.g.:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1001
msgid "In sphinx gallery examples use:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1009
msgid ""
"to disable all plots in the example or use ``PYVISTA_GALLERY_FORCE_STATIC`` "
"before the call to ``plot()`` or ``show()`` to force static for a single "
"plot. See :ref:`add_example_example` for more information."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1015
msgid ""
"Reducing the complexity of the plot is preferred as this will also also "
"likely reduce the processing times."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1020
msgid ""
"See `Documentation Image Regression Testing`_. for testing performed on the "
"static images generated by the plot directive."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1024
msgid "Controlling Cache for CI Documentation Build"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1026
msgid ""
"To reduce build times of the documentation for PRs, cached sphinx gallery, "
"example data, and sphinx build directories are used in the CI on GitHub.  In"
" some cases, the caching action can cause problems for a specific PR.  To "
"invalidate a cache for a specific PR, one of the following labels can be "
"applied to the PR."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1030
msgid "``no-example-data-cache``"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1031
msgid "``no-gallery-cache``"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1032
msgid "``no-sphinx-build-cache``"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1034
msgid ""
"The PR either needs a new commit, e.g. updating the branch from ``main``, or"
" to be closed/re-opened to rerun the CI with the labels applied."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1039
msgid "Contributing to the Documentation"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1040
msgid "Documentation for PyVista is generated from three sources:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1042
msgid ""
"Docstrings from the classes, functions, and modules of ``pyvista`` using "
"`sphinx.ext.autodoc <https://www.sphinx-"
"doc.org/en/master/usage/extensions/autodoc.html>`_."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1045
msgid "Restructured test from ``doc/``"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1046
msgid "Gallery examples from ``examples/``"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1048
msgid ""
"General usage and API descriptions should be placed within ``doc/api`` and "
"the docstrings. Full gallery examples should be placed in ``examples``."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1053
msgid "Generating Random Data"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1054
msgid ""
"All documentation should be reproducible. In particular, any documentation "
"or examples which use random data should be properly seeded so that the same"
" random data is generated every time. This enables users to copy code in the"
" documentation and generate the same results and plots locally."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1059
msgid ""
"When using NumPy's random number generator (RNG) you should create an RNG at"
" the beginning of your script and use this RNG in the rest of the script. Be"
" sure to include a seed value. For example:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1070
msgid ""
"See Scientific Python's `Best Practices for Using NumPy's Random Number "
"Generators <https://blog.scientific-python.org/numpy/numpy-rng/>`_ for "
"details."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1074
msgid "Adding a New Example"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1075
msgid ""
"PyVista's examples come in two formats: basic code snippets demonstrating "
"the functionality of an individual method or a full gallery example "
"displaying one or more concepts. Small code samples and snippets are "
"contained in the ``doc/api`` directory or within our documentation strings, "
"while the full gallery examples, meant to be run as individual downloadable "
"scripts, are contained in the ``examples`` directory at the root of this "
"repository."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1082
msgid ""
"To add a fully fledged, standalone example, add your example to the "
"``examples`` directory in the root directory of the `PyVista Repository "
"<https://github.com/pyvista/pyvista/>`_ within one of the applicable "
"subdirectories. Should none of the existing directories match the category "
"of your example, create a new directory with a ``README.txt`` describing the"
" new category. Additionally, as these examples are built using the sphinx "
"gallery extension, follow coding guidelines as established by `Sphinx-"
"Gallery <https://sphinx-gallery.github.io/stable/index.html>`_."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1091
msgid "For more details see :ref:`add_example_example`."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1095
msgid "Adding a New Dataset"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1096
msgid ""
"If you have a dataset that you want to feature or want to include as part of"
" a full gallery example, add it to `pyvista/vtk-data "
"<https://github.com/pyvista/vtk-data/>`_ and follow the directions there. "
"You will then need to add a new function to download the dataset in "
"``pyvista/examples/downloads.py``. This might be as easy as:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1112
msgid ""
"Note that a separate dataset loading object, ``_dataset_my_new_mesh``, "
"should first be defined outside of the function (with module scope), and the"
" new ``download_my_new_mesh`` function should then use this object to "
"facilitate downloading and loading the dataset. The dataset loader variable "
"should start with ``_dataset_``."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1118
msgid "This will enable:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1125
msgid ""
"For loading complex datasets with multiple files or special processing "
"requirements, see the private ``pyvista/examples/_dataset_loader.py`` module"
" for more details on how to create a suitable dataset loader."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1129
msgid ""
"Using a dataset loader in this way will enable metadata to be collected for "
"the new dataset. A new dataset card titled ``My New Mesh Dataset`` will "
"automatically be generated and included in the :ref:`dataset_gallery`."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1133
msgid ""
"In the docstring of the new ``download_my_new_mesh`` function, be sure to "
"also include:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1136
msgid "A sample plot of the dataset in the examples section"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1138
msgid ""
"A reference link to the dataset's new (auto-generated) gallery card in the "
"see also section"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1141
msgid "For example:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1163
msgid ""
"The rst ``seealso`` directive must be used instead of the ``See Also`` "
"heading due to limitations with how ``numpydoc`` parses explicit references."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1168
msgid "Extending the Dataset Gallery"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1169
msgid ""
"If you have multiple related datasets to contribute, or would like to group "
"any existing datasets together that share similar properties, the "
":ref:`dataset_gallery` can easily be extended to feature these datasets in a"
" new `card carousel <https://sphinx-"
"design.readthedocs.io/en/latest/cards.html#card-carousels>`_."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1174
msgid ""
"For example, to add a new ``Instrument`` dataset category to "
":ref:`dataset_gallery_category` featuring two datasets of musical "
"instruments, e.g."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1177
msgid ":func:`pyvista.examples.downloads.download_guitar`"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1178
msgid ":func:`pyvista.examples.downloads.download_trumpet`"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1180
msgid "complete the following steps:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1182
msgid "Define a new carousel in ``doc/source/make_tables.py``, e.g.:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1202
msgid "where"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1204
msgid ""
"``name`` is used internally to define the name of the generated ``.rst`` "
"file for the carousel."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1207
msgid ""
"``doc`` is a short text description of the carousel which will appear in the"
" documentation in the header above the carousel."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1210
msgid ""
"``badge`` is used to give all datasets in the carousel a reference tag. The "
"``ref`` argument for the badge should be a new reference target (details "
"below)."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1214
msgid ""
"``fetch_dataset_names`` should return a list of any/all dataset names to be "
"included in the carousel. The dataset names should not include any "
"``load_``, ``download_``, or ``dataset_`` prefix."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1218
msgid ""
"Add the new carousel class to the ``CAROUSEL_LIST`` variable defined in "
"``doc/source/make_tables.py``. This will enable the rst to be auto-generated"
" for the carousel."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1222
msgid ""
"Update the ``doc/source/api/examples/dataset_gallery.rst`` file to include "
"the new generated ``<name>_carousel.rst`` file. E.g. to add the carousel as "
"a new drop-down item, add the following:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1233
msgid "where:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1235
msgid ""
"The dropdown name ``:name: <reference>`` should be the badge's ``ref`` "
"variable defined earlier. This will make it so that clicking on the new "
"badge will link to the new dropdown menu."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1239
msgid ""
"The name of the included ``.rst`` file should match the ``name`` variable "
"defined in the new ``Carousel`` class."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1242
msgid ""
"After building the documentation, the carousel should now be part of the "
"gallery."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1246
msgid "Creating a New Pull Request"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1248
msgid ""
"Once you have tested your branch locally, create a pull request on `pyvista "
"GitHub <https://github.com/pyvista/pyvista>`_ while merging to main. This "
"will automatically run continuous integration (CI) testing and verify your "
"changes will work across several platforms."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1253
msgid ""
"To ensure someone else reviews your code, at least one other member of the "
"pyvista contributors group must review and verify your code meets our "
"community’s standards. Once approved, if you have write permission you may "
"merge the branch. If you don’t have write permission, the reviewer or "
"someone else with write permission will merge the branch and delete the PR "
"branch."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1260
msgid ""
"Since it may be necessary to merge your branch with the current release "
"branch (see below), please do not delete your branch if it is a ``fix/`` "
"branch."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1265
msgid "Preview the Documentation"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1266
msgid ""
"For PRs of branches coming from the main pyvista repository, the "
"documentation is automatically deployed using `Netifly GitHub actions "
"<https://github.com/nwtgck/actions-netlify>`_. However, new contributors "
"that submit PRs from a fork can download a light-weight documentation CI "
"artifact that contains a non-interactive subset of the documentation build. "
"It typically weights 500 Mb and is available from the ``Upload non-"
"interactive HTML documentation`` step of the ``Build Documentation`` CI job."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1274
msgid "Branching Model"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1276
msgid ""
"This project has a branching model that enables rapid development of "
"features without sacrificing stability, and closely follows the `Trunk Based"
" Development <https://trunkbaseddevelopment.com/>`_ approach."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1280
msgid "The main features of our branching model are:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1282
msgid ""
"The ``main`` branch is the main development branch. All features, patches, "
"and other branches should be merged here. While all PRs should pass all "
"applicable CI checks, this branch may be functionally unstable as changes "
"might have introduced unintended side-effects or bugs that were not caught "
"through unit testing."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1287
msgid ""
"There will be one or many ``release/`` branches based on minor releases (for"
" example ``release/0.24``) which contain a stable version of the code base "
"that is also reflected on PyPI/. Hotfixes from ``fix/`` branches should be "
"merged both to main and to these branches. When necessary to create a new "
"patch release these release branches will have their ``pyvista/_version.py``"
" updated and be tagged with a semantic version (for example ``v0.24.1``). "
"This triggers CI to push to PyPI, and allow us to rapidly push hotfixes for "
"past versions of ``pyvista`` without having to worry about untested "
"features."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1297
msgid ""
"When a minor release candidate is ready, a new ``release`` branch will be "
"created from ``main`` with the next incremented minor version (for example "
"``release/0.25``), which will be thoroughly tested. When deemed stable, the "
"release branch will be tagged with the version (``v0.25.0`` in this case), "
"and if necessary merged with main if any changes were pushed to it. Feature "
"development then continues on ``main`` and any hotfixes will now be merged "
"with this release. Older release branches should not be deleted so they can "
"be patched as needed."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1308
msgid "Minor Release Steps"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1310
msgid ""
"Minor releases are feature and bug releases that improve the functionality "
"and stability of ``pyvista``. Before a minor release is created the "
"following will occur:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1314
msgid ""
"Create a new branch from the ``main`` branch with name "
"``release/MAJOR.MINOR`` (for example ``release/0.25``)."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1317
msgid ""
"Update the development version numbers in ``pyvista/_version.py`` and commit"
" it (for example ``0, 26, 'dev0'``). Push the branch to GitHub and create a "
"new PR for this release that merges it to main. Development to main should "
"be limited at this point while effort is focused on the release."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1323
msgid ""
"Locally run all tests as outlined in the `Testing Section <#testing>`_ and "
"ensure all are passing."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1326
msgid ""
"Locally test and build the documentation with link checking to make sure no "
"links are outdated. Be sure to run ``make clean`` to ensure no results are "
"cached."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1337
msgid ""
"After building the documentation, open the local build and examine the "
"examples gallery for any obvious issues."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1340
msgid ""
"It is now the responsibility of the ``pyvista`` community to functionally "
"test the new release. It is best to locally install this branch and use it "
"in production. Any bugs identified should have their hotfixes pushed to this"
" release branch."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1345
msgid ""
"When the branch is deemed as stable for public release, the PR will be "
"merged to main. After update the version number in ``release/MAJOR.MINOR`` "
"branch, the ``release/MAJOR.MINOR`` branch will be tagged with a "
"``vMAJOR.MINOR.0`` release. The release branch will not be deleted. Tag the "
"release with:"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1355
msgid ""
"Please check again that the tag has been created correctly and push the "
"branch and tag."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1362
msgid ""
"Create a list of all changes for the release. It is often helpful to "
"leverage `GitHub’s compare feature "
"<https://github.com/pyvista/pyvista/compare>`_ to see the differences from "
"the last tag and the ``main`` branch. Be sure to acknowledge new "
"contributors by their GitHub username and place mentions where appropriate "
"if a specific contributor is to thank for a new feature."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1370
msgid ""
"Place your release notes from previous step in the description for `the new "
"release on GitHub <https://github.com/pyvista/pyvista/releases/new>`_."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1374
msgid ""
"Go grab a beer/coffee/water and wait for `@regro-cf-autotick-bot "
"<https://github.com/regro/cf-scripts>`_ to open a pull request on the conda-"
"forge `PyVista feedstock <https://github.com/conda-forge/pyvista-"
"feedstock>`_. Merge that pull request."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1380
msgid "Announce the new release in the Discussions page and celebrate."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1384
msgid "Patch Release Steps"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1386
msgid ""
"Patch releases are for critical and important bugfixes that can not or "
"should not wait until a minor release. The steps for a patch release"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1389
msgid ""
"Push the necessary bugfix(es) to the applicable release branch. This will "
"generally be the latest release branch (for example ``release/0.25``)."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1392
msgid ""
"Update ``pyvista/_version.py`` with the next patch increment (for example "
"``v0.25.1``), commit it, and open a PR that merge with the release branch. "
"This gives the ``pyvista`` community a chance to validate and approve the "
"bugfix release. Any additional hotfixes should be outside of this PR."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1398
msgid ""
"When approved, merge with the release branch, but not ``main`` as there is "
"no reason to increment the version of the ``main`` branch. Then create a tag"
" from the release branch with the applicable version number (see above for "
"the correct steps)."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1403
msgid ""
"If deemed necessary, create a release notes page. Also, open the PR from "
"conda and follow the directions in step 10 in the minor release section."
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1408
msgid "Dependency version policy"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1411
msgid "Python and VTK dependencies"
msgstr ""

#: ../../pyvista/CONTRIBUTING.rst:1413
msgid ""
"We support all supported `Python versions`_ and `VTK versions`_ that support"
" those Python versions. As much as we would prefer to follow `SPEC 0`_, we "
"follow VTK versions as an interface library of VTK."
msgstr ""

#: ../../pyvista/doc/source/extras/docker.rst:1
msgid "!"
msgstr ""

#: ../../pyvista/doc/source/extras/docker.rst:4
msgid "PyVista within a Docker Container"
msgstr ""

#: ../../pyvista/doc/source/extras/docker.rst:5
msgid ""
"You can use ``pyvista`` from within a docker container with jupyterlab. To "
"launch a local docker container, install ``docker``, then pull and run the "
"image with:"
msgstr ""

#: ../../pyvista/doc/source/extras/docker.rst:13
msgid ""
"Finally, open the link that shows up from the terminal output and start "
"playing around with pyvista in jupyterlab. For example:"
msgstr ""

#: ../../pyvista/doc/source/extras/docker.rst:27
msgid ""
"You can see the latest tags of `our Docker containers here "
"<https://github.com/pyvista/pyvista/pkgs/container/pyvista>`_. "
"``ghcr.io/pyvista/pyvista:latest`` has JupyterLab set up while "
"``ghcr.io/pyvista/pyvista:latest-slim`` is a lightweight Python environment "
"without Jupyter"
msgstr ""

#: ../../pyvista/doc/source/extras/docker.rst:34
msgid ""
"You may need to log into the GitHub container registry by following the "
"directions at `Working with the Docker registry "
"<https://docs.github.com/en/enterprise-server@3.0/packages/working-with-a-"
"github-packages-registry/working-with-the-docker-registry>`_)"
msgstr ""

#: ../../pyvista/doc/source/extras/docker.rst:39
msgid "Create your own Docker Container with PyVista"
msgstr ""

#: ../../pyvista/doc/source/extras/docker.rst:40
msgid ""
"Clone PyVista and cd into this directory to create your own customized "
"docker image."
msgstr ""

#: ../../pyvista/doc/source/extras/docker.rst:50
msgid ""
"If you wish to have off-screen GPU support when rending on jupyterlab, see "
"the notes about building with EGL at :ref:`building_vtk`, or use the custom,"
" pre-built wheels at `Release 0.27.0 "
"<https://github.com/pyvista/pyvista/releases/tag/0.27.0>`_. Install that "
"customized vtk wheel onto your docker image by modifying the docker image at"
" ``pyvista/docker/jupyter.Dockerfile`` with:"
msgstr ""

#: ../../pyvista/doc/source/extras/docker.rst:62
msgid ""
"Additionally, you must install GPU drivers on the docker image of the same "
"version running on the host machine. For example, if you are running on "
"Azure Kubernetes Service and the GPU nodes on the kubernetes cluster are "
"running ``450.51.06``, you must install the same version on your image. "
"Since you will be using the underlying kernel module, there's no reason to "
"build it on the container (and trying will only result in an error)."
msgstr ""

#: ../../pyvista/doc/source/extras/docker.rst:76
msgid ""
"To verify that you're rendering on a GPU, first check the output of "
"``nvidia-smi``. You should get something like:"
msgstr ""

#: ../../pyvista/doc/source/extras/docker.rst:95
msgid ""
"Note the driver version (which is actually the kernel driver version), and "
"verify it matches the version you installed on your docker image."
msgstr ""

#: ../../pyvista/doc/source/extras/docker.rst:98
msgid ""
"Finally, check that your render window is using NVIDIA by running "
"``ReportCapabilities``:"
msgstr ""

#: ../../pyvista/doc/source/extras/docker.rst:117
msgid ""
"If you get ``display id not set``, then your environment is likely not set "
"up correctly."
msgstr ""

#: ../../pyvista/doc/source/extras/extending_pyvista.rst:2
msgid "Extending PyVista"
msgstr ""

#: ../../pyvista/doc/source/extras/extending_pyvista.rst:4
msgid ""
"PyVista ``DataSets`` can be extended for user defined functionality. See "
":ref:`Extending PyVista Example <extending_pyvista_example>`."
msgstr ""

#: ../../pyvista/doc/source/extras/index.rst:2
msgid "Extras"
msgstr ""

#: ../../pyvista/doc/source/extras/index.rst:3
msgid ""
"This section contains resources to expand the usage of PyVista beyond just "
"running it from a Python console or IDE. For example, you can package "
"PyVista in a docker image and build VTK with EGL to enable rich headless "
"plotting on remote servers. You can also package PyVista using "
"`pyinstaller`_ to be used within a standalone application."
msgstr ""

#: ../../pyvista/doc/source/extras/index.rst:10
msgid ""
"See the :ref:`developer_notes` section for details on contributing and how "
"you can help develop PyVista."
msgstr ""

#: ../../pyvista/doc/source/extras/plot_directive.rst:4
msgid "Sphinx PyVista Plot Directive"
msgstr ""

#: ../../pyvista/doc/source/extras/plot_directive.rst:5
msgid ""
"You can generate static and interactive scenes of pyvista plots using the "
"``.. pyvista-plot::`` directive by adding the following to your ``conf.py`` "
"when building your documentation using Sphinx."
msgstr ""

#: ../../pyvista/doc/source/extras/plot_directive.rst:17
msgid ""
"You can then issue the plotting directive within your sphinx documentation "
"files::"
msgstr ""

#: ../../pyvista/doc/source/extras/plot_directive.rst:28
msgid "Which will be rendered as:"
msgstr ""

#: ../../pyvista/doc/source/extras/plot_directive.rst:0
msgid "Static Scene"
msgstr ""

#: ../../pyvista/doc/source/extras/plot_directive.rst:0
msgid "Interactive Scene"
msgstr ""

#: ../../pyvista/doc/source/extras/plot_directive.rst:25
msgid "This is a default sphere"
msgstr ""

#: ../../pyvista/doc/source/extras/plot_directive.rst:40
msgid ""
"You need to install the following packages to build the interactive scene:"
msgstr ""

#: ../../pyvista/doc/source/extras/plot_directive.rst:48
msgid ""
"You need to spin up a local server to view the interactive scene in the "
"documentation."
msgstr ""

#: ../../pyvista/doc/source/extras/plot_directive.rst:55
msgid "Complete Example"
msgstr ""

#: ../../pyvista/doc/source/extras/plot_directive.rst:57
msgid ""
"The following is a script to build documentation with interactive plots from"
" scratch. The script will:"
msgstr ""

#: ../../pyvista/doc/source/extras/plot_directive.rst:60
msgid "Create a new virtual environment and install dependencies"
msgstr ""

#: ../../pyvista/doc/source/extras/plot_directive.rst:61
msgid "Create the files required for a simple documentation build:"
msgstr ""

#: ../../pyvista/doc/source/extras/plot_directive.rst:63
msgid "Sphinx configuration file ``doc/src/conf.py`` with extensions"
msgstr ""

#: ../../pyvista/doc/source/extras/plot_directive.rst:64
msgid ""
"Source file ``doc/src/example.py`` with a simple plot directive example"
msgstr ""

#: ../../pyvista/doc/source/extras/plot_directive.rst:65
msgid "Index file ``doc/src/index.rst`` for site navigation"
msgstr ""

#: ../../pyvista/doc/source/extras/plot_directive.rst:67
msgid "Build the documentation"
msgstr ""

#: ../../pyvista/doc/source/extras/plot_directive.rst:68
msgid "Start a local server"
msgstr ""

#: ../../pyvista/doc/source/extras/plot_directive.rst:70
msgid ""
"You can copy and paste the script directly into a terminal and execute it. "
"Once the documentation is built, you should be able to view it with a web "
"browser by navigating to ``http://localhost:11000``."
msgstr ""

#: ../../pyvista/doc/source/extras/plot_directive.rst:137
msgid "API Reference"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:1
msgid "Plot directive module."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:3
msgid "A directive for including a PyVista plot in a Sphinx document."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:5
msgid ""
"The ``.. pyvista-plot::`` sphinx directive will include an inline ``.png`` "
"image."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:8
msgid "The source code for the plot may be included in one of two ways:"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:10
msgid "Using **doctest** syntax::"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:18
msgid "**A path to a source file** as the argument to the directive::"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:22
msgid ""
"When a path to a source file is given, the content of the directive may "
"optionally contain a caption for the plot::"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:29
msgid ""
"Additionally, one may specify the name of a function to call (with no "
"arguments) immediately after importing the module::"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:35
msgid "Code blocks containing ``doctest:+SKIP`` will be skipped."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:38
msgid "Animations will not be saved, only the last frame will be shown."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:41
msgid ""
"**Options** The ``pyvista-plot`` directive supports the following options:"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:44
msgid "include-source"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive-1
msgid "bool"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:45
msgid ""
"Whether to display the source code. The default can be changed using the "
"``pyvista_plot_include_source`` variable in :file:`conf.py`."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:48
msgid "encoding"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive-1
msgid "str"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:49
msgid ""
"If this source file is in a non-UTF8 or non-ASCII encoding, the encoding "
"must be specified using the ``:encoding:`` option.  The encoding will not be"
" inferred using the ``-*- coding -*-`` metacomment."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:53
msgid "context"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive-1
msgid "None"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:54
msgid ""
"If provided, the code will be run in the context of all previous plot "
"directives for which the ``:context:`` option was specified.  This only "
"applies to inline code plot directives, not those run from files."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:58
msgid "nofigs"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:59
msgid ""
"When setting this flag, the code block will be run but no figures will be "
"inserted.  This is usually useful with the ``:context:`` option."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:62
msgid "caption"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:63
msgid ""
"If specified, the option's argument will be used as a caption for the "
"figure. This overwrites the caption given in the content, when the plot is "
"generated from a file."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:67
msgid "force_static"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:68
msgid ""
"When setting this flag, static images will be used instead of an interactive"
" scene."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:71
msgid "skip"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive-1
msgid "bool, default: True"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:72
msgid ""
"Whether to skip execution of this directive. If no argument is provided "
"i.e., ``:skip:``, then it defaults to ``:skip: true``.  Default behaviour is"
" controlled by the ``plot_skip`` boolean variable in :file:`conf.py`.  Note "
"that, if specified, this option overrides the ``plot_skip`` configuration."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:78
msgid "optional"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:79
msgid ""
"This flag marks the directive for *conditional* execution. Whether the "
"directive is executed is controlled by the ``plot_skip_optional`` boolean "
"variable in :file:`conf.py`."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:83
msgid ""
"Additionally, this directive supports all the options of the `image` "
"directive, except for *target* (since plot will add its own target).  These "
"include *alt*, *height*, *width*, *scale*, *align*."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:88
msgid "**Configuration options**"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:90
msgid ""
"Prior to v0.45, these directives conflicted with ``matplotlib``. All "
"directives have been prepended with ``pyvista_``."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:94
msgid "The plot directive has the following configuration options:"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:96
msgid "pyvista_plot_include_source"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:97
msgid ""
"Default value for the ``include-source`` directive option. Default is "
"``True``."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:100
msgid "pyvista_plot_basedir"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:101
msgid ""
"Base directory, to which ``plot::`` file names are relative to.  If ``None``"
" or unset, file names are relative to the directory where the file "
"containing the directive is."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:105
msgid "pyvista_plot_html_show_formats"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:106
msgid "Whether to show links to the files in HTML. Default ``True``."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:108
msgid "pyvista_plot_template"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:109
msgid "Provide a customized Jinja2 template for preparing restructured text."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:111
msgid "pyvista_plot_setup"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:112
msgid "Python code to be run before every plot directive block."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:114
msgid "pyvista_plot_cleanup"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:115
msgid "Python code to be run after every plot directive block."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:117
msgid "pyvista_plot_skip"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive-1
msgid "bool, default: False"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:118
msgid "Default value for the ``skip`` directive option."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:120
msgid "pyvista_plot_skip_optional"
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:121
msgid "Whether to skip execution of ``optional`` directives."
msgstr ""

#: ../../../../../../../opt/hostedtoolcache/Python/3.13.3/x64/lib/python3.13/site-packages/pyvista/ext/plot_directive.pydocstring
#: of pyvista.ext.plot_directive:123
msgid ""
"These options can be set by defining global variables of the same name in "
":file:`conf.py`."
msgstr ""

#: ../../pyvista/doc/source/extras/pyinstaller.rst:4
msgid "Freezing PyVista with PyInstaller"
msgstr ""

#: ../../pyvista/doc/source/extras/pyinstaller.rst:5
msgid ""
"You can make some fantastic standalone programs with ``pyinstaller`` and "
"``pyvista``, and you can even make a graphical user interface incorporating "
"``PyQt5`` or ``pyside2``.  Depending on your version of VTK, this requires "
"some extra steps to setup."
msgstr ""

#: ../../pyvista/doc/source/extras/pyinstaller.rst:10
msgid ""
"When running VTK v9, you need to add several additional ``hiddenimports``.  "
"For clarity and completeness, create a spec file (we'll name it "
"``pyvista.spec``) following the directions given at `Using Spec Files "
"<https://pyinstaller.readthedocs.io/en/stable/spec-files.html>`__.  Modify "
"the ``Analysis`` and add the following hidden imports:"
msgstr ""

#: ../../pyvista/doc/source/extras/pyinstaller.rst:32
msgid ""
"From there, you can freeze an application using ``pyvista`` and create a "
"standalone application."
msgstr ""

#: ../../pyvista/doc/source/extras/pytest_plugin.rst:4
msgid "PyVista pytest Plugin"
msgstr ""

#: ../../pyvista/doc/source/extras/pytest_plugin.rst:6
msgid ""
"PyVista provides a pytest plugin `pytest-pyvista "
"<https://pytest.pyvista.org/>`_ for image regression testing."
msgstr ""

#: ../../pyvista/doc/source/extras/vtk_data.rst:3
msgid "Using Local VTK-Data"
msgstr ""

#: ../../pyvista/doc/source/extras/vtk_data.rst:5
msgid ""
"Normally, the PyVista examples will be downloaded from the `pyvista/vtk-data"
" repository <https://github.com/pyvista/vtk-data>`_. Alternatively, the "
"entire pyvista/vtk-data repository can be supplied as a local folder. If the"
" ``PYVISTA_VTK_DATA`` environment variable is set to the folder path, the "
"examples will instead be copied from the local folder."
msgstr ""

#: ../../pyvista/doc/source/extras/vtk_data.rst:11
msgid "This example uses a cloned vtk-data repository:"
msgstr ""

#: ../../pyvista/doc/source/extras/vtk_role.rst:4
msgid "Sphinx VTK Role"
msgstr ""

#: ../../pyvista/doc/source/extras/vtk_role.rst:8
msgid ""
"PyVista's documentation uses the Sphinx extension "
"https://github.com/pyvista/vtk-xref to link directly to `VTK's documentation"
" <https://vtk.org/doc/nightly/html/index.html>`_."
msgstr ""

#: ../../pyvista/doc/source/extras/vtk_role.rst:11
msgid ""
"This extension adds the ``:vtk:`` role to allow writing, for example, "
"``:vtk:`vtkImageData``` inside docstrings to link directly to the "
"``vtkImageData`` documentation. This will render as :vtk:`vtkImageData`."
msgstr ""

#: ../../pyvista/doc/source/extras/vtk_role.rst:15
msgid ""
"See `vtk-xref's repository <https://github.com/pyvista/vtk-xref>`_ for "
"installation and usage details for adding the ``:vtk:`` role to your "
"project."
msgstr ""

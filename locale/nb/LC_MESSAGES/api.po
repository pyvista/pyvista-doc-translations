# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017-2022, The PyVista Developers
# This file is distributed under the same license as the PyVista package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyVista 0.38.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-10 01:28+0000\n"
"PO-Revision-Date: 2021-05-06 09:39+0000\n"
"Language-Team: Norwegian Bokm√•l (https://www.transifex.com/tkoyama010/teams/112279/nb/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: nb\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../pyvista/doc/api/core/_autosummary/pyvista.Camera.rst:2
msgid "pyvista.Camera"
msgstr ""

#: ../../pyvista/doc/api/core/camera.rst:144:<autosummary>:1
#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera:2
msgid "PyVista wrapper for the VTK Camera class."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.append:0
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.as_polydata_blocks:0
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.clean:0
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.copy:0
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.extend:0
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.get:0
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.get_block_name:0
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.get_data_range:0
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.get_index_by_name:0
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.insert:0
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.pop:0
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.replace:0
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.set_active_scalars:0
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.set_block_name:0
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:0
#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.add_field_data:0
#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.copy:0
#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.copy_attributes:0
#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.copy_structure:0
#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.deep_copy:0
#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.head:0
#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.save:0
#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.shallow_copy:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cast_to_pointset:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_bounds:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_n_points:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_point_ids:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_points:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_type:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.copy_from:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.copy_meta_from:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_cells_along_line:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_cells_within_bounds:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_closest_cell:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_closest_point:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_containing_cell:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_normal:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_x:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_y:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_z:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.get_array:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.get_array_association:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.get_data_range:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.overwrite:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.point_is_inside_cell:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rename_array:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_vector:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_x:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_y:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_z:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.scale:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.set_active_scalars:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.set_active_tensors:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.set_active_vectors:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.translate:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:0
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes:0
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.get:0
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.get_array:0
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.pop:0
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.remove:0
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_array:0
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_scalars:0
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_vectors:0
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.update:0
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.combine:0
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.outline:0
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.outline_corners:0
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_centers:0
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_data_to_point_data:0
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:0
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:0
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_sizes:0
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:0
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_all_edges:0
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.point_data_to_cell_data:0
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:0
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:0
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_line:0
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:0
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.triangulate:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_centers:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_data_to_point_data:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_scalar:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_surface:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_sizes:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_derivative:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_implicit_distance:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.connectivity:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.contour:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.ctp:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.decimate_boundary:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.delaunay_3d:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.explode:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_all_edges:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_cells:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_feature_edges:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_geometry:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_largest:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_points:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_surface:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.glyph:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.integrate_data:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.interpolate:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.merge:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.outline:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.outline_corners:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.partition:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_line:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.point_data_to_cell_data:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.probe:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.ptc:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.reflect:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc_normal:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_line:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_multiple_lines:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.select_enclosed_points:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.shrink:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_line:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_implicit:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.split_bodies:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.surface_indices:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.tessellate:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_plane:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_sphere:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold_percent:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.transform:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.triangulate:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_scalar:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_vector:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_difference:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_intersection:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_union:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clean:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clip_closed_surface:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.collision:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_arc_length:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.curvature:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate_pro:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.edge_mask:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_rotate:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_trim:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.fill_holes:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.geodesic:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.geodesic_distance:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.intersection:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.merge:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.multi_ray_trace:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_boundaries:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_curvature:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_normals:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.project_points_to_plane:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ray_trace:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.reconstruct_surface:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.remove_points:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ribbon:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth_taubin:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.strip:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide_adaptive:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.triangulate:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.tube:0
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.extract_subset:0
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.fft:0
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.gaussian_smooth:0
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.high_pass:0
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_dilate_erode:0
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_threshold:0
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.low_pass:0
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.median_smooth:0
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.rfft:0
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:0
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.reconstruct_surface:0
#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.filters.rectilinear_grid.RectilinearGridFilters.to_tetrahedra:0
#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.RectilinearGrid:0
#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.UniformGrid:0
#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.get:0
#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.get_data_range:0
#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.pop:0
#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.update:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.cell_coords:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.cell_id:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.compute_connections:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.compute_connectivity:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.hide_cells:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.neighbors:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.save:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.show_cells:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PointSet:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PointSet.cast_to_polydata:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData.save:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid.hide_cells:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid.hide_points:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.UnstructuredGrid:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.UnstructuredGrid.linear_copy:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:0
#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.glyphs:0 ../../pyvista/pyvista/demos/demos.pydocstring
#: of pyvista.demos.demos.plot_ants_plane:0
#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_beam:0
#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_datasets:0
#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_glyphs:0
#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_wave:0
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.plot_cell:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_action_figure:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_angular_sector:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_antarctica_velocity:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_armadillo:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_backward_facing_step:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_beach:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bird:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bird_bath:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bird_texture:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_black_vase:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_blood_vessels:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_blow:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bolt_nut:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_brain:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_brain_atlas_with_sides:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bunny:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bunny_coarse:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cad_model:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cad_model_case:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cake_easy:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cake_easy_texture:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_can:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_can_crushed_hdf:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_carburator:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_carburetor:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_carotid:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cavity:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cells_nd:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cgns_multi:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cgns_structured:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_chest:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cloud_dark_matter:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cloud_dark_matter_dense:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_clown:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_coastlines:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cow:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cow_head:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_crater_imagery:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_crater_topo:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cubemap_space_16k:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cylinder_crossflow:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_damavand_volcano:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_delaunay_example:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dicom_stack:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_disc_quads:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dolfin:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_doorman:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dragon:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_drill:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dual_sphere_animation:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_embryo:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_emoji:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_emoji_texture:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_exodus:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_face:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_face2:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_faults:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_fea_bracket:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_file:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_filled_contours:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_foot_bones:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_frog:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gears:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gif_simple:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gourds:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gourds_pnm:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gourds_texture:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gpr_data_array:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gpr_path:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_guitar:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_head:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_honolulu:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_horse:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_horse_points:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_human:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_iron_protein:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_ivan_angel:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_kitchen:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_knee:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_knee_full:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_letter_a:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_letter_k:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_lidar:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_lobster:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_louis_louvre:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_lucy:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_masonry_texture:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_model_with_variance:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_moonlanding_image:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_motor:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_mount_damavand:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_mug:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_naca:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_nefertiti:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_notch_displacement:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_notch_stress:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_oblique_cone:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_office:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_owl:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_parched_canal_4k:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_particles_lethe:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_pepper:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_pine_roots:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_plastic_vase:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_poly_line:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_prostate:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_puppy:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_puppy_texture:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_quadratic_pyramid:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_rectilinear_grid:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_rgba_texture:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_room_surface_mesh:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_saddle_surface:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sea_vase:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_shark:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_single_sphere_animation:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sky_box_nz:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sky_box_nz_texture:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sparse_points:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_spider:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_st_helens:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_stars_cloud_hyg:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_structured_grid:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_structured_grid_two:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_teapot:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tecplot_ascii:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tensors:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tetrahedron:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_thermal_probes:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_topo_global:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_topo_land:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_torso:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tri_quadratic_hexahedron:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_trumpet:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_turbine_blade:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_unstructured_grid:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_urn:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_usa:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_usa_texture:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_vtk:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_vtk_logo:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_wavy:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_woman:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.file_from_files:0
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_explicit_structured:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_jupiter_surface:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_mars_surface:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_mercury_surface:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_milkyway_sky_background:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_moon_surface:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_neptune_surface:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_pluto_surface:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_saturn_rings:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_saturn_surface:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_stars_sky_background:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_sun_surface:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_uranus_surface:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_venus_surface:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_earth:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_jupiter:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_mars:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_mercury:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_moon:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_neptune:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_pluto:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_saturn:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_saturn_rings:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_sun:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_uranus:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_venus:0
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:0
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property.plot:0
#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor:0
#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor.copy:0
#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor.plot:0
#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor.rotate_x:0
#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor.rotate_y:0
#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor.rotate_z:0
#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera:0
#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.tight:0
#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.view_frustum:0
#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.zoom:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot.update:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.update:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.update:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Brush:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.area:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.bar:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.clear:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.line:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.plot:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.plots:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.remove_plot:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.scatter:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.stack:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ChartBox:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ChartMPL:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ChartPie:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D.update:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Pen:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot.update:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D.update:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.update:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts._Chart.show:0
#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color:0
#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color.convert_color_channel:0
#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color.strip_hex_prefix:0
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.BlockAttributes:0
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositeAttributes:0
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositeAttributes.get_block:0
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper:0
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:0
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:0
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot_arrows:0
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light:0
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.add_renderer:0
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.copy:0
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.from_vtk:0
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.set_direction_angle:0
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:0
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.apply_cmap:0
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.apply_opacity:0
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.map_value:0
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.plot:0
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper:0
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_custom_opacity:0
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:0
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:0
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_cursor:0
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_title:0
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_actor:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes_at_origin:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_border:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_bounding_box:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_chart:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_light:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_orientation_widget:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.deep_clean:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_anti_aliasing:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_depth_of_field:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_depth_peeling:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_ssao:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.get_default_cam_pos:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_actor:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_bounding_box:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_chart:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_floors:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_legend:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.reset_camera:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_background:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_environment_texture:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_focus:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_position:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_scale:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_viewup:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_grid:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_isometric:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_vector:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_xy:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_xz:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_yx:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_yz:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_zx:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_zy:0
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:0
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:0
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.load_theme:0
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.save:0 ../../pyvista/pyvista/themes.pydocstring
#: of pyvista.themes.set_plot_theme:0
#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.perlin_noise:0
#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:0
#: ../../pyvista/pyvista/utilities/errors.pydocstring of
#: pyvista.utilities.errors.Report:0
#: ../../pyvista/pyvista/utilities/errors.pydocstring of
#: pyvista.utilities.errors.VtkErrorCatcher:0
#: ../../pyvista/pyvista/utilities/errors.pydocstring of
#: pyvista.utilities.errors.set_error_output_file:0
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read:0
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_exodus:0
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_legacy:0
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_texture:0
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.save_meshio:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Box:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Circle:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArc:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArcFromNormal:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cone:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cube:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cylinder:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CylinderStructured:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Disc:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Dodecahedron:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Icosahedron:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Line:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.MultipleLines:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Octahedron:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Plane:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.PlatonicSolid:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Polygon:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Pyramid:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Rectangle:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Superquadric:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Tetrahedron:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Text3D:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Triangle:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Tube:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Wavelet:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.array_from_vtkmatrix:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.axis_rotation:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cell_array:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.convert_array:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap_from_filenames:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.field_array:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.fit_plane_to_points:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.get_array:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.image_to_texture:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.is_inside_bounds:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.is_pyvista_dataset:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.line_segments_from_points:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.lines_from_points:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.make_tri_mesh:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.numpy_to_texture:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.point_array:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.vector_poly_data:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.vtk_points:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.vtkmatrix_from_array:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.wrap:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBohemianDome:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBour:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBoy:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricCatalanMinimal:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricConicSpiral:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricCrossCap:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricDini:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEllipsoid:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEnneper:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricFigure8Klein:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricHenneberg:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricKlein:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricKuen:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricMobius:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricPluckerConoid:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricPseudosphere:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRoman:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperEllipsoid:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricTorus:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.Spline:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.surface_from_para:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.BaseReader:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.BaseReader.show_progress:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.CGNSReader.base_array_status:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.CGNSReader.family_array_status:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.DICOMReader:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.EnSightReader.set_active_time_point:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.EnSightReader.set_active_time_value:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.EnSightReader.time_point_value:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.GIFReader:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MultiBlockPlot3DReader.add_function:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MultiBlockPlot3DReader.add_q_files:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MultiBlockPlot3DReader.remove_function:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OpenFOAMReader.disable_patch_array:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OpenFOAMReader.enable_patch_array:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OpenFOAMReader.patch_array_status:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OpenFOAMReader.set_active_time_point:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OpenFOAMReader.set_active_time_value:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OpenFOAMReader.time_point_value:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PVDReader.set_active_time_point:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PVDReader.set_active_time_value:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PVDReader.time_point_value:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PointCellDataSelection.cell_array_status:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PointCellDataSelection.disable_cell_array:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PointCellDataSelection.disable_point_array:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PointCellDataSelection.enable_cell_array:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PointCellDataSelection.enable_point_array:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PointCellDataSelection.point_array_status:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.TimeReader.set_active_time_point:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.TimeReader.set_active_time_value:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.TimeReader.time_point_value:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:0
#: ../../pyvista/pyvista/utilities/regression.pydocstring of
#: pyvista.utilities.regression.compare_images:0
#: ../../pyvista/pyvista/utilities/xvfb.pydocstring of
#: pyvista.utilities.xvfb.start_xvfb:0
msgid "Parameters"
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera:18
msgid "**renderer** : :obj:`pyvista.Renderer`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera:17
msgid "pyvista.Renderer, optional"
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera:8
msgid "Renderer to attach the camera to."
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:2
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.bounds:21
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.center:17
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.length:17
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.n_blocks:17
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.volume:21
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock:30
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.append:25
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.clean:21
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.copy:25
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.extend:23
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.get:30
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.get_block_name:25
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.get_index_by_name:25
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.insert:28
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.keys:21
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.pop:26
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.replace:24
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.reverse:17
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.set_block_name:24
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:171
#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.DataObject.actual_memory_size:22
#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.DataObject.field_data:20
#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.DataObject.memory_address:21
#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.add_field_data:31
#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.clear_field_data:17
#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.copy:28
#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.copy_attributes:21
#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.copy_structure:21
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.active_normals:25
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.active_scalars_info:29
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.active_scalars_name:17
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.active_t_coords:17
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.active_vectors:17
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.active_vectors_info:29
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.active_vectors_name:17
#: ../../pyvista/pyvista/core/dataset.pydocstring of pyvista.DataSet.area:22
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.array_names:18
#: ../../pyvista/pyvista/core/dataset.pydocstring of pyvista.DataSet.arrows:24
#: ../../pyvista/pyvista/core/dataset.pydocstring of pyvista.DataSet.bounds:18
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.cell_data:17 ../../pyvista/pyvista/core/dataset.pydocstring
#: of pyvista.DataSet.center:17 ../../pyvista/pyvista/core/dataset.pydocstring
#: of pyvista.DataSet.length:17 ../../pyvista/pyvista/core/dataset.pydocstring
#: of pyvista.DataSet.n_cells:21
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.n_points:17 ../../pyvista/pyvista/core/dataset.pydocstring
#: of pyvista.DataSet.point_data:17
#: ../../pyvista/pyvista/core/dataset.pydocstring of pyvista.DataSet.points:17
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.textures:19 ../../pyvista/pyvista/core/dataset.pydocstring
#: of pyvista.DataSet.volume:22 ../../pyvista/pyvista/core/dataset.pydocstring
#: of pyvista.core.dataset.DataSet.cast_to_pointset:27
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cast_to_unstructured_grid:21
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_bounds:25
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_n_points:25
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_point_ids:25
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_points:26
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_type:25
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.clear_data:17
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.clear_point_data:17
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.clear_textures:17
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.copy_from:21
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_cells_along_line:44
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_cells_within_bounds:37
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_closest_cell:60
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_closest_point:44
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_containing_cell:42
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_normal:41
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_x:38
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_y:38
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_z:38
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.get_array:30
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.get_array_association:30
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.point_is_inside_cell:31
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rename_array:30
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_vector:43
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_x:40
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_y:40
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_z:40
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.scale:39
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.translate:37
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:171
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.DataSetAttributes.active_normals:25
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.DataSetAttributes.active_normals_name:21
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.DataSetAttributes.active_scalars:22
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.DataSetAttributes.active_scalars_name:17
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.DataSetAttributes.active_t_coords:21
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.DataSetAttributes.active_t_coords_name:17
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.DataSetAttributes.active_vectors:22
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.DataSetAttributes.active_vectors_name:17
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.DataSetAttributes.valid_array_len:18
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes:55
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.clear:17
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.get:30
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.get_array:37
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.items:21
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.keys:21
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.pop:29
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.remove:24
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_array:42
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_scalars:42
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_vectors:47
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.update:24
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.values:21
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.combine:29
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_centers:30
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_data_to_point_data:41
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:56
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:53
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_sizes:40
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:62
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_all_edges:37
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.point_data_to_cell_data:36
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:43
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:58
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_line:37
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:43
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.triangulate:29
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_centers:30
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_data_to_point_data:41
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:56
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:53
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_scalar:43
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_surface:52
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:74
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_sizes:40
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_derivative:63
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_implicit_distance:35
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.connectivity:36
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.contour:61
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.decimate_boundary:32
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.delaunay_3d:45
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:62
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.explode:31
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_all_edges:37
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_cells:28
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_feature_edges:53
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_geometry:34
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_largest:31
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_points:38
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_surface:50
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.glyph:75
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.integrate_data:31
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.interpolate:75
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.merge:56
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.outline:28
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.outline_corners:29
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.partition:51
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:65
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:71
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_line:60
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.point_data_to_cell_data:36
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.probe:54
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.reflect:39
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample:50
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc:44
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc_normal:52
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_line:39
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_multiple_lines:32
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.select_enclosed_points:59
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.separate_cells:24
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.shrink:31
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:43
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:58
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_line:37
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_implicit:38
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:43
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.split_bodies:31
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines:74
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:94
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:102
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.surface_indices:25
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.tessellate:40
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_plane:54
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_sphere:51
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold:80
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold_percent:56
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.transform:57
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.triangulate:29
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_scalar:45
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_vector:40
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_difference:53
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_intersection:58
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_union:59
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clean:59
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clip_closed_surface:56
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.collision:87
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_arc_length:29
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:96
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.curvature:34
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:87
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate_pro:78
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:63
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.edge_mask:28
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude:63
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_rotate:86
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_trim:59
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.fill_holes:42
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.flip_normals:17
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.geodesic:48
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.geodesic_distance:31
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.intersection:50
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.merge:55
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.multi_ray_trace:54
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_boundaries:36
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_curvature:34
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_normals:49
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.project_points_to_plane:34
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ray_trace:44
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.reconstruct_surface:50
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.remove_points:42
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ribbon:57
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth:57
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth_taubin:87
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.strip:70
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide:58
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide_adaptive:69
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.triangulate:29
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.tube:52
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.fft:54
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.gaussian_smooth:39
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.high_pass:68
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_dilate_erode:49
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_threshold:57
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.low_pass:68
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.median_smooth:52
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.rfft:54
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:63
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.reconstruct_surface:50
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.unstructured_grid.UnstructuredGridFilters.subdivide_tetra:21
#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.RectilinearGrid.dimensions:19
#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.RectilinearGrid.points:22
#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.RectilinearGrid.x:17
#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.RectilinearGrid.y:17
#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.RectilinearGrid.z:17
#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.UniformGrid.extent:18 ../../pyvista/pyvista/core/grid.pydocstring
#: of pyvista.UniformGrid.origin:17
#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.UniformGrid.points:20 ../../pyvista/pyvista/core/grid.pydocstring
#: of pyvista.UniformGrid.spacing:22
#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.UniformGrid.x:17
#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.UniformGrid.y:17
#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.UniformGrid.z:17
#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.filters.rectilinear_grid.RectilinearGridFilters.to_tetrahedra:45
#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.RectilinearGrid:47
#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.UniformGrid:49
#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table:19
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.ExplicitStructuredGrid.dimensions:21
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.ExplicitStructuredGrid.visible_bounds:26
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.cell_normals:23
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.face_normals:22
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.faces:21 ../../pyvista/pyvista/core/pointset.pydocstring
#: of pyvista.PolyData.is_all_triangles:32
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.is_manifold:17
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.lines:17 ../../pyvista/pyvista/core/pointset.pydocstring
#: of pyvista.PolyData.n_faces:18
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.n_lines:17 ../../pyvista/pyvista/core/pointset.pydocstring
#: of pyvista.PolyData.n_open_edges:17
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.n_strips:17
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.n_verts:17 ../../pyvista/pyvista/core/pointset.pydocstring
#: of pyvista.PolyData.point_normals:23
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.strips:21 ../../pyvista/pyvista/core/pointset.pydocstring
#: of pyvista.PolyData.verts:21
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.volume:22 ../../pyvista/pyvista/core/pointset.pydocstring
#: of pyvista.StructuredGrid.dimensions:21
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.StructuredGrid.x:21 ../../pyvista/pyvista/core/pointset.pydocstring
#: of pyvista.UnstructuredGrid.cell_connectivity:26
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.cells:17
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.cells_dict:25
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.celltypes:126
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.offset:24
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid:31
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.cast_to_unstructured_grid:41
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.cell_coords:32
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.cell_id:31
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.compute_connections:36
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.compute_connectivity:43
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.hide_cells:33
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.neighbors:36
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.save:29
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.show_cells:30
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PointSet:49
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData:96
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData.save:50
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid:56
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid.hide_cells:31
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid.hide_points:28
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.UnstructuredGrid:31
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.UnstructuredGrid.cast_to_explicit_structured_grid:33
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:171
#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.glyphs:30 ../../pyvista/pyvista/demos/demos.pydocstring
#: of pyvista.demos.demos.orientation_cube:21
#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.orientation_plotter:21
#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_ants_plane:60
#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_beam:22
#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_datasets:34
#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_glyphs:29
#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_wave:39
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Empty:22
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.HexagonalPrism:22
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Hexahedron:22
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Line:22
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.PentagonalPrism:22
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.PolyLine:24
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.PolyVertex:24
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Polygon:22
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Pyramid:22
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Quadrilateral:22
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Tetrahedron:22
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Triangle:22
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.TriangleStrip:22
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Vertex:22
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Voxel:22
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Wedge:22
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.plot_cell:27
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads:12
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.delete_downloads:17
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_action_figure:27
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_angular_sector:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_antarctica_velocity:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_armadillo:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_backward_facing_step:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_beach:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bird:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bird_bath:37
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bird_texture:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_black_vase:37
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_blood_vessels:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_blow:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bolt_nut:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_brain:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_brain_atlas_with_sides:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bunny:31
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bunny_coarse:31
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cad_model:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cad_model_case:34
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cake_easy:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cake_easy_texture:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_can:31
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_can_crushed_hdf:32
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_carburetor:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_carotid:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cavity:28
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cells_nd:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cgns_multi:30
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cgns_structured:30
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_chest:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cloud_dark_matter:27
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cloud_dark_matter_dense:27
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_clown:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_coastlines:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cow:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cow_head:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_crater_imagery:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_crater_topo:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cubemap_park:28
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cubemap_space_16k:35
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cubemap_space_4k:28
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cylinder_crossflow:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_damavand_volcano:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_delaunay_example:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dicom_stack:54
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dikhololo_night:22
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_disc_quads:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dolfin:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_doorman:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dragon:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_drill:27
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dual_sphere_animation:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_embryo:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_emoji:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_emoji_texture:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_exodus:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_face:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_face2:27
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_faults:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_fea_bracket:27
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_file:31
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_filled_contours:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_foot_bones:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_frog:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gears:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gif_simple:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gourds:29
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gourds_pnm:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gourds_texture:29
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gpr_data_array:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gpr_path:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_guitar:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_head:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_honolulu:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_horse:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_horse_points:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_human:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_iron_protein:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_ivan_angel:37
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_kitchen:32
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_knee:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_knee_full:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_letter_a:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_letter_k:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_lidar:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_lobster:27
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_louis_louvre:31
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_lucy:29
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_masonry_texture:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_model_with_variance:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_moonlanding_image:33
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_motor:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_mount_damavand:32
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_mug:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_naca:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_nefertiti:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_notch_displacement:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_notch_stress:29
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_oblique_cone:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_office:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_osmnx_graph:29
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_owl:37
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_parched_canal_4k:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_particles_lethe:28
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_pepper:27
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_pine_roots:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_plastic_vase:37
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_poly_line:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_prostate:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_puppy:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_puppy_texture:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_quadratic_pyramid:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_rectilinear_grid:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_rgba_texture:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_room_surface_mesh:30
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_saddle_surface:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sea_vase:37
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_shark:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_single_sphere_animation:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sky_box_cube_map:21
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sky_box_nz:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sky_box_nz_texture:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sparse_points:27
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_spider:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_st_helens:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_stars_cloud_hyg:38
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_structured_grid:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_structured_grid_two:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_teapot:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tecplot_ascii:30
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tensors:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tetra_dc_mesh:24
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tetrahedron:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_thermal_probes:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_topo_global:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_topo_land:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_torso:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tri_quadratic_hexahedron:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_trumpet:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_turbine_blade:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_unstructured_grid:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_urn:27
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_usa:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_usa_texture:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_vtk:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_vtk_logo:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_wavy:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_woman:27
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples:4
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_airplane:21
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_ant:21
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_channels:21
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_explicit_structured:28
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_globe:21
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_globe_texture:21
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_hexbeam:21
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_nut:21
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_random_hills:30
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_rectilinear:21
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_sphere:21
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_sphere_vectors:21
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_spline:34
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_structured:21
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_tetbeam:21
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_uniform:21
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets:4
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_jupiter_surface:31
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_mars_surface:31
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_mercury_surface:31
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_milkyway_sky_background:31
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_moon_surface:31
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_neptune_surface:31
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_pluto_surface:31
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_saturn_rings:30
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_saturn_surface:31
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_stars_sky_background:31
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_sun_surface:31
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_uranus_surface:31
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_venus_surface:34
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_earth:31
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_jupiter:31
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_mars:31
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_mercury:31
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_moon:31
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_neptune:31
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_pluto:31
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_saturn:31
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_saturn_rings:32
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_sun:31
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_uranus:31
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_venus:31
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.ambient:21
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.ambient_color:21
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.anisotropy:25
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.color:21
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.culling:25
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.diffuse:22
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.diffuse_color:20
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.edge_color:19
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.interpolation:26
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.lighting:17
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.line_width:17
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.metallic:19
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.opacity:19
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.point_size:17
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.render_lines_as_tubes:18
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.render_points_as_spheres:18
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.roughness:19
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.show_edges:19
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.specular:21
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.specular_color:20
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.specular_power:18
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.style:22
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:112
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property.copy:21
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property.plot:23
#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.Actor.backface_prop:26
#: ../../pyvista/pyvista/plotting/actor.pydocstring of pyvista.Actor.bounds:18
#: ../../pyvista/pyvista/plotting/actor.pydocstring of pyvista.Actor.center:17
#: ../../pyvista/pyvista/plotting/actor.pydocstring of pyvista.Actor.mapper:17
#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.Actor.orientation:19
#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.Actor.pickable:17 ../../pyvista/pyvista/plotting/actor.pydocstring
#: of pyvista.Actor.position:17
#: ../../pyvista/pyvista/plotting/actor.pydocstring of pyvista.Actor.prop:17
#: ../../pyvista/pyvista/plotting/actor.pydocstring of pyvista.Actor.scale:17
#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.Actor.texture:21 ../../pyvista/pyvista/plotting/actor.pydocstring
#: of pyvista.Actor.user_matrix:17
#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.Actor.visibility:17
#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor:29
#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor.copy:27
#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor.plot:22
#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor.rotate_x:21
#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor.rotate_y:21
#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor.rotate_z:21
#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.Camera.azimuth:21 ../../pyvista/pyvista/plotting/camera.pydocstring
#: of pyvista.Camera.clipping_range:19
#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.Camera.direction:17
#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.Camera.distance:20
#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.Camera.elevation:20
#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.Camera.focal_point:17
#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.Camera.model_transform_matrix:17
#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.Camera.parallel_projection:17
#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.Camera.parallel_scale:17
#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.Camera.position:17
#: ../../pyvista/pyvista/plotting/camera.pydocstring of pyvista.Camera.roll:18
#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.Camera.thickness:17
#: ../../pyvista/pyvista/plotting/camera.pydocstring of pyvista.Camera.up:17
#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.Camera.view_angle:17
#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera:21
#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.copy:21
#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.disable_parallel_projection:18
#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.enable_parallel_projection:20
#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.reset_clipping_range:17
#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.tight:43
#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.view_frustum:26
#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.zoom:29
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.Chart2D.background_color:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.Chart2D.background_texture:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.Chart2D.border_color:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.Chart2D.border_style:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.Chart2D.border_width:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.Chart2D.grid:17 ../../pyvista/pyvista/plotting/charts.pydocstring
#: of pyvista.Chart2D.legend_visible:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of pyvista.Chart2D.loc:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.Chart2D.size:18 ../../pyvista/pyvista/plotting/charts.pydocstring
#: of pyvista.Chart2D.title:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.Chart2D.visible:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.Chart2D.x_axis:17 ../../pyvista/pyvista/plotting/charts.pydocstring
#: of pyvista.Chart2D.x_label:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.Chart2D.x_range:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.Chart2D.y_axis:17 ../../pyvista/pyvista/plotting/charts.pydocstring
#: of pyvista.Chart2D.y_label:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.Chart2D.y_range:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartBox.background_color:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartBox.background_texture:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartBox.border_color:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartBox.border_style:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartBox.border_width:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartBox.legend_visible:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartBox.plot:17 ../../pyvista/pyvista/plotting/charts.pydocstring
#: of pyvista.ChartBox.title:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartBox.visible:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartMPL.background_color:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartMPL.background_texture:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartMPL.border_color:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartMPL.border_style:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartMPL.border_width:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartMPL.figure:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartMPL.legend_visible:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartMPL.loc:18 ../../pyvista/pyvista/plotting/charts.pydocstring
#: of pyvista.ChartMPL.size:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartMPL.title:17 ../../pyvista/pyvista/plotting/charts.pydocstring
#: of pyvista.ChartMPL.visible:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartPie.background_color:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartPie.background_texture:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartPie.border_color:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartPie.border_style:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartPie.border_width:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartPie.legend_visible:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartPie.plot:17 ../../pyvista/pyvista/plotting/charts.pydocstring
#: of pyvista.ChartPie.title:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartPie.visible:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot:35
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot.brush:21
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot.color:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot.label:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot.line_style:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot.line_width:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot.pen:21
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot.update:27
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot.visible:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot.x:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot.y1:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot.y2:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.behavior:20
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.grid:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.label:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.label_size:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.label_visible:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.log_scale:20
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.margin:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.range:20
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.tick_count:20
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.tick_label_size:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.tick_labels:28
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.tick_labels_offset:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.tick_labels_visible:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.tick_locations:19
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.tick_size:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.ticks_visible:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.toggle:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.visible:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot:37
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.brush:21
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.color:19
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.color_scheme:28
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.colors:19
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.label:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.labels:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.line_style:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.line_width:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.orientation:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.pen:21
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.update:24
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.visible:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.x:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.y:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot:32
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.brush:21
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.color:19
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.color_scheme:28
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.colors:19
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.data:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.label:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.labels:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.line_style:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.line_width:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.pen:21
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.stats:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.update:21
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.visible:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Brush.color:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Brush.texture:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Brush.texture_interpolate:21
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Brush.texture_repeat:21
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D:38
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.area:40
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.bar:44
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.clear:25
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.hide_axes:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.line:44
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.plot:45
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.plots:29
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.remove_plot:21
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.scatter:44
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.stack:39
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ChartBox:30
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ChartMPL:32
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ChartPie:29
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D:39
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D.brush:21
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D.color:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D.label:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D.line_style:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D.line_width:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D.pen:21
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D.update:24
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D.visible:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D.x:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D.y:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Pen.color:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Pen.style:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Pen.width:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot:35
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot.brush:21
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot.color:19
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot.color_scheme:28
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot.colors:19
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot.data:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot.label:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot.labels:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot.line_style:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot.line_width:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot.pen:21
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot.update:21
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot.visible:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D:47
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D.brush:21
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D.color:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D.label:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D.line_style:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D.line_width:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D.marker_size:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D.marker_style:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D.pen:21
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D.update:24
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D.visible:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D.x:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D.y:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot:36
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.brush:21
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.color:19
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.color_scheme:28
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.colors:19
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.label:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.labels:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.line_style:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.line_width:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.pen:21
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.update:24
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.visible:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.x:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.ys:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts._Chart.show:66
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts._Chart.toggle:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts._Plot.toggle:17
#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.Color.float_rgb:17
#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.Color.float_rgba:17
#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.Color.hex_rgb:17 ../../pyvista/pyvista/plotting/colors.pydocstring
#: of pyvista.Color.hex_rgba:17
#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.Color.int_rgb:17 ../../pyvista/pyvista/plotting/colors.pydocstring
#: of pyvista.Color.int_rgba:17
#: ../../pyvista/pyvista/plotting/colors.pydocstring of pyvista.Color.name:26
#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.Color.vtk_c3ub:17 ../../pyvista/pyvista/plotting/colors.pydocstring
#: of pyvista.plotting.colors.Color:75
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.BlockAttributes.color:17
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.BlockAttributes.opacity:22
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.BlockAttributes.pickable:17
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.BlockAttributes.visible:17
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.CompositePolyDataMapper.block_attr:33
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.CompositePolyDataMapper.color_missing_with_nan:17
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.CompositePolyDataMapper.dataset:17
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.BlockAttributes:43
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositeAttributes:43
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositeAttributes.get_block:44
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositeAttributes.reset_colors:17
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositeAttributes.reset_opacities:17
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositeAttributes.reset_pickabilities:17
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositeAttributes.reset_visibilities:17
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_unique_colors:18
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:171
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot_arrows:37
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.ambient_color:24
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.attenuation_values:26
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.cone_angle:29
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.diffuse_color:24
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.exponent:32 ../../pyvista/pyvista/plotting/lights.pydocstring
#: of pyvista.Light.focal_point:21
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.intensity:17
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.is_camera_light:17
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.is_headlight:17
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.is_scene_light:17
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.light_type:39
#: ../../pyvista/pyvista/plotting/lights.pydocstring of pyvista.Light.on:18
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.position:21 ../../pyvista/pyvista/plotting/lights.pydocstring
#: of pyvista.Light.positional:31
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.shadow_attenuation:22
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.specular_color:24
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.transform_matrix:33
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.world_focal_point:21
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.world_position:21
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light:89
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.copy:30
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.hide_actor:18
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.set_camera_light:24
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.set_direction_angle:38
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.set_headlight:20
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.set_scene_light:20
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.show_actor:22
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.switch_off:17
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.switch_on:17
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.above_range_color:19
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.alpha_range:22
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.annotations:20
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.below_range_color:19
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.cmap:17
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.hue_range:22
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.log_scale:19
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.n_values:17
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.nan_color:18
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.ramp:32
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.saturation_range:22
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.scalar_range:21
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.value_range:22
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.values:19
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:81
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.apply_cmap:30
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.apply_opacity:41
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.map_value:28
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.plot:21
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.to_color_tf:21
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.to_opacity_tf:21
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper:24
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:77
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_cursor:43
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_title:47
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:128
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.Renderer.axes_enabled:17
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.Renderer.lights:21
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.Renderer.parallel_projection:17
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.Renderer.parallel_scale:17
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.Renderer.viewport:28
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:76
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes_at_origin:46
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_blurring:18
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_bounding_box:63
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_chart:24
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:80
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:84
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_orientation_widget:39
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.disable_depth_of_field:17
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.disable_eye_dome_lighting:17
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.disable_parallel_projection:17
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.disable_shadows:17
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_depth_of_field:23
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_eye_dome_lighting:21
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_parallel_projection:19
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_shadows:17
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_ssao:39
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.hide_axes:17
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_actor:37
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_blurring:18
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_bounding_box:21
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_bounds_axes:17
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_chart:21
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_environment_texture:17
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_floors:24
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_legend:22
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.reset_camera:27
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_background:32
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_environment_texture:31
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_focus:21
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_position:25
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_scale:35
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_viewup:25
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_axes:17
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:140
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_grid:30
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_isometric:22
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_xy:21
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_xz:21
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_yx:21
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_yz:21
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_zx:21
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_zy:21
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:65
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:73
#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.DarkTheme:18
#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.DefaultTheme:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.above_range_color:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.anti_aliasing:18
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.auto_close:19
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.axes:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.background:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.below_range_color:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.camera:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.cmap:25
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.color:26
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.colorbar_horizontal:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.colorbar_orientation:18
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.colorbar_vertical:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.depth_peeling:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.edge_color:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.enable_camera_orientation_widget:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.floor_color:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.font:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.full_screen:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.hidden_line_removal:24
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.interactive:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.jupyter_backend:53
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.lighting:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.load_theme:21
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.multi_rendering_splitting_position:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.multi_samples:20
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.nan_color:18
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.notebook:20
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.outline_color:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.render_points_as_spheres:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.restore_defaults:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.return_cpos:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.save:22
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.sharp_edges_feature_angle:18
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.show_edges:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.show_scalar_bar:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.silhouette:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.smooth_shading:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.split_sharp_edges:18
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.title:18
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.transparent_background:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.volume_mapper:24
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.window_size:17
#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.DocumentTheme:26
#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.ParaViewTheme:17
#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes._AxesConfig:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._AxesConfig.box:17 ../../pyvista/pyvista/themes.pydocstring
#: of pyvista.themes._AxesConfig.show:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._AxesConfig.x_color:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._AxesConfig.y_color:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._AxesConfig.z_color:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._ColorbarConfig:17 ../../pyvista/pyvista/themes.pydocstring
#: of pyvista.themes._ColorbarConfig.height:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._ColorbarConfig.position_x:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._ColorbarConfig.position_y:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._ColorbarConfig.width:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._DepthPeelingConfig:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._DepthPeelingConfig.enabled:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._DepthPeelingConfig.number_of_peels:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._DepthPeelingConfig.occlusion_ratio:17
#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes._Font:17
#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes._Font.color:17
#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes._Font.family:22
#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes._Font.fmt:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._Font.label_size:18 ../../pyvista/pyvista/themes.pydocstring
#: of pyvista.themes._Font.size:17 ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._Font.title_size:18 ../../pyvista/pyvista/themes.pydocstring
#: of pyvista.themes._SilhouetteConfig:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._SilhouetteConfig.color:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._SilhouetteConfig.decimate:18
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._SilhouetteConfig.feature_angle:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._SilhouetteConfig.line_width:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._SilhouetteConfig.opacity:17
#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes._SliderConfig:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._SliderStyleConfig.cap_length:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._SliderStyleConfig.cap_opacity:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._SliderStyleConfig.cap_width:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._SliderStyleConfig.slider_color:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._SliderStyleConfig.slider_length:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._SliderStyleConfig.slider_width:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._SliderStyleConfig.tube_color:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._SliderStyleConfig.tube_width:17
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.set_plot_theme:22
#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.perlin_noise:55
#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:78
#: ../../pyvista/pyvista/utilities/errors.pydocstring of
#: pyvista.utilities.errors.Report:36
#: ../../pyvista/pyvista/utilities/errors.pydocstring of
#: pyvista.utilities.errors.VtkErrorCatcher:25
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read:59
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_exodus:50
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_legacy:32
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_texture:34
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.save_meshio:33
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:47
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Box:33
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Circle:28
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArc:45
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArcFromNormal:43
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cone:47
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cube:58
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cylinder:41
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CylinderStructured:46
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Disc:43
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Dodecahedron:30
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Icosahedron:31
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Line:31
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.MultipleLines:25
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Octahedron:31
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Plane:40
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.PlatonicSolid:40
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Polygon:38
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Pyramid:29
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Rectangle:25
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:51
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Superquadric:63
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Tetrahedron:30
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Text3D:28
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Triangle:26
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Tube:37
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Wavelet:59
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.axis_rotation:39
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap:54
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap_from_filenames:33
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.fit_plane_to_points:35
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.line_segments_from_points:30
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.lines_from_points:30
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.make_tri_mesh:34
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.numpy_to_texture:25
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.vector_poly_data:30
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.vtk_points:36
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.wrap:31
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBohemianDome:28
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBour:25
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBoy:34
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricCatalanMinimal:28
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricConicSpiral:47
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricCrossCap:28
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricDini:35
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEllipsoid:40
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEnneper:28
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricFigure8Klein:31
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricHenneberg:25
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricKlein:29
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricKuen:34
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricMobius:28
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricPluckerConoid:32
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricPseudosphere:29
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:65
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRoman:28
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperEllipsoid:52
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:64
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricTorus:32
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.Spline:30
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.BaseReader.path:17
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.CGNSReader.distribute_blocks:23
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.CGNSReader.load_boundary_patch:20
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.CGNSReader.unsteady_pattern:21
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.CGNSReader.vector_3d:17
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.OpenFOAMReader.all_patch_arrays_status:21
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.OpenFOAMReader.cell_to_point_creation:25
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.OpenFOAMReader.decompose_polyhedra:21
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.OpenFOAMReader.number_patch_arrays:21
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.OpenFOAMReader.patch_array_names:21
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.OpenFOAMReader.skip_zero_time:21
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.POpenFOAMReader.case_type:26
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.AVSucdReader:17
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.BMPReader:17
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.BYUReader:17
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.BaseReader.hide_progress:17
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.BaseReader.show_progress:21
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.BinaryMarchingCubesReader:17
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.CGNSReader:24
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.CGNSReader.disable_all_bases:18
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.CGNSReader.disable_all_families:17
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.CGNSReader.enable_all_bases:18
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.CGNSReader.enable_all_families:18
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.DEMReader:17
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.DICOMReader:24
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.EnSightReader:17
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.FacetReader:17
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.GIFReader:21
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.HDFReader:17
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.HDRReader:17
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.JPEGReader:17
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MetaImageReader:17
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MultiBlockPlot3DReader.add_function:25
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.NIFTIReader:17
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.NRRDReader:17
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OBJReader:17
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OpenFOAMReader.disable_all_patch_arrays:17
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OpenFOAMReader.disable_patch_array:21
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OpenFOAMReader.enable_all_patch_arrays:17
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OpenFOAMReader.enable_patch_array:21
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OpenFOAMReader.patch_array_status:30
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PLYReader:17
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PNGReader:17
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PNMReader:17
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PVDReader:17
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PointCellDataSelection:17
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.SLCReader:17
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.STLReader:17
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.TIFFReader:17
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.TecplotReader:17
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.VTKDataSetReader:22
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.XMLPolyDataReader:17
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.XMLRectilinearGridReader:17
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.XMLStructuredGridReader:17
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.XMLUnstructuredGridReader:17
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:137
#: ../../pyvista/pyvista/utilities/regression.pydocstring of
#: pyvista.utilities.regression.compare_images:43
#: ../../pyvista/pyvista/utilities/xvfb.pydocstring of
#: pyvista.utilities.xvfb.start_xvfb:31
msgid "Examples"
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.Camera.rst:3
msgid "Create a camera at the pyvista module level."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.Camera.rst:8
msgid ""
"Access the active camera of a plotter and get the position of the camera."
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.Camera.azimuth:2
msgid "Azimuth of the camera."
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.Camera.azimuth:4
msgid ""
"Rotate the camera about the view up vector centered at the focal point. Note"
" that the view up vector is whatever was set via SetViewUp, and is not "
"necessarily perpendicular to the direction of projection."
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.Camera.clipping_range:2
msgid "Return or set the location of the clipping planes."
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.Camera.clipping_range:4
msgid ""
"Clipping planes are the the near and far clipping planes along the direction"
" of projection."
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.copy:2
msgid "Return a deep copy of the camera."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.bounds:0
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.is_all_polydata:0
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.volume:0
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.as_polydata_blocks:0
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.copy:0
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.get:0
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.get_block_name:0
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.get_data_range:0
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.get_index_by_name:0
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.keys:0
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.pop:0
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.set_active_scalars:0
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:0
#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.DataObject.actual_memory_size:0
#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.DataObject.memory_address:0
#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.copy:0
#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.head:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.active_normals:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.active_scalars_info:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.active_vectors_info:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of pyvista.DataSet.area:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of pyvista.DataSet.arrows:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of pyvista.DataSet.volume:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cast_to_pointset:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cast_to_unstructured_grid:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_bounds:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_n_points:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_point_ids:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_points:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_type:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_cells_along_line:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_cells_within_bounds:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_closest_cell:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_closest_point:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_containing_cell:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_normal:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_x:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_y:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_z:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.get_array:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.get_array_association:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.get_data_range:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.point_is_inside_cell:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_vector:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_x:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_y:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_z:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.scale:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.set_active_scalars:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.translate:0
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:0
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.DataSetAttributes.active_normals:0
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.DataSetAttributes.active_normals_name:0
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.DataSetAttributes.active_t_coords:0
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.get:0
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.get_array:0
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.items:0
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.keys:0
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.pop:0
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.values:0
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.combine:0
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.extract_geometry:0
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.outline:0
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.outline_corners:0
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_centers:0
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_data_to_point_data:0
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:0
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:0
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_sizes:0
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:0
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_all_edges:0
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.point_data_to_cell_data:0
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:0
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:0
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_line:0
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:0
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.triangulate:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_centers:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_data_to_point_data:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_scalar:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_surface:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_sizes:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_derivative:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_implicit_distance:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.connectivity:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.contour:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.ctp:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.decimate_boundary:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.delaunay_3d:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.explode:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_all_edges:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_cells:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_feature_edges:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_geometry:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_largest:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_points:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_surface:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.glyph:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.integrate_data:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.interpolate:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.merge:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.outline:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.outline_corners:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.partition:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.point_data_to_cell_data:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.probe:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.ptc:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.reflect:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc_normal:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_line:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_multiple_lines:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.select_enclosed_points:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.separate_cells:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.shrink:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_line:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_implicit:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.split_bodies:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.surface_indices:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.tessellate:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_plane:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_sphere:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold_percent:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.transform:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.triangulate:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_scalar:0
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_vector:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_difference:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_intersection:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_union:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clean:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clip_closed_surface:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.collision:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_arc_length:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.curvature:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate_pro:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.edge_mask:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_rotate:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_trim:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.fill_holes:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.geodesic:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.geodesic_distance:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.intersection:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.merge:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.multi_ray_trace:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_boundaries:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_curvature:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_normals:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.project_points_to_plane:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ray_trace:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.reconstruct_surface:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.remove_points:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ribbon:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth_taubin:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.strip:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide_adaptive:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.triangulate:0
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.tube:0
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.extract_subset:0
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.fft:0
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.gaussian_smooth:0
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.high_pass:0
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_dilate_erode:0
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_threshold:0
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.low_pass:0
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.median_smooth:0
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.rfft:0
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:0
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.reconstruct_surface:0
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.unstructured_grid.UnstructuredGridFilters.subdivide_tetra:0
#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.filters.rectilinear_grid.RectilinearGridFilters.to_tetrahedra:0
#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.RectilinearGrid.cast_to_structured_grid:0
#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.UniformGrid.cast_to_rectilinear_grid:0
#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.UniformGrid.cast_to_structured_grid:0
#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.get:0
#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.get_data_range:0
#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.items:0
#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.keys:0
#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.pop:0
#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.to_pandas:0
#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.values:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.ExplicitStructuredGrid.dimensions:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.ExplicitStructuredGrid.visible_bounds:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.cell_normals:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.face_normals:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of pyvista.PolyData.faces:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.is_all_triangles:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.point_normals:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.strips:0 ../../pyvista/pyvista/core/pointset.pydocstring
#: of pyvista.PolyData.verts:0 ../../pyvista/pyvista/core/pointset.pydocstring
#: of pyvista.PolyData.volume:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.StructuredGrid.dimensions:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.StructuredGrid.x:0 ../../pyvista/pyvista/core/pointset.pydocstring
#: of pyvista.UnstructuredGrid.cell_connectivity:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.cells_dict:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.celltypes:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.offset:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.cast_to_unstructured_grid:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.cell_coords:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.cell_id:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.compute_connections:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.compute_connectivity:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.hide_cells:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.neighbors:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.show_cells:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PointSet.cast_to_polydata:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid.hide_cells:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid.hide_points:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.UnstructuredGrid.cast_to_explicit_structured_grid:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.UnstructuredGrid.linear_copy:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:0
#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.glyphs:0 ../../pyvista/pyvista/demos/demos.pydocstring
#: of pyvista.demos.demos.orientation_cube:0
#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.orientation_plotter:0
#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_glyphs:0
#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_wave:0
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Empty:0
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.HexagonalPrism:0
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Hexahedron:0
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Line:0
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.PentagonalPrism:0
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.PolyLine:0
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.PolyVertex:0
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Polygon:0
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Pyramid:0
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Quadrilateral:0
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Tetrahedron:0
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Triangle:0
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.TriangleStrip:0
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Vertex:0
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Voxel:0
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Wedge:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_action_figure:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_angular_sector:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_antarctica_velocity:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_armadillo:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_backward_facing_step:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_beach:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bird:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bird_bath:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bird_texture:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_black_vase:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_blood_vessels:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_blow:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bolt_nut:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_brain:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_brain_atlas_with_sides:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bunny:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bunny_coarse:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cad_model:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cad_model_case:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cake_easy:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cake_easy_texture:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_can:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_can_crushed_hdf:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_carburator:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_carburetor:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_carotid:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cavity:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cells_nd:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cgns_multi:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cgns_structured:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_chest:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cloud_dark_matter:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cloud_dark_matter_dense:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_clown:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_coastlines:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cow:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cow_head:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_crater_imagery:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_crater_topo:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cubemap_park:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cubemap_space_16k:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cubemap_space_4k:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cylinder_crossflow:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_damavand_volcano:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_delaunay_example:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dicom_stack:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dikhololo_night:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_disc_quads:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dolfin:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_doorman:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dragon:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_drill:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dual_sphere_animation:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_embryo:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_emoji:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_emoji_texture:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_exodus:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_face:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_face2:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_faults:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_fea_bracket:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_file:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_filled_contours:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_foot_bones:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_frog:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gears:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gif_simple:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gourds:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gourds_pnm:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gourds_texture:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gpr_data_array:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gpr_path:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_guitar:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_head:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_honolulu:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_horse:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_horse_points:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_human:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_iron_protein:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_ivan_angel:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_kitchen:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_knee:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_knee_full:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_letter_a:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_letter_k:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_lidar:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_lobster:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_louis_louvre:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_lucy:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_mars_jpg:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_masonry_texture:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_model_with_variance:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_moonlanding_image:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_motor:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_mount_damavand:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_mug:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_naca:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_nefertiti:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_notch_displacement:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_notch_stress:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_oblique_cone:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_office:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_osmnx_graph:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_owl:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_parched_canal_4k:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_particles_lethe:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_pepper:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_pine_roots:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_plastic_vase:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_poly_line:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_prostate:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_puppy:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_puppy_texture:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_quadratic_pyramid:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_rectilinear_grid:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_rgba_texture:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_room_surface_mesh:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_saddle_surface:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sea_vase:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_shark:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_single_sphere_animation:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sky_box_cube_map:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sky_box_nz:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sky_box_nz_texture:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sparse_points:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_spider:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_st_helens:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_stars_cloud_hyg:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_stars_jpg:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_structured_grid:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_structured_grid_two:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_teapot:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tecplot_ascii:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tensors:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tetra_dc_mesh:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tetrahedron:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_thermal_probes:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_topo_global:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_topo_land:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_torso:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tri_quadratic_hexahedron:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_trumpet:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_turbine_blade:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_unstructured_grid:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_urn:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_usa:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_usa_texture:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_vtk:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_vtk_logo:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_wavy:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_woman:0
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.file_from_files:0
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_airplane:0
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_ant:0
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_channels:0
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_explicit_structured:0
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_globe:0
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_globe_texture:0
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_hexbeam:0
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_nut:0
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_random_hills:0
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_rectilinear:0
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_sphere:0
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_sphere_vectors:0
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_spline:0
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_structured:0
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_tetbeam:0
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_uniform:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_jupiter_surface:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_mars_surface:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_mercury_surface:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_milkyway_sky_background:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_moon_surface:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_neptune_surface:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_pluto_surface:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_saturn_rings:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_saturn_surface:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_stars_sky_background:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_sun_surface:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_uranus_surface:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_venus_surface:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_earth:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_jupiter:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_mars:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_mercury:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_moon:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_neptune:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_pluto:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_saturn:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_saturn_rings:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_sun:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_uranus:0
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_venus:0
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property.copy:0
#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.Actor.backface_prop:0
#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor.copy:0
#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.copy:0
#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.view_frustum:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot.brush:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot.pen:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.brush:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.pen:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.brush:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.pen:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.area:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.bar:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.line:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.plot:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.scatter:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.stack:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D.brush:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D.pen:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot.brush:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot.pen:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D.brush:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D.pen:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.brush:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.pen:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts._Chart.show:0
#: ../../pyvista/pyvista/plotting/colors.pydocstring of pyvista.Color.name:0
#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color.convert_color_channel:0
#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color.linear_to_srgb:0
#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color.srgb_to_linear:0
#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color.strip_hex_prefix:0
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositeAttributes.get_block:0
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:0
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:0
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot_arrows:0
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.copy:0
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.map_value:0
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.to_color_tf:0
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.to_opacity_tf:0
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_cursor:0
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_title:0
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.Renderer.camera_position:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.Renderer.center:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.Renderer.length:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.Renderer.lights:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.Renderer.viewport:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_actor:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes_at_origin:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_border:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_bounding_box:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_orientation_widget:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_depth_peeling:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_eye_dome_lighting:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.get_default_cam_pos:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.get_pick_position:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_actor:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:0
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_grid:0
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:0
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:0
#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.perlin_noise:0
#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:0
#: ../../pyvista/pyvista/utilities/errors.pydocstring of
#: pyvista.utilities.errors.set_error_output_file:0
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read:0
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_exodus:0
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_legacy:0
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_texture:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Box:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Circle:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArc:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArcFromNormal:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cone:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cube:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cylinder:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CylinderStructured:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Disc:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Dodecahedron:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Icosahedron:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Line:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.MultipleLines:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Octahedron:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Plane:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.PlatonicSolid:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Polygon:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Pyramid:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Rectangle:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Superquadric:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Tetrahedron:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Text3D:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Triangle:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Tube:0
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Wavelet:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.array_from_vtkmatrix:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.axis_rotation:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cell_array:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.convert_array:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap_from_filenames:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.field_array:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.fit_plane_to_points:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.get_array:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.image_to_texture:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.is_inside_bounds:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.is_pyvista_dataset:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.line_segments_from_points:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.lines_from_points:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.make_tri_mesh:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.numpy_to_texture:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.point_array:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.vector_poly_data:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.vtk_points:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.vtkmatrix_from_array:0
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.wrap:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBohemianDome:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBour:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBoy:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricCatalanMinimal:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricConicSpiral:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricCrossCap:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricDini:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEllipsoid:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEnneper:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricFigure8Klein:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricHenneberg:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricKlein:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricKuen:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricMobius:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricPluckerConoid:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricPseudosphere:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRoman:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperEllipsoid:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricTorus:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.Spline:0
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.surface_from_para:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.BaseReader.reader:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.CGNSReader.base_array_names:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.CGNSReader.distribute_blocks:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.CGNSReader.family_array_names:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.CGNSReader.number_base_arrays:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.CGNSReader.number_family_arrays:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.EnSightReader.active_time_value:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.EnSightReader.number_time_points:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.OpenFOAMReader.active_time_value:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.OpenFOAMReader.all_patch_arrays_status:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.OpenFOAMReader.cell_to_point_creation:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.OpenFOAMReader.decompose_polyhedra:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.OpenFOAMReader.number_patch_arrays:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.OpenFOAMReader.number_time_points:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.OpenFOAMReader.patch_array_names:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.OpenFOAMReader.skip_zero_time:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.POpenFOAMReader.case_type:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.PVDReader.active_datasets:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.PVDReader.active_readers:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.PVDReader.active_time_value:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.PVDReader.datasets:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.PVDReader.number_time_points:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.PVDReader.time_values:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.PointCellDataSelection.all_cell_arrays_status:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.PointCellDataSelection.all_point_arrays_status:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.PointCellDataSelection.cell_array_names:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.PointCellDataSelection.number_cell_arrays:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.PointCellDataSelection.number_point_arrays:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.PointCellDataSelection.point_array_names:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.TimeReader.active_time_value:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.TimeReader.number_time_points:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.TimeReader.time_values:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.BaseReader.read:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.CGNSReader.base_array_status:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.CGNSReader.family_array_status:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.EnSightReader.time_point_value:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OpenFOAMReader.time_point_value:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PVDReader.read:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PVDReader.time_point_value:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PointCellDataSelection.cell_array_status:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PointCellDataSelection.point_array_status:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.TimeReader.time_point_value:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:0
#: ../../pyvista/pyvista/utilities/regression.pydocstring of
#: pyvista.utilities.regression.compare_images:0
msgid "Returns"
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.copy:18
msgid ":obj:`pyvista.Camera`"
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.copy:9
msgid "Deep copy of the camera."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.Camera.rst:3
msgid ""
"Create a camera and check that it shares a transformation matrix with its "
"shallow copy."
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.Camera.direction:2
msgid "Vector from the camera position to the focal point."
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.disable_parallel_projection:2
msgid "Disable the use of parallel projection."
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.disable_parallel_projection:4
msgid "This is default behavior."
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.Camera.distance:2
msgid "Return or set the distance of the focal point from the camera."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.as_polydata_blocks:25
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.set_active_scalars:38
#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.save:37
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.active_normals:19
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.active_scalars_info:22
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.active_vectors_info:22
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.n_cells:15
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.DataSetAttributes.active_normals:20
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes:45
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.get_array:29
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.remove:19
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_array:35
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_scalars:33
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_vectors:35
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_sizes:34
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_sizes:34
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.explode:25
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.merge:49
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.partition:46
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.collision:69
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:80
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:80
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth_taubin:72
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.gaussian_smooth:32
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_dilate_erode:42
#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.RectilinearGrid.points:15
#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.UniformGrid.points:15 ../../pyvista/pyvista/core/grid.pydocstring
#: of pyvista.UniformGrid.spacing:15
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.is_all_triangles:25
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.cast_to_unstructured_grid:29
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.save:22
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PointSet:43
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData.save:44
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cubemap_space_16k:30
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_notch_stress:24
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.anisotropy:20
#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.Actor.texture:15 ../../pyvista/pyvista/plotting/camera.pydocstring
#: of pyvista.Camera.distance:15
#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.tight:38
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartBox.loc:16 ../../pyvista/pyvista/plotting/charts.pydocstring
#: of pyvista.ChartBox.size:16
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartPie.loc:16 ../../pyvista/pyvista/plotting/charts.pydocstring
#: of pyvista.ChartPie.size:16
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.color_scheme:19
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.color_scheme:19
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.plot:36
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Pen:32
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot.color_scheme:19
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D:37
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.color_scheme:19
#: ../../pyvista/pyvista/plotting/colors.pydocstring of pyvista.Color.name:19
#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color:59
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.CompositePolyDataMapper.block_attr:15
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.BlockAttributes:22
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositeAttributes:22
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositeAttributes.get_block:23
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.rebuild:17
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:121
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap:48
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.CGNSReader.load_boundary_patch:15
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.VTKDataSetReader:15
#: ../../pyvista/pyvista/utilities/xvfb.pydocstring of
#: pyvista.utilities.xvfb.start_xvfb:25
msgid "Notes"
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.Camera.distance:16
msgid "Setting the distance keeps the camera fixed and moves the focal point."
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.Camera.elevation:2
msgid "Vertical rotation of the scene."
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.Camera.elevation:4
msgid ""
"Rotate the camera about the cross product of the negative of the direction "
"of projection and the view up vector, using the focal point as the center of"
" rotation."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:68
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:68
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:68
#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.enable_parallel_projection:2
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:68
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_parallel_projection:2
msgid "Enable parallel projection."
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.enable_parallel_projection:4
msgid ""
"The camera will have a parallel projection. Parallel projection is often "
"useful when viewing images or 2D datasets, but will look odd when viewing 3D"
" datasets."
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.Camera.focal_point:2
msgid "Location of the camera's focus in world coordinates."
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.Camera.is_parallel_projection:2
msgid "Return True if parallel projection is set."
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.Camera.model_transform_matrix:2
msgid "Return or set the camera's model transformation matrix."
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.Camera.parallel_projection:2
msgid "Return the state of the parallel projection."
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.Camera.parallel_scale:2
msgid "Return or set the scaling used for a parallel projection."
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.Camera.position:2
msgid "Return or set the position of the camera in world coordinates."
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.reset_clipping_range:2
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.reset_camera_clipping_range:2
msgid ""
"Reset the camera clipping range based on the bounds of the visible actors."
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of pyvista.Camera.roll:2
msgid "Rotate the camera about the direction of projection."
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of pyvista.Camera.roll:4
msgid "This will spin the camera about its axis."
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.Camera.thickness:2
msgid "Return or set the distance between clipping planes."
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.tight:2
msgid ""
"Adjust the camera position so that the actors fill the entire renderer."
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.tight:4
msgid ""
"The camera view direction is reoriented to be normal to the ``view`` plane. "
"When ``negative=False``, The first letter of ``view`` refers to the axis "
"that points to the right. The second letter of ``view`` refers to axis that "
"points up.  When ``negative=True``, the first letter refers to the axis that"
" points left.  The up direction is unchanged."
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.tight:11
msgid "Parallel projection is enabled when using this function."
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.tight:17
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:119
msgid "**padding** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:129
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_cells_along_line:14
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_y:14
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:129
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.combine:11
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.outline_corners:8
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:22
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:22
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:19
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:8
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:11
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:14
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:22
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:22
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_scalar:15
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_surface:20
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.delaunay_3d:15
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.delaunay_3d:20
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.delaunay_3d:24
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_feature_edges:19
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.glyph:23
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.glyph:44
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.interpolate:18
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.interpolate:21
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.interpolate:38
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.outline_corners:8
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:45
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:27
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:51
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_line:40
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.probe:14
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample:14
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc:23
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc_normal:26
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc_normal:31
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_line:18
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_multiple_lines:11
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.select_enclosed_points:27
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.shrink:10
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:19
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:8
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:11
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:14
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines:29
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:28
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:40
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:50
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:54
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:58
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:61
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:36
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:45
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:49
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:56
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:59
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:62
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:70
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_scalar:13
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_vector:16
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_difference:32
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_intersection:37
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_union:38
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clean:15
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clip_closed_surface:32
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.collision:30
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.collision:33
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:58
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:46
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:49
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:52
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:55
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:58
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate_pro:17
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate_pro:22
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate_pro:54
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_rotate:43
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_rotate:46
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_rotate:49
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_normals:10
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.reconstruct_surface:29
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ribbon:12
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ribbon:20
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ribbon:24
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth:14
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth:18
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth:21
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth:24
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth_taubin:23
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth_taubin:27
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth_taubin:30
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide_adaptive:24
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide_adaptive:30
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.tube:10
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.tube:24
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.reconstruct_surface:29
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:129
#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_wave:10
#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_wave:13
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_saturn_rings:8
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_saturn_rings:11
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:37
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:43
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:46
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:51
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:57
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:60
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:63
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:66
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:88
#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.tight:16
#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.view_frustum:8
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.line:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.scatter:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Pen:11
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D:18
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:129
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light:39
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light:51
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light:59
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light:68
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_title:13
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_border:10
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_bounding_box:20
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_bounding_box:23
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_bounding_box:26
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:31
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:38
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:51
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:54
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_depth_peeling:18
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_scale:10
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_scale:14
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_scale:18
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:47
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:106
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:118
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:31
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:34
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:37
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:40
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:43
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:7
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:10
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:55
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArcFromNormal:25
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cone:18
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cone:26
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBohemianDome:7
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBoy:13
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricConicSpiral:11
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricConicSpiral:16
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricConicSpiral:21
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricConicSpiral:26
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricDini:10
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricDini:14
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEllipsoid:12
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEllipsoid:15
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEllipsoid:18
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricFigure8Klein:10
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricKuen:13
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricMobius:7
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:18
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:22
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:26
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:36
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:40
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:44
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRoman:7
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperEllipsoid:11
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperEllipsoid:14
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperEllipsoid:17
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperEllipsoid:20
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperEllipsoid:23
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:16
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:20
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:23
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:26
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:29
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:32
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:35
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricTorus:8
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricTorus:11
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:10
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:13
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:16
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:19
#: ../../pyvista/pyvista/utilities/xvfb.pydocstring of
#: pyvista.utilities.xvfb.start_xvfb:8
msgid "python:float, optional"
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.tight:16
msgid ""
"Additional padding around the actor(s). This is effectively a zoom, where a "
"value of 0.01 results in a zoom out of 1%."
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.tight:21
msgid ""
"**adjust_render_window** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.as_polydata_blocks:9
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.copy:7
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.get_data_range:10
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.set_active_scalars:19
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:12
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:18
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:30
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:40
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:44
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:48
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:57
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:60
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:64
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:67
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:72
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:88
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:92
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:106
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:111
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:118
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:133
#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.add_field_data:27
#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.copy:9
#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.head:9
#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.head:12
#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.save:11
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cast_to_pointset:9
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.copy_meta_from:23
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_closest_cell:13
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_normal:20
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_normal:23
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_x:17
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_x:20
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_y:17
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_y:20
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_z:17
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_z:20
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_vector:22
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_vector:25
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_x:19
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_x:22
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_y:19
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_y:22
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_z:19
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_z:22
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.scale:18
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.scale:21
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.translate:16
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.translate:19
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:12
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:18
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:30
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:40
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:44
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:48
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:57
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:60
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:64
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:67
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:72
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:88
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:92
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:106
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:111
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:118
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:133
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_array:31
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_scalars:29
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_vectors:31
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.combine:7
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.outline:7
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.outline:10
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.outline:13
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.outline_corners:11
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.outline_corners:14
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_centers:11
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_data_to_point_data:16
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_data_to_point_data:19
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:18
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:25
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:28
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:31
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:37
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:18
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:25
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:29
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:35
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_sizes:7
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_sizes:10
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_sizes:13
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_sizes:16
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:40
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:43
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_all_edges:19
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.point_data_to_cell_data:11
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.point_data_to_cell_data:14
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:19
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:22
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:25
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:24
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:27
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:40
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_line:13
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_line:16
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_line:19
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:19
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:22
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:25
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.triangulate:8
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.triangulate:11
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_centers:11
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_data_to_point_data:16
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_data_to_point_data:19
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:18
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:25
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:28
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:31
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:37
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:18
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:25
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:29
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:35
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_scalar:12
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_scalar:18
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_scalar:21
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_scalar:24
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_surface:15
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_surface:25
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_surface:28
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_surface:34
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:55
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_sizes:7
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_sizes:10
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_sizes:13
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_sizes:16
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_derivative:39
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_derivative:45
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_implicit_distance:16
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.connectivity:17
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.contour:19
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.contour:22
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.contour:25
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.contour:43
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.ctp:13
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.ctp:16
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.decimate_boundary:14
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.delaunay_3d:27
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:40
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:43
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_all_edges:19
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_feature_edges:22
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_feature_edges:25
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_feature_edges:29
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_feature_edges:32
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_feature_edges:35
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_geometry:16
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_largest:10
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_largest:13
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_points:13
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_points:17
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_points:20
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_surface:9
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_surface:14
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_surface:32
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.glyph:47
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.glyph:50
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.glyph:57
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.integrate_data:12
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.interpolate:47
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.interpolate:50
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.interpolate:53
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.merge:21
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.merge:25
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.merge:30
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.merge:33
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.outline:7
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.outline:10
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.outline_corners:11
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:37
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:40
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:61
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:43
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:46
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:67
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_line:33
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_line:36
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_line:56
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.point_data_to_cell_data:11
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.point_data_to_cell_data:14
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.probe:17
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.probe:20
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.probe:25
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.probe:28
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.ptc:13
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.ptc:16
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.reflect:14
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.reflect:18
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.reflect:21
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample:17
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample:20
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample:25
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample:28
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc:26
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc_normal:34
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_line:21
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_multiple_lines:14
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.select_enclosed_points:32
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.select_enclosed_points:38
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.select_enclosed_points:41
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.shrink:13
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:19
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:22
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:25
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:24
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:27
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:40
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_line:13
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_line:16
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_line:19
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_implicit:20
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:19
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:22
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:25
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.split_bodies:10
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.split_bodies:13
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines:39
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines:46
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:69
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:72
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:30
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:66
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:80
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.surface_indices:7
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.tessellate:19
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.tessellate:22
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_plane:24
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_plane:32
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_plane:35
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_sphere:20
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_sphere:25
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_sphere:32
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold:31
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold:36
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold:48
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold:51
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold_percent:24
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold_percent:30
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold_percent:38
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.transform:31
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.transform:34
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.transform:37
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.triangulate:8
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.triangulate:11
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_scalar:21
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_scalar:24
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_vector:19
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_vector:22
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_difference:35
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_intersection:40
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_union:41
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clean:9
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clean:19
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clean:23
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clean:27
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clean:30
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clean:34
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clean:37
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clip_closed_surface:35
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clip_closed_surface:38
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.collision:45
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.collision:48
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_arc_length:11
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:17
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:20
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:25
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:30
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:33
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:46
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:52
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:61
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:64
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.curvature:16
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:16
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:23
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:29
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:32
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:35
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:38
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:41
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:61
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:64
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate_pro:29
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate_pro:37
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate_pro:42
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate_pro:47
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate_pro:57
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate_pro:60
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.edge_mask:10
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude:39
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude:42
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude:45
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_rotate:40
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_rotate:61
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_rotate:68
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_trim:38
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_trim:41
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.fill_holes:21
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.fill_holes:24
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.geodesic:19
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.geodesic:25
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.geodesic:28
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.geodesic_distance:13
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.intersection:17
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.intersection:21
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.intersection:24
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.merge:21
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.merge:27
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.merge:32
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.merge:35
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.multi_ray_trace:23
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.multi_ray_trace:27
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_boundaries:13
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_normals:7
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_normals:14
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_normals:22
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.project_points_to_plane:16
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ray_trace:15
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ray_trace:18
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ray_trace:21
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.reconstruct_surface:32
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.remove_points:18
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.remove_points:21
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ribbon:39
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth:28
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth:33
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth:36
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth:39
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth_taubin:34
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth_taubin:39
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth_taubin:42
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth_taubin:50
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth_taubin:53
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth_taubin:56
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.strip:28
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.strip:37
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.strip:43
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.strip:49
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.strip:52
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide:37
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide:40
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide_adaptive:48
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide_adaptive:51
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.triangulate:8
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.triangulate:11
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.tube:17
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.tube:31
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.tube:34
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.extract_subset:30
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.extract_subset:33
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.fft:26
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.gaussian_smooth:16
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.high_pass:40
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_dilate_erode:26
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_threshold:39
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.low_pass:40
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.median_smooth:29
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.rfft:26
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.reconstruct_surface:32
#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.filters.rectilinear_grid.RectilinearGridFilters.to_tetrahedra:27
#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.RectilinearGrid:29
#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.RectilinearGrid:43
#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.UniformGrid:45
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.compute_connections:11
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.compute_connectivity:18
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.hide_cells:13
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.save:18
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.show_cells:10
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PointSet:25
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PointSet:39
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PointSet.cast_to_polydata:10
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData:71
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData:92
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData.save:16
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid.hide_cells:13
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:12
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:18
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:30
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:40
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:44
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:48
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:57
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:60
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:64
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:67
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:72
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:88
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:92
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:106
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:111
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:118
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:133
#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_ants_plane:56
#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_beam:18
#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_wave:17
#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_wave:21
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_action_figure:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_angular_sector:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_antarctica_velocity:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_armadillo:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_backward_facing_step:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_beach:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bird:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bird_texture:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_blood_vessels:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_blow:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bolt_nut:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_brain:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_brain_atlas_with_sides:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bunny:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bunny_coarse:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cad_model:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cake_easy:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cake_easy_texture:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_can:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_can:13
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_can_crushed_hdf:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_carburator:10
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_carburetor:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_carotid:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cavity:10
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cells_nd:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cgns_multi:10
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cgns_structured:10
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_chest:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cloud_dark_matter:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cloud_dark_matter_dense:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_clown:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_coastlines:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cow:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cow_head:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_crater_imagery:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_crater_topo:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cylinder_crossflow:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_damavand_volcano:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_delaunay_example:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dicom_stack:12
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_disc_quads:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dolfin:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_doorman:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dragon:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_drill:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dual_sphere_animation:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_embryo:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_emoji:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_emoji_texture:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_exodus:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_face:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_face2:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_faults:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_fea_bracket:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_filled_contours:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_foot_bones:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_frog:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gears:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gif_simple:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gourds:7
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gourds:11
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gourds_pnm:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gourds_texture:7
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gourds_texture:11
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gpr_data_array:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gpr_path:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_guitar:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_head:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_honolulu:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_horse:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_horse_points:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_human:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_iron_protein:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_kitchen:10
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_kitchen:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_knee:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_knee_full:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_letter_a:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_letter_k:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_lidar:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_lobster:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_louis_louvre:13
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_lucy:11
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_masonry_texture:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_model_with_variance:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_moonlanding_image:15
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_motor:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_mount_damavand:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_mug:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_naca:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_nefertiti:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_notch_displacement:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_notch_stress:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_oblique_cone:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_office:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_parched_canal_4k:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_particles_lethe:10
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_pepper:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_pine_roots:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_poly_line:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_prostate:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_puppy:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_puppy_texture:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_quadratic_pyramid:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_rectilinear_grid:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_rgba_texture:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_room_surface_mesh:12
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_saddle_surface:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_shark:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_single_sphere_animation:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sky_box_nz:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sky_box_nz_texture:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sparse_points:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_spider:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_st_helens:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_stars_cloud_hyg:20
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_structured_grid:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_structured_grid_two:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_teapot:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tecplot_ascii:10
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tensors:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tetrahedron:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_thermal_probes:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_topo_global:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_topo_land:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_torso:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tri_quadratic_hexahedron:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_trumpet:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_turbine_blade:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_unstructured_grid:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_urn:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_usa:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_usa_texture:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_vtk:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_vtk_logo:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_wavy:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_woman:9
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_venus_surface:9
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:70
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:77
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:81
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:84
#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.tight:20
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis:21
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D:34
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts._Chart.show:10
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts._Chart.show:16
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts._Chart.show:33
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper:15
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper:34
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:12
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:18
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:30
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:40
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:44
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:48
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:57
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:60
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:64
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:67
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:72
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:88
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:92
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:106
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:111
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:118
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:133
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light:48
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light:55
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.copy:12
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:49
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:8
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:13
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:25
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:46
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:49
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_title:29
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:17
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:22
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:26
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:31
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:54
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:71
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:76
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_actor:11
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_actor:25
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_actor:29
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_actor:33
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:7
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:34
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:38
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes_at_origin:28
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_bounding_box:30
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_bounding_box:33
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_bounding_box:36
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:34
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:42
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:48
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:57
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:62
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:28
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_orientation_widget:14
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.deep_clean:21
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_depth_of_field:19
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_actor:14
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_actor:18
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_bounding_box:17
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_floors:7
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_floors:20
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_legend:18
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_environment_texture:27
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_position:21
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_scale:31
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_viewup:21
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:24
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:27
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:30
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:33
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:36
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:39
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:42
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:81
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:102
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:113
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:122
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_isometric:18
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_xy:17
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_xz:17
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_yx:17
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_yz:17
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_zx:17
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_zy:17
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:28
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:46
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:52
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cone:22
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:23
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:27
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:31
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:35
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:52
msgid "bool, optional"
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.tight:20
msgid ""
"Adjust the size of the render window as to match the dimensions of the "
"visible actors."
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.tight:24
msgid "**view**"
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.tight-1
msgid "{'xy', 'yx', 'xz', 'zx', 'yz', 'zy'}"
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.tight:24
msgid "Plane to which the view is oriented. Default 'xy'."
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.tight:35
msgid "**negative** : :ref:`bool <python:bltin-boolean-values>`"
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.tight:34
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:29
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:77
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:82
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:87
msgid "bool"
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.tight:27
msgid "Whether to view in opposite direction. Default ``False``."
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.tight:39
msgid ""
"This resets the view direction to look at a plane with parallel projection."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.Camera.rst:3
msgid "Display the puppy image with a tight view."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.Camera.rst:27
msgid "Set the background to blue use a 5% padding around the image."
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of pyvista.Camera.up:2
msgid "Return or set the \"up\" of the camera."
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.Camera.view_angle:2
msgid "Return or set the camera view angle."
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.view_frustum:2
msgid "Get the view frustum."
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.view_frustum:9
msgid "**aspect** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.view_frustum:8
msgid "The aspect of the viewport to compute the planes. Defaults to 1.0."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of pyvista.DataSet.arrows:21
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.extract_geometry:24
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.outline:31
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.outline_corners:32
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_centers:27
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_all_edges:34
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:40
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:55
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_line:34
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:40
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.triangulate:26
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_centers:27
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_surface:49
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.contour:58
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.decimate_boundary:29
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_all_edges:34
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_feature_edges:50
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_geometry:31
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_surface:47
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.glyph:72
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.outline:25
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.outline_corners:26
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc:41
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc_normal:49
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_line:36
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_multiple_lines:29
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.select_enclosed_points:56
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:40
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:55
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_line:34
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_implicit:35
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:40
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:91
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:99
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.triangulate:26
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_vector:37
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_difference:50
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_intersection:55
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_union:56
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clean:56
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clip_closed_surface:53
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.collision:56
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:77
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:77
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate_pro:75
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:60
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude:60
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_rotate:83
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_trim:56
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.fill_holes:39
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.geodesic:45
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.intersection:30
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.intersection:34
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.intersection:47
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.project_points_to_plane:31
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.reconstruct_surface:47
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.remove_points:27
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ribbon:54
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth:54
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth_taubin:69
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.strip:67
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide:55
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide_adaptive:66
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.triangulate:26
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.tube:49
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:60
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.reconstruct_surface:47
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PointSet.cast_to_polydata:28
#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.glyphs:19
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_stars_cloud_hyg:35
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_airplane:18
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_ant:18
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_globe:18
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_nut:18
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_random_hills:27
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_sphere:18
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_sphere_vectors:18
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_spline:31
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_earth:28
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_jupiter:28
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_mars:28
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_mercury:28
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_moon:28
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_neptune:28
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_pluto:28
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_saturn:28
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_saturn_rings:29
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_sun:28
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_uranus:28
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_venus:28
#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.view_frustum:23
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:44
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Box:30
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Circle:25
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArc:42
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArcFromNormal:40
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cone:44
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cube:55
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cylinder:38
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Disc:40
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Dodecahedron:27
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Icosahedron:28
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Line:28
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.MultipleLines:22
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Octahedron:28
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Plane:37
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.PlatonicSolid:37
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Polygon:35
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Rectangle:22
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:48
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Superquadric:49
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Tetrahedron:27
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Text3D:25
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Triangle:23
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Tube:34
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Wavelet:56
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.fit_plane_to_points:17
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.line_segments_from_points:27
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.lines_from_points:27
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.make_tri_mesh:31
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.vector_poly_data:27
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBohemianDome:25
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBour:22
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBoy:31
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricCatalanMinimal:25
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricConicSpiral:44
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricCrossCap:25
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricDini:32
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEllipsoid:37
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEnneper:25
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricFigure8Klein:28
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricHenneberg:22
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricKlein:26
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricKuen:31
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricMobius:25
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricPluckerConoid:29
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricPseudosphere:26
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:62
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRoman:25
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperEllipsoid:38
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:50
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricTorus:29
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.Spline:27
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.surface_from_para:38
msgid ":obj:`pyvista.PolyData`"
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.view_frustum:14
msgid "View frustum."
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.zoom:2
msgid "Set the zoom of the camera."
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.zoom:4
msgid "In perspective mode, decrease the view angle by the specified factor."
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.zoom:7
msgid ""
"In parallel mode, decrease the parallel scale by the specified factor. A "
"value greater than 1 is a zoom-in, a value less than 1 is a zoom-out."
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.zoom:26
msgid "**value** : :class:`python:float` or :class:`python:str`"
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.zoom:25
msgid "python:float or python:str"
msgstr ""

#: ../../pyvista/pyvista/plotting/camera.pydocstring of
#: pyvista.plotting.camera.Camera.zoom:14
msgid ""
"Zoom of the camera. If a float, must be greater than 0. Otherwise, if a "
"string, must be ``\"tight\"``. If tight, the plot will be zoomed such that "
"the actors fill the entire viewport."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.Camera.rst:3
msgid "Show the Default zoom."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.Camera.rst:25
msgid "Show 2x zoom."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.Camera.rst:46
msgid "Zoom so the actor fills the entire render window."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.CompositeFilters.rst:2
msgid "pyvista.CompositeFilters"
msgstr ""

#: ../../pyvista/doc/api/core/filters.rst:65:<autosummary>:1
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters:2
msgid "An internal class to manage filters/algorithms for composite datasets."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_centers:2
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_centers:2
msgid "Generate points at the center of the cells in this dataset."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_centers:4
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_centers:4
msgid "These points can be used for placing glyphs or vectors."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_centers:9
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_centers:9
msgid ""
"**vertex** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:True`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.clean:17
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_centers:8
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_centers:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bird_bath:16
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_black_vase:16
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cad_model_case:13
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_ivan_angel:16
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_owl:16
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_plastic_vase:16
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sea_vase:16
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_jupiter_surface:12
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_mars_surface:12
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_mercury_surface:12
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_milkyway_sky_background:12
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_moon_surface:12
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_neptune_surface:12
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_pluto_surface:12
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_saturn_rings:12
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_saturn_surface:12
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_stars_sky_background:12
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_sun_surface:12
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_uranus_surface:12
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_venus_surface:15
#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor.copy:9
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.apply_opacity:20
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.map_value:10
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_bounding_box:40
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_ssao:35
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.reset_camera:9
#: ../../pyvista/pyvista/utilities/errors.pydocstring of
#: pyvista.utilities.errors.Report:32
#: ../../pyvista/pyvista/utilities/errors.pydocstring of
#: pyvista.utilities.errors.VtkErrorCatcher:21
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_exodus:12
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_exodus:18
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_exodus:25
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_exodus:28
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Box:15
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cube:40
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cylinder:23
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Polygon:20
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.axis_rotation:17
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.vtk_points:12
#: ../../pyvista/pyvista/utilities/regression.pydocstring of
#: pyvista.utilities.regression.compare_images:24
msgid "bool, default: python:True"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_centers:9
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_centers:9
msgid "Enable or disable the generation of vertex cells."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.outline:14
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.outline_corners:15
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_centers:12
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_data_to_point_data:20
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:32
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:26
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_sizes:17
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:44
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_all_edges:20
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.point_data_to_cell_data:15
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:26
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:41
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_line:20
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:26
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.triangulate:12
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_centers:12
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_data_to_point_data:20
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:32
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:26
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_scalar:22
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_surface:29
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:56
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_sizes:17
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_derivative:46
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.connectivity:18
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.contour:44
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.ctp:17
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.decimate_boundary:15
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.delaunay_3d:28
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:44
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_all_edges:20
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_feature_edges:36
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_geometry:17
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_largest:14
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_points:21
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_surface:33
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.glyph:58
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.integrate_data:13
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.interpolate:54
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.merge:34
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.outline:11
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.outline_corners:12
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:62
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:68
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_line:57
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.point_data_to_cell_data:15
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.probe:29
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.ptc:17
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.reflect:22
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample:29
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc:27
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc_normal:35
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_line:22
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_multiple_lines:15
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.select_enclosed_points:42
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.shrink:14
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:26
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:41
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_line:20
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_implicit:21
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:26
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.split_bodies:14
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines:47
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:73
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:81
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.surface_indices:8
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.tessellate:23
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_plane:36
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_sphere:33
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold:52
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold_percent:39
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.transform:38
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.triangulate:12
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_scalar:25
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_vector:23
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_difference:36
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_intersection:41
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_union:42
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clean:38
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clip_closed_surface:39
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.collision:49
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_arc_length:12
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:65
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.curvature:17
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:65
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate_pro:61
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.edge_mask:11
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude:46
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_rotate:69
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_trim:42
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.fill_holes:25
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.geodesic:29
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.geodesic_distance:14
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.intersection:25
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.merge:36
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_boundaries:14
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.reconstruct_surface:33
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ribbon:40
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth:40
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth_taubin:57
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.strip:53
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide:41
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide_adaptive:52
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.triangulate:12
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.tube:35
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.extract_subset:34
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.fft:27
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.gaussian_smooth:17
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.high_pass:41
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_dilate_erode:27
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_threshold:40
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.low_pass:41
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.median_smooth:30
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.rfft:27
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.reconstruct_surface:33
#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.filters.rectilinear_grid.RectilinearGridFilters.to_tetrahedra:28
msgid ""
"**progress_bar** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.outline:14
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.outline_corners:15
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_centers:12
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_data_to_point_data:20
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:32
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:26
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_sizes:17
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:44
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_all_edges:20
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.point_data_to_cell_data:15
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:26
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:41
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_line:20
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:26
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.triangulate:12
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_centers:12
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_data_to_point_data:20
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:32
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:26
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_scalar:22
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_surface:29
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:56
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_sizes:17
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_derivative:46
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.connectivity:18
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.contour:44
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.ctp:17
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.decimate_boundary:15
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.delaunay_3d:28
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:44
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_all_edges:20
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_cells:11
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_feature_edges:36
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_geometry:17
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_largest:14
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_points:21
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_surface:33
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.glyph:58
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.integrate_data:13
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.interpolate:54
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.merge:34
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.outline:11
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.outline_corners:12
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:52
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:58
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_line:47
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.point_data_to_cell_data:15
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.probe:29
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.ptc:17
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.reflect:22
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample:29
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc:27
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc_normal:35
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_line:22
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_multiple_lines:15
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.select_enclosed_points:42
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.shrink:14
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:26
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:41
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_line:20
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_implicit:21
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:26
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.split_bodies:14
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines:47
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:73
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:81
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.surface_indices:8
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.tessellate:23
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_plane:36
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_sphere:33
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold:52
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold_percent:39
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.transform:38
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.triangulate:12
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_scalar:25
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_vector:23
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_difference:36
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_intersection:41
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_union:42
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clean:38
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clip_closed_surface:39
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.collision:49
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:65
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:65
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate_pro:61
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:46
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.edge_mask:11
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude:46
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_rotate:69
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_trim:42
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.fill_holes:25
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.geodesic:29
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.geodesic_distance:14
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.intersection:25
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.merge:36
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_boundaries:14
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.reconstruct_surface:33
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ribbon:40
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth:40
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth_taubin:57
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.strip:53
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide:41
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide_adaptive:52
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.triangulate:12
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.tube:35
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.extract_subset:34
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.fft:27
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.gaussian_smooth:17
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.high_pass:41
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.low_pass:41
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.median_smooth:30
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.rfft:27
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:46
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.reconstruct_surface:33
#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.filters.rectilinear_grid.RectilinearGridFilters.to_tetrahedra:28
#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:61
msgid "Display a progress bar to indicate progress."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_centers:17
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_centers:17
msgid ""
"Polydata where the points are the cell centers of the original dataset."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.CompositeFilters.rst:26
#: ../../pyvista/doc/api/core/_autosummary/pyvista.CompositeFilters.rst:27
#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:26
#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:27
msgid "See :ref:`cell_centers_example` for more examples using this filter."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_data_to_point_data:2
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_data_to_point_data:2
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.ctp:2
msgid "Transform cell data into point data."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_data_to_point_data:4
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_data_to_point_data:4
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.ctp:4
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.ptc:4
msgid ""
"Point data are specified per node and cell data specified within cells.  "
"Optionally, the input point data can be passed through to the output."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_data_to_point_data:8
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_data_to_point_data:8
msgid ""
"The method of transformation is based on averaging the data values of all "
"cells using a particular point. Optionally, the input cell data can be "
"passed through to the output as well."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_data_to_point_data:12
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_data_to_point_data:12
msgid "See also :func:`pyvista.DataSetFilters.point_data_to_cell_data`."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_data_to_point_data:17
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_data_to_point_data:17
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.ctp:14
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.interpolate:48
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.probe:18
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample:18
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.strip:38
msgid ""
"**pass_cell_data** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_data_to_point_data:17
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_data_to_point_data:17
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.ctp:14
msgid "If enabled, pass the input cell data through to the output."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_data_to_point_data:23
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.point_data_to_cell_data:18
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_data_to_point_data:23
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.ctp:20
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.interpolate:58
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.point_data_to_cell_data:18
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.probe:37
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.ptc:20
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample:33
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines:50
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_scalar:28
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clean:42
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_boundaries:18
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_curvature:16
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_normals:31
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid:53
#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_glyphs:12
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.plot_cell:24
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property.plot:20
#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor.plot:19
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot_arrows:15
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.plot:18
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:89
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:59
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_grid:13
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.save_meshio:30
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBohemianDome:11
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBour:8
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBoy:17
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricCatalanMinimal:11
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricConicSpiral:30
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricCrossCap:11
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricDini:18
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEllipsoid:23
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEnneper:11
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricFigure8Klein:14
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricHenneberg:8
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricKlein:12
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricKuen:17
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricMobius:11
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricPluckerConoid:15
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricPseudosphere:12
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:48
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRoman:11
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperEllipsoid:27
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:39
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricTorus:15
msgid "**\\*\\*kwargs** : :class:`python:dict`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:95
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:95
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_data_to_point_data:22
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.point_data_to_cell_data:17
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_data_to_point_data:22
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.ctp:19
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.interpolate:57
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.point_data_to_cell_data:17
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.probe:36
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.ptc:19
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample:32
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines:49
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_scalar:27
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clean:41
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_boundaries:17
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_curvature:15
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_normals:30
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid:52
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:95
#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_glyphs:11
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.plot_cell:23
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property.plot:19
#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor.plot:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts._Chart.show:42
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:95
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot_arrows:14
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:77
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.plot:17
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:20
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:46
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:88
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:43
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:54
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:58
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_grid:12
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read:30
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_texture:13
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.save_meshio:29
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBohemianDome:10
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBour:7
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBoy:16
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricCatalanMinimal:10
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricConicSpiral:29
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricCrossCap:10
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricDini:17
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEllipsoid:22
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEnneper:10
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricFigure8Klein:13
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricHenneberg:7
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricKlein:11
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricKuen:16
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricMobius:10
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricPluckerConoid:14
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricPseudosphere:11
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:47
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRoman:10
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperEllipsoid:26
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:38
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricTorus:14
msgid "python:dict, optional"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_data_to_point_data:23
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_data_to_point_data:23
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.ctp:20
msgid "Depreciated keyword argument ``pass_cell_arrays``."
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.copy:25
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_normal:38
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_x:35
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_y:35
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_z:35
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_vector:40
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_x:37
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_y:37
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_z:37
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.scale:36
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.translate:34
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_data_to_point_data:38
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_sizes:31
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:59
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.point_data_to_cell_data:33
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_data_to_point_data:38
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:71
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_sizes:31
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_derivative:60
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_implicit_distance:32
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.connectivity:33
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.ctp:38
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:59
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_largest:28
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.interpolate:72
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.point_data_to_cell_data:33
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.probe:51
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.ptc:38
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.reflect:36
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample:47
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.shrink:28
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.tessellate:37
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_plane:51
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_sphere:48
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.transform:54
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_scalar:42
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.merge:52
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read:56
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_exodus:47
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_legacy:29
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.wrap:28
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.BaseReader.read:21
msgid ":obj:`pyvista.DataSet`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_data_to_point_data:28
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.point_data_to_cell_data:23
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.cell_data_to_point_data:28
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.point_data_to_cell_data:23
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.ptc:25
msgid ""
"Dataset with the point data transformed into cell data. Return type matches "
"input."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.CompositeFilters.rst:3
#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid ""
"First compute the face area of the example airplane mesh and show the cell "
"values.  This is to show discrete cell data."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.CompositeFilters.rst:25
#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:25
msgid ""
"These cell scalars can be applied to individual points to effectively smooth"
" out the cell data onto the points."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:2
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:2
msgid "Clip a dataset by a plane by specifying the origin and normal."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:4
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:4
msgid ""
"If no parameters are given the clip will occur in the center of that "
"dataset."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:12
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:11
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:12
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:11
msgid ""
"**normal** : :class:`python:tuple`\\(:class:`python:float`) :obj:`or` "
":class:`python:str`, default: 'x'"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:11
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:10
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:11
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:10
msgid "python:tuple(python:float) or python:str, default: 'x'"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:10
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:10
msgid ""
"Length 3 tuple for the normal vector direction. Can also be specified as a "
"string conventional direction such as ``'x'`` for ``(1,0,0)`` or ``'-x'`` "
"for ``(-1,0,0)``, etc."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:16
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:15
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:16
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:15
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_plane:12
msgid ""
"**origin** : :class:`python:tuple`\\(:class:`python:float`), :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:15
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:15
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:18
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:22
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:14
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:15
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:15
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.contour:30
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:18
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:22
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.glyph:38
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.glyph:54
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.reflect:11
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:14
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines:25
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines:35
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines:43
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_plane:11
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_plane:15
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_plane:19
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_sphere:12
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ribbon:27
msgid "python:tuple(python:float), optional"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:15
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:15
msgid ""
"The center ``(x,y,z)`` coordinate of the plane on which the clip occurs. The"
" default is the center of the dataset."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:19
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:19
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:19
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:19
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_scalar:13
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_surface:16
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold:32
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold_percent:25
msgid ""
"**invert** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:19
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:19
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:19
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:19
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_surface:16
msgid "Flag on whether to flip/invert the clip."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:23
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:23
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_scalar:16
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_surface:21
msgid "**value** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:22
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:22
msgid ""
"Set the clipping value along the normal direction. The default value is 0.0."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_normal:24
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_x:21
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_y:21
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_z:21
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_vector:26
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_x:23
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_y:23
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_z:23
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.scale:22
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.translate:20
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:26
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.triangulate:9
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:26
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_scalar:19
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_implicit_distance:17
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_largest:11
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.merge:26
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.reflect:15
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_plane:25
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_sphere:26
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.transform:35
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.triangulate:9
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_scalar:22
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_vector:20
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clean:31
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clip_closed_surface:36
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:62
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:62
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate_pro:58
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude:43
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_rotate:41
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_trim:39
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.fill_holes:22
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.geodesic:20
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.merge:28
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.project_points_to_plane:17
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.remove_points:22
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth:37
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth_taubin:54
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide:38
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide_adaptive:49
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.triangulate:9
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.tube:32
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.compute_connections:12
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.compute_connectivity:19
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.hide_cells:14
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.show_cells:11
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid.hide_cells:14
msgid ""
"**inplace** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_normal:24
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_x:21
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_y:21
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_z:21
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_vector:26
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_x:23
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_y:23
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_z:23
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.scale:22
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.translate:20
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:26
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.triangulate:9
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:26
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_largest:11
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.triangulate:9
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth:37
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth_taubin:54
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide_adaptive:49
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid.hide_cells:14
msgid "Updates mesh in-place."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:29
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:29
msgid ""
"**return_clipped** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:29
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:29
msgid "Return both unclipped and clipped parts of the dataset."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:38
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:36
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:38
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:36
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_surface:35
msgid ""
"**crinkle** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:35
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:33
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:35
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:33
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_surface:32
msgid ""
"Crinkle the clip by extracting the entire cells along the clip. This adds "
"the ``\"cell_ids\"`` array to the ``cell_data`` attribute that tracks the "
"original cell IDs of the original dataset."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:53
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:53
msgid ""
":obj:`pyvista.PolyData` or :class:`python:tuple`\\(:obj:`pyvista.PolyData`)"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:43
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip:43
msgid ""
"Clipped mesh when ``return_clipped=False``, otherwise a tuple containing the"
" unclipped and clipped datasets."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.CompositeFilters.rst:3
#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid ""
"Clip a cube along the +X direction.  ``triangulate`` is used as the cube is "
"initially composed of quadrilateral faces and subdivide only works on "
"triangles."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.CompositeFilters.rst:26
#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:26
msgid ""
"Clip a cube in the +Z direction.  This leaves half a cube below the XY "
"plane."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.CompositeFilters.rst:48
#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:25
#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:48
msgid ""
"See :ref:`clip_with_surface_example` for more examples using this filter."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:2
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:2
msgid "Clip a dataset by a bounding box defined by the bounds."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:4
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:4
msgid ""
"If no bounds are given, a corner of the dataset bounds will be removed."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:16
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:16
msgid ""
"**bounds** : :class:`python:tuple`\\(:class:`python:float`), :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:9
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:9
msgid ""
"Length 6 sequence of floats: (xmin, xmax, ymin, ymax, zmin, zmax). Length 3 "
"sequence of floats: distances from the min coordinate of of the input mesh. "
"Single float value: uniform distance from the min coordinate. Length 12 "
"sequence of length 3 sequence of floats: a plane collection (normal, center,"
" ...). :class:`pyvista.PolyData`: if a poly mesh is passed that represents a"
" box with 6 faces that all form a standard box, then planes will be "
"extracted from the box to define the clipping region."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.outline_corners:9
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:23
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:23
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.glyph:24
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.outline_corners:9
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_scalar:14
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_vector:17
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ribbon:25
msgid "**factor** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:22
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:22
msgid ""
"If bounds are not given this is the factor along each axis to extract the "
"default box."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.combine:8
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:30
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:30
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.merge:22
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.tessellate:20
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.merge:22
msgid ""
"**merge_points** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:29
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:29
msgid ""
"If ``True`` (default), coinciding points of independently defined mesh "
"elements will be merged."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cast_to_unstructured_grid:18
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.combine:26
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:50
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:50
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.delaunay_3d:42
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.explode:22
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_cells:25
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_points:35
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.integrate_data:28
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.merge:46
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.separate_cells:21
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold:77
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold_percent:53
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.unstructured_grid.UnstructuredGridFilters.subdivide_tetra:18
#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.filters.rectilinear_grid.RectilinearGridFilters.to_tetrahedra:42
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.UnstructuredGrid.linear_copy:33
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Empty:19
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.HexagonalPrism:19
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Hexahedron:19
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Line:19
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.PentagonalPrism:19
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.PolyLine:21
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.PolyVertex:21
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Polygon:19
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Pyramid:19
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Quadrilateral:19
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Tetrahedron:19
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Triangle:19
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.TriangleStrip:19
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Vertex:19
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Voxel:19
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Wedge:19
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_hexbeam:18
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_tetbeam:18
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Pyramid:26
msgid ":obj:`pyvista.UnstructuredGrid`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:41
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_box:41
msgid "Clipped dataset."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.CompositeFilters.rst:3
#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid ""
"Clip a corner of a cube.  The bounds of a cube are normally ``[-0.5, 0.5, "
"-0.5, 0.5, -0.5, 0.5]``, and this removes 1/8 of the cube's surface."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.CompositeFilters.rst:26
#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:26
msgid ""
"See :ref:`clip_with_plane_box_example` for more examples using this filter."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.combine:2
msgid "Combine all blocks into a single unstructured grid."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.combine:8
msgid "Merge coincidental points."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_cells_along_line:15
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.combine:12
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:20
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.glyph:45
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:46
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:52
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_line:41
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.probe:15
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample:15
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc:24
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc_normal:32
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_line:19
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_multiple_lines:12
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.select_enclosed_points:28
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:20
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_difference:33
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_intersection:38
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_union:39
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clean:16
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clip_closed_surface:33
msgid "**tolerance** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.combine:11
msgid ""
"The absolute tolerance to use to find coincident points when "
"``merge_points=True``. Note, this was added in VTK v9."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.combine:17
msgid "Combined blocks."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.CompositeFilters.rst:3
msgid "Combine blocks within a multiblock without merging points."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.CompositeFilters.rst:14
msgid "Combine blocks and merge points"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_sizes:2
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_sizes:2
msgid "Compute sizes for 1D (length), 2D (area) and 3D (volume) cells."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_sizes:8
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_sizes:8
msgid ""
"**length** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_sizes:8
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_sizes:8
msgid "Specify whether or not to compute the length of 1D cells."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_sizes:11
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_sizes:11
msgid "**area** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_sizes:11
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_sizes:11
msgid "Specify whether or not to compute the area of 2D cells."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:65
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:65
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_sizes:14
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_sizes:14
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:65
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:65
msgid ""
"**volume** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_sizes:14
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_sizes:14
msgid "Specify whether or not to compute the volume of 3D cells."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_sizes:22
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_sizes:22
msgid ""
"Dataset with `cell_data` containing the ``\"Length\"``, ``\"Area\"``, and "
"``\"Volume\"`` arrays if set in the parameters.  Return type matches input."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_sizes:35
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_sizes:35
msgid ""
"If cells do not have a dimension (for example, the length of hexahedral "
"cells), the corresponding array will be all zeros."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.CompositeFilters.rst:3
#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid "Compute the face area of the example airplane mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:2
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:2
msgid "Generate scalar values on a dataset."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:4
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:4
msgid ""
"The scalar values lie within a user specified range, and are generated by "
"computing a projection of each dataset point onto a line.  The line can be "
"oriented arbitrarily.  A typical example is to generate scalars based on "
"elevation or height above a plane."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:11
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:11
msgid ""
"This will create a scalars array named ``'Elevation'`` on the point data of "
"the input dataset and overwrite the array named ``'Elevation'`` if present."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:19
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:19
msgid ""
"**low_point** : :class:`python:tuple`\\(:class:`python:float`), "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:18
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:18
msgid ""
"The low point of the projection line in 3D space. Default is bottom center "
"of the dataset. Otherwise pass a length 3 ``tuple(float)``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:23
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:23
msgid ""
"**high_point** : :class:`python:tuple`\\(:class:`python:float`), "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:22
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:22
msgid ""
"The high point of the projection line in 3D space. Default is top center of "
"the dataset. Otherwise pass a length 3 ``tuple(float)``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:31
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:31
msgid ""
"**scalar_range** : :class:`python:str` or "
":class:`python:tuple`\\(:class:`python:float`), :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:30
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:30
msgid "python:str or python:tuple(python:float), optional"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:26
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:26
msgid ""
"The scalar range to project to the low and high points on the line that will"
" be mapped to the dataset. If None given, the values will be computed from "
"the elevation (Z component) range between the high and low points. Min and "
"max of a range can be given as a length 2 tuple(float). If ``str`` name of "
"scalara array present in the dataset given, the valid range of that array "
"will be used."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.set_active_scalars:16
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.get_array:13
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.get_array_association:13
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.get_data_range:14
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rename_array:27
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.set_active_scalars:16
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.set_active_tensors:28
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.set_active_vectors:28
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:36
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_derivative:43
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.contour:36
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:36
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold:42
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold_percent:36
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ribbon:37
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.tube:29
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_threshold:37
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.median_smooth:27
#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.get_data_range:14
msgid "**preference** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.append:21
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.insert:24
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.set_active_scalars:15
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:54
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:84
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.get_array:12
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.get_array_association:12
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.get_data_range:13
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rename_array:26
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.set_active_scalars:15
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.set_active_tensors:27
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.set_active_vectors:27
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:54
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:84
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:35
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_scalar:7
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_derivative:12
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_derivative:42
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.contour:35
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.contour:40
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:35
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.interpolate:33
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:25
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:28
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:31
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:48
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:31
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:34
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:37
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:54
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_line:21
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_line:24
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_line:27
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_line:43
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines:21
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:15
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:47
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:16
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:27
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:77
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_plane:28
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_sphere:29
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold:24
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold:41
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold_percent:17
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold_percent:35
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_scalar:9
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_vector:12
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.curvature:12
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_curvature:12
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.remove_points:14
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ribbon:16
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ribbon:36
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide:34
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.tube:13
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.tube:28
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.fft:23
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.gaussian_smooth:13
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.high_pass:37
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_dilate_erode:23
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_threshold:31
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_threshold:36
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.low_pass:37
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.median_smooth:21
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.median_smooth:26
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.rfft:23
#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.get_data_range:13
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.neighbors:18
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData:76
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:54
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:84
#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_datasets:30
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.plot_cell:10
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:19
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:32
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot:31
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis:7
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot:20
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot:33
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D:21
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.area:22
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.bar:23
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.bar:26
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.clear:21
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.line:23
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.line:26
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.plot:15
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.plots:12
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.scatter:23
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.scatter:26
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D:22
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D:35
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Pen:19
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D:22
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D:33
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:54
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:84
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:62
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:60
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_title:26
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:8
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:67
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_actor:14
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_actor:21
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:25
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:28
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:31
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes_at_origin:16
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes_at_origin:19
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes_at_origin:22
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_bounding_box:45
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:14
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:38
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:51
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:52
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:68
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:71
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:74
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:93
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:97
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:110
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:19
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:22
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:25
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:25
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:28
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:31
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read:35
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read:38
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.save_meshio:15
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.convert_array:10
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.BaseReader.show_progress:17
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:119
msgid "python:str, optional"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:34
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:34
msgid ""
"When an array name is specified for ``scalar_range``, this is the preferred "
"array type to search for in the dataset. Must be either ``'point'`` or "
"``'cell'``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:41
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:41
msgid ""
"**set_active** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:39
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:39
msgid ""
"A boolean flag on whether or not to set the new ``'Elevation'`` scalar as "
"the active scalars array on the output dataset."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:49
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.elevation:49
msgid ""
"Dataset containing elevation scalars in the ``\"Elevation\"`` array in "
"``point_data``."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.CompositeFilters.rst:3
#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid ""
"Generate the \"elevation\" scalars for a sphere mesh.  This is simply the "
"height in Z from the XY plane."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.CompositeFilters.rst:25
#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:25
msgid ""
"Access the first 4 elevation scalars.  This is a point-wise array containing"
" the \"elevation\" of each point."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.CompositeFilters.rst:31
#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:25
#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:31
#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:58
msgid "See :ref:`common_filter_example` for more examples using this filter."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_all_edges:2
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_all_edges:2
msgid "Extract all the internal/external edges of the dataset as PolyData."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_all_edges:4
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_all_edges:4
msgid "This produces a full wireframe representation of the input dataset."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_all_edges:17
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_all_edges:17
msgid ""
"**use_all_points** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:False`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_all_edges:16
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.connectivity:14
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_all_edges:16
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_cells:10
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.partition:27
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.partition:30
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_implicit:14
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_implicit:17
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:30
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:34
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:45
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:30
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:34
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:45
#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.filters.rectilinear_grid.RectilinearGridFilters.to_tetrahedra:24
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.UnstructuredGrid.linear_copy:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bird_bath:19
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_black_vase:19
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cad_model_case:16
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cubemap_space_16k:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_file:12
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_ivan_angel:19
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_owl:19
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_plastic_vase:19
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sea_vase:19
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_jupiter_surface:9
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_mars_surface:9
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_mercury_surface:9
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_milkyway_sky_background:9
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_moon_surface:9
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_neptune_surface:9
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_pluto_surface:9
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_saturn_rings:9
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_saturn_surface:9
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_stars_sky_background:9
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_sun_surface:9
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_uranus_surface:9
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_venus_surface:12
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:23
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.apply_cmap:26
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:28
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:41
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:51
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:85
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:97
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:45
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.get_default_cam_pos:8
#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:29
#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:48
#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:60
#: ../../pyvista/pyvista/utilities/errors.pydocstring of
#: pyvista.utilities.errors.Report:17
#: ../../pyvista/pyvista/utilities/errors.pydocstring of
#: pyvista.utilities.errors.VtkErrorCatcher:7
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read:41
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_legacy:14
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_texture:16
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArc:27
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Superquadric:33
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.axis_rotation:13
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.convert_array:13
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.fit_plane_to_points:11
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.get_array:18
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.lines_from_points:12
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.vtk_points:18
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.surface_from_para:20
msgid "bool, default: python:False"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_all_edges:9
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_all_edges:9
msgid ""
"Indicates whether all of the points of the input mesh should exist in the "
"output. When ``True`` enables point renumbering.  If set to ``True``, then a"
" threaded approach is used which avoids the use of a point locator and is "
"quicker."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_all_edges:14
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_all_edges:14
msgid ""
"By default this is set to ``False``, and unused points are omitted from the "
"output."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_all_edges:17
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_all_edges:17
msgid ""
"This parameter can only be set to ``True`` with ``vtk==9.1.0`` or newer."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_all_edges:25
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_all_edges:25
msgid "Edges extracted from the dataset."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.CompositeFilters.rst:3
#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid ""
"Extract the edges of a sample unstructured grid and plot the edges. Note how"
" it plots interior edges."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.extract_geometry:2
msgid "Extract the surface the geometry of all blocks."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.extract_geometry:4
msgid ""
"Place this filter at the end of a pipeline before a polydata consumer such "
"as a polydata mapper to extract geometry from all blocks and append them to "
"one polydata object."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.extract_geometry:12
msgid "Surface of the composite dataset."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.outline:2
msgid ""
"Produce an outline of the full extent for the all blocks in this composite "
"dataset."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.outline:8
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.outline:8
msgid ""
"**generate_faces** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.outline:8
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.outline:8
msgid "Generate solid faces for the box. This is disabled by default."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.outline:11
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.outline_corners:12
msgid ""
"**nested** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.outline:11
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.outline_corners:12
msgid ""
"If ``True``, these creates individual outlines for each nested dataset."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.outline:19
msgid "Mesh containing the outline."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.outline_corners:2
msgid ""
"Produce an outline of the corners for the all blocks in this composite "
"dataset."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.outline_corners:8
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.outline_corners:8
msgid ""
"Controls the relative size of the corners to the length of the corresponding"
" bounds."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.composite.CompositeFilters.outline_corners:20
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.outline_corners:17
msgid "Mesh containing outlined corners."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.point_data_to_cell_data:2
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.point_data_to_cell_data:2
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.ptc:2
msgid "Transform point data into cell data."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.point_data_to_cell_data:4
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.point_data_to_cell_data:4
msgid ""
"Point data are specified per node and cell data specified within cells. "
"Optionally, the input point data can be passed through to the output."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.point_data_to_cell_data:7
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.point_data_to_cell_data:7
msgid "See also: :func:`pyvista.DataSetFilters.cell_data_to_point_data`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.point_data_to_cell_data:12
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.interpolate:51
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.point_data_to_cell_data:12
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.probe:21
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.ptc:14
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample:21
msgid ""
"**pass_point_data** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.point_data_to_cell_data:12
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.point_data_to_cell_data:12
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.ptc:14
msgid "If enabled, pass the input point data through to the output."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.point_data_to_cell_data:18
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.point_data_to_cell_data:18
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.ptc:20
msgid "Depreciated keyword argument ``pass_point_arrays``."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.CompositeFilters.rst:3
#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid ""
"Color cells by their z coordinates.  First, create point scalars based on "
"z-coordinates of a sample sphere mesh.  Then convert this point data to cell"
" data.  Use a low resolution sphere for emphasis of cell valued data."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.CompositeFilters.rst:8
#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:8
msgid ""
"First, plot these values as point values to show the difference between "
"point and cell data."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.CompositeFilters.rst:30
#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:30
msgid "Now, convert these values to cell data and then plot it."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:2
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:2
msgid ""
"Slice a dataset by a plane at the specified origin and normal vector "
"orientation."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:4
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:4
msgid ""
"If no origin is specified, the center of the input dataset will be used."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:9
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:9
msgid ""
"Length 3 tuple for the normal vector direction. Can also be specified as a "
"string conventional direction such as ``'x'`` for ``(1, 0, 0)`` or ``'-x'`` "
"for ``(-1, 0, 0)``, etc."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:14
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:14
msgid ""
"The center ``(x, y, z)`` coordinate of the plane on which the slice occurs."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:20
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:25
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_line:14
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:20
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:20
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:25
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_line:14
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:20
msgid ""
"**generate_triangles** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:18
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:23
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_line:12
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:18
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:18
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:23
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_line:12
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:18
msgid ""
"If this is enabled (``False`` by default), the output will be triangles. "
"Otherwise the output will be the intersection polygons."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:23
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:28
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_line:17
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:23
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:23
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:28
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_line:17
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:23
msgid ""
"**contour** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:23
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:28
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_line:17
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:23
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:23
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:28
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_line:17
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_implicit:18
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:23
msgid "If ``True``, apply a ``contour`` filter after slicing."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:31
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:46
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_line:25
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:31
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice:31
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:46
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_line:25
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_implicit:26
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:31
msgid "Sliced dataset."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.CompositeFilters.rst:3
#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid "Slice the surface of a sphere."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.CompositeFilters.rst:24
#: ../../pyvista/doc/api/core/_autosummary/pyvista.CompositeFilters.rst:27
#: ../../pyvista/doc/api/core/_autosummary/pyvista.CompositeFilters.rst:38
#: ../../pyvista/doc/api/core/_autosummary/pyvista.CompositeFilters.rst:45
#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:24
#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:27
#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:38
#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:45
msgid "See :ref:`slice_example` for more examples using this filter."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:2
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:2
msgid "Create many slices of the input dataset along a specified axis."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_closest_point:16
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:8
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:8
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricPluckerConoid:12
msgid "**n** : :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_closest_point:15
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:7
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_surface:29
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.interpolate:44
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:21
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:15
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_line:17
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc:18
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc_normal:14
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_line:14
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:7
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines:32
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:37
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:65
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:53
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.tessellate:14
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.collision:27
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.collision:36
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_rotate:37
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_boundaries:10
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_normals:19
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.reconstruct_surface:25
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth:9
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth_taubin:19
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.strip:32
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide_adaptive:38
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide_adaptive:45
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.tube:20
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.high_pass:33
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.low_pass:33
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.reconstruct_surface:25
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData:39
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData:51
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData:65
#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.glyphs:7 ../../pyvista/pyvista/demos/demos.pydocstring
#: of pyvista.demos.demos.plot_glyphs:7
#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_wave:7
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_saturn_rings:14
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:33
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:43
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:10
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes_at_origin:25
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:17
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:20
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:28
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_depth_peeling:9
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.convert_array:16
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricPluckerConoid:11
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:14
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:32
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.Spline:12
msgid "python:int, optional"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:8
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:8
msgid "The number of slices to create."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:13
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:13
msgid "**axis** : :class:`python:str` or :class:`python:int`, default: 'x'"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:12
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:12
msgid "python:str or python:int, default: 'x'"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:11
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:11
msgid ""
"The axis to generate the slices along. Perpendicular to the slices. Can be "
"string name (``'x'``, ``'y'``, or ``'z'``) or axis index (``0``, ``1``, or "
"``2``)."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:16
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:16
msgid ""
"The tolerance to the edge of the dataset bounds to create the slices. The "
"``n`` slices are placed equidistantly with an absolute padding of "
"``tolerance`` inside each side of the ``bounds`` along the specified axis. "
"Defaults to 1% of the ``bounds`` along the specified axis."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:33
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:33
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cube:33
msgid "**bounds** : :term:`python:sequence`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:32
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:37
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_geometry:13
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:32
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:37
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_scalar:18
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData:34
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData:46
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData:60
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light:85
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:33
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_vector:23
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:47
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArcFromNormal:17
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArcFromNormal:21
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cube:32
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Pyramid:11
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Rectangle:7
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Triangle:8
msgid "python:sequence, optional"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:31
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:31
msgid ""
"A 6-length sequence overriding the bounds of the mesh. The bounds along the "
"specified axis define the extent where slices are taken."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:38
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:38
msgid "**center** : :term:`python:sequence`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:36
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_axis:36
msgid ""
"A 3-length sequence specifying the position of the line along which slices "
"are taken. Defaults to the center of the mesh."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.CompositeFilters.rst:3
#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid "Slice the random hills dataset in the X direction."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.CompositeFilters.rst:24
#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:24
msgid "Slice the random hills dataset in the Z direction."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_line:2
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_line:2
msgid "Slice a dataset using a polyline/spline as the path."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_line:4
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_line:4
msgid "This also works for lines generated with :func:`pyvista.Line`."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_line:9
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_line:9
msgid "**line** : :obj:`pyvista.PolyData`"
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyData.rst:2
#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_line:8
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_surface:12
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.select_enclosed_points:23
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_line:8
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines:57
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines:70
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_difference:28
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_intersection:33
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_union:34
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_trim:15
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.intersection:13
msgid "pyvista.PolyData"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_line:9
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_along_line:9
msgid "A PolyData object containing one single PolyLine cell."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.CompositeFilters.rst:3
#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid "Slice the random hills dataset along a circular arc."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.CompositeFilters.rst:15
#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:15
msgid "Plot the circular arc and the hills mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:2
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:2
msgid ""
"Create three orthogonal slices through the dataset on the three cartesian "
"planes."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:4
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:4
msgid "Yields a MutliBlock dataset of the three slices."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:9
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:9
msgid "**x** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:9
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:9
msgid "The X location of the YZ slice."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:12
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:12
msgid "**y** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:12
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:12
msgid "The Y location of the XZ slice."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:15
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:15
msgid "**z** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:15
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_orthogonal:15
msgid "The Z location of the XY slice."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.CompositeFilters.rst:3
#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid "Slice the random hills dataset with three orthogonal planes."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.triangulate:2
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.triangulate:2
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.triangulate:2
msgid "Return an all triangle mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.triangulate:4
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.triangulate:4
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.triangulate:4
msgid "More complex polygons will be broken down into triangles."
msgstr ""

#: ../../pyvista/pyvista/core/filters/composite.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.triangulate:17
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.triangulate:17
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.triangulate:17
msgid "Mesh containing only triangles."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.CompositeFilters.rst:3
#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:3
msgid "Generate a mesh with quadrilateral faces."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.CompositeFilters.rst:24
#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:24
#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:24
msgid "Convert it to an all triangle mesh."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataObject.rst:2
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.BlockAttributes:7
msgid "pyvista.DataObject"
msgstr ""

#: ../../pyvista/doc/api/core/objects.rst:15:<autosummary>:1
#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject:2
msgid "Methods common to all wrapped data objects."
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.DataObject.actual_memory_size:2
msgid "Return the actual size of the dataset object."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.get_index_by_name:22
#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.DataObject.actual_memory_size:19
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_n_points:22
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_type:22
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_closest_point:27
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.collision:66
#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color.convert_color_channel:29
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.CGNSReader.number_base_arrays:21
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.CGNSReader.number_family_arrays:21
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.EnSightReader.number_time_points:21
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.OpenFOAMReader.number_patch_arrays:18
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.OpenFOAMReader.number_time_points:21
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.PVDReader.number_time_points:21
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.PointCellDataSelection.number_cell_arrays:21
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.PointCellDataSelection.number_point_arrays:21
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.TimeReader.number_time_points:21
msgid ":class:`python:int`"
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.DataObject.actual_memory_size:9
msgid "The actual size of the dataset object in kibibytes (1024 bytes)."
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.add_field_array:2
#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.add_field_data:2
msgid "Add field data."
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.add_field_array:4
msgid "Use :func:`DataObject.add_field_data` instead."
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.DataObject.field_data:4
#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.add_field_data:4
msgid ""
"Use field data when size of the data you wish to associate with the dataset "
"does not match the number of points or cells of the dataset."
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.add_field_data:11
msgid "**array** : :term:`python:sequence`"
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.add_field_data:10
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_array:16
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_scalars:15
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_vectors:15
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_line:10
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_line:13
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_line:7
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_line:10
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.multi_ray_trace:17
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.multi_ray_trace:20
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid.hide_cells:10
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid.hide_points:10
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_focus:17
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_position:7
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_viewup:7
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_vector:7
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArcFromNormal:9
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.fit_plane_to_points:7
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.is_inside_bounds:8
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.is_inside_bounds:11
msgid "python:sequence"
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.add_field_data:11
msgid "Array of data to add to the dataset as a field array."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.get_data_range:8
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.get_index_by_name:8
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.set_block_name:21
#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.add_field_data:14
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.get_array:8
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.get_array_association:8
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.set_active_tensors:9
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.set_active_vectors:9
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_array:21
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_vectors:19
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.get_array:11
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.CGNSReader.base_array_status:8
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.CGNSReader.family_array_status:8
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OpenFOAMReader.disable_patch_array:18
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OpenFOAMReader.enable_patch_array:18
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OpenFOAMReader.patch_array_status:8
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PointCellDataSelection.cell_array_status:8
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PointCellDataSelection.disable_cell_array:21
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PointCellDataSelection.disable_point_array:21
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PointCellDataSelection.enable_cell_array:21
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PointCellDataSelection.enable_point_array:21
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PointCellDataSelection.point_array_status:8
msgid "**name** : :class:`python:str`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.get:9
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.get_data_range:7
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.get_index_by_name:7
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.set_block_name:20
#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.add_field_data:13
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.get_array:7
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.get_array_association:7
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rename_array:7
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rename_array:10
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.set_active_tensors:8
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.set_active_vectors:8
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.get:7
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.pop:7
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.remove:15
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_array:20
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_vectors:18
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.save:7
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData.save:13
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_file:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.file_from_files:9
#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color.strip_hex_prefix:7
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:8
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:15
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:12
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_title:9
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.save:18
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.set_plot_theme:18
#: ../../pyvista/pyvista/utilities/errors.pydocstring of
#: pyvista.utilities.errors.set_error_output_file:7
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read:23
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_exodus:7
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_legacy:11
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_texture:7
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.save_meshio:7
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Text3D:7
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.get_array:10
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.BaseReader:24
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.CGNSReader.base_array_status:7
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.CGNSReader.family_array_status:7
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.DICOMReader:20
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.GIFReader:17
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OpenFOAMReader.disable_patch_array:17
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OpenFOAMReader.enable_patch_array:17
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OpenFOAMReader.patch_array_status:7
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PointCellDataSelection.cell_array_status:7
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PointCellDataSelection.disable_cell_array:20
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PointCellDataSelection.disable_point_array:20
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PointCellDataSelection.enable_cell_array:20
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PointCellDataSelection.enable_point_array:20
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PointCellDataSelection.point_array_status:7
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:116
msgid "python:str"
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.add_field_data:14
msgid "Name to assign the field array."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.copy:8
#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.add_field_data:28
#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.copy:10
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cast_to_pointset:10
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.copy_meta_from:24
#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.RectilinearGrid:44
#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.UniformGrid:46
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PointSet:26
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PointSet.cast_to_polydata:11
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData:72
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.copy:13
msgid "**deep** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.add_field_data:17
msgid ""
"Perform a deep copy of the data when adding it to the dataset.  Default "
"``True``."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataObject.rst:3
msgid "Add field data to a PolyData dataset."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataObject.rst:12
msgid "Add field data to a UniformGrid dataset."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataObject.rst:20
msgid "Add field data to a MultiBlock dataset."
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.clear_field_arrays:2
#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.clear_field_data:2
msgid "Remove all field data."
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.clear_field_arrays:4
msgid "Use :func:`DataObject.clear_field_data` instead."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataObject.rst:3
msgid "Add field data to a PolyData dataset and then remove it."
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.copy:2
msgid "Return a copy of the object."
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.copy:8
msgid ""
"When ``True`` makes a full copy of the object.  When ``False``, performs a "
"shallow copy where the points, cell, and data arrays are references to the "
"original object."
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.copy:15
msgid "Deep or shallow copy of the input.  Type is identical to the input."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataObject.rst:3
msgid "Create and make a deep copy of a PolyData object."
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.copy_attributes:2
msgid "Copy the data attributes of the input dataset object."
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.copy_attributes:18
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.merge:19
msgid "**dataset** : :obj:`pyvista.DataSet`"
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:2
#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.copy_attributes:17
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.copy_meta_from:7
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_implicit_distance:10
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.interpolate:13
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.probe:9
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample:9
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:13
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.collision:18
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.merge:18
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.save_meshio:10
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.get_array:7
msgid "pyvista.DataSet"
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.copy_attributes:8
msgid "Dataset to copy the data attributes from."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.copy_meta_from:2
#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.copy_meta_from:2
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.copy_meta_from:2
msgid "Copy pyvista meta data onto this object from another object."
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.copy_structure:2
msgid ""
"Copy the structure (geometry and topology) of the input dataset object."
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.copy_structure:18
msgid "**dataset** : :obj:`vtk.vtkDataSet`"
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.copy_structure:17
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.copy_from:17
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.overwrite:22
msgid "vtk.vtkDataSet"
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.copy_structure:8
msgid "Dataset to copy the geometry and topology from."
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.deep_copy:2
msgid "Overwrite this data object with another data object as a deep copy."
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.deep_copy:21
#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.shallow_copy:21
msgid "**to_copy** : :obj:`pyvista.DataObject` or :obj:`vtk.vtkDataObject`"
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.deep_copy:20
#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.shallow_copy:20
msgid "pyvista.DataObject or vtk.vtkDataObject"
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.deep_copy:8
msgid "Data object to perform a deep copy from."
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.DataObject.field_arrays:2
msgid "Return vtkFieldData as DataSetAttributes."
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.DataObject.field_arrays:4
msgid "Use :attr:`DataObject.field_data` to return field data."
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.DataObject.field_data:2
msgid "Return FieldData as DataSetAttributes."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataObject.rst:3
msgid "Add field data to a PolyData dataset and then return it."
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.get_data_range:2
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.get_data_range:2
#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.get_data_range:2
msgid "Get the non-NaN min and max of a named array."
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.head:2
msgid "Return the header stats of this dataset."
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.head:4
msgid ""
"If in IPython, this will be formatted to HTML. Otherwise returns a console "
"friendly string."
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.head:10
msgid ""
"**display** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.head:10
msgid "Display this header in iPython."
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.head:13
msgid "**html** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.head:13
msgid "Generate the output as HTML."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.get_block_name:22
#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.DataObject.memory_address:18
#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.head:30
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.DataSetAttributes.active_normals_name:18
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_mars_jpg:21
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_stars_jpg:21
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.file_from_files:30
#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color.strip_hex_prefix:25
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.POpenFOAMReader.case_type:13
msgid ":class:`python:str`"
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.head:18
msgid "Header statistics."
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.DataObject.memory_address:2
msgid "Get address of the underlying VTK C++ object."
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.DataObject.memory_address:9
msgid "Memory address formatted as ``'Addr=%p'``."
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.save:2
msgid "Save this vtk object to file."
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.save:9
msgid "**filename** : :class:`python:str`, :obj:`pathlib.Path`"
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.save:8
msgid "python:str, pathlib.Path"
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.save:8
msgid ""
"Filename of output file. Writer type is inferred from the extension of the "
"filename."
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.save:12
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.save:19
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData.save:17
msgid ""
"**binary** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.save:12
msgid "If ``True``, write as binary.  Otherwise, write as ASCII."
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.save:34
msgid ""
"**texture** : :class:`python:str`, :obj:`np.ndarray <numpy.ndarray>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.save:33
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.get_data_range:8
msgid "python:str, np.ndarray, optional"
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.save:15
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData.save:20
msgid ""
"Write a single texture array to file when using a PLY file.  Texture array "
"must be a 3 or 4 component array with the datatype ``np.uint8``.  Array may "
"be a cell array or a point array, and may also be a string if the array "
"already exists in the PolyData."
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.save:21
msgid ""
"If a string is provided, the texture array will be saved to disk as that "
"name.  If an array is provided, the texture array will be saved as "
"``'RGBA'``"
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.save:26
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData.save:33
msgid "This feature is only available when saving PLY files."
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.save:38
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData.save:45
msgid ""
"Binary files write much faster than ASCII and have a smaller file size."
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.shallow_copy:2
msgid "Shallow copy the given mesh to this mesh."
msgstr ""

#: ../../pyvista/pyvista/core/dataobject.pydocstring of
#: pyvista.core.dataobject.DataObject.shallow_copy:8
msgid "Data object to perform a shallow copy from."
msgstr ""

#: ../../pyvista/doc/api/core/dataset.rst:40:<autosummary>:1
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet:2
msgid "Methods in common to spatially referenced objects."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.active_normals:2
msgid "Return the active normals as an array."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.active_normals:16
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.DataSetAttributes.active_normals:17
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.pop:26
msgid ":obj:`pyvista_ndarray`"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.active_normals:9
msgid "Active normals of this dataset."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.active_normals:20
msgid ""
"If both point and cell normals exist, this returns point normals by default."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:3
msgid ""
"Compute normals on an example sphere mesh and return the active normals for "
"the dataset.  Show that this is the same size as the number of points."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.active_scalars:2
msgid "Return the active scalars as an array."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.active_scalars_info:2
msgid "Return the active scalar's association and name."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.active_scalars_info:4
msgid ""
"Association refers to the data association (e.g. point, cell, or field) of "
"the active scalars."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.active_scalars_info:19
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.active_vectors_info:19
msgid ":obj:`ActiveArrayInfo`"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.active_scalars_info:11
msgid ""
"The scalars info in an object with namedtuple semantics, with attributes "
"``association`` and ``name``."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.active_scalars_info:23
msgid ""
"If both cell and point scalars are present and neither have been set active "
"within at the dataset level, point scalars will be made active."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:3
msgid ""
"Create a mesh, add scalars to the mesh, and return the active scalars info."
"  Note how when the scalars are added, they automatically become the active "
"scalars."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.active_scalars_name:2
msgid "Return the name of the active scalars."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:3
msgid ""
"Create a mesh, add scalars to the mesh, and return the name of the active "
"scalars."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.active_t_coords:2
msgid "Return or set the active texture coordinates on the points."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:3
msgid "Return the active texture coordinates from the globe example."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.active_tensors:2
msgid "Return the active tensors array."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.active_tensors_info:2
msgid "Return the active tensor's field and name: [field, name]."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.active_tensors_name:2
msgid "Return the name of the active tensor array."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.active_vectors:2
msgid "Return the active vectors array."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:3
msgid ""
"Create a mesh, compute the normals inplace, and return the normals vector "
"array."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.active_vectors_info:2
msgid "Return the active vector's association and name."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.active_vectors_info:4
msgid ""
"Association refers to the data association (e.g. point, cell, or field) of "
"the active vectors."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.active_vectors_info:11
msgid ""
"The vectors info in an object with namedtuple semantics, with attributes "
"``association`` and ``name``."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.active_vectors_info:23
msgid ""
"If both cell and point vectors are present and neither have been set active "
"within at the dataset level, point vectors will be made active."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:3
msgid ""
"Create a mesh, compute the normals inplace, set the active vectors to the "
"normals, and show that the active vectors are the ``'Normals'`` array "
"associated with points."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.active_vectors_name:2
msgid "Return the name of the active vectors array."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:3
msgid ""
"Create a mesh, compute the normals, set them as active, and return the name "
"of the active vectors."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of pyvista.DataSet.area:2
msgid "Return the mesh area if 2D."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of pyvista.DataSet.area:4
msgid "This will return 0 for meshes with 3D cells."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.volume:18 ../../pyvista/pyvista/core/dataset.pydocstring
#: of pyvista.DataSet.area:19 ../../pyvista/pyvista/core/dataset.pydocstring
#: of pyvista.DataSet.volume:19
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_arc_length:26
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.geodesic_distance:28
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.volume:19
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.Renderer.length:21
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.EnSightReader.active_time_value:21
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.OpenFOAMReader.active_time_value:21
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.PVDReader.active_time_value:21
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.TimeReader.active_time_value:21
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.EnSightReader.time_point_value:25
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OpenFOAMReader.time_point_value:25
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PVDReader.time_point_value:25
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.TimeReader.time_point_value:25
#: ../../pyvista/pyvista/utilities/regression.pydocstring of
#: pyvista.utilities.regression.compare_images:40
msgid ":class:`python:float`"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of pyvista.DataSet.area:10
msgid "Total area of the mesh."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:3
msgid "Get the area of a square of size 2x2. Note 5 points in each direction."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:11
msgid ""
"A mesh with 3D cells does not have an area.  To get the outer surface area, "
"first extract the surface using "
":func:`pyvista.DataSetFilters.extract_surface`."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:19
msgid "Get the area of a sphere."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.array_names:2
msgid "Return a list of array names for the dataset."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.array_names:4
msgid "This makes sure to put the active scalars' name first in the list."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:3
msgid "Return the array names for a mesh."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of pyvista.DataSet.arrows:2
msgid "Return a glyph representation of the active vector data as arrows."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of pyvista.DataSet.arrows:4
msgid ""
"Arrows will be located at the points of the mesh and their size will be "
"dependent on the norm of the vector. Their direction will be the "
"\"direction\" of the vector"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of pyvista.DataSet.arrows:12
msgid "Active vectors represented as arrows."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:3
msgid ""
"Create a mesh, compute the normals and set them active, and plot the active "
"vectors."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of pyvista.DataSet.bounds:2
msgid "Return the bounding box of this dataset."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of pyvista.DataSet.bounds:4
msgid "The form is: ``(xmin, xmax, ymin, ymax, zmin, zmax)``."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:3
msgid "Create a cube and return the bounds of the mesh."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cast_to_pointset:2
msgid ""
"Get a new representation of this object as a :class:`pyvista.PointSet`."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cast_to_pointset:8
msgid ""
"When ``True`` makes a full copy of the object.  When ``False``, performs a "
"shallow copy where the points and data arrays are references to the original"
" object."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cast_to_pointset:24
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid.hide_points:25
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cloud_dark_matter:24
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cloud_dark_matter_dense:24
msgid ":obj:`pyvista.PointSet`"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cast_to_pointset:15
msgid "Dataset cast into a :class:`pyvista.PointSet`."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cast_to_unstructured_grid:2
msgid ""
"Get a new representation of this object as a "
":class:`pyvista.UnstructuredGrid`."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cast_to_unstructured_grid:9
msgid "Dataset cast into a :class:`pyvista.UnstructuredGrid`."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:3
msgid ""
"Cast a :class:`pyvista.PolyData` to a :class:`pyvista.UnstructuredGrid`."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.cell_arrays:2
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.cell_data:2
msgid "Return vtkCellData as DataSetAttributes."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.cell_arrays:4
msgid "Use :attr:`DataSet.cell_data` to return cell data."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_bounds:2
msgid "Return the bounding box of a cell."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_bounds:8
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_n_points:8
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_point_ids:8
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_points:8
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_type:8
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.point_is_inside_cell:9
msgid "**ind** : :class:`python:int`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.get_block_name:7
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.insert:7
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.replace:7
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.set_block_name:7
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_bounds:7
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_n_points:7
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_point_ids:7
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_points:7
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_type:7
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.point_is_inside_cell:8
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.partition:19
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.geodesic:12
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.geodesic:15
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.geodesic_distance:7
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.geodesic_distance:10
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide:27
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositeAttributes.get_block:7
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:20
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:37
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_custom_opacity:14
msgid "python:int"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_bounds:8
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_n_points:8
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_point_ids:8
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_points:8
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.point_is_inside_cell:9
msgid "Cell ID."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.bounds:18 ../../pyvista/pyvista/core/dataset.pydocstring
#: of pyvista.core.dataset.DataSet.cell_bounds:22
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.ExplicitStructuredGrid.visible_bounds:23
msgid ":class:`python:tuple`\\(:class:`python:float`)"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_bounds:13
msgid "The limits of the cell in the X, Y and Z directions respectively."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:3
msgid "Add cell arrays to a mesh and list the available ``cell_data``."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:22
msgid "Access an array from ``cell_data``."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:27
msgid "Or access it directly from the mesh."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_n_points:2
msgid "Return the number of points in a cell."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_n_points:13
msgid "Number of points in the cell."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_point_ids:2
msgid "Return the point ids in a cell."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_point_ids:22
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.CGNSReader.base_array_names:21
msgid ":class:`python:list`\\[:class:`python:int`]"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_point_ids:13
msgid "Point Ids that are associated with the cell."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:8
msgid "Cell type 5 is a triangular cell with three points."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_points:2
msgid "Return the points in a cell."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.set_active_scalars:35
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_points:23
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_cells_along_line:27
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_cells_within_bounds:20
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_closest_cell:38
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.set_active_scalars:36
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.surface_indices:22
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.curvature:31
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.edge_mask:25
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.remove_points:39
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.faces:18 ../../pyvista/pyvista/core/pointset.pydocstring
#: of pyvista.PolyData.strips:18
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.verts:18 ../../pyvista/pyvista/core/pointset.pydocstring
#: of pyvista.StructuredGrid.x:18
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.cell_connectivity:23
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.celltypes:9
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.offset:21
#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_wave:36
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.array_from_vtkmatrix:26
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.axis_rotation:36
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.fit_plane_to_points:20
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.fit_plane_to_points:32
msgid ":obj:`numpy.ndarray`"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_points:13
msgid ""
"An array of floats with shape (number of points, 3) containing the "
"coordinates of the cell corners."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_type:2
msgid "Return the type of a cell."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_type:8
msgid "Cell type ID."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.cell_type:13
msgid ""
"VTK cell type. See `vtkCellType.h "
"<https://vtk.org/doc/nightly/html/vtkCellType_8h_source.html>`_ ."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.center:2 ../../pyvista/pyvista/core/dataset.pydocstring
#: of pyvista.DataSet.center:2
msgid "Return the center of the bounding box."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:3
msgid "Get the center of a mesh."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.clear_arrays:2
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.clear_data:2
msgid "Remove all arrays from point/cell/field data."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.clear_arrays:4
msgid "Use :func:`DataSet.clear_data` instead."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.clear_cell_arrays:2
msgid "Remove all cell data."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.clear_cell_arrays:4
msgid "Use :func:`DataSet.clear_cell_data` instead."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.clear_cell_data:2
msgid "Remove all cell arrays."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:3
msgid "Clear all arrays from a mesh."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.clear_point_arrays:2
msgid "Remove all point data."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.clear_point_arrays:4
msgid "Use :func:`DataSet.clear_point_data` instead."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.clear_point_data:2
msgid "Remove all point arrays."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:3
msgid "Clear all point arrays from a mesh."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.clear_textures:2
msgid "Clear the textures from this mesh."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:3
msgid "Clear the texture from the globe example."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.copy_from:2
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.overwrite:2
msgid ""
"Overwrite this dataset inplace with the new dataset's geometries and data."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.copy_from:18
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.overwrite:23
msgid "**mesh** : :obj:`vtk.vtkDataSet`"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.copy_from:8
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.overwrite:10
msgid "The overwriting mesh."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:3
msgid ""
"Create two meshes and overwrite ``mesh_a`` with ``mesh_b``. Show that "
"``mesh_a`` is equal to ``mesh_b``."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.copy_meta_from:8
msgid "**ido** : :obj:`pyvista.DataSet`"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.copy_meta_from:8
msgid "Dataset to copy the metadata from."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.copy_meta_from:11
msgid "Deep or shallow copy."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_cells_along_line:2
msgid "Find the index of cells in this mesh along a line."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_cells_along_line:4
msgid "Line is defined from ``pointa`` to ``pointb``."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_cells_along_line:9
msgid "**pointa** : :term:`python:iterable`\\(:class:`python:float`)"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_cells_along_line:8
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_cells_along_line:11
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_cells_within_bounds:7
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_closest_point:11
msgid "python:iterable(python:float)"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_cells_along_line:9
msgid "Length 3 coordinate of the start of the line."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_cells_along_line:12
msgid "**pointb** : :term:`python:iterable`\\(:class:`python:float`)"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_cells_along_line:12
msgid "Length 3 coordinate of the end of the line."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_cells_along_line:15
msgid "The absolute tolerance to use to find cells along line."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_cells_along_line:20
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_cells_within_bounds:13
msgid ""
"Index or indices of the cell in this mesh that are closest to the given "
"point."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_cells_along_line:32
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_cells_within_bounds:25
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_closest_cell:48
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_containing_cell:30
msgid ":obj:`DataSet.find_closest_point`"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_cells_along_line:34
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_cells_within_bounds:27
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_closest_point:32
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_containing_cell:32
msgid ":obj:`DataSet.find_closest_cell`"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_cells_along_line:36
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_cells_within_bounds:29
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_closest_cell:50
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_closest_point:34
msgid ":obj:`DataSet.find_containing_cell`"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_cells_along_line:38
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_closest_cell:54
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_closest_point:38
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_containing_cell:36
msgid ":obj:`DataSet.find_cells_within_bounds`"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_cells_within_bounds:2
msgid "Find the index of cells in this mesh within bounds."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_cells_within_bounds:8
msgid "**bounds** : :term:`python:iterable`\\(:class:`python:float`)"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_cells_within_bounds:8
msgid "Bounding box. The form is: ``[xmin, xmax, ymin, ymax, zmin, zmax]``."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_cells_within_bounds:31
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_closest_cell:52
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_closest_point:36
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_containing_cell:34
msgid ":obj:`DataSet.find_cells_along_line`"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_closest_cell:2
msgid "Find index of closest cell in this mesh to the given point."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_closest_cell:9
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_containing_cell:9
msgid ""
"**point** : :obj:`Sequence`\\(:class:`python:float`) :obj:`or` "
":obj:`np.ndarray <numpy.ndarray>`"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_closest_cell:8
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_containing_cell:8
msgid "Sequence(python:float) or np.ndarray"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_closest_cell:8
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_containing_cell:8
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.point_is_inside_cell:12
msgid ""
"Coordinates of point to query (length 3) or a ``numpy`` array of ``n`` "
"points with shape ``(n, 3)``."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_closest_cell:14
msgid ""
"**return_closest_point** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_closest_cell:12
msgid ""
"If ``True``, the closest point within a mesh cell to that point is returned."
"  This is not necessarily the closest nodal point on the mesh.  Default is "
"``False``."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_closest_cell:24
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_containing_cell:25
msgid ":class:`python:int` or :obj:`numpy.ndarray`"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_closest_cell:19
msgid ""
"Index or indices of the cell in this mesh that is/are closest to the given "
"point(s)."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_closest_cell:22
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_containing_cell:17
msgid ""
"Inputs of shape ``(1, 3)`` now return a :class:`numpy.ndarray` of shape "
"``(1,)``."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_closest_cell:27
msgid ""
"Point or points inside a cell of the mesh that is/are closest to the given "
"point(s).  Only returned if ``return_closest_point=True``."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_closest_cell:31
msgid ""
"Inputs of shape ``(1, 3)`` now return a :class:`numpy.ndarray` of the same "
"shape."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_closest_cell:42
msgid ""
"This method may still return a valid cell index even if the point contains a"
" value like ``numpy.inf`` or ``numpy.nan``."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:3
msgid ""
"Find nearest cell on a sphere centered on the origin to the point ``[0.1, "
"0.2, 0.3]``."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:13
msgid "Make sure that this cell indeed is the closest to ``[0.1, 0.2, 0.3]``."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:23
msgid ""
"Find the nearest cells to several random points that are centered on the "
"origin."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:31
msgid ""
"For the closest cell, find the point inside the cell that is closest to the "
"supplied point.  The rectangle is a unit square with 1 cell and 4 nodal "
"points at the corners in the plane with ``z`` normal and ``z=0``.  The "
"closest point inside the cell is not usually at a nodal point."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:45
msgid ""
"But, the closest point can be a nodal point, although the index of that "
"point is not returned.  If the closest nodal point by index is desired, see "
":func:`DataSet.find_closest_point`."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_closest_point:2
msgid "Find index of closest point in this mesh to the given point."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_closest_point:4
msgid ""
"If wanting to query many points, use a KDTree with scipy or another library "
"as those implementations will be easier to work with."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_closest_point:7
msgid "See: https://github.com/pyvista/pyvista-support/issues/107"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_closest_point:12
msgid "**point** : :term:`python:iterable`\\(:class:`python:float`)"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_closest_point:12
msgid "Length 3 coordinate of the point to query."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_closest_point:15
msgid ""
"If greater than ``1``, returns the indices of the ``n`` closest points."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_closest_point:21
msgid ""
"The index of the point in this mesh that is closest to the given point."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:3
msgid "Find the index of the closest point to ``(0, 1, 0)``."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:11
msgid "Get the coordinate of that point."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_containing_cell:2
msgid "Find index of a cell that contains the given point."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.find_containing_cell:14
msgid ""
"Index or indices of the cell in this mesh that contains the given point."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:3
msgid ""
"A unit square with 16 equal sized cells is created and a cell containing the"
" point ``[0.3, 0.3, 0.0]`` is found."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:13
msgid "A point outside the mesh domain will return ``-1``."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:18
msgid "Find the cells that contain 1000 random points inside the mesh."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_normal:2
msgid "Flip mesh about the normal."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_normal:5
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_x:5
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_y:5
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_z:5
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_vector:5
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_x:5
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_y:5
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_z:5
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.scale:5
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.translate:5
msgid ""
"See also the notes at :func:`transform() <DataSetFilters.transform>` which "
"is used by this filter under the hood."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_normal:12
msgid "**normal** : :class:`python:tuple`"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_normal:11
msgid "python:tuple"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_normal:12
msgid "Normal vector to flip about."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_normal:16
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_x:13
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_y:13
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_z:13
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_vector:18
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_x:15
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_z:15
msgid "**point** : :class:`python:list`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:33
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:37
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_normal:15
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_x:12
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_y:12
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_z:12
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_vector:17
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_x:14
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_z:14
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:33
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:37
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clip_closed_surface:27
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:33
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:37
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts._Chart.show:29
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:33
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:37
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:38
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:12
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:18
#: ../../pyvista/pyvista/utilities/xvfb.pydocstring of
#: pyvista.utilities.xvfb.start_xvfb:21
msgid "python:list, optional"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_normal:15
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_x:12
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_y:12
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_z:12
msgid ""
"Point to rotate about.  Defaults to center of mesh at :attr:`center "
"<pyvista.DataSet.center>`."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_normal:21
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_x:18
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_y:18
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_z:18
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_vector:23
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_x:20
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_y:20
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_z:20
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.scale:19
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.translate:17
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.reflect:19
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.transform:32
msgid ""
"**transform_all_input_vectors** : :ref:`bool <python:bltin-boolean-values>`,"
" :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_normal:19
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_x:16
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_y:16
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_z:16
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_vector:21
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_x:18
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_y:18
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_z:18
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.scale:17
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.translate:15
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.reflect:18
msgid ""
"When ``True``, all input vectors are transformed. Otherwise, only the "
"points, normals and active vectors are transformed."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_normal:29
msgid "Dataset flipped about its normal."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_x:2
msgid "Flip mesh about the x-axis."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_x:26
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_y:26
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_z:26
msgid "Flipped dataset."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_y:2
msgid "Flip mesh about the y-axis."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.flip_z:2
msgid "Flip mesh about the z-axis."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.get_array:2
msgid "Search both point, cell and field data for an array."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.get_data_range:8
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.get_array:8
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.get_array_association:8
msgid "Name of the array."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.get_array:11
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.get_data_range:12
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.get_array:14
msgid ""
"When scalars is specified, this is the preferred array type to search for in"
" the dataset.  Must be either ``'point'``, ``'cell'``, or ``'field'``."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.get_array:27
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.DataSetAttributes.active_t_coords:18
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.get_array:18
#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.get:25
#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.pop:25
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.cell_normals:20
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.face_normals:19
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.point_normals:20
msgid ":obj:`pyvista.pyvista_ndarray`"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.get_array:18
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.pop:17
msgid "Requested array."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:3
msgid "Create a DataSet with a variety of arrays."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:14
msgid "Get the point data array."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:19
msgid "Get the cell data array."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:24
msgid "Get the field data array."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.get_array_association:2
msgid "Get the association of an array."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.get_array_association:11
msgid ""
"When ``name`` is specified, this is the preferred array association to "
"search for in the dataset.  Must be either ``'point'``, ``'cell'``, or "
"``'field'``."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.set_active_scalars:25
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.get_array_association:27
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.set_active_scalars:21
msgid ":obj:`pyvista.FieldAssociation`"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.get_array_association:18
msgid "Field association of the array."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:14
msgid "Get the point data array association."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:19
msgid "Get the cell data array association."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:24
msgid "Get the field data array association."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.get_data_range:9
msgid ""
"**arr_var** : :class:`python:str`, :obj:`np.ndarray <numpy.ndarray>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.get_data_range:8
msgid ""
"The name of the array to get the range. If ``None``, the active scalars is "
"used."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.get_data_range:28
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.get_data_range:31
#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.get_data_range:31
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.StructuredGrid.dimensions:18
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot_arrows:26
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.map_value:25
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.Renderer.viewport:25
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.get_pick_position:21
msgid ":class:`python:tuple`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.get_data_range:16
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.get_data_range:19
msgid "``(min, max)`` of the named array."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.length:2 ../../pyvista/pyvista/core/dataset.pydocstring
#: of pyvista.DataSet.length:2
msgid "Return the length of the diagonal of the bounding box."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:3
msgid ""
"Get the length of the bounding box of a cube.  This should match "
"``3**(1/2)`` since it is the diagonal of a cube that is ``1 x 1 x 1``."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.n_arrays:2
msgid "Return the number of arrays present in the dataset."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of pyvista.DataSet.n_cells:2
msgid "Return the number of cells in the entire dataset."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.n_cells:16
msgid ""
"This is identical to :attr:`n_faces <pyvista.PolyData.n_faces>` in "
":class:`pyvista.PolyData`."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:3
msgid "Create a mesh and return the number of cells in the mesh."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.n_points:2
msgid "Return the number of points in the entire dataset."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:3
msgid "Create a mesh and return the number of points in the mesh."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.number_of_cells:2
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.n_faces:2 ../../pyvista/pyvista/core/pointset.pydocstring
#: of pyvista.PolyData.number_of_faces:2
msgid "Return the number of cells."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.number_of_points:2
msgid "Return the number of points."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.overwrite:4
msgid "Use :func:`DataSet.copy_from` instead."
msgstr ""

#: ../../pyvista/doc/api/plotting/conv_func.rst:15:<autosummary>:1
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:2
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:2
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:2
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:2
msgid "Plot a PyVista, numpy, or vtk object."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:8
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:8
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:8
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:8
msgid ""
"**var_item** : :obj:`pyvista.DataSet`, :obj:`vtk`, :obj:`or` :mod:`numpy` "
":obj:`object`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:7
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:7
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:7
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:7
msgid "pyvista.DataSet, vtk, or numpy object"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:8
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:8
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:8
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:8
msgid "PyVista, VTK, or ``numpy`` object to be plotted."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:13
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:13
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ray_trace:22
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:13
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts._Chart.show:11
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:13
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:9
msgid ""
"**off_screen** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:11
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:11
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:11
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:11
msgid ""
"Plots off screen when ``True``.  Helpful for saving screenshots without a "
"window popping up.  Defaults to the global setting ``pyvista.OFF_SCREEN``."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:19
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:19
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:19
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts._Chart.show:17
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:19
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:32
msgid ""
"**full_screen** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:16
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:16
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:16
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts._Chart.show:14
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:16
msgid ""
"Opens window in full screen.  When enabled, ignores ``window_size``.  "
"Defaults to active theme setting in :attr:`pyvista.global_theme.full_screen "
"<pyvista.themes.DefaultTheme.full_screen>`."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:27
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:27
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:27
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts._Chart.show:25
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:27
msgid ""
"**screenshot** : :class:`python:str` or :ref:`bool <python:bltin-boolean-"
"values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:26
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:26
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:26
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts._Chart.show:24
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:26
msgid "python:str or bool, optional"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:22
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:22
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:22
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts._Chart.show:20
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:22
msgid ""
"Saves screenshot to file when enabled.  See: :func:`Plotter.screenshot() "
"<pyvista.Plotter.screenshot>`. Default ``False``."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:26
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:26
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:26
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts._Chart.show:24
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:26
msgid "When ``True``, takes screenshot and returns ``numpy`` array of image."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:31
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:31
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:31
#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_wave:18
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:31
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:18
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:8
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_orientation_widget:15
msgid ""
"**interactive** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:30
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:30
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:30
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:30
msgid ""
"Allows user to pan and move figure.  Defaults to "
":attr:`pyvista.global_theme.interactive "
"<pyvista.themes.DefaultTheme.interactive>`."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:34
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:34
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:34
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:34
msgid "**cpos** : :class:`python:list`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:34
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:34
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:34
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:34
msgid "List of camera position, focal point, and view up."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:38
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:38
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:38
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts._Chart.show:30
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:38
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:39
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:13
#: ../../pyvista/pyvista/utilities/xvfb.pydocstring of
#: pyvista.utilities.xvfb.start_xvfb:22
msgid "**window_size** : :class:`python:list`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:37
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:37
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:37
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts._Chart.show:28
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:37
msgid ""
"Window size in pixels.  Defaults to global theme "
":attr:`pyvista.global_theme.window_size "
"<pyvista.themes.DefaultTheme.window_size>`."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:41
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:41
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:41
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:41
msgid ""
"**show_bounds** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:41
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:41
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:41
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:41
msgid "Shows mesh bounds when ``True``.  Default ``False``."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:45
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:45
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:45
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:45
msgid ""
"**show_axes** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:44
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:44
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:44
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:44
msgid ""
"Shows a vtk axes widget.  If ``None``, enabled according to "
":attr:`pyvista.global_theme.axes.show <pyvista.themes._AxesConfig.show>`."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:49
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:49
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:49
#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_ants_plane:57
#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_beam:19
#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_wave:22
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts._Chart.show:34
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:49
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:14
msgid ""
"**notebook** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:48
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:48
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:48
#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_ants_plane:46
#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_beam:8
#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_wave:21
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts._Chart.show:33
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:48
msgid ""
"When ``True``, the resulting plot is placed inline a jupyter notebook.  "
"Assumes a jupyter console is active."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:52
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:52
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:52
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts._Chart.show:40
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:52
msgid "**background** : :obj:`color_like`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:51
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:126
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:51
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:126
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_boundaries:7
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_normals:26
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:51
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:126
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:26
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:74
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot:16
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Brush:9
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.area:19
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.bar:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.line:15
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.scatter:15
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D:15
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Pen:8
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D:15
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts._Chart.show:39
#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color:26
#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color:42
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:51
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:126
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light:20
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:52
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:55
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:58
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:55
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:60
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:65
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:33
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_cursor:25
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:13
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:16
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:19
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:22
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes_at_origin:7
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes_at_origin:10
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes_at_origin:13
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_border:7
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_bounding_box:16
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:24
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:45
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:24
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_orientation_widget:18
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_background:13
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_background:28
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:65
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:7
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:10
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:13
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:16
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:13
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:16
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:19
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:22
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:35
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:39
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:43
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:49
msgid "color_like, optional"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:52
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:52
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:52
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:52
msgid "Color of the background."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:55
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:55
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:55
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:55
msgid "**text** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:55
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:55
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:55
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:55
msgid "Adds text at the bottom of the plot."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:58
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:58
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:58
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:58
msgid ""
"**return_img** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:58
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:58
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:58
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:58
msgid "Returns numpy array of the last image rendered."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:61
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:61
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:61
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:61
msgid ""
"**eye_dome_lighting** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:61
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:61
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:61
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:61
msgid "Enables eye dome lighting."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:64
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:64
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:64
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:64
msgid ""
"Use the :func:`Plotter.add_volume() <pyvista.Plotter.add_volume>` method for"
" volume rendering."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:68
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:68
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:68
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:68
msgid ""
"**parallel_projection** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:73
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:73
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:73
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:73
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:55
msgid ""
"**use_ipyvtk** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:71
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:71
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:71
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:71
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:53
msgid ""
"Deprecated.  Instead, set the backend either globally with "
"``pyvista.set_jupyter_backend('ipyvtklink')`` or with "
"``backend='ipyvtklink'``."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:85
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:85
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:85
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:85
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:68
msgid "**jupyter_backend** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:76
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:76
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:76
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:76
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:58
msgid "Jupyter notebook plotting backend to use.  One of the following:"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:79
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:79
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:79
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:79
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:61
msgid "``'none'`` : Do not display in the notebook."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:80
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:80
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:80
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:80
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:63
msgid "``'static'`` : Display a static figure."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:81
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:81
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:81
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:81
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:64
msgid "``'ipygany'`` : Show a ``ipygany`` widget"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:82
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:82
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:82
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:82
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:65
msgid "``'panel'`` : Show a ``panel`` widget."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:84
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:84
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:84
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:84
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:67
msgid ""
"This can also be set globally with :func:`pyvista.set_jupyter_backend`."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:89
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:89
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:89
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:89
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:72
msgid ""
"**return_viewer** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:88
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:88
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:88
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:88
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:71
msgid ""
"Return the jupyterlab viewer, scene, or display object when plotting with "
"jupyter notebook."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:93
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:93
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:93
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:93
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:77
msgid ""
"**return_cpos** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:92
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:92
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:92
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:92
msgid ""
"Return the last camera position from the render window when enabled.  "
"Defaults to value in theme settings."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:96
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:96
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:96
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:96
msgid "**jupyter_kwargs** : :class:`python:dict`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:96
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:96
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:96
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:96
msgid "Keyword arguments for the Jupyter notebook plotting backend."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:99
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:99
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:99
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:9
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper:11
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:99
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper:21
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:74
msgid "**theme** : :obj:`pyvista.themes.DefaultTheme`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:98
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:98
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:98
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:8
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper:10
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:98
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper:20
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:73
msgid "pyvista.themes.DefaultTheme, optional"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:99
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:99
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:99
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:9
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper:11
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:99
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper:11
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:64
msgid "Plot-specific theme."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:107
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:107
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:107
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:107
msgid ""
"**hidden_line_removal** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:102
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:102
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:102
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:102
msgid ""
"Wireframe geometry will be drawn using hidden line removal if the rendering "
"engine supports it.  See :func:`Plotter.enable_hidden_line_removal "
"<Plotter.enable_hidden_line_removal>`.  Defaults to the theme setting "
":attr:`pyvista.global_theme.hidden_line_removal "
"<pyvista.themes.DefaultTheme.hidden_line_removal>`."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:112
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:112
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:112
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:112
msgid ""
"**anti_aliasing** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:110
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:110
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:110
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:110
msgid ""
"Enable or disable anti-aliasing.  Defaults to the theme setting "
":attr:`pyvista.global_theme.anti_aliasing "
"<pyvista.themes.DefaultTheme.anti_aliasing>`."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:116
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:116
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:116
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:116
msgid "**zoom** : :class:`python:float`, :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:115
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:115
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:115
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:115
msgid "python:float, python:str, optional"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:115
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:115
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:115
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:115
msgid ""
"Camera zoom.  Either ``'tight'`` or a float. A value greater than 1 is a "
"zoom-in, a value less than 1 is a zoom-out.  Must be greater than 0."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:119
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:119
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:119
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:119
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:26
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:29
msgid ""
"**border** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:119
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:119
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:119
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:119
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:26
msgid "Draw a border around each render window.  Default ``False``."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:127
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:127
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:127
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:127
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:34
msgid "**border_color** : :obj:`color_like`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:122
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:122
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:122
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:122
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:29
msgid "Either a string, rgb list, or hex color string.  For example:"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:124
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:124
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:124
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:124
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.ambient_color:7
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.diffuse_color:7
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.specular_color:7
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:31
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_cursor:23
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_title:21
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_bounding_box:14
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_background:11
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:63
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.color:9
msgid "``color='white'``"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:125
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:125
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:125
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:125
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.ambient_color:8
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.diffuse_color:8
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.specular_color:8
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:32
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_cursor:24
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_title:22
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_bounding_box:15
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_background:12
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:64
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.color:10
msgid "``color='w'``"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:126
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:126
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:126
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:126
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.ambient_color:9
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.diffuse_color:9
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.specular_color:9
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:33
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_cursor:25
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_title:23
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_bounding_box:16
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_background:13
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:65
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.color:11
msgid "``color=[1.0, 1.0, 1.0]``"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:127
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:127
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:127
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:127
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.ambient_color:10
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.diffuse_color:10
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.specular_color:10
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:34
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_cursor:26
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_title:24
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_bounding_box:17
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_background:14
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:66
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.color:12
msgid "``color='#FFFFFF'``"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:130
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:130
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:130
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:130
msgid "**border_width** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:130
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:130
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:130
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:130
msgid "Width of the border in pixels when enabled."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:134
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:134
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:134
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:134
msgid "**ssao** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:133
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:133
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:133
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:133
msgid ""
"Enable surface space ambient occlusion (SSAO). See "
":func:`Plotter.enable_ssao` for more details."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:137
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:137
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:137
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:137
msgid "**\\*\\*kwargs** : :obj:`optional` :obj:`keyword` :obj:`arguments`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:136
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:136
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:136
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:136
msgid "optional keyword arguments"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:137
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:137
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:137
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:137
msgid "See :func:`pyvista.Plotter.add_mesh` for additional options."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:145
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:145
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:145
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:145
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:97
msgid "**cpos** : :class:`python:list`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:144
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:144
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:144
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.file_from_files:12
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:144
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:96
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap_from_filenames:15
msgid "python:list"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:142
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:142
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:142
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:142
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:94
msgid ""
"List of camera position, focal point, and view up. Returned only when "
"``return_cpos=True`` or set in the default global or plot theme.  Not "
"returned when in a jupyter notebook and ``return_viewer=True``."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:156
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:156
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:156
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:156
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:108
msgid "**image** : :obj:`np.ndarray <numpy.ndarray>`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:155
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:155
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.remove_points:10
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:155
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:155
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:107
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.lines_from_points:9
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.make_tri_mesh:12
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.make_tri_mesh:16
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.Spline:8
msgid "np.ndarray"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:148
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:148
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:148
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:148
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:100
msgid ""
"Numpy array of the last image when either ``return_img=True`` or "
"``screenshot=True`` is set. Not returned when in a jupyter notebook with "
"``return_viewer=True``. Optionally contains alpha values. Sized:"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:153
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:153
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:153
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts._Chart.show:51
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:153
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:105
msgid ""
"[Window height x Window width x 3] if the theme sets "
"``transparent_background=False``."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:155
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:155
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:155
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts._Chart.show:53
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:155
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:107
msgid ""
"[Window height x Window width x 4] if the theme sets "
"``transparent_background=True``."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:168
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:168
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:168
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:168
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:118
msgid ":obj:`widget`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.plotting.helpers.plot:159
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.plotting.helpers.plot:159
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.plotting.helpers.plot:159
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot:159
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:111
msgid "IPython widget when ``return_viewer=True``."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:3
#: ../../pyvista/doc/api/core/_autosummary/pyvista.MultiBlock.rst:3
#: ../../pyvista/doc/api/core/_autosummary/pyvista.PointSet.rst:3
#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.plot.rst:3
msgid "Plot a simple sphere while showing its edges."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:23
#: ../../pyvista/doc/api/core/_autosummary/pyvista.MultiBlock.rst:23
#: ../../pyvista/doc/api/core/_autosummary/pyvista.PointSet.rst:23
#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.plot.rst:23
msgid ""
"Plot a volume mesh. Color by distance from the center of the UniformGrid. "
"Note ``volume=True`` is passed."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.point_arrays:2
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.point_data:2
msgid "Return vtkPointData as DataSetAttributes."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.point_arrays:4
msgid "Use :attr:`DataSet.point_data` to return point data."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:3
msgid "Add point arrays to a mesh and list the available ``point_data``."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:22
msgid "Access an array from ``point_data``."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.point_is_inside_cell:2
msgid "Return whether one or more points are inside a cell."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.point_is_inside_cell:13
msgid ""
"**point** : :obj:`Sequence`\\[:class:`python:float`] :obj:`or` "
":obj:`np.ndarray <numpy.ndarray>`"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.point_is_inside_cell:12
msgid "Sequence[python:float] or np.ndarray"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.point_is_inside_cell:28
msgid ":ref:`bool <python:bltin-boolean-values>` or :obj:`numpy.ndarray`"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.point_is_inside_cell:18
msgid ""
"Whether point(s) is/are inside cell. A scalar bool is only returned if the "
"input point has shape ``(3,)``."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of pyvista.DataSet.points:2
msgid "Return a reference to the points as a numpy object."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:3
msgid "Create a mesh and return the points of the mesh as a numpy array."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:19
msgid ""
"Shift these points in the z direction and show that their position is "
"reflected in the mesh points."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:33
msgid "You can also update the points in-place:"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rename_array:2
msgid "Change array name by searching for the array then renaming it."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rename_array:8
msgid "**old_name** : :class:`python:str`"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rename_array:8
msgid "Name of the array to rename."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rename_array:11
msgid "**new_name** : :class:`python:str`"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rename_array:11
msgid "Name to rename the array to."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rename_array:14
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.set_active_tensors:12
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.set_active_vectors:12
msgid ""
"If there are two arrays of the same name associated with points, cells, or "
"field data, it will prioritize an array matching this type.  Can be either "
"``'cell'``, ``'field'``, or ``'point'``."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:3
msgid ""
"Create a cube, assign a point array to the mesh named ``'my_array'``, and "
"rename it to ``'my_renamed_array'``."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_vector:2
msgid "Rotate mesh about a vector."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_vector:12
msgid "**vector** : :obj:`Iterable`"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_vector:11
msgid "Iterable"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_vector:12
msgid "Axes to rotate about."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_vector:15
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_x:12
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_y:12
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_z:12
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.edge_mask:8
#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor.rotate_x:18
#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor.rotate_y:18
#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor.rotate_z:18
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.axis_rotation:11
msgid "**angle** : :class:`python:float`"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_vector:14
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_x:11
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_y:11
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_z:11
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:10
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate_pro:12
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.edge_mask:7
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.fill_holes:18
#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor.rotate_x:17
#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor.rotate_y:17
#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor.rotate_z:17
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.set_direction_angle:21
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.set_direction_angle:34
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.map_value:7
#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.perlin_noise:21
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.axis_rotation:10
msgid "python:float"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_vector:15
msgid "Angle in degrees to rotate about the vector."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_vector:18
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_x:15
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_z:15
msgid "Point to rotate about.  Defaults to origin ``(0.0, 0.0, 0.0)``."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_vector:31
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_x:28
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_y:28
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_z:28
msgid "Rotated dataset."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:3
msgid "Rotate a mesh 30 degrees about the ``(1, 1, 1)`` axis."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:9
msgid "Plot the rotated mesh."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_x:2
msgid "Rotate mesh about the x-axis."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_x:12
msgid "Angle in degrees to rotate about the x-axis."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:3
msgid "Rotate a mesh 30 degrees about the x-axis."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_y:2
msgid "Rotate mesh about the y-axis."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_y:12
msgid "Angle in degrees to rotate about the y-axis."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_y:15
msgid "**point** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_y:15
msgid "Point to rotate about."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:3
msgid "Rotate a cube 30 degrees about the y-axis."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_z:2
msgid "Rotate mesh about the z-axis."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.rotate_z:12
msgid "Angle in degrees to rotate about the z-axis."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:3
msgid "Rotate a mesh 30 degrees about the z-axis."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.scale:2
msgid "Scale the mesh."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.scale:14
msgid ""
"**xyz** : :class:`python:float` or :class:`python:list` or "
":class:`python:tuple` or :obj:`np.ndarray <numpy.ndarray>`"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.scale:13
msgid "python:float or python:list or python:tuple or np.ndarray"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.scale:12
msgid ""
"A scalar or length 3 list, tuple or array defining the scale factors along "
"x, y, and z. If a scalar, the same uniform scale is used along all three "
"axes."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.scale:27
msgid "Scaled dataset."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.set_active_scalars:2
msgid "Find the scalars by name and appropriately sets it as active."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.set_active_scalars:4
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.set_active_scalars:4
msgid "To deactivate any active scalars, pass ``None`` as the ``name``."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.set_active_scalars:11
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.set_active_scalars:11
msgid "**name** : :class:`python:str` or :data:`python:None`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.set_active_scalars:10
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.set_active_scalars:10
msgid "python:str or python:None"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.set_active_scalars:9
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.set_active_scalars:9
msgid ""
"Name of the scalars array to assign as active.  If ``None``, deactivates "
"active scalars for both point and cell data."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.set_active_scalars:14
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.set_active_scalars:14
msgid ""
"If there are two arrays of the same name associated with points or cells, it"
" will prioritize an array matching this type.  Can be either ``'cell'`` or "
"``'point'``."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.set_active_scalars:21
msgid "Association of the scalars matching ``name``."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.set_active_scalars:28
#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.set_active_scalars:24
msgid "An array from the dataset matching ``name``."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.set_active_tensors:2
msgid "Find the tensors by name and appropriately sets it as active."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.set_active_tensors:4
msgid "To deactivate any active tensors, pass ``None`` as the ``name``."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.set_active_tensors:9
msgid "Name of the tensors array to assign as active."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.set_active_vectors:2
msgid "Find the vectors by name and appropriately sets it as active."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.set_active_vectors:4
msgid "To deactivate any active vectors, pass ``None`` as the ``name``."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.set_active_vectors:9
msgid "Name of the vectors array to assign as active."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.t_coords:2
msgid "Return the active texture coordinates on the points."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.t_coords:4
msgid ""
"Use :attr:`DataSet.active_t_coords` to return the active texture "
"coordinates."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.textures:2
msgid "Return a dictionary to hold compatible ``vtk.vtkTexture`` objects."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.DataSet.textures:4
msgid ""
"When casting back to a VTK dataset or filtering this dataset, these textures"
" will not be passed."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:3
msgid "Return the active texture datasets from the globe example."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.translate:2
msgid "Translate the mesh."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.translate:12
msgid ""
"**xyz** : :class:`python:list` or :class:`python:tuple` or :obj:`np.ndarray "
"<numpy.ndarray>`"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.translate:11
msgid "python:list or python:tuple or np.ndarray"
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.translate:12
msgid "Length 3 list, tuple or array."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of
#: pyvista.core.dataset.DataSet.translate:25
msgid "Translated dataset."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:3
msgid "Create a sphere and translate it by ``(2, 1, 2)``."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of pyvista.DataSet.vectors:2
msgid "Return active vectors."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of pyvista.DataSet.vectors:4
msgid "Use of `DataSet.vectors` to return vector data is deprecated."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of pyvista.DataSet.volume:2
msgid "Return the mesh volume."
msgstr ""

#: ../../pyvista/pyvista/core/dataset.pydocstring of pyvista.DataSet.volume:4
msgid "This will return 0 for meshes with 2D cells."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.volume:9 ../../pyvista/pyvista/core/dataset.pydocstring
#: of pyvista.DataSet.volume:10
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.volume:10
msgid "Total volume of the mesh."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:3
msgid ""
"Get the volume of a cube of size 4x4x4. Note that there are 5 points in each"
" direction."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:11
msgid "A mesh with 2D cells has no volume."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSet.rst:17
msgid ""
":class:`pyvista.PolyData` is special as a 2D surface can enclose a 3D "
"volume."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetAttributes.rst:2
msgid "pyvista.DataSetAttributes"
msgstr ""

#: ../../pyvista/doc/api/core/dataset.rst:40:<autosummary>:1
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes:2
msgid "Python friendly wrapper of ``vtk.DataSetAttributes``."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes:4
msgid ""
"This class provides the ability to pick one of the present arrays as the "
"currently active array for each attribute type by implementing a ``dict`` "
"like interface."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes:8
msgid ""
"When adding data arrays but not desiring to set them as active scalars or "
"vectors, use :func:`DataSetAttributes.set_array`."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes:11
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_scalars:34
msgid ""
"When adding directional data (such as velocity vectors), use "
":func:`DataSetAttributes.set_vectors`."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes:14
msgid ""
"When adding non-directional data (such as temperature values or multi-"
"component scalars like RGBA values), use "
":func:`DataSetAttributes.set_scalars`."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes:18
msgid ""
"The ``[]`` operator no longer allows integers.  Use "
":func:`DataSetAttributes.get_array` to retrieve an array using an index."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes:28
msgid "**vtkobject** : :obj:`vtkFieldData`"
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes:27
msgid "vtkFieldData"
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes:26
msgid ""
"The vtk object to wrap as a DataSetAttribute, usually an instance of "
"``vtk.vtkCellData``, ``vtk.vtkPointData``, or ``vtk.vtkFieldData``."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes:31
msgid "**dataset** : :obj:`vtkDataSet`"
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes:30
msgid "vtkDataSet"
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes:31
msgid "The vtkDataSet containing the vtkobject."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes:42
msgid "**association** : :obj:`FieldAssociation`"
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes:41
msgid "FieldAssociation"
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes:34
msgid "The array association type of the vtkobject."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes:46
msgid ""
"When printing out the point arrays, you can see which arrays are the active "
"scalars, vectors, normals, and texture coordinates. In the arrays list, "
"``SCALARS`` denotes that these are the active scalars, ``VECTORS`` denotes "
"that these arrays are tagged as the active vectors data (i.e. data with "
"magnitude and direction) and so on."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetAttributes.rst:3
msgid "Store data with point association in a DataSet."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetAttributes.rst:12
msgid "Change the data array and show that this is reflected in the DataSet."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetAttributes.rst:18
msgid "Remove the array."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetAttributes.rst:24
msgid "Print the available arrays from dataset attributes."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.DataSetAttributes.active_normals:2
msgid "Return or set the normals."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.DataSetAttributes.active_normals:9
msgid ""
"Normals of this dataset attribute.  ``None`` if no normals have been set."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.DataSetAttributes.active_normals:21
msgid "Field data will have no normals."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetAttributes.rst:3
msgid "First, compute cell normals."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetAttributes.rst:25
msgid ""
"Assign normals to the cell arrays.  An array will be added named "
"``\"Normals\"``."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.DataSetAttributes.active_normals_name:2
msgid "Return or set the name of the normals array."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.DataSetAttributes.active_normals_name:9
msgid "Name of the active normals array."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.DataSetAttributes.active_scalars:2
msgid "Return the active scalars."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.DataSetAttributes.active_scalars:4
msgid ""
"Can no longer be used to set the active scalars.  Either use "
":func:`DataSetAttributes.set_scalars` or if the array already exists, assign"
" to :attr:`DataSetAttribute.active_scalars_name`."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetAttributes.rst:3
msgid ""
"Associate point data to a simple cube mesh and show that the active scalars "
"in the point array are the most recently added array."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.DataSetAttributes.active_scalars_name:2
msgid "Name of the active scalars."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetAttributes.rst:3
msgid "Add two arrays to the mesh point data."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetAttributes.rst:12
msgid "Set the name of the active scalars."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.DataSetAttributes.active_t_coords:2
msgid "Return or set the active texture coordinates array."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.DataSetAttributes.active_t_coords:9
msgid "Array of the active texture coordinates."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.DataSetAttributes.active_t_coords_name:2
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.DataSetAttributes.active_texture_name:2
msgid "Name of the active texture coordinates array."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.DataSetAttributes.active_texture_name:4
msgid ""
"Use :attr:`DataSetAttributes.active_t_coords_name` to return the name of the"
" active texture coordinates array."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.DataSetAttributes.active_vectors:2
msgid "Return the active vectors as a pyvista_ndarray."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.DataSetAttributes.active_vectors:4
msgid ""
"Can no longer be used to set the active vectors.  Either use "
":func:`DataSetAttributes.set_vectors` or if the array already exists, assign"
" to :attr:`DataSetAttribute.active_vectors_name`."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetAttributes.rst:3
msgid ""
"Associate point data to a simple cube mesh and show that the active vectors "
"in the point array are the most recently added array."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.DataSetAttributes.active_vectors_name:2
msgid "Name of the active vectors."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.append:2
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_array:2
msgid "Add an array to this object."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.append:4
msgid "Use one of the following instead:"
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.append:7
msgid ":func:`DataSetAttributes.set_array`"
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.append:8
msgid ":func:`DataSetAttributes.set_scalars`"
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.append:9
msgid ":func:`DataSetAttributes.set_vectors`"
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.append:10
msgid "The ``[]`` operator"
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.clear:2
msgid "Remove all arrays in this object."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetAttributes.rst:3
msgid ""
"Add an array to ``point_data`` to a DataSet and then clear the point_data."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.get:2
msgid "Return the value of the item with the specified key."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.get:8
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.pop:8
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.remove:16
msgid "**key** : :class:`python:str`"
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.get:8
msgid "Name of the array item you want to return the value from."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.get:12
msgid "**value** : :obj:`anything`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.get:11
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.pop:11
msgid "anything, optional"
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.get:11
msgid "A value to return if the key does not exist.  Default is ``None``."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.get:27
msgid ":obj:`Any`"
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.get:17
msgid "Array if the ``key`` exists in the dataset, otherwise ``value``."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetAttributes.rst:3
msgid "Show that the default return value for a non-existent key is ``None``."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.get_array:2
msgid "Get an array in this object."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.get_array:10
msgid "**key** : :class:`python:str`, :class:`python:int`"
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.get_array:9
msgid "python:str, python:int"
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.get_array:8
msgid ""
"The name or index of the array to return.  Arrays are ordered within VTK "
"DataSetAttributes, and this feature is mirrored here."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.get_array:15
msgid "Returns a :class:`pyvista.pyvista_ndarray`."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.get_array:0
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.UnstructuredGrid.cast_to_explicit_structured_grid:0
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.POpenFOAMReader.case_type:0
msgid "Raises"
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.get_array:26
msgid ":obj:`KeyError`"
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.get_array:23
msgid "If the key does not exist."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.get_array:30
msgid ""
"This is provided since arrays are ordered within VTK and can be indexed via "
"an int.  When getting an array, you can just use the key of the array with "
"the ``[]`` operator with the name of the array."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetAttributes.rst:10
msgid "Access using an index."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetAttributes.rst:15
msgid "Access using a key."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.items:2
msgid "Return a list of (array name, array value) tuples."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.keys:18
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.items:18
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.keys:18
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.values:18
#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.items:21
#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.keys:21
#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.values:21
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.Renderer.center:21
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.Renderer.lights:18
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.get_default_cam_pos:30
msgid ":class:`python:list`"
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.items:9
msgid "List of keys and values."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.keys:2
msgid "Return the names of the arrays as a list."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.keys:9
msgid "List of keys."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.pop:2
msgid "Remove an array and return it."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.pop:8
msgid "The name of the array to remove and return."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.pop:12
msgid "**default** : :obj:`anything`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.pop:11
msgid ""
"If default is not given and key is not in the dictionary, a KeyError is "
"raised."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetAttributes.rst:3
msgid "Add a point data array to a DataSet and then remove it."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetAttributes.rst:10
#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetAttributes.rst:11
msgid "Show that the array no longer exists in ``point_data``."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.remove:2
msgid "Remove an array."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.remove:8
msgid "The name of the array to remove."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.remove:20
msgid "You can also use the ``del`` statement."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_array:4
msgid ""
"Use this method when adding arrays to the DataSet.  If needed, these arrays "
"can later be assigned to become the active scalars, vectors, normals, or "
"texture coordinates with:"
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_array:8
msgid ":attr:`active_scalars_name <DataSetAttributes.active_scalars_name>`"
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_array:9
msgid ":attr:`active_vectors_name <DataSetAttributes.active_vectors_name>`"
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_array:10
msgid ":attr:`active_normals_name <DataSetAttributes.active_normals_name>`"
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_array:11
msgid ":attr:`active_t_coords_name <DataSetAttributes.active_t_coords_name>`"
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_array:17
msgid "**data** : :term:`python:sequence`"
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_array:16
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_scalars:15
msgid ""
"A ``pyvista_ndarray``, ``numpy.ndarray``, ``list``, ``tuple`` or scalar "
"value."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_array:20
msgid ""
"Name to assign to the data.  If this name already exists, it will be "
"overwritten."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_array:32
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_scalars:30
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_vectors:32
msgid ""
"**deep_copy** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_array:24
#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_scalars:22
msgid "When ``True`` makes a full copy of the array."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_array:36
msgid ""
"You can simply use the ``[]`` operator to add an array to the dataset.  Note"
" that this will automatically become the active scalars."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetAttributes.rst:3
msgid "Add a point array to a mesh."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetAttributes.rst:12
msgid "Add a cell array to a mesh."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetAttributes.rst:19
msgid "Add field data to a mesh."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_scalars:2
msgid "Set the active scalars of the dataset with an array."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_scalars:4
msgid ""
"In VTK and PyVista, scalars are a quantity that has no direction.  This can "
"include data with multiple components (such as RGBA values) or just one "
"component (such as temperature data)."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_scalars:9
msgid ""
"See :func:`DataSetAttributes.set_vectors` when adding arrays that contain "
"magnitude and direction."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_scalars:16
msgid "**scalars** : :term:`python:sequence`"
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_scalars:19
msgid "**name** : :class:`python:str`, default: 'scalars'"
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_scalars:18
msgid "python:str, default: 'scalars'"
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_scalars:19
msgid "Name to assign the scalars."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_scalars:37
msgid ""
"Complex arrays will be represented internally as a 2 component float64 "
"array. This is due to limitations of VTK's native datatypes."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_vectors:2
msgid "Set the active vectors of this data attribute."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_vectors:4
msgid ""
"Vectors are a quantity that has magnitude and direction, such as normal "
"vectors or a velocity field."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_vectors:7
msgid ""
"The vectors data must contain three components per cell or point.  Use "
":func:`DataSetAttributes.set_scalars` when adding non-directional data."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_vectors:16
msgid "**vectors** : :term:`python:sequence`"
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_vectors:14
msgid ""
"A ``pyvista_ndarray``, ``numpy.ndarray``, ``list``, or ``tuple``.  Must "
"match the number of cells or points of the dataset."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_vectors:19
msgid "Name of the vectors."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_vectors:22
msgid ""
"When ``True`` makes a full copy of the array.  When ``False``, the data "
"references the original array without copying it."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_vectors:36
msgid ""
"PyVista and VTK treats vectors and scalars differently when performing "
"operations. Vector data, unlike scalar data, is rotated along with the "
"geometry when the DataSet is passed through a transformation filter."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.set_vectors:41
msgid ""
"When adding non-directional data (such temperature values or multi-component"
" scalars like RGBA values), you can also use "
":func:`DataSetAttributes.set_scalars`."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetAttributes.rst:3
msgid "Add random vectors to a mesh as point data."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.DataSetAttributes.t_coords:2
msgid "Return the active texture coordinates."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.DataSetAttributes.t_coords:4
msgid ""
"Use :attr:`DataSetAttributes.active_t_coords` to return the active texture "
"coordinates."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.update:2
msgid ""
"Update arrays in this object from another dictionary or dataset attributes."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.update:4
msgid ""
"For each key, value given, add the pair. If it already exists, replace it "
"with the new array. These arrays will be copied."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.update:21
msgid "**array_dict** : :class:`python:dict`, :obj:`DataSetAttributes`"
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.update:20
msgid "python:dict, DataSetAttributes"
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.update:10
msgid ""
"A dictionary of ``(array name, :class:`numpy.ndarray`)`` or a "
":class:`pyvista.DataSetAttributes`."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetAttributes.rst:3
msgid "Add two arrays to ``point_data`` using ``update``."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.DataSetAttributes.valid_array_len:2
msgid "Return the length data should be when added to the dataset."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.DataSetAttributes.valid_array_len:4
msgid "If there are no restrictions, returns ``None``."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetAttributes.rst:3
msgid ""
"Show that valid array lengths match the number of points and cells for point"
" and cell arrays, and there is no length limit for field data."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.values:2
msgid "Return the arrays as a list."
msgstr ""

#: ../../pyvista/pyvista/core/datasetattributes.pydocstring of
#: pyvista.core.datasetattributes.DataSetAttributes.values:9
msgid "List of arrays."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:2
msgid "pyvista.DataSetFilters"
msgstr ""

#: ../../pyvista/doc/api/core/filters.rst:19:<autosummary>:1
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters:2
msgid "A set of common filters that can be applied to any vtkDataSet."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_scalar:2
msgid "Clip a dataset by a scalar."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_scalar:8
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_derivative:13
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:26
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:32
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_line:22
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold:25
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold_percent:18
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_scalar:10
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ribbon:17
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.tube:14
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.gaussian_smooth:14
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_dilate_erode:24
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_threshold:32
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.median_smooth:22
msgid "**scalars** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_scalar:8
msgid "Name of scalars to clip on.  Defaults to currently active scalars."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_scalar:11
msgid ""
"Flag on whether to flip/invert the clip.  When ``True``, only the mesh below"
" ``value`` will be kept.  When ``False``, only values above ``value`` will "
"be kept."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_scalar:16
msgid "Set the clipping value.  The default value is 0.0."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_scalar:19
msgid "Update mesh in-place."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_scalar:25
msgid "**both** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_scalar:25
msgid "If ``True``, also returns the complementary clipped mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_scalar:40
msgid ":obj:`pyvista.PolyData` or :class:`python:tuple`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_scalar:30
msgid ""
"Clipped dataset if ``both=False``.  If ``both=True`` then returns a tuple of"
" both clipped datasets."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid "Remove the part of the mesh with \"sample_point_scalars\" above 100."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:25
msgid ""
"Get clipped meshes corresponding to the portions of the mesh above and below"
" 100."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:32
msgid "Remove the part of the mesh with \"sample_point_scalars\" below 100."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_surface:2
msgid "Clip any mesh type using a :class:`pyvista.PolyData` surface mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_surface:4
msgid ""
"This will return a :class:`pyvista.UnstructuredGrid` of the clipped mesh. "
"Geometry of the input dataset will be preserved where possible. Geometries "
"near the clip intersection will be triangulated/tessellated."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_surface:13
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.select_enclosed_points:24
msgid "**surface** : :obj:`pyvista.PolyData`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_surface:11
msgid ""
"The ``PolyData`` surface mesh to use as a clipping function.  If this input "
"mesh is not a :class`pyvista.PolyData`, the external surface will be "
"extracted."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_surface:19
msgid ""
"Set the clipping value of the implicit function (if clipping with implicit "
"function) or scalar value (if clipping with scalars).  The default value is "
"0.0."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_surface:26
msgid ""
"**compute_distance** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_surface:24
msgid ""
"Compute the implicit distance from the mesh onto the input dataset.  A new "
"array called ``'implicit_distance'`` will be added to the output clipped "
"mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.clip_surface:40
msgid "Clipped surface."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid "Clip a cube with a sphere."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:2
msgid "Compute a function of (geometric) quality for each cell of a mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:4
msgid ""
"The per-cell quality is added to the mesh's cell data, in an array named "
"``\"CellQuality\"``. Cell types not supported by this filter or undefined "
"quality of supported cell types will have an entry of -1."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:9
msgid "Defaults to computing the scaled Jacobian."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:11
msgid "Options for cell quality measure:"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:13
msgid "``'area'``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:14
msgid "``'aspect_beta'``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:15
msgid "``'aspect_frobenius'``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:16
msgid "``'aspect_gamma'``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:17
msgid "``'aspect_ratio'``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:18
msgid "``'collapse_ratio'``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:19
msgid "``'condition'``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:20
msgid "``'diagonal'``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:21
msgid "``'dimension'``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:22
msgid "``'distortion'``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:23
msgid "``'jacobian'``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:24
msgid "``'max_angle'``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:25
msgid "``'max_aspect_frobenius'``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:26
msgid "``'max_edge_ratio'``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:27
msgid "``'med_aspect_frobenius'``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:28
msgid "``'min_angle'``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:29
msgid "``'oddy'``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:30
msgid "``'radius_ratio'``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:31
msgid "``'relative_size_squared'``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:32
msgid "``'scaled_jacobian'``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:33
msgid "``'shape'``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:34
msgid "``'shape_and_size'``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:35
msgid "``'shear'``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:36
msgid "``'shear_and_size'``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:37
msgid "``'skew'``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:38
msgid "``'stretch'``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:39
msgid "``'taper'``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:40
msgid "``'volume'``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:41
msgid "``'warpage'``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:46
msgid "**quality_measure** : :class:`python:str`, default: 'scaled_jacobian'"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:45
msgid "python:str, default: 'scaled_jacobian'"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:46
msgid "The cell quality measure to use."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:53
msgid "**null_value** : :class:`python:float`, default: -1.0"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:52
msgid "python:float, default: -1.0"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:49
msgid ""
"Float value for undefined quality. Undefined quality are qualities that "
"could be addressed by this filter but is not well defined for the particular"
" geometry of cell in question, e.g. a volume query for a triangle. Undefined"
" quality will always be undefined. The default value is -1."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_cell_quality:61
msgid ""
"Dataset with the computed mesh quality in the ``cell_data`` as the "
"``\"CellQuality\"`` array."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid "Compute and plot the minimum angle of a sample sphere mesh."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:24
msgid ""
"See the :ref:`mesh_quality_example` for more examples using this filter."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_derivative:2
msgid "Compute derivative-based quantities of point/cell scalar field."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_derivative:4
msgid ""
"Utilize ``vtkGradientFilter`` to compute derivative-based quantities, such "
"as gradient, divergence, vorticity, and Q-criterion, of the selected point "
"or cell scalar field."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_derivative:11
msgid ""
"String name of the scalars array to use when computing the derivative "
"quantities.  Defaults to the active scalars in the dataset."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_derivative:18
msgid ""
"**gradient** : :ref:`bool <python:bltin-boolean-values>`, "
":class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_derivative:17
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_derivative:22
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_derivative:27
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_derivative:32
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ribbon:32
msgid "bool, python:str, optional"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_derivative:16
msgid ""
"Calculate gradient. If a string is passed, the string will be used for the "
"resulting array name. Otherwise, array name will be ``'gradient'``. Default "
"``True``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_derivative:23
msgid ""
"**divergence** : :ref:`bool <python:bltin-boolean-values>`, "
":class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_derivative:21
msgid ""
"Calculate divergence. If a string is passed, the string will be used for the"
" resulting array name. Otherwise, array name will be ``'divergence'``. "
"Default ``None``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_derivative:28
msgid ""
"**vorticity** : :ref:`bool <python:bltin-boolean-values>`, "
":class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_derivative:26
msgid ""
"Calculate vorticity. If a string is passed, the string will be used for the "
"resulting array name. Otherwise, array name will be ``'vorticity'``. Default"
" ``None``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_derivative:33
msgid ""
"**qcriterion** : :ref:`bool <python:bltin-boolean-values>`, "
":class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_derivative:31
msgid ""
"Calculate qcriterion. If a string is passed, the string will be used for the"
" resulting array name. Otherwise, array name will be ``'qcriterion'``. "
"Default ``None``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_derivative:40
msgid ""
"**faster** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_derivative:36
msgid ""
"Use faster algorithm for computing derivative quantities. Result is less "
"accurate and performs fewer derivative calculations, increasing computation "
"speed. The error will feature smoothing of the output and possibly errors at"
" boundaries. Option has no effect if DataSet is not UnstructuredGrid. "
"Default ``False``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_derivative:43
msgid "Data type preference. Either ``'point'`` or ``'cell'``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_derivative:51
msgid "Dataset with calculated derivative."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid ""
"First, plot the random hills dataset with the active elevation scalars.  "
"These scalars will be used for the derivative calculations."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:25
msgid "Compute and plot the gradient of the active scalars."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:46
msgid "See the :ref:`gradients_example` for more examples using this filter."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_implicit_distance:2
msgid "Compute the implicit distance from the points to a surface."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_implicit_distance:4
msgid ""
"This filter will compute the implicit distance from all of the nodes of this"
" mesh to a given surface. This distance will be added as a point array "
"called ``'implicit_distance'``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_implicit_distance:11
msgid "**surface** : :obj:`pyvista.DataSet`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_implicit_distance:11
msgid "The surface used to compute the distance."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_implicit_distance:14
msgid ""
"If ``True``, a new scalar array will be added to the ``point_data`` of this "
"mesh and the modified mesh will be returned. Otherwise a copy of this mesh "
"is returned with that scalar field added."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.compute_implicit_distance:22
msgid ""
"Dataset containing the ``'implicit_distance'`` array in ``point_data``."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid "Compute the distance between all the points on a sphere and a plane."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:14
msgid "Plot these distances as a heatmap"
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:35
msgid ""
"See :ref:`clip_with_surface_example` and "
":ref:`voxelize_surface_mesh_example` for more examples using this filter."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.connectivity:2
msgid "Find and label connected bodies/volumes."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.connectivity:4
msgid ""
"This adds an ID array to the point and cell data to distinguish separate "
"connected bodies. This applies a ``vtkConnectivityFilter`` filter which "
"extracts cells that share common points and/or meet other connectivity "
"criterion."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.connectivity:9
msgid ""
"Cells that share vertices and meet other connectivity criterion such as "
"scalar range are known as a region."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.connectivity:15
msgid ""
"**largest** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:False`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.connectivity:15
msgid "Extract the largest connected part of the mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.connectivity:23
msgid "Dataset with labeled connected bodies.  Return type matches input."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid "Join two meshes together and plot their connectivity."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:24
#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:26
msgid "See :ref:`volumetric_example` for more examples using this filter."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.contour:2
msgid "Contour an input self by an array."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.contour:4
msgid ""
"``isosurfaces`` can be an integer specifying the number of isosurfaces in "
"the data range or a sequence of values for explicitly setting the "
"isosurfaces."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.contour:12
msgid ""
"**isosurfaces** : :class:`python:int` or :term:`python:sequence`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.contour:11
msgid "python:int or python:sequence, optional"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.contour:11
msgid ""
"Number of isosurfaces to compute across valid data range or a sequence of "
"float values to explicitly use as the isosurfaces."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.contour:17
msgid ""
"**scalars** : :class:`python:str`, :obj:`collections.abc.Sequence`, "
":obj:`numpy.ndarray`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.contour:16
msgid "python:str, collections.abc.Sequence, numpy.ndarray, optional"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.contour:15
msgid ""
"Name or array of scalars to threshold on. If this is an array, the output of"
" this filter will save them as ``\"Contour Data\"``. Defaults to currently "
"active scalars."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.contour:20
msgid ""
"**compute_normals** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.contour:20
msgid "Compute normals for the dataset."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.contour:23
msgid ""
"**compute_gradients** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.contour:23
msgid "Compute gradients for the dataset."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.contour:26
msgid ""
"**compute_scalars** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.contour:26
msgid "Preserves the scalar values that are being contoured."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.contour:31
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.glyph:55
msgid ""
"**rng** : :class:`python:tuple`\\(:class:`python:float`), :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.contour:29
msgid ""
"If an integer number of isosurfaces is specified, this is the range over "
"which to generate contours. Default is the scalars array's full data range."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.contour:34
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold:40
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold_percent:34
msgid ""
"When ``scalars`` is specified, this is the preferred array type to search "
"for in the dataset.  Must be either ``'point'`` or ``'cell'``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.contour:41
msgid "**method** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.contour:39
msgid ""
"Specify to choose which vtk filter is used to create the contour. Must be "
"one of ``'contour'``, ``'marching_cubes'`` and ``'flying_edges'``. Defaults "
"to ``'contour'``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.contour:49
msgid "Contoured surface."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid "Generate contours for the random hills dataset."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:24
msgid "Generate the surface of a mobius strip using flying edges."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:70
msgid ""
"See :ref:`common_filter_example` or :ref:`marching_cubes_example` for more "
"examples using this filter."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.ctp:8
msgid ""
"This method is an alias for "
":func:`pyvista.DataSetFilters.cell_data_to_point_data`."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.ctp:25
msgid ""
"Dataset with the cell data transformed into point data. Return type matches "
"input."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.decimate_boundary:2
msgid "Return a decimated version of a triangulation of the boundary."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.decimate_boundary:4
msgid "Only the outer surface of the input dataset will be considered."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.decimate_boundary:12
msgid "**target_reduction** : :class:`python:float`, default: 0.5"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.decimate_boundary:11
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_ssao:14
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Circle:7
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cylinder:14
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Disc:16
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:7
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Superquadric:13
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Text3D:10
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Wavelet:38
msgid "python:float, default: 0.5"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.decimate_boundary:9
msgid ""
"Fraction of the original mesh to remove. TargetReduction is set to ``0.9``, "
"this filter will try to reduce the data set to 10% of its original size and "
"will remove 90% of the input triangles."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.decimate_boundary:20
msgid "Decimated boundary."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.decimate_boundary:33
msgid "See the :ref:`linked_views_example` example."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.delaunay_3d:2
msgid "Construct a 3D Delaunay triangulation of the mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.delaunay_3d:4
msgid ""
"This filter can be used to generate a 3D tetrahedral mesh from a surface or "
"scattered points.  If you want to create a surface from a point cloud, see "
":func:`pyvista.PolyDataFilters.reconstruct_surface`."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.delaunay_3d:16
msgid "**alpha** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.delaunay_3d:12
msgid ""
"Distance value to control output of this filter. For a non-zero alpha value,"
" only vertices, edges, faces, or tetrahedra contained within the "
"circumsphere (of radius alpha) will be output. Otherwise, only tetrahedra "
"will be output."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.delaunay_3d:21
msgid "**tol** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.delaunay_3d:19
msgid ""
"Tolerance to control discarding of closely spaced points. This tolerance is "
"specified as a fraction of the diagonal length of the bounding box of the "
"points."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.delaunay_3d:25
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:55
msgid "**offset** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.delaunay_3d:24
msgid ""
"Multiplier to control the size of the initial, bounding Delaunay "
"triangulation."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.delaunay_3d:33
msgid "UnstructuredGrid containing the Delaunay triangulation."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid ""
"Generate a 3D Delaunay triangulation of a surface mesh of a sphere and plot "
"the interior edges generated."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.explode:2
msgid "Push each individual cell away from the center of the dataset."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.explode:10
msgid "**factor** : :class:`python:float`, default: 0.1"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.explode:9
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:16
msgid "python:float, default: 0.1"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.explode:8
msgid ""
"How much each cell will move from the center of the dataset relative to its "
"distance from it. Increase this number to push the cells farther away."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.explode:15
msgid "UnstructuredGrid containing the exploded cells."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.explode:26
msgid ""
"This is similar to :func:`shrink <pyvista.DataSetFilters.shrink>` except "
"that it does not change the size of the cells."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_cells:2
msgid "Return a subset of the grid."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_cells:8
msgid "**ind** : :obj:`numpy.ndarray`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_cells:7
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.multi_ray_trace:33
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.multi_ray_trace:37
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.multi_ray_trace:50
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ray_trace:27
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ray_trace:40
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot_arrows:7
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot_arrows:11
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_custom_opacity:8
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:7
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.axis_rotation:7
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.line_segments_from_points:12
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.numpy_to_texture:7
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.vector_poly_data:7
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.vector_poly_data:10
msgid "numpy.ndarray"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_cells:8
msgid "Numpy array of cell indices to be extracted."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_cells:11
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:46
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:46
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bird_bath:20
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_black_vase:20
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cad_model_case:17
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cubemap_space_16k:15
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_file:13
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_ivan_angel:20
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_owl:20
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_plastic_vase:20
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sea_vase:20
#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:61
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read:42
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_legacy:15
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_texture:17
msgid ""
"**progress_bar** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:False`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_cells:16
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_points:26
msgid "Subselected grid."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_feature_edges:2
msgid "Extract edges from the surface of the mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_feature_edges:4
msgid ""
"If the given mesh is not PolyData, the external surface of the given mesh is"
" extracted and used."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_feature_edges:7
msgid "From vtk documentation, the edges are one of the following:"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_feature_edges:9
msgid "Boundary (used by one polygon) or a line cell."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_feature_edges:10
msgid "Non-manifold (used by three or more polygons)."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_feature_edges:11
msgid ""
"Feature edges (edges used by two triangles and whose dihedral angle > "
"feature_angle)."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_feature_edges:13
msgid "Manifold edges (edges used by exactly two polygons)."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_feature_edges:20
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:59
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate_pro:18
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth:25
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth_taubin:31
msgid "**feature_angle** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_feature_edges:18
msgid ""
"Feature angle (in degrees) used to detect sharp edges on the mesh. Used only"
" when ``feature_edges=True``.  Defaults to 30 degrees."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_feature_edges:23
msgid ""
"**boundary_edges** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_feature_edges:23
msgid "Extract the boundary edges. Defaults to ``True``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_feature_edges:26
msgid ""
"**non_manifold_edges** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_feature_edges:26
msgid "Extract non-manifold edges. Defaults to ``True``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_feature_edges:30
msgid ""
"**feature_edges** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_feature_edges:29
msgid "Extract edges exceeding ``feature_angle``.  Defaults to ``True``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_feature_edges:33
msgid ""
"**manifold_edges** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_feature_edges:33
msgid "Extract manifold edges. Defaults to ``True``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_feature_edges:41
msgid "Extracted edges."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid "Extract the edges from an unstructured grid."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:26
msgid ""
"See the :ref:`extract_edges_example` for more examples using this filter."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_geometry:2
msgid "Extract the outer surface of a volume or structured grid dataset."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_geometry:4
msgid ""
"This will extract all 0D, 1D, and 2D cells producing the boundary faces of "
"the dataset."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_geometry:8
msgid "This tends to be less efficient than :func:`extract_surface`."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_geometry:14
msgid "**extent** : :term:`python:sequence`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_geometry:13
msgid "Specify a (xmin,xmax, ymin,ymax, zmin,zmax) bounding box to clip data."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_geometry:22
msgid "Surface of the dataset."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid "Extract the surface of a sample unstructured grid."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:17
#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:30
#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:32
msgid ""
"See :ref:`surface_smoothing_example` for more examples using this filter."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_largest:2
msgid "Extract largest connected set in mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_largest:4
msgid ""
"Can be used to reduce residues obtained when generating an isosurface.  "
"Works only if residues are not connected (share at least one point with) the"
" main component of the image."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_largest:19
msgid "Largest connected set in the dataset.  Return type matches input."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid "Join two meshes together, extract the largest, and plot it."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_points:2
msgid ""
"Return a subset of the grid (with cells) that contains any of the given "
"point indices."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_points:8
msgid ""
"**ind** : :obj:`np.ndarray <numpy.ndarray>`, :class:`python:list`, :obj:`or`"
" :term:`python:sequence`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_points:7
msgid "np.ndarray, python:list, or python:sequence"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_points:8
msgid "Numpy array of point indices to be extracted."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_points:14
msgid ""
"**adjacent_cells** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_points:11
msgid ""
"If ``True``, extract the cells that contain at least one of the extracted "
"points. If ``False``, extract the cells that contain exclusively points from"
" the extracted points list. The default is ``True``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_points:18
msgid ""
"**include_cells** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_points:17
msgid ""
"Specifies if the cells shall be returned or not. The default is ``True``."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid "Extract all the points of a sphere with a Z coordinate greater than 0"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_surface:2
msgid "Extract surface mesh of the grid."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_surface:10
msgid ""
"**pass_pointid** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_surface:8
msgid ""
"Adds a point array ``\"vtkOriginalPointIds\"`` that idenfities which "
"original points these surface points correspond to."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_surface:15
msgid ""
"**pass_cellid** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_surface:13
msgid ""
"Adds a cell array ``\"vtkOriginalPointIds\"`` that idenfities which original"
" cells these surface cells correspond to."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_surface:30
msgid "**nonlinear_subdivision** : :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_surface:18
msgid ""
"If the input is an unstructured grid with nonlinear faces, this parameter "
"determines how many times the face is subdivided into linear faces."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_surface:22
msgid ""
"If 0, the output is the equivalent of its linear counterpart (and the "
"midpoints determining the nonlinear interpolation are discarded). If 1 (the "
"default), the nonlinear face is triangulated based on the midpoints. If "
"greater than 1, the triangulated pieces are recursively subdivided to reach "
"the desired subdivision. Setting the value to greater than 1 may cause some "
"point data to not be passed even if no nonlinear faces exist. This option "
"has no effect if the input is not an unstructured grid."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.extract_surface:38
msgid "Surface mesh of the grid."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid "Extract the surface of an UnstructuredGrid."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:12
msgid ""
"See the :ref:`extract_surface_example` for more examples using this filter."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.glyph:2
msgid "Copy a geometric representation (called a glyph) to the input dataset."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.glyph:4
msgid ""
"The glyph may be oriented along the input vectors, and it may be scaled "
"according to scalar data or vector magnitude. Passing a table of glyphs to "
"choose from based on scalars or vector magnitudes is also supported.  The "
"arrays used for ``orient`` and ``scale`` must be either both point data or "
"both cell data."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.glyph:16
msgid ""
"**orient** : :ref:`bool <python:bltin-boolean-values>` or "
":class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.glyph:15
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:86
msgid "bool or python:str, optional"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.glyph:14
msgid ""
"If ``True``, use the active vectors array to orient the glyphs. If string, "
"the vector array to use to orient the glyphs. If ``False``, the glyphs will "
"not be orientated."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.glyph:21
msgid ""
"**scale** : :ref:`bool <python:bltin-boolean-values>`, :class:`python:str` "
"or :term:`python:sequence`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.glyph:20
msgid "bool, python:str or python:sequence, optional"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.glyph:19
msgid ""
"If ``True``, use the active scalars to scale the glyphs. If string, the "
"scalar array to use to scale the glyphs. If ``False``, the glyphs will not "
"be scaled."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.glyph:24
msgid "Scale factor applied to scaling array."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.glyph:32
msgid ""
"**geom** : :obj:`vtk.vtkDataSet` or "
":class:`python:tuple`\\(:obj:`vtk.vtkDataSet`), :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.glyph:31
msgid "vtk.vtkDataSet or python:tuple(vtk.vtkDataSet), optional"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.glyph:27
msgid ""
"The geometry to use for the glyph. If missing, an arrow glyph is used. If a "
"sequence, the datasets inside define a table of geometries to choose from "
"based on scalars or vectors. In this case a sequence of numbers of the same "
"length must be passed as ``indices``. The values of the range (see ``rng``) "
"affect lookup in the table."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.glyph:39
msgid ""
"**indices** : :class:`python:tuple`\\(:class:`python:float`), "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.glyph:35
msgid ""
"Specifies the index of each glyph in the table for lookup in case ``geom`` "
"is a sequence. If given, must be the same length as ``geom``. If missing, a "
"default value of ``range(len(geom))`` is used. Indices are interpreted in "
"terms of the scalar range (see ``rng``). Ignored if ``geom`` has length 1."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.glyph:42
msgid ""
"Specify tolerance in terms of fraction of bounding box length. Float value "
"is between 0 and 1. Default is None. If ``absolute`` is ``True`` then the "
"tolerance can be an absolute distance. If ``None``, points merging as a "
"preprocessing step is disabled."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.glyph:48
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clean:35
msgid ""
"**absolute** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.glyph:48
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clean:34
msgid "Control if ``tolerance`` is an absolute distance or a fraction."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.glyph:51
msgid ""
"**clamping** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.glyph:51
msgid "Turn on/off clamping of \"scalar\" values to range. Default ``False``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.glyph:54
msgid ""
"Set the range of values to be considered by the filter when scalars values "
"are provided."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.glyph:63
msgid "Glyphs at either the cell centers or points."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid ""
"Create arrow glyphs oriented by vectors and scaled by scalars. Factor "
"parameter is used to reduce the size of the arrows."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:30
msgid ""
"See :ref:`glyph_example` and :ref:`glyph_table_example` for more examples "
"using this filter."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.integrate_data:2
msgid "Integrate point and cell data."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.integrate_data:4
msgid "Area or volume is also provided in point data."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.integrate_data:6
msgid ""
"This filter uses the VTK `vtkIntegrateAttributes "
"<https://vtk.org/doc/nightly/html/classvtkIntegrateAttributes.html>`_ and "
"requires VTK v9.1.0 or newer."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.integrate_data:18
msgid ""
"Mesh with 1 point and 1 vertex cell with integrated data in point and cell "
"data."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid "Integrate data on a sphere mesh."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:11
msgid "There is only 1 point and cell, so access the only value."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:18
msgid "See the :ref:`integrate_example` for more examples using this filter."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.interpolate:2
msgid "Interpolate values onto this mesh from a given dataset."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.interpolate:4
msgid "The input dataset is typically a point cloud."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.interpolate:6
msgid ""
"This uses a Gaussian interpolation kernel. Use the ``sharpness`` and "
"``radius`` parameters to adjust this kernel. You can also switch this kernel"
" to use an N closest points approach."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.interpolate:14
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample:10
msgid "**target** : :obj:`pyvista.DataSet`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.interpolate:13
msgid ""
"The vtk data object to sample from. Point and cell arrays from this object "
"are interpolated onto this mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.interpolate:19
msgid "**sharpness** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.interpolate:17
msgid ""
"Set the sharpness (i.e., falloff) of the Gaussian kernel. By default "
"``sharpness=2``. As the sharpness increases the effects of distant points "
"are reduced."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.interpolate:22
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.tube:11
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cone:19
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricFigure8Klein:11
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricMobius:8
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRoman:8
msgid "**radius** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.interpolate:22
msgid "Specify the radius within which the basis points must lie."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.interpolate:34
msgid "**strategy** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.interpolate:25
msgid ""
"Specify a strategy to use when encountering a \"null\" point during the "
"interpolation process. Null points occur when the local neighborhood (of "
"nearby points to interpolate from) is empty. If the strategy is set to "
"``'mask_points'``, then an output array is created that marks points as "
"being valid (=1) or null (invalid =0) (and the NullValue is set as well). If"
" the strategy is set to ``'null_value'`` (this is the default), then the "
"output data value(s) are set to the ``null_value`` (specified in the output "
"point data). Finally, the strategy ``'closest_point'`` is to simply use the "
"closest point to perform the interpolation."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.interpolate:39
msgid "**null_value** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.interpolate:37
msgid ""
"Specify the null point value. When a null point is encountered then all "
"components of each null tuple are set to this value. By default the null "
"value is set to zero."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.interpolate:45
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines:33
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.Spline:13
msgid "**n_points** : :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.interpolate:42
msgid ""
"If given, specifies the number of the closest points used to form the "
"interpolation basis. This will invalidate the radius argument in favor of an"
" N closest points approach. This typically has poorer results."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.interpolate:48
msgid "Preserve input mesh's original cell data arrays."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.interpolate:51
msgid "Preserve input mesh's original point data arrays."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.interpolate:57
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.probe:36
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample:32
msgid ""
"Depreciated keyword arguments ``pass_cell_arrays`` and "
"``pass_point_arrays``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.interpolate:63
msgid "Interpolated dataset.  Return type matches input."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid "Interpolate the values of 5 points onto a sample plane."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:35
msgid "See :ref:`interpolate_example` for more examples using this filter."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.merge:2
msgid "Join one or many other grids to this grid."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.merge:4
msgid "Grid is updated in-place by default."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.merge:6
msgid "Can be used to merge points of adjacent cells when no grids are input."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.merge:10
msgid ""
"The ``+`` operator between two meshes uses this filter with the default "
"parameters. When the target mesh is already a "
":class:`pyvista.UnstructuredGrid`, in-place merging via ``+=`` is similarly "
"possible."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.merge:18
msgid ""
"**grid** : :obj:`vtk.UnstructuredGrid` or :class:`python:list` :obj:`of` "
":obj:`vtk.UnstructuredGrids`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.merge:17
msgid "vtk.UnstructuredGrid or python:list of vtk.UnstructuredGrids, optional"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.merge:18
msgid "Grids to merge to this grid."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.merge:21
msgid ""
"Points in exactly the same location will be merged between the two meshes. "
"Warning: this can leave degenerate point data."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.merge:25
msgid ""
"Updates grid inplace when True if the input type is an "
":class:`pyvista.UnstructuredGrid`."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.merge:31
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.merge:33
msgid ""
"**main_has_priority** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.merge:29
msgid ""
"When this parameter is true and merge_points is true, the arrays of the "
"merging grids will be overwritten by the original main mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.merge:39
msgid "Merged grid."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.merge:50
msgid ""
"When two or more grids are joined, the type and name of each array must "
"match or the arrays will be ignored and not included in the final merged "
"mesh."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid "Merge three separate spheres into a single mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.outline:2
msgid "Produce an outline of the full extent for the input dataset."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.outline:16
msgid "Mesh containing an outline of the original dataset."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid ""
"Generate and plot the outline of a sphere.  This is effectively the ``(x, y,"
" z)`` bounds of the mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.outline_corners:2
msgid "Produce an outline of the corners for the input dataset."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid ""
"Generate and plot the corners of a sphere.  This is effectively the ``(x, y,"
" z)`` bounds of the mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.partition:2
msgid "Break down input dataset into a requested number of partitions."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.partition:4
msgid ""
"Cells on boundaries are uniquely assigned to each partition without "
"duplication."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.partition:6
msgid ""
"It uses a kdtree implementation that builds balances the cell centers among "
"a requested number of partitions. The current implementation only supports "
"power-of-2 target partition. If a non-power of two value is specified for "
"``n_partitions``, then the load balancing simply uses the power-of-two "
"greater than the requested value"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.partition:12
msgid ""
"For more details, see `vtkRedistributeDataSetFilter "
"<https://vtk.org/doc/nightly/html/classvtkRedistributeDataSetFilter.html>`_."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.partition:20
msgid "**n_partitions** : :class:`python:int`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.partition:18
msgid ""
"Specify the number of partitions to split the input dataset into. Current "
"implementation results in a number of partitions equal to the power of 2 "
"greater than or equal to the chosen value."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.partition:28
msgid ""
"**generate_global_id** : :ref:`bool <python:bltin-boolean-values>`, default:"
" :data:`python:False`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.partition:23
msgid ""
"Generate global cell ids if ``None`` are present in the input.  If global "
"cell ids are present in the input then this flag is ignored."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.partition:27
msgid ""
"This is stored as ``\"vtkGlobalCellIds\"`` within the ``cell_data`` of the "
"output dataset(s)."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.partition:31
msgid ""
"**as_composite** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:False`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.partition:31
msgid "Return the partitioned dataset as a :class:`pyvista.MultiBlock`."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.partition:43
msgid ":obj:`pyvista.MultiBlock` or :obj:`pyvista.UnstructuredGrid`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.partition:36
msgid ""
"UnStructuredGird if ``as_composite=False`` and MultiBlock when ``True``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.partition:47
msgid "This filter requires ``vtk>=9.0.0``."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid ""
"Partition a simple UniformGrid into a :class:`pyvista.MultiBlock` containing"
" each partition."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:25
msgid "Partition of the Stanford bunny."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:2
msgid "Sample a dataset along a circular arc and plot it."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:4
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:4
msgid ""
"Plot the variables of interest in 2D where the X-axis is distance from Point"
" A and the Y-axis is the variable of interest. Note that this filter returns"
" ``None``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:11
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc:8
msgid "**pointa** : :obj:`np.ndarray <numpy.ndarray>` or :class:`python:list`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:10
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:13
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:16
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:10
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc:7
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc:10
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc:13
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc_normal:9
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_multiple_lines:7
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ray_trace:9
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ray_trace:12
msgid "np.ndarray or python:list"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:11
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:14
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:17
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:11
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_line:11
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_line:14
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc:8
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc:11
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc:14
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc_normal:10
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_line:8
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_line:11
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Line:8
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Line:11
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Tube:8
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Tube:11
msgid "Location in ``[x, y, z]``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:14
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc:11
msgid "**pointb** : :obj:`np.ndarray <numpy.ndarray>` or :class:`python:list`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:17
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:11
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc:14
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc_normal:10
msgid "**center** : :obj:`np.ndarray <numpy.ndarray>` or :class:`python:list`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:22
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:16
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_line:18
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc:19
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc_normal:15
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_line:15
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_rotate:38
msgid "**resolution** : :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:20
msgid ""
"Number of pieces to divide the circular arc into. Defaults to number of "
"cells in the input mesh. Must be a positive integer."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:25
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:31
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_line:21
msgid ""
"The string name of the variable in the input dataset to probe. The active "
"scalar is used by default."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:29
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:35
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_line:25
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:9
msgid "**title** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:29
msgid "The string title of the ``matplotlib`` figure."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:32
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:38
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_line:28
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:29
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes_at_origin:20
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:72
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:23
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:29
msgid "**ylabel** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:32
msgid "The string label of the Y-axis. Defaults to the variable name."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:35
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:41
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_line:31
msgid ""
"**figsize** : :class:`python:tuple`\\(:class:`python:int`), :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:34
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:40
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_line:30
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.extract_subset:21
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_explicit_structured:7
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_explicit_structured:10
msgid "python:tuple(python:int), optional"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:35
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:41
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_line:31
msgid "The size of the new figure."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:38
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:44
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_line:34
msgid ""
"**figure** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:38
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:44
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_line:34
msgid "Flag on whether or not to create a new figure."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:41
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:47
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_line:37
msgid "**show** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:41
msgid "Shows the ``matplotlib`` figure when ``True``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:44
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:50
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_line:40
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.probe:13
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample:13
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc:22
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc_normal:30
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_line:18
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_multiple_lines:11
msgid ""
"Tolerance used to compute whether a point in the source is in a cell of the "
"input.  If not given, tolerance is automatically generated."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:49
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:55
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_line:44
msgid "**fname** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc:49
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:55
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_line:44
msgid "Save the figure this file name when set."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid "Sample a dataset along a high resolution circular arc and plot."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:2
msgid ""
"Sample a dataset along a resolution circular arc defined by a normal and "
"polar vector and plot it."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:14
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc:17
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc_normal:13
msgid ""
"Number of pieces to divide circular arc into. Defaults to number of cells in"
" the input mesh. Must be a positive integer."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:20
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc_normal:19
msgid ""
"**normal** : :obj:`np.ndarray <numpy.ndarray>` or :class:`python:list`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:19
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:23
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc_normal:18
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc_normal:22
msgid "np.ndarray or python:list, optional"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:19
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc_normal:18
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArcFromNormal:17
msgid ""
"The normal vector to the plane of the arc.  By default it points in the "
"positive Z direction."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:24
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc_normal:23
msgid ""
"**polar** : :obj:`np.ndarray <numpy.ndarray>` or :class:`python:list`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:23
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc_normal:22
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArcFromNormal:21
msgid ""
"Starting point of the arc in polar coordinates.  By default it is the unit "
"vector in the positive x direction."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:28
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc_normal:27
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_rotate:50
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ribbon:21
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArcFromNormal:26
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cone:27
msgid "**angle** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:27
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc_normal:26
msgid ""
"Arc length (in degrees), beginning at the polar vector.  The direction is "
"counterclockwise.  By default it is 360."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:35
msgid "The string title of the `matplotlib` figure."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:38
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_line:28
msgid "The string label of the Y-axis. Defaults to variable name."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_circular_arc_normal:47
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_line:37
msgid "Shows the matplotlib figure."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_line:2
msgid "Sample a dataset along a high resolution line and plot."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_line:4
msgid ""
"Plot the variables of interest in 2D using matplotlib where the X-axis is "
"distance from Point A and the Y-axis is the variable of interest. Note that "
"this filter returns ``None``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_line:11
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_line:8
msgid "**pointa** : :term:`python:sequence`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_line:14
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_line:11
msgid "**pointb** : :term:`python:sequence`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_line:17
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_line:14
msgid ""
"Number of pieces to divide line into. Defaults to number of cells in the "
"input mesh. Must be a positive integer."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_line:25
msgid "The string title of the matplotlib figure."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.plot_over_line:61
msgid "See the :ref:`plot_over_line_example` example."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.probe:2
msgid "Sample data values at specified point locations."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.probe:4
msgid "This uses :class:`vtk.vtkProbeFilter`."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.probe:10
msgid "**points** : :obj:`pyvista.DataSet`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.probe:9
msgid ""
"The points to probe values on to. This should be a PyVista mesh or something"
" :func:`pyvista.wrap` can handle."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.probe:18
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample:18
msgid "Preserve source mesh's original cell data arrays."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.probe:21
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample:21
msgid "Preserve source mesh's original point data arrays."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.probe:26
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample:26
msgid ""
"**categorical** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.probe:24
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample:24
msgid ""
"Control whether the source point data is to be treated as categorical. If "
"the data is categorical, then the resultant data will be determined by a "
"nearest neighbor interpolation scheme."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.probe:33
msgid "**locator** : :obj:`vtkAbstractCellLocator`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.probe:32
msgid "vtkAbstractCellLocator, optional"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.probe:32
msgid ""
"Prototype cell locator to perform the ``FindCell()`` operation.  This "
"requires VTK 9.0.0 or newer."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.probe:42
msgid "Dataset containing the probed data."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid "Probe the active scalars in ``grid`` at the points in ``mesh``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.ptc:8
msgid ""
"This method is an alias for "
":func:`pyvista.DataSetFilters.point_data_to_cell_data`."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.reflect:2
msgid "Reflect a dataset across a plane."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.reflect:8
msgid "**normal** : :class:`python:tuple`\\(:class:`python:float`)"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.reflect:7
msgid "python:tuple(python:float)"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.reflect:8
msgid "Normal direction for reflection."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.reflect:12
msgid ""
"**point** : :class:`python:tuple`\\(:class:`python:float`), :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.reflect:11
msgid ""
"Point which, along with ``normal``, defines the reflection plane. If not "
"specified, this is the origin."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.reflect:15
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.transform:35
msgid "When ``True``, modifies the dataset inplace."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.reflect:27
msgid "Reflected dataset.  Return type matches input."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:22
msgid ""
"See the :ref:`ref_reflect_example` for more examples using this filter."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample:2
msgid "Resample array data from a passed mesh onto this mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample:4
msgid "This uses :class:`vtk.vtkResampleWithDataSet`."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample:9
msgid ""
"The vtk data object to sample from - point and cell arrays from this object "
"are sampled onto the nodes of the ``dataset`` mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample:38
msgid "Dataset containing resampled data."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid "Resample data from another dataset onto a sphere."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:26
msgid "See :ref:`resampling_example` for more examples using this filter."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc:2
msgid "Sample a dataset over a circular arc."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc:32
msgid "Arc containing the sampled data."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid "Sample a dataset over a circular arc and plot it."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc_normal:2
msgid ""
"Sample a dataset over a circular arc defined by a normal and polar vector "
"and plot it."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc_normal:4
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArc:4
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArcFromNormal:4
msgid ""
"The number of segments composing the polyline is controlled by setting the "
"object resolution."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_circular_arc_normal:40
msgid "Sampled Dataset."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_line:2
msgid "Sample a dataset onto a line."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_line:27
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_multiple_lines:20
msgid "Line object with sampled data from dataset."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid "Sample over a plane that is interpolating a point cloud."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_multiple_lines:2
msgid "Sample a dataset onto a multiple lines."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_multiple_lines:8
msgid "**points** : :obj:`np.ndarray <numpy.ndarray>` or :class:`python:list`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.sample_over_multiple_lines:8
msgid "List of points defining multiple lines."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.select_enclosed_points:2
msgid "Mark points as to whether they are inside a closed surface."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.select_enclosed_points:4
msgid ""
"This evaluates all the input points to determine whether they are in an "
"enclosed surface. The filter produces a (0,1) mask (in the form of a "
"vtkDataArray) that indicates whether points are outside (mask value=0) or "
"inside (mask value=1) a provided surface. (The name of the output "
"vtkDataArray is ``\"SelectedPoints\"``.)"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.select_enclosed_points:10
msgid ""
"This filter produces and output data array, but does not modify the input "
"dataset. If you wish to extract cells or poinrs, various threshold filters "
"are available (i.e., threshold the output array)."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.select_enclosed_points:15
msgid ""
"The filter assumes that the surface is closed and manifold. A boolean flag "
"can be set to force the filter to first check whether this is true. If "
"``False`` and not manifold, an error will be raised."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.select_enclosed_points:23
msgid ""
"Set the surface to be used to test for containment. This must be a "
":class:`pyvista.PolyData` object."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.select_enclosed_points:27
msgid ""
"The tolerance on the intersection. The tolerance is expressed as a fraction "
"of the bounding box of the enclosing surface."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.select_enclosed_points:33
msgid ""
"**inside_out** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.select_enclosed_points:31
msgid ""
"By default, points inside the surface are marked inside or sent to the "
"output. If ``inside_out`` is ``True``, then the points outside the surface "
"are marked inside."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.select_enclosed_points:39
msgid ""
"**check_surface** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.select_enclosed_points:36
msgid ""
"Specify whether to check the surface for closure. If on, then the algorithm "
"first checks to see if the surface is closed and manifold. If the surface is"
" not closed and manifold, a runtime error is raised."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.select_enclosed_points:47
msgid "Mesh containing the ``point_data['SelectedPoints']`` array."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid ""
"Determine which points on a plane are inside a manifold sphere surface mesh."
"  Extract these points using the :func:`DataSetFilters.extract_points` "
"filter and then plot them."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.separate_cells:2
msgid ""
"Return a copy of the dataset with separated cells with no shared points."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.separate_cells:4
msgid ""
"This method may be useful when datasets have scalars that need to be "
"associated to each point of each cell rather than either each cell or just "
"the points of the dataset."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.separate_cells:12
msgid "UnstructuredGrid with isolated cells."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid ""
"Load the example hex beam and separate its cells. This increases the total "
"number of points in the dataset since points are no longer shared."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:15
msgid ""
"See the :ref:`point_cell_scalars_example` for a more detailed example using "
"this filter."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.shrink:2
msgid "Shrink the individual faces of a mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.shrink:4
msgid ""
"This filter shrinks the individual faces of a mesh rather than scaling the "
"entire mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.shrink:11
msgid "**shrink_factor** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.shrink:10
msgid ""
"Fraction of shrink for each cell.  Defaults to 1.0, which does not modify "
"the faces."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.shrink:19
msgid "Dataset with shrunk faces.  Return type matches input."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid "First, plot the original cube."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:23
msgid "Now, plot the mesh with shrunk faces."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_implicit:2
msgid "Slice a dataset by a VTK implicit function."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_implicit:8
msgid "**implicit_function** : :obj:`vtk.vtkImplicitFunction`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_implicit:7
#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:17
msgid "vtk.vtkImplicitFunction"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_implicit:8
msgid "Specify the implicit function to perform the cutting."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_implicit:15
msgid ""
"**generate_triangles** : :ref:`bool <python:bltin-boolean-values>`, default:"
" :data:`python:False`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_implicit:11
msgid ""
"If this is enabled (``False`` by default), the output will be triangles. "
"Otherwise the output will be the intersection polygons. If the cutting "
"function is not a plane, the output will be 3D polygons, which might be nice"
" to look at but hard to compute with downstream."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.slice_implicit:18
msgid ""
"**contour** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:False`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.split_bodies:2
msgid "Find, label, and split connected bodies/volumes."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.split_bodies:4
msgid ""
"This splits different connected bodies into blocks in a "
":class:`pyvista.MultiBlock` dataset."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.split_bodies:11
msgid "**label** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.split_bodies:10
msgid ""
"A flag on whether to keep the ID arrays given by the ``connectivity`` "
"filter."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.as_polydata_blocks:22
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.copy:22
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.split_bodies:28
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tetra_dc_mesh:21
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PVDReader.read:22
msgid ":obj:`pyvista.MultiBlock`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.split_bodies:19
msgid "MultiBlock with a split bodies."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid "Split a uniform grid thresholded to be non-connected."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:13
msgid "See :ref:`split_vol_ref` for more examples using this filter."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines:2
msgid "Integrate a vector field to generate streamlines."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines:4
msgid ""
"The default behavior uses a sphere as the source - set its location and "
"radius via the ``source_center`` and ``source_radius`` keyword arguments.  "
"``n_points`` defines the number of starting points on the sphere surface. "
"Alternatively, a line source can be used by specifying ``pointa`` and "
"``pointb``.  ``n_points`` again defines the number of points on the line."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines:12
msgid "You can retrieve the source by specifying ``return_source=True``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines:15
msgid ""
"Optional keyword parameters from "
":func:`pyvista.DataSetFilters.streamlines_from_source` can be used here to "
"control the generation of streamlines."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines:22
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:16
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:17
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_vector:13
msgid "**vectors** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines:22
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:16
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:17
msgid "The string name of the active vector field to integrate across."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines:26
msgid ""
"**source_center** : :class:`python:tuple`\\(:class:`python:float`), "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines:25
msgid ""
"Length 3 tuple of floats defining the center of the source particles. "
"Defaults to the center of the dataset."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines:30
msgid "**source_radius** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines:29
msgid ""
"Float radius of the source particle cloud. Defaults to one-tenth of the "
"diagonal of the dataset's spatial extent."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines:33
msgid "Number of particles present in source sphere or line."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines:36
msgid ""
"**start_position** : :class:`python:tuple`\\(:class:`python:float`), "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines:36
msgid "A single point.  This will override the sphere point source."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines:40
msgid ""
"**return_source** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines:39
msgid ""
"Return the source particles as :class:`pyvista.PolyData` as well as the "
"streamlines. This will be the second value returned if ``True``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines:44
msgid ""
"**pointa, pointb** : :class:`python:tuple`\\(:class:`python:float`), "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines:43
msgid ""
"The coordinates of a start and end point for a line source. This will "
"override the sphere and start_position point source."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines:50
msgid "See :func:`pyvista.DataSetFilters.streamlines_from_source`."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines:58
msgid "**streamlines** : :obj:`pyvista.PolyData`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines:55
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:78
msgid ""
"This produces polylines as the output, with each cell (i.e., polyline) "
"representing a streamline. The attribute values associated with each "
"streamline are stored in the cell data, whereas those associated with "
"streamline-points are stored in the point data."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines:71
msgid "**source** : :obj:`pyvista.PolyData`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines:61
msgid ""
"The points of the source are the seed points for the streamlines. Only "
"returned if ``return_source=True``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines:75
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:103
msgid "See the :ref:`streamlines_example` example."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:2
msgid "Generate evenly spaced streamlines on a 2D dataset."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:4
msgid ""
"This filter only supports datasets that lie on the xy plane, i.e. ``z=0``. "
"Particular care must be used to choose a `separating_distance` that do not "
"result in too much memory being utilized.  The default unit is cell length."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:10
msgid ""
"This filter is unstable for ``vtk<9.0``. See `pyvista issue 1508 "
"<https://github.com/pyvista/pyvista/issues/1508>`_."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:20
msgid ""
"**start_position** : :term:`python:sequence`\\(:class:`python:float`), "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:19
msgid "python:sequence(python:float), optional"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:19
msgid ""
"The seed point for generating evenly spaced streamlines. If not supplied, a "
"random position in the dataset is chosen."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:25
msgid "**integrator_type** : {2, 4}, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D-1
msgid "{2, 4},"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:23
msgid ""
"The integrator type to be used for streamline generation. The default is "
"Runge-Kutta2. The recognized solvers are: RUNGE_KUTTA2 (``2``) and "
"RUNGE_KUTTA4 (``4``)."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:29
msgid "**step_length** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:28
msgid ""
"Constant Step size used for line integration, expressed in length units or "
"cell length units (see ``step_unit`` parameter)."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:34
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:42
msgid "**step_unit** : {'cl', 'l'}, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D-1
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source-1
msgid "{'cl', 'l'},"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:32
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:40
msgid ""
"Uniform integration step unit. The valid unit is now limited to only "
"LENGTH_UNIT (``'l'``) and CELL_LENGTH_UNIT (``'cl'``). Default is "
"CELL_LENGTH_UNIT: ``'cl'``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:38
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:54
msgid "**max_steps** : :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:37
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:53
msgid ""
"Maximum number of steps for integrating a streamline. Defaults to ``2000``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:41
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:57
msgid "**terminal_speed** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:41
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:57
msgid "Terminal speed value, below which integration is terminated."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:48
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:78
msgid "**interpolator_type** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:44
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:74
msgid ""
"Set the type of the velocity field interpolator to locate cells during "
"streamline integration either by points or cells. The cell locator is more "
"robust then the point locator. Options are ``'point'`` or ``'cell'`` "
"(abbreviations of ``'p'`` and ``'c'`` are also supported)."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:51
msgid "**separating_distance** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:51
msgid "The distance between streamlines expressed in ``step_unit``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:55
msgid "**separating_distance_ratio** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:54
msgid ""
"Streamline integration is stopped if streamlines are closer than "
"``SeparatingDistance*SeparatingDistanceRatio`` to other streamlines."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:59
msgid ""
"**closed_loop_maximum_distance** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:58
msgid ""
"The distance between points on a streamline to determine a closed loop."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:62
msgid "**loop_angle** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:62
msgid ""
"The maximum angle in degrees between points to determine a closed loop."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:66
msgid ""
"**minimum_number_of_loop_points** : :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:65
msgid ""
"The minimum number of points before which a closed loop will be determined."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:70
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:67
msgid ""
"**compute_vorticity** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_evenly_spaced_2D:69
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:66
msgid ""
"Vorticity computation at streamline points. Necessary for generating proper "
"stream-ribbons using the ``vtkRibbonFilter``."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid ""
"Plot evenly spaced streamlines for cylinder in a crossflow. This dataset is "
"a multiblock dataset, and the fluid velocity is in the first block."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:32
msgid "See :ref:`2d_streamlines_example` for more examples using this filter."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:2
msgid "Generate streamlines of vectors from the points of a source mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:4
msgid ""
"The integration is performed using a specified integrator, by default Runge-"
"Kutta2. This supports integration through any type of dataset. If the "
"dataset contains 2D cells like polygons or triangles and the "
"``surface_streamlines`` parameter is used, the integration is constrained to"
" lie on the surface defined by 2D cells."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:14
msgid "**source** : :obj:`pyvista.DataSet`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:13
msgid ""
"The points of the source provide the starting points of the streamlines.  "
"This will override both sphere and line sources."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:23
msgid "**integrator_type** : {45, 2, 4}, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source-1
msgid "{45, 2, 4},"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:20
msgid ""
"The integrator type to be used for streamline generation. The default is "
"Runge-Kutta45. The recognized solvers are: RUNGE_KUTTA2 (``2``),  "
"RUNGE_KUTTA4 (``4``), and RUNGE_KUTTA45 (``45``). Options are ``2``, ``4``, "
"or ``45``. Default is ``45``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:28
msgid "**integration_direction** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:26
msgid ""
"Specify whether the streamline is integrated in the upstream or downstream "
"directions (or both). Options are ``'both'``, ``'backward'``, or "
"``'forward'``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:31
msgid ""
"**surface_streamlines** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:31
msgid "Compute streamlines on a surface. Default ``False``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:37
msgid "**initial_step_length** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:34
msgid ""
"Initial step size used for line integration, expressed ib length unitsL or "
"cell length units (see ``step_unit`` parameter). either the starting size "
"for an adaptive integrator, e.g., RK45, or the constant / fixed size for "
"non-adaptive ones, i.e., RK2 and RK4)."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:46
msgid "**min_step_length** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:45
msgid ""
"Minimum step size used for line integration, expressed in length or cell "
"length units. Only valid for an adaptive integrator, e.g., RK45."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:50
msgid "**max_step_length** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:49
msgid ""
"Maximum step size used for line integration, expressed in length or cell "
"length units. Only valid for an adaptive integrator, e.g., RK45."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:60
msgid "**max_error** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:60
msgid "Maximum error tolerated throughout streamline integration."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:63
msgid "**max_time** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:63
msgid "Specify the maximum length of a streamline expressed in LENGTH_UNIT."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:71
msgid "**rotation_scale** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:70
msgid ""
"This can be used to scale the rate with which the streamribbons twist. The "
"default is 1."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.streamlines_from_source:86
msgid ""
"Streamlines. This produces polylines as the output, with each cell (i.e., "
"polyline) representing a streamline. The attribute values associated with "
"each streamline are stored in the cell data, whereas those associated with "
"streamline-points are stored in the point data."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.surface_indices:2
msgid "Return the surface indices of a grid."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.surface_indices:13
msgid "Indices of the surface points."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid "Return the first 10 surface indices of an UnstructuredGrid."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.tessellate:2
msgid "Tessellate a mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.tessellate:4
msgid ""
"This filter approximates nonlinear FEM-like elements with linear simplices. "
"The output mesh will have geometry and any fields specified as attributes in"
" the input mesh's point data. The attribute's copy flags are honored, except"
" for normals."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.tessellate:9
msgid ""
"For more details see `vtkTessellatorFilter "
"<https://vtk.org/doc/nightly/html/classvtkTessellatorFilter.html#details>`_."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.tessellate:15
msgid "**max_n_subdivide** : :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.tessellate:14
msgid "Maximum number of subdivisions. Defaults to ``3``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.tessellate:18
msgid ""
"The adaptive tessellation will output vertices that are not shared among "
"cells, even where they should be. This can be corrected to some extent. "
"Defaults to ``True``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.tessellate:28
msgid "Dataset with tessellated mesh.  Return type matches input."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid "First, plot the high order FEM-like elements."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:36
msgid "Now, plot the tessellated mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_plane:2
msgid "Texture map this dataset to a user defined plane."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_plane:4
msgid ""
"This is often used to define a plane to texture map an image to this "
"dataset.  The plane defines the spatial reference and extent of that image."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_plane:11
msgid ""
"Length 3 iterable of floats defining the XYZ coordinates of the bottom left "
"corner of the plane."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_plane:16
msgid ""
"**point_u** : :class:`python:tuple`\\(:class:`python:float`), "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_plane:15
msgid ""
"Length 3 iterable of floats defining the XYZ coordinates of the bottom right"
" corner of the plane."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_plane:20
msgid ""
"**point_v** : :class:`python:tuple`\\(:class:`python:float`), "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_plane:19
msgid ""
"Length 3 iterable of floats defining the XYZ coordinates of the top left "
"corner of the plane."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_plane:23
msgid ""
"If ``True``, the new texture coordinates will be added to this dataset. If "
"``False`` (default), a new dataset is returned with the texture coordinates."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.append:22
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.insert:25
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_plane:29
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_sphere:30
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_actor:15
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:39
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.convert_array:11
msgid "**name** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_plane:28
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_sphere:29
msgid ""
"The string name to give the new texture coordinates if applying the filter "
"inplace."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_plane:33
msgid ""
"**use_bounds** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_plane:32
msgid ""
"Use the bounds to set the mapping plane by default (bottom plane of the "
"bounding box)."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_plane:41
msgid ""
"Original dataset with texture coordinates if ``inplace=True``, otherwise a "
"copied dataset."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_plane:55
msgid "See :ref:`ref_topo_map_example`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_sphere:2
msgid "Texture map this dataset to a user defined sphere."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_sphere:4
msgid ""
"This is often used to define a sphere to texture map an image to this "
"dataset. The sphere defines the spatial reference and extent of that image."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_sphere:13
msgid ""
"**center** : :class:`python:tuple`\\(:class:`python:float`), :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_sphere:11
msgid ""
"Length 3 iterable of floats defining the XYZ coordinates of the center of "
"the sphere. If ``None``, this will be automatically calculated."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_sphere:21
msgid ""
"**prevent_seam** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_sphere:16
msgid ""
"Control how the texture coordinates are generated.  If set, the s-coordinate"
" ranges from 0 to 1 and 1 to 0 corresponding to the theta angle variation "
"between 0 to 180 and 180 to 0 degrees.  Otherwise, the s-coordinate ranges "
"from 0 to 1 between 0 to 360 degrees.  Default ``True``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_sphere:24
msgid ""
"If ``True``, the new texture coordinates will be added to the dataset "
"inplace. If ``False`` (default), a new dataset is returned with the texture "
"coordinates."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_sphere:38
msgid ""
"Dataset containing the texture mapped to a sphere.  Return type matches "
"input."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.texture_map_to_sphere:52
msgid "See :ref:`ref_texture_example`."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold:2
msgid "Apply a ``vtkThreshold`` filter to the input dataset."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold:4
msgid ""
"This filter will apply a ``vtkThreshold`` filter to the input dataset and "
"return the resulting object. This extracts cells where the scalar value in "
"each cell satisfies the threshold criterion.  If ``scalars`` is ``None``, "
"the input's active scalars array is used."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold:11
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold_percent:5
msgid ""
"Thresholding is inherently a cell operation, even though it can use "
"associated point data for determining whether to keep a cell. In other "
"words, whether or not a given point is included after thresholding depends "
"on whether that point is part of a cell that is kept after thresholding."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold:22
msgid ""
"**value** : :class:`python:float` or :term:`python:sequence`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold:21
msgid "python:float or python:sequence, optional"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold:20
msgid ""
"Single value or (min, max) to be used for the data threshold.  If a "
"sequence, then length must be 2. If no value is specified, the non-NaN data "
"range will be used to remove any NaN values."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold:25
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold_percent:18
msgid "Name of scalars to threshold on. Defaults to currently active scalars."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold:28
msgid ""
"If value is a single value, when invert is ``True`` cells are kept when "
"their values are below parameter ``\"value\"``. When invert is ``False`` "
"cells are kept when their value is above the threshold ``\"value\"``.  "
"Default is ``False``: yielding above the threshold ``\"value\"``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold:37
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold_percent:31
msgid ""
"**continuous** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold:35
msgid ""
"When True, the continuous interval [minimum cell scalar, maximum cell "
"scalar] will be used to intersect the threshold bound, rather than the set "
"of discrete scalar values from the vertices."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold:49
msgid ""
"**all_scalars** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold:45
msgid ""
"If using scalars from point data, all points in a cell must satisfy the "
"threshold when this value is ``True``.  When ``False``, any point of the "
"cell with a scalar value satisfying the threshold criterion will extract the"
" cell. Has no effect when using cell data."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold:59
msgid "**component_mode**"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold-1
msgid "{'selected', 'all', 'any'}"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold:55
msgid ""
"The method to satisfy the criteria for the threshold of multicomponent "
"scalars.  'selected' (default) uses only the ``component``.  'all' requires "
"all components to meet criteria.  'any' is when any component satisfies the "
"criteria."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold:63
msgid "**component** : :class:`python:int`, default: 0"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold:62
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Box:11
msgid "python:int, default: 0"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold:62
msgid ""
"When using ``component_mode='selected'``, this sets which component to "
"threshold on."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold:68
#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold_percent:44
msgid "Dataset containing geometry that meets the threshold requirements."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:18
msgid ""
"Apply the threshold filter to Perlin noise.  First generate the structured "
"grid."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:35
msgid "Next, apply the threshold."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold_percent:2
msgid ""
"Threshold the dataset by a percentage of its range on the active scalars "
"array."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold_percent:15
msgid ""
"**percent** : :class:`python:float` or "
":class:`python:tuple`\\(:class:`python:float`), :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold_percent:14
msgid "python:float or python:tuple(python:float), optional"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold_percent:14
msgid ""
"The percentage (0,1) to threshold. If value is out of 0 to 1 range, then it "
"will be divided by 100 and checked to be in that range."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold_percent:21
msgid ""
"When invert is ``True`` cells are kept when their values are below the "
"percentage of the range.  When invert is ``False``, cells are kept when "
"their value is above the percentage of the range. Default is ``False``: "
"yielding above the threshold ``\"value\"``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.threshold_percent:28
msgid ""
"When ``True``, the continuous interval [minimum cell scalar, maximum cell "
"scalar] will be used to intersect the threshold bound, rather than the set "
"of discrete scalar values from the vertices."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid "Apply a 50% threshold filter."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:26
msgid "Apply a 80% threshold filter."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:45
msgid ""
"See :ref:`common_filter_example` for more examples using a similar filter."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.transform:2
msgid "Transform this mesh with a 4x4 transform."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.transform:5
msgid ""
"When using ``transform_all_input_vectors=True``, there is no distinction in "
"VTK between vectors and arrays with three components.  This may be an issue "
"if you have scalar data with three components (e.g. RGB data).  This will be"
" improperly transformed as if it was vector data rather than scalar data.  "
"One possible (albeit ugly) workaround is to store the three components as "
"separate scalar arrays."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.transform:15
msgid ""
"In general, transformations give non-integer results. This method converts "
"integer-typed vector data to float before performing the transformation. "
"This applies to the points array, as well as any vector-valued data that is "
"affected by the transformation. To prevent subtle bugs arising from in-place"
" transformations truncating the result to integers, this conversion always "
"applies to the input mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.transform:27
msgid ""
"**trans** : :obj:`vtk.vtkMatrix4x4`, :obj:`vtk.vtkTransform`, :obj:`or` "
":obj:`numpy.ndarray`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.transform:26
msgid "vtk.vtkMatrix4x4, vtk.vtkTransform, or numpy.ndarray"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.transform:26
msgid "Accepts a vtk transformation object or a 4x4 transformation matrix."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.transform:30
msgid ""
"When ``True``, all arrays with three components are transformed. Otherwise, "
"only the normals and vectors are transformed.  See the warning for more "
"details."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.transform:43
msgid ""
"Transformed dataset.  Return type matches input unless input dataset is a "
":class:`pyvista.UniformGrid`, in which case the output datatype is a "
":class:`pyvista.StructuredGrid`."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid "Translate a mesh by ``(50, 100, 200)``."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:9
msgid ""
"Here a 4x4 :class:`numpy.ndarray` is used, but ``vtk.vtkMatrix4x4`` and "
"``vtk.vtkTransform`` are also accepted."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_scalar:2
msgid "Warp the dataset's points by a point data scalars array's values."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_scalar:4
msgid ""
"This modifies point coordinates by moving points along point normals by the "
"scalar amount times the scale factor."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_scalar:10
msgid "Name of scalars to warp by. Defaults to currently active scalars."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_scalar:13
msgid ""
"A scaling factor to increase the scaling effect. Alias ``scale_factor`` also"
" accepted - if present, overrides ``factor``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_scalar:19
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArcFromNormal:18
msgid "**normal** : :term:`python:sequence`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_scalar:17
msgid ""
"User specified normal. If given, data normals will be ignored and the given "
"normal will be used to project the warp."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_scalar:22
msgid "If ``True``, the points of the given dataset will be updated."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_scalar:28
msgid "Accepts ``scale_factor`` instead of ``factor``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_scalar:33
msgid "Warped Dataset.  Return type matches input."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid "First, plot the unwarped mesh."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:23
msgid "Now, warp the mesh by the ``'Elevation'`` scalars."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:42
#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:23
msgid "See :ref:`surface_normal_example` for more examples using this filter."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_vector:2
msgid "Warp the dataset's points by a point data vectors array's values."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_vector:4
msgid ""
"This modifies point coordinates by moving points along point vectors by the "
"local vector times the scale factor."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_vector:7
msgid ""
"A classical application of this transform is to visualize eigenmodes in "
"mechanics."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_vector:13
msgid "Name of vector to warp by. Defaults to currently active vector."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_vector:16
msgid ""
"A scaling factor that multiplies the vectors to warp by. Can be used to "
"enhance the warping effect."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_vector:20
msgid "If ``True``, the function will update the mesh in-place."
msgstr ""

#: ../../pyvista/pyvista/core/filters/data_set.pydocstring of
#: pyvista.core.filters.data_set.DataSetFilters.warp_by_vector:28
msgid "The warped mesh resulting from the operation."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:3
msgid "Warp a sphere by vectors."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.DataSetFilters.rst:32
msgid ""
"See :ref:`warp_by_vectors_example` for more examples using this filter."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.ExplicitStructuredGrid.rst:2
msgid "pyvista.ExplicitStructuredGrid"
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:83:<autosummary>:1
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid:2
msgid ""
"Extend the functionality of the ``vtk.vtkExplicitStructuredGrid`` class."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid:4
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.UnstructuredGrid:4
msgid "Can be initialized by the following:"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid:6
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.UnstructuredGrid:6
msgid "Creating an empty grid"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid:7
msgid ""
"From a ``vtk.vtkExplicitStructuredGrid`` or ``vtk.vtkUnstructuredGrid`` "
"object"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid:8
msgid "From a VTU or VTK file"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid:9
msgid "From ``dims`` and ``corners`` arrays"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid:14
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.UnstructuredGrid:14
msgid "**args** : :obj:`various`"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid:13
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.UnstructuredGrid:13
msgid "various"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid:14
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.UnstructuredGrid:14
msgid "See below examples."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid:28
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid:39
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.UnstructuredGrid:28
msgid "**deep** : :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid:27
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid:38
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.UnstructuredGrid:27
msgid "optional"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid:17
msgid ""
"Whether to deep copy a ``vtk.vtkUnstructuredGrid`` object. Default is "
"``False``.  Keyword only."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.cast_to_unstructured_grid:2
msgid "Cast to an unstructured grid."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.cast_to_unstructured_grid:17
msgid ":obj:`UnstructuredGrid`"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.cast_to_unstructured_grid:9
msgid ""
"An unstructured grid. VTK adds the ``'BLOCK_I'``, ``'BLOCK_J'`` and "
"``'BLOCK_K'`` cell arrays. These arrays are required to restore the explicit"
" structured grid."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.cast_to_unstructured_grid:22
msgid ":obj:`pyvista.DataSetFilters.extract_cells`"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.cast_to_unstructured_grid:23
msgid "Extract a subset of a dataset."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.cast_to_unstructured_grid:24
msgid ":obj:`pyvista.UnstructuredGrid.cast_to_explicit_structured_grid`"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.cast_to_unstructured_grid:25
msgid "Cast an unstructured grid to an explicit structured grid."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.cast_to_unstructured_grid:30
msgid ""
"The ghost cell array is disabled before casting the unstructured grid in "
"order to allow the original structure and attributes data of the explicit "
"structured grid to be restored. If you don't need to restore the explicit "
"structured grid later or want to extract an unstructured grid from the "
"visible subgrid, use the ``extract_cells`` filter and the cell indices where"
" the ghost cell array is ``0``."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.cell_coords:2
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.cell_id:25
msgid "Return the cell structured coordinates."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.cell_coords:8
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.neighbors:8
msgid ""
"**ind** : :class:`python:int` or "
":term:`python:iterable`\\(:class:`python:int`)"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.cell_coords:7
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.neighbors:7
msgid "python:int or python:iterable(python:int)"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.cell_coords:8
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.neighbors:8
msgid "Cell IDs."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.cell_coords:20
msgid ""
":class:`python:tuple`\\(:class:`python:int`), :obj:`numpy.ndarray`, "
":obj:`or` :data:`python:None`"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.cell_coords:13
msgid ""
"Cell structured coordinates. ``None`` if ``ind`` is outside the grid extent."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.cell_coords:25
msgid ":obj:`pyvista.ExplicitStructuredGrid.cell_id`"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.cell_coords:26
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.cell_id:2
msgid "Return the cell ID."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.cell_id:8
msgid ""
"**coords** : :class:`python:tuple`\\(:class:`python:int`), "
":class:`python:list`\\(:class:`python:tuple`\\(:class:`python:int`)) "
":obj:`or` :obj:`numpy.ndarray`"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.cell_id:7
msgid ""
"python:tuple(python:int), python:list(python:tuple(python:int)) or "
"numpy.ndarray"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.cell_id:8
msgid "Cell structured coordinates."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.cell_id:19
msgid ""
":class:`python:int`, :obj:`numpy.ndarray`, :obj:`or` :data:`python:None`"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.cell_id:13
msgid "Cell IDs. ``None`` if ``coords`` is outside the grid extent."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.cell_id:24
msgid ":obj:`pyvista.ExplicitStructuredGrid.cell_coords`"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.compute_connections:2
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.compute_connectivity:37
msgid "Compute an array with the number of connected cell faces."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.compute_connections:4
msgid ""
"This method calculates the number of topological cell neighbors connected by"
" faces. The results are stored in the ``'number_of_connections'`` cell "
"array."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.compute_connections:11
msgid ""
"This method is applied to this grid if ``True`` or to a copy otherwise."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.compute_connections:24
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.compute_connectivity:31
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.show_cells:27
msgid ":obj:`ExplicitStructuredGrid`"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.compute_connections:17
msgid ""
"A deep copy of this grid if ``inplace=False`` or this DataSet if otherwise."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.compute_connections:29
msgid ":obj:`ExplicitStructuredGrid.compute_connectivity`"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.compute_connections:30
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.compute_connectivity:2
msgid "Compute the faces connectivity flags array."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.compute_connectivity:4
msgid ""
"This method checks the faces connectivity of the cells with their "
"topological neighbors.  The result is stored in the array of integers "
"``'ConnectivityFlags'``. Each value in this array must be interpreted as a "
"binary number, where the digits shows the faces connectivity of a cell with "
"its topological neighbors -Z, +Z, -Y, +Y, -X and +X respectively. For "
"example, a cell with ``'ConnectivityFlags'`` equal to ``27`` (``011011``) "
"indicates that this cell is connected by faces with their neighbors ``(0, 0,"
" 1)``, ``(0, -1, 0)``, ``(-1, 0, 0)`` and ``(1, 0, 0)``."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.compute_connectivity:18
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.hide_cells:13
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.show_cells:10
msgid ""
"This method is applied to this grid if ``True`` (default) or to a copy "
"otherwise."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.compute_connectivity:24
msgid ""
"A deep copy of this grid if ``inplace=False``, or this DataSet if otherwise."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.compute_connectivity:36
msgid ":obj:`ExplicitStructuredGrid.compute_connections`"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.ExplicitStructuredGrid.dimensions:2
msgid "Return the topological dimensions of the grid."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.ExplicitStructuredGrid.dimensions:18
msgid ":class:`python:tuple`\\(:class:`python:int`)"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.ExplicitStructuredGrid.dimensions:9
msgid "Number of sampling points in the I, J and Z directions respectively."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.hide_cells:2
msgid "Hide specific cells."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.hide_cells:4
msgid "Hides cells by setting the ghost cell array to ``HIDDENCELL``."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.hide_cells:10
msgid "**ind** : :term:`python:sequence`\\(:class:`python:int`)"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.hide_cells:9
msgid "python:sequence(python:int)"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.hide_cells:9
msgid ""
"Cell indices to be hidden. A boolean array of the same size as the number of"
" cells also is acceptable."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.hide_cells:30
msgid ":obj:`ExplicitStructuredGrid` or :data:`python:None`"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.hide_cells:19
msgid ""
"A deep copy of this grid if ``inplace=False`` with the hidden cells, or this"
" grid with the hidden cells if otherwise."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.neighbors:2
msgid "Return the indices of neighboring cells."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.neighbors:19
msgid "**rel** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.neighbors:11
msgid ""
"Defines the neighborhood relationship. If ``'topological'``, returns the "
"``(i-1, j, k)``, ``(i+1, j, k)``, ``(i, j-1, k)``, ``(i, j+1, k)``, ``(i, j,"
" k-1)`` and ``(i, j, k+1)`` cells. If ``'connectivity'`` (default), returns "
"only the topological neighbors considering faces connectivity. If "
"``'geometric'``, returns the cells in the ``(i-1, j)``, ``(i+1, j)``, "
"``(i,j-1)`` and ``(i, j+1)`` vertical cell groups whose faces intersect."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.neighbors:33
msgid ":class:`python:list`\\(:class:`python:int`)"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.neighbors:24
msgid "Indices of neighboring cells."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.save:2
msgid "Save this VTK object to file."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.save:8
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData.save:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_file:10
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.save:19
#: ../../pyvista/pyvista/utilities/errors.pydocstring of
#: pyvista.utilities.errors.set_error_output_file:8
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read:24
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_exodus:8
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_legacy:12
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_texture:8
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.save_meshio:8
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:117
msgid "**filename** : :class:`python:str`"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.save:8
msgid "Output file name. VTU and VTK extensions are supported."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.save:11
msgid "If ``True`` (default), write as binary, else ASCII."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.save:23
msgid ""
"VTK adds the ``'BLOCK_I'``, ``'BLOCK_J'`` and ``'BLOCK_K'`` cell arrays. "
"These arrays are required to restore the explicit structured grid."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.show_cells:2
msgid "Show hidden cells."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.show_cells:4
msgid ""
"Shows hidden cells by setting the ghost cell array to ``0`` where "
"``HIDDENCELL``."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.ExplicitStructuredGrid.show_cells:16
msgid ""
"A deep copy of this grid if ``inplace=False`` with the hidden cells shown.  "
"Otherwise, this dataset with the shown cells."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.ExplicitStructuredGrid.visible_bounds:2
msgid "Return the bounding box of the visible cells."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.ExplicitStructuredGrid.visible_bounds:4
msgid ""
"Different from `bounds`, which returns the bounding box of the complete "
"grid, this method returns the bounding box of the visible cells, where the "
"ghost cell array is not ``HIDDENCELL``."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.ExplicitStructuredGrid.visible_bounds:13
msgid ""
"The limits of the visible grid in the X, Y and Z directions respectively."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.Light.rst:2
msgid "pyvista.Light"
msgstr ""

#: ../../pyvista/doc/api/core/lights.rst:119:<autosummary>:1
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light:2
msgid "Light class."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light:11
msgid ""
"**position** : :class:`python:list` or :class:`python:tuple`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D:9
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D:15
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ChartMPL:12
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ChartMPL:28
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light:10
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light:16
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:22
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_cursor:16
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:13
msgid "python:list or python:tuple, optional"
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light:8
msgid ""
"The position of the light. The interpretation of the position depends on the"
" type of the light and whether the light has a transformation matrix.  See "
"also the :py:attr:`position` property."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light:17
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_cursor:17
msgid ""
"**focal_point** : :class:`python:list` or :class:`python:tuple`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light:14
msgid ""
"The focal point of the light. The interpretation of the focal point depends "
"on the type of the light and whether the light has a transformation matrix."
"  See also the :py:attr:`focal_point` property."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_normals:27
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:27
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot:19
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Brush:10
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.area:20
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.bar:19
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.line:16
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.scatter:16
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D:16
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Pen:9
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D:16
#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color:27
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light:21
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_cursor:26
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:14
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_border:8
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_bounding_box:17
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:25
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_orientation_widget:19
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_background:14
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:66
msgid "**color** : :obj:`color_like`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light:20
msgid ""
"The color of the light. The ambient, diffuse and specular colors will all be"
" set to this color on creation."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light:37
msgid ""
"**light_type** : :class:`python:str` or :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_trim:25
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_trim:35
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light:36
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_exodus:32
msgid "python:str or python:int, optional"
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light:24
msgid ""
"The type of the light. If a string, one of ``'headlight'``, ``'camera "
"light'`` or ``'scene light'``. If an int, one of 1, 2 or 3, respectively. "
"The class constants ``Light.HEADLIGHT``, ``Light.CAMERA_LIGHT`` and "
"``Light.SCENE_LIGHT`` are also available, respectively."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light:30
msgid ""
"A headlight is attached to the camera, looking at its focal point along the "
"axis of the camera."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light:33
msgid ""
"A camera light also moves with the camera, but it can occupy a general "
"position with respect to it."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light:36
msgid ""
"A scene light is stationary with respect to the scene, as it does not follow"
" the camera. This is the default."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light:40
msgid "**intensity** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light:40
msgid "The brightness of the light (between 0 and 1)."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light:49
msgid ""
"**positional** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light:43
msgid "Set if the light is positional."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.positional:4
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light:45
msgid ""
"The default is a directional light, i.e. an infinitely distant point source."
" A positional light with a cone angle of at least 90 degrees acts like a "
"spherical point source. A positional light with a cone angle that is less "
"than 90 degrees is known as a spotlight."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light:52
msgid "**cone_angle** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light:52
msgid "Cone angle of a positional light in degrees."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light:56
msgid ""
"**show_actor** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light:55
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.show_actor:2
msgid "Show an actor for a spotlight that depicts the geometry of the beam."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light:60
msgid "**exponent** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light:59
msgid ""
"The exponent of the cosine used for spotlights. See also the "
":py:attr:`exponent` property."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light:69
msgid "**shadow_attenuation** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light:63
msgid "The value of shadow attenuation."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.shadow_attenuation:4
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light:65
msgid ""
"By default a light will be completely blocked when in shadow. By setting "
"this value to less than 1.0 you can control how much light is attenuated "
"when in shadow. Note that changing the :py:attr:`attenuation_values` of the "
"light can make it pass through objects even if its shadow attenuation is 1."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light:86
msgid "**attenuation_values** : :term:`python:sequence`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light:72
msgid "Quadratic attenuation constants."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light:74
msgid ""
"The values are a 3-length sequence which specifies the constant, linear and "
"quadratic constants in this order. These parameters only have an effect for "
"positional lights."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.Light.rst:3
msgid "Create a light at (10, 10, 10) and set its diffuse color to red."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.Light.rst:9
msgid ""
"Create a positional light at (0, 0, 3) with a cone angle of 30, exponent of "
"20, and a visible actor."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.add_renderer:2
msgid "Attach a renderer to this light."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.add_renderer:21
msgid "**renderer** : :obj:`vtk.vtkRenderer`"
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.add_renderer:20
msgid "vtk.vtkRenderer"
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.add_renderer:8
msgid "Renderer."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.ambient_color:2
msgid "Return or set the ambient color of the light."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.ambient_color:4
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.diffuse_color:4
#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.specular_color:4
msgid ""
"When setting, the color must be a 3-length sequence or a string. For "
"example:"
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.Light.rst:3
msgid "Create a light and set its ambient color to red."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.attenuation_values:2
msgid "Return the quadratic attenuation constants."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.attenuation_values:4
msgid ""
"The values are 3-length sequences which specify the constant, linear and "
"quadratic constants in this order. These parameters only have an effect for "
"positional lights."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.attenuation_values:8
msgid ""
"Attenuation refers to the dampening of a beam of light as it gets further "
"away from the point source. The three constants describe three different "
"profiles for dampening with distance. A larger attenuation constant "
"corresponds to more rapid decay with distance."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.Light.rst:3
msgid ""
"Plot three cubes lit by two lights with different attenuation profiles.  The"
" blue light has slower linear attenuation, the green one has quadratic "
"attenuation that makes it decay faster. Note that there are no shadow "
"effects included so each box gets lit by both lights."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.cone_angle:2
msgid "Return the cone angle of a positional light."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.cone_angle:4
msgid ""
"The angle is in degrees and is measured between the axis of the cone and an "
"extremal ray of the cone. A value smaller than 90 has spot lighting effects,"
" anything equal to and above 90 is just a positional light, i.e. a spherical"
" point source."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.cone_angle:9
msgid ""
"Regarding the angular distribution of the light, the cone angle merely "
"truncates the beam, the shape of which is defined by the "
":py:attr:`exponent`.  If the cone angle is at least 90 degrees then there is"
" no angular dependence."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.cone_angle:14
msgid ""
"If the light's cone angle is increased to 90 degrees or above, its actor (if"
" previously shown) is automatically hidden."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.Light.rst:3
msgid ""
"Plot three planes lit by three spotlights with varying cone angles.  Use a "
"large exponent to cause a visible angular variation of the intensity of the "
"beams."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.copy:2
msgid "Return a shallow or a deep copy of the light."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.copy:4
msgid ""
"The only mutable attribute of :class:`pyvista.Light` is the transformation "
"matrix (if it exists). Thus asking for a shallow copy merely implies that "
"the returned light and the original share the transformation matrix "
"instance."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.copy:12
msgid ""
"Whether to return a deep copy rather than a shallow one. Default ``True``."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.copy:27
msgid ":obj:`pyvista.Light`"
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.copy:18
msgid "Copied light."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.Light.rst:3
msgid ""
"Create a light and check that it shares a transformation matrix with its "
"shallow copy."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.diffuse_color:2
msgid "Return or set the diffuse color of the light."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.Light.rst:3
msgid "Create a light and set its diffuse color to blue."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.exponent:2
msgid "Return the exponent of the cosine used for spotlights."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.exponent:4
msgid ""
"With a spotlight (a positional light with cone angle less than 90 degrees) "
"the shape of the light beam within the light cone varies with the angle from"
" the light's axis, and the variation of the intensity depends as the cosine "
"of this angle raised to an exponent, which is 1 by default. Increasing the "
"exponent makes the beam sharper (more focused around the axis), decreasing "
"it spreads the beam out."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.exponent:12
msgid ""
"Note that since the angular dependence defined by this property and the "
"truncation performed by the :py:attr:`cone_angle` are independent, for "
"spotlights with narrow beams (small :py:attr:`cone_angle`) it is harder to "
"see the angular variation of the intensity, and a lot higher exponent might "
"be necessary to visibly impact the angular distribution of the beam."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.Light.rst:3
msgid ""
"Plot three planes lit by three spotlights with exponents of 1, 2 and 5.  The"
" one with the lowest exponent has the broadest beam."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.focal_point:2
msgid "Return the focal point of the light."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.focal_point:4
msgid ""
"Note: the focal point is defined in the coordinate space indicated by the "
"light's transformation matrix (if it exists). To get the light's world space"
" focal point, use the (read-only) :py:attr:`world_focal_point` property."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.Light.rst:3
msgid "Create a light at (10, 10, 10) shining at (0, 0, 1)."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.from_vtk:2
msgid "Create a light from a ``vtk.vtkLight``, resulting in a copy."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.from_vtk:21
msgid "**vtk_light** : :obj:`vtk.vtkLight`"
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.from_vtk:20
msgid "vtk.vtkLight"
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.from_vtk:8
msgid "The ``vtk.vtkLight`` to be copied."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.hide_actor:2
msgid ""
"Hide the actor for a positional light that depicts the geometry of the beam."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.hide_actor:4
msgid "For a directional light the function doesn't do anything."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.intensity:2
msgid "Return the brightness of the light (between 0 and 1)."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.Light.rst:3
msgid "Light the two sides of a cube with lights of different brightness."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.is_camera_light:2
msgid "Return whether the light is a camera light."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.Light.rst:3
msgid ""
"Verify that four out of five lights of the default light kit are camera "
"lights."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.is_headlight:2
msgid "Return whether the light is a headlight."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.Light.rst:3
msgid "Verify that the first light of the default light kit is a headlight."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.is_scene_light:2
msgid "Return whether the light is a scene light."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.Light.rst:3
msgid ""
"Verify that none of the lights of the default light kit are scene lights."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.light_type:2
msgid "Return the light type."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.light_type:4
msgid ""
"The default light type is a scene light which lives in world coordinate "
"space."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.light_type:7
msgid ""
"A headlight is attached to the camera and always points at the camera's "
"focal point."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.light_type:10
msgid ""
"A camera light also moves with the camera, but it can have an arbitrary "
"relative position to the camera. Camera lights are defined in a coordinate "
"space where the camera is located at (0, 0, 1), looking towards (0, 0, 0) at"
" a distance of 1, with up being (0, 1, 0). Camera lights use the transform "
"matrix to establish this space, i.e. they have a fixed :py:attr:`position` "
"with respect to the camera, and moving the camera only affects the "
":py:attr:`world_position` via changes in the :py:attr:`transform_matrix` "
"(and the same goes for the focal point)."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.light_type:21
msgid "The property returns class constant values from an enum:"
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.light_type:23
msgid "``Light.HEADLIGHT == 1``"
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.light_type:24
msgid "``Light.CAMERA_LIGHT == 2``"
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.light_type:25
msgid "``Light.SCENE_LIGHT == 3``"
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.Light.rst:3
msgid ""
"Check the type of lights for the first two lights of the default light kit "
"of plotters."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.Light.rst:12
msgid ""
"Change the light type of the default light kit's headlight to a scene light."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of pyvista.Light.on:2
msgid "Return whether the light is on."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of pyvista.Light.on:4
msgid "This corresponds to the Switch state of the ``vtk.vtkLight`` class."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.Light.rst:3
msgid "Create a light, check if it's on by default, and turn it off."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.position:2
msgid "Return the position of the light."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.position:4
msgid ""
"Note: the position is defined in the coordinate space indicated by the "
"light's transformation matrix (if it exists). To get the light's world space"
" position, use the (read-only) :py:attr:`world_position` property."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.Light.rst:3
msgid ""
"Create a light positioned at ``(10, 10, 10)`` after initialization, and note"
" how the position is unaffected by a non-trivial transform matrix."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.positional:2
msgid "Return whether the light is positional."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.positional:10
msgid ""
"Attenuation and cone angles are only used for positional lights.  The "
":py:attr:`exponent` property is only used for spotlights.  Positional lights"
" with a cone angle of at least 90 degrees don't show angular dependence of "
"their beams, but they display attenuation."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.positional:16
msgid ""
"If the light is changed to directional, its actor (if previously shown) is "
"automatically hidden."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.Light.rst:3
msgid "Create a spotlight shining on the origin."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.renderers:2
msgid "Return the renderers associated with this light."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.set_camera_light:2
msgid "Set the light to be a camera light."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.set_camera_light:4
msgid ""
"A camera light moves with the camera, but it can have an arbitrary relative "
"position to the camera. Camera lights are defined in a coordinate space "
"where the camera is located at (0, 0, 1), looking towards (0, 0, 0) at a "
"distance of 1, with up being (0, 1, 0).  Camera lights use the "
"transformation matrix to establish this space.  Calling this method will "
"reset the light's transformation matrix."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.set_direction_angle:2
msgid "Set the position and focal point of a directional light."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.set_direction_angle:4
msgid ""
"The light is switched to directional (non-positional). The focal point is "
"set to the origin. The position is defined in terms of an elevation and an "
"azimuthal angle, both in degrees."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.set_direction_angle:8
msgid ""
"Note that the equivalent ``vtk.vtkLight.SetDirectionAngle()`` method uses a "
"surprising coordinate system where the (x', y', z') axes of the method "
"correspond to the (z, x, y) axes of the renderer. This method reimplements "
"the functionality in a way that ``elev`` is the conventional elevation and "
"``azim`` is the conventional azimuth. In particular:"
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.set_direction_angle:15
msgid "``elev = 0``, ``azim = 0`` is the +x direction"
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.set_direction_angle:16
msgid "``elev = 0``, ``azim = 90`` is the +y direction"
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.set_direction_angle:17
msgid "``elev = 90``, ``azim = 0`` is the +z direction"
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.set_direction_angle:22
msgid "**elev** : :class:`python:float`"
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.set_direction_angle:22
msgid "The elevation of the directional light."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.set_direction_angle:35
msgid "**azim** : :class:`python:float`"
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.set_direction_angle:25
msgid "The azimuthal angle of the directional light."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.Light.rst:3
msgid ""
"Create a light that shines on the origin from a 30-degree elevation in the "
"xz plane."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.set_headlight:2
msgid "Set the light to be a headlight."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.set_headlight:4
msgid ""
"Headlights are fixed to the camera and always point to the focal point of "
"the camera. Calling this method will reset the light's transformation "
"matrix."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.set_scene_light:2
msgid "Set the light to be a scene light."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.set_scene_light:4
msgid ""
"Scene lights are stationary with respect to the scene. Calling this method "
"will reset the light's transformation matrix."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.shadow_attenuation:2
msgid "Return or set the value of shadow attenuation."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.Light.rst:3
msgid "Set the shadow attenuation to 0.5"
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.show_actor:4
msgid ""
"For a directional light or a positional light with :py:attr:`cone_angle` of "
"at least 90 degrees the method doesn't do anything. If the light is changed "
"so that it becomes a spotlight, this method has to be called again for the "
"actor to show. To hide the actor see :func:`hide_actor`."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.Light.rst:3
msgid ""
"Create a scene containing a cube lit with a cyan spotlight and visualize the"
" light using an actor."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.specular_color:2
msgid "Return or set the specular color of the light."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.Light.rst:3
msgid "Create a light and set its specular color to bright green."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.switch_off:2
msgid "Switch off the light."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.Light.rst:3
msgid "Create a light and switch it off."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.plotting.lights.Light.switch_on:2
msgid "Switch on the light."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.Light.rst:3
msgid "Create a light, switch it off and switch it back on again."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.transform_matrix:2
msgid "Return the transformation matrix of the light (if any)."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.transform_matrix:4
msgid ""
"The transformation matrix is ``None`` by default, and it is stored as a "
"``vtk.vtkMatrix4x4`` object when set. If set, the light's parameters "
"(position and focal point) are transformed by the matrix before being "
"rendered. See also the :py:attr:`world_position` and "
":py:attr:`world_focal_point` read-only properties that can differ from "
":py:attr:`position` and :py:attr:`focal_point`, respectively."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.transform_matrix:12
msgid ""
"The 4-by-4 transformation matrix is a tool to encode a general linear "
"transformation and a translation (an affine transform). The 3-by-3 principal"
" submatrix (the top left corner of the matrix) encodes a three-dimensional "
"linear transformation (e.g. some rotation around the origin). The top three "
"elements in the last column of the matrix encode a three-dimensional "
"translation. The last row of the matrix is redundant."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.Light.rst:3
msgid ""
"Create a light with a transformation matrix that corresponds to a 90-degree "
"rotation around the z axis and a shift by (0, 0, -1), and check that the "
"light's position transforms as expected."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.world_focal_point:2
msgid "Return the world space focal point of the light."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.world_focal_point:4
msgid ""
"The world space focal point is the :py:attr:`focal_point` property "
"transformed by the light's transform matrix if it exists. The value of this "
"read-only property corresponds to the "
"``vtk.vtkLight.GetTransformedFocalPoint()`` method."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.Light.rst:3
msgid ""
"Create a light with a transformation matrix that corresponds to a 90-degree "
"rotation around the z axis and a shift by (0, 0, -1), and check that the "
"light's focal point transforms as expected."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.world_position:2
msgid "Return the world space position of the light."
msgstr ""

#: ../../pyvista/pyvista/plotting/lights.pydocstring of
#: pyvista.Light.world_position:4
msgid ""
"The world space position is the :py:attr:`position` property transformed by "
"the light's transform matrix if it exists. The value of this read-only "
"property corresponds to the ``vtk.vtkLight.GetTransformedPosition()`` "
"method."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.MultiBlock.rst:2
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositeAttributes:18
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper:7
msgid "pyvista.MultiBlock"
msgstr ""

#: ../../pyvista/doc/api/core/composite.rst:154:<autosummary>:1
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock:2
msgid "A composite class to hold many data sets which can be iterated over."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock:4
msgid ""
"This wraps/extends the `vtkMultiBlockDataSet "
"<https://vtk.org/doc/nightly/html/classvtkMultiBlockDataSet.html>`_ class so"
" that we can easily plot these data sets and use the composite in a Pythonic"
" manner."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock:9
msgid ""
"You can think of ``MultiBlock`` like a list as we can iterate over this data"
" structure by index.  It has some dictionary features as we can also access "
"blocks by their string name."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock:13
msgid ""
"``MultiBlock`` adheres more closely to being list like, and inherits from "
":class:`collections.abc.MutableSequence`.  Multiple nonconforming behaviors "
"were removed or modified."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.MultiBlock.rst:5
msgid "Create an empty composite dataset."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.MultiBlock.rst:9
msgid "Add a dataset to the collection."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.MultiBlock.rst:14
msgid "Add a named block."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.MultiBlock.rst:18
msgid "Instantiate from a list of objects."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.MultiBlock.rst:39
msgid "Instantiate from a dictionary."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.MultiBlock.rst:59
msgid "Iterate over the collection."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.append:2
msgid "Add a data set to the next block index."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.append:8
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.insert:11
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.replace:21
msgid "**dataset** : :obj:`pyvista.DataSet` or :obj:`pyvista.MultiBlock`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.append:7
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.insert:10
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.replace:20
msgid "pyvista.DataSet or pyvista.MultiBlock"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.append:8
msgid "Dataset to append to this multi-block."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.append:11
msgid ""
"Block name to give to dataset.  A default name is given depending on the "
"block index as 'Block-{i:02}'."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.as_polydata_blocks:2
msgid ""
"Convert all the datasets within this MultiBlock to "
":class:`pyvista.PolyData`."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.as_polydata_blocks:10
msgid "**copy** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.as_polydata_blocks:8
msgid ""
"Option to create a shallow copy of any datasets that are already a "
":class:`pyvista.PolyData`. When ``False``, any datasets that are already "
"PolyData will not be copied."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.as_polydata_blocks:15
msgid "MultiBlock containing only :class:`pyvista.PolyData` datasets."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.as_polydata_blocks:26
msgid ""
"Null blocks are converted to empty :class:`pyvista.PolyData` objects. "
"Downstream filters that operate on PolyData cannot accept MultiBlocks with "
"null blocks."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.bounds:2
msgid "Find min/max for bounds across blocks."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.bounds:9
msgid "length 6 tuple of floats containing min/max along each axis"
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.MultiBlock.rst:3
msgid "Return the bounds across blocks."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.clean:2
msgid "Remove any null blocks in place."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.clean:18
msgid ""
"**empty** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:True`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.clean:8
msgid "Remove any meshes that are empty as well (have zero points)."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.copy:2
msgid "Return a copy of the multiblock."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.copy:8
msgid "When ``True``, make a full copy of the object."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.copy:13
msgid "Deep or shallow copy of the ``MultiBlock``."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.extend:2
msgid "Extend MultiBlock with an Iterable."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.extend:4
msgid ""
"If another MultiBlock object is supplied, the key names will be preserved."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.extend:20
msgid ""
"**datasets** : :obj:`Iterable`\\[:obj:`pyvista.DataSet` or "
":obj:`pyvista.MultiBlock`]"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.extend:19
msgid "Iterable[pyvista.DataSet or pyvista.MultiBlock]"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.extend:10
msgid "Datasets to extend."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.get:2
msgid "Get a block by its name."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.get:4
msgid ""
"If the name is non-unique then returns the first occurrence. Returns "
"``default`` if name isn't in the dataset."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.get:10
msgid "**index** : :class:`python:str`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.get:10
msgid "Index or name of the dataset within the multiblock."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.get:13
msgid ""
"**default** : :obj:`pyvista.DataSet` or :obj:`pyvista.MultiBlock`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.get:12
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:9
msgid "pyvista.DataSet or pyvista.MultiBlock, optional"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.get:13
msgid "Default to return if index is not in the multiblock."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.get:27
msgid ""
":obj:`pyvista.DataSet` or :obj:`pyvista.MultiBlock` or :data:`python:None`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.get:18
msgid "Dataset from the given index if it exists."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.get_block_name:2
msgid "Return the string name of the block at the given index."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.get_block_name:8
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.insert:8
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.replace:8
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.set_block_name:8
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositeAttributes.get_block:8
msgid "**index** : :class:`python:int`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.get_block_name:8
msgid "Index of the block to get the name of."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.get_block_name:13
msgid "Name of the block at the given index."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.get_data_range:2
msgid "Get the min/max of an array given its name across all blocks."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.get_data_range:11
#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.set_active_scalars:20
msgid ""
"**allow_missing** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.get_data_range:11
msgid "Allow a block to be missing the named array."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.get_index_by_name:2
msgid "Find the index number by block name."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.get_index_by_name:8
msgid "Name of the block."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.get_index_by_name:13
msgid "Index of the block."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.insert:2
msgid "Insert data before index."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.insert:8
msgid "Index before which to insert data."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.insert:11
msgid "Data to insert."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.insert:14
msgid ""
"Name for key to give dataset.  A default name is given depending on the "
"block index as ``'Block-{i:02}'``."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.MultiBlock.rst:3
msgid "Insert a new :class:`pyvista.PolyData` at the start of the multiblock."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.is_all_polydata:2
msgid "Return ``True`` when all the blocks are :class:`pyvista.PolyData`."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.is_all_polydata:4
msgid ""
"This method will recursively check if any internal blocks are also "
":class:`pyvista.PolyData`."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.is_all_polydata:23
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_depth_peeling:36
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_actor:34
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.is_inside_bounds:29
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.is_pyvista_dataset:25
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.CGNSReader.distribute_blocks:20
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.OpenFOAMReader.cell_to_point_creation:14
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.OpenFOAMReader.decompose_polyhedra:18
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.OpenFOAMReader.skip_zero_time:18
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.CGNSReader.base_array_status:25
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.CGNSReader.family_array_status:25
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PointCellDataSelection.cell_array_status:25
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PointCellDataSelection.point_array_status:25
msgid ":ref:`bool <python:bltin-boolean-values>`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.is_all_polydata:11
msgid "Return ``True`` when all blocks are :class:`pyvista.PolyData`."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.keys:2
msgid "Get all the block names in the dataset."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.keys:9
msgid "List of block names."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.n_blocks:2
msgid "Return the total number of blocks set."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.pop:2
msgid "Pop off a block at the specified index."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.pop:9
msgid ""
"**index** : :class:`python:int` or :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.pop:8
msgid "python:int or python:str, optional"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.pop:8
msgid ""
"Index or name of the dataset within the multiblock.  Defaults to last "
"dataset."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.pop:23
msgid ":obj:`pyvista.DataSet` or :obj:`pyvista.MultiBlock`"
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.pop:14
msgid "Dataset from the given index that was removed."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.MultiBlock.rst:3
msgid "Pop the ``\"cube\"`` multiblock."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.replace:2
msgid "Replace dataset at index while preserving key name."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.replace:8
msgid "Index of the block to replace."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.replace:11
msgid "Dataset for replacing the one at index."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.reverse:2
msgid "Reverse MultiBlock in-place."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.MultiBlock.rst:3
msgid "Reverse a multiblock."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.set_active_scalars:2
msgid "Find the scalars by name and appropriately set it as active."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.set_active_scalars:19
msgid ""
"Allow missing scalars in part of the composite dataset. If all blocks are "
"missing the array, it will raise a ``KeyError``."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.set_active_scalars:25
msgid "Field association of the scalars activated."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.set_active_scalars:39
msgid "The number of components of the data must match."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.set_block_name:2
msgid "Set a block's string name at the specified index."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.set_block_name:8
msgid "Index or the dataset within the multiblock."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.set_block_name:11
msgid "Name to assign to the block at ``index``."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.MultiBlock.volume:2
msgid "Return the total volume of all meshes in this dataset."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.wrap_nested:2
msgid ""
"Ensure that all nested data structures are wrapped as PyVista datasets."
msgstr ""

#: ../../pyvista/pyvista/core/composite.pydocstring of
#: pyvista.core.composite.MultiBlock.wrap_nested:4
msgid "This is performed in place."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PointSet.rst:2
msgid "pyvista.PointSet"
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:83:<autosummary>:1
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PointSet:2
msgid "Concrete class for storing a set of points."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PointSet:4
msgid ""
"This is a concrete class representing a set of points that specifies the "
"interface for datasets that explicitly use \"point\" arrays to represent "
"geometry. This class is useful for improving the performance of filters on "
"point clouds, but not plotting."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PointSet:9
msgid ""
"For further details see `VTK: vtkPointSet Details "
"<https://vtk.org/doc/nightly/html/classvtkPointSet.html#details>`_."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PointSet:20
msgid "**var_inp** : :obj:`vtk.vtkPointSet`, :obj:`Sequence`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PointSet:19
msgid "vtk.vtkPointSet, Sequence, optional"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PointSet:15
msgid ""
"Flexible input type.  Can be a ``vtk.vtkPointSet``, in which case this "
"PointSet object will be copied if ``deep=True`` and will be a shallow copy "
"if ``deep=False``."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PointSet:19
msgid ""
"List, numpy array, or sequence containing point locations. Must be an ``(N, "
"3)`` array of points."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PointSet:23
msgid ""
"Whether to copy the input ``points``, or to create a PointSet from them "
"without copying them.  Setting ``deep=True`` ensures that the original "
"arrays can be modified outside the mesh without affecting the mesh. Default "
"is ``False``."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PointSet:40
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData:93
msgid ""
"**force_float** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PointSet:29
msgid ""
"Casts the datatype to ``float32`` if points datatype is non-float. Default "
"``True``. Set this to ``False`` to allow non-float types, though this may "
"lead to truncation of intermediate floats when transforming datasets."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PointSet:44
msgid ""
"This class requires ``vtk>=9.1.0``. This is an abstract class in "
"``vtk<9.1.0`` and cannot be instantiated."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PointSet.rst:3
msgid "Create a simple point cloud of 10 points from a numpy array."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PointSet.rst:11
msgid ""
"Plot the pointset. Note: this casts to a :class:`pyvista.PolyData` "
"internally when plotting."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PointSet.cast_to_polydata:2
msgid "Cast this dataset to polydata."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PointSet.cast_to_polydata:8
msgid ""
"Whether to copy the pointset points, or to create a PolyData without copying"
" them.  Setting ``deep=True`` ensures that the original arrays can be "
"modified outside the PolyData without affecting the PolyData. Default is "
"``True``."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PointSet.cast_to_polydata:16
msgid "PointSet cast to a ``pyvista.PolyData``."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData:2
msgid ""
"Dataset consisting of surface geometry (e.g. vertices, lines, and polygons)."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.RectilinearGrid:4
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData:4
msgid "Can be initialized in several ways:"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData:6
msgid "Create an empty mesh"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData:7
msgid "Initialize from a vtk.vtkPolyData"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData:8
msgid "Using vertices"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData:9
msgid "Using vertices and faces"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData:10
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.UnstructuredGrid:9
msgid "From a file"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData:24
msgid ""
"**var_inp** : :obj:`vtk.vtkPolyData`, :class:`python:str`, "
":term:`python:sequence`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData:23
msgid "vtk.vtkPolyData, python:str, python:sequence, optional"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData:15
msgid ""
"Flexible input type.  Can be a ``vtk.vtkPolyData``, in which case this "
"PolyData object will be copied if ``deep=True`` and will be a shallow copy "
"if ``deep=False``."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData:19
msgid ""
"Also accepts a path, which may be local path as in ``'my_mesh.stl'`` or "
"global path like ``'/tmp/my_mesh.ply'`` or ``'C:/Users/user/my_mesh.ply'``."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData:23
msgid ""
"Otherwise, this must be a points array or list containing one or more "
"points.  Each point must have 3 dimensions."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData:35
msgid "**faces** : :term:`python:sequence`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData:27
msgid ""
"Face connectivity array.  Faces must contain padding indicating the number "
"of points in the face.  For example, the two faces ``[10, 11, 12]`` and "
"``[20, 21, 22, 23]`` will be represented as ``[3, 10, 11, 12, 4, 20, 21, 22,"
" 23]``.  This lets you have an arbitrary number of points per face."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData:33
msgid ""
"When not including the face connectivity array, each point will be assigned "
"to a single vertex.  This is used for point clouds that have no "
"connectivity."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData:40
msgid "**n_faces** : :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData:38
msgid ""
"Number of faces in the ``faces`` connectivity array.  While optional, "
"setting this speeds up the creation of the ``PolyData``."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData:47
msgid "**lines** : :term:`python:sequence`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData:43
msgid ""
"The line connectivity array.  Like ``faces``, this array requires padding "
"indicating the number of points in a line segment.  For example, the two "
"line segments ``[0, 1]`` and ``[1, 2, 3, 4]`` will be represented as ``[2, "
"0, 1, 4, 1, 2, 3, 4]``."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData:52
msgid "**n_lines** : :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData:50
msgid ""
"Number of lines in the ``lines`` connectivity array.  While optional, "
"setting this speeds up the creation of the ``PolyData``."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData:61
msgid "**strips** : :term:`python:sequence`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData:55
msgid ""
"Triangle strips connectivity array.  Triangle strips require an initial "
"triangle, and the following points of the strip. Each triangle is built with"
" the new point and the two previous points. Just as in ``lines`` and "
"``faces``, this array requires a padding indicating the number of points. "
"For example, a single triangle strip of ``[0, 1, 2, 3, 6, 7, 4, 5, 0, 1]`` "
"requires padding of ``10`` and should input as ``[10, 0, 1, 2, 3, 6, 7, 4, "
"5, 0, 1]``."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData:66
msgid "**n_strips** : :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData:64
msgid ""
"Number of strips in the ``strips`` connectivity array.  While optional, "
"setting this speeds up the creation of the ``PolyData``."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData:69
msgid ""
"Whether to copy the inputs, or to create a mesh from them without copying "
"them.  Setting ``deep=True`` ensures that the original arrays can be "
"modified outside the mesh without affecting the mesh. Default is ``False``."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData:77
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read:36
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:120
msgid "**force_ext** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData:75
msgid ""
"If initializing from a file, force the reader to treat the file as if it had"
" this extension as opposed to the one in the file."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData:80
msgid ""
"Casts the datatype to ``float32`` if points datatype is non-float.  Default "
"``True``. Set this to ``False`` to allow non-float types, though this may "
"lead to truncation of intermediate floats when transforming datasets."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyData.rst:8
msgid "Create an empty mesh."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyData.rst:12
msgid "Initialize from a ``vtk.vtkPolyData`` object."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyData.rst:17
msgid "Initialize from just vertices."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyData.rst:22
msgid "Initialize from vertices and faces."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyData.rst:27
msgid "Initialize from vertices and lines."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyData.rst:32
msgid "Initialize from vertices and triangle strips."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyData.rst:37
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid:7
msgid "Initialize from a filename."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyData.rst:41
msgid "See :ref:`ref_create_poly` for more examples."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.cell_normals:2
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.face_normals:2
msgid "Return the cell normals."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.cell_normals:4
msgid ""
"If the cell data already contains an array named ``'Normals'``, this array "
"will be returned. Otherwise, the normals will be computed using the default "
"options of :func:`PolyData.compute_normals()` and returned."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.cell_normals:11
msgid "Array of cell normals."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.face_normals:4
msgid "Alias to :func:`PolyData.cell_normals`."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.face_normals:10
msgid "Array of face normals."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of pyvista.PolyData.faces:2
msgid "Return a pointer to the faces as a numpy array."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of pyvista.PolyData.faces:9
msgid "Array of face indices."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyData.rst:8
msgid ""
"Note how the faces contain a \"padding\" indicating the number of points per"
" face:"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.is_all_triangles:2
msgid ""
"Return if all the faces of the :class:`pyvista.PolyData` are triangles."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.is_all_triangles:4
msgid ""
"``is_all_triangles`` is now a property.  Calling this value will warn the "
"user that this should not be called. Additionally, the ``is`` operator will "
"not work the return value of this property since it is not a ``bool``"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.is_all_triangles:22
msgid ":obj:`CallableBool`"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.is_all_triangles:14
msgid ""
"``True`` if all the faces of the :class:`pyvista.PolyData` are triangles and"
" does not contain any vertices or lines."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.is_all_triangles:26
msgid ""
"The return value is not a ``bool`` for compatibility reasons, though this "
"behavior will change in a future release.  Future versions will simply "
"return a ``bool``."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyData.rst:3
msgid ""
"Show a mesh from :func:`pyvista.Plane` is not composed of all triangles."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyData.rst:11
msgid ""
"Show that the mesh from :func:`pyvista.Sphere` contains only triangles."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.is_manifold:2
msgid "Return if the mesh is manifold (no open edges)."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyData.rst:3
msgid "Show a sphere is manifold."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyData.rst:9
msgid "Show a plane is not manifold."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of pyvista.PolyData.lines:2
msgid "Return a pointer to the lines as a numpy array."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyData.rst:3
msgid "Return the lines from a spline."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.n_faces:4
msgid "Alias for ``n_cells``."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.n_lines:2
msgid "Return the number of lines."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.n_open_edges:2
msgid "Return the number of open edges on this mesh."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyData.rst:3
msgid "Return the number of open edges on a sphere."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyData.rst:10
msgid "Return the number of open edges on a plane."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.n_strips:2
msgid "Return the number of strips."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyData.rst:3
msgid ""
"Create a simple mesh with one triangle strip and return the number of "
"triangles."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.n_verts:2
msgid "Return the number of vertices."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyData.rst:3
msgid ""
"Create a simple mesh containing just two points and return the number of "
"vertices."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.obbTree:2
msgid "Return the obbTree of the polydata."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.obbTree:4
msgid ""
"An obbTree is an object to generate oriented bounding box (OBB) trees. An "
"oriented bounding box is a bounding box that does not necessarily line up "
"along coordinate axes. The OBB tree is a hierarchical tree structure of such"
" boxes, where deeper levels of OBB confine smaller regions of space."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.point_normals:2
msgid "Return the point normals."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.point_normals:4
msgid ""
"If the point data already contains an array named ``'Normals'``, this array "
"will be returned. Otherwise, the normals will be computed using the default "
"options of :func:`PolyData.compute_normals()` and returned."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.point_normals:11
msgid "Array of point normals."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData.save:2
msgid "Write a surface mesh to disk."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData.save:4
msgid ""
"Written file may be an ASCII or binary ply, stl, or vtk mesh file. If ply or"
" stl format is chosen, the face normals are computed in place to ensure the "
"mesh is properly saved."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData.save:11
msgid ""
"Filename of mesh to be written.  File type is inferred from the extension of"
" the filename unless overridden with ftype.  Can be one of many of the "
"supported  the following types (``'.ply'``, ``'.stl'``, ``'.vtk``)."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData.save:17
msgid "Writes the file as binary when ``True`` and ASCII when ``False``."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData.save:41
msgid ""
"**texture** : :class:`python:str`, :obj:`numpy.ndarray`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.get_data_range:8
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData.save:40
msgid "python:str, numpy.ndarray, optional"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.PolyData.save:26
msgid ""
"If a string is provided, the texture array will be saved to disk as that "
"name.  If an array is provided, the texture array will be saved as "
"``'RGBA'`` if the array contains an alpha channel (i.e. 4 component array), "
"or as ``'RGB'`` if the array is just a 3 component array."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyData.rst:3
msgid "Save a mesh as a STL."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyData.rst:9
msgid "Save a mesh as a PLY."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyData.rst:14
msgid ""
"Save a mesh as a PLY with a texture array.  Here we also create a simple RGB"
" array representing the texture."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyData.rst:24
msgid ""
"Alternatively, provide just the texture array.  This will be written to the "
"file as ``'RGB'`` since it does not contain an alpha channel."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyData.rst:30
msgid "Save a mesh as a VTK file."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.strips:2
msgid "Return a pointer to the strips as a numpy array."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.strips:9
msgid "Array of strip indices."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of pyvista.PolyData.verts:2
msgid "Get the vertex cells."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of pyvista.PolyData.verts:9
msgid "Array of vertex cell indices."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyData.rst:3
msgid "Create a point cloud polydata and return the vertex cells."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyData.rst:12
msgid ""
"Set vertex cells.  Note how the mesh plots both the surface mesh and the "
"additional vertices in a single plot."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.volume:2
msgid "Return the approximate volume of the dataset."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.PolyData.volume:4
msgid "This will throw a VTK error/warning if not a closed surface."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:2
msgid "pyvista.PolyDataFilters"
msgstr ""

#: ../../pyvista/doc/api/core/filters.rst:31:<autosummary>:1
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters:2
msgid "An internal class to manage filters/algorithms for polydata datasets."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_add:2
msgid "Merge two meshes together."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_add:4
msgid "Use :func:`PolyDataFilters.merge` instead."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_cut:2
msgid "Cut two meshes."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_cut:4
msgid "Use :func:`PolyDataFilters.boolean_difference` instead."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_difference:2
msgid "Perform a boolean difference operation between two meshes."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_difference:4
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_intersection:4
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_union:4
msgid ""
"Essentially, boolean union, difference, and intersection are all the same "
"operation. Just different parts of the objects are kept at the end."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_difference:8
msgid ""
"The difference of two manifold meshes ``A`` and ``B`` is the volume of the "
"mesh in ``A`` not belonging to ``B``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_difference:12
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_intersection:12
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_union:12
msgid ""
"If your boolean operations don't react the way you think they should (i.e. "
"the wrong parts disappear), one of your meshes probably has its normals "
"pointing inward. Use :func:`PolyDataFilters.plot_normals` to visualize the "
"normals."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_difference:19
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_intersection:25
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_union:25
msgid ""
"Both meshes must be composed of all triangles.  Check with "
":attr:`PolyData.is_all_triangles` and convert with "
":func:`PolyDataFilters.triangulate`."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_difference:23
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_union:29
msgid "Behavior changed to match default VTK behavior."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_difference:29
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_intersection:34
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_union:35
msgid "**other_mesh** : :obj:`pyvista.PolyData`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_difference:29
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_intersection:34
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_union:35
msgid "Mesh operating on the source mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_difference:32
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_intersection:37
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_union:38
msgid ""
"Tolerance used to determine when a point's absolute distance is considered "
"to be zero."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_difference:41
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_intersection:46
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_union:47
msgid "The result of the boolean operation."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:3
msgid ""
"Demonstrate a boolean difference with two spheres.  Note how the final mesh "
"only includes ``sphere_a``."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:31
msgid "See :ref:`boolean_example` for more examples using this filter."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_intersection:2
msgid "Perform a boolean intersection operation on two meshes."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_intersection:8
msgid ""
"The intersection of two manifold meshes ``A`` and ``B`` is the mesh which is"
" the volume of ``A`` that is also in ``B``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_intersection:19
msgid ""
"This method returns the \"volume\" intersection between two meshes whereas "
"the :func:`PolyDataFilters.intersection` filter returns the surface "
"intersection between two meshes (which often resolves as a line)."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:3
msgid ""
"Demonstrate a boolean intersection with two spheres.  Note how the final "
"mesh only includes the intersection of the two."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_union:2
msgid "Perform a boolean union operation on two meshes."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_union:8
msgid ""
"The union of two manifold meshes ``A`` and ``B`` is the mesh which is in "
"``A``, in ``B``, or in both ``A`` and ``B``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.boolean_union:19
msgid ""
"The behavior of this filter varies from the :func:`PolyDataFilters.merge` "
"filter.  This filter attempts to create a manifold mesh and will not include"
" internal surfaces when two meshes overlap."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:3
msgid ""
"Demonstrate a boolean union with two spheres.  Note how the final mesh "
"includes both spheres."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clean:2
msgid "Clean the mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clean:4
msgid ""
"This merges duplicate points, removes unused points, and/or removes "
"degenerate cells."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clean:10
msgid ""
"**point_merging** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clean:10
msgid "Enables point merging.  ``True`` by default."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clean:13
msgid ""
"Set merging tolerance.  When enabled merging is set to absolute distance. If"
" ``absolute`` is ``False``, then the merging tolerance is a fraction of the "
"bounding box length. The alias ``merge_tol`` is also excepted."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clean:20
msgid ""
"**lines_to_points** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clean:19
msgid ""
"Enable or disable the conversion of degenerate lines to points.  Enabled by "
"default."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clean:24
msgid ""
"**polys_to_lines** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clean:23
msgid ""
"Enable or disable the conversion of degenerate polys to lines.  Enabled by "
"default."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clean:28
msgid ""
"**strips_to_polys** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clean:27
msgid "Enable or disable the conversion of degenerate strips to polys."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clean:31
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide:38
msgid "Updates mesh in-place. Default ``False``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clean:41
msgid ""
"Accepts for ``merge_tol`` to replace the ``tolerance`` keyword argument.  "
"This may be deprecated in future."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clean:47
msgid "Cleaned mesh."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:3
msgid ""
"Create a mesh with a degenerate face and then clean it, removing the "
"degenerate face"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clip_closed_surface:2
msgid "Clip a closed polydata surface with a plane."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clip_closed_surface:4
msgid ""
"This currently only supports one plane but could be implemented to handle a "
"plane collection."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clip_closed_surface:7
msgid ""
"It will produce a new closed surface by creating new polygonal faces where "
"the input data was clipped."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clip_closed_surface:10
msgid ""
"Non-manifold surfaces should not be used as input for this filter.  The "
"input surface should have no open edges, and must not have any edges that "
"are shared by more than two faces. In addition, the input surface should not"
" self-intersect, meaning that the faces of the surface should only touch at "
"their edges."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clip_closed_surface:24
msgid ""
"**normal** : :class:`python:str`, :class:`python:list`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clip_closed_surface:23
msgid "python:str, python:list, optional"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clip_closed_surface:20
msgid ""
"Plane normal to clip with.  Plane is centered at ``origin``.  Normal can be "
"either a 3 member list (e.g. ``[0, 0, 1]``) or one of the following strings:"
" ``'x'``, ``'y'``, ``'z'``, ``'-x'``, ``'-y'``, or ``'-z'``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clip_closed_surface:28
msgid "**origin** : :class:`python:list`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clip_closed_surface:27
msgid ""
"Coordinate of the origin (e.g. ``[1, 0, 0]``).  Defaults to the center of "
"the mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clip_closed_surface:31
msgid ""
"The tolerance for creating new points while clipping.  If the tolerance is "
"too small, then degenerate triangles might be produced."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clip_closed_surface:36
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:62
msgid "Updates mesh in-place. Defaults to ``False``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.clip_closed_surface:44
msgid "The clipped mesh."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:3
msgid ""
"Clip a sphere in the X direction centered at the origin.  This will leave "
"behind half a sphere in the positive X direction."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:25
msgid ""
"Clip the sphere at the XY plane and leave behind half the sphere in the "
"positive Z direction.  Shift the clip upwards to leave a smaller mesh "
"behind."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.collision:2
msgid "Perform collision determination between two polyhedral surfaces."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.collision:4
msgid ""
"If ``collision_mode`` is set to all contacts, the output will be lines of "
"contact. If ``collision_mode`` is first contact or half contacts then the "
"Contacts output will be vertices."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.collision:9
msgid ""
"Currently only triangles are processed. Use "
":func:`PolyDataFilters.triangulate` to convert any strips or polygons to "
"triangles.  Otherwise, the mesh will be converted for you within this "
"method."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.collision:19
msgid "**other_mesh** : :obj:`pyvista.DataSet`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.collision:17
msgid ""
"Other mesh to test collision with.  If the other mesh is not a surface, its "
"external surface will be extracted and triangulated."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.collision:28
msgid "**contact_mode** : :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.collision:22
msgid "Contact mode.  One of the following:"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.collision:24
msgid ""
"0 - All contacts. Find all the contacting cell pairs with two points per "
"collision"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.collision:26
msgid "1 - First contact. Quickly find the first contact point."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.collision:27
msgid ""
"2 - Half contacts. Find all the contacting cell pairs with one point per "
"collision."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.collision:31
msgid "**box_tolerance** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.collision:31
msgid "Oriented bounding box (OBB) tree tolerance in world coordinates."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.collision:34
msgid "**cell_tolerance** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.collision:34
msgid "Cell tolerance (squared value)."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.collision:37
msgid "**n_cells_per_node** : :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.collision:37
msgid "Number of cells in each OBB."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.collision:46
msgid ""
"**generate_scalars** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.collision:40
msgid ""
"Flag to visualize the contact cells.  If ``True``, the contacting cells will"
" be colored from red through blue, with collisions first determined colored "
"red.  This array is stored as ``\"collision_rgba\"``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.collision:46
msgid "This will remove any other cell arrays in the mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.collision:54
msgid ""
"Mesh containing collisions in the ``field_data`` attribute named "
"``\"ContactCells\"``.  Array only exists when there are collisions."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.collision:59
msgid "Number of collisions."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.collision:70
msgid ""
"Due to the nature of the `vtk.vtkCollisionDetectionFilter "
"<https://vtk.org/doc/nightly/html/classvtkCollisionDetectionFilter.html>`_, "
"repeated uses of this method will be slower that using the "
"``vtk.vtkCollisionDetectionFilter`` directly.  The first update of the "
"filter creates two instances of `vtkOBBTree "
"<https://vtk.org/doc/nightly/html/classvtkOBBTree.html>`_, which can be "
"subsequently updated by modifying the transform or matrix of the input "
"meshes."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.collision:79
msgid ""
"This method assumes no transform and is easier to use for single collision "
"tests, but it is recommended to use a combination of ``pyvista`` and ``vtk``"
" for rapidly computing repeated collisions.  See the `Collision Detection "
"Example <https://kitware.github.io/vtk-"
"examples/site/Python/Visualization/CollisionDetection/>`_"
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:3
msgid ""
"Compute the collision between a sphere and the back faces of a cube and "
"output the cell indices of the first 10 collisions."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:14
msgid ""
"Plot the collisions by creating a collision mask with the "
"``\"ContactCells\"`` field data.  Cells with a collision are colored red."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:41
msgid ""
"Alternatively, simply plot the collisions using the default "
"``'collision_rgba'`` array after enabling ``generate_scalars``."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:62
msgid "See :ref:`collision_example` for more examples using this filter."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_arc_length:2
msgid "Compute the arc length over the length of the probed line."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_arc_length:4
msgid ""
"It adds a new point-data array named ``\"arc_length\"`` with the computed "
"arc length for each of the polylines in the input. For all other cell types,"
" the arc length is set to 0."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_arc_length:11
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.curvature:16
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_dilate_erode:27
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_threshold:40
msgid "Display a progress bar to indicate progress. Default ``False``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_arc_length:17
msgid "Arc length of the length of the probed line."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:10
msgid "This is identical to the geodesic_distance."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:16
msgid "You can also plot the arc_length."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:2
msgid "Compute point and/or cell normals for a mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:4
msgid ""
"The filter can reorder polygons to insure consistent orientation across "
"polygon neighbors. Sharp edges can be split and points duplicated with "
"separate normals to give crisp (rendered) surface definition. It is also "
"possible to globally flip the normal orientation."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:10
msgid ""
"The algorithm works by determining normals for each polygon and then "
"averaging them at shared points. When sharp edges are present, the edges are"
" split and new points generated to prevent blurry edges (due to Phong "
"shading)."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:18
msgid ""
"**cell_normals** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:18
msgid "Calculation of cell normals. Defaults to ``True``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:21
msgid ""
"**point_normals** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:21
msgid "Calculation of point normals. Defaults to ``True``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:26
msgid ""
"**split_vertices** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:24
msgid ""
"Splitting of sharp edges. Defaults to ``False``. Indices to the original "
"points are tracked in the ``\"pyvistaOriginalPointIds\"`` array."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:31
msgid ""
"**flip_normals** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:29
msgid ""
"Set global flipping of normal orientation. Flipping modifies both the normal"
" direction and the order of a cell's points. Defaults to ``False``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:34
msgid ""
"**consistent_normals** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:34
msgid "Enforcement of consistent polygon ordering. Defaults to ``True``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:47
msgid ""
"**auto_orient_normals** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:37
msgid ""
"Turn on/off the automatic determination of correct normal orientation. NOTE:"
" This assumes a completely closed surface (i.e. no boundary edges) and no "
"non-manifold edges. If these constraints do not hold, all bets are off. This"
" option adds some computational complexity, and is useful if you do not want"
" to have to inspect the rendered image to determine whether to turn on the "
"``flip_normals`` flag.  However, this flag can work with the "
"``flip_normals`` flag, and if both are set, all the normals in the output "
"will point \"inward\". Defaults to ``False``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:53
msgid ""
"**non_manifold_traversal** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:50
msgid ""
"Turn on/off traversal across non-manifold edges. Changing this may prevent "
"problems where the consistency of polygonal ordering is corrupted due to "
"topological loops. Defaults to ``True``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:56
msgid ""
"The angle that defines a sharp edge. If the difference in angle across "
"neighboring polygons is greater than this value, the shared edge is "
"considered \"sharp\". Defaults to 30.0."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:70
msgid "Updated mesh with cell and point normals."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:81
msgid "Previous arrays named ``\"Normals\"`` will be overwritten."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:83
msgid ""
"Normals are computed only for polygons and triangle strips. Normals are not "
"computed for lines or vertices."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:86
msgid ""
"Triangle strips are broken up into triangle polygons. You may want to "
"restrip the triangles."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.compute_normals:89
msgid ""
"It may be easier to run :func:`pyvista.PolyData.point_normals` or "
":func:`pyvista.PolyData.cell_normals` if you would just like the array of "
"point or cell normals."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:3
msgid "Compute the point normals of the surface of a sphere."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:12
msgid ""
"Alternatively, create a new mesh when computing the normals and compute both"
" cell and point normals."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.curvature:2
msgid "Return the pointwise curvature of a mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.curvature:13
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_curvature:13
msgid "**curv_type** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.curvature:8
msgid "Curvature type.  One of the following:"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.curvature:10
msgid "``\"mean\"``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.curvature:11
msgid "``\"gaussian\"``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.curvature:12
msgid "``\"maximum\"``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.curvature:13
msgid "``\"minimum\"``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.curvature:22
msgid "Array of curvature values."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:3
msgid "Calculate the mean curvature of the hills example mesh."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:11
msgid "Plot it."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:2
msgid ""
"Reduce the number of triangles in a triangular mesh using "
"``vtkQuadricDecimation``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:11
msgid "**target_reduction** : :class:`python:float`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:8
msgid ""
"Fraction of the original mesh to remove. If ``target_reduction`` is set to "
"0.9, this filter will try to reduce the data set to 10% of its original size"
" and will remove 90% of the input triangles."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:17
msgid ""
"**volume_preservation** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:14
msgid ""
"Decide whether to activate volume preservation which greatly reduces errors "
"in triangle normal direction. If ``False``, volume preservation is disabled "
"and if ``attribute_error`` is active, these errors can be large. Defaults to"
" ``False``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:24
msgid ""
"**attribute_error** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:20
msgid ""
"Decide whether to include data attributes in the error metric. If ``False``,"
" then only geometric error is used to control the decimation. Defaults to "
"``False``. If ``True``, the following flags are used to specify which "
"attributes are to be included in the error calculation."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:30
msgid ""
"**scalars** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:27
msgid ""
"If attribute errors are to be included in the metric (i.e., "
"``attribute_error`` is ``True``), then these flags control which attributes "
"are to be included in the error calculation. Defaults to ``True``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:33
msgid ""
"**vectors** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:33
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:39
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:42
msgid "See ``scalars`` parameter. Defaults to ``True``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:36
msgid ""
"**normals** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:36
msgid "See ``scalars`` parameter. Defaults to ``False``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:39
msgid ""
"**tcoords** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:42
msgid ""
"**tensors** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:47
msgid "**scalars_weight** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:45
msgid ""
"The scaling weight contribution of the scalar attribute. These values are "
"used to weight the contribution of the attributes towards the error metric. "
"Defaults to 0.1."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:50
msgid "**vectors_weight** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:50
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:53
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:56
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:59
msgid "See ``scalars_weight`` parameter. Defaults to 0.1."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:53
msgid "**normals_weight** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:56
msgid "**tcoords_weight** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:59
msgid "**tensors_weight** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:62
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate_pro:58
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.triangulate:9
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.tube:32
msgid "Whether to update the mesh in-place."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:70
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate_pro:66
msgid "Decimated mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate:81
msgid ""
"If you encounter a segmentation fault or other error, consider using "
":func:`pyvista.clean` to remove any invalid cells before using this filter."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:3
msgid "Decimate a sphere.  First plot the sphere."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:23
msgid "Now decimate it by 75% and plot it."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:42
msgid "See :ref:`decimate_example` for more examples using this filter."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate_pro:2
msgid "Reduce the number of triangles in a triangular mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate_pro:4
msgid ""
"It forms a good approximation to the original geometry. Based on the "
"algorithm originally described in \"Decimation of Triangle Meshes\", Proc "
"Siggraph 92 (https://doi.org/10.1145/133994.134010)."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate_pro:13
msgid "**reduction** : :class:`python:float`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate_pro:12
msgid ""
"Reduction factor. A value of 0.9 will leave 10% of the original number of "
"vertices."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate_pro:16
msgid ""
"Angle used to define what an edge is (i.e., if the surface normal between "
"two adjacent triangles is >= ``feature_angle``, an edge exists)."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate_pro:23
msgid "**split_angle** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate_pro:21
msgid ""
"Angle used to control the splitting of the mesh. A split line exists when "
"the surface normals between two edge connected triangles are >= "
"``split_angle``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate_pro:30
msgid ""
"**splitting** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate_pro:26
msgid ""
"Controls the splitting of the mesh at corners, along edges, at non-manifold "
"points, or anywhere else a split is required. Turning splitting off will "
"better preserve the original topology of the mesh, but may not necessarily "
"give the exact requested decimation."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate_pro:38
msgid ""
"**pre_split_mesh** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate_pro:33
msgid ""
"Separates the mesh into semi-planar patches, which are disconnected from "
"each other. This can give superior results in some cases. If "
"``pre_split_mesh`` is set to ``True``, the mesh is split with the specified "
"``split_angle``. Otherwise mesh splitting is deferred as long as possible."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate_pro:43
msgid ""
"**preserve_topology** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate_pro:41
msgid ""
"Controls topology preservation. If on, mesh splitting and hole elimination "
"will not occur. This may limit the maximum reduction that may be achieved."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate_pro:48
msgid ""
"**boundary_vertex_deletion** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate_pro:46
msgid ""
"Allow deletion of vertices on the boundary of the mesh. Defaults to "
"``True``. Turning this off may limit the maximum reduction that may be "
"achieved."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate_pro:55
msgid "**max_degree** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.decimate_pro:51
msgid ""
"The maximum vertex degree. If the number of triangles connected to a vertex "
"exceeds ``max_degree``, then the vertex will be split. The complexity of the"
" triangulation algorithm is proportional to ``max_degree**2``. Setting "
"``max_degree`` small can improve the performance of the algorithm."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:23
msgid "Now decimate it and plot it."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:2
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:2
msgid "Apply a 2D Delaunay filter along the best fitting plane."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:4
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:4
msgid ""
"This filter can be used to generate a 2d surface from a set of points on a "
"plane.  If you want to create a surface from a point cloud, see "
":func:`pyvista.PolyDataFilters.reconstruct_surface`."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:13
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:13
msgid "**tol** : :class:`python:float`, default: 1e-05"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:12
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:12
msgid "python:float, default: 1e-05"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:11
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:11
msgid ""
"Specify a tolerance to control discarding of closely spaced points. This "
"tolerance is specified as a fraction of the diagonal length of the bounding "
"box of the points."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:20
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:20
msgid "**alpha** : :class:`python:float`, default: 0.0"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:19
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:19
msgid "python:float, default: 0.0"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:16
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:16
msgid ""
"Specify alpha (or distance) value to control output of this filter. For a "
"non-zero alpha value, only edges or triangles contained within a sphere "
"centered at mesh vertices will be output. Otherwise, only triangles will be "
"output."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:24
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:24
msgid "**offset** : :class:`python:float`, default: 1.0"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:23
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:23
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_earth:7
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_jupiter:7
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_mars:7
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_mercury:7
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_moon:7
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_neptune:7
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_pluto:7
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_saturn:7
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_sun:7
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_uranus:7
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_venus:7
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cone:15
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cube:22
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cube:25
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cube:28
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cylinder:17
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CylinderStructured:15
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Dodecahedron:8
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Icosahedron:9
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Octahedron:9
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Plane:13
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Plane:16
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.PlatonicSolid:17
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Polygon:11
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Superquadric:17
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Superquadric:21
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Tetrahedron:8
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Tube:16
msgid "python:float, default: 1.0"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:23
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:23
msgid ""
"Specify a multiplier to control the size of the initial, bounding Delaunay "
"triangulation."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:31
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:31
msgid ""
"**bound** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:False`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:27
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:27
msgid ""
"Boolean controls whether bounding triangulation points and associated "
"triangles are included in the output. These are introduced as an initial "
"triangulation to begin the triangulation process. This feature is nice for "
"debugging output."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:35
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:35
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.axis_rotation:14
msgid ""
"**inplace** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:False`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:34
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:34
msgid "If ``True``, overwrite this mesh with the triangulated mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:43
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:43
msgid "**edge_source** : :obj:`pyvista.PolyData`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:42
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:42
msgid "pyvista.PolyData, optional"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:38
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:38
msgid ""
"Specify the source object used to specify constrained edges and loops. If "
"set, and lines/polygons are defined, a constrained triangulation is created."
" The lines/polygons are assumed to reference points in the input point set "
"(i.e. point ids are identical in the input and source)."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:51
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.delaunay_2d:51
msgid "Mesh from the 2D delaunay filter."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:3
#: ../../pyvista/doc/api/core/_autosummary/pyvista.UnstructuredGridFilters.rst:3
msgid "First, generate 30 points on circle and plot them."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:24
#: ../../pyvista/doc/api/core/_autosummary/pyvista.UnstructuredGridFilters.rst:24
msgid "Use :func:`delaunay_2d` to fill the interior of the circle."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:43
#: ../../pyvista/doc/api/core/_autosummary/pyvista.UnstructuredGridFilters.rst:43
msgid ""
"Use the ``edge_source`` parameter to create a constrained delaunay "
"triangulation and plot it."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:68
#: ../../pyvista/doc/api/core/_autosummary/pyvista.UnstructuredGridFilters.rst:68
msgid "See :ref:`triangulated_surface` for more examples using this filter."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.edge_mask:2
msgid ""
"Return a mask of the points of a surface mesh that has a surface angle "
"greater than angle."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.edge_mask:8
msgid "Angle to consider an edge."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.edge_mask:16
msgid "Mask of points with an angle greater than ``angle``."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:3
msgid "Plot the mask of points that exceed 45 degrees."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude:2
msgid "Sweep polygonal data creating a \"skirt\" from free edges."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude:4
msgid "This will create a line from vertices."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude:6
msgid ""
"This takes polygonal data as input and generates polygonal data on output. "
"The input dataset is swept according to some extrusion function and creates "
"new polygonal primitives. These primitives form a \"skirt\" or swept "
"surface. For example, sweeping a line results in a quadrilateral, and "
"sweeping a triangle creates a \"wedge\"."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude:13
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_rotate:19
msgid ""
"The skirt is generated by locating certain topological features. Free edges "
"(edges of polygons or triangle strips only used by one polygon or triangle "
"strips) generate surfaces. This is true also of lines or polylines. Vertices"
" generate lines."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude:19
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_rotate:29
msgid ""
"The ``capping`` keyword was added with a default of ``False``. The "
"previously used VTK default corresponds to ``capping=True``. In a future "
"version the default will be changed to ``True`` to match the behavior of the"
" underlying VTK filter."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude:28
msgid "**vector** : :obj:`numpy.ndarray` or :term:`python:sequence`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude:27
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_trim:12
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.vtk_points:8
msgid "numpy.ndarray or python:sequence"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude:28
msgid "Direction and length to extrude the mesh in."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude:40
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_rotate:62
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.tube:18
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cone:23
msgid ""
"**capping** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude:31
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_rotate:53
msgid ""
"Control if the sweep of a 2D object is capped. The default is ``False``, "
"which differs from VTK's default."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude:35
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_rotate:57
msgid ""
"The ``capping`` keyword was added in version 0.32.0 with a default value of "
"``False``. In a future version this default will be changed to ``True`` to "
"match the behavior of the underlying VTK filter. It is recommended to "
"explicitly pass a value for this keyword argument to prevent future changes "
"in behavior and warnings."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude:43
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_trim:39
msgid "Overwrites the original mesh in-place."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude:51
msgid "Extruded mesh."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:3
msgid "Extrude a half circle arc."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:24
msgid "Extrude and cap an 8 sided polygon."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_rotate:2
msgid ""
"Sweep polygonal data creating \"skirt\" from free edges and lines, and lines"
" from vertices."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_rotate:4
msgid ""
"This takes polygonal data as input and generates polygonal data on output. "
"The input dataset is swept around the axis to create new polygonal "
"primitives. These primitives form a \"skirt\" or swept surface. For example,"
" sweeping a line results in a cylindrical shell, and sweeping a circle "
"creates a torus."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_rotate:10
msgid ""
"There are a number of control parameters for this filter.  You can control "
"whether the sweep of a 2D object (i.e., polygon or triangle strip) is capped"
" with the generating geometry via the ``capping`` parameter. Also, you can "
"control the angle of rotation, and whether translation along the axis is "
"performed along with the rotation.  (Translation is useful for creating "
"\"springs\".) You also can adjust the radius of the generating geometry with"
" the ``dradius`` parameter."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_rotate:25
msgid ""
"This filter can be used to model axisymmetric objects like cylinders, "
"bottles, and wine glasses; or translational rotational symmetric objects "
"like springs or corkscrews."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_rotate:38
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Line:14
msgid "Number of pieces to divide line into."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_rotate:41
msgid "Overwrites the original mesh inplace."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_rotate:44
msgid "**translation** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_rotate:44
msgid "Total amount of translation along the axis."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_rotate:47
msgid "**dradius** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_rotate:47
msgid "Change in radius during sweep process."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_rotate:50
msgid "The angle of rotation in degrees."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_rotate:66
msgid ""
"**rotation_axis** : :obj:`numpy.ndarray` or :term:`python:sequence`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_rotate:65
msgid "numpy.ndarray or python:sequence, optional"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_rotate:65
msgid ""
"The direction vector of the axis around which the rotation is done. It "
"requires vtk>=9.1.0."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_rotate:74
msgid "Rotationally extruded mesh."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:3
msgid "Create a \"spring\" using the rotational extrusion filter."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:27
msgid "Create a \"wine glass\" using the rotational extrusion filter."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_trim:2
msgid "Extrude polygonal data trimmed by a surface."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_trim:4
msgid ""
"The input dataset is swept along a specified direction forming a \"skirt\" "
"from the boundary edges 2D primitives (i.e., edges used by only one "
"polygon); and/or from vertices and lines. The extent of the sweeping is "
"defined where the sweep intersects a user-specified surface."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_trim:13
msgid "**direction** : :obj:`numpy.ndarray` or :term:`python:sequence`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_trim:13
msgid "Direction vector to extrude."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_trim:16
msgid "**trim_surface** : :obj:`pyvista.PolyData`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_trim:16
msgid "Surface which trims the surface."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_trim:26
msgid ""
"**extrusion** : :class:`python:str` or :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_trim:19
msgid "Control the strategy of extrusion. One of the following:"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_trim:21
msgid "``\"boundary_edges\"``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_trim:22
msgid "``\"all_edges\"``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_trim:24
msgid ""
"The default is ``\"boundary_edges\"``, which only generates faces on the "
"boundary of the original input surface. When using ``\"all_edges\"``, faces "
"are created along interior points as well."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_trim:36
msgid ""
"**capping** : :class:`python:str` or :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_trim:29
msgid "Control the strategy of capping. One of the following:"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_trim:31
msgid "``\"intersection\"``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_trim:32
msgid "``\"minimum_distance\"``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_trim:33
msgid "``\"maximum_distance\"``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_trim:34
msgid "``\"average_distance\"``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_trim:36
msgid "The default is \"intersection\"."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.extrude_trim:47
msgid "Extruded mesh trimmed by a surface."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:3
msgid "Extrude a disc."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.fill_holes:2
msgid "Fill holes in a pyvista.PolyData or vtk.vtkPolyData object."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.fill_holes:4
msgid ""
"Holes are identified by locating boundary edges, linking them together into "
"loops, and then triangulating the resulting loops. Note that you can specify"
" an approximate limit to the size of the hole that can be filled."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.fill_holes:10
msgid "This method is known to segfault.  Use at your own risk."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.fill_holes:19
msgid "**hole_size** : :class:`python:float`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.fill_holes:15
msgid ""
"Specifies the maximum hole size to fill. This is represented as a radius to "
"the bounding circumsphere containing the hole. Note that this is an "
"approximate area; the actual area cannot be computed without first "
"triangulating the hole."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.fill_holes:22
msgid "Return new mesh or overwrite input."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.fill_holes:30
msgid "Mesh with holes filled if ``inplace=False``."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:3
msgid "Create a partial sphere with a hole and then fill it."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.flip_normals:2
msgid "Flip normals of a triangular mesh by reversing the point ordering."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:3
msgid ""
"Flip the normals of a sphere and plot the normals before and after the flip."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.geodesic:2
msgid ""
"Calculate the geodesic path between two vertices using Dijkstra's algorithm."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.geodesic:4
msgid ""
"This will add an array titled ``'vtkOriginalPointIds'`` of the input mesh's "
"point ids to the output mesh. The default behavior of the underlying "
"``vtkDijkstraGraphGeodesicPath`` filter is that the geodesic path is "
"reversed in the resulting mesh. This is overridden in PyVista by default."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.geodesic:13
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.geodesic_distance:8
msgid "**start_vertex** : :class:`python:int`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.geodesic:13
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.geodesic_distance:8
msgid "Vertex index indicating the start point of the geodesic segment."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.geodesic:16
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.geodesic_distance:11
msgid "**end_vertex** : :class:`python:int`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.geodesic:16
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.geodesic_distance:11
msgid "Vertex index indicating the end point of the geodesic segment."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.geodesic:19
msgid ""
"Whether the input mesh should be replaced with the path. The geodesic path "
"is always returned."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.geodesic:26
msgid ""
"**keep_order** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.geodesic:23
msgid ""
"If ``True``, the points of the returned path are guaranteed to start with "
"the start vertex (as opposed to the end vertex)."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.geodesic:34
msgid ""
"``PolyData`` object consisting of the line segment between the two given "
"vertices. If ``inplace`` is ``True`` this is the same object as the input "
"mesh."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:3
msgid "Plot the path between two points on the random hills mesh."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:9
#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:28
msgid "See :ref:`geodesic_example` for more examples using this filter."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.geodesic_distance:2
msgid ""
"Calculate the geodesic distance between two vertices using Dijkstra's "
"algorithm."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.geodesic_distance:19
msgid "Length of the geodesic segment."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.intersection:2
msgid "Compute the intersection between two meshes."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.intersection:5
msgid ""
"This method returns the surface intersection from two meshes (which often "
"resolves as a line), whereas the "
":func:`PolyDataFilters.boolean_intersection` filter returns the \"volume\" "
"intersection between two closed (manifold) meshes."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.intersection:14
msgid "**mesh** : :obj:`pyvista.PolyData`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.intersection:14
msgid "The mesh to intersect with."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.intersection:18
msgid ""
"**split_first** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.intersection:17
msgid ""
"If ``True``, return the first input mesh split by the intersection with the "
"second input mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.intersection:22
msgid ""
"**split_second** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.intersection:21
msgid ""
"If ``True``, return the second input mesh split by the intersection with the"
" first input mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.intersection:30
msgid "The intersection line."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.intersection:33
msgid ""
"The first mesh split along the intersection. Returns the original first mesh"
" if ``split_first=False``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.intersection:37
msgid ""
"The second mesh split along the intersection. Returns the original second "
"mesh if ``split_second=False``."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:3
msgid ""
"Intersect two spheres, returning the intersection and both spheres which "
"have new points/cells along the intersection line."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:32
msgid ""
"The mesh splitting takes additional time and can be turned off for either "
"mesh individually."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.merge:2
msgid "Merge this mesh with one or more datasets."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.merge:5
msgid ""
"The behavior of this filter varies from the "
":func:`PolyDataFilters.boolean_union` filter.  This filter does not attempt "
"to create a manifold mesh and will include internal surfaces when two meshes"
" overlap."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.merge:11
msgid ""
"The ``+`` operator between two meshes uses this filter with the default "
"parameters. When the other mesh is also a :class:`pyvista.PolyData`, in-"
"place merging via ``+=`` is similarly possible."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.merge:19
msgid "PyVista dataset to merge this mesh with."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.merge:22
msgid "Merge equivalent points when ``True``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.merge:25
msgid ""
"Updates grid inplace when ``True`` if the input type is a "
":class:`pyvista.PolyData`. For other input meshes the result is a "
":class:`pyvista.UnstructuredGrid` which makes in-place operation impossible."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.merge:31
msgid ""
"When this parameter is ``True`` and ``merge_points=True``, the arrays of the"
" merging grids will be overwritten by the original main mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.merge:41
msgid ""
":class:`pyvista.PolyData` if ``dataset`` is a :class:`pyvista.PolyData`, "
"otherwise a :class:`pyvista.UnstructuredGrid`."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.multi_ray_trace:2
msgid "Perform multiple ray trace calculations."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.multi_ray_trace:4
msgid ""
"This requires a mesh with only triangular faces, an array of origin points "
"and an equal sized array of direction vectors to trace along."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.multi_ray_trace:8
msgid ""
"The embree library used for vectorization of the ray traces is known to "
"occasionally return no intersections where the VTK implementation would "
"return an intersection.  If the result appears to be missing some "
"intersection points, set ``retry=True`` to run a second pass over rays that "
"returned no intersections, using :func:`PolyDataFilters.ray_trace`."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.multi_ray_trace:18
msgid "**origins** : :term:`python:sequence`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.multi_ray_trace:18
msgid "Starting point for each trace."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.multi_ray_trace:21
msgid "**directions** : :term:`python:sequence`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.multi_ray_trace:21
msgid "Direction vector for each trace."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.multi_ray_trace:24
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ray_trace:16
msgid ""
"**first_point** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.multi_ray_trace:24
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ray_trace:16
msgid "Returns intersection of first point only."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.multi_ray_trace:28
msgid "**retry** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.multi_ray_trace:27
msgid ""
"Will retry rays that return no intersections using "
":func:`PolyDataFilters.ray_trace`."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.multi_ray_trace:34
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ray_trace:28
msgid "**intersection_points** : :obj:`numpy.ndarray`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.multi_ray_trace:33
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ray_trace:27
msgid "Location of the intersection points.  Empty array if no intersections."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.multi_ray_trace:38
msgid "**intersection_rays** : :obj:`numpy.ndarray`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.multi_ray_trace:37
msgid ""
"Indices of the ray for each intersection point. Empty array if no "
"intersections."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.multi_ray_trace:51
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ray_trace:41
msgid "**intersection_cells** : :obj:`numpy.ndarray`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.multi_ray_trace:41
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ray_trace:31
msgid "Indices of the intersection cells.  Empty array if no intersections."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:3
msgid ""
"Compute the intersection between rays from the origin in directions ``[1, 0,"
" 0]``, ``[0, 1, 0]`` and ``[0, 0, 1]``, and a sphere with radius 0.5 "
"centered at the origin"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_boundaries:2
msgid "Plot boundaries of a mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_boundaries:8
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:75
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:46
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:14
msgid "**edge_color** : :obj:`color_like`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_boundaries:8
msgid "The color of the edges when they are added to the plotter."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_boundaries:11
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:11
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes_at_origin:26
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:29
msgid "**line_width** : :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_boundaries:11
msgid "Width of the boundary lines."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_boundaries:17
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_normals:30
msgid ""
"All additional keyword arguments will be passed to "
":func:`pyvista.BasePlotter.add_mesh`."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_boundaries:33
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_curvature:31
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_normals:46
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.Renderer.camera_position:21
msgid ":obj:`pyvista.CameraPosition`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_boundaries:23
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_curvature:21
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_normals:36
msgid ""
"List of camera position, focal point, and view up. Returned when "
"``return_cpos`` is ``True``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_curvature:2
msgid "Plot the curvature."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_curvature:8
msgid "One of the following strings indicating curvature type:"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_curvature:10
msgid "``'Mean'``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_curvature:11
msgid "``'Gaussian'``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_curvature:12
msgid "``'Maximum'``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_curvature:13
msgid "``'Minimum'``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_curvature:16
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot_arrows:15
msgid "See :func:`pyvista.plot`."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:3
msgid ""
"Plot the Gaussian curvature of an example mesh.  Override the default scalar"
" bar range as the mesh edges report high curvature."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_normals:2
msgid "Plot the point normals of a mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_normals:8
msgid ""
"**show_mesh** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_normals:8
msgid "Plot the mesh itself.  Defaults to ``True``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_normals:11
msgid "**mag** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_normals:11
msgid "Size magnitude of the normal arrows.  Defaults to 1.0."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_normals:15
msgid "**flip** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_normals:14
msgid "Flip the normal direction when ``True``.  Default ``False``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_normals:20
msgid "**use_every** : :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_normals:18
msgid ""
"Display every nth normal.  By default every normal is displayed.  Display "
"every 10th normal by setting this parameter to 10."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_normals:23
msgid "**faces** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_normals:23
msgid "Plot face normals instead of the default point normals."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.plot_normals:26
msgid ""
"Color of the arrows.  Defaults to "
":attr:`pyvista.themes.DefaultTheme.edge_color`."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:3
msgid "Plot the point normals of a sphere."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:9
msgid "Plot the face normals of a sphere."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.project_points_to_plane:2
msgid "Project points of this mesh to a plane."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.project_points_to_plane:10
msgid ""
"**origin** : :obj:`numpy.ndarray` or :obj:`collections.abc.Sequence`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.project_points_to_plane:9
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.project_points_to_plane:12
msgid "numpy.ndarray or collections.abc.Sequence, optional"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.project_points_to_plane:8
msgid ""
"Plane origin.  Defaults to the approximate center of the input mesh minus "
"half the length of the input mesh in the direction of the normal."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.project_points_to_plane:13
msgid ""
"**normal** : :obj:`numpy.ndarray` or :obj:`collections.abc.Sequence`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.project_points_to_plane:13
msgid "Plane normal.  Defaults to +Z, i.e. ``[0, 0, 1]``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.project_points_to_plane:16
msgid "Whether to overwrite the original mesh with the projected points."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.project_points_to_plane:22
msgid "The points of this mesh projected onto a plane."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:3
msgid "Flatten a sphere to the XY plane."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ray_trace:2
msgid "Perform a single ray trace calculation."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ray_trace:4
msgid ""
"This requires a mesh and a line segment defined by an origin and end_point."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ray_trace:10
msgid "**origin** : :obj:`np.ndarray <numpy.ndarray>` or :class:`python:list`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ray_trace:10
msgid "Start of the line segment."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ray_trace:13
msgid ""
"**end_point** : :obj:`np.ndarray <numpy.ndarray>` or :class:`python:list`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ray_trace:13
msgid "End of the line segment."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ray_trace:19
msgid "**plot** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ray_trace:19
msgid "Whether to plot the ray trace results."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ray_trace:22
msgid "Plots off screen when ``plot=True``.  Used for unit testing."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:3
msgid ""
"Compute the intersection between a ray from the origin to ``[1, 0, 0]`` and "
"a sphere with radius 0.5 centered at the origin."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:13
msgid "Show a plot of the ray trace."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:17
msgid "See :ref:`ray_trace_example` for more examples using this filter."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.reconstruct_surface:2
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.reconstruct_surface:2
msgid "Reconstruct a surface from the points in this dataset."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.reconstruct_surface:4
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.reconstruct_surface:4
msgid ""
"This filter takes a list of points assumed to lie on the surface of a solid "
"3D object. A signed measure of the distance to the surface is computed and "
"sampled on a regular grid. The grid can then be contoured at zero to extract"
" the surface. The default values for neighborhood size and sample spacing "
"should give reasonable results for most uses but can be set if desired."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.reconstruct_surface:12
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.reconstruct_surface:12
msgid ""
"This is helpful when generating surfaces from point clouds and is more "
"reliable than :func:`DataSetFilters.delaunay_3d`."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.reconstruct_surface:26
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.reconstruct_surface:26
msgid "**nbr_sz** : :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.reconstruct_surface:18
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.reconstruct_surface:18
msgid ""
"Specify the number of neighbors each point has, used for estimating the "
"local surface orientation."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.reconstruct_surface:21
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.reconstruct_surface:21
msgid ""
"The default value of 20 should be fine for most applications, higher values "
"can be specified if the spread of points is uneven. Values as low as 10 may "
"yield adequate results for some surfaces. Higher values cause the algorithm "
"to take longer and will cause errors on sharp boundaries."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.reconstruct_surface:30
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.reconstruct_surface:30
msgid "**sample_spacing** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.reconstruct_surface:29
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.reconstruct_surface:29
msgid ""
"The spacing of the 3D sampling grid.  If not set, a reasonable guess will be"
" made."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.reconstruct_surface:38
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.reconstruct_surface:38
msgid "Reconstructed surface."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:3
#: ../../pyvista/doc/api/core/_autosummary/pyvista.UnstructuredGridFilters.rst:3
msgid ""
"Create a point cloud out of a sphere and reconstruct a surface from it."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:32
#: ../../pyvista/doc/api/core/_autosummary/pyvista.UnstructuredGridFilters.rst:32
msgid ""
"See :ref:`surface_reconstruction_example` for more examples using this "
"filter."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.remove_points:2
msgid "Rebuild a mesh by removing points."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.remove_points:4
msgid "Only valid for all-triangle meshes."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.remove_points:11
msgid "**remove** : :obj:`np.ndarray <numpy.ndarray>`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.remove_points:9
msgid ""
"If remove is a bool array, points that are ``True`` will be removed.  "
"Otherwise, it is treated as a list of indices."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.remove_points:15
msgid "**mode** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.remove_points:14
msgid ""
"When ``'all'``, only faces containing all points flagged for removal will be"
" removed.  Default ``'any'``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.remove_points:19
msgid ""
"**keep_scalars** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.remove_points:18
msgid ""
"When ``True``, point and cell scalars will be passed on to the new mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.remove_points:22
msgid "Updates mesh in-place.  Defaults to ``False``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.remove_points:27
msgid "Mesh without the points flagged for removal."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.remove_points:30
msgid "Indices of new points relative to the original mesh."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:3
msgid "Remove the first 100 points from a sphere."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ribbon:2
msgid "Create a ribbon of the lines in this dataset."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ribbon:5
msgid ""
"If there are no lines in the input dataset, then the output will be an empty"
" :class:`pyvista.PolyData` mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ribbon:13
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.line:19
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D:19
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Pen:12
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_border:11
msgid "**width** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ribbon:11
msgid ""
"Set the \"half\" width of the ribbon. If the width is allowed to vary, this "
"is the minimum width. The default is 10% the length."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ribbon:16
msgid ""
"String name of the scalars array to use to vary the ribbon width.  This is "
"only used if a scalars array is specified."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ribbon:20
msgid ""
"Angle in degrees of the offset angle of the ribbon from the line normal. The"
" default is 0.0."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ribbon:24
msgid ""
"Set the maximum ribbon width in terms of a multiple of the minimum width. "
"The default is 2.0."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ribbon:28
msgid ""
"**normal** : :class:`python:tuple`\\(:class:`python:float`), :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ribbon:28
msgid "Normal to use as default."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ribbon:33
msgid ""
"**tcoords** : :ref:`bool <python:bltin-boolean-values>`, "
":class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ribbon:31
msgid ""
"If ``True``, generate texture coordinates along the ribbon. This can also be"
" specified to generate the texture coordinates with either ``'length'`` or "
"``'normalized'``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ribbon:36
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.tube:28
msgid "The field preference when searching for the scalars array by name."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.ribbon:45
msgid "Ribbon mesh.  Empty if there are no lines in the input dataset."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:3
msgid "Convert a line to a ribbon and plot it."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth:2
msgid "Adjust point coordinates using Laplacian smoothing."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth:4
msgid ""
"The effect is to \"relax\" the mesh, making the cells better shaped and the "
"vertices more evenly distributed."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth:10
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth_taubin:20
msgid "**n_iter** : :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth:10
msgid "Number of iterations for Laplacian smoothing."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth:15
msgid "**relaxation_factor** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth:13
msgid ""
"Relaxation factor controls the amount of displacement in a single iteration."
" Generally a lower relaxation factor and higher number of iterations is "
"numerically more stable."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth:19
msgid "**convergence** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth:18
msgid ""
"Convergence criterion for the iteration process. Smaller numbers result in "
"more smoothing iterations. Range from (0 to 1)."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth:22
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth_taubin:28
msgid "**edge_angle** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth:22
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth_taubin:27
msgid ""
"Edge angle to control smoothing along edges (either interior or boundary)."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth:25
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth_taubin:31
msgid "Feature angle for sharp edge identification."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth:29
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth_taubin:35
msgid ""
"**boundary_smoothing** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth:28
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth_taubin:34
msgid ""
"Flag to control smoothing of boundary edges. When ``True``, boundary edges "
"remain fixed. Default ``True``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth:34
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth_taubin:40
msgid ""
"**feature_smoothing** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth:32
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth_taubin:38
msgid ""
"Flag to control smoothing of feature edges.  When ``True``, boundary edges "
"remain fixed as defined by ``feature_angle`` and ``edge_angle``. Default "
"``False``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth:45
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth_taubin:62
msgid "Smoothed mesh."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:3
msgid "Smooth the edges of an all triangular cube"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth_taubin:2
msgid "Smooth a PolyData DataSet with Taubin smoothing."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth_taubin:4
msgid ""
"This filter allows you to smooth the mesh as in the Laplacian smoothing "
"implementation in :func:`smooth() <PolyDataFilters.smooth>`. However, unlike"
" Laplacian smoothing the surface does not \"shrink\" since this filter "
"relies on an alternative approach to smoothing. This filter is more akin to "
"a low pass filter where undesirable high frequency features are removed."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth_taubin:11
msgid ""
"This PyVista filter uses the VTK `vtkWindowedSincPolyDataFilter "
"<https://vtk.org/doc/nightly/html/classvtkWindowedSincPolyDataFilter.html>`_"
" filter."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth_taubin:18
msgid ""
"This is the degree of the polynomial used to approximate the windowed sync "
"function. This is generally much less than the number needed by "
":func:`smooth() <PolyDataFilters.smooth>`."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth_taubin:24
msgid "**pass_band** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth_taubin:23
msgid ""
"The passband value for the windowed sinc filter. This should be between 0 "
"and 2, where lower values cause more smoothing."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth_taubin:43
msgid ""
"**non_manifold_smoothing** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth_taubin:43
msgid "Smooth non-manifold points, default ``False``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth_taubin:51
msgid ""
"**normalize_coordinates** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth_taubin:46
msgid ""
"Flag to control coordinate normalization. To improve the numerical stability"
" of the solution and minimize the scaling of the translation effects, the "
"algorithm can translate and scale the position coordinates to within the "
"unit cube ``[-1, 1]``, perform the smoothing, and translate and scale the "
"position coordinates back to the original coordinate frame. This defaults to"
" ``False``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth_taubin:73
msgid ""
"For maximum performance, do not enable ``feature_smoothing`` or "
"``boundary_smoothing``. ``feature_smoothing`` is especially expensive."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth_taubin:77
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dicom_stack:29
msgid "References"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.smooth_taubin:78
msgid ""
"See `Optimal Surface Smoothing as Filter Design "
"<https://dl.acm.org/doi/pdf/10.1145/218380.218473>` for details regarding "
"the implementation of Taubin smoothing."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:3
msgid ""
"Smooth the example bone mesh. Here, it's necessary to subdivide the mesh to "
"increase the number of faces as the original mesh is so coarse."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.strip:2
msgid "Strip poly data cells."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.strip:4
msgid ""
"Generates triangle strips and/or poly-lines from input polygons, triangle "
"strips, and lines."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.strip:7
msgid ""
"Polygons are assembled into triangle strips only if they are triangles; "
"other types of polygons are passed through to the output and not stripped. "
"(Use ``triangulate`` filter to triangulate non-triangular polygons prior to "
"running this filter if you need to strip all the data.) The filter will pass"
" through (to the output) vertices if they are present in the input polydata."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.strip:15
msgid ""
"Also note that if triangle strips or polylines are defined in the input they"
" are passed through and not joined nor extended. (If you wish to strip these"
" use ``triangulate`` filter to fragment the input into triangles and lines "
"prior to running this filter.)"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.strip:21
msgid ""
"This filter implements `vtkStripper "
"<https://vtk.org/doc/nightly/html/classvtkStripper.html>`_"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.strip:29
msgid "**join** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.strip:27
msgid ""
"If ``True``, the output polygonal segments will be joined if they are "
"contiguous. This is useful after slicing a surface. The default is "
"``False``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.strip:33
msgid "**max_length** : :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.strip:32
msgid ""
"Specify the maximum number of triangles in a triangle strip, and/or the "
"maximum number of lines in a poly-line."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.strip:36
msgid ""
"Enable/Disable passing of the CellData in the input to the output as "
"FieldData. Note the field data is transformed. Default is ``False``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.strip:44
msgid ""
"**pass_cell_ids** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.strip:41
msgid ""
"If ``True``, the output polygonal dataset will have a celldata array that "
"holds the cell index of the original 3D cell that produced each output cell."
" This is useful for picking. The default is ``False`` to conserve memory."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.strip:50
msgid ""
"**pass_point_ids** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.strip:47
msgid ""
"If ``True``, the output polygonal dataset will have a pointdata array that "
"holds the point index of the original vertex that produced each output "
"vertex. This is useful for picking. The default is ``False`` to conserve "
"memory."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.strip:58
msgid "Stripped mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide:2
msgid ""
"Increase the number of triangles in a single, connected triangular mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide:4
msgid "Uses one of the following vtk subdivision filters to subdivide a mesh:"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide:6
msgid "``vtkButterflySubdivisionFilter``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide:7
msgid "``vtkLoopSubdivisionFilter``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide:8
msgid "``vtkLinearSubdivisionFilter``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide:10
msgid ""
"Linear subdivision results in the fastest mesh subdivision, but it does not "
"smooth mesh edges, but rather splits each triangle into 4 smaller triangles."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide:14
msgid ""
"Butterfly and loop subdivision perform smoothing when dividing, and may "
"introduce artifacts into the mesh when dividing."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide:19
msgid ""
"Subdivision filter sometimes fails for multiple part meshes.  The input "
"should be one connected mesh."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide:28
msgid "**nsub** : :class:`python:int`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide:25
msgid ""
"Number of subdivisions.  Each subdivision creates 4 new triangles, so the "
"number of resulting triangles is ``nface*4**nsub`` where ``nface`` is the "
"current number of faces."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide:35
msgid "**subfilter** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide:31
msgid "Can be one of the following:"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide:33
msgid "``'butterfly'``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide:34
msgid "``'loop'``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide:35
msgid "``'linear'``"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide:46
#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide_adaptive:57
msgid "Subdivided mesh."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:3
msgid "First, create an example coarse sphere mesh and plot it."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:24
msgid "Subdivide the sphere mesh using linear subdivision."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:43
msgid "Subdivide the sphere mesh using loop subdivision."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:62
msgid "Subdivide the sphere mesh using butterfly subdivision."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide_adaptive:2
msgid ""
"Increase the number of triangles in a triangular mesh based on edge and/or "
"area metrics."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide_adaptive:4
msgid ""
"This filter uses a simple case-based, multi-pass approach to repeatedly "
"subdivide the input triangle mesh to meet the area and/or edge length "
"criteria. New points may be inserted only on edges; depending on the number "
"of edges to be subdivided a different number of triangles are inserted "
"ranging from two (i.e., two triangles replace the original one) to four."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide_adaptive:11
msgid ""
"Point and cell data is treated as follows: The cell data from a parent "
"triangle is assigned to its subdivided children. Point data is interpolated "
"along edges as the edges are subdivided."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide_adaptive:16
msgid ""
"This filter retains mesh watertightness if the mesh was originally "
"watertight; and the area and max triangles criteria are not used."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide_adaptive:25
msgid "**max_edge_len** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide_adaptive:23
msgid ""
"The maximum edge length that a triangle may have. Edges longer than this "
"value are split in half and the associated triangles are modified "
"accordingly."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide_adaptive:31
msgid "**max_tri_area** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide_adaptive:28
msgid ""
"The maximum area that a triangle may have. Triangles larger than this value "
"are subdivided to meet this threshold. Note that if this criterion is used "
"it may produce non-watertight meshes as a result."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide_adaptive:39
msgid "**max_n_tris** : :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide_adaptive:34
msgid ""
"The maximum number of triangles that can be created. If the limit is hit, it"
" may result in premature termination of the algorithm and the results may be"
" less than satisfactory (for example non-watertight meshes may be created). "
"By default, the limit is set to a very large number (i.e., no effective "
"limit)."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide_adaptive:46
msgid "**max_n_passes** : :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.subdivide_adaptive:42
msgid ""
"The maximum number of passes (i.e., levels of subdivision). If the limit is "
"hit, then the subdivision process stops and additional passes (needed to "
"meet other criteria) are aborted. The default limit is set to a very large "
"number (i.e., no effective limit)."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:3
msgid "First, load the example airplane mesh and plot it."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:24
msgid "Subdivide the mesh"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.tube:2
msgid "Generate a tube around each input line."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.tube:4
msgid ""
"The radius of the tube can be set to linearly vary with a scalar value."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.tube:10
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Tube:17
msgid "Minimum tube radius (minimum because the tube radius may vary)."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.tube:14
msgid "Scalars array by which the radius varies."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.tube:17
msgid "Turn on/off whether to cap the ends with polygons. Default ``True``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.tube:21
msgid "**n_sides** : :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.tube:21
msgid "Set the number of sides for the tube. Minimum of 3."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.tube:25
msgid "**radius_factor** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.tube:24
msgid "Maximum tube radius in terms of a multiple of the minimum radius."
msgstr ""

#: ../../pyvista/pyvista/core/filters/poly_data.pydocstring of
#: pyvista.core.filters.poly_data.PolyDataFilters.tube:40
msgid "Tube-filtered mesh."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:3
msgid "Convert a single line to a tube."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.PolyDataFilters.rst:28
msgid "See :ref:`create_spline_example` for more examples using this filter."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.RectilinearGrid.rst:2
msgid "pyvista.RectilinearGrid"
msgstr ""

#: ../../pyvista/doc/api/core/grids.rst:60:<autosummary>:1
#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.RectilinearGrid:2
msgid "Dataset with variable spacing in the three coordinate directions."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.RectilinearGrid:6
#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.UniformGrid:6
msgid "Create empty grid"
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.RectilinearGrid:7
msgid "Initialize from a ``vtk.vtkRectilinearGrid`` object"
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.RectilinearGrid:8
msgid "Initialize directly from the point arrays"
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.RectilinearGrid:17
msgid ""
"**uinput** : :class:`python:str`, :obj:`pathlib.Path`, "
":obj:`vtk.vtkRectilinearGrid`, :obj:`numpy.ndarray`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.RectilinearGrid:16
msgid ""
"python:str, pathlib.Path, vtk.vtkRectilinearGrid, numpy.ndarray, optional"
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.RectilinearGrid:13
msgid ""
"Filename, dataset, or array to initialize the rectilinear grid from. If a "
"filename is passed, pyvista will attempt to load it as a "
":class:`RectilinearGrid`. If passed a ``vtk.vtkRectilinearGrid``, it will be"
" wrapped. If a :class:`numpy.ndarray` is passed, this will be loaded as the "
"x range."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.RectilinearGrid:21
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid:31
msgid "**y** : :obj:`numpy.ndarray`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.RectilinearGrid:20
#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.RectilinearGrid:24
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid:30
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid:34
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:27
msgid "numpy.ndarray, optional"
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.RectilinearGrid:20
msgid ""
"Coordinates of the points in y direction. If this is passed, ``uinput`` must"
" be a :class:`numpy.ndarray`."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.RectilinearGrid:25
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid:35
msgid "**z** : :obj:`numpy.ndarray`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.RectilinearGrid:24
msgid ""
"Coordinates of the points in z direction. If this is passed, ``uinput`` and "
"``y`` must be a :class:`numpy.ndarray`."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.RectilinearGrid:30
msgid ""
"**check_duplicates** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.RectilinearGrid:28
msgid ""
"Check for duplications in any arrays that are passed. Defaults to ``False``."
" If ``True``, an error is raised if there are any duplicate values in any of"
" the array-valued input arguments."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.RectilinearGrid:33
msgid ""
"Whether to deep copy a ``vtk.vtkRectilinearGrid`` object. Default is "
"``False``.  Keyword only."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.RectilinearGrid.rst:7
msgid "Create an empty grid."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.RectilinearGrid.rst:11
msgid "Initialize from a vtk.vtkRectilinearGrid object"
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.RectilinearGrid.rst:16
#: ../../pyvista/doc/api/core/_autosummary/pyvista.StructuredGrid.rst:16
msgid "Create from NumPy arrays."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.RectilinearGrid.cast_to_structured_grid:2
msgid "Cast this rectilinear grid to a structured grid."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.RectilinearGrid.cast_to_structured_grid:21
#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.UniformGrid.cast_to_structured_grid:21
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid.hide_cells:28
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_structured:18
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CylinderStructured:43
msgid ":obj:`pyvista.StructuredGrid`"
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.RectilinearGrid.cast_to_structured_grid:9
#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.UniformGrid.cast_to_structured_grid:9
msgid "This grid as a structured grid."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.RectilinearGrid.dimensions:2
msgid "Return the grid's dimensions."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.RectilinearGrid.dimensions:4
msgid ""
"These are effectively the number of points along each of the three dataset "
"axes."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.RectilinearGrid.rst:3
msgid "Create a uniform grid with dimensions ``(1, 2, 3)``."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.RectilinearGrid.rst:25
msgid "Set the dimensions to ``(3, 4, 5)``"
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.RectilinearGrid.meshgrid:2
msgid "Return a meshgrid of numpy arrays for this mesh."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.RectilinearGrid.meshgrid:4
msgid ""
"This simply returns a :func:`numpy.meshgrid` of the coordinates for this "
"mesh in ``ij`` indexing. These are a copy of the points of this mesh."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.RectilinearGrid.points:2
msgid "Return a copy of the points as an n by 3 numpy array."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.RectilinearGrid.points:16
msgid ""
"Points of a :class:`pyvista.RectilinearGrid` cannot be set. Set point "
"coordinates with :attr:`RectilinearGrid.x`, :attr:`RectilinearGrid.y`, or "
":attr:`RectilinearGrid.z`."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.RectilinearGrid.x:2
msgid "Return or set the coordinates along the X-direction."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.RectilinearGrid.rst:3
msgid "Return the x coordinates of a RectilinearGrid."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.RectilinearGrid.rst:14
msgid "Set the x coordinates of a RectilinearGrid."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.RectilinearGrid.y:2
msgid "Return or set the coordinates along the Y-direction."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.RectilinearGrid.rst:3
msgid "Return the y coordinates of a RectilinearGrid."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.RectilinearGrid.rst:14
msgid "Set the y coordinates of a RectilinearGrid."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.RectilinearGrid.z:2
msgid "Return or set the coordinates along the Z-direction."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.RectilinearGrid.rst:3
msgid "Return the z coordinates of a RectilinearGrid."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.RectilinearGrid.rst:14
msgid "Set the z coordinates of a RectilinearGrid."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.StructuredGrid.rst:2
msgid "pyvista.StructuredGrid"
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:83:<autosummary>:1
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid:2
msgid "Dataset used for topologically regular arrays of data."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid:4
msgid "Can be initialized in one of the following several ways:"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid:6
msgid "Create empty grid."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid:8
msgid "Initialize from a ``vtk.vtkStructuredGrid`` object."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid:9
msgid ""
"Initialize directly from one or more :class:`numpy.ndarray`. See the example"
" or the documentation of ``uinput``."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid:27
msgid ""
"**uinput** : :class:`python:str`, :obj:`pathlib.Path`, "
":obj:`vtk.vtkStructuredGrid`, :obj:`numpy.ndarray`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid:26
msgid ""
"python:str, pathlib.Path, vtk.vtkStructuredGrid, numpy.ndarray, optional"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid:15
msgid ""
"Filename, dataset, or array to initialize the structured grid from. If a "
"filename is passed, pyvista will attempt to load it as a "
":class:`StructuredGrid`. If passed a ``vtk.vtkStructuredGrid``, it will be "
"wrapped as a deep copy."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid:20
msgid ""
"If a :class:`numpy.ndarray` is provided and ``y`` and ``z`` are empty, this "
"array will define the points of this :class:`StructuredGrid`. Set the "
"dimensions with :attr:`StructuredGrid.dimensions`."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid:24
msgid ""
"Otherwise, this parameter will be loaded as the ``x`` points, and ``y`` and "
"``z`` points must be set. The shape of this array defines the shape of the "
"structured data and the shape should be ``(dimx, dimy, dimz)``. Missing "
"trailing dimensions are assumed to be ``1``."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid:30
msgid ""
"Coordinates of the points in y direction. If this is passed, ``uinput`` must"
" be a :class:`numpy.ndarray` and match the shape of ``y``."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid:34
msgid ""
"Coordinates of the points in z direction. If this is passed, ``uinput`` and "
"``y`` must be a :class:`numpy.ndarray` and match the shape of ``z``."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid:38
msgid ""
"Whether to deep copy a StructuredGrid object. Default is ``False``.  Keyword"
" only."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid:42
msgid ""
"Additional keyword arguments passed when reading from a file or loading from"
" arrays."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.StructuredGrid.rst:7
msgid "Create an empty structured grid."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.StructuredGrid.rst:11
msgid "Initialize from a ``vtk.vtkStructuredGrid`` object"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.StructuredGrid.dimensions:2
msgid "Return a length 3 tuple of the grid's dimensions."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.StructuredGrid.dimensions:9
msgid "Grid dimensions."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid.hide_cells:2
msgid "Hide cells without deleting them."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid.hide_cells:4
msgid "Hides cells by setting the ghost_cells array to ``HIDDEN_CELL``."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid.hide_cells:11
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid.hide_points:11
msgid "**ind** : :term:`python:sequence`"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid.hide_cells:9
msgid ""
"List or array of cell indices to be hidden.  The array can also be a boolean"
" array of the same size as the number of cells."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid.hide_cells:19
msgid "Structured grid with hidden cells."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.StructuredGrid.rst:3
msgid "Hide part of the middle of a structured surface."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid.hide_points:2
msgid "Hide points without deleting them."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid.hide_points:4
msgid "Hides points by setting the ghost_points array to ``HIDDEN_CELL``."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid.hide_points:9
msgid ""
"List or array of point indices to be hidden.  The array can also be a "
"boolean array of the same size as the number of points."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.StructuredGrid.hide_points:16
msgid "Point set with hidden points."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.StructuredGrid.points_matrix:2
msgid "Points as a 4-D matrix, with x/y/z along the last dimension."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.StructuredGrid.x:2
msgid "Return the X coordinates of all points."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.StructuredGrid.x:9
msgid "Numpy array of all X coordinates."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.StructuredGrid.y:2
msgid "Return the Y coordinates of all points."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.StructuredGrid.z:2
msgid "Return the Z coordinates of all points."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.Table.rst:2
msgid "pyvista.Table"
msgstr ""

#: ../../pyvista/doc/api/core/objects.rst:25:<autosummary>:1
#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table:2
msgid "Wrapper for the ``vtkTable`` class."
msgstr ""

#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table:4
msgid ""
"Create by passing a 2D NumPy array of shape (``n_rows`` by ``n_columns``) or"
" from a dictionary containing NumPy arrays."
msgstr ""

#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.get:2
msgid "Get an array by its name."
msgstr ""

#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.get:8
msgid "**index** : :class:`python:int` or :class:`python:str`"
msgstr ""

#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.get:7
#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.pop:7
msgid "python:int or python:str"
msgstr ""

#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.get:8
msgid "Index or name of the row."
msgstr ""

#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.get:13
#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.pop:13
msgid "PyVista array."
msgstr ""

#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.get_data_range:9
msgid "**arr** : :class:`python:str`, :obj:`numpy.ndarray`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.get_data_range:8
msgid ""
"The name of the array to get the range. If ``None``, the active scalar is "
"used."
msgstr ""

#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.get_data_range:12
msgid ""
"When scalars is specified, this is the preferred array type to search for in"
" the dataset.  Must be either ``'row'`` or ``'field'``."
msgstr ""

#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.get_data_range:19
msgid "``(min, max)`` of the array."
msgstr ""

#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.items:2
msgid "Return the table items."
msgstr ""

#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.items:9
msgid ""
"List containing tuples pairs of the name and array of the table arrays."
msgstr ""

#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.keys:2
msgid "Return the table keys."
msgstr ""

#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.keys:9
msgid "List of the array names of this table."
msgstr ""

#: ../../pyvista/pyvista/core/objects.pydocstring of pyvista.Table.n_arrays:2
#: ../../pyvista/pyvista/core/objects.pydocstring of pyvista.Table.n_columns:2
msgid "Return the number of columns."
msgstr ""

#: ../../pyvista/pyvista/core/objects.pydocstring of pyvista.Table.n_arrays:4
msgid "Alias for: ``n_columns``."
msgstr ""

#: ../../pyvista/pyvista/core/objects.pydocstring of pyvista.Table.n_rows:2
msgid "Return the number of rows."
msgstr ""

#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.pop:2
msgid "Pop off an array by the specified name."
msgstr ""

#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.pop:8
msgid "**name** : :class:`python:int` or :class:`python:str`"
msgstr ""

#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.pop:8
msgid "Index or name of the row array."
msgstr ""

#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.Table.row_arrays:2
msgid "Return the all row arrays."
msgstr ""

#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.save:2
msgid "Save the table."
msgstr ""

#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.to_pandas:2
msgid "Create a Pandas DataFrame from this Table."
msgstr ""

#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.to_pandas:21
msgid ":obj:`pandas.DataFrame`"
msgstr ""

#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.to_pandas:9
msgid "This table represented as a pandas dataframe."
msgstr ""

#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.update:2
msgid "Set the table data using a dict-like update."
msgstr ""

#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.update:21
msgid "**data** : :obj:`DataSetAttributes`"
msgstr ""

#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.update:20
msgid "DataSetAttributes"
msgstr ""

#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.update:8
msgid "Other dataset attributes to update from."
msgstr ""

#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.values:2
msgid "Return the table values."
msgstr ""

#: ../../pyvista/pyvista/core/objects.pydocstring of
#: pyvista.core.objects.Table.values:9
msgid "List of the table arrays."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UniformGrid.rst:2
msgid "pyvista.UniformGrid"
msgstr ""

#: ../../pyvista/doc/api/core/grids.rst:60:<autosummary>:1
#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.UniformGrid:2
msgid ""
"Models datasets with uniform spacing in the three coordinate directions."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.UniformGrid:4
msgid "Can be initialized in one of several ways:"
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.UniformGrid:7
msgid "Initialize from a vtk.vtkImageData object"
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.UniformGrid:8
msgid "Initialize based on dimensions, cell spacing, and origin."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.UniformGrid:10
msgid ""
"First argument must now be either a path or ``vtk.vtkImageData``. Use "
"keyword arguments to specify the dimensions, spacing, and origin of the "
"uniform grid."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.UniformGrid:15
msgid "The ``dims`` parameter has been renamed to ``dimensions``."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.UniformGrid:22
msgid ""
"**uinput** : :class:`python:str`, :obj:`vtk.vtkImageData`, "
":obj:`pyvista.UniformGrid`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.UniformGrid:21
msgid "python:str, vtk.vtkImageData, pyvista.UniformGrid, optional"
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.UniformGrid:21
msgid ""
"Filename or dataset to initialize the uniform grid from.  If set, remainder "
"of arguments are ignored."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.UniformGrid:25
msgid "**dimensions** : :term:`python:iterable`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.UniformGrid:24
#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.UniformGrid:28
#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.UniformGrid:31
msgid "python:iterable, optional"
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.UniformGrid:25
msgid "Dimensions of the uniform grid."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.UniformGrid:29
msgid "**spacing** : :term:`python:iterable`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.UniformGrid:28
msgid ""
"Spacing of the uniform in each dimension.  Defaults to ``(1.0, 1.0, 1.0)``. "
"Must be positive."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.UniformGrid:32
msgid "**origin** : :term:`python:iterable`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.UniformGrid:32
msgid "Origin of the uniform grid.  Defaults to ``(0.0, 0.0, 0.0)``."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.UniformGrid:35
msgid ""
"Whether to deep copy a ``vtk.vtkImageData`` object. Default is ``False``.  "
"Keyword only."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UniformGrid.rst:3
msgid "Create an empty UniformGrid."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UniformGrid.rst:8
msgid "Initialize from a ``vtk.vtkImageData`` object."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UniformGrid.rst:14
msgid ""
"Initialize using using just the grid dimensions and default spacing and "
"origin. These must be keyword arguments."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UniformGrid.rst:19
msgid "Initialize using dimensions and spacing."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UniformGrid.rst:26
msgid "Initialize using dimensions, spacing, and an origin."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UniformGrid.rst:34
msgid "Initialize from another UniformGrid."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.UniformGrid.cast_to_rectilinear_grid:2
msgid "Cast this uniform grid to a rectilinear grid."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.UniformGrid.cast_to_rectilinear_grid:21
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_rectilinear:18
msgid ":obj:`pyvista.RectilinearGrid`"
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.UniformGrid.cast_to_rectilinear_grid:9
msgid "This uniform grid as a rectilinear grid."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.grid.UniformGrid.cast_to_structured_grid:2
msgid "Cast this uniform grid to a structured grid."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.UniformGrid.extent:2
msgid "Return or set the extent of the UniformGrid."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.UniformGrid.extent:4
msgid ""
"The extent is simply the first and last indices for each of the three axes."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UniformGrid.rst:3
msgid "Create a ``UniformGrid`` and show its extent."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UniformGrid.rst:14
msgid ""
"Note how this also modifies the grid bounds and dimensions. Since we use "
"default spacing of 1 here, the bounds match the extent exactly."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.UniformGrid.origin:2
msgid "Return the origin of the grid (bottom southwest corner)."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UniformGrid.rst:8
msgid ""
"Show how the origin is in the bottom \"southwest\" corner of the "
"UniformGrid."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UniformGrid.rst:31
msgid ""
"Set the origin to ``(1, 1, 1)`` and show how this shifts the UniformGrid."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.UniformGrid.points:2
msgid "Build a copy of the implicitly defined points as a numpy array."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.UniformGrid.points:16
msgid "The ``points`` for a :class:`pyvista.UniformGrid` cannot be set."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.UniformGrid.spacing:2
msgid "Return or set the spacing for each axial direction."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.UniformGrid.spacing:16
msgid ""
"Spacing must be non-negative. While VTK accepts negative spacing, this "
"results in unexpected behavior. See: "
"https://github.com/pyvista/pyvista/issues/1967"
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UniformGrid.rst:3
msgid "Create a 5 x 5 x 5 uniform grid."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UniformGrid.rst:25
msgid "Modify the spacing to ``(1, 2, 3)``"
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.filters.rectilinear_grid.RectilinearGridFilters.to_tetrahedra:2
msgid "Create a tetrahedral mesh structured grid."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.filters.rectilinear_grid.RectilinearGridFilters.to_tetrahedra:10
msgid "**tetra_per_cell** : :class:`python:int`, default: 5"
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.filters.rectilinear_grid.RectilinearGridFilters.to_tetrahedra:9
msgid "python:int, default: 5"
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.filters.rectilinear_grid.RectilinearGridFilters.to_tetrahedra:8
msgid ""
"The number of tetrahedrons to divide each cell into. Can be either ``5``, "
"``6``, or ``12``. If ``mixed=True``, this value is overridden."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.filters.rectilinear_grid.RectilinearGridFilters.to_tetrahedra:20
msgid ""
"**mixed** : :class:`python:str`, :ref:`bool <python:bltin-boolean-values>`, "
":term:`python:sequence`, default: :data:`python:False`"
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.filters.rectilinear_grid.RectilinearGridFilters.to_tetrahedra:19
msgid "python:str, bool, python:sequence, default: python:False"
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.filters.rectilinear_grid.RectilinearGridFilters.to_tetrahedra:13
msgid ""
"When set, subdivides some cells into 5 and some cells into 12. Set to "
"``True`` to use the active cell scalars of the "
":class:`pyvista.RectilinearGrid` to be either 5 or 12 to determining the "
"number of tetrahedra to generate per cell."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.filters.rectilinear_grid.RectilinearGridFilters.to_tetrahedra:18
msgid ""
"When a sequence, uses these values to subdivide the cells. When a string "
"uses a cell array rather than the active array to determine the number of "
"tetrahedra to generate per cell."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.filters.rectilinear_grid.RectilinearGridFilters.to_tetrahedra:25
msgid ""
"**pass_cell_ids** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:False`"
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.filters.rectilinear_grid.RectilinearGridFilters.to_tetrahedra:23
msgid ""
"Set to ``True`` to make the tetrahedra have scalar data indicating which "
"cell they came from in the original :class:`pyvista.RectilinearGrid`."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of
#: pyvista.core.filters.rectilinear_grid.RectilinearGridFilters.to_tetrahedra:33
msgid "UnstructuredGrid containing the tetrahedral cells."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UniformGrid.rst:3
msgid ""
"Divide a rectangular grid into tetrahedrons. Each cell contains by default 5"
" tetrahedrons."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UniformGrid.rst:6
msgid "First, create and plot the grid."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UniformGrid.rst:30
msgid "Now, generate the tetrahedra plot in the exploded view of the cell."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UniformGrid.rst:49
msgid ""
"Take the same grid but divide the first cell into 5 cells and the other cell"
" into 12 tetrahedrons per cell."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.UniformGrid.x:2
msgid "Return all the X points."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.UniformGrid.y:2
msgid "Return all the Y points."
msgstr ""

#: ../../pyvista/pyvista/core/grid.pydocstring of pyvista.UniformGrid.z:2
msgid "Return all the Z points."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UniformGridFilters.rst:2
msgid "pyvista.UniformGridFilters"
msgstr ""

#: ../../pyvista/doc/api/core/filters.rst:55:<autosummary>:1
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters:2
msgid ""
"An internal class to manage filters/algorithms for uniform grid datasets."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.extract_subset:2
msgid "Select piece (e.g., volume of interest)."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.extract_subset:4
msgid ""
"To use this filter set the VOI ivar which are i-j-k min/max indices that "
"specify a rectangular region in the data. (Note that these are 0-offset.) "
"You can also specify a sampling rate to subsample the data."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.extract_subset:9
msgid ""
"Typical applications of this filter are to extract a slice from a volume for"
" image processing, subsampling large volumes to reduce data size, or "
"extracting regions of a volume with interesting data."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.extract_subset:18
msgid "**voi** : :class:`python:tuple`\\(:class:`python:int`)"
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.extract_subset:17
msgid "python:tuple(python:int)"
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.extract_subset:16
msgid ""
"Length 6 iterable of ints: ``(xmin, xmax, ymin, ymax, zmin, zmax)``. These "
"bounds specify the volume of interest in i-j-k min/max indices."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.extract_subset:22
msgid "**rate** : :class:`python:tuple`\\(:class:`python:int`), :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.extract_subset:21
msgid ""
"Length 3 iterable of ints: ``(xrate, yrate, zrate)``. Default: ``(1, 1, "
"1)``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.extract_subset:31
msgid ""
"**boundary** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.extract_subset:25
msgid ""
"Control whether to enforce that the \"boundary\" of the grid is output in "
"the subsampling process. This only has effect when the rate in any direction"
" is not equal to 1. When this is enabled, the subsampling will always "
"include the boundary of the grid even though the sample rate is not an even "
"multiple of the grid dimensions. By default this is disabled."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.extract_subset:51
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.fft:38
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.gaussian_smooth:29
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.high_pass:52
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_dilate_erode:39
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_threshold:54
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.low_pass:52
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.median_smooth:40
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.rfft:38
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_channels:18
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_uniform:18
#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:75
msgid ":obj:`pyvista.UniformGrid`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.extract_subset:39
msgid "UniformGrid subset."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.fft:2
msgid "Apply a fast Fourier transform (FFT) to the active scalars."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.fft:4
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.rfft:4
msgid ""
"The input can be real or complex data, but the output is always "
":attr:`numpy.complex128`. The filter is fastest for images that have power "
"of two sizes."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.fft:8
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.rfft:8
msgid ""
"The filter uses a butterfly diagram for each prime factor of the dimension. "
"This makes images with prime number dimensions (i.e. 17x17) much slower to "
"compute. FFTs of multidimensional meshes (i.e volumes) are decomposed so "
"that each axis executes serially."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.fft:13
msgid ""
"The frequencies of the output assume standard order: along each axis first "
"positive frequencies are assumed from 0 to the maximum, then negative "
"frequencies are listed from the largest absolute value to smallest. This "
"implies that the corners of the grid correspond to low frequencies, while "
"the center of the grid corresponds to high frequencies."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.fft:24
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.high_pass:38
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.low_pass:38
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.rfft:24
msgid "**output_scalars_name** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.fft:23
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.high_pass:37
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.low_pass:37
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.rfft:23
msgid ""
"The name of the output scalars. By default, this is the same as the active "
"scalars of the dataset."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.fft:32
msgid ":class:`pyvista.UniformGrid` with applied FFT."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.fft:43
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.high_pass:59
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.low_pass:59
msgid ":obj:`rfft`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.fft:44
msgid "The reverse transform."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.fft:45
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.high_pass:61
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.rfft:45
msgid ":obj:`low_pass`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.fft:46
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.high_pass:62
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.rfft:46
msgid "Low-pass filtering of FFT output."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.fft:47
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.low_pass:61
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.rfft:47
msgid ":obj:`high_pass`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.fft:48
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.low_pass:62
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.rfft:48
msgid "High-pass filtering of FFT output."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UniformGridFilters.rst:3
msgid "Apply FFT to an example image."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UniformGridFilters.rst:18
#: ../../pyvista/doc/api/core/_autosummary/pyvista.UniformGridFilters.rst:19
msgid "See :ref:`image_fft_example` for a full example using this filter."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.gaussian_smooth:2
msgid "Smooth the data with a Gaussian kernel."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.gaussian_smooth:8
msgid ""
"**radius_factor** : :class:`python:float` or :term:`python:iterable`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.gaussian_smooth:7
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.gaussian_smooth:10
msgid "python:float or python:iterable, optional"
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.gaussian_smooth:8
msgid "Unitless factor to limit the extent of the kernel."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.gaussian_smooth:11
msgid ""
"**std_dev** : :class:`python:float` or :term:`python:iterable`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.gaussian_smooth:11
msgid "Standard deviation of the kernel in pixel units."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.gaussian_smooth:14
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_dilate_erode:24
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_threshold:32
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.median_smooth:22
msgid "Name of scalars to process. Defaults to currently active scalars."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.gaussian_smooth:22
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.median_smooth:35
msgid "Uniform grid with smoothed scalars."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.gaussian_smooth:33
msgid ""
"This filter only supports point data. Consider converting any cell data to "
"point data using the :func:`DataSet.cell_data_to_point_data` filter to "
"convert any cell data to point data."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UniformGridFilters.rst:3
msgid ""
"First, create sample data to smooth. Here, we use "
":func:`pyvista.perlin_noise() <pyvista.utilities.common.perlin_noise>` to "
"create meaningful data."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UniformGridFilters.rst:27
msgid "Next, smooth the sample data."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UniformGridFilters.rst:46
msgid ""
"See :ref:`gaussian_smoothing_example` for a full example using this filter."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.high_pass:2
msgid "Perform a Butterworth high pass filter in the frequency domain."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.high_pass:4
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.low_pass:4
msgid ""
"This filter requires that the :class:`UniformGrid` have a complex point "
"scalars, usually generated after the :class:`UniformGrid` has been converted"
" to the frequency domain by a :func:`UniformGridFilters.fft` filter."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.high_pass:9
msgid ""
"A :func:`UniformGridFilters.rfft` filter can be used to convert the output "
"back into the spatial domain. This filter attenuates low frequency "
"components.  Input and output are complex arrays with datatype "
":attr:`numpy.complex128`."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.high_pass:14
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.low_pass:14
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.rfft:13
msgid ""
"The frequencies of the input assume standard order: along each axis first "
"positive frequencies are assumed from 0 to the maximum, then negative "
"frequencies are listed from the largest absolute value to smallest. This "
"implies that the corners of the grid correspond to low frequencies, while "
"the center of the grid corresponds to high frequencies."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.high_pass:24
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.low_pass:24
msgid "**x_cutoff** : :obj:`double`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.high_pass:23
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.high_pass:26
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.high_pass:29
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.low_pass:23
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.low_pass:26
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.low_pass:29
msgid "double"
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.high_pass:24
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.low_pass:24
msgid "The cutoff frequency for the x axis."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.high_pass:27
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.low_pass:27
msgid "**y_cutoff** : :obj:`double`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.high_pass:27
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.low_pass:27
msgid "The cutoff frequency for the y axis."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.high_pass:30
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.low_pass:30
msgid "**z_cutoff** : :obj:`double`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.high_pass:30
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.low_pass:30
msgid "The cutoff frequency for the z axis."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.high_pass:34
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.low_pass:34
msgid "**order** : :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.high_pass:33
msgid ""
"The order of the cutoff curve. Given from the equation ``1/(1 + "
"(cutoff/freq(i, j))**(2*order))``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.high_pass:46
msgid ":class:`pyvista.UniformGrid` with the applied high pass filter."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.high_pass:57
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.low_pass:57
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.rfft:43
msgid ":obj:`fft`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.high_pass:58
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.low_pass:58
msgid "Direct fast Fourier transform."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.high_pass:60
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.low_pass:60
msgid "Reverse fast Fourier transform."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.high_pass:69
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.low_pass:69
msgid ""
"See :ref:`image_fft_perlin_example` for a full example using this filter."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_dilate_erode:2
msgid "Dilates one value and erodes another."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_dilate_erode:4
msgid ""
"``image_dilate_erode`` will dilate one value and erode another. It uses an "
"elliptical footprint, and only erodes/dilates on the boundary of the two "
"values. The filter is restricted to the X, Y, and Z axes for now. It can "
"degenerate to a 2 or 1-dimensional filter by setting the kernel size to 1 "
"for a specific axis."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_dilate_erode:13
msgid ""
"**dilate_value** : :class:`python:int` or :class:`python:float`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_dilate_erode:12
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_dilate_erode:15
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_orientation_widget:21
msgid "python:int or python:float, optional"
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_dilate_erode:13
msgid "Dilate value in the dataset. Default: ``1``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_dilate_erode:16
msgid ""
"**erode_value** : :class:`python:int` or :class:`python:float`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_dilate_erode:16
msgid "Erode value in the dataset. Default: ``0``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_dilate_erode:21
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.median_smooth:19
msgid ""
"**kernel_size** : :class:`python:list`\\(:class:`python:int`) :obj:`or` "
":class:`python:tuple`\\(:class:`python:int`), :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_dilate_erode:20
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.median_smooth:18
msgid "python:list(python:int) or python:tuple(python:int), optional"
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_dilate_erode:19
msgid ""
"Length 3 iterable of ints: ``(xsize, ysize, zsize)``. Determines the size "
"(and center) of the kernel. Default: ``(3, 3, 3)``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_dilate_erode:32
msgid ""
"Dataset that has been dilated/eroded on the boundary of the specified "
"scalars."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_dilate_erode:43
msgid ""
"This filter only supports point data. Consider converting any cell data to "
"point data using the :func:`DataSet.cell_data_to_point_data` filter to "
"convert ny cell data to point data."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UniformGridFilters.rst:3
msgid ""
"Demonstrate image dilate/erode on an example dataset. First, plot the "
"example dataset with the active scalars."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UniformGridFilters.rst:24
msgid ""
"Now, plot the image threshold with ``threshold=[400, 600]``. Note how values"
" within the threshold are 1 and outside are 0."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UniformGridFilters.rst:44
msgid ""
"Note how there is a hole in the thresholded image. Apply a dilation/ erosion"
" filter with a large kernel to fill that hole in."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_threshold:2
msgid "Apply a threshold to scalar values in a uniform grid."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_threshold:4
msgid ""
"If a single value is given for threshold, scalar values above or equal to "
"the threshold are ``'in'`` and scalar values below the threshold are "
"``'out'``. If two values are given for threshold (sequence) then values "
"equal to or between the two values are ``'in'`` and values outside the range"
" are ``'out'``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_threshold:9
msgid ""
"If ``None`` is given for ``in_value``, scalars that are ``'in'`` will not be"
" replaced. If ``None`` is given for ``out_value``, scalars that are "
"``'out'`` will not be replaced."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_threshold:12
msgid ""
"Warning: applying this filter to cell data will send the output to a new "
"point array with the same name, overwriting any existing point data array "
"with the same name."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_threshold:21
msgid "**threshold** : :class:`python:float` or :term:`python:sequence`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_threshold:20
msgid "python:float or python:sequence"
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_threshold:19
msgid ""
"Single value or (min, max) to be used for the data threshold.  If a "
"sequence, then length must be 2. Threshold(s) for deciding which "
"cells/points are ``'in'`` or ``'out'`` based on scalar data."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_threshold:25
msgid ""
"**in_value** : :class:`python:float` or :class:`python:int` or "
":data:`python:None`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_threshold:24
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_threshold:28
msgid "python:float or python:int or python:None, optional"
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_threshold:24
msgid ""
"Scalars that match the threshold criteria for ``'in'`` will be replaced with"
" this. Default is 1."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_threshold:29
msgid ""
"**out_value** : :class:`python:float` or :class:`python:int` or "
":data:`python:None`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_threshold:28
msgid ""
"Scalars that match the threshold criteria for ``'out'`` will be replaced "
"with this. Default is 0."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_threshold:35
#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.median_smooth:25
msgid ""
"When scalars is specified, this is the preferred array type to search for in"
" the dataset.  Must be either ``'point'`` or ``'cell'``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.image_threshold:45
msgid "Dataset with the specified scalars thresholded."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UniformGridFilters.rst:3
msgid ""
"Demonstrate image threshold on an example dataset. First, plot the example "
"dataset with the active scalars."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UniformGridFilters.rst:24
msgid ""
"Now, plot the image threshold with ``threshold=100``. Note how values above "
"the threshold are 1 and below are 0."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.low_pass:2
msgid "Perform a Butterworth low pass filter in the frequency domain."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.low_pass:9
msgid ""
"A :func:`UniformGridFilters.rfft` filter can be used to convert the output "
"back into the spatial domain. This filter attenuates high frequency "
"components.  Input and output are complex arrays with datatype "
":attr:`numpy.complex128`."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.low_pass:33
msgid ""
"The order of the cutoff curve. Given from the equation ``1 + (cutoff/freq(i,"
" j))**(2*order)``."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.low_pass:46
msgid ":class:`pyvista.UniformGrid` with the applied low pass filter."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.median_smooth:2
msgid "Smooth data using a median filter."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.median_smooth:4
msgid ""
"The Median filter that replaces each pixel with the median value from a "
"rectangular neighborhood around that pixel. Neighborhoods can be no more "
"than 3 dimensional. Setting one axis of the neighborhood kernelSize to 1 "
"changes the filter into a 2D median."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.median_smooth:9
msgid ""
"See `vtkImageMedian3D "
"<https://vtk.org/doc/nightly/html/classvtkImageMedian3D.html#details>`_ for "
"more details."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.median_smooth:16
msgid ""
"Length 3 list or tuple of ints : ``(x_size, y_size, z_size)`` Size of the "
"kernel in each dimension (units of voxels). Default is a 3D median filter. "
"If you want to do a 2D median filter, set the size to 1 in the dimension you"
" don't want to filter over."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.median_smooth:44
msgid ""
"Applying this filter to cell data will send the output to a new point array "
"with the same name, overwriting any existing point data array with the same "
"name."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.rfft:2
msgid "Apply a reverse fast Fourier transform (RFFT) to the active scalars."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.rfft:32
msgid ":class:`pyvista.UniformGrid` with the applied reverse FFT."
msgstr ""

#: ../../pyvista/pyvista/core/filters/uniform_grid.pydocstring of
#: pyvista.core.filters.uniform_grid.UniformGridFilters.rfft:44
msgid "The direct transform."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UniformGridFilters.rst:3
msgid "Apply reverse FFT to an example image."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UnstructuredGrid.rst:2
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.plot_cell:7
msgid "pyvista.UnstructuredGrid"
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:83:<autosummary>:1
#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.UnstructuredGrid:2
msgid "Dataset used for arbitrary combinations of all possible cell types."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.UnstructuredGrid:7
msgid "From a ``vtk.vtkPolyData`` or ``vtk.vtkStructuredGrid`` object"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.UnstructuredGrid:8
msgid "From cell, offset, and node arrays"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.UnstructuredGrid:17
msgid ""
"Whether to deep copy a vtkUnstructuredGrid object. Default is ``False``.  "
"Keyword only."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UnstructuredGrid.rst:7
msgid "Create an empty grid"
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UnstructuredGrid.rst:11
msgid "Copy a vtk.vtkUnstructuredGrid"
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UnstructuredGrid.rst:16
msgid "From a filename."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UnstructuredGrid.rst:35
msgid "From arrays (VTK >= 9). Here we create a single tetrahedron."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UnstructuredGrid.rst:62
msgid ""
"See the :ref:`create_unstructured_example` example for more details on "
"creating unstructured grids within PyVista."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.UnstructuredGrid.cast_to_explicit_structured_grid:2
msgid "Cast to an explicit structured grid."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.UnstructuredGrid.cast_to_explicit_structured_grid:5
msgid "This feature is only available in ``vtk>=9.0.0``"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.UnstructuredGrid.cast_to_explicit_structured_grid:14
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_explicit_structured:25
msgid ":obj:`pyvista.ExplicitStructuredGrid`"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.UnstructuredGrid.cast_to_explicit_structured_grid:11
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_explicit_structured:16
msgid "An explicit structured grid."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.UnstructuredGrid.cast_to_explicit_structured_grid:22
msgid ":obj:`TypeError`"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.UnstructuredGrid.cast_to_explicit_structured_grid:19
msgid ""
"If the unstructured grid doesn't have the ``'BLOCK_I'``, ``'BLOCK_J'`` and "
"``'BLOCK_K'`` cells arrays."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.UnstructuredGrid.cast_to_explicit_structured_grid:27
msgid ":obj:`pyvista.ExplicitStructuredGrid.cast_to_unstructured_grid`"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.cell_connectivity:2
msgid "Return a the vtk cell connectivity as a numpy array."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.cell_connectivity:4
msgid "This is effecively :attr:`UnstructuredGrid.cells` without the padding."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.cell_connectivity:8
msgid "This is only available in ``vtk>=9.0.0``."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.cell_connectivity:14
msgid "Connectivity array."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UnstructuredGrid.rst:3
msgid "Return the cell connectivity for the first two cells."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.cells:2
msgid "Return a pointer to the cells as a numpy object."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UnstructuredGrid.rst:3
msgid ""
"Return the indices of the first two cells from the example hex beam.  Note "
"how the cells have \"padding\" indicating the number of points per cell."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.cells_dict:2
msgid "Return a dictionary that contains all cells mapped from cell types."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.cells_dict:4
msgid ""
"This function returns a :class:`numpy.ndarray` for each cell type in an "
"ordered fashion.  Note that this function only works with element types of "
"fixed sizes."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.cells_dict:22
#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.orientation_cube:18
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:105
msgid ":class:`python:dict`"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.cells_dict:12
msgid ""
"A dictionary mapping containing all cells of this unstructured grid. "
"Structure: vtk_enum_type (int) -> cells (:class:`numpy.ndarray`)."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UnstructuredGrid.rst:3
msgid ""
"Return the cells dictionary of the sample hex beam.  Note how there is only "
"one key/value pair as the hex beam example is composed of only all "
"hexahedral cells, which is ``CellType.HEXAHEDRON``, which evaluates to 12."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UnstructuredGrid.rst:8
msgid ""
"Also note how there is no padding for the cell array.  This approach may be "
"more helpful than the ``cells`` property when extracting cells."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.celltypes:2
msgid "Return the cell types array."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.celltypes:9
msgid "Array of cell types.  Some of the most popular cell types:"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.celltypes:12
msgid "``EMPTY_CELL = 0``"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.celltypes:15
msgid "``VERTEX = 1``"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.celltypes:18
msgid "``POLY_VERTEX = 2``"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.celltypes:21
msgid "``LINE = 3``"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.celltypes:24
msgid "``POLY_LINE = 4``"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.celltypes:27
msgid "``TRIANGLE = 5``"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.celltypes:30
msgid "``TRIANGLE_STRIP = 6``"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.celltypes:33
msgid "``POLYGON = 7``"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.celltypes:36
msgid "``PIXEL = 8``"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.celltypes:39
msgid "``QUAD = 9``"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.celltypes:42
msgid "``TETRA = 10``"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.celltypes:45
msgid "``VOXEL = 11``"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.celltypes:48
msgid "``HEXAHEDRON = 12``"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.celltypes:51
msgid "``WEDGE = 13``"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.celltypes:54
msgid "``PYRAMID = 14``"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.celltypes:57
msgid "``PENTAGONAL_PRISM = 15``"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.celltypes:60
msgid "``HEXAGONAL_PRISM = 16``"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.celltypes:63
msgid "``QUADRATIC_EDGE = 21``"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.celltypes:66
msgid "``QUADRATIC_TRIANGLE = 22``"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.celltypes:69
msgid "``QUADRATIC_QUAD = 23``"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.celltypes:72
msgid "``QUADRATIC_POLYGON = 36``"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.celltypes:75
msgid "``QUADRATIC_TETRA = 24``"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.celltypes:78
msgid "``QUADRATIC_HEXAHEDRON = 25``"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.celltypes:81
msgid "``QUADRATIC_WEDGE = 26``"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.celltypes:84
msgid "``QUADRATIC_PYRAMID = 27``"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.celltypes:87
msgid "``BIQUADRATIC_QUAD = 28``"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.celltypes:90
msgid "``TRIQUADRATIC_HEXAHEDRON = 29``"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.celltypes:93
msgid "``QUADRATIC_LINEAR_QUAD = 30``"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.celltypes:96
msgid "``QUADRATIC_LINEAR_WEDGE = 31``"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.celltypes:99
msgid "``BIQUADRATIC_QUADRATIC_WEDGE = 32``"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.celltypes:102
msgid "``BIQUADRATIC_QUADRATIC_HEXAHEDRON = 33``"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.celltypes:105
msgid "``BIQUADRATIC_TRIANGLE = 34``"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.celltypes:108
msgid ":obj:`See`"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.celltypes:111
msgid "https://vtk.org/doc/nightly/html/vtkCellType_8h_source.html"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.celltypes:123
msgid ":obj:`for` :obj:`all` :obj:`cell` types."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UnstructuredGrid.rst:3
msgid ""
"This mesh contains only linear hexahedral cells, type "
"``CellType.HEXAHEDRON``, which evaluates to 12."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.UnstructuredGrid.linear_copy:2
msgid "Return a copy of the unstructured grid containing only linear cells."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.UnstructuredGrid.linear_copy:4
msgid "Converts the following cell types to their linear equivalents."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.UnstructuredGrid.linear_copy:6
msgid "``QUADRATIC_TETRA      --> TETRA``"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.UnstructuredGrid.linear_copy:7
msgid "``QUADRATIC_PYRAMID    --> PYRAMID``"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.UnstructuredGrid.linear_copy:8
msgid "``QUADRATIC_WEDGE      --> WEDGE``"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.UnstructuredGrid.linear_copy:9
msgid "``QUADRATIC_HEXAHEDRON --> HEXAHEDRON``"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.UnstructuredGrid.linear_copy:15
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.convert_array:14
msgid ""
"**deep** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:False`"
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.UnstructuredGrid.linear_copy:14
msgid ""
"When ``True``, makes a copy of the points array. Cells and cell types are "
"always copied."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.core.pointset.UnstructuredGrid.linear_copy:20
msgid "UnstructuredGrid containing only linear cells when ``deep=False``."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.offset:2
msgid "Return the cell locations array."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.offset:4
msgid ""
"In VTK 9, this is the location of the start of each cell in "
":attr:`cell_connectivity`, and in VTK < 9, this is the location of the start"
" of each cell in :attr:`cells`."
msgstr ""

#: ../../pyvista/pyvista/core/pointset.pydocstring of
#: pyvista.UnstructuredGrid.offset:12
msgid "Array of cell offsets indicating the start of each cell."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UnstructuredGrid.rst:3
msgid ""
"Return the cell offset array within ``vtk==9``.  Since this mesh is composed"
" of all hexahedral cells, note how each cell starts at 8 greater than the "
"prior cell."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UnstructuredGridFilters.rst:2
msgid "pyvista.UnstructuredGridFilters"
msgstr ""

#: ../../pyvista/doc/api/core/filters.rst:43:<autosummary>:1
#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.unstructured_grid.UnstructuredGridFilters:2
msgid ""
"An internal class to manage filters/algorithms for unstructured grid "
"datasets."
msgstr ""

#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.unstructured_grid.UnstructuredGridFilters.subdivide_tetra:2
msgid "Subdivide each tetrahedron into twelve tetrahedrons."
msgstr ""

#: ../../pyvista/pyvista/core/filters/unstructured_grid.pydocstring of
#: pyvista.core.filters.unstructured_grid.UnstructuredGridFilters.subdivide_tetra:9
msgid "UnstructuredGrid containing the subdivided tetrahedrons."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UnstructuredGridFilters.rst:3
msgid "First, load a sample tetrahedral UnstructuredGrid and plot it."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.UnstructuredGridFilters.rst:23
msgid "Now, subdivide and plot."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.utilities.common.perlin_noise.rst:2
msgid "perlin\\_noise"
msgstr ""

#: ../../pyvista/doc/api/core/misc.rst:10:<autosummary>:1
#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.perlin_noise:2
msgid "Return the implicit function that implements Perlin noise."
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.perlin_noise:4
msgid ""
"Uses ``vtk.vtkPerlinNoise`` and computes a Perlin noise field as an implicit"
" function. ``vtk.vtkPerlinNoise`` is a concrete implementation of "
"``vtk.vtkImplicitFunction``. Perlin noise, originally described by Ken "
"Perlin, is a non-periodic and continuous noise function useful for modeling "
"real-world objects."
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.perlin_noise:10
msgid ""
"The amplitude and frequency of the noise pattern are adjustable. This "
"implementation of Perlin noise is derived closely from Greg Ward's version "
"in Graphics Gems II."
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.perlin_noise:22
msgid "**amplitude** : :class:`python:float`"
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.perlin_noise:17
msgid "Amplitude of the noise function."
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.perlin_noise:19
msgid ""
"``amplitude`` can be negative. The noise function varies randomly between "
"``-|Amplitude|`` and ``|Amplitude|``. Therefore the range of values is "
"``2*|Amplitude|`` large. The initial amplitude is 1."
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.perlin_noise:28
msgid ""
"**freq** : :obj:`Sequence`\\[:class:`python:float`, :class:`python:float`, "
":class:`python:float`]"
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.perlin_noise:27
#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.perlin_noise:35
msgid "Sequence[python:float, python:float, python:float]"
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.perlin_noise:25
msgid ""
"The frequency, or physical scale, of the noise function (higher is finer "
"scale)."
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.perlin_noise:28
msgid "The frequency can be adjusted per axis, or the same for all axes."
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.perlin_noise:36
msgid ""
"**phase** : :obj:`Sequence`\\[:class:`python:float`, :class:`python:float`, "
":class:`python:float`]"
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.perlin_noise:31
msgid "Set/get the phase of the noise function."
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.perlin_noise:33
msgid ""
"This parameter can be used to shift the noise function within space (perhaps"
" to avoid a beat with a noise pattern at another scale). Phase tends to "
"repeat about every unit, so a phase of 0.5 is a half-cycle shift."
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.perlin_noise:52
msgid ":obj:`vtk.vtkPerlinNoise`"
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.perlin_noise:41
msgid ""
"Instance of ``vtk.vtkPerlinNoise`` to a Perlin noise field as an implicit "
"function. Use with :func:`pyvista.sample_function() "
"<pyvista.utilities.common.sample_function>`."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.utilities.common.perlin_noise.rst:3
msgid ""
"Create a Perlin noise function with an amplitude of 0.1, frequency for all "
"axes of 1, and a phase of 0 for all axes."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.utilities.common.perlin_noise.rst:9
msgid "Sample Perlin noise over a structured grid and plot it."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.utilities.common.sample_function.rst:2
msgid "sample\\_function"
msgstr ""

#: ../../pyvista/doc/api/core/misc.rst:10:<autosummary>:1
#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:2
msgid "Sample an implicit function over a structured point set."
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:4
msgid "Uses ``vtk.vtkSampleFunction``"
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:6
msgid ""
"This method evaluates an implicit function and normals at each point in a "
"``vtk.vtkStructuredPoints``. The user can specify the sample dimensions and "
"location in space to perform the sampling."
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:10
msgid ""
"To create closed surfaces (in conjunction with the vtkContourFilter), "
"capping can be turned on to set a particular value on the boundaries of the "
"sample space."
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:18
msgid "**function** : :obj:`vtk.vtkImplicitFunction`"
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:17
msgid ""
"Implicit function to evaluate.  For example, the function generated from "
":func:`pyvista.perlin_noise`."
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_cursor:12
#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:23
msgid ""
"**bounds** : :obj:`length` 6 :term:`python:sequence`, default: (-1.0, 1.0, "
"-1.0, 1.0, -1.0, 1.0)"
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_cursor:11
#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:22
msgid "length 6 python:sequence, default: (-1.0, 1.0, -1.0, 1.0, -1.0, 1.0)"
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_cursor:8
#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:21
msgid "Specify the bounds in the format of:"
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:23
msgid "``(xmin, xmax, ymin, ymax, zmin, zmax)``."
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:27
msgid ""
"**dim** : :obj:`length` 3 :term:`python:sequence`, default: (50, 50, 50)"
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:26
msgid "length 3 python:sequence, default: (50, 50, 50)"
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:26
msgid ""
"Dimensions of the data on which to sample in the format of ``(xdim, ydim, "
"zdim)``."
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:30
msgid ""
"**compute_normals** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:False`"
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:30
msgid "Enable or disable the computation of normals."
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:44
msgid "**output_type** : :obj:`np.dtype`, default: :obj:`numpy.double`"
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:43
msgid "np.dtype, default: numpy.double"
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:33
msgid "Set the output scalar type.  One of the following:"
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:35
msgid "``np.float64``"
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:36
msgid "``np.float32``"
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:37
msgid "``np.int64``"
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:38
msgid "``np.uint64``"
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:39
msgid "``np.int32``"
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:40
msgid "``np.uint32``"
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:41
msgid "``np.int16``"
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:42
msgid "``np.uint16``"
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:43
msgid "``np.int8``"
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:44
msgid "``np.uint8``"
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:49
msgid ""
"**capping** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:False`"
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:47
msgid ""
"Enable or disable capping. If capping is enabled, then the outer boundaries "
"of the structured point set are set to cap value. This can be used to ensure"
" surfaces are closed."
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:52
msgid ""
"**cap_value** : :class:`python:float`, default: :obj:`sys.float_info.max`"
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:51
msgid "python:float, default: sys.float_info.max"
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:52
msgid "Capping value used with the ``capping`` parameter."
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:55
msgid "**scalar_arr_name** : :class:`python:str`, default: \"scalars\""
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:54
msgid "python:str, default: \"scalars\""
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:55
msgid "Set the scalar array name for this data set."
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:58
msgid "**normal_arr_name** : :class:`python:str`, default: \"normals\""
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:57
msgid "python:str, default: \"normals\""
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:58
msgid "Set the normal array name for this data set."
msgstr ""

#: ../../pyvista/pyvista/utilities/common.pydocstring of
#: pyvista.utilities.common.sample_function:66
msgid "Uniform grid with sampled data."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.utilities.common.sample_function.rst:3
msgid "Sample Perlin noise over a structured grid in 3D."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.utilities.common.sample_function.rst:25
msgid "Sample Perlin noise in 2D and plot it."
msgstr ""

#: ../../pyvista/doc/api/core/_autosummary/pyvista.utilities.common.sample_function.rst:45
msgid ""
"See :ref:`perlin_noise_2d_example` for a full example using this function."
msgstr ""

#: ../../pyvista/doc/api/core/camera.rst:4
msgid "Cameras"
msgstr ""

#: ../../pyvista/doc/api/core/camera.rst:5
msgid ""
"The :class:`pyvista.Camera` class adds additional functionality and a "
"pythonic API to the ``vtk.vtkCamera`` class. :class:`pyvista.Camera` objects"
" come with a default set of cameras that work well in most cases, but in "
"many situations a more hands-on approach to using the camera is necessary."
msgstr ""

#: ../../pyvista/doc/api/core/camera.rst:13
#: ../../pyvista/doc/api/core/lights.rst:10
msgid "Brief Example"
msgstr ""

#: ../../pyvista/doc/api/core/camera.rst:15
msgid "Create a frustum of camera, then create a scene of inside frustum."
msgstr ""

#: ../../pyvista/doc/api/core/camera.rst:81
msgid "Controlling Camera Rotation"
msgstr ""

#: ../../pyvista/doc/api/core/camera.rst:82
msgid ""
"In addition to directly controlling the camera position by setting it via "
"the :py:attr:`pyvista.Camera.position` property, you can also directly "
"control the :py:attr:`pyvista.Camera.roll`, "
":py:attr:`pyvista.Camera.elevation`, and :py:attr:`pyvista.Camera.azimuth` "
"of the camera."
msgstr ""

#: ../../pyvista/doc/api/core/camera.rst:90
msgid ""
"For example, you can modify the roll.  First, generate a plot of an "
"orientation cube while initially setting the camera position to look at the "
"``'yz'``."
msgstr ""

#: ../../pyvista/doc/api/core/camera.rst:103
msgid "Here we modify the roll in-place."
msgstr ""

#: ../../pyvista/doc/api/core/camera.rst:114
msgid ""
"And here we offset the azimuth of the camera by 45 degrees to look at the "
"``X+`` and ``Y+`` faces."
msgstr ""

#: ../../pyvista/doc/api/core/camera.rst:126
msgid ""
"Here, we move upward by setting the elevation of the camera to 45 degrees to"
" see the ``X+`` and ``Z+`` faces."
msgstr ""

#: ../../pyvista/doc/api/core/camera.rst:140
#: ../../pyvista/doc/api/core/lights.rst:112
msgid "API reference"
msgstr ""

#: ../../pyvista/doc/api/core/camera.rst:144:<autosummary>:1
msgid ":py:obj:`pyvista.Camera <pyvista.Camera>`\\ \\(\\[renderer\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/core/composite.rst:2
msgid "Composite Datasets"
msgstr ""

#: ../../pyvista/doc/api/core/composite.rst:4
msgid ""
"The :class:`pyvista.MultiBlock` class is a composite class to hold many data"
" sets which can be iterated over. ``MultiBlock`` behaves mostly like a list,"
" but has some dictionary-like features."
msgstr ""

#: ../../pyvista/doc/api/core/composite.rst:9
msgid "List-like Features"
msgstr ""

#: ../../pyvista/doc/api/core/composite.rst:11
msgid "Create empty composite dataset"
msgstr ""

#: ../../pyvista/doc/api/core/composite.rst:32
msgid "Add some data to the collection."
msgstr ""

#: ../../pyvista/doc/api/core/composite.rst:39
msgid "Plotting the ``MultiBlock`` plots all the meshes contained by it."
msgstr ""

#: ../../pyvista/doc/api/core/composite.rst:45
msgid ""
"``MultiBlock`` is list-like, so individual blocks can be accessed via "
"indices."
msgstr ""

#: ../../pyvista/doc/api/core/composite.rst:52
msgid "The length of the block can be accessed through :func:`len`"
msgstr ""

#: ../../pyvista/doc/api/core/composite.rst:58
msgid "or through the ``n_blocks`` attribute"
msgstr ""

#: ../../pyvista/doc/api/core/composite.rst:64
msgid ""
"More specifically, ``MultiBlock`` is a "
":class:`collections.abc.MutableSequence` and supports operations such as "
"append, pop, insert, etc. Some of these operations allow optional names to "
"be provided for the dictionary like usage."
msgstr ""

#: ../../pyvista/doc/api/core/composite.rst:74
msgid "``MultiBlock`` also supports slicing for getting or setting blocks."
msgstr ""

#: ../../pyvista/doc/api/core/composite.rst:82
msgid "Dictionary-like Features"
msgstr ""

#: ../../pyvista/doc/api/core/composite.rst:85
msgid ""
"``MultiBlock`` also has some dictionary features.  We can set the name of "
"the blocks, and then access them"
msgstr ""

#: ../../pyvista/doc/api/core/composite.rst:95
msgid ""
"It is important to note that ``MultiBlock`` is not a dictionary and does not"
" enforce unique keys.  Keys can also be ``None``.  Extra care must be taken "
"to avoid problems using the dictionary-like features."
msgstr ""

#: ../../pyvista/doc/api/core/composite.rst:99
msgid ""
"PyVista tries to keep the keys ordered correctly when doing list operations."
msgstr ""

#: ../../pyvista/doc/api/core/composite.rst:106
msgid ""
"The dictionary like features are useful when reading in data from a file.  "
"The keys are often more understandable to access the data than the index. "
":func:`pyvista.examples.download_cavity() "
"<pyvista.examples.downloads.download_cavity>` is an OpenFoam dataset with a "
"nested ``MultiBlock`` structure.  There are two entries in the top-level "
"object"
msgstr ""

#: ../../pyvista/doc/api/core/composite.rst:117
msgid "``\"internalMesh\"`` is a :class:`pyvista.UnstructuredGrid`."
msgstr ""

#: ../../pyvista/doc/api/core/composite.rst:123
msgid "``\"boundary\"`` is another :class:`pyvista.MultiBlock`."
msgstr ""

#: ../../pyvista/doc/api/core/composite.rst:129
msgid ""
"Using the dictionary like features of :class:`pyvista.MultiBlock` allow for "
"easier inspection and use of the data coming from an outside source.  The "
"names of each key correspond to human understable portions of the dataset."
msgstr ""

#: ../../pyvista/doc/api/core/composite.rst:137
msgid "Examples using this class:"
msgstr ""

#: ../../pyvista/doc/api/core/composite.rst:139
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:24
msgid ":ref:`slice_example`"
msgstr ""

#: ../../pyvista/doc/api/core/composite.rst:140
msgid ":ref:`volumetric_example`"
msgstr ""

#: ../../pyvista/doc/api/core/composite.rst:141
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:25
msgid ":ref:`depth_peeling_example`"
msgstr ""

#: ../../pyvista/doc/api/core/composite.rst:145
msgid "MultiBlock API Reference"
msgstr ""

#: ../../pyvista/doc/api/core/composite.rst:146
msgid ""
"The :class:`pyvista.MultiBlock` class holds attributes that are *common* to "
"all spatially referenced datasets in PyVista.  This base class is analogous "
"to VTK's `vtk.vtkMultiBlockDataSet`_ class."
msgstr ""

#: ../../pyvista/doc/api/core/composite.rst:154:<autosummary>:1
msgid ":py:obj:`pyvista.MultiBlock <pyvista.MultiBlock>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/core/dataset.rst:4
msgid "Data Sets"
msgstr ""

#: ../../pyvista/doc/api/core/dataset.rst:5
msgid ""
"Datasets are any spatially referenced information and usually consist of "
"geometrical representations of a surface or volume in 3D space. In VTK, this"
" superclass is represented by the `vtk.vtkDataSet`_ abstract class."
msgstr ""

#: ../../pyvista/doc/api/core/dataset.rst:9
msgid ""
"In VTK, datasets consist of geometry, topology, and attributes to which "
"PyVista provides direct access:"
msgstr ""

#: ../../pyvista/doc/api/core/dataset.rst:12
msgid "Geometry is the collection of points and cells in 2D or 3D space."
msgstr ""

#: ../../pyvista/doc/api/core/dataset.rst:13
msgid ""
"Topology defines the structure of the dataset, or how the points are "
"connected to each other to form a cells making a surface or volume."
msgstr ""

#: ../../pyvista/doc/api/core/dataset.rst:15
msgid ""
"Attributes are any data values that are associated to either the points or "
"cells of the dataset"
msgstr ""

#: ../../pyvista/doc/api/core/dataset.rst:18
msgid ""
"All of the following data types are listed subclasses of a dataset and share"
" a set of common functionality which we wrap into the base class "
":class:`pyvista.DataSet`."
msgstr ""

#: ../../pyvista/doc/api/core/dataset.rst:22
msgid ""
"For additional details regarding PyVista's data model, please see "
":ref:`pyvista_data_model`."
msgstr ""

#: ../../pyvista/doc/api/core/dataset.rst:27
msgid "Dataset API Reference"
msgstr ""

#: ../../pyvista/doc/api/core/dataset.rst:28
msgid ""
"The :class:`pyvista.DataSet` class holds attributes that are *common* to all"
" spatially referenced datasets in PyVista.  This base class is analogous to "
"VTK's `vtk.vtkDataSet`_ class."
msgstr ""

#: ../../pyvista/doc/api/core/dataset.rst:32
msgid ""
"The :class:`pyvista.DataSetAttributes` class contains the methods to access "
"arrays associated with cells, points, and the DataSet in general (fields)."
msgstr ""

#: ../../pyvista/doc/api/core/dataset.rst:40:<autosummary>:1
msgid ":py:obj:`pyvista.DataSet <pyvista.DataSet>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/core/dataset.rst:40:<autosummary>:1
msgid ""
":py:obj:`pyvista.DataSetAttributes <pyvista.DataSetAttributes>`\\ "
"\\(vtkobject\\, ...\\)"
msgstr ""

#: ../../pyvista/doc/api/core/filters.rst:4
msgid "Filters"
msgstr ""

#: ../../pyvista/doc/api/core/filters.rst:9
msgid "Dataset Filters"
msgstr ""

#: ../../pyvista/doc/api/core/filters.rst:10
msgid ""
"The :class:`pyvista.DataSetFilters` is inherited by :class:`pyvista.DataSet`"
" making all the following filters available as callable methods directly "
"from any PyVista dataset."
msgstr ""

#: ../../pyvista/doc/api/core/filters.rst:19:<autosummary>:1
msgid ":py:obj:`DataSetFilters <pyvista.DataSetFilters>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/core/filters.rst:21
msgid "PolyData Filters"
msgstr ""

#: ../../pyvista/doc/api/core/filters.rst:22
msgid ""
"The :class:`pyvista.PolyDataFilters` is inherited by "
":class:`pyvista.PolyData` making all the following filters available as "
"callable methods directly from any ``PolyData`` mesh."
msgstr ""

#: ../../pyvista/doc/api/core/filters.rst:31:<autosummary>:1
msgid ":py:obj:`PolyDataFilters <pyvista.PolyDataFilters>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/core/filters.rst:33
msgid "UnstructuredGrid Filters"
msgstr ""

#: ../../pyvista/doc/api/core/filters.rst:34
msgid ""
"The :class:`pyvista.UnstructuredGridFilters` is inherited by "
":class:`pyvista.UnstructuredGrid` making all the following filters available"
" as callable methods directly from any ``UnstructuredGrid`` mesh."
msgstr ""

#: ../../pyvista/doc/api/core/filters.rst:43:<autosummary>:1
msgid ""
":py:obj:`UnstructuredGridFilters <pyvista.UnstructuredGridFilters>`\\ "
"\\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/core/filters.rst:45
msgid "UniformGrid Filters"
msgstr ""

#: ../../pyvista/doc/api/core/filters.rst:46
msgid ""
"The :class:`pyvista.UniformGridFilters` is inherited by "
":class:`pyvista.UniformGrid` making all the following filters available as "
"callable methods directly from any ``UniformGrid`` mesh."
msgstr ""

#: ../../pyvista/doc/api/core/filters.rst:55:<autosummary>:1
msgid ""
":py:obj:`UniformGridFilters <pyvista.UniformGridFilters>`\\ \\(\\*args\\, "
"\\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/core/filters.rst:57
msgid "Composite Filters"
msgstr ""

#: ../../pyvista/doc/api/core/filters.rst:58
msgid ""
"These are filters that can be applied to composite datasets, i.e. "
":class:`pyvista.MultiBlock`. The :class:`pyvista.CompositeFilters` class "
"inherits many but not all of the filters from "
":class:`pyvista.DataSetFilters`."
msgstr ""

#: ../../pyvista/doc/api/core/filters.rst:65:<autosummary>:1
msgid ""
":py:obj:`CompositeFilters <pyvista.CompositeFilters>`\\ \\(\\*args\\, "
"\\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/core/grids.rst:15
msgid "Gridded Data"
msgstr ""

#: ../../pyvista/doc/api/core/grids.rst:17
msgid ""
"Gridded datasets in PyVista are datasets with topologically regular point "
"spacing.  These are less flexible than :ref:`point_sets_api`, but are much "
"more memory efficient as they can be described with a handful of parameters "
"rather than having to explicitly describe the points and geometry of the "
"dataset."
msgstr ""

#: ../../pyvista/doc/api/core/grids.rst:23
msgid ""
"PyVista gridded data is composed of the :class:`pyvista.RectilinearGrid` and"
" :class:`pyvista.UniformGrid` classes.  These classes inherit from the "
"`vtkRectilinearGrid`_ and `vtkImageData`_ classes and are commonly used to "
"model images or volumetric data."
msgstr ""

#: ../../pyvista/doc/api/core/grids.rst:29
msgid ""
"A :class:`pyvista.RectilinearGrid` is used for modeling datasets with "
"variable spacing in the three coordinate directions."
msgstr ""

#: ../../pyvista/doc/api/core/grids.rst:39
msgid ""
"A :class:`pyvista.UniformGrid` is used for modeling datasets with uniform "
"spacing in the three coordinate directions."
msgstr ""

#: ../../pyvista/doc/api/core/grids.rst:49
#: ../../pyvista/doc/api/core/pointsets.rst:68
msgid "**Class Descriptions**"
msgstr ""

#: ../../pyvista/doc/api/core/grids.rst:51
msgid ""
"The following table describes PyVista's grid set classes.  These classes "
"inherit all methods from their corresponding VTK `vtkRectilinearGrid`_ and "
"`vtkImageData`_ superclasses."
msgstr ""

#: ../../pyvista/doc/api/core/grids.rst:60:<autosummary>:1
msgid ""
":py:obj:`pyvista.RectilinearGrid <pyvista.RectilinearGrid>`\\ "
"\\(\\*args\\[\\, ...\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/core/grids.rst:60:<autosummary>:1
msgid ""
":py:obj:`pyvista.UniformGrid <pyvista.UniformGrid>`\\ \\(\\[uinput\\, "
"dimensions\\, ...\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/core/helpers.rst:2
msgid "Helpers"
msgstr ""

#: ../../pyvista/doc/api/core/helpers.rst:4
msgid ""
"The ``pyvista`` module contains several functions to simplify the creation "
"and manipulation of meshes or interfacing with VTK datasets."
msgstr ""

#: ../../pyvista/doc/api/core/helpers.rst:9
msgid "Wrap a VTK Dataset"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:28:<autosummary>:1
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.wrap:2
msgid "Wrap any given VTK data object to its appropriate PyVista data object."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.wrap:4
msgid "Other formats that are supported include:"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.wrap:6
msgid "2D :class:`numpy.ndarray` of XYZ vertices"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.wrap:7
msgid ""
"3D :class:`numpy.ndarray` representing a volume. Values will be scalars."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.wrap:8
msgid "3D :class:`trimesh.Trimesh` mesh."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.wrap:9
msgid "3D :class:`meshio.Mesh` mesh."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.wrap:14
msgid ""
"**dataset** : :class:`numpy.ndarray`, :class:`trimesh.Trimesh`, :obj:`or` "
":obj:`VTK` :obj:`object`"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.wrap:13
msgid "numpy.ndarray, trimesh.Trimesh, or VTK object"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.wrap:14
msgid "Dataset to wrap."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.wrap:19
msgid "The PyVista wrapped dataset."
msgstr ""

#: ../../pyvista/doc/api/core/helpers.rst:3
#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.wrap.rst:3
msgid "Wrap a numpy array representing a random point cloud."
msgstr ""

#: ../../pyvista/doc/api/core/helpers.rst:18
#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.wrap.rst:18
msgid "Wrap a Trimesh object."
msgstr ""

#: ../../pyvista/doc/api/core/helpers.rst:35
#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.wrap.rst:35
msgid "Wrap a VTK object."
msgstr ""

#: ../../pyvista/doc/api/core/helpers.rst:14
msgid "Simplified Triangular Mesh Construction"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.make_tri_mesh:2
msgid "Construct a ``pyvista.PolyData`` mesh using points and faces arrays."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.make_tri_mesh:4
msgid ""
"Construct a mesh from an Nx3 array of points and an Mx3 array of triangle "
"indices, resulting in a mesh with N vertices and M triangles.  This function"
" does not require the standard VTK \"padding\" column and simplifies mesh "
"creation."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.lines_from_points:10
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.make_tri_mesh:13
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.Spline:9
msgid "**points** : :obj:`np.ndarray <numpy.ndarray>`"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.make_tri_mesh:12
msgid ""
"Array of points with shape ``(N, 3)`` storing the vertices of the triangle "
"mesh."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.make_tri_mesh:17
msgid "**faces** : :obj:`np.ndarray <numpy.ndarray>`"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.make_tri_mesh:16
msgid ""
"Array of indices with shape ``(M, 3)`` containing the triangle indices."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.make_tri_mesh:22
msgid "PolyData instance containing the triangle mesh."
msgstr ""

#: ../../pyvista/doc/api/core/helpers.rst:3
msgid ""
"This example discretizes the unit square into a triangle mesh with nine "
"vertices and eight faces."
msgstr ""

#: ../../pyvista/doc/api/core/helpers.rst:19
msgid "Lines from Points"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:51:<autosummary>:1
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.lines_from_points:2
msgid "Make a connected line set given an array of points."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.lines_from_points:8
msgid ""
"Points representing the vertices of the connected segments. For example, two"
" line segments would be represented as ``np.array([[0, 0, 0], [1, 0, 0], [1,"
" 1, 0]])``."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.lines_from_points:13
msgid ""
"**close** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:False`"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.lines_from_points:13
msgid "If ``True``, close the line segments into a loop."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.line_segments_from_points:18
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.lines_from_points:18
msgid "PolyData with lines and cells."
msgstr ""

#: ../../pyvista/doc/api/core/helpers.rst:24
msgid "Line Segments from Points"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.line_segments_from_points:2
msgid "Generate non-connected line segments from points."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.line_segments_from_points:4
msgid ""
"Assumes points are ordered as line segments and an even number of points."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.axis_rotation:8
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.line_segments_from_points:13
msgid "**points** : :obj:`numpy.ndarray`"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.line_segments_from_points:10
msgid ""
"Points representing line segments. An even number must be given as every two"
" vertices represent a single line segment. For example, two line segments "
"would be represented as ``np.array([[0, 0, 0], [1, 0, 0], [1, 0, 0], [1, 1, "
"0]])``."
msgstr ""

#: ../../pyvista/doc/api/core/helpers.rst:3
msgid "This example plots two line segments at right angles to each other."
msgstr ""

#: ../../pyvista/doc/api/core/helpers.rst:29
msgid "Convert to and from VTK Datatypes"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:63:<autosummary>:1
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.convert_array:2
msgid "Convert a NumPy array to a vtkDataArray or vice versa."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.convert_array:8
msgid "**arr** : :obj:`np.ndarray <numpy.ndarray>` or :obj:`vtkDataArray`"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.convert_array:7
msgid "np.ndarray or vtkDataArray"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.convert_array:8
msgid "A numpy array or vtkDataArry to convert."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.convert_array:11
msgid "The name of the data array for VTK."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.convert_array:14
msgid "If input is numpy array then deep copy values."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.convert_array:17
msgid "**array_type** : :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.convert_array:17
msgid "VTK array type ID as specified in specified in ``vtkType.h``."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.convert_array:36
msgid ":obj:`vtkDataArray`, :obj:`numpy.ndarray`, :obj:`or` :obj:`DataFrame`"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.convert_array:22
msgid ""
"The converted array.  If input is a :class:`numpy.ndarray` then returns "
"``vtkDataArray`` or is input is ``vtkDataArray`` then returns NumPy "
"``ndarray``."
msgstr ""

#: ../../pyvista/doc/api/core/helpers.rst:34
msgid "Fit Plane to Points"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:51:<autosummary>:1
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.fit_plane_to_points:2
msgid "Fit a plane to a set of points using the SVD algorithm."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.fit_plane_to_points:8
msgid "**points** : :term:`python:sequence`"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.fit_plane_to_points:8
msgid "Size ``[N x 3]`` sequence of points to fit a plane through."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.fit_plane_to_points:12
msgid ""
"**return_meta** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:False`"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.fit_plane_to_points:11
msgid ""
"If ``True``, also returns the center and normal used to generate the plane."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Plane:28
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.fit_plane_to_points:17
msgid "Plane mesh."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.fit_plane_to_points:20
msgid "Plane center if ``return_meta=True``."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.fit_plane_to_points:23
msgid "Plane normal if ``return_meta=True``."
msgstr ""

#: ../../pyvista/doc/api/core/helpers.rst:3
#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.fit_plane_to_points.rst:3
msgid "Fit a plane to a random point cloud."
msgstr ""

#: ../../pyvista/doc/api/core/helpers.rst:11
#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.fit_plane_to_points.rst:11
msgid "Plot the fitted plane."
msgstr ""

#: ../../pyvista/doc/api/core/index.rst:4
msgid "Core API"
msgstr ""

#: ../../pyvista/doc/api/core/index.rst:6
msgid ""
"The `Visualization Toolkit`_ (VTK), developed by Kitware_, has many mesh "
"data types that PyVista wraps. This chapter is intended to describe these "
"different mesh types and how we wrap and implement each of those mesh types "
"in VTK. This chapter also highlights how all PyVista types have direct "
"access to common VTK filters (see :ref:`filters_ref`)."
msgstr ""

#: ../../pyvista/doc/api/core/index.rst:17
msgid ""
"All PyVista meshes inherit from the DataSet type (see :ref:`ref_dataset`). "
"PyVista has the following mesh types:"
msgstr ""

#: ../../pyvista/doc/api/core/index.rst:20
msgid ""
":class:`pyvista.PointSet` is used to represent a set of points. This is to "
"provide an interface for datasets that explicitly use \"point\" arrays to "
"represent geometry. The :class:`pyvista.PointSet` class is an extension of "
"`vtk.vtkPointSet`_."
msgstr ""

#: ../../pyvista/doc/api/core/index.rst:22
msgid ""
":class:`pyvista.PolyData` consists of any 1D or 2D geometries to construct "
"vertices, lines, polygons, and triangles. We generally use "
":class:`pyvista.PolyData` to construct scattered points and closed/open "
"surfaces (non-volumetric datasets). The :class:`pyvista.PolyData` class is "
"an extension of `vtk.vtkPolyData`_."
msgstr ""

#: ../../pyvista/doc/api/core/index.rst:24
msgid ""
"A :class:`pyvista.UnstructuredGrid` is the most general dataset type that "
"can hold any 1D, 2D, or 3D cell geometries. You can think of this as a 3D "
"extension of :class:`pyvista.PolyData` that allows volumetric cells to be "
"present. It's fairly uncommon to explicitly make unstructured grids but they"
" are often the result of different processing routines that might extract "
"subsets of larger datasets. The :class:`pyvista.UnstructuredGrid` class is "
"an extension of `vtk.vtkUnstructuredGrid`_."
msgstr ""

#: ../../pyvista/doc/api/core/index.rst:26
msgid ""
"A :class:`pyvista.StructuredGrid` is a regular lattice of points aligned "
"with internal coordinate axes such that the connectivity can be defined by a"
" grid ordering. These are commonly made from :func:`numpy.meshgrid`. The "
"cell types of structured grids must be 2D quads or 3D hexahedra. The "
":class:`pyvista.StructuredGrid` class is an extension of "
"`vtk.vtkStructuredGrid`_."
msgstr ""

#: ../../pyvista/doc/api/core/index.rst:28
msgid ""
"A :class:`pyvista.RectilinearGrid` defines meshes with implicit geometries "
"along the axis directions that are rectangular and regular. The "
":class:`pyvista.RectilinearGrid` class is an extension of "
"`vtk.vtkRectilinearGrid`_."
msgstr ""

#: ../../pyvista/doc/api/core/index.rst:30
msgid ""
"Image data, commonly referred to as uniform grids, and defined by the "
":class:`pyvista.UniformGrid` class are meshes with implicit geometries where"
" cell sizes are uniformly assigned along each axis and the spatial reference"
" is built out from an origin point. The :class:`pyvista.UniformGrid` class "
"is an extension of `vtk.vtkImageData`_."
msgstr ""

#: ../../pyvista/doc/api/core/index.rst:32
msgid ""
":class:`pyvista.MultiBlock` datasets are containers to hold several VTK "
"datasets in one accessible and spatially referenced object. The "
":class:`pyvista.MultiBlock` class is an extension of "
"`vtk.vtkMultiBlockDataSet`_."
msgstr ""

#: ../../pyvista/doc/api/core/lights.rst:2
msgid "Lights"
msgstr ""

#: ../../pyvista/doc/api/core/lights.rst:3
msgid ""
"The :class:`pyvista.Light` class adds additional functionality and a "
"pythonic API to the ``vtk.vtkLight`` class. :class:`pyvista.Plotter` objects"
" come with a default set of lights that work well in most cases, but in many"
" situations a more hands-on access to lighting is necessary."
msgstr ""

#: ../../pyvista/doc/api/core/lights.rst:12
msgid ""
"Create a red spotlight that shines on the origin, then create a scene "
"without lighting and add our light to it manually."
msgstr ""

#: ../../pyvista/doc/api/core/lights.rst:33
msgid "For detailed examples please see :ref:`ref_light_examples`."
msgstr ""

#: ../../pyvista/doc/api/core/lights.rst:37
msgid "Light API"
msgstr ""

#: ../../pyvista/doc/api/core/lights.rst:38
msgid ""
"``pyvista.Light`` instances come in three types: headlights, camera lights, "
"and scene lights. Headlights always shine along the camera's axis, camera "
"lights have a fixed position with respect to the camera, and scene lights "
"are positioned with respect to the scene, such that moving around the camera"
" doesn't affect the lighting of the scene."
msgstr ""

#: ../../pyvista/doc/api/core/lights.rst:44
msgid ""
"Lights have a :py:attr:`position` and a :py:attr:`focal_point` that define "
"the axis of the light. The meaning of these depends on the type of the "
"light. The color of the light can be set according to ambient, diffuse and "
"specular components. The brightness can be set with the :py:attr:`intensity`"
" property, and the writable :py:attr:`on` property specifies whether the "
"light is switched on."
msgstr ""

#: ../../pyvista/doc/api/core/lights.rst:50
msgid ""
"Lights can be either directional (meaning an infinitely distant point "
"source) or :py:attr:`positional`. Positional lights have additional "
"properties that describe the geometry and the spatial distribution of the "
"light. The :py:attr:`cone_angle` and :py:attr:`exponent` properties define "
"the shape of the light beam and the angular distribution of the light's "
"intensity within that beam. The fading of the light with distance can be "
"customized with the :py:attr:`attenuation_values` property. Positional "
"lights can also make use of an actor that represents the shape and color of "
"the light using a wireframe, see :func:`show_actor`."
msgstr ""

#: ../../pyvista/doc/api/core/lights.rst:59
msgid ""
"Positional lights with a :py:attr:`cone_angle` of less than 90 degrees are "
"known as spotlights. Spotlights are unidirectional and they make full use of"
" beam shaping properties, namely :py:attr:`exponent` and attenuation.  Non-"
"spotlight positional lights, however, act like point sources located in the "
"real-world position of the light, shining in all directions of space. They "
"display attenuation with distance from the source, but their beam is "
"isotropic in space. In contrast, directional lights act as infinitely "
"distant point sources, so they are unidirectional but they do not attenuate."
msgstr ""

#: ../../pyvista/doc/api/core/lights.rst:70
msgid "Shadows"
msgstr ""

#: ../../pyvista/doc/api/core/lights.rst:71
msgid ""
"With directed lights, it is possible to create complex lighting scenarios.  "
"For example, you can position a light directly above an actor (in this case,"
" a sphere), to create a shadow directly below it."
msgstr ""

#: ../../pyvista/doc/api/core/lights.rst:75
msgid ""
"The following example uses a positional light to create an eclipse-like "
"shadow below a sphere by controlling the cone angle and exponent values of "
"the light."
msgstr ""

#: ../../pyvista/doc/api/core/lights.rst:106
msgid ""
"VTK has known issues when rendering shadows on certain window sizes.  Be "
"prepared to experiment with the ``window_size`` parameter."
msgstr ""

#: ../../pyvista/doc/api/core/lights.rst:119:<autosummary>:1
msgid ":py:obj:`Light <pyvista.Light>`\\ \\(\\[position\\, focal\\_point\\, color\\, ...\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/core/misc.rst:2
#: ../../pyvista/doc/api/utilities/utilities.rst:73
msgid "Miscellaneous"
msgstr ""

#: ../../pyvista/doc/api/core/misc.rst:4
msgid ""
"These miscellaneous methods are used to support imaging or data sampling."
msgstr ""

#: ../../pyvista/doc/api/core/misc.rst:10:<autosummary>:1
msgid ""
":py:obj:`pyvista.utilities.common.sample_function "
"<pyvista.utilities.common.sample_function>`\\ \\(...\\)"
msgstr ""

#: ../../pyvista/doc/api/core/misc.rst:10:<autosummary>:1
msgid ""
":py:obj:`pyvista.utilities.common.perlin_noise "
"<pyvista.utilities.common.perlin_noise>`\\ \\(...\\)"
msgstr ""

#: ../../pyvista/doc/api/core/objects.rst:2
msgid "DataObject"
msgstr ""

#: ../../pyvista/doc/api/core/objects.rst:4
msgid ""
"The :class:`pyvista.DataObject` class is a set of common methods and "
"attributes for all PyVista types. These objects have no spatial reference, "
"but simply hold data."
msgstr ""

#: ../../pyvista/doc/api/core/objects.rst:8
msgid "See :ref:`pyvista_data_model` for further details."
msgstr ""

#: ../../pyvista/doc/api/core/objects.rst:15:<autosummary>:1
msgid ":py:obj:`pyvista.DataObject <pyvista.DataObject>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/core/objects.rst:17
msgid "Table"
msgstr ""

#: ../../pyvista/doc/api/core/objects.rst:19
msgid ""
"The table class is a non-spatially referenced data object that can be used "
"on VTK pipelines and holds arrays of data."
msgstr ""

#: ../../pyvista/doc/api/core/objects.rst:25:<autosummary>:1
msgid ":py:obj:`pyvista.Table <pyvista.Table>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:4
msgid "Point Sets"
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:6
msgid ""
"PyVista point sets are datasets with explicit geometry where the point and "
"cell topology are specified and not inferred.  PyVista point sets are "
"modeled after the same data model as VTK's point sets while being designed "
"to make creation, array access, and plotting more straightforward than their"
" VTK counterparts."
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:12
msgid ""
"The :class:`pyvista.UnstructuredGrid` class is used for arbitrary "
"combinations of all possible cell types:"
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:34
msgid ""
"The :class:`pyvista.PolyData` is used for datasets consisting of surface "
"geometry (e.g. vertices, lines, and polygons):"
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:44
msgid ""
"The :class:`pyvista.StructuredGrid` is used for topologically regular arrays"
" of data:"
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:54
msgid ""
"The :class:`pyvista.PointSet` (as of ``vtk==9.1.0``) is a concrete class for"
" storing a set of points."
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:70
msgid ""
"The following table describes PyVista's point set classes.  These classes "
"inherit all methods from their corresponding VTK `vtkPointSet`_, "
"`vtkPolyData`_, `vtkUnstructuredGrid`_, `vtkStructuredGrid`_, and "
"`vtkExplicitStructuredGrid`_ superclasses."
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:83:<autosummary>:1
msgid ":py:obj:`pyvista.PointSet <pyvista.PointSet>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:83:<autosummary>:1
msgid ""
":py:obj:`pyvista.PolyData <pyvista.PolyData>`\\ \\(\\[var\\_inp\\, faces\\, "
"n\\_faces\\, ...\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:83:<autosummary>:1
msgid "Dataset consisting of surface geometry (e.g."
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:83:<autosummary>:1
msgid ""
":py:obj:`pyvista.UnstructuredGrid <pyvista.UnstructuredGrid>`\\ "
"\\(\\*args\\[\\, deep\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:83:<autosummary>:1
msgid ""
":py:obj:`pyvista.StructuredGrid <pyvista.StructuredGrid>`\\ \\(\\[uinput\\, "
"y\\, z\\, deep\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:83:<autosummary>:1
msgid ""
":py:obj:`pyvista.ExplicitStructuredGrid <pyvista.ExplicitStructuredGrid>`\\ "
"\\(\\*args\\[\\, deep\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:92
msgid "PolyData Creation"
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:95
#: ../../pyvista/doc/api/core/pointsets.rst:270
msgid "Empty Object"
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:96
msgid "A :class:`pyvista.PolyData` object can be initialized with:"
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:103
msgid "This creates an mesh, which you can then add"
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:105
msgid "Points with :attr:`points <pyvista.Dataset.points>`"
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:106
msgid "Vertices with :attr:`verts <pyvista.Dataset.verts>`"
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:107
msgid "Lines with :attr:`lines <pyvista.PolyData.lines>`"
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:108
msgid "Faces with :attr:`faces <pyvista.PolyData.faces>`"
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:110
msgid ""
"Note that unlike :class:`pyvista.UnstructuredGrid`, you do not specify cell "
"types.  All faces are assumed to be polygons, hence the name \"Poly\" data."
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:114
msgid ""
"Click on the attributes above to see examples of how to add geometric "
"features to an empty.  See :ref:`ref_create_poly` for an example on creating"
" a :class:`pyvista.PolyData` object from NumPy arrays."
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:120
msgid "Initialize from a File"
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:121
msgid ""
"Both binary and ASCII .ply, .stl, and .vtk files can be read using PyVista."
"  For example, the PyVista package contains example meshes and these can be "
"loaded with:"
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:134
msgid "This mesh can then be written to a .vtk file using:"
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:140
msgid "These meshes are identical."
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:151
msgid "Mesh Manipulation and Plotting"
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:152
msgid ""
"Meshes can be directly manipulated using NumPy or with the built-in "
"translation and rotation routines.  This example loads two meshes and moves,"
" scales, copies them, and finally plots them."
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:156
msgid ""
"To plot more than one mesh a :class:`pyvista.Plotter` instance must be "
"created to manage the plotting.  The following code creates a plotter and "
"plots the meshes with various colors."
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:195
msgid "Unstructured Grid Creation"
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:197
msgid ""
"See :ref:`create_unstructured_example` for an example on how to create an "
"unstructured grid from NumPy arrays."
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:202
msgid "Create"
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:203
msgid "An unstructured grid can be initialized with:"
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:210
msgid ""
"This creates an empty grid, and is it not useful until points and cells are "
"added to it. Points and cells can be added later with :attr:`points "
"<pyvista.Dataset.points>`, :attr:`cells <pyvista.UnstructuredGrid.cells>`, "
"and :attr:`celltypes <pyvista.UnstructuredGrid.celltypes>` ."
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:216
msgid ""
"Alternatively, you can add points and cells directly when initializing."
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:246
msgid "We can plot this with colors with:"
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:254
#: ../../pyvista/doc/api/core/pointsets.rst:304
msgid "Loading from File"
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:255
msgid "Unstructured grids can be loaded from a vtk file."
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:267
msgid "Structured Grid Creation"
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:271
msgid "A structured grid can be initialized with:"
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:280
msgid "Creating from Numpy Arrays"
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:281
msgid ""
"A structured grid can be created directly from numpy arrays.  This is useful"
" when creating a grid from scratch or copying it from another format."
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:284
msgid ""
"Also see :ref:`ref_create_structured` for an example on creating a "
"structured grid from NumPy arrays."
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:305
msgid "Structured grids can be loaded from a ``vtk`` file."
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:313
msgid "Plotting Grids"
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:314
msgid ""
"This example shows how you can load an unstructured grid from a ``vtk`` file"
" and create a plot and gif movie by updating the plotting object."
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:335
msgid "A simple plot can be created by using:"
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:348
msgid "A more complex plot can be created using:"
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:363
msgid ""
"You can animate the motion of the beam by updating the positions and scalars"
" of the grid copied to the plotting object.  Here is a full example:"
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:408
msgid "You can also render the beam as as a wire-frame object:"
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:435
msgid "Adding Labels to a Plot"
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:436
msgid ""
"Labels can be added to a plot using :func:`add_point_labels() "
"<pyvista.BasePlotter.add_point_labels>` within the :class:`Plotter "
"<pyvista.BasePlotter>`. The following example loads the included example "
"beam, generates a plotting class, and sub-selects points along the y-z plane"
" and labels their coordinates.  :func:`add_point_labels() "
"<pyvista.BasePlotter.add_point_labels>` requires that the number of labels "
"matches the number of points, and that labels is a list containing one entry"
" per point.  The code automatically converts each item in the list to a "
"string."
msgstr ""

#: ../../pyvista/doc/api/core/pointsets.rst:476
msgid ""
"This example is similar and shows how labels can be combined with a scalar "
"bar to show the exact value of certain points."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.demos.demos.rst:2
msgid "pyvista.demos.demos"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:46:<autosummary>:1
#: ../../pyvista/pyvista/demos/demos.pydocstring of pyvista.demos.demos:1
msgid "Demos to show off the functionality of PyVista."
msgstr ""

#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.glyphs:2
msgid ""
"Create several parametric supertoroids using VTK's glyph table "
"functionality."
msgstr ""

#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.glyphs:8 ../../pyvista/pyvista/demos/demos.pydocstring
#: of pyvista.demos.demos.plot_glyphs:8
msgid "**grid_sz** : :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.glyphs:8 ../../pyvista/pyvista/demos/demos.pydocstring
#: of pyvista.demos.demos.plot_glyphs:8
msgid "Create ``grid_sz x grid_sz`` supertoroids."
msgstr ""

#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.glyphs:13
msgid "Mesh of supertoroids."
msgstr ""

#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.glyphs:24
msgid ":obj:`plot_glyphs`"
msgstr ""

#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.orientation_cube:2
msgid ""
"Return a dictionary containing the meshes composing an orientation cube."
msgstr ""

#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.orientation_cube:9
msgid "Dictionary containing the meshes composing an orientation cube."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.demos.demos.rst:3
msgid "Load the cube mesh and plot it"
msgstr ""

#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.orientation_plotter:2
msgid "Return a plotter containing the orientation cube."
msgstr ""

#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.orientation_plotter:18
msgid ":obj:`pyvista.Plotter`"
msgstr ""

#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.orientation_plotter:9
msgid "Orientation cube plotter."
msgstr ""

#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_ants_plane:2
msgid "Plot two ants and airplane."
msgstr ""

#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_ants_plane:4
msgid ""
"Demonstrate how to create a plot class to plot multiple meshes while adding "
"scalars and text."
msgstr ""

#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_ants_plane:7
msgid "This example plots the following:"
msgstr ""

#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_beam:2
msgid "Plot a beam with displacement."
msgstr ""

#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_datasets:2
msgid "Plot the pyvista dataset types."
msgstr ""

#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_datasets:4
msgid "This demo plots the following PyVista dataset types:"
msgstr ""

#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_datasets:6
msgid ":class:`pyvista.PolyData`"
msgstr ""

#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_datasets:7
msgid ":class:`pyvista.UnstructuredGrid`"
msgstr ""

#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_datasets:8
msgid ":class:`pyvista.UniformGrid`"
msgstr ""

#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_datasets:9
msgid ":class:`pyvista.RectilinearGrid`"
msgstr ""

#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_datasets:10
msgid ":class:`pyvista.StructuredGrid`"
msgstr ""

#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_datasets:31
msgid "**dataset_type** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_datasets:15
msgid "If set, plot just that dataset.  Must be one of the following:"
msgstr ""

#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_datasets:17
msgid "``'PolyData'``"
msgstr ""

#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_datasets:18
msgid "``'UnstructuredGrid'``"
msgstr ""

#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_datasets:19
msgid "``'UniformGrid'``"
msgstr ""

#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_datasets:20
msgid "``'RectilinearGrid'``"
msgstr ""

#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_datasets:21
msgid "``'StructuredGrid'``"
msgstr ""

#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_glyphs:2
msgid ""
"Plot several parametric supertoroids using VTK's glyph table functionality."
msgstr ""

#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_glyphs:11
msgid ""
"All additional keyword arguments will be passed to "
":func:`pyvista.Plotter.add_mesh`."
msgstr ""

#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_glyphs:26
msgid ":obj:`various`"
msgstr ""

#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_glyphs:17
msgid "See :func:`show <pyvista.Plotter.show>`."
msgstr ""

#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_wave:2
msgid "Plot a 3D moving wave in a render window."
msgstr ""

#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_wave:8
msgid "**fps** : :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_wave:8
msgid "Maximum frames per second to display.  Defaults to 30."
msgstr ""

#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_wave:11
msgid "**frequency** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_wave:11
msgid "Wave cycles per second.  Defaults to 1 Hz."
msgstr ""

#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_wave:14
msgid "**wavetime** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_wave:14
msgid "The desired total display time in seconds.  Defaults to 3 seconds."
msgstr ""

#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_wave:17
msgid ""
"Allows the user to set the camera position before the start of the wave "
"movement.  Default ``False``."
msgstr ""

#: ../../pyvista/pyvista/demos/demos.pydocstring of
#: pyvista.demos.demos.plot_wave:27
msgid "Position of points at last frame."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Empty.rst:2
msgid "Empty"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:137:<autosummary>:1
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Empty:2
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Tetrahedron:2
msgid ""
"Create a :class:`pyvista.UnstructuredGrid` containing a single Tetrahedron."
msgstr ""

#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Empty:4
msgid ""
"This cell corresponds to the :attr:`pyvista.CellType.EMPTY_CELL` cell type."
msgstr ""

#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Empty:10
msgid "UnstructuredGrid containing a single empty cell."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Empty.rst:3
msgid "Create a single empty cell."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Empty.rst:8
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.HexagonalPrism.rst:9
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Hexahedron.rst:9
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Line.rst:9
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.PentagonalPrism.rst:9
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Polygon.rst:9
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Pyramid.rst:9
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Quadrilateral.rst:9
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Tetrahedron.rst:9
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Triangle.rst:9
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.TriangleStrip.rst:9
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Vertex.rst:9
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Voxel.rst:9
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Wedge.rst:9
msgid "List the grid's cells."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Empty.rst:13
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.HexagonalPrism.rst:14
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Hexahedron.rst:14
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Line.rst:14
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.PentagonalPrism.rst:14
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.PolyLine.rst:14
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.PolyVertex.rst:14
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Polygon.rst:14
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Pyramid.rst:14
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Quadrilateral.rst:14
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Tetrahedron.rst:14
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Triangle.rst:14
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.TriangleStrip.rst:14
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Vertex.rst:14
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Voxel.rst:14
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Wedge.rst:14
msgid "List the grid's points."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.HexagonalPrism.rst:2
msgid "HexagonalPrism"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:137:<autosummary>:1
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.HexagonalPrism:2
msgid ""
"Create a :class:`pyvista.UnstructuredGrid` containing a single hexagonal "
"prism."
msgstr ""

#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.HexagonalPrism:4
msgid ""
"This cell corresponds to the :attr:`pyvista.CellType.HEXAGONAL_PRISM` cell "
"type."
msgstr ""

#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.HexagonalPrism:10
msgid "UnstructuredGrid containing a single hexagonal prism."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.HexagonalPrism.rst:3
msgid "Create and plot a single hexagonal prism."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Hexahedron.rst:2
msgid "Hexahedron"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:137:<autosummary>:1
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Hexahedron:2
msgid ""
"Create a :class:`pyvista.UnstructuredGrid` containing a single hexahedron."
msgstr ""

#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Hexahedron:4
msgid ""
"This cell corresponds to the :attr:`pyvista.CellType.HEXAHEDRON` cell type."
msgstr ""

#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Hexahedron:10
msgid "UnstructuredGrid containing a single hexahedron."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Hexahedron.rst:3
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.plot_cell.rst:3
msgid "Create and plot a single hexahedron."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Line.rst:2
#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Line.rst:2
msgid "Line"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:137:<autosummary>:1
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Line:2
msgid "Create a :class:`pyvista.UnstructuredGrid` containing a single Line."
msgstr ""

#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Line:4
msgid "This cell corresponds to the :attr:`pyvista.CellType.LINE` cell type."
msgstr ""

#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Line:10
msgid "UnstructuredGrid containing a single line."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Line.rst:3
msgid "Create and plot a single line."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.PentagonalPrism.rst:2
msgid "PentagonalPrism"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:137:<autosummary>:1
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.PentagonalPrism:2
msgid ""
"Create a :class:`pyvista.UnstructuredGrid` containing a single pentagonal "
"prism."
msgstr ""

#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.PentagonalPrism:4
msgid ""
"This cell corresponds to the :attr:`pyvista.CellType.PENTAGONAL_PRISM` cell "
"type."
msgstr ""

#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.PentagonalPrism:10
msgid "UnstructuredGrid containing a single pentagonal prism."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.PentagonalPrism.rst:3
msgid "Create and plot a single pentagonal prism."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.PolyLine.rst:2
msgid "PolyLine"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:137:<autosummary>:1
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.PolyLine:2
msgid ""
"Create a :class:`pyvista.UnstructuredGrid` containing a single poly line."
msgstr ""

#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.PolyLine:4
msgid "This represents a set of line segments as a single cell."
msgstr ""

#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.PolyLine:6
msgid ""
"This cell corresponds to the :attr:`pyvista.CellType.POLY_LINE` cell type."
msgstr ""

#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.PolyLine:12
msgid "UnstructuredGrid containing a single polyline."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.PolyLine.rst:3
msgid "Create and plot a single polyline."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.PolyLine.rst:9
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.PolyVertex.rst:9
msgid "List the grid's cells. This could be any number of points."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.PolyVertex.rst:2
msgid "PolyVertex"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:137:<autosummary>:1
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.PolyVertex:2
msgid ""
"Create a :class:`pyvista.UnstructuredGrid` containing a single poly vertex."
msgstr ""

#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.PolyVertex:4
msgid "This represents a set of 3D vertices as a single cell."
msgstr ""

#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.PolyVertex:6
msgid ""
"This cell corresponds to the :attr:`pyvista.CellType.POLY_VERTEX` cell type."
msgstr ""

#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.PolyVertex:12
msgid "UnstructuredGrid containing a single poly vertex."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.PolyVertex.rst:3
msgid "Create and plot a single poly vertex."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Polygon.rst:2
#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Polygon.rst:2
msgid "Polygon"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:137:<autosummary>:1
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Polygon:2
msgid ""
"Create a :class:`pyvista.UnstructuredGrid` containing a single polygon."
msgstr ""

#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Polygon:4
msgid ""
"This cell corresponds to the :attr:`pyvista.CellType.POLYGON` cell type."
msgstr ""

#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Polygon:10
msgid "UnstructuredGrid containing a single polygon."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Polygon.rst:3
msgid "Create and plot a single polygon."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Pyramid.rst:2
#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Pyramid.rst:2
msgid "Pyramid"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:137:<autosummary>:1
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Pyramid:2
msgid ""
"Create a :class:`pyvista.UnstructuredGrid` containing a single pyramid."
msgstr ""

#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Pyramid:4
msgid ""
"This cell corresponds to the :attr:`pyvista.CellType.PYRAMID` cell type."
msgstr ""

#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Pyramid:10
msgid "UnstructuredGrid containing a single pyramid."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Pyramid.rst:3
msgid "Create and plot a single pyramid."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Quadrilateral.rst:2
msgid "Quadrilateral"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:137:<autosummary>:1
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Quadrilateral:2
msgid ""
"Create a :class:`pyvista.UnstructuredGrid` containing a single "
"quadrilateral."
msgstr ""

#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Quadrilateral:4
msgid "This cell corresponds to the :attr:`pyvista.CellType.QUAD` cell type."
msgstr ""

#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Quadrilateral:10
msgid "UnstructuredGrid containing a single quadrilateral."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Quadrilateral.rst:3
msgid "Create and plot a single quad."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Tetrahedron.rst:2
#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Tetrahedron.rst:2
msgid "Tetrahedron"
msgstr ""

#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Tetrahedron:4
msgid "This cell corresponds to the :attr:`pyvista.CellType.TETRA` cell type."
msgstr ""

#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Tetrahedron:10
msgid "UnstructuredGrid containing a single Tetrahedron."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Tetrahedron.rst:3
msgid "Create and plot a single tetrahedron."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Triangle.rst:2
#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Triangle.rst:2
msgid "Triangle"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:137:<autosummary>:1
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Triangle:2
msgid ""
"Create a :class:`pyvista.UnstructuredGrid` containing a single Triangle."
msgstr ""

#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Triangle:4
msgid ""
"This cell corresponds to the :attr:`pyvista.CellType.TRIANGLE` cell type."
msgstr ""

#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Triangle:10
msgid "UnstructuredGrid containing a single triangle."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Triangle.rst:3
msgid "Create and plot a single triangle."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.TriangleStrip.rst:2
msgid "TriangleStrip"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:137:<autosummary>:1
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.TriangleStrip:2
msgid ""
"Create a :class:`pyvista.UnstructuredGrid` containing a single triangle "
"strip."
msgstr ""

#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.TriangleStrip:4
msgid ""
"This cell corresponds to the :attr:`pyvista.CellType.TRIANGLE_STRIP` cell "
"type."
msgstr ""

#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.TriangleStrip:10
msgid "UnstructuredGrid containing a single triangle strip."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.TriangleStrip.rst:3
msgid "Create and plot a single triangle strip."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Vertex.rst:2
msgid "Vertex"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:137:<autosummary>:1
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Vertex:2
msgid "Create a :class:`pyvista.UnstructuredGrid` containing a single Vertex."
msgstr ""

#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Vertex:4
msgid ""
"This cell corresponds to the :attr:`pyvista.CellType.VERTEX` cell type."
msgstr ""

#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Vertex:10
msgid "UnstructuredGrid containing a single vertex."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Vertex.rst:3
msgid "Create and plot a single vertex."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Voxel.rst:2
msgid "Voxel"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:137:<autosummary>:1
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Voxel:2
msgid "Create a :class:`pyvista.UnstructuredGrid` containing a single voxel."
msgstr ""

#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Voxel:4
msgid "This cell corresponds to the :attr:`pyvista.CellType.VOXEL` cell type."
msgstr ""

#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Voxel:10
msgid "UnstructuredGrid containing a single voxel."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Voxel.rst:3
msgid "Create and plot a single voxel."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Wedge.rst:2
msgid "Wedge"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:137:<autosummary>:1
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Wedge:2
msgid "Create a :class:`pyvista.UnstructuredGrid` containing a single wedge."
msgstr ""

#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Wedge:4
msgid "This cell corresponds to the :attr:`pyvista.CellType.WEDGE` cell type."
msgstr ""

#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.Wedge:10
msgid "UnstructuredGrid containing a single wedge."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.Wedge.rst:3
msgid "Create and plot a single wedge."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.cells.plot_cell.rst:2
msgid "plot\\_cell"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:137:<autosummary>:1
#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.plot_cell:2
msgid ""
"Plot a :class:`pyvista.UnstructuredGrid` while displaying cell indices."
msgstr ""

#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.plot_cell:8
msgid "**grid** : :obj:`pyvista.UnstructuredGrid`"
msgstr ""

#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.plot_cell:8
msgid "Unstructured grid (ideally) containing a single cell."
msgstr ""

#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.plot_cell:11
msgid "**cpos** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.plot_cell:11
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.Renderer.camera_position:9
msgid "Camera position."
msgstr ""

#: ../../pyvista/pyvista/examples/cells.pydocstring of
#: pyvista.examples.cells.plot_cell:14
msgid ""
"Additional keyword arguments when showing. See :func:`pyvista.Plotter.show`."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:2
msgid "pyvista.examples.downloads"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:46:<autosummary>:1
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads:1
msgid "Downloadable datasets collected from various sources."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads:3
msgid ""
"Once downloaded, these datasets are stored locally allowing for the rapid "
"reuse of these datasets."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads:6
msgid ""
"Files are all hosted in https://github.com/pyvista/vtk-data/ and are "
"downloaded using the ``download_file`` function. If you add a file to the "
"example data repository, you should add a ``download-<dataset>`` method here"
" which will rendered on this page."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.delete_downloads:2
msgid "Delete all downloaded examples to free space or update the files."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:3
msgid "Delete all local downloads."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_action_figure:2
msgid "Download scan of an action figure."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_action_figure:4
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_drill:4
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_face2:4
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_lobster:4
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_pepper:4
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_urn:4
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_woman:4
msgid "Originally obtained from Laser Design."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_action_figure:10
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_angular_sector:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_antarctica_velocity:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_armadillo:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_backward_facing_step:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_beach:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bird:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bird_texture:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_blood_vessels:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_blow:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bolt_nut:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_brain:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_brain_atlas_with_sides:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bunny:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bunny_coarse:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cad_model:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cake_easy:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cake_easy_texture:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_can:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_can_crushed_hdf:15
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_carburator:11
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_carburetor:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_carotid:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cavity:11
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cells_nd:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cgns_multi:11
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cgns_structured:11
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_chest:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cloud_dark_matter:10
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cloud_dark_matter_dense:10
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_clown:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_coastlines:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cow:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cow_head:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_crater_imagery:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_crater_topo:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cylinder_crossflow:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_damavand_volcano:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_delaunay_example:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dicom_stack:13
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_disc_quads:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dolfin:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_doorman:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dragon:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_drill:10
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dual_sphere_animation:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_embryo:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_emoji:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_emoji_texture:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_exodus:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_face:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_face2:10
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_faults:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_fea_bracket:10
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_filled_contours:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_foot_bones:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_frog:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gears:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gif_simple:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gourds:12
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gourds_pnm:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gourds_texture:12
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gpr_data_array:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gpr_path:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_guitar:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_head:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_honolulu:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_horse:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_horse_points:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_human:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_iron_protein:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_kitchen:15
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_knee:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_knee_full:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_letter_a:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_letter_k:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_lidar:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_lobster:10
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_louis_louvre:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_lucy:12
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_masonry_texture:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_model_with_variance:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_moonlanding_image:16
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_motor:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_mount_damavand:15
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_mug:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_naca:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_nefertiti:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_notch_displacement:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_notch_stress:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_oblique_cone:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_office:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_parched_canal_4k:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_particles_lethe:11
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_pepper:10
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_pine_roots:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_poly_line:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_prostate:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_puppy:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_puppy_texture:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_quadratic_pyramid:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_rectilinear_grid:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_rgba_texture:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_room_surface_mesh:13
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_saddle_surface:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_shark:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_single_sphere_animation:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sky_box_nz:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sky_box_nz_texture:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sparse_points:10
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_spider:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_st_helens:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_stars_cloud_hyg:21
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_structured_grid:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_structured_grid_two:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_teapot:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tecplot_ascii:11
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tensors:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tetrahedron:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_thermal_probes:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_topo_global:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_topo_land:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_torso:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tri_quadratic_hexahedron:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_trumpet:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_turbine_blade:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_unstructured_grid:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_urn:10
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_usa:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_usa_texture:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_vtk:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_vtk_logo:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_wavy:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_woman:10
msgid "**load** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_action_figure:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_angular_sector:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_antarctica_velocity:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_armadillo:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_backward_facing_step:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_beach:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bird:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bird_bath:16
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bird_texture:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_black_vase:16
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_blood_vessels:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_blow:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bolt_nut:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_brain:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_brain_atlas_with_sides:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bunny:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bunny_coarse:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cad_model:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cad_model_case:13
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cake_easy:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cake_easy_texture:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_can:13
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_can_crushed_hdf:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_carburator:10
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_carburetor:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_carotid:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cavity:10
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cells_nd:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cgns_multi:10
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cgns_structured:10
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_chest:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cloud_dark_matter:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cloud_dark_matter_dense:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_clown:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_coastlines:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cow:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cow_head:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_crater_imagery:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_crater_topo:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cylinder_crossflow:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_damavand_volcano:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_delaunay_example:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dicom_stack:12
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_disc_quads:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dolfin:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_doorman:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dragon:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_drill:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dual_sphere_animation:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_embryo:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_emoji:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_emoji_texture:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_exodus:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_face:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_face2:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_faults:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_fea_bracket:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_filled_contours:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_foot_bones:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_frog:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gears:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gif_simple:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gourds:11
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gourds_pnm:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gourds_texture:11
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gpr_data_array:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gpr_path:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_guitar:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_head:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_honolulu:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_horse:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_horse_points:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_human:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_iron_protein:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_ivan_angel:16
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_kitchen:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_knee:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_knee_full:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_letter_a:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_letter_k:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_lidar:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_lobster:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_louis_louvre:13
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_lucy:11
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_masonry_texture:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_model_with_variance:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_moonlanding_image:15
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_motor:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_mount_damavand:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_mug:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_naca:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_nefertiti:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_notch_displacement:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_notch_stress:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_oblique_cone:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_office:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_owl:16
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_parched_canal_4k:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_particles_lethe:10
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_pepper:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_pine_roots:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_plastic_vase:16
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_poly_line:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_prostate:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_puppy:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_puppy_texture:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_quadratic_pyramid:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_rectilinear_grid:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_rgba_texture:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_room_surface_mesh:12
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_saddle_surface:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sea_vase:16
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_shark:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_single_sphere_animation:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sky_box_nz:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sky_box_nz_texture:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sparse_points:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_spider:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_st_helens:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_stars_cloud_hyg:20
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_structured_grid:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_structured_grid_two:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_teapot:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tecplot_ascii:10
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tensors:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tetrahedron:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_thermal_probes:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_topo_global:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_topo_land:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_torso:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tri_quadratic_hexahedron:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_trumpet:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_turbine_blade:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_unstructured_grid:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_urn:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_usa:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_usa_texture:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_vtk:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_vtk_logo:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_wavy:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_woman:9
msgid ""
"Load the dataset after downloading it when ``True``.  Set this to ``False`` "
"and only the filename will be returned."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_action_figure:24
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_antarctica_velocity:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_armadillo:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bird_bath:34
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_black_vase:34
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bunny:20
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bunny_coarse:20
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cad_model:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cad_model_case:31
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_carburator:28
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_carburetor:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_clown:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_coastlines:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cow:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cow_head:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_delaunay_example:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_doorman:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dragon:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_drill:24
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_face:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_face2:24
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_faults:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_filled_contours:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_foot_bones:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gears:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gpr_path:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_guitar:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_honolulu:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_horse_points:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_human:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_ivan_angel:34
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_letter_k:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_lidar:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_lobster:24
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_louis_louvre:28
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_lucy:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_motor:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_mount_damavand:29
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_nefertiti:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_oblique_cone:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_owl:34
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_pepper:24
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_pine_roots:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_plastic_vase:34
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_poly_line:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_room_surface_mesh:27
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_saddle_surface:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sea_vase:34
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_shark:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sparse_points:24
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_spider:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_teapot:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_thermal_probes:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_topo_global:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_topo_land:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_torso:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_trumpet:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_turbine_blade:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_urn:24
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_vtk:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_woman:24
msgid ":obj:`pyvista.PolyData` or :class:`python:str`"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_action_figure:15
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_angular_sector:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_antarctica_velocity:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_armadillo:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_backward_facing_step:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_beach:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bird:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bird_bath:25
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bird_texture:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_black_vase:25
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_blood_vessels:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_blow:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_brain:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_brain_atlas_with_sides:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bunny:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bunny_coarse:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cad_model:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cad_model_case:22
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cake_easy:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cake_easy_texture:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_carburator:16
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_carburetor:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_carotid:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cavity:16
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cells_nd:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_chest:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cloud_dark_matter:15
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cloud_dark_matter_dense:15
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_clown:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_coastlines:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cow:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cow_head:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_crater_imagery:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_crater_topo:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cylinder_crossflow:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_damavand_volcano:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_delaunay_example:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_disc_quads:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dolfin:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_doorman:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dragon:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_drill:15
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dual_sphere_animation:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_embryo:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_emoji:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_emoji_texture:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_exodus:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_face:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_face2:15
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_faults:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_fea_bracket:15
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_filled_contours:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_foot_bones:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_frog:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gears:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gif_simple:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gourds:17
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gourds_pnm:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gourds_texture:17
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gpr_path:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_guitar:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_head:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_honolulu:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_horse:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_horse_points:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_human:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_iron_protein:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_ivan_angel:25
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_kitchen:20
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_knee:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_knee_full:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_letter_a:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_letter_k:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_lidar:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_lobster:15
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_louis_louvre:19
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_lucy:17
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_masonry_texture:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_model_with_variance:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_motor:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_mount_damavand:20
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_mug:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_naca:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_nefertiti:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_notch_displacement:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_notch_stress:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_oblique_cone:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_office:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_owl:25
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_parched_canal_4k:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_particles_lethe:16
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_pepper:15
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_pine_roots:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_plastic_vase:25
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_poly_line:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_prostate:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_puppy:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_puppy_texture:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_quadratic_pyramid:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_rectilinear_grid:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_rgba_texture:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_room_surface_mesh:18
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_saddle_surface:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sea_vase:25
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_shark:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_single_sphere_animation:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sky_box_nz:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sky_box_nz_texture:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sparse_points:15
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_spider:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_st_helens:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_stars_cloud_hyg:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_structured_grid:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_structured_grid_two:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_teapot:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tensors:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tetrahedron:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_thermal_probes:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_topo_global:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_topo_land:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_torso:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tri_quadratic_hexahedron:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_trumpet:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_turbine_blade:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_unstructured_grid:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_urn:15
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_usa:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_usa_texture:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_vtk:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_vtk_logo:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_wavy:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_woman:15
msgid "DataSet or filename depending on ``load``."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:3
msgid ""
"Show the action figure example. This also demonstrates how to use physically"
" based rendering and lighting to make a good looking plot."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_angular_sector:2
msgid "Download the angular sector dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_angular_sector:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_blood_vessels:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_blow:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_can_crushed_hdf:29
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cells_nd:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_disc_quads:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dolfin:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_fea_bracket:24
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_letter_a:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_model_with_variance:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_notch_displacement:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_notch_stress:21
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_particles_lethe:25
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_quadratic_pyramid:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tensors:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tetrahedron:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tri_quadratic_hexahedron:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_unstructured_grid:23
msgid ":obj:`pyvista.UnstructuredGrid` or :class:`python:str`"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_antarctica_velocity:2
msgid "Download the antarctica velocity simulation results."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:21
msgid "See :ref:`antarctica_example` for an example using this dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_armadillo:2
msgid "Download armadillo dataset."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:3
msgid "Plot the armadillo dataset. Use a custom camera position."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_backward_facing_step:2
msgid "Download an ensight gold case of a fluid simulation."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_backward_facing_step:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cavity:25
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cgns_multi:27
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cgns_structured:27
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cylinder_crossflow:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dual_sphere_animation:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_exodus:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_mug:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_naca:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_single_sphere_animation:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tecplot_ascii:27
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_wavy:23
msgid ":obj:`pyvista.MultiBlock` or :class:`python:str`"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_beach:2
msgid "Download the beach NRRD image."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_beach:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bird:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_brain:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_brain_atlas_with_sides:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cake_easy:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_carotid:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_chest:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_crater_topo:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_damavand_volcano:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dicom_stack:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_embryo:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_emoji:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_frog:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gif_simple:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gourds:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gourds_pnm:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_head:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_iron_protein:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_knee:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_knee_full:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_moonlanding_image:30
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_prostate:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_puppy:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sky_box_nz:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_st_helens:23
msgid ":obj:`pyvista.UniformGrid` or :class:`python:str`"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bird:2
msgid "Download bird dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bird_bath:2
msgid "Download a scan of a bird bath created by Ivan Nikolov."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bird_bath:4
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_black_vase:4
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_ivan_angel:4
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_owl:4
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_plastic_vase:4
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sea_vase:4
msgid ""
"The dataset was downloaded from `GGG-BenchmarkSfM: Dataset for Benchmarking "
"Close-range SfM Software Performance under Varying Capturing Conditions "
"<https://data.mendeley.com/datasets/bzxk2n78s9/4>`_"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bird_bath:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_black_vase:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_ivan_angel:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_owl:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_plastic_vase:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sea_vase:8
msgid "Original datasets are under the CC BY 4.0 license."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bird_bath:10
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_black_vase:10
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_ivan_angel:10
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_owl:10
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_plastic_vase:10
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sea_vase:10
msgid ""
"For more details, see `Ivan Nikolov Datasets "
"<https://github.com/pyvista/vtk-data/tree/master/Data/ivan-nikolov>`_"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bird_bath:17
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_black_vase:17
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cad_model_case:14
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_ivan_angel:17
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_owl:17
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_plastic_vase:17
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sea_vase:17
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_jupiter_surface:13
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_mars_surface:13
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_mercury_surface:13
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_milkyway_sky_background:13
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_moon_surface:13
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_neptune_surface:13
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_pluto_surface:13
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_saturn_rings:13
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_saturn_surface:13
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_stars_sky_background:13
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_sun_surface:13
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_uranus_surface:13
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_venus_surface:16
msgid ""
"**load** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:True`"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bird_bath:20
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_black_vase:20
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cad_model_case:17
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cubemap_space_16k:15
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_ivan_angel:20
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_owl:20
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_plastic_vase:20
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sea_vase:20
msgid ""
"Display a progress_bar bar when downloading the file. Requires ``tqdm``."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:3
msgid "Download and plot the dataset."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:23
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:26
msgid "Return the statistics of the dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bird_texture:2
msgid "Download bird texture."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bird_texture:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cake_easy_texture:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_crater_imagery:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_emoji_texture:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_parched_canal_4k:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_rgba_texture:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sky_box_nz_texture:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_vtk_logo:23
msgid ":obj:`pyvista.Texture` or :class:`python:str`"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_black_vase:2
msgid "Download a black vase scan created by Ivan Nikolov."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_blood_vessels:2
msgid "Download data representing the bifurcation of blood vessels."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:21
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:26
msgid "This dataset is used in the following examples:"
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:23
msgid ":ref:`read_parallel_example`"
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:24
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:30
msgid ":ref:`streamlines_example`"
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:25
msgid ":ref:`integrate_example`"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_blow:2
msgid "Download blow dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bolt_nut:2
msgid "Download bolt nut dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bolt_nut:23
msgid ":obj:`pyvista.MultiBlock` or :class:`python:tuple`"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bolt_nut:14
msgid "DataSet or tuple of filenames depending on ``load``."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:21
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:26
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:29
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:31
msgid "See :ref:`volume_rendering_example` for an example using this dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_brain:2
msgid "Download brain dataset."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:23
msgid ":ref:`gaussian_smoothing_example`"
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:26
msgid ":ref:`moving_isovalue_example`"
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:27
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:31
msgid ":ref:`plane_widget_example`"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_brain_atlas_with_sides:2
msgid "Download an image of an averaged brain with a right-left label."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bunny:2
msgid "Download bunny dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bunny:25
msgid ":obj:`download_bunny_coarse`"
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:21
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:23
msgid ":ref:`read_file_example`"
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:22
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:24
msgid ":ref:`clip_with_surface_example`"
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:23
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:24
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:25
msgid ":ref:`extract_edges_example`"
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:23
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:26
msgid ":ref:`subdivide_example`"
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:25
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:27
msgid ":ref:`silhouette_example`"
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:28
msgid ":ref:`light_types_example`"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bunny_coarse:2
msgid "Download coarse bunny dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_bunny_coarse:25
msgid ":obj:`download_bunny`"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cad_model:2
msgid "Download cad dataset."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:21
msgid "See :ref:`read_file_example` for an example using this dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cad_model_case:2
msgid "Download a CAD model of a Raspberry PI 4 case."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cad_model_case:4
msgid ""
"The dataset was downloaded from `Thingiverse "
"<https://www.thingiverse.com/thing:4947746>`_"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cad_model_case:7
msgid ""
"Original datasets are under the `Creative Commons - Attribution "
"<https://creativecommons.org/licenses/by/4.0/>`_ license."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cake_easy:2
msgid "Download cake dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cake_easy_texture:2
msgid "Download cake texture."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_can:2
msgid "Download the can dataset mesh."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_can:4
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_can_crushed_hdf:4
msgid ""
"File obtained from `Kitware <https://www.kitware.com/>`_. Used for testing "
"hdf files."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_can:10
msgid ""
"**partial** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_can:10
msgid "Load part of the dataset. Defaults to ``False``."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_can:28
msgid ""
":obj:`pyvista.PolyData`, :class:`python:str`, :obj:`or` "
":obj:`List`\\[:class:`python:str`]"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_can:19
msgid "The example ParaView can DataSet or file path(s)."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:3
msgid "Plot the can dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_can_crushed_hdf:2
msgid "Download the crushed can dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_can_crushed_hdf:7
msgid "Originally built using VTK v9.2.0rc from:"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_can_crushed_hdf:9
msgid "``VTK/build/ExternalTesting/can-vtu.hdf``"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_can_crushed_hdf:20
msgid "Crushed can dataset or path depending on the value of ``load``."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:3
msgid "Plot the crushed can dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_carburator:2
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_carburetor:2
msgid "Download scan of a carburetor."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_carburator:4
msgid ""
"Please use :func:`pyvista.examples.downloads.download_carburetor` instead"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_carotid:2
msgid "Download carotid dataset."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:28
msgid ":ref:`glyph_example`"
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:29
msgid ":ref:`gradients_example`"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cavity:2
msgid "Download cavity OpenFOAM example."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cavity:4
msgid ""
"Retrieved from `Kitware VTK Data "
"<https://data.kitware.com/#collection/55f17f758d777f6ddc7895b7/folder/5afd932e8d777f15ebe1b183>`_."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:6
msgid "See :ref:`openfoam_example` for a full example using this dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cells_nd:2
msgid "Download example AVS UCD dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cgns_multi:2
msgid "Download a multielement airfoil with a cell centered solution."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cgns_multi:4
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cgns_structured:4
msgid ""
"Originally downloaded from `CFD General Notation System Example Files "
"<https://cgns.github.io/CGNSFiles.html>`_"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cgns_multi:16
msgid ""
"Structured, 4 blocks, 2D (2 planes in third dimension) multielement airfoil,"
" with cell centered solution. If ``load`` is ``False``, then the path of the"
" example CGNS file is returned."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:3
msgid ""
"Plot the airfoil dataset. Merge the multi-block and then plot the airfoil's "
"``\"ViscosityEddy\"``. Convert the cell data to point data as in this "
"dataset, the solution is stored within the cells."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cgns_structured:2
msgid "Download the structured CGNS dataset mesh."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cgns_structured:16
msgid ""
"Structured, 12 block, 3-D constricting channel, with example use of Family_t"
" for BCs (ADF type). If ``load`` is ``False``, then the path of the example "
"CGNS file is returned."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:3
msgid "Plot the example CGNS dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_chest:2
msgid "Download chest dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cloud_dark_matter:2
msgid "Download particles from a simulated dark matter halo."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cloud_dark_matter:4
msgid "This dataset contains 32,314 particles."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:3
msgid "Download the dark matter cloud and display its representation."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:17
msgid ""
"Plot the point cloud. Color based on the distance from the center of the "
"cloud."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:37
msgid ""
"See the :ref:`plotting_point_clouds` for a full example using this dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cloud_dark_matter_dense:2
msgid "Download a particles from a simulated dark matter halo."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cloud_dark_matter_dense:4
msgid "This dataset contains 2,062,256 particles."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:37
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:42
msgid ""
"See the :ref:`plotting_point_clouds` for more details on how to plot point "
"clouds."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_clown:2
msgid "Download clown dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_coastlines:2
msgid "Download coastlines dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cow:2
msgid "Download cow dataset."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:24
msgid ":ref:`mesh_quality_example`"
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:25
msgid ":ref:`rotate_example`"
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:26
msgid ":ref:`linked_views_example`"
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:27
msgid ":ref:`light_actors_example`"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cow_head:2
msgid "Download cow head dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_crater_imagery:2
msgid "Download crater texture."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:26
msgid "See :ref:`ref_topo_map_example` for an example using this dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_crater_topo:2
msgid "Download crater dataset."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:23
msgid ":ref:`terrain_following_mesh_example`"
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:24
msgid ":ref:`ref_topo_map_example`"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cubemap_park:2
msgid "Download a cubemap of a park."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cubemap_park:4
msgid ""
"Downloaded from http://www.humus.name/index.php?page=Textures by David Eck, "
"and converted to a smaller 512x512 size for use with WebGL in his free, on-"
"line textbook at http://math.hws.edu/graphicsbook"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cubemap_park:9
msgid ""
"This work is licensed under a Creative Commons Attribution 3.0 Unported "
"License."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cubemap_park:25
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cubemap_space_16k:27
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cubemap_space_4k:25
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sky_box_cube_map:18
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_globe_texture:18
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_texture:31
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap:45
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap_from_filenames:30
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.numpy_to_texture:22
msgid ":obj:`pyvista.Texture`"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cubemap_park:16
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cubemap_space_16k:20
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cubemap_space_4k:16
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sky_box_cube_map:9
msgid "Texture containing a skybox."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cubemap_space_16k:2
msgid "Download the 16k space cubemap."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cubemap_space_16k:4
msgid ""
"This cubemap was generated by downloading the 16k image from: `Deep Star "
"Maps 2020 <https://svs.gsfc.nasa.gov/4851>`_ and converting it using "
"https://jaxry.github.io/panorama-to-cubemap/"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cubemap_space_16k:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cubemap_space_4k:8
msgid ""
"See `vtk-data/cubemap_space <https://github.com/pyvista/vtk-"
"data/tree/master/cubemap_space>`_ for more details."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cubemap_space_16k:31
msgid "This is a 38MB file and may take a while to download."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:3
msgid ""
"Display the cubemap as both an environment texture and an actor. Note that "
"here we're displaying the 4k as the 16k is a bit too expensive to display in"
" the documentation."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cubemap_space_4k:2
msgid "Download the 4k space cubemap."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cubemap_space_4k:4
msgid ""
"This cubemap was generated by downloading the 4k image from: `Deep Star Maps"
" 2020 <https://svs.gsfc.nasa.gov/4851>`_ and converting it using "
"https://jaxry.github.io/panorama-to-cubemap/"
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:3
msgid "Display the cubemap as both an environment texture and an actor."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_cylinder_crossflow:2
msgid "Download CFD result for cylinder in cross flow at Re=35."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:21
msgid "See :ref:`2d_streamlines_example` for an example using this dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_damavand_volcano:2
msgid "Download damavand volcano model."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_delaunay_example:2
msgid "Download a pointset for the Delaunay example."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dicom_stack:2
msgid "Download TCIA DICOM stack volume."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dicom_stack:4
msgid ""
"Original download from the `The Cancer Imaging Archive (TCIA) "
"<https://www.cancerimagingarchive.net/>`_. This is part of the Clinical "
"Proteomic Tumor Analysis Consortium Sarcomas (CPTAC-SAR) collection."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dicom_stack:18
msgid "DataSet or path depending on ``load``."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dicom_stack:30
msgid "**Data Citation**"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dicom_stack:32
msgid ""
"National Cancer Institute Clinical Proteomic Tumor Analysis Consortium "
"(CPTAC). (2018).  Radiology Data from the Clinical Proteomic Tumor Analysis "
"Consortium Sarcomas [CPTAC-SAR] collection [Data set]. The Cancer Imaging "
"Archive.  DOI: 10.7937/TCIA.2019.9bt23r95"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dicom_stack:37
msgid "**Acknowledgement**"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dicom_stack:39
msgid ""
"Data used in this publication were generated by the National Cancer "
"Institute Clinical Proteomic Tumor Analysis Consortium (CPTAC)."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dicom_stack:42
msgid "**TCIA Citation**"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dicom_stack:44
msgid ""
"Clark K, Vendt B, Smith K, Freymann J, Kirby J, Koppel P, Moore S, Phillips "
"S, Maffitt D, Pringle M, Tarbox L, Prior F. The Cancer Imaging Archive "
"(TCIA):  # pragma: no cover Maintaining and Operating a Public Information "
"Repository, Journal of Digital Imaging, Volume 26, Number 6, December, 2013,"
" pp 1045-1057. doi: 10.1007/s10278-013-9622-7"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dikhololo_night:2
msgid "Download and read the dikholo night hdr texture example."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dikhololo_night:4
msgid "Files hosted at https://polyhaven.com/"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dikhololo_night:19
msgid ":obj:`pyvista.texture`"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dikhololo_night:10
msgid "HDR Texture."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_disc_quads:2
msgid "Download disc quads dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dolfin:2
msgid "Download dolfin mesh."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_doorman:2
msgid "Download doorman dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dragon:2
msgid "Download dragon dataset."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:23
msgid ":ref:`floors_example`"
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:24
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:26
msgid ":ref:`orbiting_example`"
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:26
msgid ":ref:`light_shadows_example`"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_drill:2
msgid "Download scan of a power drill."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_dual_sphere_animation:2
msgid "Download PVD file for double sphere."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:10
msgid ""
"Write the gif to a temporary directory. Normally you would write to a local "
"path."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:15
msgid "Generate the animation."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_embryo:2
msgid "Download a volume of an embryo."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:23
msgid ":ref:`contouring_example`"
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:24
msgid ":ref:`resampling_example`"
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:25
msgid ":ref:`orthogonal_slices_example`"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_emoji:2
msgid "Download emoji dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_emoji_texture:2
msgid "Download emoji texture."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_exodus:2
msgid "Sample ExodusII data file."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_face:2
msgid "Download face dataset."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:21
msgid "See :ref:`decimate_example` for an example using this dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_face2:2
msgid "Download scan of a man's face."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_faults:2
msgid "Download faults dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_fea_bracket:2
msgid "Download the finite element solution of a bracket."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_fea_bracket:4
msgid ""
"Contains von-mises equivalent cell stress assuming a vertical (y-axis) load."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:3
msgid "Download and plot equivalent cell stress."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:23
msgid ""
"Plot the point stress using the ``'jet'`` color map. Convert the cell data "
"to point data."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_file:2
msgid "Download a single file from the PyVista vtk-data repository."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_file:4
msgid ""
"You can add an example file at `pyvista/vtk_data "
"<https://github.com/pyvista/vtk-data>`_."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_file:10
msgid "Filename relative to the ``Data`` directory."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_file:13
msgid "Display a progress_bar bar when downloading the file."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_file:28
msgid ":class:`python:str` or :class:`python:list`"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_file:18
msgid ""
"A single path if the file is not an archive. A ``list`` of paths if the file"
" is an archive."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:3
msgid "Download the ``'puppy.jpg'`` image."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_filled_contours:2
msgid "Download filled contours dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_foot_bones:2
msgid "Download foot bones dataset."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:21
msgid ""
"See :ref:`voxelize_surface_mesh_example` for an example using this dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_frog:2
msgid "Download frog dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gears:2
msgid "Download gears dataset."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:3
msgid "Download the dataset, split the bodies, and color each one."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gif_simple:2
msgid "Download a simple three frame GIF."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:3
msgid "Download and plot the first frame of a simple GIF."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:29
msgid "Plot the second frame."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gourds:2
msgid "Download gourds dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gourds:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gourds_texture:8
msgid "**zoom** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gourds:8
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gourds_texture:8
msgid "When ``True``, return the zoomed picture of the gourds."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:21
msgid ""
"See :ref:`gaussian_smoothing_example` for an example using this dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gourds_pnm:2
msgid "Download gourds dataset from pnm file."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gourds_texture:2
msgid "Download gourds texture."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gourds_texture:26
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_horse:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_masonry_texture:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_puppy_texture:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_usa:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_usa_texture:23
msgid ":obj:`pyvista.DataSet` or :class:`python:str`"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gpr_data_array:2
msgid "Download GPR example data array."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gpr_data_array:23
msgid ":obj:`numpy.ndarray` or :class:`python:str`"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gpr_data_array:14
msgid "Array or filename depending on ``load``."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:14
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:21
msgid ""
"See :ref:`create_draped_surf_example` for an example using this dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_gpr_path:2
msgid "Download GPR example path."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_guitar:2
msgid "Download guitar dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_head:2
msgid "Download head dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_honolulu:2
msgid "Download honolulu dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_horse:2
msgid "Download horse dataset."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:21
msgid ""
"See :ref:`disabling_mesh_lighting_example` for an example using this "
"dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_horse_points:2
msgid "Download horse points dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_human:2
msgid "Download human dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_iron_protein:2
msgid "Download iron protein dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_ivan_angel:2
msgid "Download a scan of an angel statue created by Ivan Nikolov."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_kitchen:2
msgid "Download structured grid of kitchen with velocity field."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_kitchen:4
msgid ""
"Use the ``split`` argument to extract all of the furniture in the kitchen."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_kitchen:11
msgid "**split** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_kitchen:10
msgid ""
"Optionally split the furniture and return a :class:`pyvista.MultiBlock`."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_kitchen:29
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_office:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_structured_grid:23
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_structured_grid_two:23
msgid ":obj:`pyvista.StructuredGrid` or :class:`python:str`"
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:23
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:27
msgid ":ref:`plot_over_line_example`"
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:24
msgid ":ref:`line_widget_example`"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_knee:2
msgid "Download knee dataset."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:23
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:25
msgid ":ref:`plot_opacity_example`"
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:24
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:28
msgid ":ref:`volume_rendering_example`"
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:25
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:29
msgid ":ref:`slider_bar_widget_example`"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_knee_full:2
msgid "Download full knee dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_letter_a:2
msgid "Download letter a dataset."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:21
msgid "See :ref:`cell_centers_example` for an example using this dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_letter_k:2
msgid "Download letter k dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_lidar:2
msgid "Download lidar dataset."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:23
msgid ":ref:`create_point_cloud`"
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:24
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:26
msgid ":ref:`ref_edl`"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_lobster:2
msgid "Download scan of a lobster."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_louis_louvre:2
msgid "Download the Louis XIV de France statue at the Louvre, Paris."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_louis_louvre:4
msgid ""
"Statue found in the Napol√©on Courtyard of Louvre Palace. It is a copy in "
"plomb of the original statue in Versailles, made by Bernini and Girardon."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_louis_louvre:8
msgid ""
"Originally downloaded from `sketchfab "
"<https://sketchfab.com/3d-models/louis-xiv-de-france-louvre-"
"paris-a0cc0e7eee384c99838dff2857b8158c>`_"
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:3
msgid "Plot the Louis XIV statue with custom lighting and camera angle."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:25
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:32
msgid "See :ref:`pbr_example` for an example using this dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_lucy:2
msgid "Download the lucy angel mesh."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_lucy:4
msgid ""
"Original downloaded from the `The Stanford 3D Scanning Repository "
"<http://graphics.stanford.edu/data/3Dscanrep/>`_ and decimated to "
"approximately 100k triangle."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:3
msgid "Plot the Lucy Angel dataset with custom lighting."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:9
msgid "Create a light at the \"flame\""
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:20
msgid "Create a scene light"
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:45
msgid "See :ref:`jupyter_plotting` for another example using this dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_mars_jpg:2
msgid "Download and return the path of ``'mars.jpg'``."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_mars_jpg:9
#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_stars_jpg:9
msgid "Filename of the JPEG."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_masonry_texture:2
msgid "Download masonry texture."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:3
msgid "Create plot the masonry testure on a surface."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:21
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:25
msgid "See :ref:`ref_texture_example` for an example using this dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_model_with_variance:2
msgid "Download model with variance dataset."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:21
msgid "See :ref:`plot_opacity_example` for an example using this dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_moonlanding_image:2
msgid "Download the Moon landing image."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_moonlanding_image:4
msgid ""
"This is a noisy image originally obtained from `Scipy Lecture Notes "
"<https://scipy-lectures.org/index.html>`_ and can be used to demonstrate a "
"low pass filter."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_moonlanding_image:8
msgid ""
"See the `scipy-lectures license <http://scipy-"
"lectures.org/preface.html#license>`_ for more details regarding this image's"
" use and distribution."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_moonlanding_image:21
msgid "``DataSet`` or filename depending on ``load``."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:21
msgid "See :ref:`image_fft_example` for a full example using this dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_motor:2
msgid "Download motor dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_mount_damavand:2
msgid "Download the Mount Damavand dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_mount_damavand:4
msgid ""
"Visualize 3D models of Damavand Volcano, Alborz, Iran. This is a 2D map with"
" the altitude embedded as ``'z'`` cell data within the "
":class:`pyvista.PolyData`."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_mount_damavand:8
msgid ""
"Originally posted at `banesullivan/damavand-volcano "
"<https://github.com/banesullivan/damavand-volcano>`_."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:3
msgid ""
"Download the Damavand dataset and plot it after warping it by its altitude."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_mug:2
msgid "Download mug dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_naca:2
msgid "Download NACA airfoil dataset in EnSight format."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:3
msgid ""
"Plot the density of the air surrounding the NACA airfoil using the "
"``\"jet\"`` color map."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:21
#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:29
msgid "See :ref:`reader_example` for an example using this dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_nefertiti:2
msgid "Download mesh of Queen Nefertiti."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:23
msgid ":ref:`surface_normal_example`"
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:25
msgid ":ref:`show_edges_example`"
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:27
msgid ":ref:`pbr_example`"
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:28
msgid ":ref:`box_widget_example`"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_notch_displacement:2
msgid "Download the FEA displacement result from a notched beam."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_notch_stress:2
msgid "Download the FEA stress result from a notched beam."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_notch_stress:25
msgid "This file may have issues being read in on VTK 8.1.2"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_oblique_cone:2
msgid "Download oblique cone dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_office:2
msgid "Download office dataset."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:21
msgid ""
"See :ref:`clip_with_plane_box_example` for an example using this dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_osmnx_graph:2
msgid "Load a simple street map from Open Street Map."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_osmnx_graph:4
msgid "Generated from:"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_osmnx_graph:26
msgid ":obj:`networkx.classes.multidigraph.MultiDiGraph`"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_osmnx_graph:17
msgid "An osmnx graph of the streets of Holzgerlingen, Germany."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:6
msgid ""
"See :ref:`open_street_map_example` for a full example using this dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_owl:2
msgid "Download a scan of an owl statue created by Ivan Nikolov."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_parched_canal_4k:2
msgid "Download parched canal 4k dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_particles_lethe:2
msgid ""
"Download a particles dataset generated by `lethe <https://github.com/lethe-"
"cfd/lethe>`_ ."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_particles_lethe:4
msgid ""
"See `PyVista discussions #1984 "
"<https://github.com/pyvista/pyvista/discussions/1984>`_"
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:3
msgid "Download the particles dataset and plot it after generating glyphs."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_pepper:2
msgid "Download scan of a pepper (capsicum)."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_pine_roots:2
msgid "Download pine roots dataset."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:21
msgid "See :ref:`connectivity_example` for an example using this dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_plastic_vase:2
msgid "Download a scan of a plastic vase created by Ivan Nikolov."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_poly_line:2
msgid "Download polyline dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_prostate:2
msgid "Download prostate dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_puppy:2
msgid "Download puppy dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_puppy_texture:2
msgid "Download puppy texture."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_quadratic_pyramid:2
msgid "Download quadratic pyramid dataset."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:3
msgid ""
"Shrink and plot the dataset to show it is composed of several pyramids."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_rectilinear_grid:2
msgid "Download rectilinear grid dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_rectilinear_grid:23
msgid ":obj:`pyvista.RectilinearGrid` or :class:`python:str`"
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:3
msgid "Compute the threshold of this dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_rgba_texture:2
msgid "Download a texture with an alpha channel."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_room_surface_mesh:2
msgid "Download the room surface mesh."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_room_surface_mesh:4
msgid ""
"This mesh is for demonstrating the difference that depth peeling can provide"
" when rendering translucent geometries."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_room_surface_mesh:7
msgid "This mesh is courtesy of `Sam Potter <https://github.com/sampotter>`_."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:21
msgid "See :ref:`depth_peeling_example` for an example using this dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_saddle_surface:2
msgid "Download saddle surface dataset."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:21
msgid "See :ref:`interpolate_example` for an example using this dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sea_vase:2
msgid "Download a scan of a sea vase created by Ivan Nikolov."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_shark:2
msgid "Download shark dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_single_sphere_animation:2
msgid "Download PVD file for single sphere."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sky_box_cube_map:2
msgid "Download a skybox cube map texture."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sky_box_nz:2
msgid "Download skybox-nz dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sky_box_nz_texture:2
msgid "Download skybox-nz texture."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sparse_points:2
msgid "Download sparse points data."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_sparse_points:4
msgid "Used with :func:`download_saddle_surface`."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_spider:2
msgid "Download spider dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_st_helens:2
msgid "Download Saint Helens dataset."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:23
msgid ":ref:`colormap_example`"
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:24
msgid ":ref:`ref_lighting_properties_example`"
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:28
msgid ":ref:`plotter_lighting_example`"
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:29
msgid ":ref:`themes_example`"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_stars_cloud_hyg:2
msgid "Download a point cloud of stars as computed by the HYG Database."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_stars_cloud_hyg:4
msgid ""
"See `HYG-Database <https://github.com/astronexus/HYG-Database>`_ for more "
"details."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_stars_cloud_hyg:7
msgid ""
"This data set is licensed by a Creative Commons Attribution-ShareAlike "
"license. For more details, read the `Creative Commons page "
"<https://creativecommons.org/licenses/by-sa/2.5/>`_"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_stars_cloud_hyg:11
msgid ""
"See the `README.md <https://github.com/pyvista/vtk-"
"data/blob/master/Data/point-clouds/hyg-database/README.md>`_ for more "
"details for how the star colors were computed."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_stars_cloud_hyg:15
msgid "Distances are in parsecs from Earth."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:3
msgid ""
"Download and plot a point cloud of stars within 3,000 light years. Stars are"
" colored according to their RGBA colors."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_stars_jpg:2
msgid "Download and return the path of ``'stars.jpg'``."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_structured_grid:2
msgid "Download structured grid dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_structured_grid_two:2
msgid "Download structured grid two dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_teapot:2
msgid "Download teapot dataset."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:24
msgid ":ref:`cell_centers_example`"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tecplot_ascii:2
msgid "Download the single block ASCII Tecplot dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tecplot_ascii:4
msgid ""
"Originally downloaded from Paul Bourke's `Sample file "
"<http://paulbourke.net/dataformats/tp/sample.tp>`_"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tecplot_ascii:16
msgid ""
"Multiblock format with only 1 data block, simple geometric shape. If "
"``load`` is ``False``, then the path of the example Tecplot file is "
"returned."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:3
msgid "Plot the example Tecplot dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tensors:2
msgid "Download tensors dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tetra_dc_mesh:2
msgid "Download two meshes defining an electrical inverse problem."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tetra_dc_mesh:4
msgid ""
"This contains a high resolution forward modeled mesh and a coarse inverse "
"modeled mesh."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tetra_dc_mesh:11
msgid ""
"DataSet containing the high resolution forward modeled mesh and a coarse "
"inverse modeled mesh."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tetrahedron:2
msgid "Download tetrahedron dataset."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:3
msgid ""
"Shrink and plot the dataset to show it is composed of several tetrahedrons."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_thermal_probes:2
msgid "Download thermal probes dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_topo_global:2
msgid "Download topo dataset."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:24
msgid ":ref:`background_image_example`"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_topo_land:2
msgid "Download topo land dataset."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:23
msgid ":ref:`geodesic_example`"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_torso:2
msgid "Download torso dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_tri_quadratic_hexahedron:2
msgid "Download tri quadratic hexahedron dataset."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.downloads.rst:21
msgid "Show non-linear subdivision."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_trumpet:2
msgid "Download trumpet dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_turbine_blade:2
msgid "Download scan of a turbine blade."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_unstructured_grid:2
msgid "Download unstructured grid dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_urn:2
msgid "Download scan of a burial urn."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_usa:2
msgid "Download usa dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_usa_texture:2
msgid "Download USA texture."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_vtk:2
msgid "Download vtk dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_vtk_logo:2
msgid "Download a texture of the VTK logo."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_wavy:2
msgid "Download PVD file of a 2D wave."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.download_woman:2
msgid "Download scan of a woman."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.file_from_files:2
msgid "Return the full path of a single file within a list of files."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.file_from_files:10
msgid "**target_path** : :class:`python:str`"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.file_from_files:8
msgid ""
"Path of the file to match the end of. If you need to match a file relative "
"to the root directory of the archive, start the path with ``\"unzip\"``. "
"Path must be a posix-like path."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.file_from_files:13
msgid "**fnames** : :class:`python:list`"
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.file_from_files:13
msgid "List of filenames."
msgstr ""

#: ../../pyvista/pyvista/examples/downloads.pydocstring of
#: pyvista.examples.downloads.file_from_files:18
msgid "Entry in ``fnames`` matching ``filename``."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.examples.rst:2
msgid "pyvista.examples.examples"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:46:<autosummary>:1
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples:1
msgid ""
"Built-in examples that ship with PyVista and do not need to be downloaded."
msgstr ""

#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_airplane:2
msgid "Load ply airplane mesh."
msgstr ""

#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_airplane:9
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_ant:9
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_channels:9
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_globe_texture:9
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_hexbeam:9
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_rectilinear:9
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_sphere:9
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_structured:9
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_tetbeam:9
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_uniform:9
msgid "Dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_ant:2
msgid "Load ply ant mesh."
msgstr ""

#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_channels:2
msgid "Load a uniform grid of fluvial channels in the subsurface."
msgstr ""

#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_explicit_structured:2
msgid "Load a simple explicit structured grid."
msgstr ""

#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_explicit_structured:8
msgid ""
"**dimensions** : :class:`python:tuple`\\(:class:`python:int`), "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_explicit_structured:8
msgid "Grid dimensions. Default is (5, 6, 7)."
msgstr ""

#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_explicit_structured:11
msgid ""
"**spacing** : :class:`python:tuple`\\(:class:`python:int`), :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_explicit_structured:11
msgid "Grid spacing. Default is (20, 10, 1)."
msgstr ""

#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_globe:2
msgid "Load a globe source."
msgstr ""

#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_globe:9
msgid "Globe dataset with earth texture."
msgstr ""

#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_globe_texture:2
msgid "Load a vtk.vtkTexture that can be applied to the globe source."
msgstr ""

#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_hexbeam:2
msgid "Load a sample UnstructuredGrid."
msgstr ""

#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_nut:2
msgid "Load an example nut mesh."
msgstr ""

#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_nut:9
msgid "A sample nut surface dataset."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.examples.rst:3
msgid "Load an example nut and plot with smooth shading."
msgstr ""

#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_random_hills:2
msgid "Create random hills toy example."
msgstr ""

#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_random_hills:4
msgid ""
"Uses the parametric random hill function to create hills oriented like "
"topography and adds an elevation array."
msgstr ""

#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_random_hills:7
msgid "This example dataset was created with:"
msgstr ""

#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_random_hills:18
msgid "Random hills mesh."
msgstr ""

#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_rectilinear:2
#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_uniform:2
msgid "Load a sample uniform grid."
msgstr ""

#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_sphere:2
msgid "Load sphere ply mesh."
msgstr ""

#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_sphere_vectors:2
msgid "Create example sphere with a swirly vector field defined on nodes."
msgstr ""

#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_sphere_vectors:9
msgid "Mesh containing vectors."
msgstr ""

#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_spline:2
msgid "Load an example spline mesh."
msgstr ""

#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_spline:4
msgid "This example data was created with:"
msgstr ""

#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_spline:22
msgid "Spline mesh."
msgstr ""

#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_structured:2
msgid "Load a simple StructuredGrid."
msgstr ""

#: ../../pyvista/pyvista/examples/examples.pydocstring of
#: pyvista.examples.examples.load_tetbeam:2
msgid "Load a sample UnstructuredGrid containing only tetrahedral cells."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.planets.rst:2
msgid "pyvista.examples.planets"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:46:<autosummary>:1
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets:1
msgid "Downloadable datasets of 3D Celestial Bodies."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_jupiter_surface:2
msgid "Download the surface of the planet Jupiter."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_jupiter_surface:4
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_mars_surface:4
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_mercury_surface:4
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_moon_surface:4
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_neptune_surface:4
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_pluto_surface:4
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_saturn_rings:4
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_saturn_surface:4
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_sun_surface:4
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_uranus_surface:4
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_venus_surface:4
msgid ""
"Textures obtained from `Solar Textures "
"<https://www.solarsystemscope.com/textures/>`_."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_jupiter_surface:10
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_mars_surface:10
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_mercury_surface:10
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_milkyway_sky_background:10
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_moon_surface:10
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_neptune_surface:10
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_pluto_surface:10
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_saturn_rings:10
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_saturn_surface:10
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_stars_sky_background:10
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_sun_surface:10
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_uranus_surface:10
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_venus_surface:13
msgid ""
"**texture** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:False`"
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_jupiter_surface:10
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_mars_surface:10
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_mercury_surface:10
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_milkyway_sky_background:10
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_moon_surface:10
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_neptune_surface:10
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_pluto_surface:10
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_saturn_rings:10
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_saturn_surface:10
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_stars_sky_background:10
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_sun_surface:10
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_uranus_surface:10
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_venus_surface:13
msgid "Set to ``True`` when loading the surface as a texture."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_jupiter_surface:13
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_mars_surface:13
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_mercury_surface:13
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_milkyway_sky_background:13
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_moon_surface:13
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_neptune_surface:13
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_pluto_surface:13
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_saturn_rings:13
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_saturn_surface:13
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_stars_sky_background:13
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_sun_surface:13
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_uranus_surface:13
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_venus_surface:16
msgid "Load the dataset. When ``False``, return the path to the file."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_jupiter_surface:28
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_mars_surface:28
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_mercury_surface:28
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_milkyway_sky_background:28
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_moon_surface:28
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_neptune_surface:28
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_pluto_surface:28
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_saturn_surface:28
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_stars_sky_background:28
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_sun_surface:28
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_uranus_surface:28
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_venus_surface:31
msgid ""
":obj:`pyvista.DataSet`, :obj:`pyvista.Texture`, :obj:`or` "
":class:`python:str`"
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_jupiter_surface:18
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_mars_surface:18
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_mercury_surface:18
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_milkyway_sky_background:18
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_moon_surface:18
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_neptune_surface:18
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_pluto_surface:18
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_saturn_surface:18
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_stars_sky_background:18
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_sun_surface:18
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_uranus_surface:18
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_venus_surface:21
msgid ""
"Texture, Dataset, or path to the file depending on the ``load`` and "
"``texture`` parameters."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_mars_surface:2
msgid "Download the surface of the planet Mars."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_mercury_surface:2
msgid "Download the surface of planet Mercury."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_milkyway_sky_background:2
msgid "Download the sky texture of the Milky Way galaxy."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_milkyway_sky_background:4
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_stars_sky_background:4
msgid ""
"Textures obtained from `tamaskis/planet3D-MATLAB "
"<https://github.com/tamaskis/planet3D-MATLAB>`_."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.planets.rst:3
msgid "Load the Milky Way sky image as a background image."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_moon_surface:2
msgid "Download the surface of the Earth's Moon."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_neptune_surface:2
msgid "Download the texture of the surface of planet Neptune."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_pluto_surface:2
msgid "Download the texture of the surface of the dwarf planet Pluto."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_saturn_rings:2
msgid "Download the texture of Saturn's rings."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_saturn_rings:27
msgid ""
":obj:`pyvista.UniformGrid`, :obj:`pyvista.Texture`, :obj:`or` "
":class:`python:str`"
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_saturn_rings:18
msgid "Dataset, texture, or filename of the Saturn's rings."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_saturn_surface:2
msgid "Download the surface of the planet Saturn."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_stars_sky_background:2
msgid "Download the night sky stars texture."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.planets.rst:3
msgid "Load the night sky image as a background image."
msgstr ""

#: ../../pyvista/doc/api/examples/_autosummary/pyvista.examples.planets.rst:26
msgid "See :func:`load_mars` for another example using this dataset."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_sun_surface:2
msgid "Download the surface of the Sun."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_uranus_surface:2
msgid "Download and the texture of the surface of planet Uranus."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_venus_surface:2
msgid "Download the surface or atmosphere of Planet Venus."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_venus_surface:10
msgid ""
"**atmosphere** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.download_venus_surface:10
msgid "Load the atmosphere texture when ``True``."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_earth:2
msgid "Load the planet Earth as a textured sphere."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_earth:8
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_jupiter:8
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_mars:8
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_mercury:8
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_moon:8
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_neptune:8
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_pluto:8
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_saturn:8
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_sun:8
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_uranus:8
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_venus:8
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Dodecahedron:9
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Icosahedron:10
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Octahedron:10
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.PlatonicSolid:18
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Polygon:12
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Tetrahedron:9
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Tube:17
msgid "**radius** : :class:`python:float`, default: 1.0"
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_earth:8
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_jupiter:8
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_mars:8
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_mercury:8
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_moon:8
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_neptune:8
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_pluto:8
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_saturn:8
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_sun:8
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_uranus:8
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_venus:8
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:8
msgid "Sphere radius."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_earth:11
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_jupiter:11
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_mars:11
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_mercury:11
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_moon:11
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_neptune:11
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_pluto:11
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_saturn:11
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_sun:11
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_uranus:11
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_venus:11
msgid "**lat_resolution** : :class:`python:int`, default: 50"
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_earth:10
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_jupiter:10
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_mars:10
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_mercury:10
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_moon:10
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_neptune:10
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_pluto:10
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_saturn:10
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_sun:10
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_uranus:10
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_venus:10
msgid "python:int, default: 50"
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_earth:11
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_jupiter:11
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_mars:11
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_mercury:11
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_moon:11
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_neptune:11
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_pluto:11
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_saturn:11
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_sun:11
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_uranus:11
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_venus:11
msgid "Set the number of points in the latitude direction."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_earth:14
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_jupiter:14
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_mars:14
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_mercury:14
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_moon:14
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_neptune:14
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_pluto:14
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_saturn:14
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_sun:14
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_uranus:14
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_venus:14
msgid "**lon_resolution** : :class:`python:int`, default: 100"
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_earth:13
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_jupiter:13
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_mars:13
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_mercury:13
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_moon:13
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_neptune:13
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_pluto:13
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_saturn:13
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_sun:13
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_uranus:13
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_venus:13
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Circle:10
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArc:19
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArcFromNormal:13
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cylinder:20
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.surface_from_para:10
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.surface_from_para:13
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.surface_from_para:16
msgid "python:int, default: 100"
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_earth:14
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_jupiter:14
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_mars:14
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_mercury:14
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_moon:14
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_neptune:14
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_pluto:14
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_saturn:14
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_sun:14
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_uranus:14
#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_venus:14
msgid "Set the number of points in the longitude direction."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_earth:19
msgid "Earth dataset with texture."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_jupiter:2
msgid "Load the planet Jupiter as a textured sphere."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_jupiter:19
msgid "Jupiter dataset with texture."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_mars:2
msgid "Load the planet Mars as a textured Sphere."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_mars:19
msgid "Mars dataset with texture."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_mercury:2
msgid "Load the planet Mercury as a textured sphere."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_mercury:19
msgid "Mercury dataset with texture."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_moon:2
msgid "Load the Moon as a textured sphere."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_moon:19
msgid "Moon dataset with texture."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_neptune:2
msgid "Load the planet Neptune as a textured sphere."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_neptune:19
msgid "Neptune dataset with texture."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_pluto:2
msgid "Load the dwarf planet Pluto as a textured sphere."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_pluto:19
msgid "Pluto dataset with texture."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_saturn:2
msgid "Load the planet Saturn as a textured sphere."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_saturn:19
msgid "Saturn dataset with texture."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_saturn_rings:2
msgid "Load the planet Saturn's rings."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_saturn_rings:4
msgid "Arguments are passed on to :func:`pyvista.Disc`."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_saturn_rings:9
msgid "**inner** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_saturn_rings:9
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Disc:14
msgid "The inner radius."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_saturn_rings:12
msgid "**outer** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_saturn_rings:12
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Disc:17
msgid "The outer radius."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_saturn_rings:15
msgid "**c_res** : :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_saturn_rings:15
msgid "The number of points in the circumferential direction."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_saturn_rings:20
msgid "Dataset with texture for Saturn's rings."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_sun:2
msgid "Load the Sun as a textured sphere."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_sun:19
msgid "Sun dataset with texture."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_uranus:2
msgid "Load the planet Uranus as a textured sphere."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_uranus:19
msgid "Uranus dataset with texture."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_venus:2
msgid "Load the planet Venus as a textured sphere."
msgstr ""

#: ../../pyvista/pyvista/examples/planets.pydocstring of
#: pyvista.examples.planets.load_venus:19
msgid "Venus dataset with texture."
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:3
msgid ""
"PyVista contains a variety of built-in demos and downloadable example "
"datasets.  For example:"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:3
msgid "Plot the built-in globe dataset"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:14
msgid ""
"Many datasets are too large to be included with PyVista, but can be "
"downloaded and cached locally.  These datasets can be downloaded and used "
"with:"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:3
msgid "Plot the turbine blade mesh."
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:26
msgid ""
"Finally, PyVista contains some demos which can be used to quickly "
"demonstrate features."
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:3
msgid "Create and show the orientation cube plotter"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:46:<autosummary>:1
msgid ":py:obj:`examples.examples <pyvista.examples.examples>`\\"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:46:<autosummary>:1
msgid ":py:obj:`examples.downloads <pyvista.examples.downloads>`\\"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:46:<autosummary>:1
msgid ":py:obj:`examples.planets <pyvista.examples.planets>`\\"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:46:<autosummary>:1
msgid ":py:obj:`demos.demos <pyvista.demos.demos>`\\"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:48
msgid ""
"As you browse this repository and think about how you might use our 3D "
"models and range datasets, please remember that several of these artifacts "
"have religious or cultural significance. Examples include the Buddha, a "
"religious symbol revered by hundreds of millions of people; the dragon, a "
"symbol of Chinese culture, the Thai statue, which contains elements of "
"religious significance to Hindus; and Lucy, a Christian angel commonly seen "
"as statues in Italian churches. Keep your renderings and other uses of these"
" particular models in good taste.  Don't animate or morph them, don't apply "
"Boolean operators to them, and don't simulate nasty things happening to them"
" (like breaking, exploding, melting, etc.). Choose another model for these "
"sorts of experiments. (You can do anything you want to the Stanford bunny or"
" the armadillo.)"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:64
msgid "Downloads Cache and Data Sources"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:65
msgid ""
"If you have an internet connection and a normal user account, PyVista should"
" be able to download and cache examples without an issue. The following two "
"sections deal with those who wish to customize how PyVista downloads "
"examples."
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:70
msgid "Cache"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:72
msgid ""
"PyVista uses `pooch <https://github.com/fatiando/pooch>`_ to download and "
"store the example files in a local cache. You can determine the location of "
"this cache at runtime with:"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:85
msgid ""
"You can clear out the local cache with :func:`examples.delete_downloads() "
"<pyvista.examples.downloads.delete_downloads>` if needed."
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:88
msgid ""
"If you want to override this local cache path, set the "
"``PYVISTA_USERDATA_PATH`` environment variable. This path must be writable."
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:93
msgid "Data Sources"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:94
msgid ""
"PyVista uses `PyVista/vtk-data <https://github.com/pyvista/vtk-data.git>`_ "
"as the main source for example data. If you do not have internet access or "
"you prefer using a local or network directory instead, you can override this"
" source with the ``VTK_DATA_PATH`` environment variable."
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:99
msgid ""
"The following example first clones the git repository and then exports that "
"directory to PyVista via ``VTK_DATA_PATH``. Note how the path ends in "
"``'Data'`` since we need to specify the exact directory of the Data for "
"``pooch``."
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:111
msgid "Cells"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:112
msgid ""
"PyVista contains several functions that create single cell "
":class:`pyvista.UnstructuredGrid` objects that can be used to learn about "
"VTK cell types."
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:137:<autosummary>:1
msgid ":py:obj:`plot_cell <pyvista.examples.cells.plot_cell>`\\ \\(grid\\[\\, cpos\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:137:<autosummary>:1
msgid ":py:obj:`Empty <pyvista.examples.cells.Empty>`\\ \\(\\)"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:137:<autosummary>:1
msgid ":py:obj:`Vertex <pyvista.examples.cells.Vertex>`\\ \\(\\)"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:137:<autosummary>:1
msgid ":py:obj:`PolyVertex <pyvista.examples.cells.PolyVertex>`\\ \\(\\)"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:137:<autosummary>:1
msgid ":py:obj:`Line <pyvista.examples.cells.Line>`\\ \\(\\)"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:137:<autosummary>:1
msgid ":py:obj:`PolyLine <pyvista.examples.cells.PolyLine>`\\ \\(\\)"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:137:<autosummary>:1
msgid ":py:obj:`Triangle <pyvista.examples.cells.Triangle>`\\ \\(\\)"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:137:<autosummary>:1
msgid ":py:obj:`TriangleStrip <pyvista.examples.cells.TriangleStrip>`\\ \\(\\)"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:137:<autosummary>:1
msgid ":py:obj:`Polygon <pyvista.examples.cells.Polygon>`\\ \\(\\)"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:137:<autosummary>:1
msgid ":py:obj:`Quadrilateral <pyvista.examples.cells.Quadrilateral>`\\ \\(\\)"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:137:<autosummary>:1
msgid ":py:obj:`Tetrahedron <pyvista.examples.cells.Tetrahedron>`\\ \\(\\)"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:137:<autosummary>:1
msgid ":py:obj:`Voxel <pyvista.examples.cells.Voxel>`\\ \\(\\)"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:137:<autosummary>:1
msgid ":py:obj:`Hexahedron <pyvista.examples.cells.Hexahedron>`\\ \\(\\)"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:137:<autosummary>:1
msgid ":py:obj:`Wedge <pyvista.examples.cells.Wedge>`\\ \\(\\)"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:137:<autosummary>:1
msgid ":py:obj:`Pyramid <pyvista.examples.cells.Pyramid>`\\ \\(\\)"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:137:<autosummary>:1
msgid ":py:obj:`PentagonalPrism <pyvista.examples.cells.PentagonalPrism>`\\ \\(\\)"
msgstr ""

#: ../../pyvista/doc/api/examples/index.rst:137:<autosummary>:1
msgid ":py:obj:`HexagonalPrism <pyvista.examples.cells.HexagonalPrism>`\\ \\(\\)"
msgstr ""

#: ../../pyvista/doc/api/index.rst:2 ../../pyvista/doc/api/index.rst:4
msgid "API Reference"
msgstr ""

#: ../../pyvista/doc/api/index.rst:14
msgid ""
"In this section, you can learn more about how PyVista wraps different VTK "
"mesh types and how you can leverage powerful 3D plotting and mesh analysis "
"tools. Highlights of the API include:"
msgstr ""

#: ../../pyvista/doc/api/index.rst:18
msgid "Pythonic interface to VTK's Python bindings"
msgstr ""

#: ../../pyvista/doc/api/index.rst:19
msgid "Filtering/plotting tools built for interactivity (see :ref:`widgets`)"
msgstr ""

#: ../../pyvista/doc/api/index.rst:20
msgid "Direct access to common VTK filters (see :ref:`filters_ref`)"
msgstr ""

#: ../../pyvista/doc/api/index.rst:21
msgid ""
"Intuitive plotting routines with `matplotlib`_ similar syntax (see "
":ref:`plotting_ref`)"
msgstr ""

#: ../../pyvista/doc/api/index.rst:30
msgid ""
"Learn more about PyVista's different mesh types and direct access to common "
"VTK filters."
msgstr ""

#: ../../pyvista/doc/api/index.rst:46
msgid ""
"Explore PyVista's robust plotting interface for visualizing the core data "
"structures."
msgstr ""

#: ../../pyvista/doc/api/index.rst:62
msgid ""
"Use PyVista's Reader classes to read data files using "
":func:`pyvista.get_reader`."
msgstr ""

#: ../../pyvista/doc/api/index.rst:78
msgid ""
"Utilize PyVista's helper modules, conversion tools, and geometric object "
"creation routines."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Actor.rst:2
msgid "pyvista.Actor"
msgstr ""

#: ../../pyvista/doc/api/plotting/index.rst:36:<autosummary>:1
#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor:2
msgid "Wrap vtkActor."
msgstr ""

#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor:4
msgid ""
"This class represents the geometry & properties in a rendered scene. "
"Normally, a :class:`pyvista.Actor` is constructed from "
":func:`pyvista.Plotter.add_mesh`, but there may be times when it is more "
"convenient to construct an actor directly from a "
":class:`pyvista.DataSetMapper`."
msgstr ""

#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor:13
msgid "**mapper** : :obj:`pyvista.DataSetMapper`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor:12
msgid "pyvista.DataSetMapper, optional"
msgstr ""

#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor:13
msgid "DataSetMapper."
msgstr ""

#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor:26
msgid "**prop** : :obj:`pyvista.Property`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor:25
msgid "pyvista.Property, optional"
msgstr ""

#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor:16
msgid "Property of the actor."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Actor.rst:3
msgid "Create an actor without using :class:`pyvista.Plotter`."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Actor.rst:23
msgid "Change the actor properties and plot the actor."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Actor.rst:3
#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Actor.rst:40
msgid ""
"Create an actor using the :class:`pyvista.Plotter` and then change the "
"visibility of the actor."
msgstr ""

#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.Actor.backface_prop:2
msgid "Return or set the backface property."
msgstr ""

#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.Actor.backface_prop:4
msgid ""
"By default this property matches the frontface property :attr:`Actor.prop`. "
"Once accessed or modified, this backface property becomes independent of the"
" frontface property. In order to restore the fallback to frontface property,"
" assign ``None`` to the property."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property.copy:18
#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.Actor.backface_prop:23
msgid ":obj:`pyvista.Property`"
msgstr ""

#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.Actor.backface_prop:14
msgid "The object describing backfaces."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Actor.rst:3
msgid ""
"Clip a sphere by a plane and color the inside of the clipped sphere light "
"blue using the ``backface_prop``."
msgstr ""

#: ../../pyvista/pyvista/plotting/actor.pydocstring of pyvista.Actor.bounds:2
msgid "Return the bounds of the actor."
msgstr ""

#: ../../pyvista/pyvista/plotting/actor.pydocstring of pyvista.Actor.bounds:4
msgid "Bounds are ``(-X, +X, -Y, +Y, -Z, +Z)``"
msgstr ""

#: ../../pyvista/pyvista/plotting/actor.pydocstring of pyvista.Actor.center:2
msgid "Return the center of the actor."
msgstr ""

#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor.copy:2
msgid "Create a copy of this actor."
msgstr ""

#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor.copy:10
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.vtk_points:13
msgid ""
"**deep** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:True`"
msgstr ""

#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor.copy:8
msgid ""
"Create a shallow or deep copy of the actor. A deep copy will have a new "
"property and mapper, while a shallow copy will use the mapper and property "
"of this actor."
msgstr ""

#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor.copy:24
msgid ":obj:`pyvista.Actor`"
msgstr ""

#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor.copy:15
msgid "Deep or shallow copy of this actor."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Actor.rst:3
msgid ""
"Create an actor of a cube by adding it to a :class:`pyvista.Plotter` and "
"then copy the actor, change the properties, and add it back to the "
":class:`pyvista.Plotter`."
msgstr ""

#: ../../pyvista/pyvista/plotting/actor.pydocstring of pyvista.Actor.mapper:2
msgid "Return or set the mapper of the actor."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Actor.rst:3
msgid "Create an actor and assign a mapper to it."
msgstr ""

#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.Actor.memory_address:2
msgid "Return the memory address of this actor."
msgstr ""

#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.Actor.orientation:2
msgid "Return or set the actor orientation."
msgstr ""

#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.Actor.orientation:4
msgid ""
"Orientation is defined as the rotation from the global axes in degrees about"
" the actor's x, y, and z axes."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Actor.rst:3
msgid "Show that the orientation changes with rotation."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Actor.rst:13
msgid "Set the orientation directly."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Actor.rst:19
msgid ""
"Reorient just the actor and plot it. Note how the actor is rotated about its"
" own axes as defined by its position."
msgstr ""

#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.Actor.pickable:2
msgid "Return or set actor pickability."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Actor.rst:3
msgid ""
"Create an actor using the :class:`pyvista.Plotter` and then make the actor "
"unpickable."
msgstr ""

#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor.plot:2
msgid "Plot just the actor."
msgstr ""

#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor.plot:4
msgid "This may be useful when interrogating or debugging individual actors."
msgstr ""

#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor.plot:9
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.plot:8
msgid "Optional keyword arguments passed to :func:`pyvista.Plotter.show`."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Actor.rst:3
msgid ""
"Create an actor without the :class:`pyvista.Plotter`, change its properties,"
" and plot it."
msgstr ""

#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.Actor.position:2
msgid "Return or set the actor position."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Actor.rst:3
msgid ""
"Change the position of an actor. Note how this does not change the position "
"of the underlying dataset, just the relative location of the actor in the "
":class:`pyvista.Plotter`."
msgstr ""

#: ../../pyvista/pyvista/plotting/actor.pydocstring of pyvista.Actor.prop:2
msgid "Return or set the property of this actor."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Actor.rst:3
msgid ""
"Modify the properties of an actor after adding a dataset to the plotter."
msgstr ""

#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.Actor.renderer:2
msgid "Return the renderer associated with this actor."
msgstr ""

#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor.rotate_x:2
msgid "Rotate the actor about the x axis."
msgstr ""

#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor.rotate_x:8
msgid "Angle to rotate the actor about the x axis in degrees."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Actor.rst:3
msgid ""
"Rotate the actor about the x axis 45 degrees. Note how this does not change "
"the location of the underlying dataset."
msgstr ""

#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor.rotate_y:2
msgid "Rotate the actor about the y axis."
msgstr ""

#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor.rotate_y:8
msgid "Angle to rotate the actor about the y axis in degrees."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Actor.rst:3
msgid ""
"Rotate the actor about the y axis 45 degrees. Note how this does not change "
"the location of the underlying dataset."
msgstr ""

#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor.rotate_z:2
msgid "Rotate the actor about the z axis."
msgstr ""

#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.plotting.actor.Actor.rotate_z:8
msgid "Angle to rotate the actor about the z axis in degrees."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Actor.rst:3
msgid ""
"Rotate the actor about the Z axis 45 degrees. Note how this does not change "
"the location of the underlying dataset."
msgstr ""

#: ../../pyvista/pyvista/plotting/actor.pydocstring of pyvista.Actor.scale:2
msgid "Return or set actor scale."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Actor.rst:3
msgid ""
"Create an actor using the :class:`pyvista.Plotter` and then change the scale"
" of the actor."
msgstr ""

#: ../../pyvista/pyvista/plotting/actor.pydocstring of pyvista.Actor.texture:2
msgid "Return or set the actor texture."
msgstr ""

#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.Actor.texture:16
msgid ""
"The mapper dataset must have texture coordinates for the texture to be used."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Actor.rst:3
msgid ""
"Create an actor and add a texture to it. Note how the "
":class:`pyvista.PolyData` has texture coordinates by default."
msgstr ""

#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.Actor.user_matrix:2
msgid "Return or set the orientation matrix."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Actor.rst:3
msgid ""
"Apply a 4x4 translation to a wireframe actor. This 4x4 transformation is "
"effectively translates the actor by one unit in the Z direction, rotates the"
" actor about the Z axis by approximately 45 degrees, and shrinks the actor "
"by a factor of 0.5."
msgstr ""

#: ../../pyvista/pyvista/plotting/actor.pydocstring of
#: pyvista.Actor.visibility:2
msgid "Return or set actor visibility."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.BlockAttributes.rst:2
msgid "pyvista.BlockAttributes"
msgstr ""

#: ../../pyvista/doc/api/plotting/index.rst:48:<autosummary>:1
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.BlockAttributes:2
msgid "Block attributes used to set the attributes of a block."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.BlockAttributes:8
msgid "**block** : :obj:`pyvista.DataObject`"
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.BlockAttributes:8
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositeAttributes.get_block:13
msgid "PyVista data object."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.BlockAttributes:19
msgid ""
"**attr** : :obj:`pyvista.plotting.composite_mapper.CompositeAttributes`"
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.BlockAttributes:18
msgid "pyvista.plotting.composite_mapper.CompositeAttributes"
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.BlockAttributes:11
msgid "Parent attributes."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.BlockAttributes:23
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositeAttributes:23
msgid ""
"This class employs VTK's flat indexing and allows for accessing both the "
"blocks of a composite dataset as well as the entire composite dataset. If "
"there is only one composite dataset, ``A``, which contains datasets ``[b, "
"c]``, the indexing would be ``[A, b, c]``."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.CompositePolyDataMapper.block_attr:21
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.BlockAttributes:28
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositeAttributes:28
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositeAttributes.get_block:29
msgid ""
"If there are two composite datasets ``[B, C]`` in one composite dataset, "
"``A``, each of which containing three additional datasets ``[d, e, f]``, and"
" ``[g, h, i]``, respectively, then the head node, ``A``, would be the zero "
"index, followed by the first child, ``B``, followed by all the children of "
"``B``, ``[d, e, f]``. In data structures, this flat indexing would be known "
"as \"Depth-first search\" and the entire indexing would be::"
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.BlockAttributes:38
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositeAttributes:38
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositeAttributes.get_block:39
msgid ""
"Note how the composite datasets themselves are capitalized and are "
"accessible in the flat indexing, and not just the datasets."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.BlockAttributes.rst:3
#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.CompositeAttributes.rst:3
msgid ""
"Add a sphere and a cube as a multiblock dataset to a plotter and then change"
" the visibility and color of the blocks. Note how the index of the cube is "
"``1`` as the index of the entire multiblock is ``0``."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.BlockAttributes.color:2
msgid "Get or set the color of a block."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.BlockAttributes.rst:3
msgid "Set the colors of a composite dataset to red and blue."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.BlockAttributes.rst:5
#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.CompositeAttributes.rst:6
msgid ""
"Note how the zero index is the entire multiblock, so we have to add 1 to our"
" indexing to access the right block."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.BlockAttributes.opacity:2
msgid "Get or set the opacity of a block."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.BlockAttributes.opacity:4
msgid "If opacity has not been set this will be ``None``."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.BlockAttributes.opacity:15
msgid ""
"VTK 9.0.3 has a bug where changing the opacity to less than 1.0 also changes"
" the edge visibility on the block that is partially transparent."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.BlockAttributes.rst:3
msgid "Change the opacity of the second block of the dataset."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.BlockAttributes.pickable:2
msgid "Get or set the pickability of a block."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.BlockAttributes.rst:3
msgid ""
"Make the cube of a multiblock dataset pickable and the sphere unpickable."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.BlockAttributes.rst:16
msgid ""
"See :ref:`composite_picking_example` for a full example using block picking."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.BlockAttributes.visible:2
msgid "Get or set the visibility of a block."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.BlockAttributes.rst:3
msgid "Hide the first block of a composite dataset."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.CompositeAttributes.rst:2
msgid "pyvista.CompositeAttributes"
msgstr ""

#: ../../pyvista/doc/api/plotting/index.rst:48:<autosummary>:1
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositeAttributes:2
msgid "Block attributes."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositeAttributes:8
msgid ""
"**mapper** : "
":obj:`pyvista.plotting.composite_mapper.CompositePolyDataMapper`"
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositeAttributes:7
msgid "pyvista.plotting.composite_mapper.CompositePolyDataMapper"
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositeAttributes:8
msgid "Parent mapper."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositeAttributes:19
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper:8
msgid "**dataset** : :obj:`pyvista.MultiBlock`"
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositeAttributes:11
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper:8
msgid "Multiblock dataset."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositeAttributes.get_block:2
msgid "Return a block by its flat index."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositeAttributes.get_block:8
msgid "Flat index of the block to retrieve."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositeAttributes.get_block:20
msgid ":obj:`pyvista.DataObject`"
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositeAttributes.get_block:24
msgid ""
"This method employs VTK's flat indexing and allows for accessing both the "
"blocks of a composite dataset as well as the entire composite dataset. If "
"there is only one composite dataset, ``A``, which contains datasets ``[b, "
"c]``, the indexing would be ``[A, b, c]``."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.CompositeAttributes.rst:3
msgid ""
"Add a composite dataset to a plotter and access its block attributes. Note "
"how the zero index is the entire multiblock and you can use ``1`` and ``2`` "
"to access the individual sub-blocks."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.CompositeAttributes.rst:18
msgid "Note this is the same as using ``__getitem__``"
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositeAttributes.reset_colors:2
msgid "Reset the color of all blocks."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.CompositeAttributes.rst:3
msgid "Set individual block colors and then reset them."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositeAttributes.reset_opacities:2
msgid "Reset the opacities of all blocks."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.CompositeAttributes.rst:3
msgid ""
"Change the opacity of the second block of the dataset then reset all "
"opacities."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositeAttributes.reset_pickabilities:2
msgid "Reset the pickability of all blocks."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.CompositeAttributes.rst:3
msgid ""
"Make the cube of a multiblock dataset pickable and the sphere unpickable, "
"then reset it."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositeAttributes.reset_visibilities:2
msgid "Reset the visibility of all blocks."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.CompositeAttributes.rst:3
msgid ""
"Hide the first block of a composite dataset and then show all by resetting "
"visibilities."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.CompositePolyDataMapper.rst:2
msgid "pyvista.CompositePolyDataMapper"
msgstr ""

#: ../../pyvista/doc/api/plotting/index.rst:48:<autosummary>:1
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper:2
msgid "Composite PolyData mapper."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper:16
msgid ""
"**color_missing_with_nan** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper:14
msgid ""
"Color any missing values with the ``nan_color``. This is useful when not all"
" blocks of the composite dataset have the specified ``scalars``."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper:35
msgid ""
"**interpolate_before_map** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper:19
msgid ""
"Enabling makes for a smoother scalars display.  Default is ``True``.  When "
"``False``, OpenGL will interpolate the mapped colors which can result is "
"showing colors that are not present in the color map."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.CompositePolyDataMapper.block_attr:2
msgid "Return the block attributes."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.CompositePolyDataMapper.block_attr:16
msgid ""
"``block_attr`` employs VTK's flat indexing and allows for accessing both the"
" blocks of a composite dataset as well as the entire composite dataset. If "
"there is only one composite dataset, ``A``, which contains datasets ``[b, "
"c]``, the indexing would be ``[A, b, c]``."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.CompositePolyDataMapper.rst:3
msgid ""
"Add a sphere and a cube as a multiblock dataset to a plotter and then change"
" the visibility and color of the blocks."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.CompositePolyDataMapper.color_missing_with_nan:2
msgid "Color missing arrays with the NaN color."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.CompositePolyDataMapper.rst:3
msgid "Enable coloring missing values with NaN."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.CompositePolyDataMapper.dataset:2
msgid "Return the composite dataset assigned to this mapper."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:2
msgid "Set the scalars of the mapper."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:9
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:13
msgid "**scalars_name** : :class:`python:str`"
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:8
msgid ""
"Name of the scalars in the dataset. Must already exist in at least of the "
"blocks."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:16
msgid "**preference** : :class:`python:str`"
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:12
msgid ""
"For each block, when ``block.n_points == block.n_cells`` and setting "
"scalars, this parameter sets how the scalars will be mapped to the mesh.  "
"Default ``'point'``, causes the scalars will be associated with the mesh "
"points.  Can be either ``'point'`` or ``'cell'``."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:21
msgid "**component** : :class:`python:int`"
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:19
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:32
msgid ""
"Set component of vector valued scalars to plot.  Must be nonnegative, if "
"supplied. If ``None``, the magnitude of the vector is plotted."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:26
msgid "**annotations** : :class:`python:dict`"
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:25
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:34
msgid "python:dict"
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:24
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.annotations:4
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:45
msgid ""
"Pass a dictionary of annotations. Keys are the float values in the scalars "
"range to annotate on the scalar bar and the values are the the string "
"annotations."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:30
msgid "**rgb** : :ref:`bool <python:bltin-boolean-values>`"
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:29
msgid ""
"If the ``scalars_name`` corresponds to a 2 dimensional array, plot those "
"values as RGB(A) colors."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:35
msgid "**scalar_bar_args** : :class:`python:dict`"
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:33
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:19
msgid ""
"Dictionary of keyword arguments to pass when adding the scalar bar to the "
"scene. For options, see :func:`pyvista.BasePlotter.add_scalar_bar`."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:38
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_custom_opacity:15
msgid "**n_colors** : :class:`python:int`"
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:38
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:16
msgid "Number of colors to use when displaying scalars."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:42
msgid "**nan_color** : :obj:`color_like`"
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:41
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:46
#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:51
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_custom_opacity:11
msgid "color_like"
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:41
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:55
msgid "The color to use for all ``NaN`` values in the plotted scalar array."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:47
msgid "**above_color** : :obj:`color_like`"
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:45
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:59
msgid ""
"Solid color for values below the scalars range (``clim``). This will "
"automatically set the scalar bar ``above_label`` to ``'Above'``."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:52
msgid "**below_color** : :obj:`color_like`"
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:50
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:64
msgid ""
"Solid color for values below the scalars range (``clim``). This will "
"automatically set the scalar bar ``below_label`` to ``'Below'``."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:57
msgid "**clim** : 2 :obj:`item` :class:`python:list`"
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars-1
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars-1
msgid "2"
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:55
msgid ""
"Color bar range for scalars.  Defaults to minimum and maximum of scalars "
"array.  Example: ``[-1, 2]``. ``rng`` is also an accepted alias for this."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:74
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:82
msgid ""
"**cmap** : :class:`python:str`, :class:`python:list`, :obj:`or` "
":obj:`pyvista.LookupTable`"
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:73
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:81
msgid "python:str, python:list, or pyvista.LookupTable"
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:60
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:69
msgid ""
"Name of the Matplotlib colormap to use when mapping the ``scalars``.  See "
"available Matplotlib colormaps.  Only applicable for when displaying "
"``scalars``. Requires Matplotlib to be installed.  ``colormap`` is also an "
"accepted alias for this. If ``colorcet`` or ``cmocean`` are installed, their"
" colormaps can be specified by name."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:67
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:76
msgid ""
"You can also specify a list of colors to override an existing colormap with "
"a custom one.  For example, to create a three color colormap you might "
"specify ``['green', 'red', 'blue']``."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:71
msgid ""
"This parameter also accepts a :class:`pyvista.LookupTable`. If this is set, "
"all parameters controlling the color map like ``n_colors`` will be ignored. "
"are installed, their colormaps can be specified by name."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:78
msgid "**flip_scalars** : :ref:`bool <python:bltin-boolean-values>`"
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:77
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.apply_cmap:16
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:85
msgid ""
"Flip direction of cmap. Most colormaps allow ``*_r`` suffix to do this as "
"well."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:83
msgid "**categories** : :ref:`bool <python:bltin-boolean-values>`"
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:81
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:97
msgid ""
"If set to ``True``, then the number of unique values in the scalar array "
"will be used as the ``n_colors`` argument."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:88
msgid "**log_scale** : :ref:`bool <python:bltin-boolean-values>`"
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:86
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:50
msgid ""
"Use log scale when mapping data to colors. Scalars less than zero are mapped"
" to the smallest representable positive float."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_scalars:93
msgid "Dictionary of scalar bar arguments."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_unique_colors:2
msgid "Set each block of the dataset to a unique color."
msgstr ""

#: ../../pyvista/pyvista/plotting/composite_mapper.pydocstring of
#: pyvista.plotting.composite_mapper.CompositePolyDataMapper.set_unique_colors:4
msgid "This uses ``matplotlib``'s color cycler."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.CompositePolyDataMapper.rst:3
msgid "Set each block of the composite dataset to a unique color."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.DataSetMapper.rst:2
msgid "pyvista.DataSetMapper"
msgstr ""

#: ../../pyvista/doc/api/plotting/index.rst:36:<autosummary>:1
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper:2
msgid "Wrap _vtk.vtkDataSetMapper."
msgstr ""

#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper:8
msgid "**dataset** : :obj:`pyvista.DataSet`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper:7
msgid "pyvista.DataSet, optional"
msgstr ""

#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper:8
msgid "Dataset to assign to this mapper."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.DataSetMapper.rst:3
msgid ""
"Create a mapper outside :class:`pyvista.Plotter` and assign it to an actor."
msgstr ""

#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.as_rgba:2
msgid "Convert the active scalars to RGBA."
msgstr ""

#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.as_rgba:4
msgid ""
"This method is used to convert the active scalars to a fixed RGBA array and "
"is used for certain mappers that do not support the \"map\" color mode."
msgstr ""

#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.DataSetMapper.cmap:2
msgid "Colormap assigned to this mapper."
msgstr ""

#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.DataSetMapper.dataset:2
msgid "Return or set the dataset assigned to this mapper."
msgstr ""

#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_custom_opacity:2
msgid "Set custom opacity."
msgstr ""

#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_custom_opacity:9
msgid "**opacity** : :obj:`numpy.ndarray`"
msgstr ""

#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_custom_opacity:8
msgid ""
"Opacity array to color the dataset. Array length must match either the "
"number of points or cells."
msgstr ""

#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_custom_opacity:12
msgid "**color** : :obj:`color_like`"
msgstr ""

#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_custom_opacity:12
msgid "The color to use with the opacity array."
msgstr ""

#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_custom_opacity:15
msgid "Number of colors to use."
msgstr ""

#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_custom_opacity:32
msgid "**preference** : :class:`python:str`, default: 'point'"
msgstr ""

#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_custom_opacity:31
msgid "python:str, default: 'point'"
msgstr ""

#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_custom_opacity:18
msgid ""
"Either ``'point'`` or ``'cell'``. Used when the number of cells matches the "
"number of points."
msgstr ""

#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:2
msgid "Set the scalars on this mapper."
msgstr ""

#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:8
msgid "**scalars** : :obj:`numpy.ndarray`"
msgstr ""

#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:8
msgid "Array of scalars to assign to the mapper."
msgstr ""

#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:11
msgid ""
"If the name of this array exists, scalars is ignored. Otherwise, the scalars"
" will be added to the existing dataset and this parameter is the name to "
"assign the scalars."
msgstr ""

#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:16
msgid "**n_colors** : :class:`python:int`, default: 256"
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:19
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.apply_cmap:12
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:15
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_ssao:21
msgid "python:int, default: 256"
msgstr ""

#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:21
msgid "**scalar_bar_args** : :class:`python:dict`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:29
msgid ""
"**rgb** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:False`"
msgstr ""

#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:24
msgid ""
"If an 2 dimensional array is passed as the scalars, plot those values as "
"RGB(A) colors. ``rgba`` is also an accepted alias for this.  Opacity (the A)"
" is optional.  If a scalars array ending with ``\"_rgba\"`` is passed, the "
"default becomes ``True``.  This can be overridden by setting this parameter "
"to ``False``."
msgstr ""

#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:34
msgid "**component** : :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:39
msgid "**preference** : :class:`python:str`, default: 'Point'"
msgstr ""

#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:38
msgid "python:str, default: 'Point'"
msgstr ""

#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:37
msgid ""
"When ``dataset.n_points == dataset.n_cells`` and setting scalars, this "
"parameter sets how the scalars will be mapped to the mesh. Can be either "
"``'point'`` or ``'cell'``."
msgstr ""

#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:42
msgid ""
"**custom_opac** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:False`"
msgstr ""

#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:42
msgid "Use custom opacity."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:78
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:47
msgid "**annotations** : :class:`python:dict`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:52
msgid ""
"**log_scale** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:False`"
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:53
#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:56
msgid "**nan_color** : :obj:`color_like`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:61
msgid "**above_color** : :obj:`color_like`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:66
msgid "**below_color** : :obj:`color_like`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:80
msgid ""
"This parameter also accepts a :class:`pyvista.LookupTable`. If this is set, "
"all parameters controlling the color map like ``n_colors`` will be ignored."
msgstr ""

#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:86
msgid ""
"**flip_scalars** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:False`"
msgstr ""

#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:94
msgid ""
"**opacity** : :class:`python:str` or :obj:`numpy.ndarray`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:93
msgid "python:str or numpy.ndarray, optional"
msgstr ""

#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:89
msgid ""
"Opacity mapping for the scalars array. A string can also be specified to map"
" the scalars range to a predefined opacity transfer function (options "
"include: 'linear', 'linear_r', 'geom', 'geom_r'). Or you can pass a custom "
"made transfer function that is an array either ``n_colors`` in length or "
"shorter."
msgstr ""

#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:98
msgid ""
"**categories** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:False`"
msgstr ""

#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:115
msgid "**clim** : 2 :obj:`item` :class:`python:list`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/mapper.pydocstring of
#: pyvista.plotting.mapper.DataSetMapper.set_scalars:101
msgid ""
"Color bar range for scalars.  Defaults to minimum and maximum of scalars "
"array.  Example: ``(-1, 2)``."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.LookupTable.rst:2
msgid "pyvista.LookupTable"
msgstr ""

#: ../../pyvista/doc/api/plotting/index.rst:36:<autosummary>:1
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:2
msgid "Scalar to RGBA mapping table."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:4
msgid ""
"A lookup table is an array that maps input values to output values. When "
"plotting data over a dataset, it is necessary to map those scalars to colors"
" (in the RGBA format), and this class provides the functionality to do so."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:9
msgid ""
"See `vtkLookupTable "
"<https://vtk.org/doc/nightly/html/classvtkLookupTable.html>`_ for more "
"details regarding the underlying VTK API."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:17
msgid ""
"**cmap** : :class:`python:str`, :obj:`colors.Colormap`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:16
msgid "python:str, colors.Colormap, optional"
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:16
msgid ""
"Color map from ``matplotlib``, ``colorcet``, or ``cmocean``. Either ``cmap``"
" or ``values`` can be set, but not both."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:20
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.apply_cmap:13
msgid "**n_values** : :class:`python:int`, default: 256"
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:20
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.apply_cmap:13
msgid "Number of colors in the color map."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:24
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.apply_cmap:27
msgid ""
"**flip** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:False`"
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:23
msgid ""
"Flip the direction of cmap. Most colormaps allow ``*_r`` suffix to do this "
"as well."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:28
msgid "**values** : :obj:`numpy.ndarray`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:27
msgid ""
"Lookup table values. Either ``values`` or ``cmap`` can be set, but not both."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:33
msgid "**value_range** : :class:`python:tuple`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:32
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:36
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:40
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:46
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:46
msgid "python:tuple, optional"
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:31
msgid ""
"The range of the brightness of the mapped lookup table. This range is only "
"used when creating custom color maps and will be ignored if ``cmap`` is set."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:37
msgid "**hue_range** : :class:`python:tuple`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:36
msgid ""
"Lookup table hue range. This range is only used when creating custom color "
"maps and will be ignored if ``cmap`` is set."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:41
msgid "**alpha_range** : :class:`python:tuple`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:40
msgid ""
"Lookup table alpha (transparency) range. This range is only used when "
"creating custom color maps and will be ignored if ``cmap`` is set."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:47
msgid "**scalar_range** : :class:`python:tuple`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:44
msgid ""
"The range of scalars which will be mapped to colors. Values outside of this "
"range will be colored according to :attr`LookupTable.below_range_color` and "
":attr`LookupTable.above_range_color`."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:50
msgid ""
"**log_scale** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:50
msgid "Use a log scale when mapping scalar values."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:53
msgid "Color to render any values that are NANs."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:56
msgid "**above_range_color** : :obj:`color_like`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:56
msgid "Color to render any values above :attr:`LookupTable.scalar_range`."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:59
msgid "**below_range_color** : :obj:`color_like`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:59
msgid "Color to render any values below :attr:`LookupTable.scalar_range`."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:63
msgid "**ramp** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:62
msgid ""
"The shape of the table ramp. This range is only used when creating custom "
"color maps and will be ignored if ``cmap`` is set."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable:66
msgid ""
"A dictionary of annotations. Keys are the float values in the scalars range "
"to annotate on the scalar bar and the values are the the string annotations."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.LookupTable.rst:3
msgid "Plot the lookup table with the default VTK color map."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.LookupTable.rst:32
msgid "Plot the lookup table with the ``'inferno'`` color map."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.above_range_color:2
msgid "Return or set the above range color."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.above_range_color:4
msgid ""
"Any values above :attr:`LookupTable.scalar_range` will be rendered with this"
" color."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.LookupTable.rst:3
msgid "Enable the usage of the above range color."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.LookupTable.rst:24
msgid "Disable the usage of the above range color."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.alpha_range:2
msgid "Return or set the alpha range."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.alpha_range:4
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.hue_range:4
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.saturation_range:4
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.value_range:4
msgid ""
"This range is only used when creating custom color maps and will return "
"``None`` when a color map has been set with :attr:`LookupTable.cmap`."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.alpha_range:7
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.hue_range:7
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.saturation_range:7
#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.value_range:7
msgid ""
"This will clear any existing color map and create new values for the lookup "
"table when set."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.LookupTable.rst:3
msgid "Create a custom \"blues\" lookup table that decreases in opacity."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.annotations:2
msgid "Return or set annotations."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.LookupTable.rst:3
msgid "Assign annotations to the lookup table."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.apply_cmap:2
msgid "Assign a colormap to this lookup table."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.apply_cmap:4
msgid ""
"This can be used instead of :attr:`LookupTable.cmap` when you need to set "
"the number of values at the same time as the color map."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.apply_cmap:10
msgid ""
"**cmap** : :class:`python:str`, :class:`python:list`, :obj:`colors.Colormap`"
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.apply_cmap:9
msgid "python:str, python:list, colors.Colormap"
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.apply_cmap:10
msgid "Colormap from Matplotlib, colorcet, or cmocean."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.LookupTable.rst:3
msgid "Apply ``matplotlib``'s ``'cividis'`` color map."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.apply_opacity:2
msgid "Assign custom opacity to this lookup table."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.apply_opacity:17
msgid ""
"**opacity** : :class:`python:float`, "
":class:`python:list`\\(:class:`python:float`), :class:`python:str`"
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.apply_opacity:16
msgid "python:float, python:list(python:float), python:str"
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.apply_opacity:8
msgid ""
"The opacity mapping to use. Can be a ``str`` name of a predefined mapping "
"including ``'linear'``, ``'geom'``, ``'sigmoid'``, ``'sigmoid_3-10'``.  "
"Append an ``'_r'`` to any of those names to reverse that mapping.  This can "
"also be a custom array or list of values that will be interpolated across "
"the ``n_color`` range for user defined mappings. Values must be between 0 "
"and 1."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.apply_opacity:15
msgid ""
"If a ``float``, simply applies the same opacity across the entire colormap "
"and must be between 0 and 1. Note that ``int`` values are interpreted as if "
"they were floats."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.apply_opacity:21
msgid ""
"**interpolate** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:True`"
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.apply_opacity:20
msgid ""
"Flag on whether or not to interpolate the opacity mapping for all colors."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.apply_opacity:38
msgid "**kind** : :class:`python:str`, default: 'quadratic'"
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.apply_opacity:37
msgid "python:str, default: 'quadratic'"
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.apply_opacity:24
msgid ""
"The interpolation kind if ``interpolate`` is ``True`` and ``scipy`` is "
"available. See :class:`scipy.interpolate.interp1d` for the available "
"interpolation kinds."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.apply_opacity:28
msgid "If ``scipy`` is not available, ``'linear'`` interpolation is used."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.LookupTable.rst:3
msgid ""
"Apply a user defined custom opacity to a lookup table and plot the random "
"hills example."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.below_range_color:2
msgid "Return or set the below range color."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.below_range_color:4
msgid ""
"Any values below :attr:`LookupTable.scalar_range` will be rendered with this"
" color."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.LookupTable.rst:3
msgid "Enable the usage of the below range color."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.LookupTable.rst:24
msgid "Disable the usage of the below range color."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.cmap:2
msgid "Return or set the color map used by this lookup table."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.LookupTable.rst:3
msgid "Apply the single Matplotlib color map ``\"Oranges\"``."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.LookupTable.rst:24
msgid "Apply a list of colors as a colormap."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.hue_range:2
msgid "Return or set the hue range."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.LookupTable.rst:3
msgid ""
"Set the hue range. This allows you to create a lookup table without setting "
"a color map."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.LookupTable.rst:25
msgid "Create a different color map."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.log_scale:2
msgid "Use log scale."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.log_scale:4
msgid ""
"When ``True`` the lookup table is a log scale to "
":attr:`LookupTable.scalar_range`. Otherwise, it is linear scale."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.LookupTable.rst:3
msgid "Use log scale for the lookup table."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.map_value:2
msgid ""
"Map a single value through the lookup table, returning an RBG(A) color."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.map_value:8
msgid "**value** : :class:`python:float`"
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.map_value:8
msgid "Scalar value to map to an RGB(A) color."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.map_value:11
msgid ""
"**opacity** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:True`"
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.map_value:11
msgid "Map the opacity as well."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.map_value:16
msgid "Mapped RGB(A) color."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.n_values:2
msgid "Return or set the number of values in the lookup table."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.LookupTable.rst:3
msgid "Plot the ``\"reds\"`` colormap with 10 values."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.LookupTable.rst:24
msgid "Plot the default colormap with 1024 values."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.nan_color:2
msgid "Return or set the not a number (NAN) color."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.nan_color:4
msgid "Any values that are NANs will be rendered with this color."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.LookupTable.rst:3
msgid "Set the NAN color to ``'grey'``."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.plot:2
msgid "Plot this lookup table."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.LookupTable.rst:3
msgid "Plot the ``\"viridis\"`` colormap with the below and above colors."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.LookupTable.rst:26
msgid "Plot only ``\"blues\"`` colormap."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.ramp:2
msgid "Set the shape of the table ramp."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.ramp:4
msgid ""
"This attribute is only used when creating custom color maps and will return "
"``None`` when a color map has been set with :attr:`LookupTable.cmap`. This "
"will clear any existing color map and create new values for the lookup table"
" when set."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.ramp:9
msgid "This value may be either ``\"s-curve\"``, ``\"linear\"``, or ``\"sqrt\"``."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.ramp:11
msgid "The default is S-curve, which tails off gradually at either end."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.ramp:12
msgid ""
"The equation used for ``\"s-curve\"`` is ``y = (sin((x - 1/2)*pi) + 1)/2``, "
"For an S-curve greyscale ramp, you should set :attr:`LookupTable.n_values`` "
"to 402 (which is ``256*pi/2``) to provide room for the tails of the ramp."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.ramp:17
msgid "The equation for the ``\"linear\"`` is simply ``y = x``."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.ramp:18
msgid "The equation for the ``\"sqrt\"`` is ``y = sqrt(x)``."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.LookupTable.rst:3
msgid "Show the default s-curve ramp."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.LookupTable.rst:25
msgid "Plot the linear ramp."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.LookupTable.rst:47
msgid "Plot the ``\"sqrt\"`` ramp."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.rebuild:2
msgid "Clear the color map and recompute the values table."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.rebuild:4
msgid ""
"This is called automatically when setting values like "
":attr:`LookupTable.value_range`."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.rebuild:18
msgid ""
"This will reset any colormap set with :func:`LookupTable.apply_cmap` or "
":attr:`LookupTable.values`."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.saturation_range:2
msgid "Return or set the saturation range."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.LookupTable.rst:3
msgid "Create a custom \"blues\" lookup table that increases in saturation."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.scalar_range:2
msgid "Return or set the table range."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.scalar_range:4
msgid ""
"This is the range of scalars which will be mapped to colors. Values outside "
"of this range will be colored according to "
":attr`LookupTable.below_range_color` and "
":attr`LookupTable.above_range_color`."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.to_color_tf:2
msgid "Return the VTK color transfer function of this table."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.to_color_tf:18
msgid ":obj:`vtk.vtkColorTransferFunction`"
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.to_color_tf:9
msgid "VTK color transfer function."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.to_opacity_tf:2
msgid "Return the opacity transfer function of this table."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.to_opacity_tf:18
msgid ":obj:`vtk.vtkPiecewiseFunction`"
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.plotting.lookup_table.LookupTable.to_opacity_tf:9
msgid "Piecewise function of the opacity of this color table."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.value_range:2
msgid "Return or set the brightness of the mapped lookup table."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.LookupTable.rst:3
msgid "Show the effect of setting the value range on the default color map."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.LookupTable.rst:25
msgid "Demonstrate a different value range."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.values:2
msgid "Return or set the lookup table values."
msgstr ""

#: ../../pyvista/pyvista/plotting/lookup_table.pydocstring of
#: pyvista.LookupTable.values:4
msgid ""
"This attribute is used when creating a custom lookup table. The table must "
"be a RGBA array shaped ``(n, 4)``."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.LookupTable.rst:3
msgid "Create a simple four value lookup table ranging from black to red."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Plotter.rst:2
msgid "pyvista.Plotter"
msgstr ""

#: ../../pyvista/doc/api/plotting/index.rst:36:<autosummary>:1
#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:2
msgid "Plotting object to display vtk meshes or numpy arrays."
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:8
msgid "Renders off screen when ``True``.  Useful for automated screenshots."
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:12
msgid ""
"When ``True``, the resulting plot is placed inline a jupyter notebook.  "
"Assumes a jupyter console is active.  Automatically enables ``off_screen``."
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:23
msgid ""
"**shape** : :class:`python:list` or :class:`python:tuple`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:17
msgid ""
"Number of sub-render windows inside of the main window. Specify two across "
"with ``shape=(2, 1)`` and a two by two grid with ``shape=(2, 2)``.  By "
"default there is only one render window.  Can also accept a string "
"descriptor as shape. E.g.:"
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:22
msgid "``shape=\"3|1\"`` means 3 plots on the left and 1 on the right,"
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:23
msgid "``shape=\"4/2\"`` means 4 plots on top and 2 at the bottom."
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:37
msgid ""
"Window size in pixels.  Defaults to ``[1024, 768]``, unless set differently "
"in the relevant theme's ``window_size`` property."
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:44
msgid "**multi_samples** : :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:42
msgid ""
"The number of multi-samples used to mitigate aliasing. 4 is a good default "
"but 8 will have better results with a potential impact on performance."
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:47
msgid ""
"**line_smoothing** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:47
msgid "If ``True``, enable line smoothing."
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:50
msgid ""
"**polygon_smoothing** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:50
msgid "If ``True``, enable polygon smoothing."
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:61
msgid "**lighting** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:53
msgid "What lighting to set up for the plotter. Accepted options:"
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:56
msgid "``'light_kit'``: a vtk Light Kit composed of 5 lights."
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:57
msgid "``'three lights'``: illumination using 3 lights."
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:58
msgid "``'none'``: no light sources at instantiation."
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter:60
msgid ""
"The default is a ``'light_kit'`` (to be precise, 5 separate lights that act "
"like a Light Kit)."
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_cursor:2
msgid "Add a cursor of a PyVista or VTK dataset to the scene."
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_cursor:10
msgid "``(xmin, xmax, ymin, ymax, zmin, zmax)``"
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_cursor:12
msgid "Defaults to ``(-1.0, 1.0, -1.0, 1.0, -1.0, 1.0)``."
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_cursor:15
msgid "The focal point of the cursor."
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_cursor:17
msgid "Defaults to ``(0.0, 0.0, 0.0)``."
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_cursor:20
msgid ""
"Either a string, RGB sequence, or hex color string.  For one of the "
"following."
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_cursor:40
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_bounding_box:60
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:77
msgid ":obj:`vtk.vtkActor`"
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_cursor:31
msgid "VTK actor of the 2D cursor."
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_title:2
msgid "Add text to the top center of the plot."
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_title:4
msgid ""
"This is merely a convenience method that calls ``add_text`` with "
"``position='upper_edge'``."
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_title:10
msgid "**title** : :class:`python:str`"
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_title:10
msgid "The text to add the rendering."
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_title:14
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:48
msgid "**font_size** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_title:13
msgid ""
"Sets the size of the title font.  Defaults to 16 or the value of the global "
"theme if set."
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_title:24
msgid "**color** : :obj:`color_like`, optional,"
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_title:23
msgid "color_like, optional,"
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_title:17
msgid ""
"Either a string, rgb list, or hex color string.  Defaults to white or the "
"value of the global theme if set.  For example:"
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_title:27
msgid "**font** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_title:27
msgid "Font name may be ``'courier'``, ``'times'``, or ``'arial'``."
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_title:30
msgid ""
"**shadow** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_title:30
msgid "Adds a black shadow to the text.  Defaults to ``False``."
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_title:44
msgid ":obj:`vtk.vtkTextActor`"
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.add_title:35
msgid "Text actor added to plot."
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:2
msgid "Display the plotting window."
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:8
msgid ""
"Title of plotting window.  Defaults to :attr:`pyvista.global_theme.title "
"<pyvista.themes.DefaultTheme.title>`."
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:12
msgid ""
"Window size in pixels.  Defaults to :attr:`pyvista.global_theme.window_size "
"<pyvista.themes.DefaultTheme.window_size>`."
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:16
msgid ""
"Enabled by default.  Allows user to pan and move figure. Defaults to "
":attr:`pyvista.global_theme.interactive "
"<pyvista.themes.DefaultTheme.interactive>`."
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:23
msgid ""
"**auto_close** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:21
msgid ""
"Exits plotting session when user closes the window when interactive is "
"``True``.  Defaults to :attr:`pyvista.global_theme.auto_close "
"<pyvista.themes.DefaultTheme.auto_close>`."
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:27
msgid ""
"**interactive_update** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:26
msgid ""
"Disabled by default.  Allows user to non-blocking draw, user should call "
":func:`BasePlotter.update` in each iteration."
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:30
msgid ""
"Opens window in full screen.  When enabled, ignores ``window_size``.  "
"Defaults to :attr:`pyvista.global_theme.full_screen "
"<pyvista.themes.DefaultTheme.full_screen>`."
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:42
msgid ""
"**screenshot** : :class:`python:str`, :obj:`pathlib.Path`, :obj:`BytesIO` or"
" :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:41
msgid "python:str, pathlib.Path, BytesIO or bool, optional"
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:35
msgid ""
"Take a screenshot of the initial state of the plot. If a string, it "
"specifies the path to which the screenshot is saved. If ``True``, the "
"screenshot is returned as an array. Defaults to ``False``. For interactive "
"screenshots it's recommended to first call ``show()`` with "
"``auto_close=False`` to set the scene, then save the screenshot in a "
"separate call to ``show()`` or :func:`Plotter.screenshot`."
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:46
msgid ""
"**return_img** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:False`"
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:45
msgid ""
"Returns a numpy array representing the last image along with the camera "
"position."
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:50
msgid ""
"**cpos** : :class:`python:list`\\(:class:`python:tuple`\\(:obj:`floats`)), "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:49
msgid "python:list(python:tuple(floats)), optional"
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:49
msgid ""
"The camera position.  You can also set this with "
":attr:`Plotter.camera_position`."
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:62
msgid "``'pythreejs'`` : Show a ``pythreejs`` widget"
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:75
msgid ""
"Return the last camera position from the render window when enabled.  "
"Default based on theme setting.  See "
":attr:`pyvista.themes.DefaultTheme.return_cpos`."
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:86
msgid "**before_close_callback** : :obj:`Callable`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:85
msgid "Callable, optional"
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:80
msgid ""
"Callback that is called before the plotter is closed. The function takes a "
"single parameter, which is the plotter object before it closes. An example "
"of use is to capture a screenshot after interaction::"
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:89
msgid "Developer keyword arguments."
msgstr ""

#: ../../pyvista/pyvista/plotting/plotting.pydocstring of
#: pyvista.plotting.plotting.Plotter.show:122
msgid ""
"Please use the ``q``-key to close the plotter as some operating systems "
"(namely Windows) will experience issues saving a screenshot if the exit "
"button in the GUI is pressed."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Plotter.rst:3
msgid "Simply show the plot of a mesh."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Plotter.rst:24
msgid ""
"Take a screenshot interactively.  Screenshot will be of the first image "
"shown, so use the first call with ``auto_close=False`` to set the scene "
"before taking the screenshot."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Plotter.rst:34
msgid "Display a ``pythreejs`` scene within a jupyter notebook"
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Plotter.rst:38
msgid "Return a ``pythreejs`` scene."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Plotter.rst:42
msgid "Obtain the camera position when using ``show``."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:2
msgid "pyvista.Property"
msgstr ""

#: ../../pyvista/doc/api/plotting/index.rst:36:<autosummary>:1
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:2
msgid "Wrap vtkProperty and expose it pythonically."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:4
msgid "This class is used to set the property of actors."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:20
msgid "**interpolation** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:12
msgid "Set the method of shading. One of the following:"
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.interpolation:6
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:14
msgid "``'Physically based rendering'`` - Physically based rendering."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.interpolation:7
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:15
msgid "``'pbr'`` - Alias for Physically based rendering."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.interpolation:8
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:16
msgid "``'Phong'`` - Phong shading."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.interpolation:9
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:17
msgid "``'Gouraud'`` - Gouraud shading."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.interpolation:10
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:18
msgid "``'Flat'`` - Flat Shading."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.interpolation:12
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:20
msgid "This parameter is case insensitive."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:23
msgid ""
"Used to make the entire mesh have a single solid color. Either a string, RGB"
" list, or hex color string.  For example: ``color='white'``, ``color='w'``, "
"``color=[1.0, 1.0, 1.0]``, or ``color='#FFFFFF'``. Color will be overridden "
"if scalars are specified."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:33
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.line:24
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.scatter:24
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D:23
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Pen:20
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D:23
msgid "**style** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:30
msgid ""
"Visualization style of the mesh.  One of the following: ``style='surface'``,"
" ``style='wireframe'``, ``style='points'``. Defaults to ``'surface'``. Note "
"that ``'wireframe'`` only shows a wireframe of the outer geometry."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:38
msgid "**metallic** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:36
msgid ""
"Usually this value is either 0 or 1 for a real material but any value in "
"between is valid. This parameter is only used by PBR interpolation."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:44
msgid "**roughness** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:41
msgid ""
"This value has to be between 0 (glossy) and 1 (rough). A glossy material has"
" reflections and a high specular part. This parameter is only used by PBR "
"interpolation."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:47
msgid "**point_size** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:47
msgid "Size of the points represented by this property."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:52
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_bounding_box:27
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:32
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:56
msgid "**opacity** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:50
msgid ""
"Opacity of the mesh. A single float value that will be applied globally "
"opacity of the mesh and uniformly applied everywhere - should be between 0 "
"and 1."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:58
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:44
msgid "**ambient** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.ambient:4
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:55
msgid ""
"When lighting is enabled, this is the amount of light in the range of 0 to 1"
" (default 0.0) that reaches the actor when not directed at the light source "
"emitted from the viewer."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:61
msgid "**diffuse** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:61
msgid "The diffuse lighting coefficient. Default 1.0."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:64
msgid "**specular** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:64
msgid "The specular lighting coefficient. Default 0.0."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:67
msgid "**specular_power** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:67
msgid "The specular power. Between 0.0 and 128.0."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:71
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:35
msgid ""
"**show_edges** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:70
msgid "Shows the edges.  Does not apply to a wireframe representation."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.edge_color:4
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:74
msgid ""
"The solid color to give the edges when ``show_edges=True``. Either a string,"
" RGB list, or hex color string."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:78
msgid ""
"**render_points_as_spheres** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:78
msgid "Render points as spheres rather than dots."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:82
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_bounding_box:31
msgid ""
"**render_lines_as_tubes** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:81
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_bounding_box:30
msgid ""
"Show lines as thick tubes rather than flat lines.  Control the width with "
"``line_width``."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:85
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_bounding_box:34
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:43
msgid ""
"**lighting** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:85
msgid "Enable or disable view direction lighting."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:89
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_bounding_box:24
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:39
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:32
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:8
msgid "**line_width** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:88
msgid ""
"Thickness of lines.  Only valid for wireframe and surface representations."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:109
msgid ""
"**culling** : :class:`python:str`, :ref:`bool <python:bltin-boolean-"
"values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:108
msgid "python:str, bool, optional"
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.culling:4
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:92
msgid ""
"Does not render faces that are culled. This can be helpful for dense surface"
" meshes, especially when edges are visible, but can cause flat meshes to be "
"partially displayed. Defaults to ``'none'``. One of the following:"
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.culling:9
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:97
msgid "``\"back\"`` - Enable backface culling"
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.culling:10
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:98
msgid "``\"front\"`` - Enable frontface culling"
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.culling:11
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property:99
msgid "``'none'`` - Disable both backface and frontface culling"
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:3
msgid "Create a :class:`pyvista.Actor` and assign properties to it."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:15
msgid "Visualize how the property would look when applied to a mesh."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:33
msgid ""
"Set custom properties not directly available in "
":func:`pyvista.Plotter.add_mesh`. Here, we set diffuse, ambient, and "
"specular power and colors."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.ambient:2
msgid "Return or set ambient."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:9
msgid "Visualize default ambient light."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:28
msgid "Visualize ambient at ``0.5``."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:47
msgid "Visualize ambient at ``1.0``."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.ambient_color:2
msgid "Return or set the ambient color of this property."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.ambient_color:4
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.color:4
msgid ""
"Either a string, RGB list, or hex color string.  For example: "
"``color='white'``, ``color='w'``, ``color=[1.0, 1.0, 1.0]``, or "
"``color='#FFFFFF'``. Color will be overridden if scalars are specified."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:3
msgid "Set the ambient color to blue."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:11
msgid "Visualize setting the ambient color to blue with ``ambient = 0.1``"
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.anisotropy:2
msgid "Return or set the anisotropy coefficient."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.anisotropy:4
msgid ""
"This value controls the anisotropy of the material (0.0 means isotropic). "
"This requires physically based rendering."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.anisotropy:7
msgid ""
"For further details see `PBR Journey Part 2 : Anisotropy model with VTK "
"<https://www.kitware.com/pbr-journey-part-2-anisotropy-model-with-vtk/>`_"
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.anisotropy:21
msgid "This attribute requires VTK v9.1.0 or newer."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:3
msgid "Set anisotropy to 0.1"
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.color:2
msgid "Return or set the color of this property."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:3
msgid "Set the color to blue."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:11
msgid "Visualize setting the property to blue."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:30
msgid "Visualize setting the color using an RGB value."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property.copy:2
msgid "Create a deep copy of this property."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property.copy:9
msgid "Deep copy of this property."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.culling:2
msgid "Return or set face culling."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:3
msgid "Enable back face culling"
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:11
msgid "Plot default culling."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:30
msgid ""
"Plot backface culling. This looks the same as the default culling ``'none'``"
" because the forward facing faces are already obscuring the back faces."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:51
msgid ""
"Plot frontface culling. Here, the forward facing faces are hidden entirely."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.diffuse:2
msgid "Return or set the diffuse lighting coefficient."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.diffuse:4
msgid "Default 1.0."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.diffuse:6
msgid ""
"This is the scattering of light by reflection or transmission. Diffuse "
"reflection results when light strikes an irregular surface such as a frosted"
" window or the surface of a frosted or coated light bulb."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:9
msgid "Visualize default diffuse light."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:28
msgid "Visualize diffuse at ``0.5``."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:47
msgid "Visualize diffuse at ``0.0``."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.diffuse_color:2
msgid "Return or set the diffuse color of this property."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.diffuse_color:4
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.specular_color:4
msgid ""
"Either a string, RGB list, or hex color string.  For example: "
"``color='white'``, ``color='w'``, ``color=[1.0, 1.0, 1.0]``, or "
"``color='#FFFFFF'``."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:3
msgid "Set the diffuse color to blue."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:11
msgid "Visualize setting the diffuse color to white with ``diffuse = 0.5``"
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.edge_color:2
msgid "Return or set the edge color of this property."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:9
msgid ""
"Visualize red edges. Set the edge's visibility to ``True`` so we can see "
"them."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.interpolation:2
msgid "Return or set the method of shading."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.interpolation:4
msgid "One of the following options."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:3
msgid "Set interpolation to physically based rendering."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:11
msgid "Visualize default flat shading."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:30
msgid "Visualize gouraud shading."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:49
msgid "Visualize phong shading."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:68
msgid "Visualize physically based rendering."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.lighting:2
msgid "Return or set view direction lighting."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:3
msgid "Disable lighting."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:11
msgid "Visualize it."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.line_width:2
msgid "Return or set the line width."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:3
msgid "Change the line width to ``10``."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:11
msgid "Visualize the default line width."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:31
msgid "Visualize with a line width of 5.0"
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.metallic:2
msgid "Return or set metallic."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.metallic:4
#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.roughness:4
msgid ""
"This requires that the interpolation be set to ``'Physically based "
"rendering'``"
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:3
msgid "Set metallic to 0.1"
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:12
msgid "Visualize default metallic."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:31
msgid "Visualize metallic at ``0.5``."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:50
msgid "Visualize metallic at ``1.0``."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.opacity:2
msgid "Return or set the opacity of this property."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.opacity:4
msgid ""
"Opacity of the mesh. A single float value that will be applied globally "
"opacity of the mesh and uniformly applied everywhere. Between 0 and 1."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:3
msgid "Set opacity to ``0.5``."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:11
msgid "Visualize default opacity of ``1.0``."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:30
msgid "Visualize opacity of ``0.75``."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:49
msgid "Visualize opacity of ``0.25``."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property.plot:2
msgid "Plot this property on the Stanford Bunny."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property.plot:4
msgid ""
"This is useful for visualizing how this property would be applied to an "
"actor."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.plotting._property.Property.plot:10
msgid "Keyword arguments for :class:`pyvista.Plotter`."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.point_size:2
msgid "Return or set the point size."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:3
msgid "Change the point size to ``10.0``."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:11
msgid "Visualize a point size of ``5.0``."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:31
msgid "Visualize the a point size of ``10.0``."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.render_lines_as_tubes:2
msgid "Return or set rendering lines as tubes."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.render_lines_as_tubes:4
msgid "Requires representation style be set to ``'wireframe'``."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:3
msgid "Enable rendering lines as tubes."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:13
msgid "Visualize default line rendering."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:32
msgid "Visualize rendering lines as tubes"
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.render_points_as_spheres:2
msgid "Return or set rendering points as spheres."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.render_points_as_spheres:4
msgid "Requires representation style be set to ``'points'``."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:3
msgid "Enable rendering points as spheres"
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:13
msgid "Visualize default point rendering."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:32
msgid "Visualize rendering points as spheres."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.roughness:2
msgid "Return or set roughness."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:3
msgid "Set roughness to 0.1"
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:13
msgid "Visualize default roughness with metallic of ``0.5``."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:32
msgid "Visualize roughness at ``0.0`` with metallic of ``0.5``."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:51
msgid "Visualize roughness at ``1.0`` with metallic of ``0.5``."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.show_edges:2
msgid "Return or set the visibility of edges."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.show_edges:4
msgid ""
"Shows or hides the edges.  Does not apply to a wireframe representation."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:9
msgid "Visualize default edge visibility of ``False``."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:28
msgid "Visualize edge visibility of ``True``."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.specular:2
msgid "Return or set specular."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.specular:4
msgid "Default 0.0"
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.specular:6
msgid ""
"Specular lighting simulates the bright spot of a light that appears on shiny"
" objects."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:9
msgid "Visualize default specular light."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:28
msgid "Visualize specular at ``0.5``."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:47
msgid "Visualize specular at ``1.0``."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.specular_color:2
msgid "Return or set the specular color of this property."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:3
msgid "Set the specular color to blue."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:11
msgid "Visualize setting the specular color to blue with ``specular = 0.2``"
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.specular_power:2
msgid "Return or set specular power."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.specular_power:4
msgid "The specular power. Between 0.0 and 128.0. Default 1.0"
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:3
msgid "Set specular power to 5.0"
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:12
msgid "Visualize default specular power."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:31
msgid "Visualize specular power at ``0.1``."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:50
msgid "Visualize specular power at ``5.0``."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:69
msgid "Visualize specular power at ``128.0``."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.style:2
msgid "Return or set Visualization style of the mesh."
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.style:4
msgid "One of the following (case insensitive):"
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.style:6
msgid "``'surface'``"
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.style:7
msgid "``'wireframe'``"
msgstr ""

#: ../../pyvista/pyvista/plotting/_property.pydocstring of
#: pyvista.Property.style:8
msgid "``'points'``"
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:3
msgid "Set the representation style to ``'Wireframe'``"
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:11
msgid "Visualize default surface representation style."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:30
msgid "Visualize wireframe representation style."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Property.rst:49
msgid "Visualize points representation style."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Renderer.rst:2
msgid "pyvista.Renderer"
msgstr ""

#: ../../pyvista/doc/api/plotting/index.rst:36:<autosummary>:1
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer:2
msgid "Renderer class."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.Renderer.actors:2
msgid "Return a dictionary of actors assigned to this renderer."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_actor:2
msgid "Add an actor to render window."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_actor:4
msgid "Creates an actor if input is a mapper."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_actor:9
msgid "**uinput** : :obj:`vtk.vtkMapper` or :obj:`vtk.vtkActor`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_actor:8
msgid "vtk.vtkMapper or vtk.vtkActor"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_actor:9
msgid "Vtk mapper or vtk actor to be added."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_actor:12
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_bounding_box:37
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:49
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_actor:15
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_scale:32
msgid ""
"**reset_camera** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_actor:12
msgid "Resets the camera when ``True``."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_actor:15
msgid "Name to assign to the actor.  Defaults to the memory address."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_actor:22
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_bounding_box:46
msgid "**culling** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_actor:18
msgid ""
"Does not render faces that are culled. Options are ``'front'`` or "
"``'back'``. This can be helpful for dense surface meshes, especially when "
"edges are visible, but can cause flat meshes to be partially displayed.  "
"Default ``False``."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_actor:26
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:58
msgid ""
"**pickable** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_actor:25
msgid "Whether to allow this actor to be pickable within the render window."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_actor:30
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.deep_clean:22
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_actor:19
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_bounding_box:18
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_floors:21
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_legend:19
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:123
msgid ""
"**render** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_actor:29
msgid ""
"If the render window is being shown, trigger a render after adding the "
"actor."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_actor:34
msgid ""
"**remove_existing_actor** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_actor:33
msgid ""
"Removes any existing actor if the named actor ``name`` is already present."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_actor:39
msgid "**actor** : :obj:`vtk.vtkActor` or :obj:`pyvista.Actor`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_actor:38
msgid "vtk.vtkActor or pyvista.Actor"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_actor:39
msgid "The actor."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_actor:54
msgid "**actor_properties** : :obj:`vtk.Properties`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_actor:53
msgid "vtk.Properties"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_actor:42
msgid "Actor properties."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:2
msgid "Add an interactive axes widget in the bottom left corner."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:8
msgid "Enable this orientation widget to be moved by the user."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:11
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:32
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:8
msgid "The width of the marker lines."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:14
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:50
msgid "Color of the labels."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:17
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes_at_origin:8
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:11
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:17
msgid "**x_color** : :obj:`color_like`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:17
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:35
msgid "Color used for the x axis arrow.  Defaults to theme axes parameters."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:20
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes_at_origin:11
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:14
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:20
msgid "**y_color** : :obj:`color_like`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:20
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:39
msgid "Color used for the y axis arrow.  Defaults to theme axes parameters."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:23
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes_at_origin:14
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:17
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:23
msgid "**z_color** : :obj:`color_like`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:23
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:43
msgid "Color used for the z axis arrow.  Defaults to theme axes parameters."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:26
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes_at_origin:17
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:69
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:20
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:26
msgid "**xlabel** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:26
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:20
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:26
msgid "Text used for the x axis."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:29
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:23
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:29
msgid "Text used for the y axis."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:32
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes_at_origin:23
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:75
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:26
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:32
msgid "**zlabel** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:32
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:26
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:32
msgid "Text used for the z axis."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:35
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes_at_origin:29
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:29
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:53
msgid ""
"**labels_off** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:35
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:29
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:53
msgid "Enable or disable the text labels for the axes."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:39
msgid "**box** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:38
msgid ""
"Show a box orientation marker. Use ``box_args`` to adjust. See "
":func:`pyvista.create_axes_orientation_box` for details."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:44
msgid "**box_args** : :class:`python:dict`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:42
msgid ""
"Parameters for the orientation box widget when ``box=True``. See the "
"parameters of :func:`pyvista.create_axes_orientation_box`."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:47
msgid "**viewport** : :class:`python:tuple`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:47
msgid "Viewport ``(xstart, ystart, xend, yend)`` of the widget."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:55
msgid "**marker_args** : :class:`python:dict`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:50
msgid "Marker arguments."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:52
msgid ""
"Use ``**kwargs`` for passing parameters for the orientation marker widget. "
"See the parameters of :func:`pyvista.create_axes_marker`."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:58
msgid ""
"Used for passing parameters for the orientation marker widget. See the "
"parameters of :func:`pyvista.create_axes_marker`."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:73
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes_at_origin:43
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_grid:27
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:62
msgid ":obj:`vtk.vtkAxesActor`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes:64
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:53
msgid "Axes actor."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Renderer.rst:3
msgid "Show axes without labels and with thick lines."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Renderer.rst:25
msgid "Use the axes orientation widget instead of the default arrows."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Renderer.rst:46
msgid "Specify more parameters for the axes marker."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes_at_origin:2
msgid "Add axes actor at origin."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes_at_origin:8
msgid "The color of the x axes arrow."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes_at_origin:11
msgid "The color of the y axes arrow."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes_at_origin:14
msgid "The color of the z axes arrow."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes_at_origin:17
msgid "The label of the x axes arrow."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes_at_origin:20
msgid "The label of the y axes arrow."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes_at_origin:23
msgid "The label of the z axes arrow."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes_at_origin:26
msgid "Width of the arrows."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes_at_origin:29
msgid "Disables the label text when ``True``."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_axes_at_origin:34
msgid "Actor of the axes."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_blurring:2
msgid "Add blurring."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_blurring:4
msgid "This can be added several times to increase the degree of blurring."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Renderer.rst:3
msgid "Add two blurring passes to the plotter and show it."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Renderer.rst:26
msgid "See :ref:`blur_example` for a full example using this method."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_border:2
msgid "Add borders around the frame."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_border:8
msgid "Color of the border."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_border:11
msgid "Width of the border."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_border:28
msgid ":obj:`vtk.vtkActor2D`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_border:16
msgid "Border actor."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_bounding_box:2
msgid "Add an unlabeled and unticked box at the boundaries of plot."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_bounding_box:4
msgid ""
"Useful for when wanting to plot outer grids while still retaining all edges "
"of the boundary."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_bounding_box:10
msgid ""
"Color of all labels and axis titles.  Default white. Either a string, rgb "
"sequence, or hex color string.  For example:"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_bounding_box:21
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:107
msgid "**corner_factor** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_bounding_box:20
msgid ""
"This is the factor along each axis to draw the default box. Default is 0.5 "
"to show the full box."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_bounding_box:24
msgid "Thickness of lines."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_bounding_box:27
msgid "Opacity of mesh.  Default 1.0 and should be between 0 and 1."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_bounding_box:34
msgid "Enable or disable directional lighting for this actor."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_bounding_box:37
msgid "Reset camera position when ``True`` to include all actors."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_bounding_box:41
msgid ""
"**outline** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:True`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_bounding_box:40
msgid ""
"Default is ``True``. when ``False``, a box with faces is shown with the "
"specified culling."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_bounding_box:44
msgid ""
"Does not render faces that are culled. Options are ``'front'`` or "
"``'back'``. Default is ``'front'`` for bounding box."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_bounding_box:51
msgid "VTK actor of the bounding box."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_chart:2
msgid "Add a chart to this renderer."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_chart:8
msgid ""
"**chart** : :obj:`Chart2D`, :obj:`ChartBox`, :obj:`ChartPie` or "
":obj:`ChartMPL`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_chart:7
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_chart:20
msgid "Chart2D, ChartBox, ChartPie or ChartMPL"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_chart:8
msgid "Chart to add to renderer."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_chart:21
msgid ""
"**\\*charts** : :obj:`Chart2D`, :obj:`ChartBox`, :obj:`ChartPie` or "
":obj:`ChartMPL`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_chart:11
msgid "Charts to add to renderer."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:2
msgid "Show a floor mesh."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:4
msgid ""
"This generates planes at the boundaries of the scene to behave like floors "
"or walls."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:15
msgid "**face** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:10
msgid ""
"The face at which to place the plane. Options are (``'-z'``, ``'-y'``, "
"``'-x'``, ``'+z'``, ``'+y'``, and ``'+z'``). Where the ``-/+`` sign "
"indicates on which side of the axis the plane will lie.  For example, "
"``'-z'`` would generate a floor on the XY-plane and the bottom of the scene "
"(minimum z)."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:18
msgid "**i_resolution** : :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:18
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Plane:20
msgid "Number of points on the plane in the i direction."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:21
msgid "**j_resolution** : :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:21
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Plane:23
msgid "Number of points on the plane in the j direction."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:24
msgid ""
"Color of all labels and axis titles.  Default gray. Either a string, rgb "
"list, or hex color string."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:28
msgid "Thickness of the edges. Only if ``show_edges`` is ``True``."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:32
msgid "The opacity of the generated surface."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:35
msgid "Flag on whether to show the mesh edges for tiling."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:38
msgid ""
"Thickness of lines.  Only valid for wireframe and surface representations.  "
"Default ``None``."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:42
msgid "Enable or disable view direction lighting.  Default ``False``."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:46
msgid "Color of of the edges of the mesh."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:49
msgid "Resets the camera when ``True`` after adding the floor."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:52
msgid "**pad** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:52
msgid "Percentage padding between 0 and 1."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:55
msgid "Percentage offset along plane normal."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:58
msgid "Make this floor actor pickable in the renderer."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:63
msgid ""
"**store_floor_kwargs** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:61
msgid ""
"Stores the keyword arguments used when adding this floor. Useful when "
"updating the bounds and regenerating the floor."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_floor:68
msgid "VTK actor of the floor."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Renderer.rst:3
msgid "Add a floor below a sphere and plot it."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:2
msgid "Add a legend to render window."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:4
msgid ""
"Entries must be a list containing one string and color entry for each item."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:19
msgid "**labels** : :class:`python:list`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:10
msgid "When set to ``None``, uses existing labels as specified by"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:12
msgid ":func:`add_mesh <BasePlotter.add_mesh>`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:13
msgid ":func:`add_lines <BasePlotter.add_lines>`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:14
msgid ":func:`add_points <BasePlotter.add_points>`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:16
msgid ""
"List containing one entry for each item to be added to the legend.  Each "
"entry must contain two strings, [label, color], where label is the name of "
"the item to add, and color is the color of the label to add."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:25
msgid "**bcolor** : :obj:`color_like`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:22
msgid ""
"Background color, either a three item 0 to 1 RGB color list, or a matplotlib"
" color string (e.g. ``'w'`` or ``'white'`` for a white color).  If None, "
"legend background is disabled."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:28
msgid "Controls if there will be a border around the legend. Default False."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:34
msgid "**size** : :term:`python:sequence`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:32
msgid ""
"Two float sequence, each float between 0 and 1.  For example ``(0.1, 0.1)`` "
"would make the legend 10% the size of the entire figure window."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:37
msgid ""
"The name for the added actor so that it can be easily updated.  If an actor "
"of this name already exists in the rendering window, it will be replaced by "
"the new actor."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:52
msgid "**loc** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:42
msgid "Location string.  One of the following:"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:44
msgid "``'upper right'``"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:45
msgid "``'upper left'``"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:46
msgid "``'lower left'``"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:47
msgid "``'lower right'``"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:48
msgid "``'center left'``"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:49
msgid "``'center right'``"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:50
msgid "``'lower center'``"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:51
msgid "``'upper center'``"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:52
msgid "``'center'``"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:67
msgid ""
"**face** : :class:`python:str` or :obj:`pyvista.PolyData`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:66
msgid "python:str or pyvista.PolyData, optional"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:55
msgid "Face shape of legend face.  One of the following:"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:57
msgid "None: ``None``"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:58
msgid "Line: ``\"-\"`` or ``\"line\"``"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:59
msgid "Triangle: ``\"^\"`` or ``'triangle'``"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:60
msgid "Circle: ``\"o\"`` or ``'circle'``"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:61
msgid "Rectangle: ``\"r\"`` or ``'rectangle'``"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:62
msgid "Custom: :class:`pyvista.PolyData`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:64
msgid ""
"Default is ``'triangle'``.  Passing ``None`` removes the legend face.  A "
"custom face can be created using :class:`pyvista.PolyData`.  This will be "
"rendered from the XY plane."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:81
msgid ":obj:`vtk.vtkLegendBoxActor`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_legend:72
msgid "Actor for the legend."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Renderer.rst:3
msgid "Create a legend by labeling the meshes when using ``add_mesh``"
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Renderer.rst:29
msgid "Alternatively provide labels in the plotter."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_light:2
msgid "Add a light to the renderer."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_light:21
msgid "**light** : :obj:`vtk.vtkLight` or :obj:`pyvista.Light`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_light:20
msgid "vtk.vtkLight or pyvista.Light"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_light:8
msgid "Light to add."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_orientation_widget:2
msgid "Use the given actor in an orientation marker widget."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_orientation_widget:4
msgid "Color and opacity are only valid arguments if a mesh is passed."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_orientation_widget:9
msgid "**actor** : :obj:`vtk.vtkActor` or :obj:`pyvista.DataSet`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_orientation_widget:8
msgid "vtk.vtkActor or pyvista.DataSet"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_orientation_widget:9
msgid "The mesh or actor to use as the marker."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_orientation_widget:12
msgid ""
"Control if the orientation widget is interactive.  By default uses the value"
" from :attr:`pyvista.global_theme.interactive "
"<pyvista.themes.DefaultTheme.interactive>`."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_orientation_widget:18
msgid ""
"The color of the actor.  This only applies if ``actor`` is a "
":class:`pyvista.DataSet`."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_orientation_widget:22
msgid ""
"**opacity** : :class:`python:int` or :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_orientation_widget:22
msgid "Opacity of the marker."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_orientation_widget:36
msgid ":obj:`vtk.vtkOrientationMarkerWidget`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.add_orientation_widget:27
msgid "Orientation marker widget."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Renderer.rst:3
msgid "Use an Arrow as the orientation widget."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.Renderer.axes_enabled:2
msgid "Return ``True`` when axes are enabled."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.Renderer.background_color:2
msgid "Return the background color of this renderer."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.Renderer.border_color:2
msgid "Return the border color."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.Renderer.border_width:2
msgid "Return the border width."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.Renderer.bounds:2
msgid "Return the bounds of all actors present in the rendering window."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.Renderer.camera:2
msgid "Return the active camera for the rendering scene."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.Renderer.camera_position:2
msgid "Return camera position of active render window."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.Renderer.center:2
msgid ""
"Return the center of the bounding box around all data present in the scene."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.Renderer.center:9
msgid "Cartesian coordinates of the center."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.clear:2
msgid "Remove all actors and properties."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.clear_actors:2
msgid "Remove all actors (keep lights and properties)."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.close:2
msgid "Close out widgets and sensitive elements."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.deep_clean:2
msgid "Clean the renderer of the memory."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.deep_clean:8
msgid ""
"Render the render window after removing the bounding box (if applicable)."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.disable:2
msgid "Disable this renderer's camera from being interactive."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.disable_anti_aliasing:2
msgid "Disable all anti-aliasing."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.disable_depth_of_field:2
msgid "Disable depth of field plotting."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.disable_depth_peeling:2
msgid "Disable depth peeling."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.disable_eye_dome_lighting:2
msgid "Disable eye dome lighting (EDL)."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.disable_hidden_line_removal:2
msgid "Disable hidden line removal."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.disable_parallel_projection:2
msgid "Reset the camera to use perspective projection."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.disable_shadows:2
msgid "Disable shadows."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.disable_ssao:2
msgid "Disable surface space ambient occlusion (SSAO)."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable:2
msgid "Enable this renderer's camera to be interactive."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_anti_aliasing:2
msgid "Enable anti-aliasing."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_anti_aliasing:21
msgid "**aa_type** : :class:`python:str`, default: 'fxaa'"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_anti_aliasing:20
msgid "python:str, default: 'fxaa'"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_anti_aliasing:8
msgid "Anti-aliasing type. Either ``\"fxaa\"`` or ``\"ssaa\"``."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_depth_of_field:2
msgid "Enable depth of field plotting."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_depth_of_field:20
msgid ""
"**automatic_focal_distance** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_depth_of_field:8
msgid ""
"Use automatic focal distance calculation. When enabled, the center of the "
"viewport will always be in focus regardless of where the focal point is. "
"Default ``True``."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Renderer.rst:3
msgid "Create five spheres and demonstrate the effect of depth of field."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Renderer.rst:42
msgid ""
"See :ref:`depth_of_field_example` for a full example using this method."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_depth_peeling:2
msgid "Enable depth peeling to improve rendering of translucent geometry."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_depth_peeling:10
msgid "**number_of_peels** : :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_depth_peeling:8
msgid ""
"The maximum number of peeling layers. Initial value is 4 and is set in the "
"``pyvista.global_theme``. A special value of 0 means no maximum limit.  It "
"has to be a positive value."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_depth_peeling:19
msgid "**occlusion_ratio** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_depth_peeling:13
msgid ""
"The threshold under which the depth peeling algorithm stops to iterate over "
"peel layers. This is the ratio of the number of pixels that have been "
"touched by the last layer over the total number of pixels of the viewport "
"area. Initial value is 0.0, meaning rendering has to be exact. Greater "
"values may speed up the rendering with small impact on the quality."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_depth_peeling:24
msgid "If depth peeling is supported."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_eye_dome_lighting:2
msgid "Enable eye dome lighting (EDL)."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_eye_dome_lighting:18
msgid ":obj:`vtk.vtkOpenGLRenderer`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_eye_dome_lighting:9
msgid "VTK renderer with eye dome lighting pass."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:3
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_hidden_line_removal:2
msgid "Enable hidden line removal."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_parallel_projection:4
msgid ""
"The camera will have a parallel projection. Parallel projection is often "
"useful when viewing images or 2D datasets."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_shadows:2
msgid "Enable shadows."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Renderer.rst:3
msgid "First, plot without shadows enabled (default)"
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Renderer.rst:29
msgid "Now, enable shadows."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_ssao:2
msgid "Enable surface space ambient occlusion (SSAO)."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_ssao:4
msgid ""
"SSAO can approximate shadows more efficiently than ray-tracing and produce "
"similar results. Use this when you wish to plot the occlusion effect that "
"nearby meshes have on each other by blocking nearby light sources."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_ssao:9
msgid ""
"See `Kitware: Screen-Space Ambient Occlusion "
"<https://www.kitware.com/ssao/>`_ for more details"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_ssao:15
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Circle:8
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cylinder:15
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:8
msgid "**radius** : :class:`python:float`, default: 0.5"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_ssao:15
msgid "Neighbor pixels considered when computing the occlusion."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_ssao:18
msgid "**bias** : :class:`python:float`, :obj:`default` 0.005"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_ssao:17
msgid "python:float, default 0.005"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_ssao:18
msgid "Tolerance factor used when comparing pixel depth."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_ssao:22
msgid "**kernel_size** : :class:`python:int`, default: 256"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_ssao:21
msgid ""
"Number of samples used. This controls the quality where a higher number "
"increases the quality at the expense of computation time."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_ssao:36
msgid ""
"**blur** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:True`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.enable_ssao:25
msgid ""
"Controls if occlusion buffer should be blurred before combining it with the "
"color buffer."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Renderer.rst:3
msgid ""
"Generate a :class:`pyvista.UnstructuredGrid` with many tetrahedrons nearby "
"each other and plot it without SSAO."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Renderer.rst:25
msgid "Enable SSAO with the default parameters."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.get_default_cam_pos:2
msgid "Return the default focal points and viewup."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.get_default_cam_pos:4
msgid "Uses ResetCamera to make a useful view."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.get_default_cam_pos:9
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArc:28
msgid ""
"**negative** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:False`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.get_default_cam_pos:9
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_xy:8
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_xz:8
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_yx:8
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_yz:8
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_zx:8
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_zy:8
msgid "View from the opposite direction."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.get_default_cam_pos:14
msgid "List of camera position:"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.get_default_cam_pos:16
msgid "Position"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.get_default_cam_pos:17
msgid "Focal point"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.get_default_cam_pos:18
msgid "View up"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.get_pick_position:2
msgid "Get the pick position/area as ``x0, y0, x1, y1``."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.get_pick_position:9
msgid "Pick position as ``x0, y0, x1, y1``."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.Renderer.has_border:2
msgid "Return if the renderer has a border."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.Renderer.height:2
msgid "Height of the renderer."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.hide_axes:2
msgid "Hide the axes orientation widget."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.isometric_view:2
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_isometric:2
msgid "Reset the camera to a default isometric view."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.isometric_view:4
msgid "DEPRECATED: Please use ``view_isometric``."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.Renderer.layer:2
msgid "Return or set the current layer of this renderer."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.Renderer.legend:2
msgid "Legend actor."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.Renderer.length:2
msgid "Return the length of the diagonal of the bounding box of the scene."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.Renderer.length:9
msgid "Length of the diagional of the bounding box."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.Renderer.lights:2
msgid "Return a list of all lights in the renderer."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.Renderer.lights:9
msgid "Lights in the renderer."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.Renderer.parallel_projection:2
msgid "Return parallel projection state of active render window."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.Renderer.parallel_scale:2
msgid "Return parallel scale of active render window."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_actor:2
msgid "Remove an actor from the Renderer."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_actor:12
msgid ""
"**actor** : :class:`python:str`, :obj:`vtk.vtkActor`, :class:`python:list` "
"or :class:`python:tuple`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_actor:11
msgid "python:str, vtk.vtkActor, python:list or python:tuple"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_actor:8
msgid ""
"If the type is ``str``, removes the previously added actor with the given "
"name. If the type is ``vtk.vtkActor``, removes the actor if it's previously "
"added to the Renderer. If ``list`` or ``tuple``, removes iteratively each "
"actor."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_actor:15
msgid "Resets camera so all actors can be seen."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_actor:18
msgid ""
"Render upon actor removal.  Set this to ``False`` to stop the render window "
"from rendering when an actor is removed."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_actor:24
msgid ""
"``True`` when actor removed.  ``False`` when actor has not been removed."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Renderer.rst:3
msgid "Add two meshes to a plotter and then remove the sphere actor."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_all_lights:2
msgid "Remove all lights from the renderer."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_blurring:2
msgid "Remove a single blurring pass."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_blurring:4
msgid ""
"You will need to run this multiple times to remove all blurring passes."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_bounding_box:2
msgid "Remove bounding box."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_bounding_box:8
msgid "Trigger a render once the bounding box is removed."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_bounds_axes:2
msgid "Remove bounds axes."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_chart:2
msgid "Remove a chart from this renderer."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_chart:18
msgid ""
"**chart_or_index** : :obj:`Chart2D`, :obj:`ChartBox`, :obj:`ChartPie`, "
":obj:`ChartMPL` or :class:`python:int`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_chart:17
msgid "Chart2D, ChartBox, ChartPie, ChartMPL or python:int"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_chart:8
msgid ""
"Either the chart to remove from this renderer or its index in the collection"
" of charts."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Renderer.rst:3
msgid "First define a function to add two charts to a renderer."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Renderer.rst:34
msgid "Now reconstruct the same plotter but remove the right chart by index."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Renderer.rst:54
msgid "Finally, remove the left chart by reference."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_environment_texture:2
msgid "Remove the environment texture."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_floors:2
msgid "Remove all floor actors."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_floors:8
msgid ""
"**clear_kwargs** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_floors:8
msgid "Clear default floor arguments.  Default ``True``."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_floors:11
msgid "Render upon removing the floor.  Default ``True``."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Renderer.rst:3
msgid "Add a floor below a sphere, remove it, and then plot it."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_legend:2
msgid "Remove the legend actor."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.remove_legend:8
msgid ""
"Render upon actor removal.  Set this to ``False`` to stop the render window "
"from rendering when a the legend is removed."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.reset_camera:2
msgid "Reset the camera of the active render window."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.reset_camera:4
msgid ""
"The camera slides along the vector defined from camera position to focal "
"point until all of the actors can be seen."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.reset_camera:10
msgid ""
"**render** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:True`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.reset_camera:10
msgid "Trigger a render after resetting the camera."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.reset_camera:24
msgid ""
"**bounds** : :term:`python:iterable`\\(:class:`python:int`), :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.reset_camera:23
msgid "python:iterable(python:int), optional"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.reset_camera:13
msgid ""
"Automatically set up the camera based on a specified bounding box ``(xmin, "
"xmax, ymin, ymax, zmin, zmax)``."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Renderer.rst:3
msgid ""
"Add a mesh and place the camera position too close to the mesh.  Then reset "
"the camera and show the mesh."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.reset_camera_clipping_range:4
msgid "This ensures that no props are cut off"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_background:2
msgid "Set the background color of this renderer."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_background:8
msgid ""
"Either a string, rgb list, or hex color string.  Defaults to theme default."
"  For example:"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_background:29
msgid "**top** : :obj:`color_like`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_background:17
msgid ""
"If given, this will enable a gradient background where the ``color`` "
"argument is at the bottom and the color given in ``top`` will be the color "
"at the top of the renderer."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Renderer.rst:3
msgid ""
"Set the background color to black with a gradient to white at the top of the"
" plot."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_environment_texture:2
msgid "Set the environment texture used for image based lighting."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_environment_texture:4
msgid ""
"This texture is supposed to represent the scene background. If it is not a "
"cubemap, the texture is supposed to represent an equirectangular projection."
" If used with raytracing backends, the texture must be an equirectangular "
"projection and must be constructed with a valid ``vtk.vtkImageData``."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_environment_texture:13
msgid "**texture** : :obj:`vtk.vtkTexture`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_environment_texture:12
msgid "vtk.vtkTexture"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_environment_texture:13
msgid "Texture."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_environment_texture:28
msgid ""
"**is_srgb** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_environment_texture:16
msgid ""
"If the texture is in sRGB color space, set the color flag on the texture or "
"set this parameter to ``True``. Textures are assumed to be in linear color "
"space by default."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Renderer.rst:3
msgid ""
"Add a skybox cubemap as an environment texture and show that the lighting "
"from the texture is mapped on to a sphere dataset. Note how even when "
"disabling the default lightkit, the scene lighting will still be mapped onto"
" the actor."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_focus:2
msgid "Set focus to a point."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_focus:18
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_position:8
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.is_inside_bounds:9
msgid "**point** : :term:`python:sequence`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_focus:8
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_position:8
msgid "Cartesian point to focus on in the form of ``[x, y, z]``."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_position:2
msgid "Set camera position to a point."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_position:22
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_viewup:22
msgid "**reset** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_position:11
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_viewup:11
msgid "Whether to reset the camera after setting the camera position."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Renderer.rst:3
msgid "Move the camera far away to ``[7, 7, 7]``."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_scale:2
msgid "Scale all the datasets in the scene."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_scale:4
msgid ""
"Scaling in performed independently on the X, Y and Z axis. A scale of zero "
"is illegal and will be replaced with one."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_scale:11
msgid "**xscale** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_scale:10
msgid ""
"Scaling in the x direction.  Default is ``None``, which does not change "
"existing scaling."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_scale:15
msgid "**yscale** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_scale:14
msgid ""
"Scaling in the y direction.  Default is ``None``, which does not change "
"existing scaling."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_scale:19
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBoy:14
msgid "**zscale** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_scale:18
msgid ""
"Scaling in the z direction.  Default is ``None``, which does not change "
"existing scaling."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_scale:22
msgid "Resets camera so all actors can be seen.  Default ``True``."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Renderer.rst:3
msgid ""
"Set the scale in the z direction to be 5 times that of nominal.  Leave the "
"other axes unscaled."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_viewup:2
msgid "Set camera viewup vector."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_viewup:8
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_vector:8
msgid "**vector** : :term:`python:sequence`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.set_viewup:8
msgid "New 3 value camera viewup vector."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Renderer.rst:3
msgid ""
"Look from the top down by setting view up to ``[0, 1, 0]``. Notice how the Y"
" axis appears vertical."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_axes:2
msgid "Show the axes orientation widget."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:2
msgid "Add bounds axes."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:4
msgid ""
"Shows the bounds of the most recent input mesh unless mesh is specified."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:10
msgid ""
"**mesh** : :obj:`pyvista.DataSet` or :obj:`pyvista.MultiBlock`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:10
msgid "Input mesh to draw bounds axes around."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:14
msgid ""
"**bounds** : :class:`python:list` or :class:`python:tuple`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:13
msgid ""
"Bounds to override mesh bounds in the form ``[xmin, xmax, ymin, ymax, zmin, "
"zmax]``."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:22
msgid ""
"**axes_ranges** : :class:`python:list`, :class:`python:tuple`, :obj:`or` "
":obj:`numpy.ndarray`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:21
msgid "python:list, python:tuple, or numpy.ndarray, optional"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:17
msgid ""
"When set, these values override the values that are shown on the axes. This "
"can be useful when plotting scaled datasets or if you wish to manually "
"display different values. These values must be in the form:"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:22
msgid "``[xmin, xmax, ymin, ymax, zmin, zmax]``."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:25
msgid ""
"**show_xaxis** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:25
msgid "Makes x axis visible.  Default ``True``."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:28
msgid ""
"**show_yaxis** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:28
msgid "Makes y axis visible.  Default ``True``."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:31
msgid ""
"**show_zaxis** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:31
msgid "Makes z axis visible.  Default ``True``."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:34
msgid ""
"**show_xlabels** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:34
msgid "Shows x labels.  Default ``True``."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:37
msgid ""
"**show_ylabels** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:37
msgid "Shows y labels.  Default ``True``."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:40
msgid ""
"**show_zlabels** : :ref:`bool <python:bltin-boolean-values>`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:40
msgid "Shows z labels.  Default ``True``."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:43
msgid "**bold** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:43
msgid "Bolds axis labels and numbers.  Default ``True``."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:46
msgid ""
"Sets the size of the label font. Defaults to "
":attr:`pyvista.global_theme.font.size <pyvista.themes._Font.size>`."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:53
msgid "**font_family** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:51
msgid ""
"Font family.  Must be either ``'courier'``, ``'times'``, or ``'arial'``. "
"Defaults to :attr:`pyvista.global_theme.font.family "
"<pyvista.themes._Font.family>`."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:56
msgid ""
"Color of all labels and axis titles.  Defaults to "
":attr:`pyvista.global_theme.font.color <pyvista.themes._Font.color>`."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:60
msgid "Either a string, RGB list, or hex color string.  For example:"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:69
msgid "Title of the x axis.  Default ``\"X Axis\"``."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:72
msgid "Title of the y axis.  Default ``\"Y Axis\"``."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:75
msgid "Title of the z axis.  Default ``\"Z Axis\"``."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:82
msgid ""
"**use_2d** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:78
msgid "This can be enabled for smoother plotting."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:81
msgid "A bug with vtk 6.3 in Windows seems to cause this function to crash."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:87
msgid ""
"**grid** : :ref:`bool <python:bltin-boolean-values>` or :class:`python:str`,"
" :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:85
msgid ""
"Add grid lines to the backface (``True``, ``'back'``, or ``'backface'``) or "
"to the frontface (``'front'``, ``'frontface'``) of the axes actor."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:94
msgid "**location** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:90
msgid ""
"Set how the axes are drawn: either static (``'all'``), closest triad "
"(``'front'``, ``'closest'``, ``'default'``), furthest triad (``'back'``, "
"``'furthest'``), static closest to the origin (``'origin'``), or outer edges"
" (``'outer'``) in relation to the camera position."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:98
msgid "**ticks** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:97
msgid ""
"Set how the ticks are drawn on the axes grid. Options include: ``'inside', "
"'outside', 'both'``."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:103
msgid ""
"**all_edges** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:101
msgid ""
"Adds an unlabeled and unticked box at the boundaries of plot. Useful for "
"when wanting to plot outer grids while still retaining all edges of the "
"boundary."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:106
msgid ""
"If ``all_edges``, this is the factor along each axis to draw the default "
"box. Default is 0.5 to show the full box."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.plot:16
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:111
msgid "**fmt** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:110
msgid ""
"A format string defining how tick labels are generated from tick positions. "
"A default is looked up on the active theme."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:114
msgid ""
"**minor_ticks** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:114
msgid "If ``True``, also plot minor ticks on all axes."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:117
msgid ""
"An optional percent padding along each axial direction to cushion the "
"datasets in the scene from the axes annotations. Defaults to 0 (no padding)."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:122
msgid ""
"If the render window is being shown, trigger a render after showing bounds."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:137
msgid ":obj:`vtk.vtkCubeAxesActor`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_bounds:128
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_grid:18
msgid "Bounds actor."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_grid:2
msgid "Show gridlines and axes labels."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_grid:4
msgid ""
"A wrapped implementation of ``show_bounds`` to change default behaviour to "
"use gridlines and showing the axes labels on the outer edges. This is "
"intended to be similar to ``matplotlib``'s ``grid`` function."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.show_grid:12
msgid "See :func:`Renderer.show_bounds` for additional keyword arguments."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.update_bounds_axes:2
msgid "Update the bounds axes of the render window."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_isometric:4
msgid "The view will show all the actors in the scene."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_isometric:19
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_xy:18
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_xz:18
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_yx:18
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_yz:18
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_zx:18
#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_zy:18
msgid ""
"**negative** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_isometric:9
msgid "View from the other isometric direction."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Renderer.rst:3
msgid "Isometric view."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Renderer.rst:24
msgid "Negative isometric view."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_vector:2
msgid "Point the camera in the direction of the given vector."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_vector:8
msgid "Three item sequence to point the camera in."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_vector:24
msgid "**viewup** : :term:`python:sequence`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_vector:11
msgid "Three item sequence describing the view up of the camera."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_xy:2
msgid "View the XY plane."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Renderer.rst:3
msgid "View the XY plane of a built-in mesh example."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_xz:2
msgid "View the XZ plane."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Renderer.rst:3
msgid "View the XZ plane of a built-in mesh example."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_yx:2
msgid "View the YX plane."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Renderer.rst:3
msgid "View the YX plane of a built-in mesh example."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_yz:2
msgid "View the YZ plane."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Renderer.rst:3
msgid "View the YZ plane of a built-in mesh example."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_zx:2
msgid "View the ZX plane."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Renderer.rst:3
msgid "View the ZX plane of a built-in mesh example."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.plotting.renderer.Renderer.view_zy:2
msgid "View the ZY plane."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Renderer.rst:3
msgid "View the ZY plane of a built-in mesh example."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.Renderer.viewport:2
msgid "Viewport of the renderer."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.Renderer.viewport:4
msgid ""
"Viewport describes the ``(xstart, ystart, xend, yend)`` square of the "
"renderer relative to the main renderer window."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.Renderer.viewport:7
msgid ""
"For example, a renderer taking up the entire window will have a viewport of "
"``(0.0, 0.0, 1.0, 1.0)``, while the viewport of a renderer on the left-hand "
"side of a horizontally split window would be ``(0.0, 0.0, 0.5, 1.0)``."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.Renderer.viewport:16
msgid "Viewport in the form ``(xstart, ystart, xend, yend)``."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.Renderer.rst:3
msgid "Show the viewport of a renderer taking up half the render window."
msgstr ""

#: ../../pyvista/pyvista/plotting/renderer.pydocstring of
#: pyvista.Renderer.width:2
msgid "Width of the renderer."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.create_axes_marker.rst:2
msgid "create\\_axes\\_marker"
msgstr ""

#: ../../pyvista/doc/api/plotting/conv_func.rst:15:<autosummary>:1
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:2
msgid "Create an axis actor."
msgstr ""

#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:8
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:50
msgid "**label_color** : :obj:`color_like`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:8
msgid "Color of the label text."
msgstr ""

#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:11
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:17
msgid "Color of the x axis text."
msgstr ""

#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:14
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:20
msgid "Color of the y axis text."
msgstr ""

#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:17
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:23
msgid "Color of the z axis text."
msgstr ""

#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:35
msgid "**cone_radius** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:35
msgid "The radius of the axes arrow tips."
msgstr ""

#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:38
msgid "**shaft_length** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:38
msgid "The length of the axes arrow shafts."
msgstr ""

#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:41
msgid "**tip_length** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:41
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:14
msgid "Length of the tip."
msgstr ""

#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:44
msgid "The ambient of the axes arrows. Value should be between 0 and 1."
msgstr ""

#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:48
msgid "**label_size** : :term:`python:sequence`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_marker:47
msgid ""
"The width and height of the axes label actors. Values should be between 0 "
"and 1. For example ``(0.2, 0.1)``."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.create_axes_marker.rst:3
msgid "Create the default axes marker."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.create_axes_marker.rst:25
msgid ""
"Create an axes marker at the origin with custom colors and axis labels."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.create_axes_orientation_box.rst:2
msgid "create\\_axes\\_orientation\\_box"
msgstr ""

#: ../../pyvista/doc/api/plotting/conv_func.rst:15:<autosummary>:1
#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:2
msgid "Create a Box axes orientation widget with labels."
msgstr ""

#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:11
msgid "**text_scale** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:11
msgid "Size of the text relative to the faces."
msgstr ""

#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:14
msgid "Color of the edges."
msgstr ""

#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:36
msgid "**x_face_color** : :obj:`color_like`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:40
msgid "**y_face_color** : :obj:`color_like`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:44
msgid "**z_face_color** : :obj:`color_like`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:47
msgid ""
"**color_box** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:47
msgid "Enable or disable the face colors.  Otherwise, box is white."
msgstr ""

#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:56
msgid "Opacity in the range of ``[0, 1]`` of the orientation box."
msgstr ""

#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:70
msgid ":obj:`vtk.vtkAnnotatedCubeActor`"
msgstr ""

#: ../../pyvista/pyvista/plotting/tools.pydocstring of
#: pyvista.plotting.tools.create_axes_orientation_box:61
msgid "Annotated cube actor."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.create_axes_orientation_box.rst:3
msgid "Create and plot an orientation box"
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.plot.rst:2
msgid "plot"
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.plot_arrows.rst:2
msgid "plot\\_arrows"
msgstr ""

#: ../../pyvista/doc/api/plotting/conv_func.rst:15:<autosummary>:1
#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot_arrows:2
msgid "Plot arrows as vectors."
msgstr ""

#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot_arrows:8
msgid "**cent** : :obj:`numpy.ndarray`"
msgstr ""

#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot_arrows:8
msgid "Accepts a single 3d point or array of 3d points."
msgstr ""

#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot_arrows:12
msgid "**direction** : :obj:`numpy.ndarray`"
msgstr ""

#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot_arrows:11
msgid ""
"Accepts a single 3d point or array of 3d vectors. Must contain the same "
"number of items as ``cent``."
msgstr ""

#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot_arrows:20
msgid "See the returns of :func:`pyvista.plot`."
msgstr ""

#: ../../pyvista/pyvista/plotting/helpers.pydocstring of
#: pyvista.plotting.helpers.plot_arrows:31
msgid ":func:`pyvista.plot`"
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.plot_arrows.rst:3
msgid "Plot a single random arrow."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.plot_arrows.rst:11
msgid "Plot 100 random arrows."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.set_plot_theme.rst:2
msgid "set\\_plot\\_theme"
msgstr ""

#: ../../pyvista/doc/api/plotting/conv_func.rst:15:<autosummary>:1
#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.set_plot_theme:2
msgid "Set the plotting parameters to a predefined theme using a string."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.set_plot_theme:19
msgid "**theme** : :class:`python:str`"
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.set_plot_theme:8
msgid ""
"Theme name.  Either ``'default'``, ``'document'``, ``'dark'``, or "
"``'paraview'``."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.set_plot_theme.rst:3
msgid "Set to the default theme."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.set_plot_theme.rst:8
msgid "Set to the document theme."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.set_plot_theme.rst:12
msgid "Set to the dark theme."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.set_plot_theme.rst:16
msgid "Set to the ParaView theme."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DarkTheme.rst:2
msgid "pyvista.themes.DarkTheme"
msgstr ""

#: ../../pyvista/doc/api/plotting/theme.rst:27:<autosummary>:1
#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.DarkTheme:2
msgid "Dark mode theme."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.DarkTheme:4
msgid "Black background, \"viridis\" colormap, tan meshes, white (hidden) edges."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DarkTheme.rst:3
msgid "Make the dark theme the global default."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DarkTheme.rst:9
#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DocumentTheme.rst:9
#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.ParaViewTheme.rst:9
msgid "Alternatively, set via a string."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:2
msgid "pyvista.themes.DefaultTheme"
msgstr ""

#: ../../pyvista/doc/api/plotting/theme.rst:27:<autosummary>:1
#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.DefaultTheme:2
msgid "PyVista default theme."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:3
msgid "Change the global default background color to white."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:8
msgid "Show edges by default."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:12
msgid "Create a new theme from the default theme and apply it globally."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.above_range_color:2
msgid "Return or set the default above range color."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:3
msgid "Set the above range color to red."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.anti_aliasing:2
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.antialiasing:2
msgid "Enable or disable anti-aliasing."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.anti_aliasing:4
msgid "Should be either ``\"ssaa\"``, ``\"msaa\"``, ``\"fxaa\"``, or ``None``."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:3
msgid "Use super-sampling anti-aliasing in the global theme."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:10
msgid "Disable anti-aliasing in the global theme."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:15
msgid ""
"See :ref:`anti_aliasing_example` for more information regarding anti-"
"aliasing."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.antialiasing:4
msgid ""
"Deprecated in favor of :attr:`anti_aliasing <DefaultTheme.anti_aliasing>`."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.auto_close:2
msgid "Automatically close the figures when finished plotting."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.auto_close:5
msgid "Set to ``False`` with extreme caution."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.axes:2
msgid "Return or set the default ``axes`` configuration."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:3
#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes._AxesConfig.rst:3
msgid "Set the x axis color to black."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:8
#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes._AxesConfig.rst:8
msgid "Show axes by default."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:12
#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes._AxesConfig.rst:12
msgid "Use the ``vtk.vtkCubeAxesActor``."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.background:2
msgid "Return or set the default background color of pyvista plots."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:3
msgid "Set the default global background of all plots to white."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.before_close_callback:2
msgid "Return the default before_close_callback function for Plotter."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.below_range_color:2
msgid "Return or set the default below range color."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:3
msgid "Set the below range color to blue."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.camera:2
msgid "Return or set the default camera position."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:3
msgid "Set both the position and view of the camera."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:9
msgid "Set the default position of the camera."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:13
msgid "Set the default view of the camera."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.cmap:2
msgid "Return or set the default colormap of pyvista."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.cmap:4
msgid ""
"See available Matplotlib colormaps.  Only applicable for when displaying "
"``scalars``. Requires Matplotlib to be installed. If ``colorcet`` or "
"``cmocean`` are installed, their colormaps can be specified by name."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.cmap:9
msgid ""
"You can also specify a list of colors to override an existing colormap with "
"a custom one.  For example, to create a three color colormap you might "
"specify ``['green', 'red', 'blue']``"
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:3
msgid "Set the default global colormap to 'jet'."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.color:2
msgid "Return or set the default color of meshes in pyvista."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.color:4
msgid "Used for meshes without ``scalars``."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.color:6
msgid ""
"When setting, the value must be either a string, rgb list, or hex color "
"string.  For example:"
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:3
msgid "Set the default mesh color to 'red'."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.colorbar_horizontal:2
msgid "Return or set the default parameters of a horizontal colorbar."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:3
msgid "Set the default horizontal colorbar width to 0.6."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:8
msgid "Set the default horizontal colorbar height to 0.2."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.colorbar_orientation:2
msgid "Return or set the default colorbar orientation."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.colorbar_orientation:4
msgid "Must be either ``'vertical'`` or ``'horizontal'``."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.colorbar_vertical:2
msgid "Return or set the default parameters of a vertical colorbar."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:3
msgid "Set the default colorbar width to 0.45."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:8
msgid "Set the default colorbar height to 0.8."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.depth_peeling:2
msgid "Return or set the default depth peeling parameters."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:3
msgid ""
"Set the global depth_peeling parameter default to be enabled with 8 peels."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.edge_color:2
msgid "Return or set the default edge color."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:3
msgid "Set the global edge color to 'blue'."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.enable_camera_orientation_widget:2
msgid "Enable the camera orientation widget in all plotters."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.floor_color:2
msgid "Return or set the default floor color."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.font:2
msgid "Return or set the default font size, family, and/or color."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:3
#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes._Font.rst:3
msgid ""
"Set the default font family to 'arial'.  Must be either 'arial', 'courier', "
"or 'times'."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:9
#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes._Font.rst:9
msgid "Set the default font size to 20."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:13
msgid "Set the default title size to 40."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:17
msgid "Set the default label size to 10."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:21
msgid "Set the default text color to 'grey'."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:25
msgid "String formatter used to format numerical data to '%.6e'."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.full_screen:2
msgid "Return if figures are shown in full screen."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:3
msgid "Set windows to be full screen by default."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.hidden_line_removal:2
msgid "Return or set hidden line removal."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.hidden_line_removal:4
msgid ""
"Wireframe geometry will be drawn using hidden line removal if the rendering "
"engine supports it."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.hidden_line_removal:18
msgid ":obj:`pyvista.BasePlotter.enable_hidden_line_removal`"
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.interactive:2
msgid "Return or set the default ``interactive`` parameter."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:3
msgid "Make all plots non-interactive globally."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.jupyter_backend:2
msgid "Return or set the jupyter notebook plotting backend."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.jupyter_backend:4
msgid "Jupyter backend to use when plotting.  Must be one of the following:"
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.jupyter_backend:7
msgid ""
"``'ipyvtklink'`` : Render remotely and stream the resulting VTK images back "
"to the client.  Supports all VTK methods, but suffers from lag due to remote"
" rendering. Requires that a virtual framebuffer be set up when displaying on"
" a headless server.  Must have ``ipyvtklink`` installed."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.jupyter_backend:13
msgid ""
"``'panel'`` : Convert the VTK render window to a vtkjs object and then "
"visualize that within jupyterlab. Supports most VTK objects.  Requires that "
"a virtual framebuffer be set up when displaying on a headless server.  Must "
"have ``panel`` installed."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.jupyter_backend:19
msgid ""
"``'ipygany'`` : Convert all the meshes into ``ipygany`` meshes and streams "
"those to be rendered on the client side. Supports VTK meshes, but few "
"others.  Aside from ``none``, this is the only method that does not require "
"a virtual framebuffer.  Must have ``ipygany`` installed."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.jupyter_backend:25
msgid ""
"``'pythreejs'`` : Convert all the meshes into ``pythreejs`` meshes and "
"streams those to be rendered on the client side. Aside from ``ipygany``, "
"this is the only method that does not require a virtual framebuffer.  Must "
"have ``pythreejs`` installed."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.jupyter_backend:31
msgid ""
"``'static'`` : Display a single static image within the JupyterLab "
"environment.  Still requires that a virtual framebuffer be set up when "
"displaying on a headless server, but does not require any additional modules"
" to be installed."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.jupyter_backend:36
msgid ""
"``'none'`` : Do not display any plots within jupyterlab, instead display "
"using dedicated VTK render windows.  This will generate nothing on headless "
"servers even with a virtual framebuffer."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:3
msgid "Enable the pythreejs backend."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:8
msgid "Enable the ipygany backend."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:13
msgid "Enable the panel backend."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:17
msgid "Enable the ipyvtklink backend."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:21
msgid "Just show static images."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:25
msgid ""
"Disable all plotting within JupyterLab and display using a standard desktop "
"VTK render window."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.lighting:2
msgid "Return or set the default ``lighting``."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:3
msgid "Disable lighting globally."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.load_theme:2
msgid "Overwrite the current theme with a theme."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.load_theme:18
msgid "**theme** : :obj:`pyvista.DefaultTheme`"
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.load_theme:17
msgid "pyvista.DefaultTheme"
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.load_theme:8
msgid "Theme to use to overwrite this theme."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:3
msgid ""
"Create a custom theme from the default theme and load it into the global "
"theme of pyvista."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:17
msgid "Create a custom theme from the dark theme and load it into pyvista."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.multi_rendering_splitting_position:2
msgid ""
"Return or set the default ``multi_rendering_splitting_position`` parameter."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:3
msgid ""
"Set multi_rendering_splitting_position globally to 0.5 (the middle of the "
"window)."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.multi_samples:2
msgid "Return or set the default ``multi_samples`` parameter."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.multi_samples:4
msgid ""
"Set the number of multisamples to used with hardware anti_aliasing. This is "
"only used when :attr:`anti_aliasing <DefaultTheme.anti_aliasing>` is set to "
"``\"msaa\"``."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:3
msgid "Set the default number of multisamples to 2 and enable ``\"msaa\"``"
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.name:2
msgid "Return or set the name of the theme."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.nan_color:2
msgid "Return or set the default NaN color."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.nan_color:4
msgid "This color is used to plot all NaN values."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.notebook:2
msgid "Return or set the state of notebook plotting."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.notebook:4
msgid ""
"Setting this to ``True`` always enables notebook plotting, while setting it "
"to ``False`` disables plotting even when plotting within a jupyter notebook "
"and plots externally."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:3
msgid "Disable all jupyter notebook plotting."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.outline_color:2
msgid "Return or set the default outline color."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.render_points_as_spheres:2
msgid "Return or set the default ``render_points_as_spheres`` parameter."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:3
msgid "Render points as spheres by default globally."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.restore_defaults:2
msgid "Restore the theme defaults."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.return_cpos:2
msgid "Return or set the default behavior of returning the camera position."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:3
msgid "Disable returning camera position by ``show`` and ``plot`` methods."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.save:2
msgid "Serialize this theme to a json file."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.save:4
msgid "``before_close_callback`` is non-serializable and is omitted."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.save:9
msgid "Path to save the theme to.  Should end in ``'.json'``."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:3
msgid "Export and then load back in a theme."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.sharp_edges_feature_angle:2
msgid "Set or return the angle of the sharp edges feature angle."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.sharp_edges_feature_angle:4
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.split_sharp_edges:4
msgid "See :ref:`shading_example` for an example showing split sharp edges."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:3
msgid "Change the sharp edges feature angle to 45 degrees."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.show_edges:2
msgid "Return or set the default edge visibility."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:3
msgid "Show edges globally by default."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.show_scalar_bar:2
msgid "Return or set the default color bar visibility."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:3
msgid "Show the scalar bar by default when scalars are available."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.silhouette:2
msgid "Return or set the default ``silhouette`` configuration."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:3
msgid "Set parameters of the silhouette."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.slider_styles:2
msgid "Return the default slider style configurations."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.smooth_shading:2
msgid "Return or set the default ``smooth_shading`` parameter."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:3
msgid "Set the global smooth_shading parameter default to ``True``."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.split_sharp_edges:2
msgid "Set or return splitting sharp edges."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:3
msgid "Enable the splitting of sharp edges globally."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:10
msgid "Disable the splitting of sharp edges globally."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.title:2
msgid "Return or set the default ``title`` parameter."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.title:4
msgid "This is the VTK render window title."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:3
msgid "Set title globally to 'plot'."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.transparent_background:2
msgid "Return or set the default ``transparent_background`` parameter."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:3
msgid "Set transparent_background globally to ``True``."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.use_ipyvtk:2
msgid "Set or return the usage of \"ipyvtk\" as a jupyter backend."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.use_ipyvtk:4
msgid "Deprecated in favor of ``jupyter_backend``."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.volume_mapper:2
msgid "Return or set the default ``volume_mapper`` parameter."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.volume_mapper:4
msgid ""
"Must be one of the following strings, which are mapped to the following VTK "
"volume mappers."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.volume_mapper:7
msgid "``'fixed_point'`` : ``vtk.vtkFixedPointVolumeRayCastMapper``"
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.volume_mapper:8
msgid "``'gpu'`` : ``vtk.vtkGPUVolumeRayCastMapper``"
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.volume_mapper:9
msgid "``'open_gl'`` : ``vtk.vtkOpenGLGPUVolumeRayCastMapper``"
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.volume_mapper:10
msgid "``'smart'`` : ``vtk.vtkSmartVolumeMapper``"
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:3
msgid "Set default volume mapper globally to 'gpu'."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes.DefaultTheme.window_size:2
msgid "Return or set the default render window size."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DefaultTheme.rst:3
msgid "Set window size to ``[400, 400]``."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DocumentTheme.rst:2
msgid "pyvista.themes.DocumentTheme"
msgstr ""

#: ../../pyvista/doc/api/plotting/theme.rst:27:<autosummary>:1
#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.DocumentTheme:2
msgid "A document theme well suited for papers and presentations."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.DocumentTheme:4
msgid "This theme uses:"
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.DocumentTheme:6
msgid "A white background"
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.DocumentTheme:7
msgid "Black fonts"
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.DocumentTheme:8
msgid "The \"viridis\" colormap"
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.DocumentTheme:9
msgid "disables edges for surface plots"
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.DocumentTheme:10
msgid "Hidden edge removal"
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.DocumentTheme:12
msgid "Best used for presentations, papers, etc."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.DocumentTheme.rst:3
msgid "Make the document theme the global default."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.ParaViewTheme.rst:2
msgid "pyvista.themes.ParaViewTheme"
msgstr ""

#: ../../pyvista/doc/api/plotting/theme.rst:27:<autosummary>:1
#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes.ParaViewTheme:2
msgid "A paraview-like theme."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes.ParaViewTheme.rst:3
msgid "Make the paraview-like theme the global default."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes._AxesConfig.rst:2
msgid "pyvista.themes.\\_AxesConfig"
msgstr ""

#: ../../pyvista/doc/api/plotting/theme.rst:27:<autosummary>:1
#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes._AxesConfig:2
msgid "PyVista axes configuration."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._AxesConfig.box:2
msgid ""
"Use the ``vtk.vtkCubeAxesActor`` instead of the default "
"``vtk.vtkAxesActor``."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._AxesConfig.show:2
msgid "Show or hide the axes actor."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes._AxesConfig.rst:3
msgid "Hide the axes by default."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._AxesConfig.x_color:2
msgid "Return or set x axis color."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._AxesConfig.y_color:2
msgid "Return or set y axis color."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._AxesConfig.z_color:2
msgid "Return or set z axis color."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes._ColorbarConfig.rst:2
msgid "pyvista.themes.\\_ColorbarConfig"
msgstr ""

#: ../../pyvista/doc/api/plotting/theme.rst:27:<autosummary>:1
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._ColorbarConfig:2
msgid "PyVista colorbar configuration."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes._ColorbarConfig.rst:3
msgid "Set the colorbar width."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._ColorbarConfig.height:2
msgid "Return or set colorbar height."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._ColorbarConfig.position_x:2
msgid "Return or set colorbar x position."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._ColorbarConfig.position_y:2
msgid "Return or set colorbar y position."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._ColorbarConfig.width:2
msgid "Return or set colorbar width."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes._DepthPeelingConfig.rst:2
msgid "pyvista.themes.\\_DepthPeelingConfig"
msgstr ""

#: ../../pyvista/doc/api/plotting/theme.rst:27:<autosummary>:1
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._DepthPeelingConfig:2
msgid "PyVista depth peeling configuration."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes._DepthPeelingConfig.rst:3
msgid "Set global depth peeling parameters."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._DepthPeelingConfig.enabled:2
msgid "Return or set if depth peeling is enabled."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._DepthPeelingConfig.number_of_peels:2
msgid "Return or set the number of peels in depth peeling."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._DepthPeelingConfig.occlusion_ratio:2
msgid "Return or set the occlusion ratio in depth peeling."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes._Font.rst:2
msgid "pyvista.themes.\\_Font"
msgstr ""

#: ../../pyvista/doc/api/plotting/theme.rst:27:<autosummary>:1
#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes._Font:2
msgid "PyVista plotter font configuration."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes._Font.rst:13
msgid "Set the default title size to 40"
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes._Font.rst:17
msgid "Set the default label size to 10"
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes._Font.rst:21
msgid "Set the default text color to 'grey'"
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes._Font.rst:25
msgid "Set the string formatter used to format numerical data to '%.6e'"
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes._Font.color:2
msgid "Return or set the font color."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes._Font.family:2
msgid "Return or set the font family."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes._Font.family:4
msgid "Must be one of the following:"
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes._Font.family:6
msgid "``\"arial\"``"
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes._Font.family:7
msgid "``\"courier\"``"
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes._Font.family:8
msgid "``\"times\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes._Font.rst:3
msgid "Set the default global font family to 'courier'."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes._Font.fmt:2
msgid "Return or set the string formatter used to format numerical data."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes._Font.rst:3
msgid "Set the string formatter used to format numerical data to '%.6e'."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._Font.label_size:2
msgid "Return or set the label size."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._Font.label_size:4
msgid "If ``None``, then VTK uses ``UnconstrainedFontSizeOn`` for labels."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes._Font.size:2
msgid "Return or set the font size."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._Font.title_size:2
msgid "Return or set the title size."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._Font.title_size:4
msgid "If ``None``, then VTK uses ``UnconstrainedFontSizeOn`` for titles."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes._SilhouetteConfig.rst:2
msgid "pyvista.themes.\\_SilhouetteConfig"
msgstr ""

#: ../../pyvista/doc/api/plotting/theme.rst:27:<autosummary>:1
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._SilhouetteConfig:2
msgid "PyVista silhouette configuration."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes._SilhouetteConfig.rst:3
msgid "Set global silhouette parameters."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._SilhouetteConfig.color:2
msgid "Return or set the silhouette color."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._SilhouetteConfig.decimate:2
msgid "Return or set the amount to decimate the silhouette."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._SilhouetteConfig.decimate:4
msgid "Parameter must be between 0 and 1."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._SilhouetteConfig.feature_angle:2
msgid "Return or set the silhouette feature angle."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._SilhouetteConfig.line_width:2
msgid "Return or set the silhouette line width."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._SilhouetteConfig.opacity:2
msgid "Return or set the silhouette opacity."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes._SliderConfig.rst:2
msgid "pyvista.themes.\\_SliderConfig"
msgstr ""

#: ../../pyvista/doc/api/plotting/theme.rst:27:<autosummary>:1
#: ../../pyvista/pyvista/themes.pydocstring of pyvista.themes._SliderConfig:2
msgid "PyVista configuration encompassing all slider styles."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes._SliderConfig.rst:3
msgid "Set the classic slider configuration."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes._SliderConfig.rst:15
msgid "Set the modern slider configuration."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._SliderConfig.classic:2
msgid "Return the Classic slider configuration."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._SliderConfig.modern:2
msgid "Return the Modern slider configuration."
msgstr ""

#: ../../pyvista/doc/api/plotting/_autosummary/pyvista.themes._SliderStyleConfig.rst:2
msgid "pyvista.themes.\\_SliderStyleConfig"
msgstr ""

#: ../../pyvista/doc/api/plotting/theme.rst:27:<autosummary>:1
#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._SliderStyleConfig:2
msgid "PyVista configuration for a single slider style."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._SliderStyleConfig.cap_length:2
msgid "Return or set the cap length."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._SliderStyleConfig.cap_opacity:2
msgid "Return or set the cap opacity."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._SliderStyleConfig.cap_width:2
msgid "Return or set the cap width."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._SliderStyleConfig.name:2
msgid "Return the name of the slider style configuration."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._SliderStyleConfig.slider_color:2
msgid "Return or set the slider color."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._SliderStyleConfig.slider_length:2
msgid "Return or set the slider_length."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._SliderStyleConfig.slider_width:2
msgid "Return or set the slider width."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._SliderStyleConfig.tube_color:2
msgid "Return or set the tube color."
msgstr ""

#: ../../pyvista/pyvista/themes.pydocstring of
#: pyvista.themes._SliderStyleConfig.tube_width:2
msgid "Return or set the tube_width."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.Chart2D.rst:2
msgid "pyvista.Chart2D"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/index.rst:18:<autosummary>:1
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D:2
msgid "2D chart class similar to a ``matplotlib`` figure."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D:10
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ChartMPL:13
msgid ""
"**size** : :class:`python:list` or :class:`python:tuple`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D:8
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ChartMPL:11
msgid ""
"Size of the chart in normalized coordinates. A size of ``(0, 0)`` is "
"invisible, a size of ``(1, 1)`` occupies the whole renderer's width and "
"height."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D:16
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ChartMPL:29
msgid ""
"**loc** : :class:`python:list` or :class:`python:tuple`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D:13
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ChartMPL:16
msgid ""
"Location of the chart (its bottom left corner) in normalized coordinates. A "
"location of ``(0, 0)`` corresponds to the renderer's bottom left corner, a "
"location of ``(1, 1)`` corresponds to the renderer's top right corner."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D:19
msgid "**x_label** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D:19
msgid "Label along the x-axis.  Defaults to ``'x'``."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D:22
msgid "**y_label** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D:22
msgid "Label along the y-axis.  Defaults to ``'y'``."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis:22
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D:35
msgid "**grid** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D:25
msgid "Show the background grid in the plot.  Default ``True``."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.Chart2D.rst:3
msgid "Plot a simple sine wave as a scatter and line plot."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.Chart2D.rst:28
msgid "Combine multiple types of plots in the same chart."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.area:2
msgid "Add an area plot to this chart."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot:9
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot.update:8
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot:10
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.update:8
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.area:8
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.bar:10
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.line:8
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.plot:9
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.scatter:8
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.stack:8
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D:9
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D.update:8
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D:9
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D.update:8
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot:9
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.update:8
msgid "**x** : :term:`numpy:array_like`"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot:8
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot:11
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot.update:7
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot.update:10
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot:9
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot:12
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.update:7
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.update:20
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.area:7
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.area:10
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.bar:9
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.bar:13
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.line:7
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.line:10
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.plot:8
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.scatter:7
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.scatter:10
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.stack:7
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ChartPie:7
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D:8
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D:11
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D.update:7
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D.update:20
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot:9
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot.update:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D:8
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D:11
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D.update:7
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D.update:20
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot:8
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.update:7
msgid "numpy:array_like"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot:9
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.area:8
msgid "X coordinates of the points outlining the area to draw."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot:12
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot.update:11
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.area:11
msgid "**y1** : :term:`numpy:array_like`"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot:12
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.area:11
msgid "Y coordinates of the points on the first outline of the area to draw."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot:15
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot.update:24
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.area:15
msgid "**y2** : :term:`numpy:array_like`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot:14
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot.update:23
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.area:14
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.plot:11
msgid "numpy:array_like, optional"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot:15
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.area:14
msgid ""
"Y coordinates of the points on the second outline of the area to draw. "
"Defaults to a sequence of zeros."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.area:18
msgid ""
"Color of the area drawn in this plot. Any color parsable by "
":class:`pyvista.Color` is allowed. Defaults to ``\"b\"``."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot:32
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis:8
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot:34
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.area:23
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.bar:27
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.line:27
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.scatter:27
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D:36
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D:34
msgid "**label** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot:22
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot:24
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.area:23
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.bar:27
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.line:27
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.scatter:27
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D:26
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D:26
msgid "Label of this plot, as shown in the chart's legend. Defaults to ``\"\"``."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.area:37
msgid ":obj:`plotting.charts.AreaPlot`"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.area:28
msgid "The created area plot."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.Chart2D.rst:3
msgid "Generate an area plot."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.Chart2D.background_color:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartBox.background_color:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartMPL.background_color:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartPie.background_color:2
msgid "Return or set the chart's background color."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.Chart2D.rst:3
msgid "Create a 2D chart with a green background."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.Chart2D.background_texture:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartBox.background_texture:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartMPL.background_texture:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartPie.background_texture:2
msgid "Return or set the chart's background texture."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.Chart2D.rst:3
msgid "Create a 2D chart with an emoji as its background."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.bar:2
msgid "Add a bar plot to this chart."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot:9
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.bar:8
msgid ""
"Positions (along the x-axis for a vertical orientation, along the y-axis for"
" a horizontal orientation) of the bars to draw."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot:13
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.update:21
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.bar:14
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.line:11
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.scatter:11
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D:12
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D.update:21
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D:12
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D.update:21
msgid "**y** : :term:`numpy:array_like`"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot:13
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.bar:13
msgid ""
"Size of the bars to draw. Multiple bars can be stacked by passing a sequence"
" of sequences."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot:16
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.bar:17
msgid ""
"Color of the bars drawn in this plot. Any color parsable by "
":class:`pyvista.Color` is allowed. Defaults to ``\"b\"``."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot:21
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.bar:24
msgid "**orientation** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot:20
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.bar:22
msgid ""
"Orientation of the bars drawn in this plot. Either ``\"H\"`` for an "
"horizontal orientation or ``\"V\"`` for a vertical orientation. Defaults to "
"``\"V\"``."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.bar:41
msgid ":obj:`plotting.charts.BarPlot`"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.bar:32
msgid "The created bar plot."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.Chart2D.rst:3
msgid "Generate a bar plot."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.Chart2D.border_color:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartBox.border_color:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartMPL.border_color:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartPie.border_color:2
msgid "Return or set the chart's border color."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.Chart2D.rst:3
msgid "Create a 2D chart with a thick, dashed red border."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.Chart2D.border_style:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartBox.border_style:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartMPL.border_style:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartPie.border_style:2
msgid "Return or set the chart's border style."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.Chart2D.border_width:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartBox.border_width:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartMPL.border_width:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartPie.border_width:2
msgid "Return or set the chart's border width."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.clear:2
msgid "Remove all plots of the specified type from this chart."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.clear:22
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.plots:13
msgid "**plot_type** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.clear:8
msgid ""
"The type of the plots to remove. Allowed types are ``\"scatter\"``, "
"``\"line\"``, ``\"area\"``, ``\"bar\"`` and ``\"stack\"``. Defaults to "
"``None``, which will remove all plots, regardless of their type."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.Chart2D.rst:3
msgid "Create a 2D chart with multiple line and scatter plot."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.Chart2D.rst:41
msgid "Remove all scatter plots from the chart."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of pyvista.Chart2D.grid:2
msgid "Enable or disable the chart grid."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.Chart2D.rst:3
msgid "Create a 2D chart with the grid disabled."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.Chart2D.rst:28
msgid "Enable the grid"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.hide_axes:2
msgid "Hide the x- and y-axis of this chart."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.hide_axes:4
msgid "This includes all labels, ticks and the grid."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.Chart2D.rst:3
msgid "Create a 2D plot and hide the axes."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.Chart2D.legend_visible:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartBox.legend_visible:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartMPL.legend_visible:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartPie.legend_visible:2
msgid "Return or set the visibility of the chart's legend."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.Chart2D.rst:3
msgid "Create a 2D chart with custom labels."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.Chart2D.rst:25
#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.ChartBox.rst:24
#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.ChartMPL.rst:38
#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.ChartPie.rst:24
msgid "Hide the legend."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.line:2
msgid "Add a line plot to this chart."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.line:8
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D:9
msgid "X coordinates of the points through which a line should be drawn."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.line:11
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D:12
msgid "Y coordinates of the points through which a line should be drawn."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.line:14
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D:15
msgid ""
"Color of the line drawn in this plot. Any color parsable by "
":class:`pyvista.Color` is allowed. Defaults to ``\"b\"``."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.line:19
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D:19
msgid "Width of the line drawn in this plot. Defaults to ``1``."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.line:22
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D:22
msgid ""
"Style of the line drawn in this plot. See :ref:`Pen.LINE_STYLES "
"<pen_line_styles>` for a list of allowed line styles. Defaults to ``\"-\"``."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.line:41
msgid ":obj:`plotting.charts.LinePlot2D`"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.line:32
msgid "The created line plot."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.Chart2D.rst:3
msgid "Generate a line plot."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of pyvista.Chart2D.loc:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of pyvista.ChartBox.loc:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of pyvista.ChartMPL.loc:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of pyvista.ChartPie.loc:2
msgid "Return or set the chart position in normalized coordinates."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of pyvista.Chart2D.loc:4
#: ../../pyvista/pyvista/plotting/charts.pydocstring of pyvista.ChartBox.loc:4
#: ../../pyvista/pyvista/plotting/charts.pydocstring of pyvista.ChartMPL.loc:4
#: ../../pyvista/pyvista/plotting/charts.pydocstring of pyvista.ChartPie.loc:4
msgid "This denotes the location of the chart's bottom left corner."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.Chart2D.rst:3
msgid "Create a half-sized 2D chart centered in the middle of the renderer."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.plot:2
msgid "Matplotlib like plot method."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.plot:8
msgid ""
"Values to plot on the X-axis. In case ``y`` is ``None``, these are the "
"values to plot on the Y-axis instead."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.plot:12
msgid "**y** : :term:`numpy:array_like`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.plot:12
msgid "Values to plot on the Y-axis."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.plot:15
msgid ""
"A format string, e.g. ``'ro'`` for red circles. See the Notes section for a "
"full description of the format strings."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.plot:22
msgid ""
"**scatter_plot** : :obj:`plotting.charts.ScatterPlot2D`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.plot:21
msgid "plotting.charts.ScatterPlot2D, optional"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.plot:21
msgid ""
"The created scatter plot when a valid marker style was present in the format"
" string, ``None`` otherwise."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.plot:33
msgid "**line_plot** : :obj:`plotting.charts.LinePlot2D`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.plot:32
msgid "plotting.charts.LinePlot2D, optional"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.plot:25
msgid ""
"The created line plot when a valid line style was present in the format "
"string, ``None`` otherwise."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.plot:37
msgid ""
"This plot method shares many of the same plotting features as the "
"`matplotlib.pyplot.plot "
"<https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html>`_. "
"Please reference the documentation there for a full description of the "
"allowable format strings."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.Chart2D.rst:32
msgid "Generate a line and scatter plot."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.plots:2
msgid "Return all plots of the specified type in this chart."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.plots:8
msgid ""
"The type of plots to return. Allowed types are ``\"scatter\"``, "
"``\"line\"``, ``\"area\"``, ``\"bar\"`` and ``\"stack\"``. Defaults to "
"``None``, which will return all plots, regardless of their type."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.plots:0
msgid "Yields"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.plots:26
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.remove_plot:18
msgid ""
"**plot** : :obj:`plotting.charts.ScatterPlot2D`, "
":obj:`plotting.charts.LinePlot2D`, :obj:`plotting.charts.AreaPlot`, "
":obj:`plotting.charts.BarPlot` or :obj:`plotting.charts.StackPlot`"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.plots:25
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.remove_plot:17
msgid ""
"plotting.charts.ScatterPlot2D, plotting.charts.LinePlot2D, "
"plotting.charts.AreaPlot, plotting.charts.BarPlot or "
"plotting.charts.StackPlot"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.plots:18
msgid "One of the plots (of the specified type) in this chart."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.Chart2D.rst:3
msgid "Create a 2D chart with a line and scatter plot."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.Chart2D.rst:32
msgid "Retrieve all plots in the chart."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.Chart2D.rst:38
msgid "Retrieve all line plots in the chart."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.remove_plot:2
msgid "Remove the given plot from this chart."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.remove_plot:8
msgid "The plot to remove."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.Chart2D.rst:32
msgid "Remove the scatter plot from the chart."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.scatter:2
msgid "Add a scatter plot to this chart."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.scatter:8
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D:9
msgid "X coordinates of the points to draw."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.scatter:11
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D:12
msgid "Y coordinates of the points to draw."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.scatter:14
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D:15
msgid ""
"Color of the points drawn in this plot. Any color parsable by "
":class:`pyvista.Color` is allowed. Defaults to ``\"b\"``."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.scatter:19
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D:19
msgid "**size** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.scatter:19
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D:19
msgid "Size of the point markers drawn in this plot. Defaults to ``10``."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.scatter:22
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D:22
msgid ""
"Style of the point markers drawn in this plot. See "
":ref:`ScatterPlot2D.MARKER_STYLES <scatter_marker_styles>` for a list of "
"allowed marker styles. Defaults to ``\"o\"``."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.scatter:41
msgid ":obj:`plotting.charts.ScatterPlot2D`"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.scatter:32
msgid "The created scatter plot."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.Chart2D.rst:3
msgid "Generate a scatter plot."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts._Chart.show:2
msgid "Show this chart in a self contained plotter."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts._Chart.show:8
msgid ""
"Plots off screen when ``True``.  Helpful for saving screenshots without a "
"window popping up.  Defaults to active theme setting in "
":attr:`pyvista.global_theme.full_screen "
"<pyvista.themes.DefaultTheme.full_screen>`."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts._Chart.show:37
msgid ""
"Use to make the entire mesh have a single solid color. Either a string, RGB "
"list, or hex color string.  For example: ``color='white'``, ``color='w'``, "
"``color=[1.0, 1.0, 1.0]``, or ``color='#FFFFFF'``.  Defaults to ``'w'``."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts._Chart.show:43
msgid "**dev_kwargs** : :class:`python:dict`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts._Chart.show:43
msgid "Optional developer keyword arguments."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts._Chart.show:63
msgid ":obj:`np.ndarray <numpy.ndarray>`"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts._Chart.show:48
msgid ""
"Numpy array of the last image when ``screenshot=True`` is set. Optionally "
"contains alpha values. Sized:"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.Chart2D.rst:3
msgid "Create a simple 2D chart and show it."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of pyvista.Chart2D.size:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartBox.size:2 ../../pyvista/pyvista/plotting/charts.pydocstring
#: of pyvista.ChartMPL.size:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartPie.size:2
msgid "Return or set the chart size in normalized coordinates."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of pyvista.Chart2D.size:4
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartBox.size:4 ../../pyvista/pyvista/plotting/charts.pydocstring
#: of pyvista.ChartMPL.size:4
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartPie.size:4
msgid "A size of ``(1, 1)`` occupies the whole renderer."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.stack:2
msgid "Add a stack plot to this chart."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.stack:8
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot:9
msgid "X coordinates of the points outlining the stacks (areas) to draw."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.stack:13
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot:14
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.update:21
msgid ""
"**ys** : :class:`python:list` or :class:`python:tuple` :obj:`of` "
":term:`numpy:array_like`"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot:10
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.update:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.stack:12
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ChartBox:8
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot:13
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.update:20
msgid "python:list or python:tuple of numpy:array_like"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.stack:11
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot:12
msgid ""
"Size of the stacks (areas) to draw at the corresponding X coordinates. Each "
"sequence defines the sizes of one stack (area), which are stacked on top of "
"each other."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot:15
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.stack:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ChartBox:13
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ChartPie:12
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot:14
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot:19
msgid ""
"**colors** : :class:`python:list` or :class:`python:tuple` :obj:`of` "
":obj:`color_like`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot:14
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.stack:17
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ChartBox:12
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ChartPie:11
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot:13
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot:18
msgid "python:list or python:tuple of color_like, optional"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.stack:16
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot:17
msgid ""
"Color of the stacks (areas) drawn in this plot. Any color parsable by "
":class:`pyvista.Color` is allowed.  Defaults to ``None``."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot:29
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.stack:22
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ChartBox:27
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ChartPie:26
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot:21
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot:33
msgid ""
"**labels** : :class:`python:list` or :class:`python:tuple` :obj:`of` "
":class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot:28
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.stack:21
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ChartBox:26
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ChartPie:25
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot:20
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot:32
msgid "python:list or python:tuple of python:str, optional"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.stack:21
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot:22
msgid ""
"Label for each stack (area) drawn in this plot, as shown in the chart's "
"legend. Defaults to ``[]``."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.stack:36
msgid ":obj:`plotting.charts.StackPlot`"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Chart2D.stack:27
msgid "The created stack plot."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.Chart2D.rst:3
msgid "Generate a stack plot."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.Chart2D.title:2 ../../pyvista/pyvista/plotting/charts.pydocstring
#: of pyvista.ChartBox.title:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartMPL.title:2 ../../pyvista/pyvista/plotting/charts.pydocstring
#: of pyvista.ChartPie.title:2
msgid "Return or set the chart's title."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.Chart2D.rst:3
msgid "Create a 2D chart with title 'My Chart'."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts._Chart.toggle:2
msgid "Toggle the chart's visibility."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.Chart2D.rst:3
#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.Axis.rst:3
msgid "Create a 2D chart."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.Chart2D.rst:24
#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.ChartBox.rst:23
#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.ChartMPL.rst:32
#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.ChartPie.rst:23
#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.AreaPlot.rst:24
#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.BarPlot.rst:24
#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.BoxPlot.rst:24
#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.LinePlot2D.rst:24
#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.PiePlot.rst:24
#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.ScatterPlot2D.rst:24
#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.StackPlot.rst:24
msgid "Hide it."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.Chart2D.visible:2 ../../pyvista/pyvista/plotting/charts.pydocstring
#: of pyvista.ChartBox.visible:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartMPL.visible:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartPie.visible:2
msgid "Return or set the chart's visibility."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.Chart2D.x_axis:2
msgid ""
"Return this chart's horizontal (x) :class:`Axis <plotting.charts.Axis>`."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.Chart2D.rst:3
msgid "Create a 2D plot and hide the x axis."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.Chart2D.x_label:2
msgid "Return or set the label of this chart's x axis."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.Chart2D.rst:3
msgid "Create a 2D plot and set custom axis labels."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.Chart2D.x_range:2
msgid "Return or set the range of this chart's x axis."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.Chart2D.rst:3
msgid "Create a 2D plot and set custom axis ranges."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.Chart2D.y_axis:2
msgid "Return this chart's vertical (y) :class:`Axis <plotting.charts.Axis>`."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.Chart2D.rst:3
msgid "Create a 2D plot and hide the y axis."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.Chart2D.y_label:2
msgid "Return or set the label of this chart's y axis."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.Chart2D.y_range:2
msgid "Return or set the range of this chart's y axis."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.ChartBox.rst:2
msgid "pyvista.ChartBox"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/index.rst:18:<autosummary>:1
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ChartBox:2
msgid "Dedicated chart for drawing box plots."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot:11
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.update:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ChartBox:9
msgid ""
"**data** : :class:`python:list` or :class:`python:tuple` :obj:`of` "
":term:`numpy:array_like`"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot:10
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ChartBox:8
msgid ""
"Dataset(s) from which the relevant statistics will be calculated used to "
"draw the box plot."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ChartBox:12
msgid ""
"Color used for each drawn boxplot. Defaults to ``None``, which uses the "
"default color scheme."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ChartBox:16
msgid ""
"Label for each drawn boxplot, as shown in the chart's legend. Defaults to "
"``[]``."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.ChartBox.rst:3
#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.BoxPlot.rst:3
msgid ""
"Create boxplots for datasets sampled from shifted normal distributions."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.ChartBox.rst:3
msgid "Create a boxplot chart with a green background."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.ChartBox.rst:3
msgid "Create a boxplot chart with an emoji as its background."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.ChartBox.rst:3
msgid "Create a boxplot chart with a thick, dashed red border."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.ChartBox.rst:3
msgid "Create a boxplot chart with custom labels."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartBox.loc:17
msgid ""
"The location of a ChartBox instance cannot be modified, it fills up the "
"entire viewport by default."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartBox.plot:2
msgid ""
"Return the :class:`BoxPlot <plotting.charts.BoxPlot>` instance associated "
"with this chart."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.ChartBox.rst:3
#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.BoxPlot.rst:3
msgid "Create a box plot from a standard Gaussian dataset."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.ChartBox.rst:25
#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.BoxPlot.rst:25
msgid "Update the box plot (shift the standard Gaussian distribution)."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.ChartBox.rst:3
msgid "Create a simple boxplot chart and show it."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartBox.size:17
msgid ""
"The size of a ChartBox instance cannot be modified, it fills up the entire "
"viewport by default."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.ChartBox.rst:3
msgid "Create a boxplot chart with title 'My Chart'."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.ChartBox.rst:3
msgid "Create a boxplot chart."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.ChartMPL.rst:2
msgid "pyvista.ChartMPL"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/index.rst:18:<autosummary>:1
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ChartMPL:2
msgid "Create new chart from an existing matplotlib figure."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ChartMPL:8
msgid "**figure** : :obj:`matplotlib.figure.Figure`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ChartMPL:7
msgid "matplotlib.figure.Figure, optional"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ChartMPL:8
msgid "The matplotlib figure to draw."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.ChartMPL.rst:3
msgid ""
"Plot streamlines of a vector field with varying colors (based on `this "
"example "
"<https://matplotlib.org/stable/gallery/images_contours_and_fields/plot_streamplot.html>`_)."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.ChartMPL.rst:3
msgid "Create a matplotlib chart with a green background."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.ChartMPL.rst:3
msgid "Create a matplotlib chart with an emoji as its background."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.ChartMPL.rst:3
msgid "Create a matplotlib chart with a thick, dashed red border."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartMPL.figure:2
msgid "Retrieve the matplotlib figure associated with this chart."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.ChartMPL.rst:3
msgid "Create a matplotlib chart from an existing figure."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.ChartMPL.rst:3
msgid "Create a matplotlib chart with custom labels and show the legend."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.ChartMPL.rst:3
msgid ""
"Create a half-sized matplotlib chart centered in the middle of the renderer."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartMPL.position:2
msgid "Chart position w.r.t the bottom left corner (in pixels)."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.ChartMPL.rst:3
msgid "Create a simple matplotlib chart and show it."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.ChartMPL.rst:3
msgid "Create a matplotlib chart with title 'My Chart'."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.ChartMPL.rst:3
msgid "Create a matplotlib chart."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.ChartPie.rst:2
msgid "pyvista.ChartPie"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/index.rst:18:<autosummary>:1
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ChartPie:2
msgid "Dedicated chart for drawing pie plots."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ChartPie:8
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot:10
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot.update:18
msgid "**data** : :term:`numpy:array_like`"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ChartPie:8
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot:10
msgid "Relative size of each pie segment."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ChartPie:11
msgid ""
"Color used for each pie segment drawn in this plot. Defaults to ``None``, "
"which uses the default color scheme."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ChartPie:15
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot:17
msgid ""
"Label for each pie segment drawn in this plot, as shown in the chart's "
"legend. Defaults to ``[]``."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.ChartPie.rst:3
#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.PiePlot.rst:3
msgid "Create a pie plot showing the usage of tax money."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.ChartPie.rst:3
msgid "Create a pie chart with a green background."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.ChartPie.rst:3
msgid "Create a pie chart with an emoji as its background."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.ChartPie.rst:3
msgid "Create a pie chart with a thick, dashed red border."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.ChartPie.rst:3
msgid "Create a pie chart with custom labels."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartPie.loc:17
msgid ""
"The location of a ChartPie instance cannot be modified, it fills up the "
"entire viewport by default."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartPie.plot:2
msgid ""
"Return the :class:`PiePlot <plotting.charts.PiePlot>` instance associated "
"with this chart."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.ChartPie.rst:3
#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.PiePlot.rst:3
msgid "Create a pie plot with segments of increasing size."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.ChartPie.rst:23
#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.PiePlot.rst:23
msgid "Update the pie plot (segments of equal size)."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.ChartPie.rst:3
msgid "Create a simple pie chart and show it."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.ChartPie.size:17
msgid ""
"The size of a ChartPie instance cannot be modified, it fills up the entire "
"viewport by default."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.ChartPie.rst:3
msgid "Create a pie chart with title 'My Chart'."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.ChartPie.rst:3
msgid "Create a pie chart."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.AreaPlot.rst:2
msgid "pyvista.plotting.charts.AreaPlot"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/index.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot:2
msgid "Class representing a 2D area plot."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot:4
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot:4
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D:4
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D:4
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot:4
msgid ""
"Users should typically not directly create new plot instances, but use the "
"dedicated 2D chart's plotting methods."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.AreaPlot.rst:3
msgid ""
"Create an area plot showing the minimum and maximum precipitation observed "
"in each month."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot.brush:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot.brush:9
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.brush:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.brush:9
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.brush:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.brush:9
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D.brush:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D.brush:9
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot.brush:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot.brush:9
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D.brush:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D.brush:9
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.brush:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.brush:9
msgid "Brush object controlling how shapes in this plot are filled."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot.brush:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.brush:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.brush:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D.brush:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot.brush:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D.brush:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.brush:18
msgid ":obj:`Brush`"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.AreaPlot.rst:3
msgid "Use a custom texture for the area plot's brush object."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot.color:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.color:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.color:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D.color:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot.color:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D.color:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.color:2
msgid "Return or set the plot's color."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot.color:4
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D.color:4
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D.color:4
msgid ""
"This is the color used by the plot's pen and brush to draw lines and shapes."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.AreaPlot.rst:3
msgid "Set the area plot's color to red."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot.label:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.label:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.label:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D.label:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot.label:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D.label:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.label:2
msgid "Return or set the this plot's label, as shown in the chart's legend."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.AreaPlot.rst:3
msgid "Create a area plot with custom label."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot.line_style:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.line_style:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.line_style:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D.line_style:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot.line_style:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D.line_style:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.line_style:2
msgid "Return or set the line style of all lines drawn in this plot."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot.line_style:4
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.line_style:4
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.line_style:4
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D.line_style:4
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot.line_style:4
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D.line_style:4
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.line_style:4
msgid ""
"This is equivalent to accessing/modifying the style of this plot's pen."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.AreaPlot.rst:3
#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.BarPlot.rst:3
#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.BoxPlot.rst:3
#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.LinePlot2D.rst:3
#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.PiePlot.rst:3
#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.ScatterPlot2D.rst:3
#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.StackPlot.rst:3
msgid "Set a custom line style."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot.line_width:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.line_width:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.line_width:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D.line_width:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot.line_width:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D.line_width:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.line_width:2
msgid "Return or set the line width of all lines drawn in this plot."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot.line_width:4
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.line_width:4
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.line_width:4
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D.line_width:4
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot.line_width:4
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D.line_width:4
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.line_width:4
msgid ""
"This is equivalent to accessing/modifying the width of this plot's pen."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.AreaPlot.rst:3
#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.BarPlot.rst:3
#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.BoxPlot.rst:3
#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.LinePlot2D.rst:3
#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.PiePlot.rst:3
#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.ScatterPlot2D.rst:3
#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.StackPlot.rst:3
msgid "Set the line width to 10"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot.pen:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot.pen:9
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.pen:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.pen:9
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.pen:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.pen:9
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D.pen:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D.pen:9
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot.pen:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot.pen:9
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D.pen:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D.pen:9
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.pen:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.pen:9
msgid "Pen object controlling how lines in this plot are drawn."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot.pen:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.pen:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.pen:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D.pen:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot.pen:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D.pen:18
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.pen:18
msgid ":obj:`Pen`"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.AreaPlot.rst:3
msgid "Increase the line width of the area plot's pen object."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts._Plot.toggle:2
msgid "Toggle the plot's visibility."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.AreaPlot.rst:3
msgid "Create a area plot."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot.update:2
msgid "Update this plot's points, outlining the area to draw."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot.update:8
msgid "The new x coordinates of the points outlining the area."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot.update:11
msgid "The new y coordinates of the points on the first outline of the area."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot.update:14
msgid ""
"The new y coordinates of the points on the second outline of the area. "
"Defaults to a sequence of zeros."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.AreaPlot.rst:3
msgid "Create an area plot."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.AreaPlot.rst:24
msgid "Update the points on the second outline of the area."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot.visible:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.visible:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.visible:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D.visible:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot.visible:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D.visible:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.visible:2
msgid "Return or set the this plot's visibility."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot.x:2
msgid "Retrieve the X coordinates of the points outlining the drawn area."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.AreaPlot.rst:3
msgid "Create an area plot and display the x coordinates."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot.y1:2
msgid ""
"Retrieve the Y coordinates of the points on the first outline of the drawn "
"area."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.AreaPlot.rst:3
msgid "Create an area plot and display the y1 coordinates."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.AreaPlot.y2:2
msgid ""
"Retrieve the Y coordinates of the points on the second outline of the drawn "
"area."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.AreaPlot.rst:3
msgid "Create an area plot and display the y2 coordinates."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.Axis.rst:2
msgid "pyvista.plotting.charts.Axis"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/index.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis:2
msgid "Pythonic interface for a VTK Axis, used by 2D charts."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis:8
msgid "Axis label. Defaults to the empty string ``\"\"`` (no visible label)."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis:16
msgid ""
"**range** : :class:`python:list` or :class:`python:tuple` :obj:`of` "
":class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis:15
msgid "python:list or python:tuple of python:float, optional"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis:11
msgid ""
"Axis range, denoting the minimum and maximum values displayed on this axis. "
"Setting this to any valid value other than ``None`` will change this axis "
"behavior to ``'fixed'``. Setting it to ``None`` will change the axis "
"behavior to ``'auto'``. Defaults to ``None`` (automatically scale axis)."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis:19
msgid ""
"Flag to toggle grid lines visibility for this axis. Defaults to ``True``."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Brush:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Pen:0
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot:0
msgid "Other Parameters"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis:34
msgid "**_wrap** : :obj:`vtk.vtkAxis`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis:33
msgid "vtk.vtkAxis, optional"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis:27
msgid ""
"Wrap an existing VTK Axis instance. Defaults to ``None`` (no wrapping)."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis:0
msgid "Attributes"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis:39
msgid "**pen** : :obj:`Pen`"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis:38
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis:42
msgid "Pen"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis:39
msgid "Pen used to draw the axis."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis:43
msgid "**grid_pen** : :obj:`Pen`"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis:42
msgid "Pen used to draw the grid lines."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.behavior:2
msgid "Set the axis' scaling behavior."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.behavior:4
msgid ""
"Allowed behaviors are ``'auto'`` to automatically rescale the axis to fit "
"all visible datapoints in the plot, or ``'fixed'`` to use the user defined "
"range."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.Axis.rst:3
msgid "Manually specify the x-axis range of a 2D chart."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.Axis.rst:25
msgid "Revert to automatic axis scaling."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.grid:2
msgid "Return or set the axis' grid line visibility."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.Axis.rst:3
msgid "Create a 2D chart with grid lines disabled for the x-axis."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.label:2
msgid "Return or set the axis label."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.Axis.rst:3
msgid "Set the axis label to ``\"Axis Label\"``."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.label_size:2
msgid "Return or set the size of the axis label font."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.Axis.rst:3
msgid "Set the x-axis label font size of a 2D chart to 20."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.label_visible:2
msgid "Return or set the axis label's visibility."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.Axis.rst:3
msgid "Hide the x-axis label of a 2D chart."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.log_scale:2
msgid "Flag denoting whether a log scale is used for this axis."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.log_scale:4
msgid ""
"Note that setting this property to ``True`` will not guarantee that the log "
"scale will be enabled.  Verify whether activating the log scale succeeded by"
" rereading this property."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.Axis.rst:24
msgid "Try to enable the log scale on the y-axis."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.margin:2
msgid "Return or set the axis margin."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.Axis.rst:25
msgid ""
"Manually specify a larger (bottom) margin for the x-axis and a larger (left)"
" margin for the y-axis."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.range:2
msgid "Return or set the axis range."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.range:4
msgid ""
"This will automatically set the axis behavior to ``\"fixed\"`` when a valid "
"range is given. Setting the range to ``None`` will set the axis behavior to "
"``\"auto\"``."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.tick_count:2
msgid "Return or set the number of ticks drawn on this axis."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.tick_count:4
msgid ""
"Setting this property to a negative value or ``None`` will automatically "
"determine the appropriate amount of ticks to draw."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.Axis.rst:3
msgid "Create a 2D chart with a reduced number of ticks on the x-axis."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.Axis.rst:25
msgid "Revert back to automatic tick behavior."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.tick_label_size:2
msgid "Return or set the size of the axis tick label font."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.Axis.rst:3
msgid "Set the x-axis tick label font size of a 2D chart to 20."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.tick_labels:2
msgid "Return or set the tick labels for this axis."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.tick_labels:4
msgid ""
"You can specify a sequence, to provide a unique label to every tick "
"position; a string, to describe the label format to use for each label; or "
"``None``, which will revert back to the default tick labels.  A label format"
" is a string consisting of an integer part, denoting the precision to use, "
"and a final character, denoting the notation to use."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.tick_labels:11
msgid "Allowed notations:"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.tick_labels:13
msgid "``\"f\"`` for fixed notation"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.tick_labels:14
msgid "``\"e\"`` for scientific notation."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.Axis.rst:3
msgid "Create a 2D chart with custom tick locations and labels on the y-axis."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.Axis.rst:28
msgid "Revert back to automatic tick placement."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.Axis.rst:48
msgid ""
"Specify a custom label format to use (fixed notation with precision 2)."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.tick_labels_offset:2
msgid "Return or set the offset of the tick labels for this axis."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.Axis.rst:3
msgid ""
"Create a 2D chart with an x-axis with an increased tick size and adjusted "
"offset for the tick labels."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.tick_labels_visible:2
msgid "Return or set the tick label visibility for this axis."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.Axis.rst:3
msgid "Create a 2D chart with hidden tick labels on the y-axis."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.tick_locations:2
msgid "Return or set the tick locations for this axis."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.tick_locations:4
msgid ""
"Setting this to ``None`` will revert back to the default, automatically "
"determined, tick locations."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.tick_size:2
msgid "Return or set the size of this axis' ticks."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.ticks_visible:2
msgid "Return or set the tick visibility for this axis."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.Axis.rst:3
msgid "Create a 2D chart with hidden ticks on the y-axis."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.toggle:2
msgid "Toggle the axis' visibility."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.Axis.rst:24
msgid "Toggle the visibility of the y-axis."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Axis.visible:2
msgid "Return or set the axis' visibility."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.Axis.rst:3
msgid "Create a 2D chart with no visible y-axis."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.BarPlot.rst:2
msgid "pyvista.plotting.charts.BarPlot"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/index.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot:2
msgid "Class representing a 2D bar plot."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.BarPlot.rst:3
msgid ""
"Create a stacked bar chart showing the average time spent on activities "
"throughout the week."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.BarPlot.rst:3
msgid "Use a custom texture for the bar plot's brush object."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.color:4
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.color:4
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot.color:4
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.color:4
msgid ""
"This is the color used by the plot's brush to draw the different components."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.BarPlot.rst:3
msgid "Set the bar plot's color to red."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.color_scheme:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.color_scheme:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot.color_scheme:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.color_scheme:2
msgid "Return or set the plot's color scheme."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.color_scheme:4
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.color_scheme:4
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot.color_scheme:4
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.color_scheme:4
msgid ""
"This scheme defines the colors of the different components drawn by this "
"plot. See the table below for the available color schemes."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.color_scheme:22
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.color_scheme:22
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot.color_scheme:22
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.color_scheme:22
msgid "Overview of all available color schemes."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:2
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:2
msgid "Color schemes"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:6
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:6
msgid "Color scheme"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/pen_line_styles.rst:7
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:7
#: ../../pyvista/doc/api/plotting/charts/scatter_marker_styles.rst:7
#: ../../pyvista/doc/api/plotting/charts/pen_line_styles.rst:7
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:7
#: ../../pyvista/doc/api/plotting/charts/scatter_marker_styles.rst:7
msgid "Description"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:8
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:8
msgid "# colors"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/pen_line_styles.rst:8
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:9
#: ../../pyvista/doc/api/plotting/charts/scatter_marker_styles.rst:8
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:8
#: ../../pyvista/doc/api/utilities/colors.rst:8
#: ../../pyvista/doc/api/plotting/charts/pen_line_styles.rst:8
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:9
#: ../../pyvista/doc/api/plotting/charts/scatter_marker_styles.rst:8
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:8
#: ../../pyvista/doc/api/utilities/colors.rst:8
msgid "Example"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:11
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:11
msgid "``\"spectrum\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:12
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:12
msgid "black, red, blue, green, purple, orange, brown"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:13
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:23
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:28
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:33
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:63
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:108
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:153
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:188
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:223
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:258
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:13
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:23
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:28
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:33
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:63
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:108
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:153
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:188
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:223
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:258
msgid "7"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:16
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:16
msgid "``\"warm\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:17
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:17
msgid "dark red ‚Üí yellow"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:18
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:38
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:68
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:113
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:158
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:193
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:228
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:263
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:18
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:38
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:68
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:113
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:158
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:193
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:228
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:263
msgid "6"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:21
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:21
msgid "``\"cool\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:22
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:22
msgid "green ‚Üí blue ‚Üí purple"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:26
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:26
msgid "``\"blues\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:27
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:27
msgid "Different shades of blue"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:31
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:31
msgid "``\"wild_flower\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:32
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:32
msgid "blue ‚Üí purple ‚Üí pink"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:36
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:36
msgid "``\"citrus\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:37
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:37
msgid "green ‚Üí yellow ‚Üí orange"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:41
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:41
msgid "``\"div_purple_orange11\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:42
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:47
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:42
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:47
msgid "dark brown ‚Üí white ‚Üí dark purple"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:43
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:88
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:133
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:318
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:43
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:88
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:133
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:318
msgid "11"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:46
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:46
msgid "``\"div_purple_orange10\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:48
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:93
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:138
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:48
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:93
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:138
msgid "10"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:51
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:51
msgid "``\"div_purple_orange9\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:52
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:57
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:62
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:67
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:52
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:57
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:62
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:67
msgid "brown ‚Üí white ‚Üí purple"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:53
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:98
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:143
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:178
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:213
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:248
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:303
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:313
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:53
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:98
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:143
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:178
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:213
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:248
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:303
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:313
msgid "9"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:56
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:56
msgid "``\"div_purple_orange8\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:58
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:103
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:148
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:183
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:218
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:253
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:283
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:288
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:298
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:308
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:58
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:103
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:148
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:183
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:218
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:253
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:283
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:288
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:298
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:308
msgid "8"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:61
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:61
msgid "``\"div_purple_orange7\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:66
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:66
msgid "``\"div_purple_orange6\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:71
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:71
msgid "``\"div_purple_orange5\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:72
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:77
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:82
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:72
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:77
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:82
msgid "orange ‚Üí white ‚Üí purple"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:73
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:118
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:163
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:198
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:233
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:268
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:73
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:118
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:163
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:198
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:233
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:268
msgid "5"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:76
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:76
msgid "``\"div_purple_orange4\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:78
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:123
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:168
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:203
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:238
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:273
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:78
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:123
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:168
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:203
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:238
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:273
msgid "4"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:81
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:81
msgid "``\"div_purple_orange3\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:83
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:128
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:173
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:208
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:243
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:278
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:83
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:128
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:173
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:208
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:243
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:278
msgid "3"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:86
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:86
msgid "``\"div_spectral11\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:87
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:92
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:87
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:92
msgid "dark red ‚Üí light yellow ‚Üí dark blue"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:91
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:91
msgid "``\"div_spectral10\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:96
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:96
msgid "``\"div_spectral9\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:97
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:102
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:107
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:112
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:117
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:122
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:97
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:102
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:107
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:112
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:117
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:122
msgid "red ‚Üí light yellow ‚Üí blue"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:101
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:101
msgid "``\"div_spectral8\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:106
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:106
msgid "``\"div_spectral7\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:111
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:111
msgid "``\"div_spectral6\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:116
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:116
msgid "``\"div_spectral5\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:121
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:121
msgid "``\"div_spectral4\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:126
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:126
msgid "``\"div_spectral3\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:127
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:127
msgid "orange ‚Üí light yellow ‚Üí green"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:131
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:131
msgid "``\"div_brown_blue_green11\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:132
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:137
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:132
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:137
msgid "dark brown ‚Üí white ‚Üí dark blue-green"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:136
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:136
msgid "``\"div_brown_blue_green10\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:141
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:141
msgid "``\"div_brown_blue_green9\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:142
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:147
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:152
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:157
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:162
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:167
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:172
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:142
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:147
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:152
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:157
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:162
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:167
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:172
msgid "brown ‚Üí white ‚Üí blue-green"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:146
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:146
msgid "``\"div_brown_blue_green8\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:151
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:151
msgid "``\"div_brown_blue_green7\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:156
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:156
msgid "``\"div_brown_blue_green6\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:161
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:161
msgid "``\"div_brown_blue_green5\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:166
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:166
msgid "``\"div_brown_blue_green4\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:171
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:171
msgid "``\"div_brown_blue_green3\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:176
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:176
msgid "``\"seq_blue_green9\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:177
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:182
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:187
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:177
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:182
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:187
msgid "light blue ‚Üí dark green"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:181
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:181
msgid "``\"seq_blue_green8\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:186
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:186
msgid "``\"seq_blue_green7\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:191
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:191
msgid "``\"seq_blue_green6\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:192
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:197
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:202
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:207
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:192
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:197
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:202
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:207
msgid "light blue ‚Üí green"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:196
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:196
msgid "``\"seq_blue_green5\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:201
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:201
msgid "``\"seq_blue_green4\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:206
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:206
msgid "``\"seq_blue_green3\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:211
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:211
msgid "``\"seq_yellow_orange_brown9\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:212
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:212
msgid "light yellow ‚Üí orange ‚Üí dark brown"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:216
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:216
msgid "``\"seq_yellow_orange_brown8\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:217
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:222
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:227
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:232
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:217
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:222
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:227
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:232
msgid "light yellow ‚Üí orange ‚Üí brown"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:221
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:221
msgid "``\"seq_yellow_orange_brown7\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:226
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:226
msgid "``\"seq_yellow_orange_brown6\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:231
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:231
msgid "``\"seq_yellow_orange_brown5\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:236
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:236
msgid "``\"seq_yellow_orange_brown4\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:237
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:242
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:237
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:242
msgid "light yellow ‚Üí orange"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:241
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:241
msgid "``\"seq_yellow_orange_brown3\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:246
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:246
msgid "``\"seq_blue_purple9\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:247
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:247
msgid "light blue ‚Üí dark purple"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:251
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:251
msgid "``\"seq_blue_purple8\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:252
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:257
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:262
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:267
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:272
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:277
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:252
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:257
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:262
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:267
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:272
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:277
msgid "light blue ‚Üí purple"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:256
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:256
msgid "``\"seq_blue_purple7\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:261
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:261
msgid "``\"seq_blue_purple6\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:266
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:266
msgid "``\"seq_blue_purple5\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:271
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:271
msgid "``\"seq_blue_purple4\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:276
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:276
msgid "``\"seq_blue_purple3\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:281
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:281
msgid "``\"qual_accent\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:282
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:282
msgid ""
"pastel green, pastel purple, pastel orange, pastel yellow, blue, pink, "
"brown, gray"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:286
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:286
msgid "``\"qual_dark2\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:287
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:287
msgid "darker shade of qual_set2"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:291
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:291
msgid "``\"qual_set3\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:292
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:292
msgid ""
"pastel colors: blue green, light yellow, dark purple, red, blue, orange, "
"green, pink, gray, purple, light green, yellow"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:293
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:293
msgid "12"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:296
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:296
msgid "``\"qual_set2\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:297
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:297
msgid "blue green, orange, purple, pink, green, yellow, brown, gray"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:301
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:301
msgid "``\"qual_set1\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:302
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:302
msgid "red, blue, green, purple, orange, yellow, brown, pink, gray"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:306
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:306
msgid "``\"qual_pastel2\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:307
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:307
msgid "pastel shade of qual_set2"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:311
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:311
msgid "``\"qual_pastel1\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:312
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:312
msgid "pastel shade of qual_set1"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:316
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:316
msgid "``\"qual_paired\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:317
#: ../../pyvista/doc/api/plotting/charts/plot_color_schemes.rst:317
msgid ""
"light blue, blue, light green, green, light red, red, light orange, orange, "
"light purple, purple, light yellow"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.BarPlot.rst:3
msgid "Set the bar plot's color scheme to warm."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.colors:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.colors:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot.colors:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.colors:2
msgid "Return or set the plot's colors."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.colors:4
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.colors:4
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot.colors:4
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.colors:4
msgid ""
"These are the colors used for the different components drawn by this plot."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.BarPlot.rst:3
msgid "Set the bar plot's colors manually."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.BarPlot.rst:3
msgid "Create a bar plot with custom label."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.BarPlot.rst:25
#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.BoxPlot.rst:25
#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.PiePlot.rst:25
#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.StackPlot.rst:25
msgid "Modify the label."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.labels:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.labels:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot.labels:2
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.labels:2
msgid "Return or set the this plot's labels, as shown in the chart's legend."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.BarPlot.rst:3
msgid "Create a bar plot."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.BarPlot.rst:24
#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.BoxPlot.rst:24
#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.PiePlot.rst:24
#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.StackPlot.rst:24
msgid "Modify the labels."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.orientation:2
msgid "Return or set the orientation of the bars in this plot."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.BarPlot.rst:24
msgid "Change the orientation to horizontal."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.BarPlot.rst:3
msgid "Increase the line width of the bar plot's pen object."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.update:2
msgid "Update the positions and/or size of the bars in this plot."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.update:8
msgid "The new positions of the bars to draw."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.update:11
msgid "The new sizes of the bars to draw."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.BarPlot.rst:24
msgid "Update the bar sizes."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.x:2
msgid "Retrieve the positions of the drawn bars."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.BarPlot.rst:3
msgid "Create a bar plot and display the positions."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BarPlot.y:2
msgid "Retrieve the sizes of the drawn bars."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.BarPlot.rst:3
msgid "Create a bar plot and display the sizes."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.BoxPlot.rst:2
msgid "pyvista.plotting.charts.BoxPlot"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/index.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot:2
msgid "Class representing a box plot."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot:4
msgid ""
"Users should typically not directly create new plot instances, but use the "
"dedicated ``ChartBox`` class."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot:14
msgid ""
"Color of the boxes drawn in this plot. Any color parsable by "
":class:`pyvista.Color` is allowed.  Defaults to ``None``."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot:18
msgid ""
"Label for each box drawn in this plot, as shown in the chart's legend. "
"Defaults to ``[]``."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.BoxPlot.rst:3
msgid "Use a custom texture for the box plot's brush object."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.BoxPlot.rst:3
msgid "Set the box plot's color to red."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.BoxPlot.rst:3
msgid "Set the box plot's color scheme to warm."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.BoxPlot.rst:3
msgid "Set the box plot's colors manually."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.data:2
msgid "Retrieve the datasets of which the boxplots are drawn."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.BoxPlot.rst:3
msgid "Create a box plot and display the datasets."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.BoxPlot.rst:3
msgid "Create a box plot with custom label."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.BoxPlot.rst:3
msgid "Create a box plot."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.BoxPlot.rst:3
msgid "Increase the line width of the box plot's pen object."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.stats:2
msgid ""
"Retrieve the statistics (quartiles and extremum values) of the datasets of "
"which the boxplots are drawn."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.BoxPlot.rst:3
msgid "Create a box plot and display the statistics."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.update:2
msgid "Update the plot's underlying dataset(s)."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.BoxPlot.update:8
msgid "The new dataset(s) used in this box plot."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.Brush.rst:2
msgid "pyvista.plotting.charts.Brush"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/index.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Brush:2
msgid "Pythonic wrapper for a VTK Brush, used to fill shapes."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Brush:8
msgid ""
"Fill color of the shapes drawn using this brush. Any color parsable by "
":class:`pyvista.Color` is allowed.  Defaults to ``\"k\"``."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Brush:18
msgid "**texture** : :obj:`Texture`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Brush:17
msgid "Texture, optional"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Brush:13
msgid ""
"Texture used to fill shapes drawn using this brush. Any object convertible "
"to a :class:`Texture` is allowed. Defaults to ``None``."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Brush:32
msgid "**_wrap** : :obj:`vtk.vtkBrush`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Brush:31
msgid "vtk.vtkBrush, optional"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Brush:23
msgid ""
"Wrap an existing VTK Brush instance. Defaults to ``None`` (no wrapping)."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Brush.color:2
msgid "Return or set the brush's color."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.Brush.rst:3
msgid "Set the brush's color to red."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Brush.texture:2
msgid "Return or set the brush's texture."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.Brush.rst:3
msgid "Set the brush's texture to the sample puppy texture."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Brush.texture_interpolate:2
msgid "Set texture interpolation mode."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Brush.texture_interpolate:4
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Brush.texture_repeat:4
msgid "There are two modes:"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Brush.texture_interpolate:6
msgid "``False`` - NEAREST"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Brush.texture_interpolate:7
msgid "``True`` - LINEAR"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.Brush.rst:3
msgid "Set up a brush with a texture."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.Brush.rst:26
msgid "Disable linear interpolation."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Brush.texture_repeat:2
msgid "Return or set the texture repeat mode."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Brush.texture_repeat:6
msgid "``False`` - STRETCH"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Brush.texture_repeat:7
msgid "``True`` - REPEAT"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.Brush.rst:26
msgid "Enable texture repeat."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.LinePlot2D.rst:2
msgid "pyvista.plotting.charts.LinePlot2D"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/index.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D:2
msgid "Class representing a 2D line plot."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.LinePlot2D.rst:3
msgid "Create a 2D chart plotting an approximate satellite trajectory."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.LinePlot2D.rst:3
msgid "Use a custom texture for the 2D line plot's brush object."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.LinePlot2D.rst:3
msgid "Set the 2D line plot's color to red."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.LinePlot2D.rst:3
msgid "Create a 2D line plot with custom label."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.LinePlot2D.rst:3
msgid "Increase the line width of the 2D line plot's pen object."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.LinePlot2D.rst:3
msgid "Create a 2D line plot."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D.update:2
msgid "Update this plot's points, through which a line is drawn."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D.update:8
msgid ""
"The new x coordinates of the points through which a line should be drawn."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D.update:11
msgid ""
"The new y coordinates of the points through which a line should be drawn."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.LinePlot2D.rst:3
msgid "Create a line plot."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.LinePlot2D.rst:24
msgid "Update the line's y coordinates."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D.x:2
msgid ""
"Retrieve the X coordinates of the points through which a line is drawn."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.LinePlot2D.rst:3
msgid "Create a line plot and display the x coordinates."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.LinePlot2D.y:2
msgid ""
"Retrieve the Y coordinates of the points through which a line is drawn."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.LinePlot2D.rst:3
msgid "Create a line plot and display the y coordinates."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.Pen.rst:2
msgid "pyvista.plotting.charts.Pen"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/index.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Pen:2
msgid "Pythonic wrapper for a VTK Pen, used to draw lines."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Pen:8
msgid ""
"Color of the lines drawn using this pen. Any color parsable by "
":class:`pyvista.Color` is allowed. Defaults to ``\"k\"``."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Pen:12
msgid "Width of the lines drawn using this pen. Defaults to ``1``."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Pen:15
msgid ""
"Style of the lines drawn using this pen. See :ref:`Pen.LINE_STYLES "
"<pen_line_styles>` for a list of allowed line styles. Defaults to ``\"-\"``."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Pen:29
msgid "**_wrap** : :obj:`vtk.vtkPen`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Pen:28
msgid "vtk.vtkPen, optional"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Pen:25
msgid "Wrap an existing VTK Pen instance. Defaults to ``None`` (no wrapping)."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Pen:42
msgid "LINE_STYLES"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Pen-1
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D-1
msgid "dict"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Pen:36
msgid "Dictionary containing all allowed line styles as its keys."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/pen_line_styles.rst:2
#: ../../pyvista/doc/api/plotting/charts/pen_line_styles.rst:2
msgid "Line styles"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/pen_line_styles.rst:6
#: ../../pyvista/doc/api/plotting/charts/scatter_marker_styles.rst:6
#: ../../pyvista/doc/api/plotting/charts/pen_line_styles.rst:6
#: ../../pyvista/doc/api/plotting/charts/scatter_marker_styles.rst:6
msgid "Style"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/pen_line_styles.rst:10
#: ../../pyvista/doc/api/plotting/charts/scatter_marker_styles.rst:10
#: ../../pyvista/doc/api/plotting/charts/pen_line_styles.rst:10
#: ../../pyvista/doc/api/plotting/charts/scatter_marker_styles.rst:10
msgid "``\"\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/pen_line_styles.rst:11
#: ../../pyvista/doc/api/plotting/charts/scatter_marker_styles.rst:11
#: ../../pyvista/doc/api/plotting/charts/pen_line_styles.rst:11
#: ../../pyvista/doc/api/plotting/charts/scatter_marker_styles.rst:11
msgid "Hidden"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/pen_line_styles.rst:14
#: ../../pyvista/doc/api/plotting/charts/pen_line_styles.rst:14
msgid "``\"-\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/pen_line_styles.rst:15
#: ../../pyvista/doc/api/plotting/charts/pen_line_styles.rst:15
msgid "Solid"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/pen_line_styles.rst:18
#: ../../pyvista/doc/api/plotting/charts/pen_line_styles.rst:18
msgid "``\"--\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/pen_line_styles.rst:19
#: ../../pyvista/doc/api/plotting/charts/pen_line_styles.rst:19
msgid "Dashed"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/pen_line_styles.rst:22
#: ../../pyvista/doc/api/plotting/charts/pen_line_styles.rst:22
msgid "``\":\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/pen_line_styles.rst:23
#: ../../pyvista/doc/api/plotting/charts/pen_line_styles.rst:23
msgid "Dotted"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/pen_line_styles.rst:26
#: ../../pyvista/doc/api/plotting/charts/pen_line_styles.rst:26
msgid "``\"-.\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/pen_line_styles.rst:27
#: ../../pyvista/doc/api/plotting/charts/pen_line_styles.rst:27
msgid "Dash-dot"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/pen_line_styles.rst:30
#: ../../pyvista/doc/api/plotting/charts/pen_line_styles.rst:30
msgid "``\"-..\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/pen_line_styles.rst:31
#: ../../pyvista/doc/api/plotting/charts/pen_line_styles.rst:31
msgid "Dash-dot-dot"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Pen.color:2
msgid "Return or set the pen's color."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.Pen.rst:3
msgid "Set the pen's color to red."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Pen.style:2
msgid "Return or set the pen's line style."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Pen.style:4
msgid ""
"See :ref:`Pen.LINE_STYLES <pen_line_styles>` for a list of allowed line "
"styles."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.Pen.width:2
msgid "Return or set the pen's width."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.Pen.rst:3
msgid "Set the pen's width to 10"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.PiePlot.rst:2
msgid "pyvista.plotting.charts.PiePlot"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/index.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot:2
msgid "Class representing a pie plot."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot:4
msgid ""
"Users should typically not directly create new plot instances, but use the "
"dedicated :class:`ChartPie` class."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot:13
msgid ""
"Color of the segments drawn in this plot. Any color parsable by "
":class:`pyvista.Color` is allowed.  Defaults to ``None``."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot:32
msgid "**_wrap** : :obj:`vtk.vtkPlotPie`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot:31
msgid "vtk.vtkPlotPie, optional"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot:26
msgid ""
"Wrap an existing VTK PlotPie instance. Defaults to ``None`` (no wrapping)."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.PiePlot.rst:3
msgid "Use a custom texture for the pie plot's brush object."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.PiePlot.rst:3
msgid "Set the pie plot's color to red."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.PiePlot.rst:3
msgid "Set the pie plot's color scheme to warm."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.PiePlot.rst:3
msgid "Set the pie plot's colors manually."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot.data:2
msgid "Retrieve the sizes of the drawn segments."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.PiePlot.rst:3
msgid "Create a pie plot and display the sizes."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.PiePlot.rst:3
msgid "Create a pie plot with custom label."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.PiePlot.rst:3
msgid "Create a pie plot."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.PiePlot.rst:3
msgid "Increase the line width of the pie plot's pen object."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot.update:2
msgid "Update the size of the pie segments."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.PiePlot.update:8
msgid "The new relative size of each pie segment."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.ScatterPlot2D.rst:2
msgid "pyvista.plotting.charts.ScatterPlot2D"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/index.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D:2
msgid "Class representing a 2D scatter plot."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D:44
msgid "MARKER_STYLES"
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D:41
msgid "Dictionary containing all allowed marker styles as its keys."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/scatter_marker_styles.rst:2
#: ../../pyvista/doc/api/plotting/charts/scatter_marker_styles.rst:2
msgid "Marker styles"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/scatter_marker_styles.rst:14
#: ../../pyvista/doc/api/plotting/charts/scatter_marker_styles.rst:14
msgid "``\"x\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/scatter_marker_styles.rst:15
#: ../../pyvista/doc/api/plotting/charts/scatter_marker_styles.rst:15
msgid "Cross"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/scatter_marker_styles.rst:18
#: ../../pyvista/doc/api/plotting/charts/scatter_marker_styles.rst:18
msgid "``\"+\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/scatter_marker_styles.rst:19
#: ../../pyvista/doc/api/plotting/charts/scatter_marker_styles.rst:19
msgid "Plus"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/scatter_marker_styles.rst:22
#: ../../pyvista/doc/api/plotting/charts/scatter_marker_styles.rst:22
msgid "``\"s\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/scatter_marker_styles.rst:23
#: ../../pyvista/doc/api/plotting/charts/scatter_marker_styles.rst:23
msgid "Square"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/scatter_marker_styles.rst:26
#: ../../pyvista/doc/api/plotting/charts/scatter_marker_styles.rst:26
msgid "``\"o\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/scatter_marker_styles.rst:27
#: ../../pyvista/doc/api/plotting/charts/scatter_marker_styles.rst:27
#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Circle.rst:2
msgid "Circle"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/scatter_marker_styles.rst:30
#: ../../pyvista/doc/api/plotting/charts/scatter_marker_styles.rst:30
msgid "``\"d\"``"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/scatter_marker_styles.rst:31
#: ../../pyvista/doc/api/plotting/charts/scatter_marker_styles.rst:31
msgid "Diamond"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.ScatterPlot2D.rst:3
msgid "Plot a simple sine wave as a scatter plot."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.ScatterPlot2D.rst:3
msgid "Use a custom texture for the 2D scatter plot's brush object."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.ScatterPlot2D.rst:3
msgid "Set the 2D scatter plot's color to red."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.ScatterPlot2D.rst:3
msgid "Create a 2D scatter plot with custom label."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D.marker_size:2
msgid "Return or set the plot's marker size."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.ScatterPlot2D.rst:3
msgid "Create a 2D scatter plot."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.ScatterPlot2D.rst:24
msgid "Increase the marker size."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D.marker_style:2
msgid "Return or set the plot's marker style."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.ScatterPlot2D.rst:24
msgid "Change the marker style."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.ScatterPlot2D.rst:3
msgid "Increase the line width of the 2D scatter plot's pen object."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D.update:2
msgid "Update this plot's points."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D.update:8
msgid "The new x coordinates of the points to draw."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D.update:11
msgid "The new y coordinates of the points to draw."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.ScatterPlot2D.rst:3
msgid "Create a scatter plot."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.ScatterPlot2D.rst:24
msgid "Update the marker locations."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D.x:2
msgid "Retrieve the X coordinates of this plot's points."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.ScatterPlot2D.rst:3
msgid "Create a scatter plot and display the x coordinates."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.ScatterPlot2D.y:2
msgid "Retrieve the Y coordinates of this plot's points."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.ScatterPlot2D.rst:3
msgid "Create a scatter plot and display the y coordinates."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.StackPlot.rst:2
msgid "pyvista.plotting.charts.StackPlot"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/index.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot:2
msgid "Class representing a 2D stack plot."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.StackPlot.rst:3
msgid "Create a stack plot showing the amount of vehicles sold per type."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.StackPlot.rst:3
msgid "Use a custom texture for the stack plot's brush object."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.StackPlot.rst:3
msgid "Set the stack plot's color to red."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.StackPlot.rst:3
msgid "Set the stack plot's color scheme to warm."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.StackPlot.rst:3
msgid "Set the stack plot's colors manually."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.StackPlot.rst:3
msgid "Create a stack plot with custom label."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.StackPlot.rst:3
msgid "Create a stack plot."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.StackPlot.rst:3
msgid "Increase the line width of the stack plot's pen object."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.update:2
msgid "Update the locations and/or size of the stacks (areas) in this plot."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.update:8
msgid "The new x coordinates of the stacks (areas) to draw."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.update:11
msgid "The new sizes of the stacks (areas) to draw."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.StackPlot.rst:24
msgid "Update the stack sizes."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.x:2
msgid "Retrieve the X coordinates of the drawn stacks."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.StackPlot.rst:3
msgid "Create a stack plot and display the x coordinates."
msgstr ""

#: ../../pyvista/pyvista/plotting/charts.pydocstring of
#: pyvista.plotting.charts.StackPlot.ys:2
msgid "Retrieve the sizes of the drawn stacks."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/_autosummary/pyvista.plotting.charts.StackPlot.rst:3
msgid "Create a stack plot and display the sizes."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/index.rst:2
msgid "Charts"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/index.rst:3
msgid ""
"Charts API reference. These dedicated classes can be used to embed charts in"
" plotting windows. Note that using charts requires a VTK version of at least"
" 9.0 and in a future release will require ``vtk>=9.2``."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/index.rst:18:<autosummary>:1
msgid ""
":py:obj:`Chart2D <pyvista.Chart2D>`\\ \\(\\[size\\, loc\\, x\\_label\\, "
"y\\_label\\, grid\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/index.rst:18:<autosummary>:1
msgid ":py:obj:`ChartBox <pyvista.ChartBox>`\\ \\(data\\[\\, colors\\, labels\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/index.rst:18:<autosummary>:1
msgid ":py:obj:`ChartPie <pyvista.ChartPie>`\\ \\(data\\[\\, colors\\, labels\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/index.rst:18:<autosummary>:1
msgid ":py:obj:`ChartMPL <pyvista.ChartMPL>`\\ \\(\\[figure\\, size\\, loc\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/index.rst:19
msgid ""
"To customize these charts, extra plot and utility classes are available in "
"the ``charts`` module. Note that users should typically not instantiate "
"these classes themselves, but rather use the dedicated methods and "
"properties from the chart classes above."
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/index.rst:39:<autosummary>:1
msgid ""
":py:obj:`Pen <pyvista.plotting.charts.Pen>`\\ \\(\\[color\\, width\\, "
"style\\, \\_wrap\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/index.rst:39:<autosummary>:1
msgid ""
":py:obj:`Brush <pyvista.plotting.charts.Brush>`\\ \\(\\[color\\, texture\\, "
"\\_wrap\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/index.rst:39:<autosummary>:1
msgid ""
":py:obj:`Axis <pyvista.plotting.charts.Axis>`\\ \\(\\[label\\, range\\, "
"grid\\, \\_wrap\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/index.rst:39:<autosummary>:1
msgid ""
":py:obj:`LinePlot2D <pyvista.plotting.charts.LinePlot2D>`\\ \\(x\\, y\\[\\, "
"color\\, width\\, style\\, label\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/index.rst:39:<autosummary>:1
msgid ""
":py:obj:`ScatterPlot2D <pyvista.plotting.charts.ScatterPlot2D>`\\ \\(x\\, "
"y\\[\\, color\\, size\\, style\\, label\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/index.rst:39:<autosummary>:1
msgid ""
":py:obj:`BarPlot <pyvista.plotting.charts.BarPlot>`\\ \\(x\\, y\\[\\, "
"color\\, orientation\\, label\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/index.rst:39:<autosummary>:1
msgid ""
":py:obj:`AreaPlot <pyvista.plotting.charts.AreaPlot>`\\ \\(x\\, y1\\[\\, "
"y2\\, color\\, label\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/index.rst:39:<autosummary>:1
msgid ""
":py:obj:`StackPlot <pyvista.plotting.charts.StackPlot>`\\ \\(x\\, ys\\[\\, "
"colors\\, labels\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/index.rst:39:<autosummary>:1
msgid ""
":py:obj:`BoxPlot <pyvista.plotting.charts.BoxPlot>`\\ \\(data\\[\\, "
"colors\\, labels\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/plotting/charts/index.rst:39:<autosummary>:1
msgid ""
":py:obj:`PiePlot <pyvista.plotting.charts.PiePlot>`\\ \\(data\\[\\, "
"colors\\, labels\\, \\_wrap\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/plotting/conv_func.rst:2
#: ../../pyvista/doc/api/plotting/index.rst:69
msgid "Convenience Functions"
msgstr ""

#: ../../pyvista/doc/api/plotting/conv_func.rst:3
#: ../../pyvista/doc/api/plotting/index.rst:70
msgid ""
"These functions provide a simplified interface to the various plotting "
"routines in PyVista."
msgstr ""

#: ../../pyvista/doc/api/plotting/conv_func.rst:15:<autosummary>:1
msgid ""
":py:obj:`plot <pyvista.plot>`\\ \\(var\\_item\\[\\, off\\_screen\\, "
"full\\_screen\\, ...\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/plotting/conv_func.rst:15:<autosummary>:1
msgid ""
":py:obj:`plot_arrows <pyvista.plot_arrows>`\\ \\(cent\\, direction\\, "
"\\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/plotting/conv_func.rst:15:<autosummary>:1
msgid ":py:obj:`set_plot_theme <pyvista.set_plot_theme>`\\ \\(theme\\)"
msgstr ""

#: ../../pyvista/doc/api/plotting/conv_func.rst:15:<autosummary>:1
msgid ""
":py:obj:`create_axes_orientation_box "
"<pyvista.create_axes_orientation_box>`\\ \\(\\[line\\_width\\, ...\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/plotting/conv_func.rst:15:<autosummary>:1
msgid ""
":py:obj:`create_axes_marker <pyvista.create_axes_marker>`\\ "
"\\(\\[label\\_color\\, x\\_color\\, ...\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/plotting/index.rst:4
#: ../../pyvista/doc/api/plotting/plotting.rst:4
msgid "Plotting"
msgstr ""

#: ../../pyvista/doc/api/plotting/index.rst:6
msgid ""
"Intuitive plotting routines with `matplotlib`_ like syntax (see "
":ref:`plotting_ref`)."
msgstr ""

#: ../../pyvista/doc/api/plotting/index.rst:7
msgid "Plotting tools built for interactivity (see :ref:`widgets`)."
msgstr ""

#: ../../pyvista/doc/api/plotting/index.rst:20
msgid "Plotting API Reference"
msgstr ""

#: ../../pyvista/doc/api/plotting/index.rst:21
msgid ""
"Plotting module API reference.  These plotting modules are the basis for all"
" plotting functionality in PyVista."
msgstr ""

#: ../../pyvista/doc/api/plotting/index.rst:36:<autosummary>:1
msgid ":py:obj:`Plotter <pyvista.Plotter>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/plotting/index.rst:36:<autosummary>:1
msgid ""
":py:obj:`Renderer <pyvista.Renderer>`\\ \\(parent\\[\\, border\\, "
"border\\_color\\, ...\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/plotting/index.rst:36:<autosummary>:1
msgid ""
":py:obj:`Property <pyvista.Property>`\\ \\(\\[theme\\, interpolation\\, "
"color\\, ...\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/plotting/index.rst:36:<autosummary>:1
msgid ":py:obj:`Actor <pyvista.Actor>`\\ \\(\\[mapper\\, prop\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/plotting/index.rst:36:<autosummary>:1
msgid ":py:obj:`DataSetMapper <pyvista.DataSetMapper>`\\ \\(\\[dataset\\, theme\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/plotting/index.rst:36:<autosummary>:1
msgid ""
":py:obj:`LookupTable <pyvista.LookupTable>`\\ \\(\\[cmap\\, n\\_values\\, "
"flip\\, values\\, ...\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/plotting/index.rst:38
msgid "Composite Plotting Reference"
msgstr ""

#: ../../pyvista/doc/api/plotting/index.rst:39
msgid ""
"These classes are used when plotting :class:`pyvista.MultiBlock` datasets."
msgstr ""

#: ../../pyvista/doc/api/plotting/index.rst:48:<autosummary>:1
msgid ""
":py:obj:`CompositePolyDataMapper <pyvista.CompositePolyDataMapper>`\\ "
"\\(dataset\\[\\, theme\\, ...\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/plotting/index.rst:48:<autosummary>:1
msgid ""
":py:obj:`CompositeAttributes <pyvista.CompositeAttributes>`\\ \\(mapper\\, "
"dataset\\)"
msgstr ""

#: ../../pyvista/doc/api/plotting/index.rst:48:<autosummary>:1
msgid ":py:obj:`BlockAttributes <pyvista.BlockAttributes>`\\ \\(block\\, attr\\)"
msgstr ""

#: ../../pyvista/doc/api/plotting/index.rst:50
msgid "Charts API"
msgstr ""

#: ../../pyvista/doc/api/plotting/index.rst:51
msgid ""
"Charts API reference. These dedicated classes can be used to embed charts in"
" plotting windows. Note that using charts requires a VTK version of at least"
" 9.0 and in a future release will require `vtk>=9.2`."
msgstr ""

#: ../../pyvista/doc/api/plotting/index.rst:62
msgid "Widget API"
msgstr ""

#: ../../pyvista/doc/api/plotting/index.rst:63
msgid ""
"The :class:`pyvista.Plotter` class inherits all of the widget methods "
"described by the ``pyvista.WidgetHelper`` class. For additional details, see"
" the :ref:`widgets` examples."
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:6
msgid ""
"When plotting with the interactive rendering windows in VTK, several "
"keyboard shortcuts are available:"
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:10
msgid "Key"
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:10
msgid "Action"
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:12
msgid "Linux/Windows"
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:12
msgid "Mac"
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:14
msgid "``q``"
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:14
msgid "Close the rendering window"
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:16
msgid "``f``"
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:16
msgid "Focus and zoom in on a point"
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:18
msgid "``v``"
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:18
msgid "Isometric camera view"
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:20
msgid "``w``"
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:20
msgid "Switch all datasets to a `wireframe` representation"
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:22
msgid "``r``"
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:22
msgid "Reset the camera to view all datasets"
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:24
msgid "``s``"
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:24
msgid "Switch all datasets to a `surface` representation"
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:26
msgid "``shift+click`` or ``middle-click``"
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:26
msgid "``shift+click``"
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:26
msgid "Pan the rendering scene"
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:28
msgid "``left-click``"
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:28
msgid "``cmd+click``"
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:28
msgid "Rotate the rendering scene in 3D"
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:30
msgid "``ctrl+click``"
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:30
msgid "Rotate the rendering scene in 2D (view-plane)"
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:32
msgid "``mouse-wheel`` or ``right-click``"
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:32
msgid "``ctl+click``"
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:32
msgid "Continuously zoom the rendering scene"
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:34
msgid "``shift+s``"
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:34
msgid "Save a screenhsot (only on ``BackgroundPlotter``)"
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:36
msgid "``shift+c``"
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:36
msgid "Enable interactive cell selection/picking"
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:38
msgid "``up``/``down``"
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:38
msgid "Zoom in and out"
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:40
msgid "``+``/``-``"
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:40
msgid "Increase/decrease the point size and line widths"
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:45
msgid "Plotting in a Jupyter Notebook"
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:46
msgid ""
"Static and interactive inline plots are possible using a Jupyter notebook.  "
"The code snippet below will create a static screenshot of the rendering and "
"display it in the Jupyter notebook:"
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:58
msgid "It is possible to use the ``Plotter`` class as well."
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:66
msgid ""
"Additionally, you can generate interactive plots by leveraging a jupyter "
"plotting backend like ``panel``, ``ipygany``, or ``pythreejs``.  You can "
"even use it to create interactive documentation online."
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:79
msgid "For more details, see the section on :ref:`jupyter_plotting`."
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:83
msgid "Background Plotting"
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:85
msgid ""
"PyVista provides a plotter that enables users to create a rendering window "
"in the background that remains interactive while the user performs their "
"processing. This creates the ability to make a rendering scene and "
"interactively add or remove datasets from the scene as well as has some "
"useful menu functions for common scene manipulation or export tasks. To get "
"started, try instantiating the :class:`pyvistaqt.BackgroundPlotter`:"
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:108
msgid "Plot Time Series Data"
msgstr ""

#: ../../pyvista/doc/api/plotting/plotting.rst:110
msgid ""
"This example outlines how to plot data where the spatial reference and data "
"values change through time:"
msgstr ""

#: ../../pyvista/doc/api/plotting/qt_plotting.rst:4
msgid "PyVista and PyQt"
msgstr ""

#: ../../pyvista/doc/api/plotting/qt_plotting.rst:6
msgid ""
"Using `pyqt` you can embed the `Plotter` class within a `pyqt` widget to add"
" `pyvista` to a `Qt` application within Python.  You can also have a plot in"
" a separate thread from the main python thread using a background plotter "
"class.  For more details, see `pyvistaqt <https://qtdocs.pyvista.org>`_!"
msgstr ""

#: ../../pyvista/doc/api/plotting/theme.rst:4
msgid "Themes"
msgstr ""

#: ../../pyvista/doc/api/plotting/theme.rst:5
msgid ""
"PyVista plotting parameters can be controlled on a plot by plot basis or "
"through a global theme, making it possible to control mesh colors and styles"
" through one global configuration."
msgstr ""

#: ../../pyvista/doc/api/plotting/theme.rst:9
msgid ""
"See :ref:`themes_example` for an example on how to use themes within "
"PyVista."
msgstr ""

#: ../../pyvista/doc/api/plotting/theme.rst:27:<autosummary>:1
msgid ":py:obj:`themes.DefaultTheme <pyvista.themes.DefaultTheme>`\\ \\(\\)"
msgstr ""

#: ../../pyvista/doc/api/plotting/theme.rst:27:<autosummary>:1
msgid ":py:obj:`themes._SliderConfig <pyvista.themes._SliderConfig>`\\ \\(\\)"
msgstr ""

#: ../../pyvista/doc/api/plotting/theme.rst:27:<autosummary>:1
msgid ""
":py:obj:`themes._SliderStyleConfig <pyvista.themes._SliderStyleConfig>`\\ "
"\\(\\)"
msgstr ""

#: ../../pyvista/doc/api/plotting/theme.rst:27:<autosummary>:1
msgid ":py:obj:`themes._Font <pyvista.themes._Font>`\\ \\(\\)"
msgstr ""

#: ../../pyvista/doc/api/plotting/theme.rst:27:<autosummary>:1
msgid ":py:obj:`themes._AxesConfig <pyvista.themes._AxesConfig>`\\ \\(\\)"
msgstr ""

#: ../../pyvista/doc/api/plotting/theme.rst:27:<autosummary>:1
msgid ":py:obj:`themes._ColorbarConfig <pyvista.themes._ColorbarConfig>`\\ \\(\\)"
msgstr ""

#: ../../pyvista/doc/api/plotting/theme.rst:27:<autosummary>:1
msgid ""
":py:obj:`themes._SilhouetteConfig <pyvista.themes._SilhouetteConfig>`\\ "
"\\(\\)"
msgstr ""

#: ../../pyvista/doc/api/plotting/theme.rst:27:<autosummary>:1
msgid ""
":py:obj:`themes._DepthPeelingConfig <pyvista.themes._DepthPeelingConfig>`\\ "
"\\(\\)"
msgstr ""

#: ../../pyvista/doc/api/plotting/theme.rst:27:<autosummary>:1
msgid ":py:obj:`themes.DarkTheme <pyvista.themes.DarkTheme>`\\ \\(\\)"
msgstr ""

#: ../../pyvista/doc/api/plotting/theme.rst:27:<autosummary>:1
msgid ":py:obj:`themes.ParaViewTheme <pyvista.themes.ParaViewTheme>`\\ \\(\\)"
msgstr ""

#: ../../pyvista/doc/api/plotting/theme.rst:27:<autosummary>:1
msgid ":py:obj:`themes.DocumentTheme <pyvista.themes.DocumentTheme>`\\ \\(\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.AVSucdReader.rst:2
msgid "pyvista.AVSucdReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.AVSucdReader:2
msgid "AVSucdReader for .inp files."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.BMPReader.rst:2
msgid "pyvista.BMPReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.BMPReader:2
msgid "BMP Reader for .bmp files."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.BYUReader.rst:2
msgid "pyvista.BYUReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.BYUReader:2
msgid "BYU Reader for .g files."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.BaseReader.rst:2
msgid "pyvista.BaseReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:91:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.BaseReader:2
msgid "The Base Reader class."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.BaseReader:4
msgid ""
"The base functionality includes reading data from a file, and allowing "
"access to the underlying vtk reader. See :func:`pyvista.get_reader` for an "
"example using a built-in subclass."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.BaseReader:25
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.DICOMReader:21
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.GIFReader:18
msgid "**path** : :class:`python:str`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.BaseReader:12
msgid "Path of the file to read."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.BaseReader.hide_progress:2
msgid "Hide the progress bar when loading the file."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.BaseReader.path:2
msgid "Return or set the filename or directory of the reader."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.BaseReader.read:2
msgid "Read data in file."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.BaseReader.read:9
msgid "PyVista Dataset."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.BaseReader.reader:2
msgid "Return the vtk Reader object."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.BaseReader.reader:21
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:134
msgid ":obj:`pyvista.BaseReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.BaseReader.reader:9
msgid "An instance of the Reader object."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.BaseReader.show_progress:2
msgid "Show a progress bar when loading the file."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.BaseReader.show_progress:18
msgid "**msg** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.BaseReader.show_progress:8
msgid "Progress bar message. Defaults to ``\"Reading <file base name>\"``."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.BinaryMarchingCubesReader.rst:2
msgid "pyvista.BinaryMarchingCubesReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.BinaryMarchingCubesReader:2
msgid "BinaryMarchingCubes Reader for .tri files."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.CGNSReader.rst:2
msgid "pyvista.CGNSReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.CGNSReader:2
msgid "CGNS Reader for .cgns files."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.CGNSReader:4
msgid ""
"Creates a multi-block dataset and reads unstructured grids and structured "
"meshes from binary files stored in CGNS file format, with data stored at the"
" nodes, cells or faces."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.CGNSReader:8
msgid ""
"By default, all point and cell arrays are loaded as well as the boundary "
"patch. This varies from VTK's defaults. For more details, see `vtkCGNSReader"
" <https://vtk.org/doc/nightly/html/classvtkCGNSReader.html>`_"
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.CGNSReader.rst:3
msgid "Load a CGNS file.  All arrays are loaded by default."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.CGNSReader.base_array_names:2
msgid "Return the list of all base array names."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.CGNSReader.base_array_status:2
msgid "Get status of base array with name."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.CGNSReader.base_array_status:8
msgid "Base array name."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.CGNSReader.base_array_status:13
msgid "Whether reading the base array is enabled."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.CGNSReader.rst:3
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.CGNSReader.disable_all_bases:2
msgid "Disable reading all bases."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.CGNSReader.disable_all_bases:4
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.CGNSReader.enable_all_bases:4
msgid "By default only the 0th base is read."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.CGNSReader.disable_all_families:2
msgid "Disable reading all families."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.CGNSReader.distribute_blocks:2
msgid "Distribute each block in each zone across ranks."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.CGNSReader.distribute_blocks:4
msgid ""
"To make the reader disregard the piece request and read all blocks in the "
"zone, set this to ``False``. The default is ``True``."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.CGNSReader.distribute_blocks:11
msgid "If ``True``, distribute each block in each zone across ranks."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.CGNSReader.rst:3
msgid "Disable distributing blocks."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.CGNSReader.enable_all_bases:2
msgid "Enable reading all bases."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.CGNSReader.rst:3
msgid "Read all bases."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.CGNSReader.enable_all_families:2
msgid "Enable reading all families."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.CGNSReader.enable_all_families:4
msgid "By default only the 0th family is read."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.CGNSReader.family_array_names:2
msgid "Return the list of all family array names."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.CGNSReader.family_array_names:21
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.OpenFOAMReader.patch_array_names:18
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.PointCellDataSelection.cell_array_names:21
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.PointCellDataSelection.point_array_names:21
msgid ":class:`python:list`\\[:class:`python:str`]"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.CGNSReader.family_array_status:2
msgid "Get status of family array with name."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.CGNSReader.family_array_status:8
msgid "Family array name."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.CGNSReader.family_array_status:13
msgid "Whether reading the family array is enabled."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.CGNSReader.load_boundary_patch:2
msgid "Return or set loading boundary patches."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.CGNSReader.load_boundary_patch:16
msgid "VTK default is ``False``, but PyVista uses ``True``."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.CGNSReader.rst:3
msgid "Enable loading boundary patches ."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.CGNSReader.number_base_arrays:2
msgid "Return the number of base arrays."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.CGNSReader.number_family_arrays:2
msgid "Return the number of face arrays."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.CGNSReader.unsteady_pattern:2
msgid "Return or set using an unsteady pattern."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.CGNSReader.unsteady_pattern:4
msgid ""
"When set to ``True`` (default is ``False``), the reader will try to "
"determine FlowSolution_t nodes to read with a pattern matching This can be "
"useful for unsteady solutions when FlowSolutionPointers are not reliable."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.CGNSReader.rst:3
msgid "Set reading the unsteady pattern to ``True``."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.CGNSReader.vector_3d:2
msgid ""
"Return or set adding an empty dimension to vectors in case of 2D solutions."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.CGNSReader.rst:3
msgid "Set adding an empty physical dimension to vectors to ``True``."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.DEMReader.rst:2
msgid "pyvista.DEMReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.DEMReader:2
msgid "DEM Reader for .dem files."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.DICOMReader.rst:2
msgid "pyvista.DICOMReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.DICOMReader:2
msgid "DICOM Reader for reading ``.dcm`` files."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.DICOMReader:4
msgid ""
"This reader reads a single file or a path containing a several ``.dcm`` "
"files (DICOM stack)."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.DICOMReader:10
msgid ""
"Path to the single DICOM (``.dcm``) file to be opened or the directory "
"containing a stack of DICOM files."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.DICOMReader.rst:3
msgid "Read a DICOM stack."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.EnSightReader.rst:2
msgid "pyvista.EnSightReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.EnSightReader:2
msgid "EnSight Reader for .case files."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.EnSightReader.active_time_value:2
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.OpenFOAMReader.active_time_value:2
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.PVDReader.active_time_value:2
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.TimeReader.active_time_value:2
msgid "Active time or iteration value."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.EnSightReader.number_time_points:2
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.OpenFOAMReader.number_time_points:2
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.PVDReader.number_time_points:2
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.TimeReader.number_time_points:2
msgid "Return number of time points or iterations available to read."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.EnSightReader.set_active_time_point:2
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OpenFOAMReader.set_active_time_point:2
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PVDReader.set_active_time_point:2
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.TimeReader.set_active_time_point:2
msgid "Set active time or iteration by index."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.EnSightReader.set_active_time_point:21
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.EnSightReader.time_point_value:8
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OpenFOAMReader.set_active_time_point:21
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OpenFOAMReader.time_point_value:8
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PVDReader.set_active_time_point:21
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PVDReader.time_point_value:8
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.TimeReader.set_active_time_point:21
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.TimeReader.time_point_value:8
msgid "**time_point: int**"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.EnSightReader.set_active_time_point:8
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OpenFOAMReader.set_active_time_point:8
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PVDReader.set_active_time_point:8
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.TimeReader.set_active_time_point:8
msgid "Time or iteration point index for setting active time."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.EnSightReader.set_active_time_value:2
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OpenFOAMReader.set_active_time_value:2
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PVDReader.set_active_time_value:2
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.TimeReader.set_active_time_value:2
msgid "Set active time or iteration value."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.EnSightReader.set_active_time_value:21
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OpenFOAMReader.set_active_time_value:21
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PVDReader.set_active_time_value:21
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.TimeReader.set_active_time_value:21
msgid "**time_value: float**"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.EnSightReader.set_active_time_value:8
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OpenFOAMReader.set_active_time_value:8
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PVDReader.set_active_time_value:8
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.TimeReader.set_active_time_value:8
msgid "Time or iteration value to set as active."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.EnSightReader.time_point_value:2
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OpenFOAMReader.time_point_value:2
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PVDReader.time_point_value:2
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.TimeReader.time_point_value:2
msgid "Value of time point or iteration by index."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.EnSightReader.time_point_value:8
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OpenFOAMReader.time_point_value:8
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PVDReader.time_point_value:8
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.TimeReader.time_point_value:8
msgid "Time point index."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.FacetReader.rst:2
msgid "pyvista.FacetReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.FacetReader:2
msgid "Facet Reader for .facet files."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.FluentReader.rst:2
msgid "pyvista.FluentReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.FluentReader:2
msgid "FluentReader for .cas files."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.GIFReader.rst:2
msgid "pyvista.GIFReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.GIFReader:2
msgid "GIFReader for .gif files."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.GIFReader:8
msgid "Path of the GIF to read."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.GLTFReader.rst:2
msgid "pyvista.GLTFReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.GLTFReader:2
msgid "GLTFeader for .gltf and .glb files."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.HDFReader.rst:2
msgid "pyvista.HDFReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.HDFReader:2
msgid "HDFReader for .hdf files."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.HDRReader.rst:2
msgid "pyvista.HDRReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.HDRReader:2
msgid "HDRReader for .hdr files."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.JPEGReader.rst:2
msgid "pyvista.JPEGReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.JPEGReader:2
msgid "JPEG Reader for .jpeg and .jpg files."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.MFIXReader.rst:2
msgid "pyvista.MFIXReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MFIXReader:2
msgid "MFIXReader for .res files."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.MetaImageReader.rst:2
msgid "pyvista.MetaImageReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MetaImageReader:2
msgid "Meta Image Reader for .mha and .mhd files."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.MultiBlockPlot3DReader.rst:2
msgid "pyvista.MultiBlockPlot3DReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MultiBlockPlot3DReader:2
msgid "MultiBlock Plot3D Reader."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MultiBlockPlot3DReader:4
msgid ""
"The methods :meth:`add_function()` and :meth:`remove_function()` accept "
"values from :class:`Plot3DFunctionEnum`. For convenience, the values of that"
" enumeration are available as class variables, as shown below."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MultiBlockPlot3DReader:8
msgid "``MultiBlockPlot3DReader.DENSITY = Plot3DFunctionEnum.DENSITY``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MultiBlockPlot3DReader:9
msgid "``MultiBlockPlot3DReader.PRESSURE = Plot3DFunctionEnum.PRESSURE``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MultiBlockPlot3DReader:10
msgid ""
"``MultiBlockPlot3DReader.PRESSURE_COEFFICIENT = "
"Plot3DFunctionEnum.PRESSURE_COEFFICIENT``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MultiBlockPlot3DReader:11
msgid "``MultiBlockPlot3DReader.MACH = Plot3DFunctionEnum.MACH``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MultiBlockPlot3DReader:12
msgid ""
"``MultiBlockPlot3DReader.SPEED_OF_SOUND = "
"Plot3DFunctionEnum.SPEED_OF_SOUND``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MultiBlockPlot3DReader:13
msgid ""
"``MultiBlockPlot3DReader.TEMPERATURE = Plot3DFunctionEnum.TEMPERATURE``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MultiBlockPlot3DReader:14
msgid "``MultiBlockPlot3DReader.ENTHALPY = Plot3DFunctionEnum.ENTHALPY``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MultiBlockPlot3DReader:15
msgid ""
"``MultiBlockPlot3DReader.INTERNAL_ENERGY = "
"Plot3DFunctionEnum.INTERNAL_ENERGY``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MultiBlockPlot3DReader:16
msgid ""
"``MultiBlockPlot3DReader.KINETIC_ENERGY = "
"Plot3DFunctionEnum.KINETIC_ENERGY``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MultiBlockPlot3DReader:17
msgid ""
"``MultiBlockPlot3DReader.VELOCITY_MAGNITUDE = "
"Plot3DFunctionEnum.VELOCITY_MAGNITUDE``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MultiBlockPlot3DReader:18
msgid ""
"``MultiBlockPlot3DReader.STAGNATION_ENERGY = "
"Plot3DFunctionEnum.STAGNATION_ENERGY``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MultiBlockPlot3DReader:19
msgid "``MultiBlockPlot3DReader.ENTROPY = Plot3DFunctionEnum.ENTROPY``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MultiBlockPlot3DReader:20
msgid "``MultiBlockPlot3DReader.SWIRL = Plot3DFunctionEnum.SWIRL``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MultiBlockPlot3DReader:21
msgid "``MultiBlockPlot3DReader.VELOCITY = Plot3DFunctionEnum.VELOCITY``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MultiBlockPlot3DReader:22
msgid "``MultiBlockPlot3DReader.VORTICITY = Plot3DFunctionEnum.VORTICITY``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MultiBlockPlot3DReader:23
msgid "``MultiBlockPlot3DReader.MOMENTUM = Plot3DFunctionEnum.MOMENTUM``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MultiBlockPlot3DReader:24
msgid ""
"``MultiBlockPlot3DReader.PRESSURE_GRADIENT = "
"Plot3DFunctionEnum.PRESSURE_GRADIENT``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MultiBlockPlot3DReader:25
msgid ""
"``MultiBlockPlot3DReader.STRAIN_RATE = Plot3DFunctionEnum.STRAIN_RATE``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MultiBlockPlot3DReader:26
msgid ""
"``MultiBlockPlot3DReader.VORTICITY_MAGNITUDE = "
"Plot3DFunctionEnum.VORTICITY_MAGNITUDE``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MultiBlockPlot3DReader.add_function:2
msgid "Specify additional functions to compute."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MultiBlockPlot3DReader.add_function:4
msgid ""
"The available functions are enumerated in :class:`Plot3DFunctionEnum`. The "
"members of this enumeration are most easily accessed by their aliases as "
"class variables."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MultiBlockPlot3DReader.add_function:7
msgid ""
"Multiple functions may be requested by calling this method multiple times."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MultiBlockPlot3DReader.add_function:22
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MultiBlockPlot3DReader.remove_function:22
msgid "**value** : :class:`python:int` or :obj:`Plot3DFunctionEnum`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MultiBlockPlot3DReader.add_function:21
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MultiBlockPlot3DReader.remove_function:21
msgid "python:int or Plot3DFunctionEnum"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MultiBlockPlot3DReader.add_function:12
msgid "The function to add."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MultiBlockPlot3DReader.add_q_files:2
msgid "Add q file(s)."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MultiBlockPlot3DReader.add_q_files:21
msgid ""
"**files** : :class:`python:str` or :obj:`Iterable`\\(:class:`python:str`)"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MultiBlockPlot3DReader.add_q_files:20
msgid "python:str or Iterable(python:str)"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MultiBlockPlot3DReader.add_q_files:8
msgid "Solution file or files to add."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.MultiBlockPlot3DReader.auto_detect_format:2
msgid "Whether to try to automatically detect format such as byte order, etc."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.MultiBlockPlot3DReader.gamma:2
msgid "Ratio of specific heats."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.MultiBlockPlot3DReader.preserve_intermediate_functions:2
msgid ""
"When ``True`` (default), intermediate computed quantities will be preserved."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.MultiBlockPlot3DReader.preserve_intermediate_functions:4
msgid ""
"For example, if ``VelocityMagnitude`` is enabled, but not ``Velocity``, the "
"reader still needs to compute ``Velocity``. If "
"`preserve_intermediate_functions` is ``False``, then the output will not "
"have ``Velocity`` array, only the requested ``VelocityMagnitude``."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.MultiBlockPlot3DReader.preserve_intermediate_functions:8
msgid ""
"This is useful to avoid using up memory for arrays that are not relevant for"
" the analysis."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.MultiBlockPlot3DReader.r_gas_constant:2
msgid "Gas constant."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MultiBlockPlot3DReader.remove_all_functions:2
msgid "Remove all functions from list of functions to compute."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MultiBlockPlot3DReader.remove_function:2
msgid "Remove one function from list of functions to compute."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MultiBlockPlot3DReader.remove_function:4
msgid ""
"For details on the types of accepted values, see :meth:``add_function``."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.MultiBlockPlot3DReader.remove_function:9
msgid "The function to remove."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.NIFTIReader.rst:2
msgid "pyvista.NIFTIReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.NIFTIReader:2
msgid "NIFTI Reader for .nii and .nii.gz files."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.NRRDReader.rst:2
msgid "pyvista.NRRDReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.NRRDReader:2
msgid "NRRDReader for .nrrd and .nhdr files."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.OBJReader.rst:2
msgid "pyvista.OBJReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OBJReader:2
msgid "OBJ Reader for reading .obj files."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.OpenFOAMReader.rst:2
msgid "pyvista.OpenFOAMReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OpenFOAMReader:2
msgid "OpenFOAM Reader for .foam files."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OpenFOAMReader:4
msgid ""
"By default, pyvista enables all patch arrays.  This is a deviation from the "
"vtk default."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.OpenFOAMReader.all_patch_arrays_status:2
msgid "Status of reading all patch arrays."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.OpenFOAMReader.all_patch_arrays_status:18
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.PointCellDataSelection.all_cell_arrays_status:21
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.PointCellDataSelection.all_point_arrays_status:21
msgid ""
":class:`python:dict`\\[:class:`python:str`, :ref:`bool <python:bltin-"
"boolean-values>`]"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.OpenFOAMReader.all_patch_arrays_status:9
msgid "dict key is the patch name and the value is whether it will be read."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.OpenFOAMReader.cell_to_point_creation:2
msgid "Whether cell data is translated to point data when read."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.OpenFOAMReader.cell_to_point_creation:9
msgid "If ``True``, translate cell data to point data."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.OpenFOAMReader.cell_to_point_creation:18
msgid "When ``True``, cell and point data arrays will have duplicate names."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.OpenFOAMReader.decompose_polyhedra:2
msgid "Whether polyhedra are to be decomposed when read."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.OpenFOAMReader.decompose_polyhedra:9
msgid "If ``True``, decompose polyhedra into tetrahedra and pyramids."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OpenFOAMReader.disable_all_patch_arrays:2
msgid "Disable reading of all patch arrays."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OpenFOAMReader.disable_patch_array:2
msgid "Disable reading of patch array."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OpenFOAMReader.disable_patch_array:8
msgid "Which patch array to disable."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OpenFOAMReader.enable_all_patch_arrays:2
msgid "Enable reading of all patch arrays."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OpenFOAMReader.enable_patch_array:2
msgid "Enable reading of patch array."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OpenFOAMReader.enable_patch_array:8
msgid "Which patch array to enable."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.OpenFOAMReader.number_patch_arrays:2
msgid "Return number of patch arrays in dataset."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.OpenFOAMReader.patch_array_names:2
msgid "Names of patch arrays in a list."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OpenFOAMReader.patch_array_status:2
msgid "Return status of reading patch array."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OpenFOAMReader.patch_array_status:8
msgid "Which patch array to report status."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OpenFOAMReader.patch_array_status:11
msgid "**Returns**"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OpenFOAMReader.patch_array_status:14
msgid "**-------**"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OpenFOAMReader.patch_array_status:27
msgid "**bool**"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.OpenFOAMReader.patch_array_status:17
msgid "Whether the patch with the given name is to be read."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.OpenFOAMReader.skip_zero_time:2
msgid "Indicate whether or not to ignore the '/0' time directory."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.OpenFOAMReader.skip_zero_time:9
msgid "If ``True``, ignore the '/0' time directory."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.PLYReader.rst:2
msgid "pyvista.PLYReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PLYReader:2
msgid "PLY Reader for reading .ply files."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.PNGReader.rst:2
msgid "pyvista.PNGReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PNGReader:2
msgid "PNGReader for .png files."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.PNMReader.rst:2
msgid "pyvista.PNMReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PNMReader:2
msgid "PNMReader for .pnm files."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.POpenFOAMReader.rst:2
msgid "pyvista.POpenFOAMReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.POpenFOAMReader:2
msgid "Parallel OpenFOAM Reader for .foam files."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.POpenFOAMReader:4
msgid ""
"Can read parallel-decomposed mesh information and time dependent data. This "
"reader can be used for serial generated data, parallel reconstructed data, "
"and decomposed data."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.POpenFOAMReader.case_type:2
msgid "Indicate whether decomposed mesh or reconstructed mesh should be read."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.POpenFOAMReader.case_type:9
msgid ""
"If ``'reconstructed'``, reconstructed mesh should be read. If "
"``'decomposed'``, decomposed mesh should be read."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.POpenFOAMReader.case_type:23
msgid ":obj:`ValueError`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.POpenFOAMReader.case_type:18
msgid "If the value is not in ['reconstructed', 'decomposed']"
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.PTSReader.rst:2
msgid "pyvista.PTSReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PTSReader:2
msgid "PTSReader for .pts files."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.PVDReader.rst:2
msgid "pyvista.PVDReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PVDReader:2
msgid "PVD Reader for .pvd files."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.PVDReader.active_datasets:2
msgid "Return all active datasets."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.PVDReader.active_datasets:21
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.PVDReader.datasets:21
msgid ":class:`python:list`\\[:obj:`pyvista.PVDDataSet`]"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.PVDReader.active_readers:2
msgid "Return the active readers."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.PVDReader.active_readers:21
msgid ":class:`python:list`\\[:obj:`pyvista.BaseReader`]"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.PVDReader.datasets:2
msgid "Return all datasets."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PVDReader.read:2
msgid "Read data from PVD timepoint."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PVDReader.read:4
msgid "Overrides :func:`pyvista.BaseReader.read`."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.PVDReader.reader:2
msgid "Return the PVDReader."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.PVDReader.reader:5
msgid "This Reader does not have an underlying vtk Reader."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.PVDReader.time_values:2
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.TimeReader.time_values:2
msgid "All time or iteration values."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.PVDReader.time_values:21
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.TimeReader.time_values:21
msgid ":class:`python:list`\\[:class:`python:float`]"
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.Plot3DMetaReader.rst:2
msgid "pyvista.Plot3DMetaReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.Plot3DMetaReader:2
msgid "Plot3DMeta Reader for .p3d files."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.PointCellDataSelection.rst:2
msgid "pyvista.PointCellDataSelection"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:91:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PointCellDataSelection:2
msgid "Mixin for readers that support data array selections."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.PointCellDataSelection.all_cell_arrays_status:2
msgid "Return the status of all cell arrays."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.PointCellDataSelection.all_point_arrays_status:2
msgid "Return the status of all point arrays."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.PointCellDataSelection.cell_array_names:2
msgid "Return the list of all cell array names."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PointCellDataSelection.cell_array_status:2
msgid "Get status of cell array with name."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PointCellDataSelection.cell_array_status:8
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PointCellDataSelection.disable_cell_array:8
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PointCellDataSelection.enable_cell_array:8
msgid "Cell array name."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PointCellDataSelection.cell_array_status:13
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PointCellDataSelection.point_array_status:13
msgid "Whether reading the cell array is enabled."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PointCellDataSelection.disable_all_cell_arrays:2
msgid "Disable all cell arrays."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PointCellDataSelection.disable_all_point_arrays:2
msgid "Disable all point arrays."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PointCellDataSelection.disable_cell_array:2
msgid "Disable cell array with name."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PointCellDataSelection.disable_point_array:2
msgid "Disable point array with name."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PointCellDataSelection.disable_point_array:8
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PointCellDataSelection.enable_point_array:8
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PointCellDataSelection.point_array_status:8
msgid "Point array name."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PointCellDataSelection.enable_all_cell_arrays:2
msgid "Enable all cell arrays."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PointCellDataSelection.enable_all_point_arrays:2
msgid "Enable all point arrays."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PointCellDataSelection.enable_cell_array:2
msgid "Enable cell array with name."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PointCellDataSelection.enable_point_array:2
msgid "Enable point array with name."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.PointCellDataSelection.number_cell_arrays:2
msgid "Return the number of cell arrays."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.PointCellDataSelection.number_point_arrays:2
msgid "Return the number of point arrays."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.PointCellDataSelection.point_array_names:2
msgid "Return the list of all point array names."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.PointCellDataSelection.point_array_status:2
msgid "Get status of point array with name."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.SLCReader.rst:2
msgid "pyvista.SLCReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.SLCReader:2
msgid "SLCReader for .slc files."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.STLReader.rst:2
msgid "pyvista.STLReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.STLReader:2
msgid "STL Reader for .stl files."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.SegYReader.rst:2
msgid "pyvista.SegYReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.SegYReader:2
msgid "SegYReader for .sgy and .segy files."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.TIFFReader.rst:2
msgid "pyvista.TIFFReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.TIFFReader:2
msgid "TIFFReader for .tif and .tiff files."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.TecplotReader.rst:2
msgid "pyvista.TecplotReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.TecplotReader:2
msgid "Tecplot Reader for ascii .dat files."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.TimeReader.rst:2
msgid "pyvista.TimeReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:91:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.TimeReader:2
msgid "Abstract class for readers supporting time."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.VTKDataSetReader.rst:2
msgid "pyvista.VTKDataSetReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.VTKDataSetReader:2
msgid "VTK Data Set Reader for .vtk files."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.VTKDataSetReader:16
msgid ""
"This reader calls ``ReadAllScalarsOn``, ``ReadAllColorScalarsOn``, "
"``ReadAllNormalsOn``, ``ReadAllTCoordsOn``, ``ReadAllVectorsOn``, and "
"``ReadAllFieldsOn`` on the underlying ``vtkDataSetReader``."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.VTKPDataSetReader.rst:2
msgid "pyvista.VTKPDataSetReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.VTKPDataSetReader:2
msgid "Parallel VTK Data Set Reader for .pvtk files."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.XMLImageDataReader.rst:2
msgid "pyvista.XMLImageDataReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.XMLImageDataReader:2
msgid "XML Image Data Reader for .vti files."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.XMLMultiBlockDataReader.rst:2
msgid "pyvista.XMLMultiBlockDataReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.XMLMultiBlockDataReader:2
msgid "XML MultiBlock Data Reader for .vtm or .vtmb files."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.XMLPImageDataReader.rst:2
msgid "pyvista.XMLPImageDataReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.XMLPImageDataReader:2
msgid "Parallel XML Image Data Reader for .pvti files."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.XMLPRectilinearGridReader.rst:2
msgid "pyvista.XMLPRectilinearGridReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.XMLPRectilinearGridReader:2
msgid "Parallel XML RectilinearGrid Reader for .pvtr files."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.XMLPUnstructuredGridReader.rst:2
msgid "pyvista.XMLPUnstructuredGridReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.XMLPUnstructuredGridReader:2
msgid "Parallel XML UnstructuredGrid Reader for .pvtu files."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.XMLPolyDataReader.rst:2
msgid "pyvista.XMLPolyDataReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.XMLPolyDataReader:2
msgid "XML PolyData Reader for .vtp files."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.XMLRectilinearGridReader.rst:2
msgid "pyvista.XMLRectilinearGridReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.XMLRectilinearGridReader:2
msgid "XML RectilinearGrid Reader for .vtr files."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.XMLStructuredGridReader.rst:2
msgid "pyvista.XMLStructuredGridReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.XMLStructuredGridReader:2
msgid "XML StructuredGrid Reader for .vts files."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.XMLUnstructuredGridReader.rst:2
msgid "pyvista.XMLUnstructuredGridReader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.XMLUnstructuredGridReader:2
msgid "XML UnstructuredGrid Reader for .vtu files."
msgstr ""

#: ../../pyvista/doc/api/readers/_autosummary/pyvista.get_reader.rst:2
msgid "get\\_reader"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:18:<autosummary>:1
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:2
msgid "Get a reader for fine-grained control of reading data files."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:4
msgid "Supported file types and Readers:"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:7
msgid "File Extension"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:7
msgid "Class"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:9
msgid "``.bmp``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:9
msgid ":class:`pyvista.BMPReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:11
msgid "``.cas``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:11
msgid ":class:`pyvista.FluentReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:13
msgid "``.case``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:13
msgid ":class:`pyvista.EnSightReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:15
msgid "``.cgns``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:15
msgid ":class:`pyvista.CGNSReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:17
msgid "``.dat``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:17
msgid ":class:`pyvista.TecplotReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:19
msgid "``.dcm``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:19
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:37
msgid ":class:`pyvista.DICOMReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:21
msgid "``.dem``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:21
msgid ":class:`pyvista.DEMReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:23
msgid "``.facet``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:23
msgid ":class:`pyvista.FacetReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:25
msgid "``.foam``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:25
msgid ":class:`pyvista.POpenFOAMReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:27
msgid "``.g``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:27
msgid ":class:`pyvista.BYUReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:29
msgid "``.gif``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:29
msgid ":class:`pyvista.GIFReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:31
msgid "``.glb``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:31
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:33
msgid ":class:`pyvista.GLTFReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:33
msgid "``.gltf``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:35
msgid "``.hdf``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:35
msgid ":class:`pyvista.HDFReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:37
msgid "``.img``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:39
msgid "``.inp``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:39
msgid ":class:`pyvista.AVSucdReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:41
msgid "``.jpg``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:41
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:43
msgid ":class:`pyvista.JPEGReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:43
msgid "``.jpeg``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:45
msgid "``.hdr``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:45
msgid ":class:`pyvista.HDRReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:47
msgid "``.mha``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:47
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:49
msgid ":class:`pyvista.MetaImageReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:49
msgid "``.mhd``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:51
msgid "``.nii``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:51
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:53
msgid ":class:`pyvista.NIFTIReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:53
msgid "``.nii.gz``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:55
msgid "``.nhdr``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:55
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:57
msgid ":class:`pyvista.NRRDReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:57
msgid "``.nrrd``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:59
msgid "``.obj``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:59
msgid ":class:`pyvista.OBJReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:61
msgid "``.p3d``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:61
msgid ":class:`pyvista.Plot3DMetaReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:63
msgid "``.ply``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:63
msgid ":class:`pyvista.PLYReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:65
msgid "``.png``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:65
msgid ":class:`pyvista.PNGReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:67
msgid "``.pnm``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:67
msgid ":class:`pyvista.PNMReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:69
msgid "``.pts``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:69
msgid ":class:`pyvista.PTSReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:71
msgid "``.pvd``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:71
msgid ":class:`pyvista.PVDReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:73
msgid "``.pvti``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:73
msgid ":class:`pyvista.XMLPImageDataReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:75
msgid "``.pvtk``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:75
msgid ":class:`pyvista.VTKPDataSetReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:77
msgid "``.pvtr``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:77
msgid ":class:`pyvista.XMLPRectilinearGridReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:79
msgid "``.pvtu``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:79
msgid ":class:`pyvista.XMLPUnstructuredGridReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:81
msgid "``.res``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:81
msgid ":class:`pyvista.MFIXReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:83
msgid "``.segy``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:83
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:85
msgid ":class:`pyvista.SegYReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:85
msgid "``.sgy``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:87
msgid "``.slc``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:87
msgid ":class:`pyvista.SLCReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:89
msgid "``.stl``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:89
msgid ":class:`pyvista.STLReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:91
msgid "``.tif``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:91
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:93
msgid ":class:`pyvista.TIFFReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:93
msgid "``.tiff``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:95
msgid "``.tri``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:95
msgid ":class:`pyvista.BinaryMarchingCubesReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:97
msgid "``.vti``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:97
msgid ":class:`pyvista.XMLImageDataReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:99
msgid "``.vtk``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:99
msgid ":class:`pyvista.VTKDataSetReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:101
msgid "``.vtm``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:101
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:103
msgid ":class:`pyvista.XMLMultiBlockDataReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:103
msgid "``.vtmb``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:105
msgid "``.vtp``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:105
msgid ":class:`pyvista.XMLPolyDataReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:107
msgid "``.vtr``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:107
msgid ":class:`pyvista.XMLRectilinearGridReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:109
msgid "``.vts``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:109
msgid ":class:`pyvista.XMLStructuredGridReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:111
msgid "``.vtu``"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:111
msgid ":class:`pyvista.XMLUnstructuredGridReader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_legacy:12
#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:117
msgid "The string path to the file to read."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:120
msgid "An extension to force a specific reader to be chosen."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.get_reader:125
msgid ""
"A subclass of :class:`pyvista.BaseReader` is returned based on file type."
msgstr ""

#: ../../pyvista/doc/api/readers/enums.rst:2
msgid "Reader Enumerations"
msgstr ""

#: ../../pyvista/doc/api/readers/enums.rst:7
msgid "Plot3DFunctionEnum"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.Plot3DFunctionEnum:2
msgid ""
"An enumeration for the functions used in :class:`MultiBlockPlot3DReader`."
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.Plot3DFunctionEnum:0
msgid "Member Type"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.Plot3DFunctionEnum:1
msgid ":py:class:`int`"
msgstr ""

#: ../../pyvista/pyvista/utilities/reader.pydocstring of
#: pyvista.utilities.reader.Plot3DFunctionEnum:1
msgid "Valid values are as follows:"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:4
msgid "Readers"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:5
msgid ""
"PyVista provides class based readers to have more control over reading data "
"files.  These classes allows for more fine-grained control over reading "
"datasets from files.  See :func:`pyvista.get_reader` for a list of file "
"types supported."
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:10
msgid ""
"Also, see :ref:`reader_example` for a full example using reader classes."
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:18:<autosummary>:1
msgid ":py:obj:`get_reader <pyvista.get_reader>`\\ \\(filename\\[\\, force\\_ext\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:20
msgid "Reader Classes"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ":py:obj:`AVSucdReader <pyvista.AVSucdReader>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ":py:obj:`BMPReader <pyvista.BMPReader>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ":py:obj:`BYUReader <pyvista.BYUReader>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ""
":py:obj:`BinaryMarchingCubesReader <pyvista.BinaryMarchingCubesReader>`\\ "
"\\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ":py:obj:`CGNSReader <pyvista.CGNSReader>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ":py:obj:`DEMReader <pyvista.DEMReader>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ":py:obj:`DICOMReader <pyvista.DICOMReader>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ":py:obj:`EnSightReader <pyvista.EnSightReader>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ":py:obj:`FacetReader <pyvista.FacetReader>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ":py:obj:`FluentReader <pyvista.FluentReader>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ":py:obj:`GIFReader <pyvista.GIFReader>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ":py:obj:`GLTFReader <pyvista.GLTFReader>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ":py:obj:`HDFReader <pyvista.HDFReader>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ":py:obj:`HDRReader <pyvista.HDRReader>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ":py:obj:`JPEGReader <pyvista.JPEGReader>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ":py:obj:`MFIXReader <pyvista.MFIXReader>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ":py:obj:`MetaImageReader <pyvista.MetaImageReader>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ""
":py:obj:`MultiBlockPlot3DReader <pyvista.MultiBlockPlot3DReader>`\\ "
"\\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ":py:obj:`NIFTIReader <pyvista.NIFTIReader>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ":py:obj:`NRRDReader <pyvista.NRRDReader>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ":py:obj:`OBJReader <pyvista.OBJReader>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ":py:obj:`OpenFOAMReader <pyvista.OpenFOAMReader>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ":py:obj:`PLYReader <pyvista.PLYReader>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ":py:obj:`PNGReader <pyvista.PNGReader>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ":py:obj:`PNMReader <pyvista.PNMReader>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ":py:obj:`POpenFOAMReader <pyvista.POpenFOAMReader>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ":py:obj:`PTSReader <pyvista.PTSReader>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ":py:obj:`PVDReader <pyvista.PVDReader>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ""
":py:obj:`Plot3DMetaReader <pyvista.Plot3DMetaReader>`\\ \\(\\*args\\, "
"\\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ":py:obj:`SLCReader <pyvista.SLCReader>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ":py:obj:`STLReader <pyvista.STLReader>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ":py:obj:`SegYReader <pyvista.SegYReader>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ":py:obj:`TIFFReader <pyvista.TIFFReader>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ":py:obj:`TecplotReader <pyvista.TecplotReader>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ""
":py:obj:`VTKDataSetReader <pyvista.VTKDataSetReader>`\\ \\(\\*args\\, "
"\\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ""
":py:obj:`VTKPDataSetReader <pyvista.VTKPDataSetReader>`\\ \\(\\*args\\, "
"\\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ""
":py:obj:`XMLImageDataReader <pyvista.XMLImageDataReader>`\\ \\(\\*args\\, "
"\\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ""
":py:obj:`XMLMultiBlockDataReader <pyvista.XMLMultiBlockDataReader>`\\ "
"\\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ""
":py:obj:`XMLPImageDataReader <pyvista.XMLPImageDataReader>`\\ \\(\\*args\\, "
"\\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ""
":py:obj:`XMLPRectilinearGridReader <pyvista.XMLPRectilinearGridReader>`\\ "
"\\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ""
":py:obj:`XMLPUnstructuredGridReader <pyvista.XMLPUnstructuredGridReader>`\\ "
"\\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ""
":py:obj:`XMLPolyDataReader <pyvista.XMLPolyDataReader>`\\ \\(\\*args\\, "
"\\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ""
":py:obj:`XMLRectilinearGridReader <pyvista.XMLRectilinearGridReader>`\\ "
"\\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ""
":py:obj:`XMLStructuredGridReader <pyvista.XMLStructuredGridReader>`\\ "
"\\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:70:<autosummary>:1
msgid ""
":py:obj:`XMLUnstructuredGridReader <pyvista.XMLUnstructuredGridReader>`\\ "
"\\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:72
msgid "Inherited Classes"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:74
msgid ""
"The :class:`pyvista.BaseReader` is inherited by all subreaders.  It has the "
"basic functionality of all readers to set filename and read the data."
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:78
msgid ""
"The :class:`PointCellDataSelection` is inherited by readers that support "
"inspecting and setting data related to point and cell arrays."
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:81
msgid ""
"The :class:`TimeReader` is inherited by readers that support inspecting and "
"setting time or iterations for reading."
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:91:<autosummary>:1
msgid ":py:obj:`BaseReader <pyvista.BaseReader>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:91:<autosummary>:1
msgid ":py:obj:`PointCellDataSelection <pyvista.PointCellDataSelection>`\\ \\(\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:91:<autosummary>:1
msgid ":py:obj:`TimeReader <pyvista.TimeReader>`\\ \\(\\)"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:93
msgid "Enumerations"
msgstr ""

#: ../../pyvista/doc/api/readers/index.rst:95
msgid "Enumerations are available to simplify inputs to certain readers."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Arrow.rst:2
msgid "Arrow"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:2
msgid "Create an arrow."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:8
msgid "**start** : :term:`python:iterable`, default: (0.0, 0.0, 0.0)"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:7
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Disc:10
msgid "python:iterable, default: (0.0, 0.0, 0.0)"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:8
msgid "Start location in ``[x, y, z]``."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:11
msgid "**direction** : :term:`python:iterable`, default: (1.0, 0.0, 0.0)"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:10
msgid "python:iterable, default: (1.0, 0.0, 0.0)"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:11
msgid "Direction the arrow points to in ``[x, y, z]``."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:14
msgid "**tip_length** : :class:`python:float`, default: 0.25"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:13
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Disc:13
msgid "python:float, default: 0.25"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:17
msgid "**tip_radius** : :class:`python:float`, default: 0.1"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:17
msgid "Radius of the tip."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:20
msgid "**tip_resolution** : :class:`python:int`, default: 20"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:19
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:25
msgid "python:int, default: 20"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:20
msgid "Number of faces around the tip."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:23
msgid "**shaft_radius** : :class:`python:float`, default: 0.05"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:22
msgid "python:float, default: 0.05"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:23
msgid "Radius of the shaft."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:26
msgid "**shaft_resolution** : :class:`python:int`, default: 20"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:26
msgid "Number of faces around the shaft."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:30
msgid ""
"**scale** : :class:`python:float` or :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:29
msgid "python:float or python:str, optional"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:29
msgid ""
"Scale factor of the entire object, defaults to a scale of 1. ``'auto'`` "
"scales to length of direction array."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Arrow:35
msgid "Arrow mesh."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Arrow.rst:3
msgid "Plot a default arrow."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Box.rst:2
msgid "Box"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Box:2
msgid "Create a box with solid faces for the given bounds."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Box:9
msgid ""
"**bounds** : :obj:`Sequence`, default: (-1.0, 1.0, -1.0, 1.0, -1.0, 1.0)"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Box:8
msgid "Sequence, default: (-1.0, 1.0, -1.0, 1.0, -1.0, 1.0)"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Box:8
msgid ""
"Specify the bounding box of the cube. ``(xMin, xMax, yMin, yMax, zMin, "
"zMax)``."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Box:12
msgid "**level** : :class:`python:int`, default: 0"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Box:12
msgid "Level of subdivision of the faces."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Box:16
msgid ""
"**quads** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:True`"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Box:15
msgid ""
"Flag to tell the source to generate either a quad or two triangle for a set "
"of four points."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Box:21
msgid "Mesh of the box."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Box.rst:3
msgid "Create a box with subdivision ``level=2``."
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Circle:2
msgid "Create a single PolyData circle defined by radius in the XY plane."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Circle:8
msgid "Radius of circle."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Circle:11
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArc:20
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArcFromNormal:14
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cylinder:21
msgid "**resolution** : :class:`python:int`, default: 100"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Circle:11
msgid "Number of points on the circle."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Circle:16
msgid "Circle mesh."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.CircularArc.rst:2
msgid "CircularArc"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArc:2
msgid "Create a circular arc defined by two endpoints and a center."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArc:10
msgid "**pointa** : :obj:`Sequence`"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArc:9
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArc:12
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArc:15
msgid "Sequence"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArc:10
msgid "Position of the first end point."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArc:13
msgid "**pointb** : :obj:`Sequence`"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArc:13
msgid "Position of the other end point."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArc:16
msgid "**center** : :obj:`Sequence`"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArc:16
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArcFromNormal:10
msgid "Center of the circle that defines the arc."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArc:19
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArcFromNormal:13
msgid ""
"The number of segments of the polyline that draws the arc. Resolution of 1 "
"will just create a line."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArc:23
msgid ""
"By default the arc spans the shortest angular sector between ``pointa`` and "
"``pointb``."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArc:26
msgid ""
"By setting this to ``True``, the longest angular sector is used instead "
"(i.e. the negative coterminal angle to the shortest one)."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArc:33
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArcFromNormal:31
msgid "Circular arc mesh."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.CircularArc.rst:3
msgid "Create a quarter arc centered at the origin in the xy plane."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.CircularArcFromNormal.rst:2
msgid "CircularArcFromNormal"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArcFromNormal:2
msgid ""
"Create a circular arc defined by normal to the plane of the arc, and an "
"angle."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArcFromNormal:10
msgid "**center** : :term:`python:sequence`"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArcFromNormal:22
msgid "**polar** : :term:`python:sequence`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CircularArcFromNormal:25
msgid ""
"Arc length (in degrees) beginning at the polar vector.  The direction is "
"counterclockwise.  By default it is 90."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.CircularArcFromNormal.rst:3
msgid "Quarter arc centered at the origin in the xy plane."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Color.rst:2
msgid "pyvista.Color"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:78:<autosummary>:1
#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color:2
msgid ""
"Helper class to convert between different color representations used in the "
"pyvista library."
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color:4
msgid ""
"Many pyvista methods accept :data:`color_like` parameters. This helper class"
" is used to convert such parameters to the necessary format, used by "
"underlying (VTK) methods. Any color name (``str``), hex string (``str``) or "
"RGB(A) sequence (``tuple``, ``list`` or ``numpy.ndarray`` of ``int`` or "
"``float``) is considered a :data:`color_like` parameter and can be converted"
" by this class. See :attr:`Color.name` for a list of supported color names."
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color:15
msgid ""
"Either a string, RGB sequence, RGBA sequence, or hex color string. RGB(A) "
"sequences should either be provided as floats between 0 and 1 or as ints "
"between 0 and 255. Hex color strings can contain optional ``'#'`` or "
"``'0x'`` prefixes. If no opacity is provided, the ``default_opacity`` will "
"be used. If ``color`` is ``None``, the ``default_color`` is used instead. "
"The following examples all denote the color 'white':"
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color:23
msgid "``'white'``"
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color:24
msgid "``'w'``"
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color:25
msgid "``[1.0, 1.0, 1.0]``"
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color:26
msgid "``[255, 255, 255, 255]``"
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color:27
msgid "``'#FFFFFF'``"
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color:38
msgid ""
"**opacity** : :class:`python:int`, :class:`python:float` or "
":class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color:37
#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color:55
msgid "python:int, python:float or python:str, optional"
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color:30
msgid ""
"Opacity of the represented color. Overrides any opacity associated with the "
"provided ``color``. Allowed opacities are floats between 0 and 1, ints "
"between 0 and 255 or hexadecimal strings of length 2 (plus the length of the"
" optional prefix). The following examples all denote a fully opaque color:"
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color:36
msgid "``1.0``"
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color:37
msgid "``255``"
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color:38
msgid "``'#ff'``"
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color:43
msgid "**default_color** : :obj:`color_like`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color:41
msgid ""
"Default color to use when ``color`` is ``None``. If this value is ``None``, "
"then defaults to the global theme color. Format is identical to ``color``."
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color:56
msgid ""
"**default_opacity** : :class:`python:int`, :class:`python:float` or "
":class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color:46
msgid ""
"Default opacity of the represented color. Used when ``color`` does not "
"specify an opacity and ``opacity`` is ``None``. Format is identical to "
"``opacity``."
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color:60
msgid ""
"The internally used representation is an integer RGBA sequence (values "
"between 0 and 255). This might however change in future releases."
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color:63
msgid ""
"<details><summary>Refer to the table below for a list of supported "
"colors.</summary>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:6
#: ../../pyvista/doc/api/utilities/colors.rst:6
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:6
#: ../../pyvista/doc/api/utilities/colors.rst:6
msgid "Name"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:7
#: ../../pyvista/doc/api/utilities/colors.rst:7
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:7
#: ../../pyvista/doc/api/utilities/colors.rst:7
msgid "Hex value"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:10
#: ../../pyvista/doc/api/utilities/colors.rst:10
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:10
#: ../../pyvista/doc/api/utilities/colors.rst:10
msgid "``\"aliceblue\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:11
#: ../../pyvista/doc/api/utilities/colors.rst:11
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:11
#: ../../pyvista/doc/api/utilities/colors.rst:11
msgid "``#F0F8FF``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:12
#: ../../pyvista/doc/api/utilities/colors.rst:12
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:12
#: ../../pyvista/doc/api/utilities/colors.rst:12
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#F0F8FF;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:16
#: ../../pyvista/doc/api/utilities/colors.rst:16
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:16
#: ../../pyvista/doc/api/utilities/colors.rst:16
msgid "``\"antiquewhite\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:17
#: ../../pyvista/doc/api/utilities/colors.rst:17
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:17
#: ../../pyvista/doc/api/utilities/colors.rst:17
msgid "``#FAEBD7``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:18
#: ../../pyvista/doc/api/utilities/colors.rst:18
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:18
#: ../../pyvista/doc/api/utilities/colors.rst:18
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#FAEBD7;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:22
#: ../../pyvista/doc/api/utilities/colors.rst:22
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:22
#: ../../pyvista/doc/api/utilities/colors.rst:22
msgid "``\"aquamarine\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:23
#: ../../pyvista/doc/api/utilities/colors.rst:23
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:23
#: ../../pyvista/doc/api/utilities/colors.rst:23
msgid "``#7FFFD4``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:24
#: ../../pyvista/doc/api/utilities/colors.rst:24
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:24
#: ../../pyvista/doc/api/utilities/colors.rst:24
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#7FFFD4;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:28
#: ../../pyvista/doc/api/utilities/colors.rst:28
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:28
#: ../../pyvista/doc/api/utilities/colors.rst:28
msgid "``\"azure\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:29
#: ../../pyvista/doc/api/utilities/colors.rst:29
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:29
#: ../../pyvista/doc/api/utilities/colors.rst:29
msgid "``#F0FFFF``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:30
#: ../../pyvista/doc/api/utilities/colors.rst:30
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:30
#: ../../pyvista/doc/api/utilities/colors.rst:30
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#F0FFFF;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:34
#: ../../pyvista/doc/api/utilities/colors.rst:34
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:34
#: ../../pyvista/doc/api/utilities/colors.rst:34
msgid "``\"beige\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:35
#: ../../pyvista/doc/api/utilities/colors.rst:35
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:35
#: ../../pyvista/doc/api/utilities/colors.rst:35
msgid "``#F5F5DC``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:36
#: ../../pyvista/doc/api/utilities/colors.rst:36
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:36
#: ../../pyvista/doc/api/utilities/colors.rst:36
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#F5F5DC;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:40
#: ../../pyvista/doc/api/utilities/colors.rst:40
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:40
#: ../../pyvista/doc/api/utilities/colors.rst:40
msgid "``\"bisque\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:41
#: ../../pyvista/doc/api/utilities/colors.rst:41
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:41
#: ../../pyvista/doc/api/utilities/colors.rst:41
msgid "``#FFE4C4``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:42
#: ../../pyvista/doc/api/utilities/colors.rst:42
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:42
#: ../../pyvista/doc/api/utilities/colors.rst:42
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#FFE4C4;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:46
#: ../../pyvista/doc/api/utilities/colors.rst:46
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:46
#: ../../pyvista/doc/api/utilities/colors.rst:46
msgid "``\"black\"`` or ``\"k\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:47
#: ../../pyvista/doc/api/utilities/colors.rst:47
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:47
#: ../../pyvista/doc/api/utilities/colors.rst:47
msgid "``#000000``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:48
#: ../../pyvista/doc/api/utilities/colors.rst:48
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:48
#: ../../pyvista/doc/api/utilities/colors.rst:48
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#000000;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:52
#: ../../pyvista/doc/api/utilities/colors.rst:52
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:52
#: ../../pyvista/doc/api/utilities/colors.rst:52
msgid "``\"blanchedalmond\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:53
#: ../../pyvista/doc/api/utilities/colors.rst:53
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:53
#: ../../pyvista/doc/api/utilities/colors.rst:53
msgid "``#FFEBCD``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:54
#: ../../pyvista/doc/api/utilities/colors.rst:54
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:54
#: ../../pyvista/doc/api/utilities/colors.rst:54
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#FFEBCD;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:58
#: ../../pyvista/doc/api/utilities/colors.rst:58
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:58
#: ../../pyvista/doc/api/utilities/colors.rst:58
msgid "``\"blue\"`` or ``\"b\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:59
#: ../../pyvista/doc/api/utilities/colors.rst:59
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:59
#: ../../pyvista/doc/api/utilities/colors.rst:59
msgid "``#0000FF``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:60
#: ../../pyvista/doc/api/utilities/colors.rst:60
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:60
#: ../../pyvista/doc/api/utilities/colors.rst:60
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#0000FF;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:64
#: ../../pyvista/doc/api/utilities/colors.rst:64
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:64
#: ../../pyvista/doc/api/utilities/colors.rst:64
msgid "``\"blueviolet\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:65
#: ../../pyvista/doc/api/utilities/colors.rst:65
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:65
#: ../../pyvista/doc/api/utilities/colors.rst:65
msgid "``#8A2BE2``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:66
#: ../../pyvista/doc/api/utilities/colors.rst:66
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:66
#: ../../pyvista/doc/api/utilities/colors.rst:66
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#8A2BE2;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:70
#: ../../pyvista/doc/api/utilities/colors.rst:70
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:70
#: ../../pyvista/doc/api/utilities/colors.rst:70
msgid "``\"brown\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:71
#: ../../pyvista/doc/api/utilities/colors.rst:71
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:71
#: ../../pyvista/doc/api/utilities/colors.rst:71
msgid "``#654321``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:72
#: ../../pyvista/doc/api/utilities/colors.rst:72
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:72
#: ../../pyvista/doc/api/utilities/colors.rst:72
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#654321;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:76
#: ../../pyvista/doc/api/utilities/colors.rst:76
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:76
#: ../../pyvista/doc/api/utilities/colors.rst:76
msgid "``\"burlywood\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:77
#: ../../pyvista/doc/api/utilities/colors.rst:77
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:77
#: ../../pyvista/doc/api/utilities/colors.rst:77
msgid "``#DEB887``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:78
#: ../../pyvista/doc/api/utilities/colors.rst:78
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:78
#: ../../pyvista/doc/api/utilities/colors.rst:78
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#DEB887;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:82
#: ../../pyvista/doc/api/utilities/colors.rst:82
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:82
#: ../../pyvista/doc/api/utilities/colors.rst:82
msgid "``\"cadetblue\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:83
#: ../../pyvista/doc/api/utilities/colors.rst:83
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:83
#: ../../pyvista/doc/api/utilities/colors.rst:83
msgid "``#5F9EA0``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:84
#: ../../pyvista/doc/api/utilities/colors.rst:84
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:84
#: ../../pyvista/doc/api/utilities/colors.rst:84
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#5F9EA0;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:88
#: ../../pyvista/doc/api/utilities/colors.rst:88
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:88
#: ../../pyvista/doc/api/utilities/colors.rst:88
msgid "``\"chartreuse\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:89
#: ../../pyvista/doc/api/utilities/colors.rst:89
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:89
#: ../../pyvista/doc/api/utilities/colors.rst:89
msgid "``#7FFF00``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:90
#: ../../pyvista/doc/api/utilities/colors.rst:90
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:90
#: ../../pyvista/doc/api/utilities/colors.rst:90
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#7FFF00;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:94
#: ../../pyvista/doc/api/utilities/colors.rst:94
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:94
#: ../../pyvista/doc/api/utilities/colors.rst:94
msgid "``\"chocolate\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:95
#: ../../pyvista/doc/api/utilities/colors.rst:95
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:95
#: ../../pyvista/doc/api/utilities/colors.rst:95
msgid "``#D2691E``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:96
#: ../../pyvista/doc/api/utilities/colors.rst:96
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:96
#: ../../pyvista/doc/api/utilities/colors.rst:96
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#D2691E;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:100
#: ../../pyvista/doc/api/utilities/colors.rst:100
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:100
#: ../../pyvista/doc/api/utilities/colors.rst:100
msgid "``\"coral\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:101
#: ../../pyvista/doc/api/utilities/colors.rst:101
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:101
#: ../../pyvista/doc/api/utilities/colors.rst:101
msgid "``#FF7F50``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:102
#: ../../pyvista/doc/api/utilities/colors.rst:102
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:102
#: ../../pyvista/doc/api/utilities/colors.rst:102
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#FF7F50;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:106
#: ../../pyvista/doc/api/utilities/colors.rst:106
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:106
#: ../../pyvista/doc/api/utilities/colors.rst:106
msgid "``\"cornflowerblue\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:107
#: ../../pyvista/doc/api/utilities/colors.rst:107
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:107
#: ../../pyvista/doc/api/utilities/colors.rst:107
msgid "``#6495ED``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:108
#: ../../pyvista/doc/api/utilities/colors.rst:108
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:108
#: ../../pyvista/doc/api/utilities/colors.rst:108
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#6495ED;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:112
#: ../../pyvista/doc/api/utilities/colors.rst:112
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:112
#: ../../pyvista/doc/api/utilities/colors.rst:112
msgid "``\"cornsilk\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:113
#: ../../pyvista/doc/api/utilities/colors.rst:113
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:113
#: ../../pyvista/doc/api/utilities/colors.rst:113
msgid "``#FFF8DC``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:114
#: ../../pyvista/doc/api/utilities/colors.rst:114
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:114
#: ../../pyvista/doc/api/utilities/colors.rst:114
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#FFF8DC;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:118
#: ../../pyvista/doc/api/utilities/colors.rst:118
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:118
#: ../../pyvista/doc/api/utilities/colors.rst:118
msgid "``\"crimson\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:119
#: ../../pyvista/doc/api/utilities/colors.rst:119
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:119
#: ../../pyvista/doc/api/utilities/colors.rst:119
msgid "``#DC143C``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:120
#: ../../pyvista/doc/api/utilities/colors.rst:120
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:120
#: ../../pyvista/doc/api/utilities/colors.rst:120
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#DC143C;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:124
#: ../../pyvista/doc/api/utilities/colors.rst:124
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:124
#: ../../pyvista/doc/api/utilities/colors.rst:124
msgid "``\"cyan\"`` or ``\"c\"`` or ``\"aqua\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:125
#: ../../pyvista/doc/api/utilities/colors.rst:125
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:125
#: ../../pyvista/doc/api/utilities/colors.rst:125
msgid "``#00FFFF``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:126
#: ../../pyvista/doc/api/utilities/colors.rst:126
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:126
#: ../../pyvista/doc/api/utilities/colors.rst:126
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#00FFFF;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:130
#: ../../pyvista/doc/api/utilities/colors.rst:130
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:130
#: ../../pyvista/doc/api/utilities/colors.rst:130
msgid "``\"darkblue\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:131
#: ../../pyvista/doc/api/utilities/colors.rst:131
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:131
#: ../../pyvista/doc/api/utilities/colors.rst:131
msgid "``#00008B``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:132
#: ../../pyvista/doc/api/utilities/colors.rst:132
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:132
#: ../../pyvista/doc/api/utilities/colors.rst:132
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#00008B;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:136
#: ../../pyvista/doc/api/utilities/colors.rst:136
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:136
#: ../../pyvista/doc/api/utilities/colors.rst:136
msgid "``\"darkcyan\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:137
#: ../../pyvista/doc/api/utilities/colors.rst:137
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:137
#: ../../pyvista/doc/api/utilities/colors.rst:137
msgid "``#008B8B``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:138
#: ../../pyvista/doc/api/utilities/colors.rst:138
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:138
#: ../../pyvista/doc/api/utilities/colors.rst:138
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#008B8B;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:142
#: ../../pyvista/doc/api/utilities/colors.rst:142
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:142
#: ../../pyvista/doc/api/utilities/colors.rst:142
msgid "``\"darkgoldenrod\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:143
#: ../../pyvista/doc/api/utilities/colors.rst:143
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:143
#: ../../pyvista/doc/api/utilities/colors.rst:143
msgid "``#B8860B``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:144
#: ../../pyvista/doc/api/utilities/colors.rst:144
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:144
#: ../../pyvista/doc/api/utilities/colors.rst:144
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#B8860B;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:148
#: ../../pyvista/doc/api/utilities/colors.rst:148
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:148
#: ../../pyvista/doc/api/utilities/colors.rst:148
msgid "``\"darkgray\"`` or ``\"darkgrey\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:149
#: ../../pyvista/doc/api/utilities/colors.rst:149
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:149
#: ../../pyvista/doc/api/utilities/colors.rst:149
msgid "``#A9A9A9``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:150
#: ../../pyvista/doc/api/utilities/colors.rst:150
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:150
#: ../../pyvista/doc/api/utilities/colors.rst:150
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#A9A9A9;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:154
#: ../../pyvista/doc/api/utilities/colors.rst:154
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:154
#: ../../pyvista/doc/api/utilities/colors.rst:154
msgid "``\"darkgreen\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:155
#: ../../pyvista/doc/api/utilities/colors.rst:155
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:155
#: ../../pyvista/doc/api/utilities/colors.rst:155
msgid "``#006400``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:156
#: ../../pyvista/doc/api/utilities/colors.rst:156
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:156
#: ../../pyvista/doc/api/utilities/colors.rst:156
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#006400;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:160
#: ../../pyvista/doc/api/utilities/colors.rst:160
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:160
#: ../../pyvista/doc/api/utilities/colors.rst:160
msgid "``\"darkkhaki\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:161
#: ../../pyvista/doc/api/utilities/colors.rst:161
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:161
#: ../../pyvista/doc/api/utilities/colors.rst:161
msgid "``#BDB76B``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:162
#: ../../pyvista/doc/api/utilities/colors.rst:162
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:162
#: ../../pyvista/doc/api/utilities/colors.rst:162
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#BDB76B;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:166
#: ../../pyvista/doc/api/utilities/colors.rst:166
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:166
#: ../../pyvista/doc/api/utilities/colors.rst:166
msgid "``\"darkmagenta\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:167
#: ../../pyvista/doc/api/utilities/colors.rst:167
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:167
#: ../../pyvista/doc/api/utilities/colors.rst:167
msgid "``#8B008B``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:168
#: ../../pyvista/doc/api/utilities/colors.rst:168
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:168
#: ../../pyvista/doc/api/utilities/colors.rst:168
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#8B008B;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:172
#: ../../pyvista/doc/api/utilities/colors.rst:172
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:172
#: ../../pyvista/doc/api/utilities/colors.rst:172
msgid "``\"darkolivegreen\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:173
#: ../../pyvista/doc/api/utilities/colors.rst:173
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:173
#: ../../pyvista/doc/api/utilities/colors.rst:173
msgid "``#556B2F``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:174
#: ../../pyvista/doc/api/utilities/colors.rst:174
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:174
#: ../../pyvista/doc/api/utilities/colors.rst:174
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#556B2F;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:178
#: ../../pyvista/doc/api/utilities/colors.rst:178
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:178
#: ../../pyvista/doc/api/utilities/colors.rst:178
msgid "``\"darkorange\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:179
#: ../../pyvista/doc/api/utilities/colors.rst:179
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:179
#: ../../pyvista/doc/api/utilities/colors.rst:179
msgid "``#FF8C00``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:180
#: ../../pyvista/doc/api/utilities/colors.rst:180
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:180
#: ../../pyvista/doc/api/utilities/colors.rst:180
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#FF8C00;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:184
#: ../../pyvista/doc/api/utilities/colors.rst:184
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:184
#: ../../pyvista/doc/api/utilities/colors.rst:184
msgid "``\"darkorchid\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:185
#: ../../pyvista/doc/api/utilities/colors.rst:185
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:185
#: ../../pyvista/doc/api/utilities/colors.rst:185
msgid "``#9932CC``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:186
#: ../../pyvista/doc/api/utilities/colors.rst:186
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:186
#: ../../pyvista/doc/api/utilities/colors.rst:186
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#9932CC;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:190
#: ../../pyvista/doc/api/utilities/colors.rst:190
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:190
#: ../../pyvista/doc/api/utilities/colors.rst:190
msgid "``\"darkred\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:191
#: ../../pyvista/doc/api/utilities/colors.rst:191
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:191
#: ../../pyvista/doc/api/utilities/colors.rst:191
msgid "``#8B0000``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:192
#: ../../pyvista/doc/api/utilities/colors.rst:192
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:192
#: ../../pyvista/doc/api/utilities/colors.rst:192
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#8B0000;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:196
#: ../../pyvista/doc/api/utilities/colors.rst:196
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:196
#: ../../pyvista/doc/api/utilities/colors.rst:196
msgid "``\"darksalmon\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:197
#: ../../pyvista/doc/api/utilities/colors.rst:197
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:197
#: ../../pyvista/doc/api/utilities/colors.rst:197
msgid "``#E9967A``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:198
#: ../../pyvista/doc/api/utilities/colors.rst:198
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:198
#: ../../pyvista/doc/api/utilities/colors.rst:198
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#E9967A;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:202
#: ../../pyvista/doc/api/utilities/colors.rst:202
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:202
#: ../../pyvista/doc/api/utilities/colors.rst:202
msgid "``\"darkseagreen\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:203
#: ../../pyvista/doc/api/utilities/colors.rst:203
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:203
#: ../../pyvista/doc/api/utilities/colors.rst:203
msgid "``#8FBC8F``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:204
#: ../../pyvista/doc/api/utilities/colors.rst:204
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:204
#: ../../pyvista/doc/api/utilities/colors.rst:204
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#8FBC8F;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:208
#: ../../pyvista/doc/api/utilities/colors.rst:208
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:208
#: ../../pyvista/doc/api/utilities/colors.rst:208
msgid "``\"darkslateblue\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:209
#: ../../pyvista/doc/api/utilities/colors.rst:209
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:209
#: ../../pyvista/doc/api/utilities/colors.rst:209
msgid "``#483D8B``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:210
#: ../../pyvista/doc/api/utilities/colors.rst:210
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:210
#: ../../pyvista/doc/api/utilities/colors.rst:210
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#483D8B;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:214
#: ../../pyvista/doc/api/utilities/colors.rst:214
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:214
#: ../../pyvista/doc/api/utilities/colors.rst:214
msgid "``\"darkslategray\"`` or ``\"darkslategrey\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:215
#: ../../pyvista/doc/api/utilities/colors.rst:215
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:215
#: ../../pyvista/doc/api/utilities/colors.rst:215
msgid "``#2F4F4F``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:216
#: ../../pyvista/doc/api/utilities/colors.rst:216
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:216
#: ../../pyvista/doc/api/utilities/colors.rst:216
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#2F4F4F;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:220
#: ../../pyvista/doc/api/utilities/colors.rst:220
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:220
#: ../../pyvista/doc/api/utilities/colors.rst:220
msgid "``\"darkturquoise\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:221
#: ../../pyvista/doc/api/utilities/colors.rst:221
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:221
#: ../../pyvista/doc/api/utilities/colors.rst:221
msgid "``#00CED1``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:222
#: ../../pyvista/doc/api/utilities/colors.rst:222
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:222
#: ../../pyvista/doc/api/utilities/colors.rst:222
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#00CED1;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:226
#: ../../pyvista/doc/api/utilities/colors.rst:226
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:226
#: ../../pyvista/doc/api/utilities/colors.rst:226
msgid "``\"darkviolet\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:227
#: ../../pyvista/doc/api/utilities/colors.rst:227
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:227
#: ../../pyvista/doc/api/utilities/colors.rst:227
msgid "``#9400D3``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:228
#: ../../pyvista/doc/api/utilities/colors.rst:228
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:228
#: ../../pyvista/doc/api/utilities/colors.rst:228
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#9400D3;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:232
#: ../../pyvista/doc/api/utilities/colors.rst:232
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:232
#: ../../pyvista/doc/api/utilities/colors.rst:232
msgid "``\"deeppink\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:233
#: ../../pyvista/doc/api/utilities/colors.rst:233
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:233
#: ../../pyvista/doc/api/utilities/colors.rst:233
msgid "``#FF1493``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:234
#: ../../pyvista/doc/api/utilities/colors.rst:234
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:234
#: ../../pyvista/doc/api/utilities/colors.rst:234
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#FF1493;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:238
#: ../../pyvista/doc/api/utilities/colors.rst:238
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:238
#: ../../pyvista/doc/api/utilities/colors.rst:238
msgid "``\"deepskyblue\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:239
#: ../../pyvista/doc/api/utilities/colors.rst:239
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:239
#: ../../pyvista/doc/api/utilities/colors.rst:239
msgid "``#00BFFF``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:240
#: ../../pyvista/doc/api/utilities/colors.rst:240
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:240
#: ../../pyvista/doc/api/utilities/colors.rst:240
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#00BFFF;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:244
#: ../../pyvista/doc/api/utilities/colors.rst:244
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:244
#: ../../pyvista/doc/api/utilities/colors.rst:244
msgid "``\"dimgray\"`` or ``\"dimgrey\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:245
#: ../../pyvista/doc/api/utilities/colors.rst:245
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:245
#: ../../pyvista/doc/api/utilities/colors.rst:245
msgid "``#696969``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:246
#: ../../pyvista/doc/api/utilities/colors.rst:246
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:246
#: ../../pyvista/doc/api/utilities/colors.rst:246
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#696969;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:250
#: ../../pyvista/doc/api/utilities/colors.rst:250
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:250
#: ../../pyvista/doc/api/utilities/colors.rst:250
msgid "``\"dodgerblue\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:251
#: ../../pyvista/doc/api/utilities/colors.rst:251
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:251
#: ../../pyvista/doc/api/utilities/colors.rst:251
msgid "``#1E90FF``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:252
#: ../../pyvista/doc/api/utilities/colors.rst:252
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:252
#: ../../pyvista/doc/api/utilities/colors.rst:252
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#1E90FF;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:256
#: ../../pyvista/doc/api/utilities/colors.rst:256
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:256
#: ../../pyvista/doc/api/utilities/colors.rst:256
msgid "``\"firebrick\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:257
#: ../../pyvista/doc/api/utilities/colors.rst:257
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:257
#: ../../pyvista/doc/api/utilities/colors.rst:257
msgid "``#B22222``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:258
#: ../../pyvista/doc/api/utilities/colors.rst:258
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:258
#: ../../pyvista/doc/api/utilities/colors.rst:258
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#B22222;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:262
#: ../../pyvista/doc/api/utilities/colors.rst:262
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:262
#: ../../pyvista/doc/api/utilities/colors.rst:262
msgid "``\"floralwhite\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:263
#: ../../pyvista/doc/api/utilities/colors.rst:263
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:263
#: ../../pyvista/doc/api/utilities/colors.rst:263
msgid "``#FFFAF0``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:264
#: ../../pyvista/doc/api/utilities/colors.rst:264
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:264
#: ../../pyvista/doc/api/utilities/colors.rst:264
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#FFFAF0;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:268
#: ../../pyvista/doc/api/utilities/colors.rst:268
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:268
#: ../../pyvista/doc/api/utilities/colors.rst:268
msgid "``\"forestgreen\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:269
#: ../../pyvista/doc/api/utilities/colors.rst:269
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:269
#: ../../pyvista/doc/api/utilities/colors.rst:269
msgid "``#228B22``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:270
#: ../../pyvista/doc/api/utilities/colors.rst:270
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:270
#: ../../pyvista/doc/api/utilities/colors.rst:270
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#228B22;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:274
#: ../../pyvista/doc/api/utilities/colors.rst:274
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:274
#: ../../pyvista/doc/api/utilities/colors.rst:274
msgid "``\"gainsboro\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:275
#: ../../pyvista/doc/api/utilities/colors.rst:275
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:275
#: ../../pyvista/doc/api/utilities/colors.rst:275
msgid "``#DCDCDC``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:276
#: ../../pyvista/doc/api/utilities/colors.rst:276
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:276
#: ../../pyvista/doc/api/utilities/colors.rst:276
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#DCDCDC;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:280
#: ../../pyvista/doc/api/utilities/colors.rst:280
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:280
#: ../../pyvista/doc/api/utilities/colors.rst:280
msgid "``\"ghostwhite\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:281
#: ../../pyvista/doc/api/utilities/colors.rst:281
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:281
#: ../../pyvista/doc/api/utilities/colors.rst:281
msgid "``#F8F8FF``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:282
#: ../../pyvista/doc/api/utilities/colors.rst:282
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:282
#: ../../pyvista/doc/api/utilities/colors.rst:282
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#F8F8FF;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:286
#: ../../pyvista/doc/api/utilities/colors.rst:286
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:286
#: ../../pyvista/doc/api/utilities/colors.rst:286
msgid "``\"gold\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:287
#: ../../pyvista/doc/api/utilities/colors.rst:287
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:287
#: ../../pyvista/doc/api/utilities/colors.rst:287
msgid "``#FFD700``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:288
#: ../../pyvista/doc/api/utilities/colors.rst:288
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:288
#: ../../pyvista/doc/api/utilities/colors.rst:288
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#FFD700;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:292
#: ../../pyvista/doc/api/utilities/colors.rst:292
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:292
#: ../../pyvista/doc/api/utilities/colors.rst:292
msgid "``\"goldenrod\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:293
#: ../../pyvista/doc/api/utilities/colors.rst:293
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:293
#: ../../pyvista/doc/api/utilities/colors.rst:293
msgid "``#DAA520``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:294
#: ../../pyvista/doc/api/utilities/colors.rst:294
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:294
#: ../../pyvista/doc/api/utilities/colors.rst:294
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#DAA520;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:298
#: ../../pyvista/doc/api/utilities/colors.rst:298
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:298
#: ../../pyvista/doc/api/utilities/colors.rst:298
msgid "``\"gray\"`` or ``\"grey\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:299
#: ../../pyvista/doc/api/utilities/colors.rst:299
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:299
#: ../../pyvista/doc/api/utilities/colors.rst:299
msgid "``#808080``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:300
#: ../../pyvista/doc/api/utilities/colors.rst:300
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:300
#: ../../pyvista/doc/api/utilities/colors.rst:300
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#808080;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:304
#: ../../pyvista/doc/api/utilities/colors.rst:304
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:304
#: ../../pyvista/doc/api/utilities/colors.rst:304
msgid "``\"green\"`` or ``\"g\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:305
#: ../../pyvista/doc/api/utilities/colors.rst:305
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:305
#: ../../pyvista/doc/api/utilities/colors.rst:305
msgid "``#008000``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:306
#: ../../pyvista/doc/api/utilities/colors.rst:306
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:306
#: ../../pyvista/doc/api/utilities/colors.rst:306
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#008000;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:310
#: ../../pyvista/doc/api/utilities/colors.rst:310
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:310
#: ../../pyvista/doc/api/utilities/colors.rst:310
msgid "``\"greenyellow\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:311
#: ../../pyvista/doc/api/utilities/colors.rst:311
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:311
#: ../../pyvista/doc/api/utilities/colors.rst:311
msgid "``#ADFF2F``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:312
#: ../../pyvista/doc/api/utilities/colors.rst:312
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:312
#: ../../pyvista/doc/api/utilities/colors.rst:312
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#ADFF2F;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:316
#: ../../pyvista/doc/api/utilities/colors.rst:316
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:316
#: ../../pyvista/doc/api/utilities/colors.rst:316
msgid "``\"honeydew\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:317
#: ../../pyvista/doc/api/utilities/colors.rst:317
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:317
#: ../../pyvista/doc/api/utilities/colors.rst:317
msgid "``#F0FFF0``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:318
#: ../../pyvista/doc/api/utilities/colors.rst:318
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:318
#: ../../pyvista/doc/api/utilities/colors.rst:318
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#F0FFF0;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:322
#: ../../pyvista/doc/api/utilities/colors.rst:322
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:322
#: ../../pyvista/doc/api/utilities/colors.rst:322
msgid "``\"hotpink\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:323
#: ../../pyvista/doc/api/utilities/colors.rst:323
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:323
#: ../../pyvista/doc/api/utilities/colors.rst:323
msgid "``#FF69B4``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:324
#: ../../pyvista/doc/api/utilities/colors.rst:324
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:324
#: ../../pyvista/doc/api/utilities/colors.rst:324
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#FF69B4;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:328
#: ../../pyvista/doc/api/utilities/colors.rst:328
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:328
#: ../../pyvista/doc/api/utilities/colors.rst:328
msgid "``\"indianred\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:329
#: ../../pyvista/doc/api/utilities/colors.rst:329
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:329
#: ../../pyvista/doc/api/utilities/colors.rst:329
msgid "``#CD5C5C``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:330
#: ../../pyvista/doc/api/utilities/colors.rst:330
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:330
#: ../../pyvista/doc/api/utilities/colors.rst:330
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#CD5C5C;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:334
#: ../../pyvista/doc/api/utilities/colors.rst:334
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:334
#: ../../pyvista/doc/api/utilities/colors.rst:334
msgid "``\"indigo\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:335
#: ../../pyvista/doc/api/utilities/colors.rst:335
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:335
#: ../../pyvista/doc/api/utilities/colors.rst:335
msgid "``#4B0082``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:336
#: ../../pyvista/doc/api/utilities/colors.rst:336
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:336
#: ../../pyvista/doc/api/utilities/colors.rst:336
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#4B0082;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:340
#: ../../pyvista/doc/api/utilities/colors.rst:340
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:340
#: ../../pyvista/doc/api/utilities/colors.rst:340
msgid "``\"ivory\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:341
#: ../../pyvista/doc/api/utilities/colors.rst:341
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:341
#: ../../pyvista/doc/api/utilities/colors.rst:341
msgid "``#FFFFF0``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:342
#: ../../pyvista/doc/api/utilities/colors.rst:342
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:342
#: ../../pyvista/doc/api/utilities/colors.rst:342
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#FFFFF0;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:346
#: ../../pyvista/doc/api/utilities/colors.rst:346
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:346
#: ../../pyvista/doc/api/utilities/colors.rst:346
msgid "``\"khaki\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:347
#: ../../pyvista/doc/api/utilities/colors.rst:347
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:347
#: ../../pyvista/doc/api/utilities/colors.rst:347
msgid "``#F0E68C``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:348
#: ../../pyvista/doc/api/utilities/colors.rst:348
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:348
#: ../../pyvista/doc/api/utilities/colors.rst:348
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#F0E68C;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:352
#: ../../pyvista/doc/api/utilities/colors.rst:352
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:352
#: ../../pyvista/doc/api/utilities/colors.rst:352
msgid "``\"lavender\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:353
#: ../../pyvista/doc/api/utilities/colors.rst:353
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:353
#: ../../pyvista/doc/api/utilities/colors.rst:353
msgid "``#E6E6FA``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:354
#: ../../pyvista/doc/api/utilities/colors.rst:354
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:354
#: ../../pyvista/doc/api/utilities/colors.rst:354
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#E6E6FA;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:358
#: ../../pyvista/doc/api/utilities/colors.rst:358
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:358
#: ../../pyvista/doc/api/utilities/colors.rst:358
msgid "``\"lavenderblush\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:359
#: ../../pyvista/doc/api/utilities/colors.rst:359
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:359
#: ../../pyvista/doc/api/utilities/colors.rst:359
msgid "``#FFF0F5``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:360
#: ../../pyvista/doc/api/utilities/colors.rst:360
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:360
#: ../../pyvista/doc/api/utilities/colors.rst:360
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#FFF0F5;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:364
#: ../../pyvista/doc/api/utilities/colors.rst:364
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:364
#: ../../pyvista/doc/api/utilities/colors.rst:364
msgid "``\"lawngreen\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:365
#: ../../pyvista/doc/api/utilities/colors.rst:365
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:365
#: ../../pyvista/doc/api/utilities/colors.rst:365
msgid "``#7CFC00``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:366
#: ../../pyvista/doc/api/utilities/colors.rst:366
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:366
#: ../../pyvista/doc/api/utilities/colors.rst:366
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#7CFC00;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:370
#: ../../pyvista/doc/api/utilities/colors.rst:370
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:370
#: ../../pyvista/doc/api/utilities/colors.rst:370
msgid "``\"lemonchiffon\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:371
#: ../../pyvista/doc/api/utilities/colors.rst:371
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:371
#: ../../pyvista/doc/api/utilities/colors.rst:371
msgid "``#FFFACD``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:372
#: ../../pyvista/doc/api/utilities/colors.rst:372
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:372
#: ../../pyvista/doc/api/utilities/colors.rst:372
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#FFFACD;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:376
#: ../../pyvista/doc/api/utilities/colors.rst:376
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:376
#: ../../pyvista/doc/api/utilities/colors.rst:376
msgid "``\"lightblue\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:377
#: ../../pyvista/doc/api/utilities/colors.rst:377
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:377
#: ../../pyvista/doc/api/utilities/colors.rst:377
msgid "``#ADD8E6``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:378
#: ../../pyvista/doc/api/utilities/colors.rst:378
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:378
#: ../../pyvista/doc/api/utilities/colors.rst:378
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#ADD8E6;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:382
#: ../../pyvista/doc/api/utilities/colors.rst:382
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:382
#: ../../pyvista/doc/api/utilities/colors.rst:382
msgid "``\"lightcoral\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:383
#: ../../pyvista/doc/api/utilities/colors.rst:383
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:383
#: ../../pyvista/doc/api/utilities/colors.rst:383
msgid "``#F08080``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:384
#: ../../pyvista/doc/api/utilities/colors.rst:384
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:384
#: ../../pyvista/doc/api/utilities/colors.rst:384
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#F08080;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:388
#: ../../pyvista/doc/api/utilities/colors.rst:388
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:388
#: ../../pyvista/doc/api/utilities/colors.rst:388
msgid "``\"lightcyan\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:389
#: ../../pyvista/doc/api/utilities/colors.rst:389
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:389
#: ../../pyvista/doc/api/utilities/colors.rst:389
msgid "``#E0FFFF``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:390
#: ../../pyvista/doc/api/utilities/colors.rst:390
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:390
#: ../../pyvista/doc/api/utilities/colors.rst:390
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#E0FFFF;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:394
#: ../../pyvista/doc/api/utilities/colors.rst:394
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:394
#: ../../pyvista/doc/api/utilities/colors.rst:394
msgid "``\"lightgoldenrodyellow\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:395
#: ../../pyvista/doc/api/utilities/colors.rst:395
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:395
#: ../../pyvista/doc/api/utilities/colors.rst:395
msgid "``#FAFAD2``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:396
#: ../../pyvista/doc/api/utilities/colors.rst:396
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:396
#: ../../pyvista/doc/api/utilities/colors.rst:396
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#FAFAD2;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:400
#: ../../pyvista/doc/api/utilities/colors.rst:400
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:400
#: ../../pyvista/doc/api/utilities/colors.rst:400
msgid "``\"lightgray\"`` or ``\"lightgrey\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:401
#: ../../pyvista/doc/api/utilities/colors.rst:401
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:401
#: ../../pyvista/doc/api/utilities/colors.rst:401
msgid "``#D3D3D3``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:402
#: ../../pyvista/doc/api/utilities/colors.rst:402
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:402
#: ../../pyvista/doc/api/utilities/colors.rst:402
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#D3D3D3;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:406
#: ../../pyvista/doc/api/utilities/colors.rst:406
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:406
#: ../../pyvista/doc/api/utilities/colors.rst:406
msgid "``\"lightgreen\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:407
#: ../../pyvista/doc/api/utilities/colors.rst:407
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:407
#: ../../pyvista/doc/api/utilities/colors.rst:407
msgid "``#90EE90``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:408
#: ../../pyvista/doc/api/utilities/colors.rst:408
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:408
#: ../../pyvista/doc/api/utilities/colors.rst:408
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#90EE90;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:412
#: ../../pyvista/doc/api/utilities/colors.rst:412
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:412
#: ../../pyvista/doc/api/utilities/colors.rst:412
msgid "``\"lightpink\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:413
#: ../../pyvista/doc/api/utilities/colors.rst:413
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:413
#: ../../pyvista/doc/api/utilities/colors.rst:413
msgid "``#FFB6C1``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:414
#: ../../pyvista/doc/api/utilities/colors.rst:414
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:414
#: ../../pyvista/doc/api/utilities/colors.rst:414
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#FFB6C1;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:418
#: ../../pyvista/doc/api/utilities/colors.rst:418
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:418
#: ../../pyvista/doc/api/utilities/colors.rst:418
msgid "``\"lightsalmon\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:419
#: ../../pyvista/doc/api/utilities/colors.rst:419
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:419
#: ../../pyvista/doc/api/utilities/colors.rst:419
msgid "``#FFA07A``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:420
#: ../../pyvista/doc/api/utilities/colors.rst:420
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:420
#: ../../pyvista/doc/api/utilities/colors.rst:420
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#FFA07A;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:424
#: ../../pyvista/doc/api/utilities/colors.rst:424
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:424
#: ../../pyvista/doc/api/utilities/colors.rst:424
msgid "``\"lightseagreen\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:425
#: ../../pyvista/doc/api/utilities/colors.rst:425
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:425
#: ../../pyvista/doc/api/utilities/colors.rst:425
msgid "``#20B2AA``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:426
#: ../../pyvista/doc/api/utilities/colors.rst:426
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:426
#: ../../pyvista/doc/api/utilities/colors.rst:426
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#20B2AA;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:430
#: ../../pyvista/doc/api/utilities/colors.rst:430
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:430
#: ../../pyvista/doc/api/utilities/colors.rst:430
msgid "``\"lightskyblue\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:431
#: ../../pyvista/doc/api/utilities/colors.rst:431
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:431
#: ../../pyvista/doc/api/utilities/colors.rst:431
msgid "``#87CEFA``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:432
#: ../../pyvista/doc/api/utilities/colors.rst:432
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:432
#: ../../pyvista/doc/api/utilities/colors.rst:432
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#87CEFA;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:436
#: ../../pyvista/doc/api/utilities/colors.rst:436
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:436
#: ../../pyvista/doc/api/utilities/colors.rst:436
msgid "``\"lightslategray\"`` or ``\"lightslategrey\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:437
#: ../../pyvista/doc/api/utilities/colors.rst:437
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:437
#: ../../pyvista/doc/api/utilities/colors.rst:437
msgid "``#778899``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:438
#: ../../pyvista/doc/api/utilities/colors.rst:438
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:438
#: ../../pyvista/doc/api/utilities/colors.rst:438
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#778899;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:442
#: ../../pyvista/doc/api/utilities/colors.rst:442
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:442
#: ../../pyvista/doc/api/utilities/colors.rst:442
msgid "``\"lightsteelblue\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:443
#: ../../pyvista/doc/api/utilities/colors.rst:443
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:443
#: ../../pyvista/doc/api/utilities/colors.rst:443
msgid "``#B0C4DE``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:444
#: ../../pyvista/doc/api/utilities/colors.rst:444
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:444
#: ../../pyvista/doc/api/utilities/colors.rst:444
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#B0C4DE;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:448
#: ../../pyvista/doc/api/utilities/colors.rst:448
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:448
#: ../../pyvista/doc/api/utilities/colors.rst:448
msgid "``\"lightyellow\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:449
#: ../../pyvista/doc/api/utilities/colors.rst:449
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:449
#: ../../pyvista/doc/api/utilities/colors.rst:449
msgid "``#FFFFE0``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:450
#: ../../pyvista/doc/api/utilities/colors.rst:450
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:450
#: ../../pyvista/doc/api/utilities/colors.rst:450
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#FFFFE0;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:454
#: ../../pyvista/doc/api/utilities/colors.rst:454
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:454
#: ../../pyvista/doc/api/utilities/colors.rst:454
msgid "``\"lime\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:455
#: ../../pyvista/doc/api/utilities/colors.rst:455
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:455
#: ../../pyvista/doc/api/utilities/colors.rst:455
msgid "``#00FF00``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:456
#: ../../pyvista/doc/api/utilities/colors.rst:456
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:456
#: ../../pyvista/doc/api/utilities/colors.rst:456
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#00FF00;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:460
#: ../../pyvista/doc/api/utilities/colors.rst:460
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:460
#: ../../pyvista/doc/api/utilities/colors.rst:460
msgid "``\"limegreen\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:461
#: ../../pyvista/doc/api/utilities/colors.rst:461
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:461
#: ../../pyvista/doc/api/utilities/colors.rst:461
msgid "``#32CD32``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:462
#: ../../pyvista/doc/api/utilities/colors.rst:462
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:462
#: ../../pyvista/doc/api/utilities/colors.rst:462
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#32CD32;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:466
#: ../../pyvista/doc/api/utilities/colors.rst:466
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:466
#: ../../pyvista/doc/api/utilities/colors.rst:466
msgid "``\"linen\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:467
#: ../../pyvista/doc/api/utilities/colors.rst:467
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:467
#: ../../pyvista/doc/api/utilities/colors.rst:467
msgid "``#FAF0E6``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:468
#: ../../pyvista/doc/api/utilities/colors.rst:468
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:468
#: ../../pyvista/doc/api/utilities/colors.rst:468
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#FAF0E6;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:472
#: ../../pyvista/doc/api/utilities/colors.rst:472
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:472
#: ../../pyvista/doc/api/utilities/colors.rst:472
msgid "``\"magenta\"`` or ``\"m\"`` or ``\"fuchsia\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:473
#: ../../pyvista/doc/api/utilities/colors.rst:473
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:473
#: ../../pyvista/doc/api/utilities/colors.rst:473
msgid "``#FF00FF``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:474
#: ../../pyvista/doc/api/utilities/colors.rst:474
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:474
#: ../../pyvista/doc/api/utilities/colors.rst:474
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#FF00FF;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:478
#: ../../pyvista/doc/api/utilities/colors.rst:478
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:478
#: ../../pyvista/doc/api/utilities/colors.rst:478
msgid "``\"maroon\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:479
#: ../../pyvista/doc/api/utilities/colors.rst:479
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:479
#: ../../pyvista/doc/api/utilities/colors.rst:479
msgid "``#800000``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:480
#: ../../pyvista/doc/api/utilities/colors.rst:480
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:480
#: ../../pyvista/doc/api/utilities/colors.rst:480
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#800000;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:484
#: ../../pyvista/doc/api/utilities/colors.rst:484
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:484
#: ../../pyvista/doc/api/utilities/colors.rst:484
msgid "``\"mediumaquamarine\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:485
#: ../../pyvista/doc/api/utilities/colors.rst:485
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:485
#: ../../pyvista/doc/api/utilities/colors.rst:485
msgid "``#66CDAA``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:486
#: ../../pyvista/doc/api/utilities/colors.rst:486
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:486
#: ../../pyvista/doc/api/utilities/colors.rst:486
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#66CDAA;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:490
#: ../../pyvista/doc/api/utilities/colors.rst:490
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:490
#: ../../pyvista/doc/api/utilities/colors.rst:490
msgid "``\"mediumblue\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:491
#: ../../pyvista/doc/api/utilities/colors.rst:491
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:491
#: ../../pyvista/doc/api/utilities/colors.rst:491
msgid "``#0000CD``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:492
#: ../../pyvista/doc/api/utilities/colors.rst:492
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:492
#: ../../pyvista/doc/api/utilities/colors.rst:492
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#0000CD;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:496
#: ../../pyvista/doc/api/utilities/colors.rst:496
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:496
#: ../../pyvista/doc/api/utilities/colors.rst:496
msgid "``\"mediumorchid\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:497
#: ../../pyvista/doc/api/utilities/colors.rst:497
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:497
#: ../../pyvista/doc/api/utilities/colors.rst:497
msgid "``#BA55D3``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:498
#: ../../pyvista/doc/api/utilities/colors.rst:498
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:498
#: ../../pyvista/doc/api/utilities/colors.rst:498
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#BA55D3;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:502
#: ../../pyvista/doc/api/utilities/colors.rst:502
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:502
#: ../../pyvista/doc/api/utilities/colors.rst:502
msgid "``\"mediumpurple\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:503
#: ../../pyvista/doc/api/utilities/colors.rst:503
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:503
#: ../../pyvista/doc/api/utilities/colors.rst:503
msgid "``#9370DB``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:504
#: ../../pyvista/doc/api/utilities/colors.rst:504
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:504
#: ../../pyvista/doc/api/utilities/colors.rst:504
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#9370DB;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:508
#: ../../pyvista/doc/api/utilities/colors.rst:508
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:508
#: ../../pyvista/doc/api/utilities/colors.rst:508
msgid "``\"mediumseagreen\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:509
#: ../../pyvista/doc/api/utilities/colors.rst:509
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:509
#: ../../pyvista/doc/api/utilities/colors.rst:509
msgid "``#3CB371``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:510
#: ../../pyvista/doc/api/utilities/colors.rst:510
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:510
#: ../../pyvista/doc/api/utilities/colors.rst:510
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#3CB371;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:514
#: ../../pyvista/doc/api/utilities/colors.rst:514
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:514
#: ../../pyvista/doc/api/utilities/colors.rst:514
msgid "``\"mediumslateblue\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:515
#: ../../pyvista/doc/api/utilities/colors.rst:515
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:515
#: ../../pyvista/doc/api/utilities/colors.rst:515
msgid "``#7B68EE``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:516
#: ../../pyvista/doc/api/utilities/colors.rst:516
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:516
#: ../../pyvista/doc/api/utilities/colors.rst:516
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#7B68EE;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:520
#: ../../pyvista/doc/api/utilities/colors.rst:520
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:520
#: ../../pyvista/doc/api/utilities/colors.rst:520
msgid "``\"mediumspringgreen\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:521
#: ../../pyvista/doc/api/utilities/colors.rst:521
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:521
#: ../../pyvista/doc/api/utilities/colors.rst:521
msgid "``#00FA9A``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:522
#: ../../pyvista/doc/api/utilities/colors.rst:522
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:522
#: ../../pyvista/doc/api/utilities/colors.rst:522
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#00FA9A;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:526
#: ../../pyvista/doc/api/utilities/colors.rst:526
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:526
#: ../../pyvista/doc/api/utilities/colors.rst:526
msgid "``\"mediumturquoise\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:527
#: ../../pyvista/doc/api/utilities/colors.rst:527
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:527
#: ../../pyvista/doc/api/utilities/colors.rst:527
msgid "``#48D1CC``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:528
#: ../../pyvista/doc/api/utilities/colors.rst:528
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:528
#: ../../pyvista/doc/api/utilities/colors.rst:528
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#48D1CC;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:532
#: ../../pyvista/doc/api/utilities/colors.rst:532
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:532
#: ../../pyvista/doc/api/utilities/colors.rst:532
msgid "``\"mediumvioletred\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:533
#: ../../pyvista/doc/api/utilities/colors.rst:533
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:533
#: ../../pyvista/doc/api/utilities/colors.rst:533
msgid "``#C71585``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:534
#: ../../pyvista/doc/api/utilities/colors.rst:534
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:534
#: ../../pyvista/doc/api/utilities/colors.rst:534
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#C71585;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:538
#: ../../pyvista/doc/api/utilities/colors.rst:538
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:538
#: ../../pyvista/doc/api/utilities/colors.rst:538
msgid "``\"midnightblue\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:539
#: ../../pyvista/doc/api/utilities/colors.rst:539
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:539
#: ../../pyvista/doc/api/utilities/colors.rst:539
msgid "``#191970``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:540
#: ../../pyvista/doc/api/utilities/colors.rst:540
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:540
#: ../../pyvista/doc/api/utilities/colors.rst:540
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#191970;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:544
#: ../../pyvista/doc/api/utilities/colors.rst:544
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:544
#: ../../pyvista/doc/api/utilities/colors.rst:544
msgid "``\"mintcream\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:545
#: ../../pyvista/doc/api/utilities/colors.rst:545
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:545
#: ../../pyvista/doc/api/utilities/colors.rst:545
msgid "``#F5FFFA``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:546
#: ../../pyvista/doc/api/utilities/colors.rst:546
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:546
#: ../../pyvista/doc/api/utilities/colors.rst:546
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#F5FFFA;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:550
#: ../../pyvista/doc/api/utilities/colors.rst:550
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:550
#: ../../pyvista/doc/api/utilities/colors.rst:550
msgid "``\"mistyrose\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:551
#: ../../pyvista/doc/api/utilities/colors.rst:551
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:551
#: ../../pyvista/doc/api/utilities/colors.rst:551
msgid "``#FFE4E1``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:552
#: ../../pyvista/doc/api/utilities/colors.rst:552
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:552
#: ../../pyvista/doc/api/utilities/colors.rst:552
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#FFE4E1;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:556
#: ../../pyvista/doc/api/utilities/colors.rst:556
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:556
#: ../../pyvista/doc/api/utilities/colors.rst:556
msgid "``\"moccasin\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:557
#: ../../pyvista/doc/api/utilities/colors.rst:557
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:557
#: ../../pyvista/doc/api/utilities/colors.rst:557
msgid "``#FFE4B5``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:558
#: ../../pyvista/doc/api/utilities/colors.rst:558
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:558
#: ../../pyvista/doc/api/utilities/colors.rst:558
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#FFE4B5;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:562
#: ../../pyvista/doc/api/utilities/colors.rst:562
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:562
#: ../../pyvista/doc/api/utilities/colors.rst:562
msgid "``\"navajowhite\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:563
#: ../../pyvista/doc/api/utilities/colors.rst:563
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:563
#: ../../pyvista/doc/api/utilities/colors.rst:563
msgid "``#FFDEAD``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:564
#: ../../pyvista/doc/api/utilities/colors.rst:564
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:564
#: ../../pyvista/doc/api/utilities/colors.rst:564
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#FFDEAD;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:568
#: ../../pyvista/doc/api/utilities/colors.rst:568
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:568
#: ../../pyvista/doc/api/utilities/colors.rst:568
msgid "``\"navy\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:569
#: ../../pyvista/doc/api/utilities/colors.rst:569
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:569
#: ../../pyvista/doc/api/utilities/colors.rst:569
msgid "``#000080``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:570
#: ../../pyvista/doc/api/utilities/colors.rst:570
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:570
#: ../../pyvista/doc/api/utilities/colors.rst:570
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#000080;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:574
#: ../../pyvista/doc/api/utilities/colors.rst:574
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:574
#: ../../pyvista/doc/api/utilities/colors.rst:574
msgid "``\"oldlace\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:575
#: ../../pyvista/doc/api/utilities/colors.rst:575
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:575
#: ../../pyvista/doc/api/utilities/colors.rst:575
msgid "``#FDF5E6``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:576
#: ../../pyvista/doc/api/utilities/colors.rst:576
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:576
#: ../../pyvista/doc/api/utilities/colors.rst:576
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#FDF5E6;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:580
#: ../../pyvista/doc/api/utilities/colors.rst:580
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:580
#: ../../pyvista/doc/api/utilities/colors.rst:580
msgid "``\"olive\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:581
#: ../../pyvista/doc/api/utilities/colors.rst:581
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:581
#: ../../pyvista/doc/api/utilities/colors.rst:581
msgid "``#808000``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:582
#: ../../pyvista/doc/api/utilities/colors.rst:582
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:582
#: ../../pyvista/doc/api/utilities/colors.rst:582
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#808000;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:586
#: ../../pyvista/doc/api/utilities/colors.rst:586
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:586
#: ../../pyvista/doc/api/utilities/colors.rst:586
msgid "``\"olivedrab\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:587
#: ../../pyvista/doc/api/utilities/colors.rst:587
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:587
#: ../../pyvista/doc/api/utilities/colors.rst:587
msgid "``#6B8E23``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:588
#: ../../pyvista/doc/api/utilities/colors.rst:588
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:588
#: ../../pyvista/doc/api/utilities/colors.rst:588
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#6B8E23;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:592
#: ../../pyvista/doc/api/utilities/colors.rst:592
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:592
#: ../../pyvista/doc/api/utilities/colors.rst:592
msgid "``\"orange\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:593
#: ../../pyvista/doc/api/utilities/colors.rst:593
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:593
#: ../../pyvista/doc/api/utilities/colors.rst:593
msgid "``#FFA500``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:594
#: ../../pyvista/doc/api/utilities/colors.rst:594
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:594
#: ../../pyvista/doc/api/utilities/colors.rst:594
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#FFA500;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:598
#: ../../pyvista/doc/api/utilities/colors.rst:598
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:598
#: ../../pyvista/doc/api/utilities/colors.rst:598
msgid "``\"orangered\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:599
#: ../../pyvista/doc/api/utilities/colors.rst:599
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:599
#: ../../pyvista/doc/api/utilities/colors.rst:599
msgid "``#FF4500``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:600
#: ../../pyvista/doc/api/utilities/colors.rst:600
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:600
#: ../../pyvista/doc/api/utilities/colors.rst:600
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#FF4500;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:604
#: ../../pyvista/doc/api/utilities/colors.rst:604
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:604
#: ../../pyvista/doc/api/utilities/colors.rst:604
msgid "``\"orchid\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:605
#: ../../pyvista/doc/api/utilities/colors.rst:605
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:605
#: ../../pyvista/doc/api/utilities/colors.rst:605
msgid "``#DA70D6``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:606
#: ../../pyvista/doc/api/utilities/colors.rst:606
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:606
#: ../../pyvista/doc/api/utilities/colors.rst:606
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#DA70D6;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:610
#: ../../pyvista/doc/api/utilities/colors.rst:610
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:610
#: ../../pyvista/doc/api/utilities/colors.rst:610
msgid "``\"palegoldenrod\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:611
#: ../../pyvista/doc/api/utilities/colors.rst:611
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:611
#: ../../pyvista/doc/api/utilities/colors.rst:611
msgid "``#EEE8AA``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:612
#: ../../pyvista/doc/api/utilities/colors.rst:612
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:612
#: ../../pyvista/doc/api/utilities/colors.rst:612
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#EEE8AA;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:616
#: ../../pyvista/doc/api/utilities/colors.rst:616
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:616
#: ../../pyvista/doc/api/utilities/colors.rst:616
msgid "``\"palegreen\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:617
#: ../../pyvista/doc/api/utilities/colors.rst:617
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:617
#: ../../pyvista/doc/api/utilities/colors.rst:617
msgid "``#98FB98``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:618
#: ../../pyvista/doc/api/utilities/colors.rst:618
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:618
#: ../../pyvista/doc/api/utilities/colors.rst:618
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#98FB98;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:622
#: ../../pyvista/doc/api/utilities/colors.rst:622
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:622
#: ../../pyvista/doc/api/utilities/colors.rst:622
msgid "``\"paleturquoise\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:623
#: ../../pyvista/doc/api/utilities/colors.rst:623
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:623
#: ../../pyvista/doc/api/utilities/colors.rst:623
msgid "``#AFEEEE``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:624
#: ../../pyvista/doc/api/utilities/colors.rst:624
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:624
#: ../../pyvista/doc/api/utilities/colors.rst:624
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#AFEEEE;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:628
#: ../../pyvista/doc/api/utilities/colors.rst:628
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:628
#: ../../pyvista/doc/api/utilities/colors.rst:628
msgid "``\"palevioletred\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:629
#: ../../pyvista/doc/api/utilities/colors.rst:629
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:629
#: ../../pyvista/doc/api/utilities/colors.rst:629
msgid "``#DB7093``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:630
#: ../../pyvista/doc/api/utilities/colors.rst:630
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:630
#: ../../pyvista/doc/api/utilities/colors.rst:630
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#DB7093;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:634
#: ../../pyvista/doc/api/utilities/colors.rst:634
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:634
#: ../../pyvista/doc/api/utilities/colors.rst:634
msgid "``\"papayawhip\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:635
#: ../../pyvista/doc/api/utilities/colors.rst:635
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:635
#: ../../pyvista/doc/api/utilities/colors.rst:635
msgid "``#FFEFD5``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:636
#: ../../pyvista/doc/api/utilities/colors.rst:636
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:636
#: ../../pyvista/doc/api/utilities/colors.rst:636
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#FFEFD5;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:640
#: ../../pyvista/doc/api/utilities/colors.rst:640
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:640
#: ../../pyvista/doc/api/utilities/colors.rst:640
msgid "``\"paraview_background\"`` or ``\"pv\"`` or ``\"paraview\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:641
#: ../../pyvista/doc/api/utilities/colors.rst:641
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:641
#: ../../pyvista/doc/api/utilities/colors.rst:641
msgid "``#52576e``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:642
#: ../../pyvista/doc/api/utilities/colors.rst:642
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:642
#: ../../pyvista/doc/api/utilities/colors.rst:642
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#52576e;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:646
#: ../../pyvista/doc/api/utilities/colors.rst:646
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:646
#: ../../pyvista/doc/api/utilities/colors.rst:646
msgid "``\"peachpuff\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:647
#: ../../pyvista/doc/api/utilities/colors.rst:647
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:647
#: ../../pyvista/doc/api/utilities/colors.rst:647
msgid "``#FFDAB9``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:648
#: ../../pyvista/doc/api/utilities/colors.rst:648
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:648
#: ../../pyvista/doc/api/utilities/colors.rst:648
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#FFDAB9;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:652
#: ../../pyvista/doc/api/utilities/colors.rst:652
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:652
#: ../../pyvista/doc/api/utilities/colors.rst:652
msgid "``\"peru\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:653
#: ../../pyvista/doc/api/utilities/colors.rst:653
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:653
#: ../../pyvista/doc/api/utilities/colors.rst:653
msgid "``#CD853F``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:654
#: ../../pyvista/doc/api/utilities/colors.rst:654
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:654
#: ../../pyvista/doc/api/utilities/colors.rst:654
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#CD853F;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:658
#: ../../pyvista/doc/api/utilities/colors.rst:658
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:658
#: ../../pyvista/doc/api/utilities/colors.rst:658
msgid "``\"pink\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:659
#: ../../pyvista/doc/api/utilities/colors.rst:659
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:659
#: ../../pyvista/doc/api/utilities/colors.rst:659
msgid "``#FFC0CB``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:660
#: ../../pyvista/doc/api/utilities/colors.rst:660
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:660
#: ../../pyvista/doc/api/utilities/colors.rst:660
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#FFC0CB;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:664
#: ../../pyvista/doc/api/utilities/colors.rst:664
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:664
#: ../../pyvista/doc/api/utilities/colors.rst:664
msgid "``\"plum\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:665
#: ../../pyvista/doc/api/utilities/colors.rst:665
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:665
#: ../../pyvista/doc/api/utilities/colors.rst:665
msgid "``#DDA0DD``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:666
#: ../../pyvista/doc/api/utilities/colors.rst:666
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:666
#: ../../pyvista/doc/api/utilities/colors.rst:666
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#DDA0DD;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:670
#: ../../pyvista/doc/api/utilities/colors.rst:670
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:670
#: ../../pyvista/doc/api/utilities/colors.rst:670
msgid "``\"powderblue\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:671
#: ../../pyvista/doc/api/utilities/colors.rst:671
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:671
#: ../../pyvista/doc/api/utilities/colors.rst:671
msgid "``#B0E0E6``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:672
#: ../../pyvista/doc/api/utilities/colors.rst:672
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:672
#: ../../pyvista/doc/api/utilities/colors.rst:672
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#B0E0E6;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:676
#: ../../pyvista/doc/api/utilities/colors.rst:676
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:676
#: ../../pyvista/doc/api/utilities/colors.rst:676
msgid "``\"purple\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:677
#: ../../pyvista/doc/api/utilities/colors.rst:677
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:677
#: ../../pyvista/doc/api/utilities/colors.rst:677
msgid "``#800080``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:678
#: ../../pyvista/doc/api/utilities/colors.rst:678
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:678
#: ../../pyvista/doc/api/utilities/colors.rst:678
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#800080;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:682
#: ../../pyvista/doc/api/utilities/colors.rst:682
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:682
#: ../../pyvista/doc/api/utilities/colors.rst:682
msgid "``\"raw_sienna\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:683
#: ../../pyvista/doc/api/utilities/colors.rst:683
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:683
#: ../../pyvista/doc/api/utilities/colors.rst:683
msgid "``#965434``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:684
#: ../../pyvista/doc/api/utilities/colors.rst:684
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:684
#: ../../pyvista/doc/api/utilities/colors.rst:684
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#965434;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:688
#: ../../pyvista/doc/api/utilities/colors.rst:688
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:688
#: ../../pyvista/doc/api/utilities/colors.rst:688
msgid "``\"rebeccapurple\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:689
#: ../../pyvista/doc/api/utilities/colors.rst:689
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:689
#: ../../pyvista/doc/api/utilities/colors.rst:689
msgid "``#663399``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:690
#: ../../pyvista/doc/api/utilities/colors.rst:690
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:690
#: ../../pyvista/doc/api/utilities/colors.rst:690
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#663399;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:694
#: ../../pyvista/doc/api/utilities/colors.rst:694
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:694
#: ../../pyvista/doc/api/utilities/colors.rst:694
msgid "``\"red\"`` or ``\"r\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:695
#: ../../pyvista/doc/api/utilities/colors.rst:695
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:695
#: ../../pyvista/doc/api/utilities/colors.rst:695
msgid "``#FF0000``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:696
#: ../../pyvista/doc/api/utilities/colors.rst:696
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:696
#: ../../pyvista/doc/api/utilities/colors.rst:696
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#FF0000;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:700
#: ../../pyvista/doc/api/utilities/colors.rst:700
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:700
#: ../../pyvista/doc/api/utilities/colors.rst:700
msgid "``\"rosybrown\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:701
#: ../../pyvista/doc/api/utilities/colors.rst:701
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:701
#: ../../pyvista/doc/api/utilities/colors.rst:701
msgid "``#BC8F8F``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:702
#: ../../pyvista/doc/api/utilities/colors.rst:702
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:702
#: ../../pyvista/doc/api/utilities/colors.rst:702
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#BC8F8F;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:706
#: ../../pyvista/doc/api/utilities/colors.rst:706
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:706
#: ../../pyvista/doc/api/utilities/colors.rst:706
msgid "``\"royalblue\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:707
#: ../../pyvista/doc/api/utilities/colors.rst:707
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:707
#: ../../pyvista/doc/api/utilities/colors.rst:707
msgid "``#4169E1``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:708
#: ../../pyvista/doc/api/utilities/colors.rst:708
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:708
#: ../../pyvista/doc/api/utilities/colors.rst:708
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#4169E1;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:712
#: ../../pyvista/doc/api/utilities/colors.rst:712
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:712
#: ../../pyvista/doc/api/utilities/colors.rst:712
msgid "``\"saddlebrown\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:713
#: ../../pyvista/doc/api/utilities/colors.rst:713
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:713
#: ../../pyvista/doc/api/utilities/colors.rst:713
msgid "``#8B4513``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:714
#: ../../pyvista/doc/api/utilities/colors.rst:714
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:714
#: ../../pyvista/doc/api/utilities/colors.rst:714
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#8B4513;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:718
#: ../../pyvista/doc/api/utilities/colors.rst:718
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:718
#: ../../pyvista/doc/api/utilities/colors.rst:718
msgid "``\"salmon\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:719
#: ../../pyvista/doc/api/utilities/colors.rst:719
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:719
#: ../../pyvista/doc/api/utilities/colors.rst:719
msgid "``#FA8072``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:720
#: ../../pyvista/doc/api/utilities/colors.rst:720
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:720
#: ../../pyvista/doc/api/utilities/colors.rst:720
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#FA8072;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:724
#: ../../pyvista/doc/api/utilities/colors.rst:724
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:724
#: ../../pyvista/doc/api/utilities/colors.rst:724
msgid "``\"sandybrown\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:725
#: ../../pyvista/doc/api/utilities/colors.rst:725
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:725
#: ../../pyvista/doc/api/utilities/colors.rst:725
msgid "``#F4A460``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:726
#: ../../pyvista/doc/api/utilities/colors.rst:726
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:726
#: ../../pyvista/doc/api/utilities/colors.rst:726
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#F4A460;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:730
#: ../../pyvista/doc/api/utilities/colors.rst:730
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:730
#: ../../pyvista/doc/api/utilities/colors.rst:730
msgid "``\"seagreen\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:731
#: ../../pyvista/doc/api/utilities/colors.rst:731
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:731
#: ../../pyvista/doc/api/utilities/colors.rst:731
msgid "``#2E8B57``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:732
#: ../../pyvista/doc/api/utilities/colors.rst:732
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:732
#: ../../pyvista/doc/api/utilities/colors.rst:732
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#2E8B57;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:736
#: ../../pyvista/doc/api/utilities/colors.rst:736
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:736
#: ../../pyvista/doc/api/utilities/colors.rst:736
msgid "``\"seashell\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:737
#: ../../pyvista/doc/api/utilities/colors.rst:737
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:737
#: ../../pyvista/doc/api/utilities/colors.rst:737
msgid "``#FFF5EE``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:738
#: ../../pyvista/doc/api/utilities/colors.rst:738
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:738
#: ../../pyvista/doc/api/utilities/colors.rst:738
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#FFF5EE;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:742
#: ../../pyvista/doc/api/utilities/colors.rst:742
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:742
#: ../../pyvista/doc/api/utilities/colors.rst:742
msgid "``\"sienna\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:743
#: ../../pyvista/doc/api/utilities/colors.rst:743
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:743
#: ../../pyvista/doc/api/utilities/colors.rst:743
msgid "``#A0522D``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:744
#: ../../pyvista/doc/api/utilities/colors.rst:744
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:744
#: ../../pyvista/doc/api/utilities/colors.rst:744
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#A0522D;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:748
#: ../../pyvista/doc/api/utilities/colors.rst:748
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:748
#: ../../pyvista/doc/api/utilities/colors.rst:748
msgid "``\"silver\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:749
#: ../../pyvista/doc/api/utilities/colors.rst:749
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:749
#: ../../pyvista/doc/api/utilities/colors.rst:749
msgid "``#C0C0C0``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:750
#: ../../pyvista/doc/api/utilities/colors.rst:750
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:750
#: ../../pyvista/doc/api/utilities/colors.rst:750
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#C0C0C0;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:754
#: ../../pyvista/doc/api/utilities/colors.rst:754
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:754
#: ../../pyvista/doc/api/utilities/colors.rst:754
msgid "``\"skyblue\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:755
#: ../../pyvista/doc/api/utilities/colors.rst:755
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:755
#: ../../pyvista/doc/api/utilities/colors.rst:755
msgid "``#87CEEB``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:756
#: ../../pyvista/doc/api/utilities/colors.rst:756
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:756
#: ../../pyvista/doc/api/utilities/colors.rst:756
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#87CEEB;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:760
#: ../../pyvista/doc/api/utilities/colors.rst:760
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:760
#: ../../pyvista/doc/api/utilities/colors.rst:760
msgid "``\"slateblue\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:761
#: ../../pyvista/doc/api/utilities/colors.rst:761
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:761
#: ../../pyvista/doc/api/utilities/colors.rst:761
msgid "``#6A5ACD``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:762
#: ../../pyvista/doc/api/utilities/colors.rst:762
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:762
#: ../../pyvista/doc/api/utilities/colors.rst:762
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#6A5ACD;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:766
#: ../../pyvista/doc/api/utilities/colors.rst:766
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:766
#: ../../pyvista/doc/api/utilities/colors.rst:766
msgid "``\"slategray\"`` or ``\"slategrey\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:767
#: ../../pyvista/doc/api/utilities/colors.rst:767
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:767
#: ../../pyvista/doc/api/utilities/colors.rst:767
msgid "``#708090``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:768
#: ../../pyvista/doc/api/utilities/colors.rst:768
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:768
#: ../../pyvista/doc/api/utilities/colors.rst:768
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#708090;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:772
#: ../../pyvista/doc/api/utilities/colors.rst:772
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:772
#: ../../pyvista/doc/api/utilities/colors.rst:772
msgid "``\"snow\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:773
#: ../../pyvista/doc/api/utilities/colors.rst:773
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:773
#: ../../pyvista/doc/api/utilities/colors.rst:773
msgid "``#FFFAFA``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:774
#: ../../pyvista/doc/api/utilities/colors.rst:774
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:774
#: ../../pyvista/doc/api/utilities/colors.rst:774
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#FFFAFA;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:778
#: ../../pyvista/doc/api/utilities/colors.rst:778
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:778
#: ../../pyvista/doc/api/utilities/colors.rst:778
msgid "``\"springgreen\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:779
#: ../../pyvista/doc/api/utilities/colors.rst:779
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:779
#: ../../pyvista/doc/api/utilities/colors.rst:779
msgid "``#00FF7F``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:780
#: ../../pyvista/doc/api/utilities/colors.rst:780
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:780
#: ../../pyvista/doc/api/utilities/colors.rst:780
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#00FF7F;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:784
#: ../../pyvista/doc/api/utilities/colors.rst:784
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:784
#: ../../pyvista/doc/api/utilities/colors.rst:784
msgid "``\"steelblue\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:785
#: ../../pyvista/doc/api/utilities/colors.rst:785
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:785
#: ../../pyvista/doc/api/utilities/colors.rst:785
msgid "``#4682B4``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:786
#: ../../pyvista/doc/api/utilities/colors.rst:786
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:786
#: ../../pyvista/doc/api/utilities/colors.rst:786
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#4682B4;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:790
#: ../../pyvista/doc/api/utilities/colors.rst:790
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:790
#: ../../pyvista/doc/api/utilities/colors.rst:790
msgid "``\"tan\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:791
#: ../../pyvista/doc/api/utilities/colors.rst:791
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:791
#: ../../pyvista/doc/api/utilities/colors.rst:791
msgid "``#D2B48C``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:792
#: ../../pyvista/doc/api/utilities/colors.rst:792
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:792
#: ../../pyvista/doc/api/utilities/colors.rst:792
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#D2B48C;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:796
#: ../../pyvista/doc/api/utilities/colors.rst:796
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:796
#: ../../pyvista/doc/api/utilities/colors.rst:796
msgid "``\"teal\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:797
#: ../../pyvista/doc/api/utilities/colors.rst:797
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:797
#: ../../pyvista/doc/api/utilities/colors.rst:797
msgid "``#008080``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:798
#: ../../pyvista/doc/api/utilities/colors.rst:798
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:798
#: ../../pyvista/doc/api/utilities/colors.rst:798
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#008080;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:802
#: ../../pyvista/doc/api/utilities/colors.rst:802
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:802
#: ../../pyvista/doc/api/utilities/colors.rst:802
msgid "``\"thistle\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:803
#: ../../pyvista/doc/api/utilities/colors.rst:803
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:803
#: ../../pyvista/doc/api/utilities/colors.rst:803
msgid "``#D8BFD8``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:804
#: ../../pyvista/doc/api/utilities/colors.rst:804
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:804
#: ../../pyvista/doc/api/utilities/colors.rst:804
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#D8BFD8;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:808
#: ../../pyvista/doc/api/utilities/colors.rst:808
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:808
#: ../../pyvista/doc/api/utilities/colors.rst:808
msgid "``\"tomato\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:809
#: ../../pyvista/doc/api/utilities/colors.rst:809
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:809
#: ../../pyvista/doc/api/utilities/colors.rst:809
msgid "``#FF6347``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:810
#: ../../pyvista/doc/api/utilities/colors.rst:810
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:810
#: ../../pyvista/doc/api/utilities/colors.rst:810
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#FF6347;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:814
#: ../../pyvista/doc/api/utilities/colors.rst:814
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:814
#: ../../pyvista/doc/api/utilities/colors.rst:814
msgid "``\"turquoise\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:815
#: ../../pyvista/doc/api/utilities/colors.rst:815
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:815
#: ../../pyvista/doc/api/utilities/colors.rst:815
msgid "``#40E0D0``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:816
#: ../../pyvista/doc/api/utilities/colors.rst:816
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:816
#: ../../pyvista/doc/api/utilities/colors.rst:816
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#40E0D0;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:820
#: ../../pyvista/doc/api/utilities/colors.rst:820
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:820
#: ../../pyvista/doc/api/utilities/colors.rst:820
msgid "``\"violet\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:821
#: ../../pyvista/doc/api/utilities/colors.rst:821
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:821
#: ../../pyvista/doc/api/utilities/colors.rst:821
msgid "``#EE82EE``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:822
#: ../../pyvista/doc/api/utilities/colors.rst:822
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:822
#: ../../pyvista/doc/api/utilities/colors.rst:822
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#EE82EE;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:826
#: ../../pyvista/doc/api/utilities/colors.rst:826
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:826
#: ../../pyvista/doc/api/utilities/colors.rst:826
msgid "``\"wheat\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:827
#: ../../pyvista/doc/api/utilities/colors.rst:827
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:827
#: ../../pyvista/doc/api/utilities/colors.rst:827
msgid "``#F5DEB3``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:828
#: ../../pyvista/doc/api/utilities/colors.rst:828
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:828
#: ../../pyvista/doc/api/utilities/colors.rst:828
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#F5DEB3;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:832
#: ../../pyvista/doc/api/utilities/colors.rst:832
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:832
#: ../../pyvista/doc/api/utilities/colors.rst:832
msgid "``\"white\"`` or ``\"w\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:833
#: ../../pyvista/doc/api/utilities/colors.rst:833
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:833
#: ../../pyvista/doc/api/utilities/colors.rst:833
msgid "``#FFFFFF``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:834
#: ../../pyvista/doc/api/utilities/colors.rst:834
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:834
#: ../../pyvista/doc/api/utilities/colors.rst:834
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#FFFFFF;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:838
#: ../../pyvista/doc/api/utilities/colors.rst:838
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:838
#: ../../pyvista/doc/api/utilities/colors.rst:838
msgid "``\"whitesmoke\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:839
#: ../../pyvista/doc/api/utilities/colors.rst:839
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:839
#: ../../pyvista/doc/api/utilities/colors.rst:839
msgid "``#F5F5F5``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:840
#: ../../pyvista/doc/api/utilities/colors.rst:840
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:840
#: ../../pyvista/doc/api/utilities/colors.rst:840
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#F5F5F5;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:844
#: ../../pyvista/doc/api/utilities/colors.rst:844
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:844
#: ../../pyvista/doc/api/utilities/colors.rst:844
msgid "``\"yellow\"`` or ``\"y\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:845
#: ../../pyvista/doc/api/utilities/colors.rst:845
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:845
#: ../../pyvista/doc/api/utilities/colors.rst:845
msgid "``#FFFF00``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:846
#: ../../pyvista/doc/api/utilities/colors.rst:846
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:846
#: ../../pyvista/doc/api/utilities/colors.rst:846
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#FFFF00;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:850
#: ../../pyvista/doc/api/utilities/colors.rst:850
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:850
#: ../../pyvista/doc/api/utilities/colors.rst:850
msgid "``\"yellowgreen\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:851
#: ../../pyvista/doc/api/utilities/colors.rst:851
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:851
#: ../../pyvista/doc/api/utilities/colors.rst:851
msgid "``#9ACD32``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:852
#: ../../pyvista/doc/api/utilities/colors.rst:852
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:852
#: ../../pyvista/doc/api/utilities/colors.rst:852
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#9ACD32;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:856
#: ../../pyvista/doc/api/utilities/colors.rst:856
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:856
#: ../../pyvista/doc/api/utilities/colors.rst:856
msgid "``\"tab:blue\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:857
#: ../../pyvista/doc/api/utilities/colors.rst:857
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:857
#: ../../pyvista/doc/api/utilities/colors.rst:857
msgid "``#1f77b4``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:858
#: ../../pyvista/doc/api/utilities/colors.rst:858
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:858
#: ../../pyvista/doc/api/utilities/colors.rst:858
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#1f77b4;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:862
#: ../../pyvista/doc/api/utilities/colors.rst:862
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:862
#: ../../pyvista/doc/api/utilities/colors.rst:862
msgid "``\"tab:orange\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:863
#: ../../pyvista/doc/api/utilities/colors.rst:863
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:863
#: ../../pyvista/doc/api/utilities/colors.rst:863
msgid "``#ff7f0e``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:864
#: ../../pyvista/doc/api/utilities/colors.rst:864
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:864
#: ../../pyvista/doc/api/utilities/colors.rst:864
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#ff7f0e;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:868
#: ../../pyvista/doc/api/utilities/colors.rst:868
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:868
#: ../../pyvista/doc/api/utilities/colors.rst:868
msgid "``\"tab:green\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:869
#: ../../pyvista/doc/api/utilities/colors.rst:869
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:869
#: ../../pyvista/doc/api/utilities/colors.rst:869
msgid "``#2ca02c``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:870
#: ../../pyvista/doc/api/utilities/colors.rst:870
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:870
#: ../../pyvista/doc/api/utilities/colors.rst:870
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#2ca02c;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:874
#: ../../pyvista/doc/api/utilities/colors.rst:874
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:874
#: ../../pyvista/doc/api/utilities/colors.rst:874
msgid "``\"tab:red\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:875
#: ../../pyvista/doc/api/utilities/colors.rst:875
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:875
#: ../../pyvista/doc/api/utilities/colors.rst:875
msgid "``#d62728``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:876
#: ../../pyvista/doc/api/utilities/colors.rst:876
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:876
#: ../../pyvista/doc/api/utilities/colors.rst:876
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#d62728;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:880
#: ../../pyvista/doc/api/utilities/colors.rst:880
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:880
#: ../../pyvista/doc/api/utilities/colors.rst:880
msgid "``\"tab:purple\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:881
#: ../../pyvista/doc/api/utilities/colors.rst:881
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:881
#: ../../pyvista/doc/api/utilities/colors.rst:881
msgid "``#9467bd``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:882
#: ../../pyvista/doc/api/utilities/colors.rst:882
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:882
#: ../../pyvista/doc/api/utilities/colors.rst:882
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#9467bd;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:886
#: ../../pyvista/doc/api/utilities/colors.rst:886
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:886
#: ../../pyvista/doc/api/utilities/colors.rst:886
msgid "``\"tab:brown\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:887
#: ../../pyvista/doc/api/utilities/colors.rst:887
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:887
#: ../../pyvista/doc/api/utilities/colors.rst:887
msgid "``#8c564b``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:888
#: ../../pyvista/doc/api/utilities/colors.rst:888
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:888
#: ../../pyvista/doc/api/utilities/colors.rst:888
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#8c564b;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:892
#: ../../pyvista/doc/api/utilities/colors.rst:892
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:892
#: ../../pyvista/doc/api/utilities/colors.rst:892
msgid "``\"tab:pink\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:893
#: ../../pyvista/doc/api/utilities/colors.rst:893
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:893
#: ../../pyvista/doc/api/utilities/colors.rst:893
msgid "``#e377c2``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:894
#: ../../pyvista/doc/api/utilities/colors.rst:894
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:894
#: ../../pyvista/doc/api/utilities/colors.rst:894
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#e377c2;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:898
#: ../../pyvista/doc/api/utilities/colors.rst:898
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:898
#: ../../pyvista/doc/api/utilities/colors.rst:898
msgid "``\"tab:gray\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:899
#: ../../pyvista/doc/api/utilities/colors.rst:899
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:899
#: ../../pyvista/doc/api/utilities/colors.rst:899
msgid "``#7f7f7f``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:900
#: ../../pyvista/doc/api/utilities/colors.rst:900
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:900
#: ../../pyvista/doc/api/utilities/colors.rst:900
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#7f7f7f;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:904
#: ../../pyvista/doc/api/utilities/colors.rst:904
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:904
#: ../../pyvista/doc/api/utilities/colors.rst:904
msgid "``\"tab:olive\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:905
#: ../../pyvista/doc/api/utilities/colors.rst:905
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:905
#: ../../pyvista/doc/api/utilities/colors.rst:905
msgid "``#bcbd22``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:906
#: ../../pyvista/doc/api/utilities/colors.rst:906
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:906
#: ../../pyvista/doc/api/utilities/colors.rst:906
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#bcbd22;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:910
#: ../../pyvista/doc/api/utilities/colors.rst:910
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:910
#: ../../pyvista/doc/api/utilities/colors.rst:910
msgid "``\"tab:cyan\"``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:911
#: ../../pyvista/doc/api/utilities/colors.rst:911
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:911
#: ../../pyvista/doc/api/utilities/colors.rst:911
msgid "``#17becf``"
msgstr ""

#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:912
#: ../../pyvista/doc/api/utilities/colors.rst:912
#: ../../pyvista/doc/api/utilities/color_table/color_table.rst:912
#: ../../pyvista/doc/api/utilities/colors.rst:912
msgid ""
"<span style='width:100%; height:100%; display:block; background-color: "
"#17becf;'>&nbsp;</span>"
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color:69
msgid "</details>"
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Color.rst:3
msgid ""
"Create a transparent green color using a color name, float RGBA sequence, "
"integer RGBA sequence and RGBA hexadecimal string."
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color.convert_color_channel:2
msgid "Convert the given color channel value to the integer representation."
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color.convert_color_channel:11
msgid ""
"**val** : :class:`python:int`, :class:`python:float` or :class:`python:str`"
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color.convert_color_channel:10
msgid "python:int, python:float or python:str"
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color.convert_color_channel:8
msgid ""
"Color channel value to convert. Supported input values are a hex string of "
"length 2 (``'00'`` to ``'ff'``) with an optional prefix (``'#'`` or "
"``'0x'``), a float (``0.0`` to ``1.0``) or an integer (``0`` to ``255``)."
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color.convert_color_channel:16
msgid ""
"Color channel value in the integer representation (values between ``0`` and "
"``255``)."
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.Color.float_rgb:2
msgid "Get the color value as an RGB float tuple."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Color.rst:3
msgid "Create a blue color with custom opacity."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Color.rst:12
msgid "Create a red color using a float RGB sequence."
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.Color.float_rgba:2
msgid "Get the color value as an RGBA float tuple."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Color.rst:12
msgid "Create a transparent red color using a float RGBA sequence."
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color.from_dict:2
msgid "Construct from dictionary for JSON deserialization."
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.Color.hex_rgb:2
msgid "Get the color value as an RGB hexadecimal value."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Color.rst:3
msgid "Create a blue color with half opacity."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Color.rst:12
msgid "Create a red color using an RGB hexadecimal value."
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.Color.hex_rgba:2
msgid "Get the color value as an RGBA hexadecimal value."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Color.rst:12
msgid "Create a transparent red color using an RGBA hexadecimal value."
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.Color.int_rgb:2
msgid "Get the color value as an RGB integer tuple."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Color.rst:12
msgid "Create a red color using an integer RGB sequence."
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.Color.int_rgba:2
msgid "Get the color value as an RGBA integer tuple."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Color.rst:12
msgid "Create a transparent red color using an integer RGBA sequence."
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color.linear_to_srgb:2
msgid "Convert from linear color values to sRGB color values."
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color.linear_to_srgb:21
#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color.srgb_to_linear:21
msgid ":obj:`Color`"
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color.linear_to_srgb:9
msgid "A new ``Color`` instance with sRGB color values."
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of pyvista.Color.name:2
msgid "Get the color name."
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of pyvista.Color.name:16
msgid ":class:`python:str` or :data:`python:None`"
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of pyvista.Color.name:9
msgid "The color name, in case this color has a name; otherwise ``None``."
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of pyvista.Color.name:20
msgid "Refer to the table below for a list of supported colors."
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color.srgb_to_linear:2
msgid "Convert from sRGB color values to linear color values."
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color.srgb_to_linear:9
msgid "A new ``Color`` instance with linear color values."
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color.strip_hex_prefix:2
msgid "Strip any ``'#'`` or ``'0x'`` prefix from a hexadecimal string."
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color.strip_hex_prefix:8
msgid "**h** : :class:`python:str`"
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color.strip_hex_prefix:8
msgid "Hexadecimal string to strip."
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color.strip_hex_prefix:13
msgid "Stripped hexadecimal string."
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.plotting.colors.Color.to_dict:2
msgid "Convert to dictionary for JSON serialization."
msgstr ""

#: ../../pyvista/pyvista/plotting/colors.pydocstring of
#: pyvista.Color.vtk_c3ub:2
msgid "Get the color value as a VTK Color3ub instance."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Cone.rst:2
msgid "Cone"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cone:2
msgid "Create a cone."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cone:9
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Dodecahedron:12
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Icosahedron:13
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Octahedron:13
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.PlatonicSolid:21
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Polygon:9
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Superquadric:8
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Tetrahedron:12
msgid "**center** : :obj:`Sequence`, default: (0.0, 0.0, 0.0)"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cone:8
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Dodecahedron:11
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Icosahedron:12
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Octahedron:12
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.PlatonicSolid:20
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Polygon:8
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Superquadric:7
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Tetrahedron:11
msgid "Sequence, default: (0.0, 0.0, 0.0)"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cone:8
msgid "Center in ``[x, y, z]``. Axis of the cone passes through this point."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cone:13
msgid "**direction** : :obj:`Sequence`, default: (1.0, 0.0, 0.0)"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cone:12
msgid "Sequence, default: (1.0, 0.0, 0.0)"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cone:12
msgid "Direction vector in ``[x, y, z]``. Orientation vector of the cone."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cone:16
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cylinder:18
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CylinderStructured:16
msgid "**height** : :class:`python:float`, default: 1.0"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cone:16
msgid "Height along the cone in its specified direction."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cone:19
msgid "Base radius of the cone."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cone:22
msgid "Enable or disable the capping the base of the cone with a polygon."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cone:26
msgid "The angle in degrees between the axis of the cone and a generatrix."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cone:30
msgid "**resolution** : :class:`python:int`, default: 6"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cone:29
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Disc:25
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Polygon:17
msgid "python:int, default: 6"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cone:30
msgid "Number of facets used to represent the cone."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cone:35
msgid "Cone mesh."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Cone.rst:3
msgid "Create a default Cone."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Cube.rst:2
msgid "Cube"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cube:2
msgid "Create a cube."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cube:4
msgid ""
"It's possible to specify either the center and side lengths or just the "
"bounds of the cube. If ``bounds`` are given, all other arguments are "
"ignored."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cube:8
msgid ""
"The cube is created using ``vtk.vtkCubeSource``. For compatibility with "
":func:`pyvista.PlatonicSolid`, face indices are also added as cell data. For"
" full compatibility with :func:`PlatonicSolid() <pyvista.PlatonicSolid>`, "
"one has to use ``x_length = y_length = z_length = 2 * radius / 3**0.5``. The"
" cube points are also cleaned by default now, leaving only the 8 corners and"
" a watertight (manifold) mesh."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cube:20
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cylinder:9
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CylinderStructured:19
msgid "**center** : :term:`python:sequence`, default: (0.0, 0.0, 0.0)"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cube:19
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cylinder:8
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CylinderStructured:18
msgid "python:sequence, default: (0.0, 0.0, 0.0)"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cube:20
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:11
msgid "Center in ``[x, y, z]``."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cube:23
msgid "**x_length** : :class:`python:float`, default: 1.0"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cube:23
msgid "Length of the cube in the x-direction."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cube:26
msgid "**y_length** : :class:`python:float`, default: 1.0"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cube:26
msgid "Length of the cube in the y-direction."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cube:29
msgid "**z_length** : :class:`python:float`, default: 1.0"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cube:29
msgid "Length of the cube in the z-direction."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cube:32
msgid ""
"Specify the bounding box of the cube. If given, all other size arguments are"
" ignored. ``(xMin, xMax, yMin, yMax, zMin, zMax)``."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cube:41
msgid ""
"**clean** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:True`"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cube:36
msgid ""
"Whether to clean the raw points of the mesh, making the cube manifold. Note "
"that this will degrade the texture coordinates that come with the mesh, so "
"if you plan to map a texture on the cube, consider setting this to "
"``False``."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cube:46
msgid "Mesh of the cube."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Cube.rst:3
msgid "Create a default cube."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Cylinder.rst:2
msgid "Cylinder"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cylinder:2
msgid "Create the surface of a cylinder."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cylinder:4
msgid "See also :func:`pyvista.CylinderStructured`."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cylinder:9
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CylinderStructured:19
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Plane:8
msgid "Location of the centroid in ``[x, y, z]``."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cylinder:12
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CylinderStructured:22
msgid "**direction** : :term:`python:sequence`, default: (1.0, 0.0, 0.0)"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cylinder:11
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CylinderStructured:21
msgid "python:sequence, default: (1.0, 0.0, 0.0)"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cylinder:12
msgid "Direction cylinder points to  in ``[x, y, z]``."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cylinder:15
msgid "Radius of the cylinder."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cylinder:18
msgid "Height of the cylinder."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cylinder:21
msgid "Number of points on the circular face of the cylinder."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cylinder:24
msgid ""
"**capping** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:True`"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cylinder:24
msgid "Cap cylinder ends with polygons."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Cylinder:29
msgid "Cylinder surface."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.CylinderStructured.rst:2
msgid "CylinderStructured"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CylinderStructured:2
msgid "Create a cylinder mesh as a :class:`pyvista.StructuredGrid`."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CylinderStructured:4
msgid ""
"The end caps are left open. This can create a surface mesh if a single value"
" for the ``radius`` is given or a 3D mesh if multiple radii are given as a "
"list/array in the ``radius`` argument."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CylinderStructured:13
msgid ""
"**radius** : :class:`python:float`, :term:`python:sequence`, default: 0.5"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CylinderStructured:12
msgid "python:float, python:sequence, default: 0.5"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CylinderStructured:11
msgid ""
"Radius of the cylinder. If a sequence, then describes the radial coordinates"
" of the cells as a range of values as specified by the ``radius``."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CylinderStructured:16
msgid "Height of the cylinder along its Z-axis."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CylinderStructured:22
msgid "Direction cylinder Z-axis in ``[x, y, z]``."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CylinderStructured:26
msgid "**theta_resolution** : :class:`python:int`, default: 32"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CylinderStructured:25
msgid "python:int, default: 32"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CylinderStructured:25
msgid ""
"Number of points on the circular face of the cylinder. Ignored if ``radius``"
" is an iterable."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CylinderStructured:29
msgid "**z_resolution** : :class:`python:int`, default: 10"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CylinderStructured:28
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Plane:19
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Plane:22
msgid "python:int, default: 10"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CylinderStructured:29
msgid "Number of points along the height (Z-axis) of the cylinder."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.CylinderStructured:34
msgid "Structured cylinder."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.CylinderStructured.rst:3
msgid "Default structured cylinder"
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.CylinderStructured.rst:23
msgid ""
"Structured cylinder with an inner radius of 1, outer of 2, with 5 segments."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Disc.rst:2
msgid "Disc"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Disc:2
msgid "Create a polygonal disk with a hole in the center."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Disc:4
msgid ""
"The disk has zero height. The user can specify the inner and outer radius of"
" the disk, and the radial and circumferential resolution of the polygonal "
"representation."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Disc:11
msgid "**center** : :term:`python:iterable`, default: (0.0, 0.0, 0.0)"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Disc:11
msgid "Center in ``[x, y, z]``. Middle of the axis of the disc."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Disc:14
msgid "**inner** : :class:`python:float`, default: 0.25"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Disc:17
msgid "**outer** : :class:`python:float`, default: 0.5"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Disc:20
msgid "**normal** : :term:`python:iterable`, default: (0, 0, 1)"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Disc:19
msgid "python:iterable, default: (0, 0, 1)"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Disc:20
msgid "Direction vector in ``[x, y, z]``. Orientation vector of the disc."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Disc:23
msgid "**r_res** : :class:`python:int`, default: 1"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Disc:22
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Line:13
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Tube:13
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Wavelet:41
#: ../../pyvista/pyvista/utilities/regression.pydocstring of
#: pyvista.utilities.regression.compare_images:17
msgid "python:int, default: 1"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Disc:23
msgid "Number of points in radial direction."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Disc:26
msgid "**c_res** : :class:`python:int`, default: 6"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Disc:26
msgid "Number of points in circumferential direction."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Disc:31
msgid "Disk mesh."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Disc.rst:3
msgid "Create a disc with 50 points in the circumferential direction."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Dodecahedron.rst:2
msgid "Dodecahedron"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Dodecahedron:2
msgid "Create a dodecahedron of a given size."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Dodecahedron:4
msgid "A dodecahedron is composed of twelve congruent regular pentagons."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Dodecahedron:9
msgid "The radius of the circumscribed sphere for the dodecahedron."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Dodecahedron:12
msgid "Three-length sequence defining the center of the dodecahedron."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Dodecahedron:17
msgid ""
"Mesh for the dodecahedron. Cell scalars are defined that assign integer "
"labels to each face (with array name ``\"FaceIndex\"``)."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Dodecahedron.rst:3
#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.PlatonicSolid.rst:3
msgid "Create and plot a dodecahedron."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Dodecahedron.rst:23
#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Icosahedron.rst:23
#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Octahedron.rst:23
#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.PlatonicSolid.rst:23
#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Tetrahedron.rst:23
msgid "See :ref:`platonic_example` for more examples using this filter."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Icosahedron.rst:2
msgid "Icosahedron"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Icosahedron:2
msgid "Create an icosahedron of a given size."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Icosahedron:4
msgid "An icosahedron is composed of twenty congruent equilateral triangles."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Icosahedron:10
msgid "The radius of the circumscribed sphere for the icosahedron."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Icosahedron:13
msgid "Three-length sequence defining the center of the icosahedron."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Icosahedron:18
msgid ""
"Mesh for the icosahedron. Cell scalars are defined that assign integer "
"labels to each face (with array name ``\"FaceIndex\"``)."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Icosahedron.rst:3
msgid "Create and plot an icosahedron."
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Line:2
msgid "Create a line."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Line:8
msgid ""
"**pointa** : :obj:`np.ndarray <numpy.ndarray>` or :class:`python:list`, "
"default: (-0.5, 0.0, 0.0)"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Line:7
msgid "np.ndarray or python:list, default: (-0.5, 0.0, 0.0)"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Line:11
msgid ""
"**pointb** : :obj:`np.ndarray <numpy.ndarray>` or :class:`python:list`, "
"default: (0.5, 0.0, 0.0)"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Line:10
msgid "np.ndarray or python:list, default: (0.5, 0.0, 0.0)"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Line:14
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Tube:14
msgid "**resolution** : :class:`python:int`, default: 1"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Line:19
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.MultipleLines:13
msgid "Line mesh."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Line.rst:3
msgid "Create a line between ``(0, 0, 0)`` and ``(0, 0, 1)``."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.MultipleLines.rst:2
msgid "MultipleLines"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.MultipleLines:2
msgid "Create multiple lines."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.MultipleLines:8
msgid ""
"**points** : :obj:`np.ndarray <numpy.ndarray>` or :class:`python:list`, "
"default: [[-0.5, 0.0, 0.0], [0.5, 0.0, 0.0]]"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.MultipleLines:7
msgid ""
"np.ndarray or python:list, default: [[-0.5, 0.0, 0.0], [0.5, 0.0, 0.0]]"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.MultipleLines:8
msgid "List of points defining a broken line."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.MultipleLines.rst:3
msgid ""
"Create a multiple lines between ``(0, 0, 0)``, ``(1, 1, 1)`` and ``(0, 0, "
"1)``."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Octahedron.rst:2
msgid "Octahedron"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Octahedron:2
msgid "Create an octahedron of a given size."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Octahedron:4
msgid "An octahedron is composed of eight congruent equilateral triangles."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Octahedron:10
msgid "The radius of the circumscribed sphere for the octahedron."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Octahedron:13
msgid "Three-length sequence defining the center of the octahedron."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Octahedron:18
msgid ""
"Mesh for the octahedron. Cell scalars are defined that assign integer labels"
" to each face (with array name ``\"FaceIndex\"``)."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Octahedron.rst:3
msgid "Create and plot an octahedron."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricBohemianDome.rst:2
msgid "ParametricBohemianDome"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:37:<autosummary>:1
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBohemianDome:2
msgid "Generate a Bohemian dome surface."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBohemianDome:8
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricConicSpiral:12
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricDini:11
msgid "**a** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBohemianDome:8
msgid "Bohemian dome surface parameter."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBohemianDome:11
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBour:8
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBoy:17
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricCatalanMinimal:11
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricConicSpiral:30
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricCrossCap:11
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricDini:18
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEnneper:11
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricFigure8Klein:14
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricHenneberg:8
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricKlein:12
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricKuen:17
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricMobius:11
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricPluckerConoid:15
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricPseudosphere:12
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:48
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRoman:11
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperEllipsoid:27
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:39
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricTorus:15
msgid "See :func:`surface_from_para` for additional keyword arguments."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBohemianDome:16
msgid "ParametricBohemianDome surface."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricBohemianDome.rst:3
msgid "Create a ParametricBohemianDome mesh."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricBour.rst:2
msgid "ParametricBour"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:37:<autosummary>:1
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBour:2
msgid "Generate Bour's minimal surface."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBour:13
msgid "ParametricBour surface."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricBour.rst:3
msgid "Create a ParametricBour mesh."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricBoy.rst:2
msgid "ParametricBoy"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:37:<autosummary>:1
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBoy:2
msgid "Generate Boy's surface."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBoy:4
msgid ""
"This is a model of the projective plane without singularities.  It was found"
" by Werner Boy on assignment from David Hilbert."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBoy:7
msgid ""
"For further information about this surface, please consult the technical "
"description \"Parametric surfaces\" in the \"VTK Technical Documents\" "
"section in the VTK.org web pages."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBoy:14
msgid "The scale factor for the z-coordinate."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricBoy:22
msgid "ParametricBoy surface."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricBoy.rst:3
msgid "Create a ParametricBoy mesh."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricCatalanMinimal.rst:2
msgid "ParametricCatalanMinimal"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:37:<autosummary>:1
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricCatalanMinimal:2
msgid "Generate Catalan's minimal surface."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricCatalanMinimal:4
msgid ""
"ParametricCatalanMinimal generates Catalan's minimal surface parametrically."
" This minimal surface contains the cycloid as a geodesic."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricCatalanMinimal:16
msgid "ParametricCatalanMinimal surface."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricCatalanMinimal.rst:3
msgid "Create a ParametricCatalanMinimal mesh."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricConicSpiral.rst:2
msgid "ParametricConicSpiral"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:37:<autosummary>:1
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricConicSpiral:2
msgid "Generate conic spiral surfaces that resemble sea-shells."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricConicSpiral:4
msgid ""
"ParametricConicSpiral generates conic spiral surfaces. These can resemble "
"sea shells, or may look like a torus \"eating\" its own tail."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricConicSpiral:11
msgid "The scale factor. Default is 0.2."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricConicSpiral:17
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricDini:15
msgid "**b** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricConicSpiral:15
msgid ""
"The A function coefficient. See the definition in Parametric surfaces "
"referred to above. Default is 1."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricConicSpiral:22
msgid "**c** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricConicSpiral:20
msgid ""
"The B function coefficient. See the definition in Parametric surfaces "
"referred to above. Default is 0.1."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricConicSpiral:27
msgid "**n** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricConicSpiral:25
msgid ""
"The C function coefficient. See the definition in Parametric surfaces "
"referred to above. Default is 2."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricConicSpiral:35
msgid "ParametricConicSpiral surface."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricConicSpiral.rst:3
msgid "Create a ParametricConicSpiral mesh."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricCrossCap.rst:2
msgid "ParametricCrossCap"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:37:<autosummary>:1
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricCrossCap:2
msgid "Generate a cross-cap."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricCrossCap:4
msgid ""
"ParametricCrossCap generates a cross-cap which is a non-orientable self-"
"intersecting single-sided surface.  This is one possible image of a "
"projective plane in three-space."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricCrossCap:16
msgid "ParametricCrossCap surface."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricCrossCap.rst:3
msgid "Create a ParametricCrossCap mesh."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricDini.rst:2
msgid "ParametricDini"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:37:<autosummary>:1
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricDini:2
msgid "Generate Dini's surface."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricDini:4
msgid ""
"ParametricDini generates Dini's surface.  Dini's surface is a surface that "
"possesses constant negative Gaussian curvature"
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricDini:10
msgid ""
"The scale factor.  See the definition in Parametric surfaces referred to "
"above.  Default is 1."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricDini:14
msgid ""
"The scale factor.  See the definition in Parametric surfaces referred to "
"above.  Default is 0.2."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricDini:23
msgid "ParametricDini surface."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricDini.rst:3
msgid "Create a ParametricDini mesh."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricEllipsoid.rst:2
msgid "ParametricEllipsoid"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:37:<autosummary>:1
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEllipsoid:2
msgid "Generate an ellipsoid."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEllipsoid:4
msgid ""
"ParametricEllipsoid generates an ellipsoid.  If all the radii are the same, "
"we have a sphere.  An oblate spheroid occurs if RadiusX = RadiusY > RadiusZ."
"  Here the Z-axis forms the symmetry axis. To a first approximation, this is"
" the shape of the earth.  A prolate spheroid occurs if RadiusX = RadiusY < "
"RadiusZ."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEllipsoid:13
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperEllipsoid:12
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:24
msgid "**xradius** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEllipsoid:13
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperEllipsoid:12
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:24
msgid "The scaling factor for the x-axis. Default is 1."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEllipsoid:16
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperEllipsoid:15
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:27
msgid "**yradius** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEllipsoid:16
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperEllipsoid:15
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:27
msgid "The scaling factor for the y-axis. Default is 1."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEllipsoid:19
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperEllipsoid:18
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:30
msgid "**zradius** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEllipsoid:19
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperEllipsoid:18
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:30
msgid "The scaling factor for the z-axis. Default is 1."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEllipsoid:22
msgid ""
"See :func:`surface_from_para` and :func:`parametric_keywords` for additional"
" keyword arguments."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEllipsoid:28
msgid "ParametricEllipsoid surface."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricEllipsoid.rst:3
msgid "Create a ParametricEllipsoid mesh."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricEnneper.rst:2
msgid "ParametricEnneper"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:37:<autosummary>:1
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEnneper:2
msgid "Generate Enneper's surface."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEnneper:4
msgid ""
"ParametricEnneper generates Enneper's surface.  Enneper's surface is a self-"
"intersecting minimal surface possessing constant negative Gaussian "
"curvature."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricEnneper:16
msgid "ParametricEnneper surface."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricEnneper.rst:3
msgid "Create a ParametricEnneper mesh."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricFigure8Klein.rst:2
msgid "ParametricFigure8Klein"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:37:<autosummary>:1
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricFigure8Klein:2
msgid "Generate a figure-8 Klein bottle."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricFigure8Klein:4
msgid ""
"ParametricFigure8Klein generates a figure-8 Klein bottle.  A Klein bottle is"
" a closed surface with no interior and only one surface. It is unrealisable "
"in 3 dimensions without intersecting surfaces."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricFigure8Klein:11
msgid "The radius of the bottle. Default is 1."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricFigure8Klein:19
msgid "ParametricFigure8Klein surface."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricFigure8Klein.rst:3
msgid "Create a ParametricFigure8Klein mesh."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricHenneberg.rst:2
msgid "ParametricHenneberg"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:37:<autosummary>:1
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricHenneberg:2
msgid "Generate Henneberg's minimal surface."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricHenneberg:13
msgid "ParametricHenneberg surface."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricHenneberg.rst:3
msgid "Create a ParametricHenneberg mesh."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricKlein.rst:2
msgid "ParametricKlein"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:37:<autosummary>:1
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricKlein:2
msgid "Generate a \"classical\" representation of a Klein bottle."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricKlein:4
msgid ""
"ParametricKlein generates a \"classical\" representation of a Klein bottle."
"  A Klein bottle is a closed surface with no interior and only one surface."
"  It is unrealisable in 3 dimensions without intersecting surfaces."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricKlein:17
msgid "ParametricKlein surface."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricKlein.rst:3
msgid "Create a ParametricKlein mesh."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricKuen.rst:2
msgid "ParametricKuen"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:37:<autosummary>:1
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricKuen:2
msgid "Generate Kuens' surface."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricKuen:4
msgid ""
"ParametricKuen generates Kuens' surface. This surface has a constant "
"negative gaussian curvature."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricKuen:14
msgid "**deltav0** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricKuen:10
msgid ""
"The value to use when ``V == 0``. Default is 0.05, giving the best "
"appearance with the default settings. Setting it to a value less than 0.05 "
"extrapolates the surface towards a pole in the -z direction. Setting it to 0"
" retains the pole whose z-value is -inf."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricKuen:22
msgid "ParametricKuen surface."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricKuen.rst:3
msgid "Create a ParametricKuen mesh."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricMobius.rst:2
msgid "ParametricMobius"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:37:<autosummary>:1
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricMobius:2
msgid "Generate a Mobius strip."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricMobius:8
msgid "The radius of the Mobius strip. Default is 1."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricMobius:16
msgid "ParametricMobius surface."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricMobius.rst:3
msgid "Create a ParametricMobius mesh."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricPluckerConoid.rst:2
msgid "ParametricPluckerConoid"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:37:<autosummary>:1
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricPluckerConoid:2
msgid "Generate Plucker's conoid surface."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricPluckerConoid:4
msgid ""
"ParametricPluckerConoid generates Plucker's conoid surface parametrically.  "
"Plucker's conoid is a ruled surface, named after Julius Plucker. It is "
"possible to set the number of folds in this class via the parameter 'n'."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricPluckerConoid:12
msgid "This is the number of folds in the conoid."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricPluckerConoid:20
msgid "ParametricPluckerConoid surface."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricPluckerConoid.rst:3
msgid "Create a ParametricPluckerConoid mesh."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricPseudosphere.rst:2
msgid "ParametricPseudosphere"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:37:<autosummary>:1
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricPseudosphere:2
msgid "Generate a pseudosphere."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricPseudosphere:4
msgid ""
"ParametricPseudosphere generates a parametric pseudosphere. The pseudosphere"
" is generated as a surface of revolution of the tractrix about it's "
"asymptote, and is a surface of constant negative Gaussian curvature."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricPseudosphere:17
msgid "ParametricPseudosphere surface."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricPseudosphere.rst:3
msgid "Create a ParametricPseudosphere mesh."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricRandomHills.rst:2
msgid "ParametricRandomHills"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:37:<autosummary>:1
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:2
msgid "Generate a surface covered with randomly placed hills."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:4
msgid ""
"ParametricRandomHills generates a surface covered with randomly placed "
"hills. Hills will vary in shape and height since the presence of nearby "
"hills will contribute to the shape and height of a given hill.  An option is"
" provided for placing hills on a regular grid on the surface.  In this case "
"the hills will all have the same shape and height."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:15
msgid "**numberofhills** : :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:14
msgid "The number of hills. Default is 30."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:19
msgid "**hillxvariance** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:18
msgid "The hill variance in the x-direction. Default is 2.5."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:23
msgid "**hillyvariance** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:22
msgid "The hill variance in the y-direction. Default is 2.5."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:27
msgid "**hillamplitude** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:26
msgid "The hill amplitude (height). Default is 2."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:33
msgid "**randomseed** : :class:`python:int`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:30
msgid ""
"The Seed for the random number generator, a value of 1 will initialize the "
"random number generator, a negative value will initialize it with the system"
" time. Default is 1."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:37
msgid "**xvariancescalefactor** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:36
msgid "The scaling factor for the variance in the x-direction. Default is 13."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:41
msgid "**yvariancescalefactor** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:40
msgid "The scaling factor for the variance in the y-direction. Default is 13."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:45
msgid "**amplitudescalefactor** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:44
msgid "The scaling factor for the amplitude. Default is 13."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRandomHills:53
msgid "ParametricRandomHills surface."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricRandomHills.rst:3
msgid "Create a ParametricRandomHills mesh."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricRoman.rst:2
msgid "ParametricRoman"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:37:<autosummary>:1
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRoman:2
msgid "Generate Steiner's Roman Surface."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRoman:8
msgid "The radius. Default is 1."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricRoman:16
msgid "ParametricRoman surface."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricRoman.rst:3
msgid "Create a ParametricRoman mesh."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricSuperEllipsoid.rst:2
msgid "ParametricSuperEllipsoid"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:37:<autosummary>:1
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperEllipsoid:2
msgid "Generate a superellipsoid."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperEllipsoid:4
msgid ""
"ParametricSuperEllipsoid generates a superellipsoid.  A superellipsoid is a "
"versatile primitive that is controlled by two parameters n1 and n2. As "
"special cases it can represent a sphere, square box, and closed cylindrical "
"can."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperEllipsoid:21
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:33
msgid "**n1** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperEllipsoid:21
msgid "The \"squareness\" parameter in the z axis.  Default is 1."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperEllipsoid:24
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:36
msgid "**n2** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperEllipsoid:24
msgid "The \"squareness\" parameter in the x-y plane. Default is 1."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperEllipsoid:32
msgid "ParametricSuperEllipsoid surface."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Superquadric:56
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperEllipsoid:43
msgid ":obj:`pyvista.ParametricSuperToroid`"
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperEllipsoid:44
msgid "Toroidal equivalent of ParametricSuperEllipsoid."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperEllipsoid:45
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:57
msgid ":obj:`pyvista.Superquadric`"
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperEllipsoid:46
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:58
msgid "Geometric object with additional parameters."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricSuperEllipsoid.rst:3
msgid ""
"Create a ParametricSuperEllipsoid surface that looks like a box with smooth "
"edges."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricSuperEllipsoid.rst:24
msgid "Create one that looks like a spinning top."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricSuperToroid.rst:2
msgid "ParametricSuperToroid"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:37:<autosummary>:1
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:2
msgid "Generate a supertoroid."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:4
msgid ""
"ParametricSuperToroid generates a supertoroid.  Essentially a supertoroid is"
" a torus with the sine and cosine terms raised to a power. A supertoroid is "
"a versatile primitive that is controlled by four parameters r0, r1, n1 and "
"n2. r0, r1 determine the type of torus whilst the value of n1 determines the"
" shape of the torus ring and n2 determines the shape of the cross section of"
" the ring. It is the different values of these powers which give rise to a "
"family of 3D shapes that are all basically toroidal in shape."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:17
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricTorus:9
msgid "**ringradius** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:16
msgid ""
"The radius from the center to the middle of the ring of the supertoroid. "
"Default is 1."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:21
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricTorus:12
msgid "**crosssectionradius** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:20
msgid ""
"The radius of the cross section of ring of the supertoroid. Default = 0.5."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:33
msgid "The shape of the torus ring.  Default is 1."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:36
msgid "The shape of the cross section of the ring. Default is 1."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:44
msgid "ParametricSuperToroid surface."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Superquadric:54
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:55
msgid ":obj:`pyvista.ParametricSuperEllipsoid`"
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricSuperToroid:56
msgid "Ellipsoidal equivalent of ParametricSuperToroid."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricSuperToroid.rst:3
msgid "Create a ParametricSuperToroid mesh."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricTorus.rst:2
msgid "ParametricTorus"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:37:<autosummary>:1
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricTorus:2
msgid "Generate a torus."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricTorus:8
msgid ""
"The radius from the center to the middle of the ring of the torus. Default "
"is 1.0."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricTorus:12
msgid "The radius of the cross section of ring of the torus. Default is 0.5."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.ParametricTorus:20
msgid "ParametricTorus surface."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.ParametricTorus.rst:3
msgid "Create a ParametricTorus mesh."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Plane.rst:2
msgid "Plane"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Plane:2
msgid "Create a plane."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Plane:8
msgid ""
"**center** : :class:`python:list` or :class:`python:tuple` or "
":obj:`np.ndarray <numpy.ndarray>`, default: (0, 0, 0)"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Plane:7
msgid "python:list or python:tuple or np.ndarray, default: (0, 0, 0)"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Plane:11
msgid ""
"**direction** : :class:`python:list` or :class:`python:tuple` or "
":obj:`np.ndarray <numpy.ndarray>`, default: (0, 0, 1)"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Plane:10
msgid "python:list or python:tuple or np.ndarray, default: (0, 0, 1)"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Plane:11
msgid "Direction of the plane's normal in ``[x, y, z]``."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Plane:14
msgid "**i_size** : :class:`python:float`, default: 1.0"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Plane:14
msgid "Size of the plane in the i direction."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Plane:17
msgid "**j_size** : :class:`python:float`, default: 1.0"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Plane:17
msgid "Size of the plane in the j direction."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Plane:20
msgid "**i_resolution** : :class:`python:int`, default: 10"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Plane:23
msgid "**j_resolution** : :class:`python:int`, default: 10"
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Plane.rst:3
msgid "Create a default plane."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.PlatonicSolid.rst:2
msgid "PlatonicSolid"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.PlatonicSolid:2
msgid "Create a Platonic solid of a given size."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.PlatonicSolid:15
msgid ""
"**kind** : :class:`python:str` or :class:`python:int`, default: "
"'tetrahedron'"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.PlatonicSolid:14
msgid "python:str or python:int, default: 'tetrahedron'"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.PlatonicSolid:8
msgid ""
"The kind of Platonic solid to create. Either the name of the polyhedron or "
"an integer index:"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.PlatonicSolid:11
msgid "``'tetrahedron'`` or ``0``"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.PlatonicSolid:12
msgid "``'cube'`` or ``1``"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.PlatonicSolid:13
msgid "``'octahedron'`` or ``2``"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.PlatonicSolid:14
msgid "``'icosahedron'`` or ``3``"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.PlatonicSolid:15
msgid "``'dodecahedron'`` or ``4``"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.PlatonicSolid:18
msgid "The radius of the circumscribed sphere for the solid to create."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.PlatonicSolid:21
msgid "Three-length sequence defining the center of the solid to create."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.PlatonicSolid:26
msgid ""
"One of the five Platonic solids. Cell scalars are defined that assign "
"integer labels to each face (with array name ``\"FaceIndex\"``)."
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Polygon:2
msgid "Create a polygon."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Polygon:8
msgid ""
"Center in ``[x, y, z]``. Central axis of the polygon passes through this "
"point."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Polygon:12
msgid "The radius of the polygon."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Polygon:15
msgid "**normal** : :obj:`Sequence`, default: (0, 0, 1)"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Polygon:14
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:13
msgid "Sequence, default: (0, 0, 1)"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Polygon:15
msgid "Direction vector in ``[x, y, z]``. Orientation vector of the polygon."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Polygon:18
msgid "**n_sides** : :class:`python:int`, default: 6"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Polygon:18
msgid "Number of sides of the polygon."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Polygon:21
msgid ""
"**fill** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:True`"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Polygon:21
msgid "Enable or disable producing filled polygons."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Polygon:26
msgid "Mesh of the polygon."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Polygon.rst:3
msgid "Create an 8 sided polygon."
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Pyramid:2
msgid "Create a pyramid defined by 5 points."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Pyramid:12
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Rectangle:8
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Triangle:9
msgid "**points** : :term:`python:sequence`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Pyramid:8
msgid ""
"Points of the pyramid.  Points are ordered such that the first four points "
"are the four counterclockwise points on the quadrilateral face, and the last"
" point is the apex."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Pyramid:12
msgid "Defaults to pyramid in example."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Pyramid:17
msgid "Unstructured grid containing a single pyramid cell."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Rectangle.rst:2
msgid "Rectangle"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Rectangle:2
msgid "Create a rectangle defined by 4 points."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Rectangle:8
msgid "Points of the rectangle.  Defaults to a simple example."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Rectangle:13
msgid "Rectangle mesh."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Report.rst:2
msgid "pyvista.Report"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:90:<autosummary>:1
#: ../../pyvista/pyvista/utilities/errors.pydocstring of
#: pyvista.utilities.errors.Report:2
msgid "Generate a PyVista software environment report."
msgstr ""

#: ../../pyvista/pyvista/utilities/errors.pydocstring of
#: pyvista.utilities.errors.Report:8
msgid ""
"**additional** : :class:`python:list`\\(:obj:`ModuleType`), "
":class:`python:list`\\(:class:`python:str`)"
msgstr ""

#: ../../pyvista/pyvista/utilities/errors.pydocstring of
#: pyvista.utilities.errors.Report:7
msgid "python:list(ModuleType), python:list(python:str)"
msgstr ""

#: ../../pyvista/pyvista/utilities/errors.pydocstring of
#: pyvista.utilities.errors.Report:8
msgid "List of packages or package names to add to output information."
msgstr ""

#: ../../pyvista/pyvista/utilities/errors.pydocstring of
#: pyvista.utilities.errors.Report:12
msgid "**ncol** : :class:`python:int`, default: 3"
msgstr ""

#: ../../pyvista/pyvista/utilities/errors.pydocstring of
#: pyvista.utilities.errors.Report:11
msgid "python:int, default: 3"
msgstr ""

#: ../../pyvista/pyvista/utilities/errors.pydocstring of
#: pyvista.utilities.errors.Report:11
msgid ""
"Number of package-columns in html table; only has effect if ``mode='HTML'`` "
"or ``mode='html'``."
msgstr ""

#: ../../pyvista/pyvista/utilities/errors.pydocstring of
#: pyvista.utilities.errors.Report:15
msgid "**text_width** : :class:`python:int`, default: 80"
msgstr ""

#: ../../pyvista/pyvista/utilities/errors.pydocstring of
#: pyvista.utilities.errors.Report:14
msgid "python:int, default: 80"
msgstr ""

#: ../../pyvista/pyvista/utilities/errors.pydocstring of
#: pyvista.utilities.errors.Report:15
msgid "The text width for non-HTML display modes."
msgstr ""

#: ../../pyvista/pyvista/utilities/errors.pydocstring of
#: pyvista.utilities.errors.Report:18
msgid ""
"**sort** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:False`"
msgstr ""

#: ../../pyvista/pyvista/utilities/errors.pydocstring of
#: pyvista.utilities.errors.Report:18
msgid "Alphabetically sort the packages."
msgstr ""

#: ../../pyvista/pyvista/utilities/errors.pydocstring of
#: pyvista.utilities.errors.Report:33
msgid ""
"**gpu** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:True`"
msgstr ""

#: ../../pyvista/pyvista/utilities/errors.pydocstring of
#: pyvista.utilities.errors.Report:21
msgid ""
"Gather information about the GPU. Defaults to ``True`` but if experiencing "
"rendering issues, pass ``False`` to safely generate a report."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Sphere.rst:2
msgid "Sphere"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:2
msgid "Create a vtk Sphere."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:11
msgid "**center** : :obj:`Sequence`, default: (0, 0, 0)"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:10
msgid "Sequence, default: (0, 0, 0)"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:14
msgid "**direction** : :obj:`Sequence`, default: (0, 0, 1)"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:14
msgid "Direction the top of the sphere points to in ``[x, y, z]``."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:18
msgid "**theta_resolution** : :class:`python:int`, default: 30"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:17
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:21
msgid "python:int, default: 30"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:17
msgid ""
"Set the number of points in the longitude direction (ranging from "
"``start_theta`` to ``end_theta``)."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:22
msgid "**phi_resolution** : :class:`python:int`, default: 30"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:21
msgid ""
"Set the number of points in the latitude direction (ranging from "
"``start_phi`` to ``end_phi``)."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:25
msgid "**start_theta** : :class:`python:float`, default: 0"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:24
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:30
msgid "python:float, default: 0"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:25
msgid "Starting longitude angle."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:28
msgid "**end_theta** : :class:`python:float`, default: 360"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:27
msgid "python:float, default: 360"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:28
msgid "Ending longitude angle."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:31
msgid "**start_phi** : :class:`python:float`, default: 0"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:31
msgid "Starting latitude angle."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:34
msgid "**end_phi** : :class:`python:float`, default: 180"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:33
msgid "python:float, default: 180"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:34
msgid "Ending latitude angle."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Sphere:39
msgid "Sphere mesh."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Sphere.rst:3
msgid "Create a sphere using default parameters."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Sphere.rst:23
msgid "Create a quarter sphere by setting ``end_theta``."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Spline.rst:2
msgid "Spline"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.Spline:2
msgid "Create a spline from points."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.Spline:8
msgid ""
"Array of points to build a spline out of.  Array must be 3D and "
"directionally ordered."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.Spline:12
msgid ""
"Number of points to interpolate along the points array. By default this is "
"the number of points in ``points``."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.Spline:18
msgid "Line mesh of spline."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Spline.rst:3
msgid "Construct a spline."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Superquadric.rst:2
msgid "Superquadric"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Superquadric:2
msgid "Create a superquadric."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Superquadric:8
msgid "Center of the superquadric in ``[x, y, z]``."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Superquadric:11
msgid "**scale** :  :obj:`Sequence`, default: (1.0, 1.0, 1.0)"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Superquadric:10
msgid "Sequence, default: (1.0, 1.0, 1.0)"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Superquadric:11
msgid "Scale factors of the superquadric in ``[x, y, z]``."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Superquadric:14
msgid "**size** : :class:`python:float`, default: 0.5"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Superquadric:14
msgid "Superquadric isotropic size."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Superquadric:18
msgid "**theta_roundness** : :class:`python:float`, default: 1.0"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Superquadric:17
msgid ""
"Superquadric east/west roundness. Values range from 0 (rectangular) to 1 "
"(circular) to higher orders."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Superquadric:22
msgid "**phi_roundness** : :class:`python:float`, default: 1.0"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Superquadric:21
msgid ""
"Superquadric north/south roundness. Values range from 0 (rectangular) to 1 "
"(circular) to higher orders."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Superquadric:26
msgid "**theta_resolution** : :class:`python:int`, default: 16"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Superquadric:25
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Superquadric:29
msgid "python:int, default: 16"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Superquadric:25
msgid ""
"Number of points in the longitude direction. Values are rounded to nearest "
"multiple of 4."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Superquadric:30
msgid "**phi_resolution** : :class:`python:int`, default: 16"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Superquadric:29
msgid ""
"Number of points in the latitude direction. Values are rounded to nearest "
"multiple of 8."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Superquadric:34
msgid ""
"**toroidal** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:False`"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Superquadric:33
msgid ""
"Whether or not the superquadric is toroidal (``True``) or ellipsoidal "
"(``False``)."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Superquadric:38
msgid "**thickness** : :class:`python:float`, default: 0.3333333333"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Superquadric:37
msgid "python:float, default: 0.3333333333"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Superquadric:37
msgid ""
"Superquadric ring thickness. Only applies if toroidal is set to ``True``."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Superquadric:43
msgid "Superquadric mesh."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Superquadric:55
msgid "Parametric superquadric if toroidal is ``False``."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Superquadric:57
msgid "Parametric superquadric if toroidal is ``True``."
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Tetrahedron:2
msgid "Create a tetrahedron of a given size."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Tetrahedron:4
msgid "A tetrahedron is composed of four congruent equilateral triangles."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Tetrahedron:9
msgid "The radius of the circumscribed sphere for the tetrahedron."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Tetrahedron:12
msgid "Three-length sequence defining the center of the tetrahedron."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Tetrahedron:17
msgid ""
"Mesh for the tetrahedron. Cell scalars are defined that assign integer "
"labels to each face (with array name ``\"FaceIndex\"``)."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Tetrahedron.rst:3
msgid "Create and plot a tetrahedron."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Text3D.rst:2
msgid "Text3D"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Text3D:2
msgid "Create 3D text from a string."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Text3D:8
msgid "**string** : :class:`python:str`"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Text3D:8
msgid "String to generate 3D text from."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Text3D:11
msgid "**depth** : :class:`python:float`, default: 0.5"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Text3D:11
msgid "Depth of the text."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Text3D:16
msgid "3D text mesh."
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Triangle:2
msgid "Create a triangle defined by 3 points."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Triangle:8
msgid ""
"Points of the triangle.  Defaults to a right isosceles triangle (see "
"example)."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Triangle:14
msgid "Triangle mesh."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Tube.rst:2
msgid "Tube"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Tube:2
msgid "Create a tube."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Tube:8
msgid "**pointa** : :obj:`Sequence`, default: (-0.5, 0.0, 0.0)"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Tube:7
msgid "Sequence, default: (-0.5, 0.0, 0.0)"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Tube:11
msgid "**pointb**"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Tube-1
msgid "sequence: default: (0.5, 0.0, 0.0)"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Tube:14
msgid "Number of pieces to divide tube into."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Tube:20
msgid "**n_sides** : :class:`python:int`, default: 15"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Tube:19
msgid "python:int, default: 15"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Tube:20
msgid "Number of sides for the tube."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Tube:25
msgid "Tube mesh."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Tube.rst:3
msgid "Create a tube between ``(0, 0, 0)`` and ``(0, 0, 1)``."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Wavelet.rst:2
msgid "Wavelet"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Wavelet:2
msgid "Create a wavelet."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Wavelet:4
msgid ""
"Produces images with pixel values determined by "
"``Maximum*Gaussian*x_mag*sin(x_freq*x)*sin(y_freq*y)*cos(z_freq*z)``"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Wavelet:7
msgid "Values are float scalars on point data with name ``\"RTData\"``."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Wavelet:12
msgid "**extent** : :obj:`Sequence`, default: (-10, 10, -10, 10, -10, 10)"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Wavelet:11
msgid "Sequence, default: (-10, 10, -10, 10, -10, 10)"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Wavelet:12
msgid "Set/Get the extent of the whole output image."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Wavelet:15
msgid "**center** : :class:`python:list`, default: (0, 0, 0)"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Wavelet:14
msgid "python:list, default: (0, 0, 0)"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Wavelet:15
msgid "Center of the wavelet."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Wavelet:18
msgid "**maximum** : :class:`python:float`, default: 255"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Wavelet:17
msgid "python:float, default: 255"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Wavelet:18
msgid "Maximum of the wavelet function."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Wavelet:21
msgid "**x_freq** : :class:`python:float`, default: 60"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Wavelet:20
msgid "python:float, default: 60"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Wavelet:21
msgid "Natural frequency in the x direction."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Wavelet:24
msgid "**y_freq** : :class:`python:float`, default: 30"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Wavelet:23
msgid "python:float, default: 30"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Wavelet:24
msgid "Natural frequency in the y direction."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Wavelet:27
msgid "**z_freq** : :class:`python:float`, default: 40"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Wavelet:26
msgid "python:float, default: 40"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Wavelet:27
msgid "Natural frequency in the z direction."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Wavelet:30
msgid "**x_mag** : :class:`python:float`, default: 10"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Wavelet:29
msgid "python:float, default: 10"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Wavelet:30
msgid "Magnitude in the x direction."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Wavelet:33
msgid "**y_mag** : :class:`python:float`, default: 18"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Wavelet:32
msgid "python:float, default: 18"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Wavelet:33
msgid "Magnitude in the y direction."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Wavelet:36
msgid "**z_mag** : :class:`python:float`, default: 5"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Wavelet:35
msgid "python:float, default: 5"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Wavelet:36
msgid "Magnitude in the z direction."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Wavelet:39
msgid "**std** : :class:`python:float`, default: 0.5"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Wavelet:39
msgid "Standard deviation."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Wavelet:42
msgid "**subsample_rate** : :class:`python:int`, default: 1"
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Wavelet:42
msgid "The sub-sample rate."
msgstr ""

#: ../../pyvista/pyvista/utilities/geometric_objects.pydocstring of
#: pyvista.utilities.geometric_objects.Wavelet:47
msgid "Wavelet mesh."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Wavelet.rst:23
msgid ""
"Extract lower valued cells of the wavelet and create a surface from it."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.Wavelet.rst:42
msgid "Smooth it to create \"waves\""
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.array_from_vtkmatrix.rst:2
msgid "array\\_from\\_vtkmatrix"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:28:<autosummary>:1
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.array_from_vtkmatrix:2
msgid "Convert a vtk matrix to an array."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.array_from_vtkmatrix:9
msgid "**matrix** : :obj:`vtk.vtkMatrix3x3` or :obj:`vtk.vtkMatrix4x4`"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.array_from_vtkmatrix:8
msgid "vtk.vtkMatrix3x3 or vtk.vtkMatrix4x4"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.array_from_vtkmatrix:8
msgid ""
"The vtk matrix to be converted to a ``numpy.ndarray``. Returned ndarray has "
"shape (3, 3) or (4, 4) as appropriate."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.array_from_vtkmatrix:14
msgid "Numpy array containing the data from ``matrix``."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.cell_array.rst:2
msgid "cell\\_array"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:63:<autosummary>:1
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cell_array:2
msgid "Return cell array of a pyvista or vtk object."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cell_array:8
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.field_array:8
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.point_array:8
msgid "**obj** : :obj:`pyvista.DataSet` or :obj:`vtk.vtkDataSet`"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cell_array:7
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.field_array:7
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.point_array:7
msgid "pyvista.DataSet or vtk.vtkDataSet"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cell_array:8
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.field_array:8
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.point_array:8
msgid "PyVista or VTK dataset."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cell_array:11
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.field_array:11
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.point_array:11
msgid "**name** : :class:`python:str` or :class:`python:int`"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cell_array:10
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.field_array:10
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.point_array:10
msgid "python:str or python:int"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cell_array:11
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.field_array:11
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.point_array:11
msgid "Name or index of the array."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cell_array:28
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.field_array:28
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.point_array:28
msgid ":obj:`pyvista.pyvista_ndarray` or :data:`python:None`"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cell_array:16
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.field_array:16
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.point_array:16
msgid "Wrapped array if the index or name is valid. Otherwise, ``None``."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.color_like.rst:2
msgid "color\\_like"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:84:<autosummary>:1
#: ../docstring of pyvista.color_like:2
msgid "Any object convertible to a :class:`Color`."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.compare_images.rst:2
msgid "compare\\_images"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:71:<autosummary>:1
#: ../../pyvista/pyvista/utilities/regression.pydocstring of
#: pyvista.utilities.regression.compare_images:2
msgid "Compare two different images of the same size."
msgstr ""

#: ../../pyvista/pyvista/utilities/regression.pydocstring of
#: pyvista.utilities.regression.compare_images:9
msgid ""
"**im1** : :obj:`filename`, :obj:`numpy.ndarray`, :obj:`vtkRenderWindow`, "
":obj:`or` :obj:`vtkImageData`"
msgstr ""

#: ../../pyvista/pyvista/utilities/regression.pydocstring of
#: pyvista.utilities.regression.compare_images:8
#: ../../pyvista/pyvista/utilities/regression.pydocstring of
#: pyvista.utilities.regression.compare_images:12
msgid "filename, numpy.ndarray, vtkRenderWindow, or vtkImageData"
msgstr ""

#: ../../pyvista/pyvista/utilities/regression.pydocstring of
#: pyvista.utilities.regression.compare_images:8
#: ../../pyvista/pyvista/utilities/regression.pydocstring of
#: pyvista.utilities.regression.compare_images:12
msgid ""
"Render window, numpy array representing the output of a render window, or "
"``vtkImageData``."
msgstr ""

#: ../../pyvista/pyvista/utilities/regression.pydocstring of
#: pyvista.utilities.regression.compare_images:13
msgid ""
"**im2** : :obj:`filename`, :obj:`numpy.ndarray`, :obj:`vtkRenderWindow`, "
":obj:`or` :obj:`vtkImageData`"
msgstr ""

#: ../../pyvista/pyvista/utilities/regression.pydocstring of
#: pyvista.utilities.regression.compare_images:18
msgid "**threshold** : :class:`python:int`, default: 1"
msgstr ""

#: ../../pyvista/pyvista/utilities/regression.pydocstring of
#: pyvista.utilities.regression.compare_images:16
msgid ""
"Threshold tolerance for pixel differences.  This should be greater than 0, "
"otherwise it will always return an error, even on identical images."
msgstr ""

#: ../../pyvista/pyvista/utilities/regression.pydocstring of
#: pyvista.utilities.regression.compare_images:25
msgid ""
"**use_vtk** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:True`"
msgstr ""

#: ../../pyvista/pyvista/utilities/regression.pydocstring of
#: pyvista.utilities.regression.compare_images:21
msgid ""
"When disabled, computes the mean pixel error over the entire image using "
"numpy.  The difference between pixel is calculated for each RGB channel, "
"summed, and then divided by the number of pixels.  This is faster than using"
" ``vtk.vtkImageDifference`` but potentially less accurate."
msgstr ""

#: ../../pyvista/pyvista/utilities/regression.pydocstring of
#: pyvista.utilities.regression.compare_images:30
msgid ""
"Total error between the images if using ``use_vtk=True``, and the mean pixel"
" error when ``use_vtk=False``."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.compare_images.rst:3
msgid "Compare two active plotters."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.compare_images.rst:12
msgid "Compare images from file."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.convert_array.rst:2
msgid "convert\\_array"
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.cubemap.rst:2
msgid "cubemap"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:28:<autosummary>:1
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap:2
msgid "Construct a cubemap from 6 images from a directory."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap:4
msgid "Each of the 6 images must be in the following format:"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap:6
msgid "<prefix>negx<ext>"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap:7
msgid "<prefix>negy<ext>"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap:8
msgid "<prefix>negz<ext>"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap:9
msgid "<prefix>posx<ext>"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap:10
msgid "<prefix>posy<ext>"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap:11
msgid "<prefix>posz<ext>"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap:13
msgid "Prefix may be empty, and extension will default to ``'.jpg'``"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap:15
msgid "For example, if you have 6 images with the skybox2 prefix:"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap:17
msgid "``'skybox2-negx.jpg'``"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap:18
msgid "``'skybox2-negy.jpg'``"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap:19
msgid "``'skybox2-negz.jpg'``"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap:20
msgid "``'skybox2-posx.jpg'``"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap:21
msgid "``'skybox2-posy.jpg'``"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap:22
msgid "``'skybox2-posz.jpg'``"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap:27
msgid "**path** : :class:`python:str`, default: \"\""
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap:26
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap:29
msgid "python:str, default: \"\""
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap:27
msgid "Directory containing the cubemap images."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap:30
msgid "**prefix** : :class:`python:str`, default: \"\""
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap:30
msgid "Prefix to the filename."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap:33
msgid "**ext** : :class:`python:str`, default: \".jpg\""
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap:32
msgid "python:str, default: \".jpg\""
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap:33
msgid "The filename extension.  For example ``'.jpg'``."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap:38
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap_from_filenames:21
msgid "Texture with cubemap."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap:49
msgid ""
"Cubemap will appear flipped relative to the XY plane between VTK v9.1 and "
"VTK v9.2."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.cubemap.rst:3
msgid "Load a skybox given a directory, prefix, and file extension."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.cubemap_from_filenames.rst:2
msgid "cubemap\\_from\\_filenames"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:28:<autosummary>:1
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap_from_filenames:2
msgid "Construct a cubemap from 6 images."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap_from_filenames:4
msgid "Images must be in the following order:"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap_from_filenames:6
msgid "Positive X"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap_from_filenames:7
msgid "Negative X"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap_from_filenames:8
msgid "Positive Y"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap_from_filenames:9
msgid "Negative Y"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap_from_filenames:10
msgid "Positive Z"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap_from_filenames:11
msgid "Negative Z"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap_from_filenames:16
msgid "**image_paths** : :class:`python:list`"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap_from_filenames:16
msgid "Paths of the individual cubemap images."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.cubemap_from_filenames:34
msgid "Load a skybox given a list of image paths."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.field_array.rst:2
msgid "field\\_array"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:63:<autosummary>:1
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.field_array:2
msgid "Return field data of a pyvista or vtk object."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.fit_plane_to_points.rst:2
msgid "fit\\_plane\\_to\\_points"
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.get_array.rst:2
msgid "get\\_array"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:63:<autosummary>:1
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.get_array:2
msgid "Search point, cell and field data for an array."
msgstr ""

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.save_meshio:11
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.get_array:8
msgid "**mesh** : :obj:`pyvista.DataSet`"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.get_array:8
msgid "Dataset to get the array from."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.get_array:11
msgid "The name of the array to get the range."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.get_array:16
msgid "**preference** : :class:`python:str`, default: \"cell\""
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.get_array:15
msgid "python:str, default: \"cell\""
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.get_array:19
msgid ""
"**err** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:False`"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.get_array:19
msgid "Whether to throw an error if array is not present."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.get_array:37
msgid ":obj:`pyvista.pyvista_ndarray` or ``None``"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.get_array:24
msgid ""
"Requested array.  Return ``None`` if there is no array matching the ``name``"
" and ``err=False``."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.image_to_texture.rst:2
msgid "image\\_to\\_texture"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:28:<autosummary>:1
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.image_to_texture:2
msgid ""
"Convert ``vtkImageData`` (:class:`pyvista.UniformGrid`) to a ``vtkTexture``."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.image_to_texture:8
msgid "**image** : :obj:`pyvista.UniformGrid` or :obj:`vtkImageData`"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.image_to_texture:7
msgid "pyvista.UniformGrid or vtkImageData"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.image_to_texture:8
msgid "Image to convert."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.image_to_texture:25
msgid ":obj:`vtkTexture`"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.image_to_texture:13
msgid "VTK texture."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.is_pyvista_dataset.rst:2
msgid "is\\_pyvista\\_dataset"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:28:<autosummary>:1
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.is_pyvista_dataset:2
msgid "Return ``True`` if the object is a PyVista wrapped dataset."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.is_pyvista_dataset:8
msgid "**obj** : :obj:`anything`"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.is_pyvista_dataset:7
msgid "anything"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.is_pyvista_dataset:8
msgid "Any object to test."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.is_pyvista_dataset:13
msgid "``True`` when the object is a :class:`pyvista.DataSet`."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.lines_from_points.rst:2
msgid "lines\\_from\\_points"
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.numpy_to_texture.rst:2
msgid "numpy\\_to\\_texture"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:28:<autosummary>:1
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.numpy_to_texture:2
msgid "Convert a NumPy image array to a vtk.vtkTexture."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.numpy_to_texture:8
msgid "**image** : :obj:`numpy.ndarray`"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.numpy_to_texture:8
msgid "Numpy image array. Texture datatype expected to be ``np.uint8``."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.numpy_to_texture:13
msgid "PyVista texture."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.numpy_to_texture.rst:3
msgid "Create an all white texture."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.parametric_keywords.rst:2
msgid "parametric\\_keywords"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:44:<autosummary>:1
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:2
msgid "Apply keyword arguments to a parametric function."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:8
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.surface_from_para:8
msgid "**parametric_function** : :obj:`vtk.vtkParametricFunction`"
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:7
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.surface_from_para:7
msgid "vtk.vtkParametricFunction"
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:8
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.surface_from_para:8
msgid "Parametric function to generate mesh from."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:11
msgid "**min_u** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:11
msgid "The minimum u-value."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:14
msgid "**max_u** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:14
msgid "The maximum u-value."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:17
msgid "**min_v** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:17
msgid "The minimum v-value."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:20
msgid "**max_v** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:20
msgid "The maximum v-value."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:24
msgid ""
"**join_u** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:23
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:31
msgid ""
"Joins the first triangle strip to the last one with a twist in the u "
"direction."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:28
msgid ""
"**join_v** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:27
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:35
msgid ""
"Joins the first triangle strip to the last one with a twist in the v "
"direction."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:32
msgid ""
"**twist_u** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:36
msgid ""
"**twist_v** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:53
msgid ""
"**clockwise** : :ref:`bool <python:bltin-boolean-values>`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.parametric_keywords:39
msgid "Determines the ordering of the vertices forming the triangle strips."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.point_array.rst:2
msgid "point\\_array"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:63:<autosummary>:1
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.point_array:2
msgid "Return point array of a pyvista or vtk object."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.read.rst:2
msgid "read"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:40:<autosummary>:1
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read:2
msgid "Read any file type supported by ``vtk`` or ``meshio``."
msgstr ""

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read:4
msgid ""
"Use of `attrs` is deprecated. Use a reader class using "
":func:`pyvista.get_reader`"
msgstr ""

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read:8
msgid ""
"Automatically determines the correct reader to use then wraps the "
"corresponding mesh as a pyvista object.  Attempts native ``vtk`` readers "
"first then tries to use ``meshio``."
msgstr ""

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read:12
msgid "See :func:`pyvista.get_reader` for list of formats supported."
msgstr ""

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read:15
msgid ""
"See https://github.com/nschloe/meshio for formats supported by ``meshio``. "
"Be sure to install ``meshio`` with ``pip install meshio`` if you wish to use"
" it."
msgstr ""

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read:22
msgid ""
"The string path to the file to read. If a list of files is given, a "
":class:`pyvista.MultiBlock` dataset is returned with each file being a "
"separate block in the dataset."
msgstr ""

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read:31
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_texture:14
msgid "**attrs** : :class:`python:dict`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read:27
msgid ""
"Deprecated. Use a Reader class using :func:`pyvista.get_reader`. A "
"dictionary of attributes to call on the reader. Keys of dictionary are the "
"attribute/method names and values are the arguments passed to those calls. "
"If you do not have any attributes to call, pass ``None`` as the value."
msgstr ""

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read:34
msgid ""
"If specified, the reader will be chosen by an extension which is different "
"to its actual extension. For example, ``'.vts'``, ``'.vtu'``."
msgstr ""

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read:39
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.save_meshio:16
msgid "**file_format** : :class:`python:str`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read:39
msgid "Format of file to read with meshio."
msgstr ""

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read:42
msgid "Optionally show a progress bar. Ignored when using ``meshio``."
msgstr ""

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read:47
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_exodus:38
msgid "Wrapped PyVista dataset."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.read.rst:3
msgid "Load an example mesh."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.read.rst:24
msgid "Load a vtk file."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.read.rst:28
msgid "Load a meshio file."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.read_exodus.rst:2
msgid "read\\_exodus"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:40:<autosummary>:1
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_exodus:2
msgid "Read an ExodusII file (``'.e'`` or ``'.exo'``)."
msgstr ""

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_exodus:8
msgid "The path to the exodus file to read."
msgstr ""

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_exodus:13
msgid ""
"**animate_mode_shapes** : :ref:`bool <python:bltin-boolean-values>`, "
"default: :data:`python:True`"
msgstr ""

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_exodus:11
msgid ""
"When ``True`` then this reader will report a continuous time range [0,1] and"
" animate the displacements in a periodic sinusoid."
msgstr ""

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_exodus:19
msgid ""
"**apply_displacements** : :ref:`bool <python:bltin-boolean-values>`, "
"default: :data:`python:True`"
msgstr ""

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_exodus:16
msgid ""
"Geometric locations can include displacements. When ``True``, the nodal "
"positions are 'displaced' by the standard exodus displacement vector. If "
"displacements are turned off, the user can explicitly add them by applying a"
" warp filter."
msgstr ""

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_exodus:23
msgid ""
"**displacement_magnitude** : :ref:`bool <python:bltin-boolean-values>`, "
"default: 1.0"
msgstr ""

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_exodus:22
msgid "bool, default: 1.0"
msgstr ""

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_exodus:22
msgid ""
"This is a number between 0 and 1 that is used to scale the "
"``DisplacementMagnitude`` in a sinusoidal pattern."
msgstr ""

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_exodus:26
msgid ""
"**read_point_data** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:True`"
msgstr ""

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_exodus:26
msgid "Read in data associated with points."
msgstr ""

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_exodus:29
msgid ""
"**read_cell_data** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:True`"
msgstr ""

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_exodus:29
msgid "Read in data associated with cells."
msgstr ""

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_exodus:33
msgid ""
"**enabled_sidesets** : :class:`python:str` or :class:`python:int`, "
":obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_exodus:32
msgid ""
"The name of the array that store the mapping from side set cells back to the"
" global id of the elements they bound."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.read_legacy.rst:2
msgid "read\\_legacy"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:40:<autosummary>:1
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_legacy:2
msgid "Use VTK's legacy reader to read a file."
msgstr ""

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_legacy:4
msgid "This function is deprecated. Use :func:`pyvsista.read` instead."
msgstr ""

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_legacy:7
msgid "This uses ``vtk.vtkDataSetReader`` to read the data."
msgstr ""

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_legacy:15
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_texture:17
msgid "Optionally show a progress bar."
msgstr ""

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_legacy:20
msgid "Wrapped pyvista mesh."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.read_legacy.rst:3
msgid "Load an example mesh using the legacy reader."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.read_texture.rst:2
msgid "read\\_texture"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:40:<autosummary>:1
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_texture:2
msgid "Load a texture from an image file."
msgstr ""

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_texture:8
msgid "The path of the texture file to read."
msgstr ""

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_texture:11
msgid ""
"A dictionary of attributes to call on the reader. Keys of dictionary are the"
" attribute/method names and values are the arguments passed to those calls. "
"If you do not have any attributes to call, pass ``None`` as the value."
msgstr ""

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.read_texture:22
msgid "PyVista texture object."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.read_texture.rst:3
msgid "Read in an example jpg map file as a texture."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.save_meshio.rst:2
msgid "save\\_meshio"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:40:<autosummary>:1
#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.save_meshio:2
msgid "Save mesh to file using meshio."
msgstr ""

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.save_meshio:8
msgid "Filename to save the mesh to."
msgstr ""

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.save_meshio:11
msgid "Any PyVista mesh/spatial data type."
msgstr ""

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.save_meshio:14
msgid ""
"File type for meshio to save.  For example ``'.bdf'``.  This is normally "
"inferred from the extension but this can be overridden."
msgstr ""

#: ../../pyvista/pyvista/utilities/fileio.pydocstring of
#: pyvista.utilities.fileio.save_meshio:19
msgid ""
"Additional keyword arguments.  See ``meshio.write_points_cells`` for more "
"details."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.save_meshio.rst:3
msgid "Save a pyvista sphere to a Abaqus data file."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.start_xvfb.rst:2
msgid "start\\_xvfb"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:84:<autosummary>:1
#: ../../pyvista/pyvista/utilities/xvfb.pydocstring of
#: pyvista.utilities.xvfb.start_xvfb:2
msgid "Start the virtual framebuffer Xvfb."
msgstr ""

#: ../../pyvista/pyvista/utilities/xvfb.pydocstring of
#: pyvista.utilities.xvfb.start_xvfb:9
msgid "**wait** : :class:`python:float`, :obj:`optional`"
msgstr ""

#: ../../pyvista/pyvista/utilities/xvfb.pydocstring of
#: pyvista.utilities.xvfb.start_xvfb:8
msgid ""
"Time to wait for the virtual framebuffer to start.  Set to 0 to disable "
"wait."
msgstr ""

#: ../../pyvista/pyvista/utilities/xvfb.pydocstring of
#: pyvista.utilities.xvfb.start_xvfb:12
msgid ""
"Window size of the virtual frame buffer.  Defaults to "
":attr:`pyvista.global_theme.window_size "
"<pyvista.themes.DefaultTheme.window_size>`."
msgstr ""

#: ../../pyvista/pyvista/utilities/xvfb.pydocstring of
#: pyvista.utilities.xvfb.start_xvfb:26
msgid ""
"Only available on Linux.  Be sure to install ``libgl1-mesa-glx xvfb`` in "
"your package manager."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.surface_from_para.rst:2
msgid "surface\\_from\\_para"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:44:<autosummary>:1
#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.surface_from_para:2
msgid "Construct a mesh from a parametric function."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.surface_from_para:11
msgid "**u_res** : :class:`python:int`, default: 100"
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.surface_from_para:11
msgid "Resolution in the u direction."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.surface_from_para:14
msgid "**v_res** : :class:`python:int`, default: 100"
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.surface_from_para:14
msgid "Resolution in the v direction."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.surface_from_para:17
msgid "**w_res** : :class:`python:int`, default: 100"
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.surface_from_para:17
msgid "Resolution in the w direction."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.surface_from_para:21
msgid ""
"**clean** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:False`"
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.surface_from_para:20
msgid ""
"Clean and merge duplicate points to avoid \"creases\" when plotting with "
"smooth shading."
msgstr ""

#: ../../pyvista/pyvista/utilities/parametric_objects.pydocstring of
#: pyvista.utilities.parametric_objects.surface_from_para:26
msgid "Surface from the parametric function."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.utilities.VtkErrorCatcher.rst:2
msgid "pyvista.utilities.VtkErrorCatcher"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:13:<autosummary>:1
#: ../../pyvista/pyvista/utilities/errors.pydocstring of
#: pyvista.utilities.errors.VtkErrorCatcher:2
msgid "Context manager to temporarily catch VTK errors."
msgstr ""

#: ../../pyvista/pyvista/utilities/errors.pydocstring of
#: pyvista.utilities.errors.VtkErrorCatcher:8
msgid ""
"**raise_errors** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:False`"
msgstr ""

#: ../../pyvista/pyvista/utilities/errors.pydocstring of
#: pyvista.utilities.errors.VtkErrorCatcher:8
msgid "Raise a ``RuntimeError`` when a VTK error is encountered."
msgstr ""

#: ../../pyvista/pyvista/utilities/errors.pydocstring of
#: pyvista.utilities.errors.VtkErrorCatcher:22
msgid ""
"**send_to_logging** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:True`"
msgstr ""

#: ../../pyvista/pyvista/utilities/errors.pydocstring of
#: pyvista.utilities.errors.VtkErrorCatcher:11
msgid ""
"Determine whether VTK errors raised within the context should also be sent "
"to logging."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.utilities.VtkErrorCatcher.rst:3
msgid "Catch VTK errors using the context manager."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.utilities.axis_rotation.rst:2
msgid "axis\\_rotation"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:13:<autosummary>:1
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.axis_rotation:2
msgid "Rotate points by angle about an axis."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.axis_rotation:8
msgid "Array of points with shape ``(N, 3)``."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.axis_rotation:11
msgid "Rotation angle."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.axis_rotation:14
msgid "Updates points in-place while returning nothing."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.axis_rotation:18
msgid ""
"**deg** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:True`"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.axis_rotation:17
msgid "If ``True``, the angle is interpreted as degrees instead of radians."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.axis_rotation:22
msgid "**axis** : :class:`python:str`, default: \"z\""
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.axis_rotation:21
msgid "python:str, default: \"z\""
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.axis_rotation:21
msgid ""
"Name of axis to rotate about. Valid options are ``'x'``, ``'y'``, and "
"``'z'``."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.axis_rotation:27
msgid "Rotated points."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.utilities.axis_rotation.rst:3
msgid "Rotate a set of points by 90 degrees about the x-axis in-place."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.utilities.is_inside_bounds.rst:2
msgid "is\\_inside\\_bounds"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:13:<autosummary>:1
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.is_inside_bounds:2
msgid "Check if a point is inside a set of bounds."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.is_inside_bounds:4
msgid "This is implemented through recursion so that this is N-dimensional."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.is_inside_bounds:9
msgid "Three item cartesian point (i.e. ``[x, y, z]``)."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.is_inside_bounds:12
msgid "**bounds** : :term:`python:sequence`"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.is_inside_bounds:12
msgid ""
"Six item bounds in the form of ``(xMin, xMax, yMin, yMax, zMin, zMax)``."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.is_inside_bounds:17
msgid "``True`` when ``point`` is inside ``bounds``."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.utilities.set_error_output_file.rst:2
msgid "set\\_error\\_output\\_file"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:13:<autosummary>:1
#: ../../pyvista/pyvista/utilities/errors.pydocstring of
#: pyvista.utilities.errors.set_error_output_file:2
msgid "Set a file to write out the VTK errors."
msgstr ""

#: ../../pyvista/pyvista/utilities/errors.pydocstring of
#: pyvista.utilities.errors.set_error_output_file:8
msgid "Path to the file to write VTK errors to."
msgstr ""

#: ../../pyvista/pyvista/utilities/errors.pydocstring of
#: pyvista.utilities.errors.set_error_output_file:13
msgid ":obj:`vtkFileOutputWindow`"
msgstr ""

#: ../../pyvista/pyvista/utilities/errors.pydocstring of
#: pyvista.utilities.errors.set_error_output_file:13
msgid "VTK file output window."
msgstr ""

#: ../../pyvista/pyvista/utilities/errors.pydocstring of
#: pyvista.utilities.errors.set_error_output_file:28
msgid ":obj:`vtkOutputWindow`"
msgstr ""

#: ../../pyvista/pyvista/utilities/errors.pydocstring of
#: pyvista.utilities.errors.set_error_output_file:16
msgid "VTK output window."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.vector_poly_data.rst:2
msgid "vector\\_poly\\_data"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:51:<autosummary>:1
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.vector_poly_data:2
msgid "Create a pyvista.PolyData object composed of vectors."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.vector_poly_data:8
msgid "**orig** : :obj:`numpy.ndarray`"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.vector_poly_data:8
msgid "Array of vector origins."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.vector_poly_data:11
msgid "**vec** : :obj:`numpy.ndarray`"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.vector_poly_data:11
msgid "Array of vectors."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.vector_poly_data:16
msgid ""
"Mesh containing the ``orig`` points along with the ``'vectors'`` and "
"``'mag'`` point arrays representing the vectors and magnitude of the the "
"vectors at each point."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.vector_poly_data.rst:3
msgid ""
"Create basic vector field.  This is a point cloud where each point has a "
"vector and magnitude attached to it."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.vector_poly_data.rst:17
msgid "Convert these to arrows and plot it."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.vtk_points.rst:2
msgid "vtk\\_points"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:51:<autosummary>:1
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.vtk_points:2
msgid "Convert numpy array or array-like to a ``vtkPoints`` object."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.vtk_points:9
msgid "**points** : :obj:`numpy.ndarray` or :term:`python:sequence`"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.vtk_points:8
msgid ""
"Points to convert.  Should be 1 or 2 dimensional.  Accepts a single point or"
" several points."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.vtk_points:12
msgid ""
"Perform a deep copy of the array.  Only applicable if ``points`` is a "
":class:`numpy.ndarray`."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.vtk_points:19
msgid ""
"**force_float** : :ref:`bool <python:bltin-boolean-values>`, default: "
":data:`python:False`"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.vtk_points:16
msgid ""
"Casts the datatype to ``float32`` if points datatype is non-float.  Set this"
" to ``False`` to allow non-float types, though this may lead to truncation "
"of intermediate floats when transforming datasets."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.vtk_points:33
msgid ":obj:`vtk.vtkPoints`"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.vtk_points:24
msgid "The vtkPoints object."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.vtkmatrix_from_array.rst:2
msgid "vtkmatrix\\_from\\_array"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:28:<autosummary>:1
#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.vtkmatrix_from_array:2
msgid "Convert a ``numpy.ndarray`` or array-like to a vtk matrix."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.vtkmatrix_from_array:10
msgid "**array** : :obj:`numpy.ndarray` or :term:`numpy:array_like`"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.vtkmatrix_from_array:9
msgid "numpy.ndarray or numpy:array_like"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.vtkmatrix_from_array:8
msgid ""
"The array or array-like to be converted to a vtk matrix. Shape (3, 3) gets "
"converted to a ``vtk.vtkMatrix3x3``, shape (4, 4) gets converted to a "
"``vtk.vtkMatrix4x4``. No other shapes are valid."
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.vtkmatrix_from_array:27
msgid ":obj:`vtk.vtkMatrix3x3` or :obj:`vtk.vtkMatrix4x4`"
msgstr ""

#: ../../pyvista/pyvista/utilities/helpers.pydocstring of
#: pyvista.utilities.helpers.vtkmatrix_from_array:15
msgid "VTK matrix."
msgstr ""

#: ../../pyvista/doc/api/utilities/_autosummary/pyvista.wrap.rst:2
msgid "wrap"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:2
msgid "Geometric Objects"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:3
msgid ""
"PyVista includes several functions to generate simple geometric objects.  "
"The API reference for these functions is on this page.  For additional "
"details see :ref:`ref_geometric_example` example."
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
msgid ":py:obj:`Arrow <pyvista.Arrow>`\\ \\(\\[start\\, direction\\, tip\\_length\\, ...\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
msgid ":py:obj:`Box <pyvista.Box>`\\ \\(\\[bounds\\, level\\, quads\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
msgid ":py:obj:`Circle <pyvista.Circle>`\\ \\(\\[radius\\, resolution\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
msgid ""
":py:obj:`CircularArc <pyvista.CircularArc>`\\ \\(pointa\\, pointb\\, "
"center\\[\\, ...\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
msgid ""
":py:obj:`CircularArcFromNormal <pyvista.CircularArcFromNormal>`\\ "
"\\(center\\[\\, resolution\\, ...\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
msgid ""
":py:obj:`Cone <pyvista.Cone>`\\ \\(\\[center\\, direction\\, height\\, "
"radius\\, ...\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
msgid ""
":py:obj:`Cube <pyvista.Cube>`\\ \\(\\[center\\, x\\_length\\, y\\_length\\, "
"z\\_length\\, ...\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
msgid ""
":py:obj:`Cylinder <pyvista.Cylinder>`\\ \\(\\[center\\, direction\\, "
"radius\\, ...\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
msgid ""
":py:obj:`CylinderStructured <pyvista.CylinderStructured>`\\ \\(\\[radius\\, "
"height\\, center\\, ...\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
msgid ""
":py:obj:`Disc <pyvista.Disc>`\\ \\(\\[center\\, inner\\, outer\\, normal\\, "
"r\\_res\\, ...\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
msgid ":py:obj:`Dodecahedron <pyvista.Dodecahedron>`\\ \\(\\[radius\\, center\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
msgid ":py:obj:`Icosahedron <pyvista.Icosahedron>`\\ \\(\\[radius\\, center\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
msgid ":py:obj:`Line <pyvista.Line>`\\ \\(\\[pointa\\, pointb\\, resolution\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
msgid ":py:obj:`MultipleLines <pyvista.MultipleLines>`\\ \\(\\[points\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
msgid ""
":py:obj:`Tube <pyvista.Tube>`\\ \\(\\[pointa\\, pointb\\, resolution\\, "
"radius\\, ...\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
msgid ":py:obj:`Octahedron <pyvista.Octahedron>`\\ \\(\\[radius\\, center\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
msgid ""
":py:obj:`Plane <pyvista.Plane>`\\ \\(\\[center\\, direction\\, i\\_size\\, "
"j\\_size\\, ...\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
msgid ""
":py:obj:`PlatonicSolid <pyvista.PlatonicSolid>`\\ \\(\\[kind\\, radius\\, "
"center\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
msgid ""
":py:obj:`Polygon <pyvista.Polygon>`\\ \\(\\[center\\, radius\\, normal\\, "
"n\\_sides\\, fill\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
msgid ":py:obj:`Pyramid <pyvista.Pyramid>`\\ \\(\\[points\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
msgid ":py:obj:`Rectangle <pyvista.Rectangle>`\\ \\(\\[points\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
msgid ":py:obj:`Sphere <pyvista.Sphere>`\\ \\(\\[radius\\, center\\, direction\\, ...\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
msgid ":py:obj:`Spline <pyvista.Spline>`\\ \\(points\\[\\, n\\_points\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
msgid ""
":py:obj:`Superquadric <pyvista.Superquadric>`\\ \\(\\[center\\, scale\\, "
"size\\, ...\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
msgid ":py:obj:`Tetrahedron <pyvista.Tetrahedron>`\\ \\(\\[radius\\, center\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
msgid ":py:obj:`Text3D <pyvista.Text3D>`\\ \\(string\\[\\, depth\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
msgid ":py:obj:`Triangle <pyvista.Triangle>`\\ \\(\\[points\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/geometric.rst:39:<autosummary>:1
msgid ""
":py:obj:`Wavelet <pyvista.Wavelet>`\\ \\(\\[extent\\, center\\, maximum\\, "
"x\\_freq\\, ...\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/index.rst:4
msgid "Utilities"
msgstr ""

#: ../../pyvista/doc/api/utilities/index.rst:6
msgid ""
"PyVista includes several functions to simplify creating basic geometric "
"objects, interfacing with VTK objects, and reading or writing files."
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:2
msgid "Parametric Objects"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:4
msgid ""
"These objects represent surfaces that are parametrised by a set of "
"independent variables. Some of these are impossible to represent (correctly "
"or at all) using implicit functions, such as the Mobius strip."
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:8
msgid ""
"The following functions can be used to create parametric surfaces.  To see "
"additional examples, see :ref:`ref_parametric_example`."
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:37:<autosummary>:1
msgid ""
":py:obj:`ParametricBohemianDome <pyvista.ParametricBohemianDome>`\\ "
"\\(\\[a\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:37:<autosummary>:1
msgid ":py:obj:`ParametricBour <pyvista.ParametricBour>`\\ \\(\\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:37:<autosummary>:1
msgid ":py:obj:`ParametricBoy <pyvista.ParametricBoy>`\\ \\(\\[zscale\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:37:<autosummary>:1
msgid ":py:obj:`ParametricDini <pyvista.ParametricDini>`\\ \\(\\[a\\, b\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:37:<autosummary>:1
msgid ""
":py:obj:`ParametricCatalanMinimal <pyvista.ParametricCatalanMinimal>`\\ "
"\\(\\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:37:<autosummary>:1
msgid ""
":py:obj:`ParametricConicSpiral <pyvista.ParametricConicSpiral>`\\ \\(\\[a\\,"
" b\\, c\\, n\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:37:<autosummary>:1
msgid ":py:obj:`ParametricCrossCap <pyvista.ParametricCrossCap>`\\ \\(\\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:37:<autosummary>:1
msgid ""
":py:obj:`ParametricEllipsoid <pyvista.ParametricEllipsoid>`\\ "
"\\(\\[xradius\\, yradius\\, zradius\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:37:<autosummary>:1
msgid ":py:obj:`ParametricEnneper <pyvista.ParametricEnneper>`\\ \\(\\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:37:<autosummary>:1
msgid ""
":py:obj:`ParametricFigure8Klein <pyvista.ParametricFigure8Klein>`\\ "
"\\(\\[radius\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:37:<autosummary>:1
msgid ":py:obj:`ParametricHenneberg <pyvista.ParametricHenneberg>`\\ \\(\\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:37:<autosummary>:1
msgid ":py:obj:`ParametricKlein <pyvista.ParametricKlein>`\\ \\(\\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:37:<autosummary>:1
msgid ":py:obj:`ParametricKuen <pyvista.ParametricKuen>`\\ \\(\\[deltav0\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:37:<autosummary>:1
msgid ":py:obj:`ParametricMobius <pyvista.ParametricMobius>`\\ \\(\\[radius\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:37:<autosummary>:1
msgid ""
":py:obj:`ParametricPluckerConoid <pyvista.ParametricPluckerConoid>`\\ "
"\\(\\[n\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:37:<autosummary>:1
msgid ""
":py:obj:`ParametricPseudosphere <pyvista.ParametricPseudosphere>`\\ "
"\\(\\*\\*kwargs\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:37:<autosummary>:1
msgid ""
":py:obj:`ParametricRandomHills <pyvista.ParametricRandomHills>`\\ "
"\\(\\[numberofhills\\, ...\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:37:<autosummary>:1
msgid ":py:obj:`ParametricRoman <pyvista.ParametricRoman>`\\ \\(\\[radius\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:37:<autosummary>:1
msgid ""
":py:obj:`ParametricSuperEllipsoid <pyvista.ParametricSuperEllipsoid>`\\ "
"\\(\\[xradius\\, yradius\\, ...\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:37:<autosummary>:1
msgid ""
":py:obj:`ParametricSuperToroid <pyvista.ParametricSuperToroid>`\\ "
"\\(\\[ringradius\\, ...\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:37:<autosummary>:1
msgid ""
":py:obj:`ParametricTorus <pyvista.ParametricTorus>`\\ \\(\\[ringradius\\, "
"crosssectionradius\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:38
msgid "These functions support building parametric surfaces:"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:44:<autosummary>:1
msgid ""
":py:obj:`parametric_keywords <pyvista.parametric_keywords>`\\ "
"\\(parametric\\_function\\[\\, ...\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/parametric.rst:44:<autosummary>:1
msgid ""
":py:obj:`surface_from_para <pyvista.surface_from_para>`\\ "
"\\(parametric\\_function\\[\\, ...\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:2
msgid "General Utilities"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:13:<autosummary>:1
msgid ""
":py:obj:`utilities.VtkErrorCatcher <pyvista.utilities.VtkErrorCatcher>`\\ "
"\\(\\[raise\\_errors\\, ...\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:13:<autosummary>:1
msgid ""
":py:obj:`utilities.set_error_output_file "
"<pyvista.utilities.set_error_output_file>`\\ \\(filename\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:13:<autosummary>:1
msgid ""
":py:obj:`utilities.is_inside_bounds <pyvista.utilities.is_inside_bounds>`\\ "
"\\(point\\, bounds\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:13:<autosummary>:1
msgid ""
":py:obj:`utilities.axis_rotation <pyvista.utilities.axis_rotation>`\\ "
"\\(points\\, angle\\[\\, ...\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:15
msgid "Object Conversions"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:28:<autosummary>:1
msgid ":py:obj:`wrap <pyvista.wrap>`\\ \\(dataset\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:28:<autosummary>:1
msgid ":py:obj:`is_pyvista_dataset <pyvista.is_pyvista_dataset>`\\ \\(obj\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:28:<autosummary>:1
msgid ":py:obj:`image_to_texture <pyvista.image_to_texture>`\\ \\(image\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:28:<autosummary>:1
msgid ":py:obj:`numpy_to_texture <pyvista.numpy_to_texture>`\\ \\(image\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:28:<autosummary>:1
msgid ":py:obj:`array_from_vtkmatrix <pyvista.array_from_vtkmatrix>`\\ \\(matrix\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:28:<autosummary>:1
msgid ":py:obj:`vtkmatrix_from_array <pyvista.vtkmatrix_from_array>`\\ \\(array\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:28:<autosummary>:1
msgid ":py:obj:`cubemap <pyvista.cubemap>`\\ \\(\\[path\\, prefix\\, ext\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:28:<autosummary>:1
msgid ""
":py:obj:`cubemap_from_filenames <pyvista.cubemap_from_filenames>`\\ "
"\\(image\\_paths\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:30
msgid "File IO"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:40:<autosummary>:1
msgid ":py:obj:`read <pyvista.read>`\\ \\(filename\\[\\, attrs\\, force\\_ext\\, ...\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:40:<autosummary>:1
msgid ""
":py:obj:`read_exodus <pyvista.read_exodus>`\\ \\(filename\\[\\, "
"animate\\_mode\\_shapes\\, ...\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:40:<autosummary>:1
msgid ""
":py:obj:`read_texture <pyvista.read_texture>`\\ \\(filename\\[\\, attrs\\, "
"progress\\_bar\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:40:<autosummary>:1
msgid ":py:obj:`read_legacy <pyvista.read_legacy>`\\ \\(filename\\[\\, progress\\_bar\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:40:<autosummary>:1
msgid ""
":py:obj:`save_meshio <pyvista.save_meshio>`\\ \\(filename\\, mesh\\[\\, "
"file\\_format\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:42
msgid "Mesh Creation"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:51:<autosummary>:1
msgid ""
":py:obj:`lines_from_points <pyvista.lines_from_points>`\\ \\(points\\[\\, "
"close\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:51:<autosummary>:1
msgid ""
":py:obj:`vtk_points <pyvista.vtk_points>`\\ \\(points\\[\\, deep\\, "
"force\\_float\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:51:<autosummary>:1
msgid ":py:obj:`vector_poly_data <pyvista.vector_poly_data>`\\ \\(orig\\, vec\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:51:<autosummary>:1
msgid ""
":py:obj:`fit_plane_to_points <pyvista.fit_plane_to_points>`\\ "
"\\(points\\[\\, return\\_meta\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:53
msgid "Array Access"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:63:<autosummary>:1
msgid ""
":py:obj:`get_array <pyvista.get_array>`\\ \\(mesh\\, name\\[\\, "
"preference\\, err\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:63:<autosummary>:1
msgid ""
":py:obj:`convert_array <pyvista.convert_array>`\\ \\(arr\\[\\, name\\, "
"deep\\, array\\_type\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:63:<autosummary>:1
msgid ":py:obj:`point_array <pyvista.point_array>`\\ \\(obj\\, name\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:63:<autosummary>:1
msgid ":py:obj:`cell_array <pyvista.cell_array>`\\ \\(obj\\, name\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:63:<autosummary>:1
msgid ":py:obj:`field_array <pyvista.field_array>`\\ \\(obj\\, name\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:65
msgid "Image Comparison and Regression"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:71:<autosummary>:1
msgid ""
":py:obj:`compare_images <pyvista.compare_images>`\\ \\(im1\\, im2\\[\\, "
"threshold\\, use\\_vtk\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:78:<autosummary>:1
msgid ":py:obj:`Color <pyvista.Color>`\\ \\(\\[color\\, opacity\\, default\\_color\\, ...\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:84:<autosummary>:1
msgid ":py:obj:`color_like <pyvista.color_like>`\\"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:84:<autosummary>:1
msgid ":py:obj:`start_xvfb <pyvista.start_xvfb>`\\ \\(\\[wait\\, window\\_size\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:90:<autosummary>:1
msgid ""
":py:obj:`Report <pyvista.Report>`\\ \\(\\[additional\\, ncol\\, "
"text\\_width\\, sort\\, gpu\\]\\)"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:92
msgid "VTK Version Information"
msgstr ""

#: ../../pyvista/doc/api/utilities/utilities.rst:93
msgid ""
"The PyVista library is heavily dependent on VTK and provides an easy way of "
"getting the version of VTK in your environment."
msgstr ""

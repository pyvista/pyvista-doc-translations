
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/01-filter/extract-cells-inside-surface.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_01-filter_extract-cells-inside-surface.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_01-filter_extract-cells-inside-surface.py:


Extract Cells Inside Surface
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Extract the cells in a mesh that exist inside or outside a closed surface of
another mesh


.. GENERATED FROM PYTHON SOURCE LINES 10-30

.. code-block:: default


    # sphinx_gallery_thumbnail_number = 2
    import pyvista as pv
    from pyvista import examples

    mesh = examples.download_cow()

    cpos = [(13.0, 7.6, -13.85), (0.44, -0.4, -0.37), (-0.28, 0.9, 0.3)]

    dargs = dict(show_edges=True)
    # Rotate the mesh to have a second mesh
    rot = mesh.copy()
    rot.rotate_y(90)

    p = pv.Plotter()
    p.add_mesh(mesh, color="Crimson", **dargs)
    p.add_mesh(rot, color="mintcream", opacity=0.35, **dargs)
    p.camera_position = cpos
    p.show()




.. image:: /examples/01-filter/images/sphx_glr_extract-cells-inside-surface_001.png
    :alt: extract cells inside surface
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [(13.0, 7.6, -13.85),
     (0.44, -0.4, -0.37),
     (-0.2830738875949229, 0.9098803529836806, 0.3032934509945602)]



.. GENERATED FROM PYTHON SOURCE LINES 31-32

Mark points inside with 1 and outside with a 0

.. GENERATED FROM PYTHON SOURCE LINES 32-35

.. code-block:: default

    select = mesh.select_enclosed_points(rot)

    select





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>
    <table>
    <tr><th>PolyData</th><th>Information</th></tr>
    <tr><td>N Cells</td><td>3263</td></tr>
    <tr><td>N Points</td><td>2903</td></tr>
    <tr><td>X Bounds</td><td>-4.446e+00, 5.998e+00</td></tr>
    <tr><td>Y Bounds</td><td>-3.637e+00, 2.760e+00</td></tr>
    <tr><td>Z Bounds</td><td>-1.701e+00, 1.701e+00</td></tr>
    <tr><td>N Arrays</td><td>1</td></tr>
    </table>

    </td><td>
    <table>
    <tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>
    <tr><td><b>SelectedPoints</b></td><td>Points</td><td>uint8</td><td>1</td><td>0.000e+00</td><td>1.000e+00</td></tr>
    </table>

    </td></tr> </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 36-38

Extract two meshes, one completely inside and one completely outside the
enclosing surface.

.. GENERATED FROM PYTHON SOURCE LINES 38-42

.. code-block:: default


    inside = select.threshold(0.5)
    outside = select.threshold(0.5, invert=True)








.. GENERATED FROM PYTHON SOURCE LINES 43-44

display the results

.. GENERATED FROM PYTHON SOURCE LINES 44-52

.. code-block:: default


    p = pv.Plotter()
    p.add_mesh(outside, color="Crimson", **dargs)
    p.add_mesh(inside, color="green", **dargs)
    p.add_mesh(rot, color="mintcream", opacity=0.35, **dargs)

    p.camera_position = cpos
    p.show()



.. image:: /examples/01-filter/images/sphx_glr_extract-cells-inside-surface_002.png
    :alt: extract cells inside surface
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [(13.0, 7.6, -13.85),
     (0.44, -0.4, -0.37),
     (-0.2830738875949229, 0.9098803529836806, 0.3032934509945602)]




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.653 seconds)


.. _sphx_glr_download_examples_01-filter_extract-cells-inside-surface.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: extract-cells-inside-surface.py <extract-cells-inside-surface.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: extract-cells-inside-surface.ipynb <extract-cells-inside-surface.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_


.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/01-filter/extrude-rotate.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_01-filter_extrude-rotate.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_01-filter_extrude-rotate.py:


Extrude Rotation
~~~~~~~~~~~~~~~~
Sweep polygonal data creating "skirt" from free edges and lines, and
lines from vertices.

This takes polygonal data as input and generates polygonal data on
output. The input dataset is swept around the z-axis to create
new polygonal primitives. These primitives form a "skirt" or
swept surface. For example, sweeping a line results in a
cylindrical shell, and sweeping a circle creates a torus.


.. GENERATED FROM PYTHON SOURCE LINES 14-22

.. code-block:: default

    import pyvista

    # create a line and rotate it about the Z-axis
    resolution = 10
    line = pyvista.Line(pointa=(0, 0, 0), pointb=(1, 0, 0), resolution=2)
    poly = line.extrude_rotate(resolution=resolution)
    poly






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>
    <table>
    <tr><th>PolyData</th><th>Information</th></tr>
    <tr><td>N Cells</td><td>2</td></tr>
    <tr><td>N Points</td><td>33</td></tr>
    <tr><td>X Bounds</td><td>-1.000e+00, 1.000e+00</td></tr>
    <tr><td>Y Bounds</td><td>-9.511e-01, 9.511e-01</td></tr>
    <tr><td>Z Bounds</td><td>0.000e+00, 0.000e+00</td></tr>
    <tr><td>N Arrays</td><td>2</td></tr>
    </table>

    </td><td>
    <table>
    <tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>
    <tr><td><b>Texture Coordinates</b></td><td>Points</td><td>float32</td><td>2</td><td>0.000e+00</td><td>1.000e+00</td></tr>
    <tr><td>Distance</td><td>Points</td><td>float64</td><td>1</td><td>0.000e+00</td><td>1.000e+00</td></tr>
    </table>

    </td></tr> </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 23-25

Plot the extruded line
~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 25-47

.. code-block:: default


    plotter = pyvista.Plotter(shape=(2, 1))
    plotter.subplot(0, 0)
    plotter.add_text("Line", font_size=24)
    plotter.add_mesh(line, color="tan", show_edges=True)
    plotter.add_mesh(
        pyvista.PolyData(line.points),
        color="red",
        point_size=10,
        render_points_as_spheres=True,
    )
    plotter.subplot(1, 0)
    plotter.add_text("Extrude Rotated Line", font_size=24)
    plotter.add_mesh(poly, color="tan", show_edges=True)
    plotter.add_mesh(
        pyvista.PolyData(poly.points),
        color="red",
        point_size=10,
        render_points_as_spheres=True,
    )

    plotter.show(cpos="xy")



.. image:: /examples/01-filter/images/sphx_glr_extrude-rotate_001.png
    :alt: extrude rotate
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [(0.0, 0.0, 5.332062506502935),
     (0.0, 0.0, 0.0),
     (0.0, 1.0, 0.0)]




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.722 seconds)


.. _sphx_glr_download_examples_01-filter_extrude-rotate.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: extrude-rotate.py <extrude-rotate.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: extrude-rotate.ipynb <extrude-rotate.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_


.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/00-load/wrap-trimesh.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_00-load_wrap-trimesh.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_00-load_wrap-trimesh.py:


.. _ref_wrap_trimesh:

Wrapping Other Objects
~~~~~~~~~~~~~~~~~~~~~~
You can wrap several other object types using pyvista including:

- `numpy` arrays
- `trimesh.Trimesh` meshes
- VTK objects

This allows for the "best of both worlds" programming special to
Python due to its modularity.  If there's some limitation of pyvista
(or trimesh), then you can adapt your scripts to use the best features
of more than one module.


.. GENERATED FROM PYTHON SOURCE LINES 18-20

.. code-block:: default

    import pyvista as pv








.. GENERATED FROM PYTHON SOURCE LINES 21-22

Wrap a point cloud composed of random points from numpy

.. GENERATED FROM PYTHON SOURCE LINES 22-28

.. code-block:: default

    import numpy as np
    points = np.random.random((30, 3))
    cloud = pv.wrap(points)
    pv.plot(cloud, scalars=points[:, 2], render_points_as_spheres=True, point_size=50,
            opacity=points[:, 0], cpos='xz')




.. image:: /examples/00-load/images/sphx_glr_wrap-trimesh_001.png
    :alt: wrap trimesh
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [(0.5153836499749512, -2.6102524157815035, 0.5052297002605484),
     (0.5153836499749512, 0.503386831905676, 0.5052297002605484),
     (0.0, 0.0, 1.0)]



.. GENERATED FROM PYTHON SOURCE LINES 29-30

Wrap an instance of Trimesh 

.. GENERATED FROM PYTHON SOURCE LINES 30-37

.. code-block:: default

    import trimesh
    points = [[0, 0, 0], [0, 0, 1], [0, 1, 0]]
    faces = [[0, 1, 2]]
    tmesh = trimesh.Trimesh(points, faces=faces, process=False)
    mesh = pv.wrap(tmesh)
    print(mesh)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    PolyData (0x7f6c4bed7d68)
      N Cells:      1
      N Points:     3
      X Bounds:     0.000e+00, 0.000e+00
      Y Bounds:     0.000e+00, 1.000e+00
      Z Bounds:     0.000e+00, 1.000e+00
      N Arrays:     0





.. GENERATED FROM PYTHON SOURCE LINES 38-39

Wrap an instance of vtk.vtkPolyData

.. GENERATED FROM PYTHON SOURCE LINES 39-52

.. code-block:: default


    import vtk
    points = vtk.vtkPoints()
    p = [1.0, 2.0, 3.0]
    vertices = vtk.vtkCellArray()
    pid = points.InsertNextPoint(p)
    vertices.InsertNextCell(1)
    vertices.InsertCellPoint(pid)
    point = vtk.vtkPolyData()
    point.SetPoints(points)
    point.SetVerts(vertices)
    mesh = pv.wrap(point)
    print(mesh)




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    PolyData (0x7f6c4bed7fa8)
      N Cells:      1
      N Points:     1
      X Bounds:     1.000e+00, 1.000e+00
      Y Bounds:     2.000e+00, 2.000e+00
      Z Bounds:     3.000e+00, 3.000e+00
      N Arrays:     0






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.777 seconds)


.. _sphx_glr_download_examples_00-load_wrap-trimesh.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: wrap-trimesh.py <wrap-trimesh.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: wrap-trimesh.ipynb <wrap-trimesh.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

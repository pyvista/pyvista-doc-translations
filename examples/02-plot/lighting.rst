.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_02-plot_lighting.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_examples_02-plot_lighting.py:


Lighting Controls
~~~~~~~~~~~~~~~~~

Control aspects of the rendered mesh's lighting such as Ambient, Diffuse,
and Specular. These options only work if the ``lighting`` argument to
``add_mesh`` is ``True`` (it's true by default).

You can turn off all lighting by passing ``lighting=False`` to ``add_mesh``.


.. code-block:: default

    # sphinx_gallery_thumbnail_number = 4
    import pyvista as pv
    from pyvista import examples

    mesh = examples.download_st_helens().warp_by_scalar()

    cpos = [(575848., 5128459., 22289.),
            (562835.0, 5114981.5, 2294.5),
            (-0.5, -0.5, 0.7)]








First, lets take a look at the mesh with default lighting conditions


.. code-block:: default

    mesh.plot(cpos=cpos, show_scalar_bar=False)




.. image:: /examples/02-plot/images/sphx_glr_lighting_001.png
    :alt: lighting
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [(575848.0, 5128459.0, 22289.0),
     (562835.0, 5114981.5, 2294.5),
     (-0.502518907629606, -0.502518907629606, 0.7035264706814484)]



What about with no lighting


.. code-block:: default

    mesh.plot(lighting=False, cpos=cpos, show_scalar_bar=False)




.. image:: /examples/02-plot/images/sphx_glr_lighting_002.png
    :alt: lighting
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [(575848.0, 5128459.0, 22289.0),
     (562835.0, 5114981.5, 2294.5),
     (-0.502518907629606, -0.502518907629606, 0.7035264706814484)]



Demonstration of the specular property


.. code-block:: default

    p = pv.Plotter(shape=(1,2), window_size=[1500, 500])

    p.subplot(0,0)
    p.add_mesh(mesh, show_scalar_bar=False)
    p.add_text('No Specular')

    p.subplot(0,1)
    s = 1.0
    p.add_mesh(mesh, specular=s, show_scalar_bar=False)
    p.add_text('Specular of {}'.format(s))

    p.link_views()
    p.view_isometric()
    p.show(cpos=cpos)




.. image:: /examples/02-plot/images/sphx_glr_lighting_003.png
    :alt: lighting
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [(575848.0, 5128459.0, 22289.0),
     (562835.0, 5114981.5, 2294.5),
     (-0.502518907629606, -0.502518907629606, 0.7035264706814484)]



Just specular


.. code-block:: default

    mesh.plot(specular=0.5, cpos=cpos, show_scalar_bar=False)




.. image:: /examples/02-plot/images/sphx_glr_lighting_004.png
    :alt: lighting
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [(575848.0, 5128459.0, 22289.0),
     (562835.0, 5114981.5, 2294.5),
     (-0.502518907629606, -0.502518907629606, 0.7035264706814484)]



Specular power


.. code-block:: default

    mesh.plot(specular=0.5, specular_power=15,
              cpos=cpos, show_scalar_bar=False)




.. image:: /examples/02-plot/images/sphx_glr_lighting_005.png
    :alt: lighting
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [(575848.0, 5128459.0, 22289.0),
     (562835.0, 5114981.5, 2294.5),
     (-0.502518907629606, -0.502518907629606, 0.7035264706814484)]



Demonstration of all three in use


.. code-block:: default

    mesh.plot(diffuse=0.5, specular=0.5, ambient=0.5,
              cpos=cpos, show_scalar_bar=False)



.. image:: /examples/02-plot/images/sphx_glr_lighting_006.png
    :alt: lighting
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [(575848.0, 5128459.0, 22289.0),
     (562835.0, 5114981.5, 2294.5),
     (-0.502518907629606, -0.502518907629606, 0.7035264706814484)]




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  18.444 seconds)


.. _sphx_glr_download_examples_02-plot_lighting.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: lighting.py <lighting.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: lighting.ipynb <lighting.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

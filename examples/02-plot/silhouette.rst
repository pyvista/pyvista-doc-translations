
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/02-plot/silhouette.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_02-plot_silhouette.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_02-plot_silhouette.py:


Silhouette Highlight
~~~~~~~~~~~~~~~~~~~~

Extract a subset of the edges of a polygonal mesh to generate an outline
(silhouette) of a mesh.

.. GENERATED FROM PYTHON SOURCE LINES 8-12

.. code-block:: default


    import pyvista
    from pyvista import examples








.. GENERATED FROM PYTHON SOURCE LINES 13-14

Prepare a triangulated ``PolyData``

.. GENERATED FROM PYTHON SOURCE LINES 14-16

.. code-block:: default

    bunny = examples.download_bunny()








.. GENERATED FROM PYTHON SOURCE LINES 17-18

Now we can display the silhouette of the mesh and compare the result:

.. GENERATED FROM PYTHON SOURCE LINES 18-30

.. code-block:: default

    plotter = pyvista.Plotter(shape=(1, 2))
    plotter.subplot(0, 0)
    plotter.add_mesh(bunny, color='tan', silhouette=True)
    plotter.add_text("Silhouette")
    plotter.view_xy()
    plotter.subplot(0, 1)
    plotter.add_mesh(bunny, color='tan')
    plotter.add_text("No silhouette")
    plotter.view_xy()
    plotter.show()





.. image:: /examples/02-plot/images/sphx_glr_silhouette_001.png
    :alt: silhouette
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [(-0.01684039831161499, 0.11015420407056808, 0.7099990603379916),
     (-0.01684039831161499, 0.11015420407056808, -0.0015369504690170288),
     (0.0, 1.0, 0.0)]



.. GENERATED FROM PYTHON SOURCE LINES 31-34

Maybe the default parameters are not enough to really notice the silhouette.
But by using a ``dict``, it is possible to modify the properties of the
outline. For example, color and width could be specified like so:

.. GENERATED FROM PYTHON SOURCE LINES 34-44

.. code-block:: default

    plotter = pyvista.Plotter()
    silhouette = dict(
        color='red',
        line_width=8.0,
    )
    plotter.add_mesh(bunny, silhouette=silhouette)
    plotter.view_xy()
    plotter.show()





.. image:: /examples/02-plot/images/sphx_glr_silhouette_002.png
    :alt: silhouette
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [(-0.016914665699005127, 0.11015420407056808, 0.4820798811243154),
     (-0.016914665699005127, 0.11015420407056808, -0.0015369504690170288),
     (0.0, 1.0, 0.0)]



.. GENERATED FROM PYTHON SOURCE LINES 45-47

By default, PyVista uses a pretty aggressive decimation level but we might
want to disable it. It is also possible to display sharp edges:

.. GENERATED FROM PYTHON SOURCE LINES 47-75

.. code-block:: default

    cylinder = pyvista.Cylinder(center=(0, 0.04, 0), direction=(0, 1, 0),
                                radius=0.15, height=0.03).triangulate()

    plotter = pyvista.Plotter(shape=(1, 3))
    plotter.subplot(0, 0)
    plotter.add_mesh(cylinder, color='tan', smooth_shading=True,
                     silhouette=dict(
                        color='red',
                        line_width=8.0,
                        decimate=None,
                        feature_angle=True))
    plotter.add_text("Silhouette with sharp edges")
    plotter.view_isometric()
    plotter.subplot(0, 1)
    plotter.add_mesh(cylinder, color='tan', smooth_shading=True,
                     silhouette=dict(
                        color='red',
                        line_width=8.0,
                        decimate=None))
    plotter.add_text("Silhouette without sharp edges")
    plotter.view_isometric()
    plotter.subplot(0, 2)
    plotter.add_mesh(cylinder, color='tan', smooth_shading=True)
    plotter.add_text("No silhouette")
    plotter.view_isometric()
    plotter.show()





.. image:: /examples/02-plot/images/sphx_glr_silhouette_003.png
    :alt: silhouette
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [(1.037785668643727, 1.07778566868098, 1.037785668643727),
     (0.0, 0.0400000000372529, 0.0),
     (0.0, 0.0, 1.0)]



.. GENERATED FROM PYTHON SOURCE LINES 76-77

Here is another example:

.. GENERATED FROM PYTHON SOURCE LINES 77-92

.. code-block:: default

    dragon = examples.download_dragon()
    plotter = pyvista.Plotter()
    plotter.set_background('black', 'blue')
    plotter.add_mesh(dragon, color="green", specular=1, smooth_shading=True,
                     silhouette=dict(line_width=8, color='white'))

    plotter.add_mesh(cylinder, color='tan', smooth_shading=True,
                     silhouette=dict(decimate=None, feature_angle=True,
                                     line_width=8, color='white'))
    plotter.camera_position = [
        (-0.2936731887752889, 0.2389060430625446, 0.35138839367034236),
        (-0.005878899246454239, 0.12495124898850918, -0.004603400826454163),
        (0.34348225747312017, 0.8567703221182346, -0.38466160965007384)
    ]
    plotter.show()



.. image:: /examples/02-plot/images/sphx_glr_silhouette_004.png
    :alt: silhouette
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [(-0.2936731887752889, 0.2389060430625446, 0.35138839367034236),
     (-0.005878899246454239, 0.12495124898850918, -0.004603400826454163),
     (0.3434822574731202, 0.8567703221182347, -0.3846616096500739)]




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  16.106 seconds)


.. _sphx_glr_download_examples_02-plot_silhouette.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: silhouette.py <silhouette.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: silhouette.ipynb <silhouette.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

name: pyvista-doc-auto-update
on:
  schedule:
    - cron:  '0 0 * * *'
  pull_request:
    branches:
      - master
jobs:
  script:
    runs-on: ubuntu-latest
    steps:
    - name: Get Job URL
      uses: Tiryoh/gha-jobid-action@v0
      id: jobs
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        job_name: script
    - name: checkout with submodule
      uses: actions/checkout@v2
      with:
        submodules: true
        token: ${{ secrets.PERSONAL_ACCESSTOKEN }}
    - name: Setup SSH
      uses: MrSquaare/ssh-setup-action@v1
      with:
        host: github.com
        private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    - name: install
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends python3-setuptools
        sudo apt-get install -y --no-install-recommends libgl1-mesa-dev xvfb ffmpeg
        (cd pyvista; git fetch origin; git checkout master; git reset --hard origin/master; git branch -a; pip3 install -r ./requirements_docs.txt)
        pip3 install -U pip setuptools
        pip3 install -r ./requirements.txt
    - name: update
      env:
        SPHINXINTL_TRANSIFEX_USERNAME: api
        SPHINXINTL_TRANSIFEX_PROJECT_NAME: pyvista-doc
        TX_TOKEN: ${{ secrets.TX_TOKEN }}
      run: |
        export PYVISTA_VIRTUAL_DISPLAY=True
        export PYVISTA_OFF_SCREEN=true
        export PYVISTA_USE_PANEL=true
        export PYVISTA_PLOT_THEME=document
        export PYVISTA_AUTO_CLOSE=false
        git clone --depth 1 git://github.com/pyvista/gl-ci-helpers.git
        source ./gl-ci-helpers/travis/setup_headless_display.sh
        rm -rf gl-ci-helpers
        sh ./locale/update.sh
        rm -Rf examples
        mv ./pyvista/docs/examples .
    - name: git_config
      if: contains(github.ref, 'master') == false
      run: |
        git config --global user.email $GITHUB_REPOSITORY
        git config --global user.name $GITHUB_REPOSITORY
    - name: commit
      if: contains(github.ref, 'master') == false
      env:
        JOB_ID: ${{ steps.jobs.outputs.job_id }}
        HTML_URL: ${{ steps.jobs.outputs.html_url }}
      run: |
        git add .
        git commit --allow-empty -m "[skip ci] $JOB_ID
        $HTML_URL"
        git remote -v
        git remote add github git@github.com:$GITHUB_REPOSITORY.git
        git push origin HEAD
